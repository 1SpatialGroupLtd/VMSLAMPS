#!/usr/bin/python 
#Filename: lamps_source_html.py
#
# Python Script to create html index to LAMPS source code
#
# Created PGH 2019-04-12
# Modified PGH 2019-04-13 (better timestamps)
# Modified PGH 2022-11-11 (merge missing source files from Public_root)


import os, string, re, sys, time, datetime

def main():
	"Script to create html index for Laser-Scan LAMPS source code"
	outhtmlfilename = "../lamps_source_index.html"
	try:
		outhtmlfile = open(outhtmlfilename, 'w')  
	except IOError:
		print("Can\'t open output html file for writing. "+outhtmlfilename)
		sys.exit(0)
	outhtmlfile.write("<!DOCTYPE HTML PUBLIC ""-//W3C//DTD HTML 3.2 Final//EN"">\n")
	outhtmlfile.write("<HTML><HEAD><TITLE>VMS LAMPS Software Source index</TITLE>\n")
	outhtmlfile.write("<LINK rel=""stylesheet"" type=""text/css"" href=""lamps.css""></HEAD>\n")
	outhtmlfile.write("<H1>VMS LAMPS Software Source Index</H1>\n")
	outhtmlfile.write("This is an automatically generated index to the human-readable source code and build/test files of the VMS LAMPS digital mapping software suite.\n<P>\n")	
	outhtmlfile.write("These were extracted en-mass from the original Laser-Scan VMS system by Paul Hardy aided by 1Spatial staff in 2016-2017.\n")
	outhtmlfile.write("They were disentangled and separated from binary and customer files, then pulled from VMS to Windows by Paul Hardy during 2018-2019.\n")
	outhtmlfile.write("After sanity checking by Tim Bevan, some missing source files were merged from LSL$PUBLIC_ROOT by Paul Hardy during 2022.\n<P>\n")
	outhtmlfile.write("See also the <A HREF=""lamps_doc_index.html"">index to LAMPS documentation sources</A>, and the <A HREF=""index.html"">index overview</A>.\n")
# 
	rootDir = '../../LAMPS_SRC'
	for dirName, subdirList, fileList in os.walk(rootDir):
#		print('Found directory: %s' % dirName)
		level = dirName.count(chr(92))
#		print('Level = %d' % level)
		if level==1:
			package = dirName.rsplit(chr(92),1)[1]
			print("LAMPS software package " + package)
			outhtmlfile.write("<H2>LAMPS software package " + package + "</H2>\n")
		elif level==2:
			component = dirName.rsplit(chr(92),1)[1]
			print("LAMPS software package " + package + " component " + component)
			outhtmlfile.write("<H3>LAMPS software package " + package + " component " + component + "</H3>\n")
		elif level>2:
			subfolder = dirName.rsplit(chr(92),1)[1]
			print("LAMPS software package " + package + " component " + component + ", subfolder " + subfolder)
			outhtmlfile.write("<H4>Subfolder " + subfolder + "</H4>\n")
		identified=0
		for fname in fileList:
			fullpath=dirName+'\\'+fname
#			print(fullpath)
			modified = os.path.getmtime(fullpath)
			modtime = time.strftime("%d-%b-%Y",time.localtime(modified))
			relpath = fullpath.replace('../../', '../')
			if fname.endswith( ('.SRC', '.F', '.FOR', '.MAR', '.MAC', '.C', 'CMN', '.PAR', '.BPL', '.BCPL_SRC', '.H', '.HDR', '.FRM', '.FLG', '.HLP', 'PAS', '.STR', '.UIL', '.UIM') ):
#				print('\t%s is a source file, modified %s' % (fname, modtime))
				outhtmlfile.write(fname + ' is a source file (<A href="' + relpath + '">download</A>),  modified ' + modtime + '<BR>\n')
				identified=1
			if fname.endswith( ('.OPT', '.MAPID', '.MAP', '.MES', '.CLD', 'CDL', 'COM', '.TREE', '.LNK', '.FAC', '.IDE', '.PAT', '.IIF', '.FDL', '.EDT', '.ALL') ):
#				print('\t%s is a build file, modified %s' % (fname, modtime))
				outhtmlfile.write(fname + ' is a build file (<A href="' + relpath + '">download</A>),  modified ' + modtime + '<BR>\n')
				identified=1
			if fname.endswith( ('.UPD', '.RNO', '.REV', '.NOTES', '.MEM', '.TXT', '.LIS', '.DOC', '.PS', '.1ST', '.DESCR', '.README', '.BUG') ):
#				print('\t%s is a text file, modified %s' % (fname, modtime))
				outhtmlfile.write(fname + ' is a text file (<A href="' + relpath + '">download</A>),  modified ' + modtime + '<BR>\n')
				identified=1
			if fname.endswith( ('.LCM', '.DAT', '.DAT', '.FRT', '.NTF', '.NFF', '.NTF_ATTR', '.FC', '.FCC', '.FCT', '.ACT', '.FCP', '.LUT',
					'.CODES', '.SAMPLE', '.PSFONTLIST', '.TEST', '.CHART', '.SIF', '.COL', '.FADT', '.BNT', '.SXF', '.I2SXF_PAR', '.IMAP2I_PAR') ):
#				print('\t%s is a test file, modified %s' % (fname, modtime))
				outhtmlfile.write(fname + ' is a test file (<A href="' + relpath + '">download</A>),  modified ' + modtime + '<BR>\n')
				identified=1
			if identified==0:
				print('\t%s is a misc file, modified %s' % (fname, modtime))
				outhtmlfile.write(fname + ' is a misc file (<A href="' + relpath + '">download</A>),  modified ' + modtime + '<BR>\n')
	outhtmlfile.write("<p><hr><a href=""index.html"">Go up to LAMPS archive index overview</a></BODY></HTML>\n")
	outhtmlfile.write("<P><I>Generated by lamps_source_index.py</BR>\n")
	return

# #Start point for script
main()

# All done.


