	PROGRAM FRTPLT
C
***	MODULE	FRTPLT
***	IDENT	22SE83
C
	IMPLICIT NONE
C
C Copyright Laser-Scan Laboratories Ltd, Cambridge, England
C
C	Created					PGH	08-JuL-1983
C
C Plots an IFF file using FRTLIB and LDLIB
C
C	/X        - diagnostic typing
C
***	COMMON/[COMMON.IFF]CBC/
***	COMMON/[COMMON.IFF]IFFHAN/
***	COMMON/[COMMON.VIOLIB]SWITCH/
***	COMMON/[COMMON.FRTLIB]FRTCOM/
C
C w/s
	INTEGER*2 IECODE,IELEN,IENDS
	INTEGER*2 IFFLUN
	INTEGER*2 IFCODE,ISIZE,IFSN
	INTEGER*2 I,N
	INTEGER*2 INI
	INTEGER*2 NPTS
	LOGICAL*1 LDI
	LOGICAL*1 FIRSTR
	LOGICAL*1 CHS(81)
	REAL      RDATA(4)
	REAL      X0,Y0
	REAL      X,Y
	REAL      XR,YR
	REAL      XSCALE,YSCALE
	REAL      SCALE
	REAL      DX,DY
	REAL      SINA,COSA
	REAL      H
	REAL      CHSIZ
	REAL      CHSCD
	REAL      TS(2),TE(2)
	LOGICAL*1 MCR
	CHARACTER*40 FRTNAM
C
C Function:
	LOGICAL	FRTINI,FRTFND
C
	IFFLUN=1
C
	LDI=.FALSE.
	CALL CMLTIT(MCR)
	CALL IFFOPN(IFFLUN,IFFTIT,0)
	IF (IERCD.NE.0) THEN
	  CALL MSGF('Can''t open "%S"',IFFTIT)
	  CALL EXIT
	ENDIF
	CALL IFFTDY
	CALL IFFRWD
C
	FRTNAM='LSL$FRT:PATTERN.FRT'
	IF (FRTINI(FRTNAM)) THEN
	   CALL FRTWRT('Can''t open %S',FRTNAM)
	   CALL EXIT
	ENDIF
C
	CALL LDINIT(125)
C
	LDI=.TRUE.
C
C Main loop
C
20	CALL IFFNXT(IECODE,IELEN)
	IF (IELEN.LT.0)   GOTO 200
	IF (IECODE.EQ.NF) GOTO 50
	IF (IECODE.EQ.ST) GOTO 60
	IF (IECODE.EQ.FS) GOTO 110
	IF (IECODE.EQ.TH) GOTO 120
	IF (IECODE.EQ.EF) GOTO 130
	IF (IECODE.EQ.RA) GOTO 140
	IF (IECODE.EQ.TX) GOTO 150
C
	IF (IECODE.EQ.EJ) GOTO 190
	GOTO 40
C
C General return with debug print controlled by /X
40	IF (SWITCH(24)) CALL FRTWRT('*** %C',IECODE)
	GOTO 20
C
C NF - new feature
50	CALL EIHRI(IFSN,1,1)
	FIRSTR=.TRUE.
	GOTO 40
C
C FS - feature status
110	CALL EIHRI(IFCODE,1,1)
	IF (FRTFND(IFCODE)) THEN
	   CALL FRTWRT('FSN %N, FC %N not found in FRT',IFSN,IFCODE)
	   CALL FRTFND(0)
	ENDIF
	IF (SWITCH(24)) THEN
	   CALL FRTWRT('FSN %N, FC %N, GT %N, COL %N, SC %N, SIZ %F',
     &       IFSN,IFCODE,FRTGT,FRTCOL,FRTSC,FRTSIZ)
	ENDIF
	GOTO 40
C
C TH - 	thickness or text height
120	CALL EIHRI(ISIZE,1,1)
	GOTO 40
C
C ST - string of coords
60	CALL EIHRS(NPTS,IENDS)
C
	N=1
	IF (FRTTEX) GOTO 100		! text feature
	DO 90 I=1,NPTS
	  CALL EIHRR(RDATA,2,N)
	  N=N+4
	  X=(RDATA(1)-X0)*SCALE
	  Y=(RDATA(2)-Y0)*SCALE
	  IF (FRTSYM) THEN
C	    CALL SRISYM(X,Y,NSYMB)
	  ELSEIF (I.EQ.1.AND.FIRSTR) THEN
	    CALL MOVTO(X,Y)
	  ELSE
	    CALL LINTO (X,Y)
	  ENDIF
90	CONTINUE
	FIRSTR=.FALSE.
	GOTO 40
C
C
C here with text alignment
100	CALL EIHRR(TS,2,1)
	CALL EIHRR(TE,2,5)
	X=(TS(1)-X0)*SCALE
	Y=(TS(2)-Y0)*SCALE
	CALL MOVTO(X,Y)
	IECODE=AL
	GOTO 40
C
C EF - end feature
130	GOTO 40
C
C RA - range entry
140	CALL EIHRR(RDATA,4,1)
C
	CALL LDFPPM(4,X,XR,YR)
	IF (XR.LE.0.0) XR = 100.
	IF (YR.LE.0.0) YR = 70.
C
	XSCALE=XR/(RDATA(2)-RDATA(1))
	YSCALE=YR/(RDATA(4)-RDATA(3))
	SCALE=MIN(XSCALE,YSCALE)*0.9
	X0=RDATA(1)
	Y0=RDATA(3)
	CALL ORIGIN(-(SCALE/XSCALE)*XR/2.0,
     &              -(SCALE/YSCALE)*YR/2.0,-1)
	GOTO 40
C
C
C TX - text string
150	IF (SWITCH(20)) GOTO 40
	DX=(TE(1)-TS(1))*SCALE
	DY=(TE(2)-TS(2))*SCALE
	H=SQRT(DX**2+DY**2)
	IF (H.EQ.0.0 .AND. SWITCH(24)) THEN
	  CALL FRTWRT('H=0 TS(%F,%F)  TE(%F,%F)',
     &                     TS(1),TS(2),TE(1),TE(2))
	  H=1
	ENDIF
C
	SINA=DX/H
	COSA=DY/H
	IF (ISIZE.EQ.0) ISIZE=100  ! default text height
	H=FLOAT(ISIZE)*SCALE/CHSCD
	CHSIZ=H*1.2
	DX=CHSIZ*SINA
	DY=CHSIZ*COSA
	CALL CHSIZE(H,DX,DY)
C here with size set up ready to write chars
	CALL EIHR(CHS,IELEN,1)
	CHS(IELEN*2+1)=0
	IF (SWITCH(24)) CALL FRTWRT('CH=%F,DX=%F,DY=%F,CHS="%S"',
     &     H,DX,DY,CHS)
C
	CALL CHARZ(CHS)
C
	GOTO 40
C
C EJ - end job
190	CALL IFFCLO(IFFLUN)
	IF (LDI) CALL LDINIT(0)
	CALL EXIT
C
C EOF - end of file
200	CALL MSGF('Unexpected end of IFF')
	GOTO 190
C
	END
