C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1991-02-20 10:44:26.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL FUNCTION SRIUNI(UNITS,SCL,ANGLE,ENLUNI)
C
***	MODULE	SRIUNI
***	IDENT	20FE91
C
C Copyright Laser Scan Laboratories Ltd., Cambridge, England.
C Author  Clarke Brunt
C
C Created 					CCB	17-May-1984
C
C Inform FRTLIB of the plotting units.
C To be called after FRTINI, but before plotting is done.
C 1) The ratio of plotter units (mms) to world units, such that
C    world units * UNITS = plotter units
C
C It is used in computing the correct thickness and spacing of hatch
C lines in hatched filled areas in symbols and texts, and also to adjust
C the tolerances for circles and curves, unless overridden by the 4th arg.
C The default number of points in circles and curves are intended
C to appear reasonable if one unit corresponds to one mm. on the plot.
C
C 2) The optional second argument tells FRTLIB the ratio between FRT
C units (mms) and world units such that FRT units * SCL = world units
C
C It is used in converting things specified in sheet mm in the FRT to
C world coords (e.g. pattern sizes)
C
C 3) The optional third argument tells FRTLIB the angle that the data
C    has been rotated by relative to the GKS window, so that FRTLIB
C    can apply the same rotation when it dreams up angles of its own
C
C 4) The ratio of final plotter units (mms) to world units, such that
C    world units * UNITS = final plotter units. By 'final' we mean
C    for instance the result of photographically enlarging the plot.
C
C If no enlarging is being done, this is the same as arg. 1, but otherwise
C it is used to adjust the tolerances for circles and curves in the final plot.
C If not given, then the value of arg. 1 is used.
C
C
	IMPLICIT NONE
C
***	COMMON/LSL$CMNFRT:SRISCL/
***	COMMON/LSL$CMNFRT:FRTTRI/
C
C args
C
	REAL		UNITS
	REAL		SCL
	REAL		ANGLE		! angle to rotate by (in radians)
	REAL		ENLUNI
C
C functions
C
	LOGICAL		HAVE_I_AN_ARG
C
C w/s
C
	REAL		COSROT,SINROT
	REAL		COS2ROT,SIN2ROT,COSINROT
C
	SRIUNI = .FALSE.		! succeeded
	IF (UNITS.LE.0.0) THEN
	   CALL FRTWRT('Plotting units must be greater than zero')
	   SRIUNI = .TRUE.
	ELSE
	   PLTSCL = UNITS
	   ENLSCL = UNITS
	   SRIAKT = SRIBKT*UNITS	! AKIMA points/unit
	   SRICTO = SRIBTO*UNITS	! circle tolerance parameter
	ENDIF
C
	IF (HAVE_I_AN_ARG(2)) THEN	! deal with optional argument
	   IF (SCL.LE.0.0) THEN
	      CALL FRTWRT('Scale must be greater than zero')
	      SRIUNI = .TRUE.	! failed
	   ELSE
	      SRISCL = SCL
	   ENDIF
	ENDIF
C
C an angle
C
	IF (HAVE_I_AN_ARG(3)) THEN	! get third argument
	   SRIROT = ANGLE
	ELSE
	   SRIROT = 0.0
	ENDIF
C
	IF (HAVE_I_AN_ARG(4)) THEN	! deal with optional argument
	   IF (ENLUNI.LE.0.0) THEN
	      CALL FRTWRT('Final plotting units must be greater than zero')
	      SRIUNI = .TRUE.
	   ELSE
	      ENLSCL = ENLUNI
	      SRIAKT = SRIBKT*ENLUNI	! AKIMA points/unit
	      SRICTO = SRIBTO*ENLUNI	! circle tolerance parameter
	   ENDIF
	ENDIF
C
	RETURN
	END
