C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1994-10-27 11:49:50.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE SRIEXT(START,X,Y)
C
***	MODULE	SRIEXT
***	IDENT	27OC94
C
C Copyright Laser Scan Laboratories Ltd, Cambridge, England.
C Author Clarke Brunt
C
C To extrapolate two extra points from three given ones.
C Used by SRIINT to get points to pass to e.g. AKIMA
C NB same routine as EXTRPL in FPP (and similar to EXTRPL in LITES2)
C
C If START is true, then coordinates 1 and 2 are extrapolated
C from 3,4, and 5.
C If false, coordinates 4 and 5 are extrapolated from 1,2, and 3.
C
C Algorithm: (for START true case)
C Point 2 is the mirror image of point 5 in the line which
C perpendicularly bisects the line joining points 3 and 4.
C Point 1 is the mirror image of point 4 in the line which
C perpendicularly bisects the line joining points 2 and 3.
C 
	IMPLICIT NONE
C
C arguments
	LOGICAL	START		! extrapolate start, or end?
	REAL X(5),Y(5)		! coordinates
C
C W/s
	REAL	R
	REAL	X1,Y1,X2,Y2,X3,Y3,X4,Y4,X5,Y5
	REAL	X23,Y23,X34,Y34,X45,Y45
	EQUIVALENCE (X23,X45),(Y23,Y45)
C
C get points a consistent way round
	X3 = X(3)
	Y3 = Y(3)
	IF (START) THEN
	   X4 = X(4)
	   Y4 = Y(4)
	   X5 = X(5)
	   Y5 = Y(5)
	ELSE
	   X4 = X(2)
	   Y4 = Y(2)
	   X5 = X(1)
	   Y5 = Y(1)
	ENDIF
C
C calculate differences 3->4 and 4->5
	X34 = X4-X3
	Y34 = Y4-Y3
	X45 = X5-X4
	Y45 = Y5-Y4
C
C R is amount of 3->4 vector to be subtracted from point 5
C to give point 2
	R = 1.0 + 2.0*(X34*X45 + Y34*Y45)/(X34**2 + Y34**2)
C
C extrapolate point 2
	X2 = X5 - X34*R
	Y2 = Y5 - Y34*R
C
C calculate difference 2->3 (nb equivalenced on 4->5)
	X23 = X3-X2
	Y23 = Y3-Y2
C
	R = 1.0 + 2.0*(X34*X23 + Y34*Y23)/(X23**2 + Y23**2)
C
C extrapolate point 1
	X1 = X4 - X23*R
	Y1 = Y4 - Y23*R
C
C Return the extrapolated points to the correct place
	IF (START) THEN
	   X(1) = X1
	   Y(1) = Y1
	   X(2) = X2
	   Y(2) = Y2
	ELSE
	   X(5) = X1
	   Y(5) = Y1
	   X(4) = X2
	   Y(4) = Y2
	ENDIF
	RETURN
C
	END
