;
; * This file is part of the LAMPS distribution, released as a software
; * preservation project to archive digital history for future historians.
; * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
; *
; * Timestamp of this file for the 2002 release was: 1987-09-10 20:07:46.000000000 +0100
; *
; * This program is free software: you can redistribute it and/or modify
; * it under the terms of the GNU General Public License as published by
; * the Free Software Foundation, version 3.
; *
; * This program is distributed in the hope that it will be useful, but
; * WITHOUT ANY WARRANTY; without even the implied warranty of
; * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
; * General Public License for more details.
; *
; * You should have received a copy of the GNU General Public License
; * along with this program. If not, see http://www.gnu.org/licenses/.
;
	.TITLE	FRTTTW
	.IDENT	/10SE87/
;
; Copyright Laser-Scan Laboratories Ltd,Cambridge,England
; Author Tony J Ibbs, stolen from VIOLIB's VIOTTW	14 November 1984
;
;mod	G^ on references to common		CCB	10-Sep-1987
;mod474	Prefix different for LSLLIB version	PGH	02-Jun-1987
;
; terminal output routine for FRTLIB
; the intention is that users (eg in LITES2) may replace this routine
; with their own output primitive
;
; MUST be assembled with EXPC.MAR, since it only outputs the contents
; of EXPDSC
;

	DATA_PSECT	FRT

	.IF NE LSLLIB
FRTSTR:	.ASCII /%FRTLIB-W-FRTERR, /	; prefix string (LSLLIB version)
	.IFF
FRTSTR:	.ASCII /FRTLIB - /		; prefix string (VIOLIB version)
	.ENDC
FRTLEN = .-FRTSTR			; and length

TTWDSC:					; final descriptor
TTWLEN:	.BLKW	1			; string length (not set)
	.BYTE	0,0			; class & type
TTWPTR:	.BLKL	1			; pointer to buffer

	CODE_PSECT	FRT

	.ENTRY	FRTTTW,^M<R2,R3,R4,R5,R7,R8>	; write a string from EXPC
;
	MOVZWL	G^EXPLEN,R8		; second string's length comes first
	SUBL2	R8, SP			; move the stack pointer down
	MOVC3	R8, G^EXPBUF, (SP)	; copy the string onto the stack
	MOVZWL	#FRTLEN, R7		; first string to be placed next
	SUBL2	R7, SP			; room for this string, too
	MOVC3	R7, FRTSTR, (SP)	; and copy it, as well
	ADDL3	R8,R7,TTWLEN		; store the total length
	MOVL	SP,TTWPTR		; store the address of the 'buffer'
	PUSHAQ	TTWDSC			; store the descriptor address on stack
	CALLS	#1, G^VIO$PUT_OUTPUT	; print it all
;
; note that we assume that RET will reset the stack pointer for us
;
	RET

	.PSECT
	.END
