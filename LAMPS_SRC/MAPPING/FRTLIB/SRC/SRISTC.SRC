C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1990-01-24 10:33:28.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE SRISTC(XCENTRE,YCENTRE,RADIUS,STAANG,TOTANG)
C
***	MODULE	SRISTC
***	IDENT	24JA90
C
C Copyright Laser Scan Laboratories Ltd., Cambridge, England.
C Author  R. Daly
C
C amended for FRTLIB SRI plotting		PGH	22-Sep-1983
C Created.					RD	25-Aug-1983.
C
C Routine to generate the intermediate points on a circle/arc.
C Method used is to work out the number of segments which are
C required and then use this to work out the angle subjected
C at the centre by a segment (ANGINC). The position of a point
C to be generated is found using the centre position, the radius
C and the angle at the centre:-
C	X = Xcentre + (Radius * COS(angle))
C	Y = Ycentre + (Radius * SIN(angle))
C
C Given that the starting angle and the angular increment are
C known the angles of each point can be found in turn using:-
C	SIN(a+b) = SIN(a)*COS(b) + COS(a)*SIN(b)
C	COS(a+b) = COS(a)*COS(b) - SIN(a)*SIN(b)
C
C
***	COMMON/LSL$CMNFRT:FRTSRI/	! for SRIHWC
***	COMMON/LSL$CMNFRT:FRTSCT/	! for SCTHWS
***	COMMON/LSL$CMNFRT:SRISCL/
C
C arguments
	REAL XCENTRE,YCENTRE	! coords of centre pt of arc/circle.
	REAL RADIUS		! radius (from 1st pt to centre).
	REAL STAANG		! initial angle (c'wise from north).
	REAL TOTANG		! total angle of arc/circle.
C
C W/s
	REAL TWOPI		! constant.
	REAL RTEMP		! temporary real.
	REAL SINANG,COSANG	! sin/cos of angle of current point.
	REAL SININC,COSINC	! sin/cos of the angular increment.
	INTEGER	NUMSEG		! no. of segments actually required.
C
C Presets.
	DATA TWOPI/6.283185307/
C
C plot using hardware circle if required
	IF (SRIHWC.AND.SCTFLG.GE.0.AND.SCTHWS) THEN
	   CALL SRI_CIRCLE(XCENTRE,YCENTRE,RADIUS,STAANG,TOTANG)
	   GOTO 9999
	ENDIF
C
C clear the buffer
	CALL SRIBFF(0)			! force buffer empty
C
C Work out number of segments required.
C Since the number of points is dependent on circle/arc size, we
C first find how many points are required for a full circle.
	RTEMP=SQRT(SRICTO*RADIUS)	! bit of a guess really.
	NUMSEG=IFIX((ABS(TOTANG)*RTEMP)/TWOPI)+1
C
C Work out the angle subjected at the centre by a single segment.
	RTEMP=TOTANG/FLOAT(NUMSEG)
C
C Initialise variables used in the main loop.
	SININC=SIN(RTEMP)	! for the angular increment.
	COSINC=COS(RTEMP)
	SINANG=SIN(STAANG)	! for the angle of the current (1st) pt
	COSANG=COS(STAANG)
C
C Main loop (for generating position of each point).
	DO 10 I=1,NUMSEG+1
C Work out the position of the next point
	   CALL SRIBFA(1,XCENTRE+RADIUS*COSANG,
     &			 YCENTRE+RADIUS*SINANG)
C Work out the angle (at the centre) of the next point
	   RTEMP=SINANG
	   SINANG=SINANG*COSINC+COSANG*SININC
	   COSANG=COSANG*COSINC- RTEMP*SININC
10	CONTINUE
C
C flush the buffer
C
	CALL SRIBFF(2)		! final flush of buffer
C
9999	RETURN
	END
