C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1994-10-26 17:29:38.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE SRI_CIRCLE(XCENTRE,YCENTRE,RADIUS,STAANG,TOTANG)
C
***	MODULE	SRI_CIRCLE
***	IDENT	26OC94
C
	IMPLICIT NONE
C
C Copyright Laser Scan Laboratories Ltd., Cambridge, England.
C Author  C C Brunt
C
C Created 					RJH	23-Jan-1990
C
C c.f SRI_LINE.
C
C arguments
	REAL XCENTRE,YCENTRE	! coords of centre pt of arc/circle.
	REAL RADIUS		! radius (from 1st pt to centre).
	REAL STAANG		! initial angle (ac'wise from east).
	REAL TOTANG		! total angle of arc/circle.
C
C common
***	COMMON/LSL$CMNFRT:FFABUF/
***	COMMON/LSL$CMNFRT:SRISCL/
***	COMMON/LSL$CMNFRT:SRIVEC/
***	COMMON/LSL$CMNFRT:TRIEXT/
C
C workspace
	REAL	PX(3),PY(3)
	REAL	TWOPI,PIBY2
	PARAMETER	(TWOPI=6.283185307)
	PARAMETER	(PIBY2=TWOPI/4.0)
	REAL	A,ANG
	INTEGER	QUAD
C
C get bounding box of circle if getting extent, or clipping
	IF (GET_EXTENT.OR.FILLCLIP_ON) THEN
C
C first check start and end points of arc
	   PX(1) = XCENTRE + RADIUS*COS(STAANG)
	   PY(1) = YCENTRE + RADIUS*SIN(STAANG)
	   PX(2) = PX(1)
	   PY(2) = PY(1)
	   PX(3) = XCENTRE + RADIUS*COS(STAANG+TOTANG)
	   PY(3) = YCENTRE + RADIUS*SIN(STAANG+TOTANG)
	   PX(1) = MIN(PX(1),PX(3))
	   PY(1) = MIN(PY(1),PY(3))
	   PX(2) = MAX(PX(2),PX(3))
	   PY(2) = MAX(PY(2),PY(3))
C
C then whichever of the 90 degree points are within the arc
	   QUAD = STAANG/PIBY2		! how many right angles
	   IF (TOTANG.GT.0.0) QUAD = QUAD+1
	   ANG = QUAD*PIBY2		! convert back to angle
	   DO 10 A=ANG,STAANG+TOTANG,SIGN(PIBY2,TOTANG)
	      PX(3) = XCENTRE + RADIUS*COS(A)
	      PY(3) = YCENTRE + RADIUS*SIN(A)
	      PX(1) = MIN(PX(1),PX(3))
	      PY(1) = MIN(PY(1),PY(3))
	      PX(2) = MAX(PX(2),PX(3))
	      PY(2) = MAX(PY(2),PY(3))
10	   CONTINUE
	   IF (GET_EXTENT) THEN
	      CALL TRI_EXTENT(2,PX,PY)
	   ELSE
	      CALL SRI_CLIPARC(
     &		XCENTRE,YCENTRE,RADIUS,STAANG,TOTANG,
     &		NPTS,%VAL(PTS_ADDR),PX,PY,%VAL(INTSCT_ADDR))
	   ENDIF
	   GOTO 9999
	ENDIF
C
	CALL SRI_CIRC(XCENTRE,YCENTRE,RADIUS,STAANG,TOTANG,
     &			%VAL(SRIVEC(XSRIGDP)))
C
9999	RETURN
	END
