C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1994-11-02 11:44:14.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL FUNCTION PATFND(PATNO)
C
***	MODULE	PATFND
***	IDENT	02NO94
C
C Copyright Laser Scan Laboratories Ltd., Cambridge, England.
C Author  Paul Hardy
C
C Created					PGH	16-Sep-1983
C
C returns TRUE if it fails to find Pattern PATNO
C in the Pattern definition table,
C otherwise the attributes of PATNO are set up in COMMON/FRTPAT/.
C see FRTPAT.CMN for details
C
	IMPLICIT NONE
C
	INTEGER*2	PATNO		! Pattern number
C
***	COMMON/LSL$CMNFRT:FRTPAT/
C
C functions
	LOGICAL	PATFND_SUB
C
	PATFND = PATFND_SUB(PATNO,%VAL(PATINT_LOC),%VAL(PATDIM_LOC))
C
	RETURN
	END
C
	LOGICAL FUNCTION PATFND_SUB(PATNO,PATINT,PATDIM)
C
***	MODULE	PATFND_SUB
***	IDENT	29NO86
C
C Copyright Laser Scan Laboratories Ltd., Cambridge, England.
C
	IMPLICIT NONE
C
	INTEGER*2	PATNO		! Pattern number
	INTEGER*2	PATINT(6,*)	! integer array
	REAL		PATDIM(6,*)	! real array
C
***	COMMON/LSL$CMNFRT:FRTPAT/
C
C w/s
	INTEGER I
	INTEGER*2  TEMP(2)		! for I*4 - I*4 truncation
	INTEGER*4  LTEMP
C
	EQUIVALENCE (LTEMP,TEMP)
C
C nothing to do if currently selected
C
	IF (PATNO.EQ.PATSEL) GOTO 50
C
C init things
C
	PATFND_SUB = .TRUE.		! assume will fail
C
C as the pattern table is sorted, we can use binary chop
C ... but won't yet
C
	DO 10 I=1,PATCNT
	   IF (PATINT(1,I).EQ.PATNO) GOTO 20
10	   CONTINUE
	CALL FRTWRT('Pattern %^W%N not found in FRT',PATNO)
	GOTO 999		! failed - pattern not in table
C
C found the Pattern in table - set things up
C
20	PATIND = I			! index
	PATSEL = PATINT(1,I)		! pattern number
	PATMAJ = PATINT(2,I)		! major unit
	PATMIN = PATINT(3,I)		! minor unit
	PMAREP = PATINT(4,I)		! major repeat
	PMIREP = PATINT(5,I)		! minor repeat
	PATSIZ = PATDIM(1,I)		! overall size
	PMASIZ = PATDIM(2,I)		! major size
	PMISIZ = PATDIM(3,I)		! minor size
	PMAWID = PATDIM(4,I)		! major width
	PMIWID = PATDIM(5,I)		! minor width
	PATOFF = PATDIM(6,I)		! offset
C
C for PATFLG all 16 bits are significant
C
	LTEMP  = PATINT(6,I)
	TEMP(2)= 0			! only want bottom bits	
	PATFLG = LTEMP
C
C all set up
C
50	PATFND_SUB = .FALSE.		! success
C
C that's all
C
999	RETURN
	END
