C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1994-11-24 17:49:28.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE SRI_ADD_PTS_TO_HULL( N, X, Y,
     &                                  MAXPOINTS, POINTS, NPOINTS )
C
***	IDENT	24NO94
***	MODULE	SRI_ADD_PTS_TO_HULL
C
C Copyright Laser-Scan Laboratories Ltd., Cambridge, England
C
C Author: Tim Mulcahy, 10-Nov-1994
C
C Add an array of points to the accumulated point set (source) for subsequent
C convex hull (destination) calculation.
C
C Note: The output work array POINTS(2,MAXPOINTS) must be initialised via a
C       call with NPOINTS = 0.
C
C Error code: return NPOINTS = -1
C
	IMPLICIT NONE
C
	INTEGER N			! No. of points to add
	REAL X(N)			! X-coords of points to add
	REAL Y(N)			! Y-coords of points to add
C
	INTEGER MAXPOINTS		! Max. size of point set work array
	REAL POINTS(2,MAXPOINTS)	! Point set work array
	INTEGER NPOINTS		        ! Accumulated size of point set
C
	INTEGER I
C
C Check whether an error has already ocurred
C
	IF ( NPOINTS.LT.0 ) GOTO 999
C
	DO 10 I = 1, N
C
C Is there room for the next point to be accumulated?
C
	   IF ( NPOINTS.GE.MAXPOINTS ) THEN
	      NPOINTS = -1
	      GOTO 999
	   ENDIF
	   NPOINTS = NPOINTS + 1
	   POINTS(1,NPOINTS) = X(I)
	   POINTS(2,NPOINTS) = Y(I)
 10	CONTINUE
C
 999	RETURN
	END
