C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1997-11-20 16:03:46.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL FUNCTION TRISCN(CHARST,THS_FONT,WIDTH,HWTXT)
C
***	MODULE	TRISCN
***	IDENT	20NO97
C
C Copyright Laser Scan Laboratories Ltd., Cambridge, England.
C Author  Clarke Brunt
C
C Created					CCB	16-July-1984
C
C returns FALSE if it succeeds in returning WIDTH, the total width
C of string CHARST using font FONT.
C 
	IMPLICIT NONE
C
C args
C
	CHARACTER*(*)	CHARST		! character string
	INTEGER*2	THS_FONT	! font (-ve for italic version)
	REAL		WIDTH		! total width of string
	LOGICAL		HWTXT		! use hardware text
C
C common
C
***	COMMON/HERE:FRTTMP/
***	COMMON/HERE:FRTTRI_PRIVATE/
***	COMMON/LSL$CMNFRT:SRIVEC/
C
C functions called
	LOGICAL		TRISCN_SUB
	LOGICAL		HAVE_I_AN_ARG
C
C w/s
	LOGICAL		LHWTXT
C
C get optional argument stuff done before calling subroutine,
C otherwise tends to access violate, trying to use missing arguments
C
C draw text using hardware?
	LHWTXT = .FALSE.
	IF (HAVE_I_AN_ARG(4)) LHWTXT = HWTXT
C
C
C translate string if required
	IF (TRITRN) THEN
	   CALL LIB$MOVTC(CHARST,' ',TRNTAB,TRNSTR(:LEN(CHARST)))
	   TRISCN = TRISCN_SUB(TRNSTR(:LEN(CHARST)),
     &			THS_FONT,WIDTH,
     &			%VAL(TRIWID_LOC),%VAL(TRIFNT_LOC),
     &			LHWTXT,%VAL(SRIVEC(XSRI_STRING_WIDTH)))
	ELSE
	   TRISCN = TRISCN_SUB(CHARST,THS_FONT,WIDTH,
     &			%VAL(TRIWID_LOC),%VAL(TRIFNT_LOC),
     &			LHWTXT,%VAL(SRIVEC(XSRI_STRING_WIDTH)))
	ENDIF
C
	RETURN
	END
C
	LOGICAL FUNCTION TRISCN_SUB(CHARST,THS_FONT,WIDTH,
     &		TRIWID,TRIFNT,HWTXT,SRI_STRING_WIDTH)
C
***	MODULE	TRISCN_SUB
***	IDENT	04AP95
C
C Copyright Laser Scan Laboratories Ltd., Cambridge, England.
C
	IMPLICIT NONE
C
***	COMMON/HERE:FRTTRI_PRIVATE/	! for text widths
***	COMMON/HERE:FRTTMP/		! for TMPSTR
C
C args
C
	CHARACTER*(*)	CHARST		! character string
	INTEGER*2	THS_FONT	! font (-ve for italic version)
	REAL		WIDTH		! total width of string
	REAL		TRIWID(TRIMXC,*)! widths for spacing
	INTEGER*2	TRIFNT(*)	! font numbers
	LOGICAL		HWTXT		! use hardware text
	LOGICAL		SRI_STRING_WIDTH
	EXTERNAL	SRI_STRING_WIDTH! passed routine
C
C functions called
	INTEGER		TRITXT_SUB3
C
C w/s
	INTEGER		I,N
	INTEGER		FONTPT		! pointer to font
	INTEGER		CHARNO		! character number
	INTEGER		FONT
	INTEGER		L
C
C init things
C
	FONT   = ABS(THS_FONT)		! ignore italic fonts
C
	IF (HWTXT) THEN
	   CALL TRITXT_SUB2(CHARST,TMPSTR,L)
	   IF (L.GT.0) THEN
	      TRISCN_SUB = SRI_STRING_WIDTH(TMPSTR(:L),FONT,WIDTH)
	      IF (.NOT.TRISCN_SUB) GOTO 999	! done
	   ENDIF
	ENDIF
C
	TRISCN_SUB = .FALSE.		! assume will succeed
	WIDTH  = 0.0			! initialise width
C
C check valid font
C
	DO 10 FONTPT=1,TRIFNC
	   IF (TRIFNT(FONTPT).EQ.FONT) GOTO 15
10	CONTINUE
	CALL FRTWRT('Font %N is not defined',FONT)
	TRISCN_SUB = .TRUE.		! failed
	GOTO 999

C
C loop for each character in the string
C don't bother to check for existence of the character
C
15	I = 0
20	I = I+1
	IF (I.GT.LEN(CHARST)) GOTO 999
	   CHARNO = ICHAR(CHARST(I:I))
	   IF ((CHARST(I:I).EQ.'$'.AND.TRIESC) .OR.
     &	       (CHARST(I:I).EQ.'{'.AND.TRICC)) THEN ! its an escape sequence
	      N = TRITXT_SUB3(CHARST(I:),CHARNO)
	      I = I+N-1
	   ENDIF
	   IF (CHARNO.EQ.0) GOTO 20	! skip nulls
	   WIDTH = WIDTH + TRIWID(CHARNO,FONTPT)
	   GOTO 20
C
C that's all
C
999	RETURN
	END
