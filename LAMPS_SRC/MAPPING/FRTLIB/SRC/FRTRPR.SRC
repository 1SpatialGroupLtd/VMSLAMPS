C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1994-11-02 12:13:34.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C

	LOGICAL FUNCTION FRTRPR(PRIODATA)
C
**	IDENT	02NO94
**	MODULE	FRTRPR
C
C Copyright LaserScan Laboratories Ltd., Cambridge, England
C
C Created				RWR	25-Feb-1992
C
C to read a priority line from the FRT file
C
C
	IMPLICIT NONE
C
C
***	COMMON/LSL$CMNLSL:CMDCOM/
***	COMMON/LSL$CMNFRT:FRTCOM/
***	COMMON/LSL$CMNFRT:FRTPRIO/	! priority information
C
C arguments
	INTEGER*2	PRIODATA(2+2*PRIO_PER_FC_MAX,*)
C
C functions called
	LOGICAL		RDLONG
	LOGICAL		FRTFND
C
C workspace
	INTEGER		I		! loop variable
	INTEGER		FC_GT
C
C init things
C
	FRTRPR = .TRUE.			! assume error
C
C check for secondary command DEFAULT
	IF (SECMDN.EQ.1) THEN
C
C is number in valid range?
	   IF (INTARG(1).LT.0.OR.
     &	       INTARG(1).GT.PRIO_VALUE_MAX) THEN
	      CALL FRTWRT('PRIORITY DEFAULT %N is out of range.',
     &	                     INTARG(1))
C
C ok, so use this value in future	      
	   ELSE
	      PRIO_DEFAULT = INTARG(1)
	      FRTRPR = .FALSE.			! success
	   ENDIF
	   GOTO 999
	ENDIF
C
C otherwise we must read a feature code and up to PRIO_PER_FC_MAX pairs of 
C priority and representation pairs.
C
C have we room ?
	IF (PRIOCNT.GE.PRIOLIM) THEN
	   CALL FRTWRT('No room in PRIORITY table')	   
	   GOTO 990
	ENDIF

	IF (RDLONG(PRIO_SEL)) THEN
	   CALL FRTWRT('Missing PRIORITY feature code')
	   GOTO 990
	ELSEIF (PRIO_SEL.LT.0.OR.PRIO_SEL.GT.PRIO_FC_MAX) THEN
	   CALL FRTWRT('PRIORITY feature code out of range')
	   GOTO 990
	ELSEIF 	(PRIOCNT.GT.0.AND.PRIO_SEL.LE.PRIODATA(1,PRIOCNT)) THEN
	   CALL FRTWRT('Priority Feature Code %N out of order or repeated',
     &	                PRIO_SEL)
	   GOTO 990
	ELSEIF (FRTFND(PRIO_SEL,.FALSE.)) THEN
	   CALL FRTWRT('PRIORITY feature code not defined in FRT table')
	   GOTO 990
	ENDIF	
C
C no priority/representation pairs read yet
	PRIO_NUMBER = 0
C
C save the graphical type of the PRIORITY feature code
C
	FC_GT = FRTGT	
C
	DO 10, I = 1, PRIO_PER_FC_MAX
	   IF (RDLONG(PRIO_PRIO(I))) THEN
	      IF (I.GT.1) GOTO 20		! nothing left on line
	      CALL FRTWRT('No priority/representations on line')
	      GOTO 990
	   ENDIF
	   IF (PRIO_PRIO(I).LT.0.OR.PRIO_PRIO(I).GT.PRIO_VALUE_MAX) THEN
	      CALL FRTWRT('PRIORITY out of range')
	      GOTO 990
	   ENDIF
	   IF (RDLONG(PRIO_REP(I))) THEN
	      CALL FRTWRT(
     &	   'Missing Representation for priority %N for Feature Code %N',
     &	      PRIO_PRIO(I),PRIO_SEL)
	      GOTO 990
	   ENDIF
	   IF (PRIO_REP(I).LT.0.OR.PRIO_REP(I).GT.PRIO_FC_MAX) THEN
	      CALL FRTWRT('PRIORITY representation out of range')
	      GOTO 990
	   ENDIF
C
C check that represention exists in FRT
	   IF (FRTFND(PRIO_REP(I),.FALSE.)) THEN
	      CALL FRTWRT('PRIORITY representation not defined in FRT table')
	      GOTO 990
	   ENDIF
C
C and that it is of a compatible type to the priority feature code
	   IF (.NOT.
     &	        ((FRTGT.EQ.FC_GT).OR.
C
C allow lines or areas to be drawn with symbol strings
     &	         (FRTGT.EQ.STRTYP.AND.
     &		  (FC_GT.EQ.LINTYP.OR.FC_GT.EQ.ARETYP)).OR.
C
C allow symbol strings to be drawn with lines
     &	         (FRTLIN.AND.FC_GT.EQ.STRTYP).OR.
C
C allow areas to be drawn with lines
     &	         (FRTLIN.AND.FC_GT.EQ.ARETYP).OR.
C
C allow text and symbols to be drawn as lines, curves, or areas
C (i.e. bounding box, hull etc.)
     &	         ((FRTLIN.OR.FRTCUR.OR.FRTARE).AND.
     &		  (FC_GT.GE.UNOTYP.AND.FC_GT.LE.TEXTYP))
C
     &							)) THEN
	      CALL FRTWRT(
     &	  'PRIORITY representation %N incompatible with PRIORITY fc %N',
     &	       PRIO_REP(I),PRIO_SEL)
	      GOTO 990
	   ENDIF
C
C check that priorities are in ascending order
	   IF (I.GT.1 .AND. (PRIO_PRIO(I).LT.PRIO_PRIO(I-1))) THEN
	      CALL FRTWRT('Priority %N out of order',PRIO_PRIO(I))
	      GOTO 990
	   ENDIF
	   PRIO_NUMBER = PRIO_NUMBER + 1
10	CONTINUE
C
20	CONTINUE
C
C store our data in the PRIORITY TABLE (note I*2 -> I*4 conversion)
	PRIOCNT = PRIOCNT + 1
	PRIODATA(1,PRIOCNT) = PRIO_SEL
	PRIODATA(2,PRIOCNT) = PRIO_NUMBER
	DO 30, I = 1, PRIO_NUMBER
	   PRIODATA(2*I+1,PRIOCNT) = PRIO_PRIO(I)
	   PRIODATA(2*I+2,PRIOCNT) = PRIO_REP(I)
	   PRIO_MAX = MAX(PRIO_MAX,PRIO_PRIO(I))
	   CALL LIB$INSV(1,PRIO_PRIO(I),1,PRIOPRBMAP)
30	CONTINUE	
C
C success
	FRTRPR = .FALSE.
	GOTO 999
C
C general error exit
990	FRTRPR = .TRUE.
999	RETURN
	END
