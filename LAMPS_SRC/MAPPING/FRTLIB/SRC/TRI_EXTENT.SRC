C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1994-11-24 17:50:42.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE TRI_EXTENT(NCOORD,XCOORD,YCOORD)
C
***	MODULE	TRI_EXTENT
***	IDENT	24NO94
C
C Copyright Laser Scan Laboratories Ltd., Cambridge, England.
C Author  R J Hulme
C
C Created					RJH	22-Jan-1986
C
C scans the given coordinates which are a character component,
C returning extent in common TRIEXT
C 
C
	IMPLICIT NONE
C
C args
C
	INTEGER		NCOORD		! number of coords
	REAL		XCOORD(NCOORD)	! coordinate buffer
	REAL		YCOORD(NCOORD)	! ditto
C
***	COMMON/LSL$CMNFRT:TRIEXT/
***	COMMON/HERE:FRTWORK/
C
C w/s
	INTEGER*4	I
C
C if this is the first component, initialise the maxima and minima
C
	IF (START_IT) THEN
	   MIN_X_EXT = 1E38
	   MIN_Y_EXT = MIN_X_EXT
	   MAX_X_EXT = -MIN_X_EXT
	   MAX_Y_EXT = -MIN_X_EXT
C
C reset convex hull size
C
	   NPOINTS = 0
C
	   START_IT = .FALSE.
	ENDIF
C
C scan the coordinates for ordinary extents
C
	DO 10 I=1,NCOORD
	   IF (XCOORD(I) .GT. MAX_X_EXT) MAX_X_EXT = XCOORD(I)
	   IF (XCOORD(I) .LT. MIN_X_EXT) MIN_X_EXT = XCOORD(I)
	   IF (YCOORD(I) .GT. MAX_Y_EXT) MAX_Y_EXT = YCOORD(I)
	   IF (YCOORD(I) .LT. MIN_Y_EXT) MIN_Y_EXT = YCOORD(I)
10	CONTINUE
C
C if necessary... add points to hull
C
	IF ( GET_HULL )
     &	   CALL SRI_ADD_PTS_TO_HULL(NCOORD,XCOORD,YCOORD,
     &                              MAXPOINTS,%VAL(POINTS_LOC),NPOINTS)
C
C that's all
C
	RETURN
	END
