	LOGICAL FUNCTION TRIPLT(CHARNO,THS_FONT,X,Y,SIZE,ANGLE,HWTXT)
C
***	MODULE	TRIPLT
***	IDENT	27OC94
C
C Copyright Laser Scan Laboratories Ltd., Cambridge, England.
C Author  Paul Hardy
C
C Created					PGH	11-Oct-1983
C
C returns FALSE if it succeeds in plotting character CHARNO
C from the TRI table, at position X,Y, of size SIZE, and at angle ANGLE
C 
C
	IMPLICIT NONE
C
C args
C
	INTEGER*2	CHARNO		! character number
	INTEGER*2	THS_FONT	! font number (-ve for italic)
	REAL		X,Y		! position
	REAL		SIZE		! size
	REAL		ANGLE		! angle in radians
	LOGICAL		HWTXT		! use hardware text
C					! (optional, default false)
C
***	COMMON/LSL$CMNFRT:FRTTRI/
***	COMMON/LSL$CMNFRT:SRIVEC/
C
C functions called
C
	LOGICAL		TRIPLT_SUB
	LOGICAL		TRITXT
	LOGICAL		HAVE_I_AN_ARG
C
C get optional argument stuff done before calling subroutine,
C otherwise tends to access violate, trying to use missing arguments
C
C draw text using hardware? If so, use TRITXT routine
	IF (HAVE_I_AN_ARG(7)) THEN
	   IF (HWTXT) THEN
	      TRIPLT = TRITXT(CHAR(CHARNO),THS_FONT,X,Y,SIZE,ANGLE,HWTXT)
	      GOTO 999
	   ENDIF
	ENDIF
C
	TRIPLT = TRIPLT_SUB(CHARNO,THS_FONT,X,Y,SIZE,ANGLE,
     &		%VAL(TRIBUF_LOC),%VAL(TRITAB_LOC),
     &		%VAL(SRIVEC(XSRIGQP)),%VAL(SRIVEC(XSRIGSP)),
     &		%VAL(SRIVEC(XSRIGQL)),%VAL(SRIVEC(XSRIGSL)),
     &		%VAL(SRIVEC(XSRIGQA)),%VAL(SRIVEC(XSRIGSA)),
     &		%VAL(SRIVEC(XSRI_END_AREA)))
C
999	RETURN
	END
C
	LOGICAL FUNCTION TRIPLT_SUB(CHARNO,THS_FONT,X,Y,SIZE,ANGLE,
     &		TRIBUF,TRITAB,
     &		SRIGQP,SRIGSP,
     &		SRIGQL,SRIGSL,SRIGQA,SRIGSA,
     &		SRI_END_AREA)
C
***	MODULE	TRIPLT_SUB
***	IDENT	26OC94
C
C Copyright Laser Scan Laboratories Ltd., Cambridge, England.
C
	IMPLICIT NONE
C
C args
C
	INTEGER*2	CHARNO		! character number
	INTEGER*2	THS_FONT	! font number (-ve for italic)
	REAL		X,Y		! position
	REAL		SIZE		! size
	REAL		ANGLE		! angle in radians
	REAL		TRIBUF(2,*)	! coords
	INTEGER*2	TRITAB(*)	! characters and SCT numbers 
	EXTERNAL	SRIGQP		! passed routine
	EXTERNAL	SRIGSP
	EXTERNAL	SRIGQL
	EXTERNAL	SRIGSL
	EXTERNAL	SRIGQA
	EXTERNAL	SRIGSA
	EXTERNAL	SRI_END_AREA
C
***	COMMON/LSL$CMNFRT:FRTTRI/
***	COMMON/LSL$CMNFRT:SRISCL/
***	COMMON/LSL$CMNFRT:TRIEXT/
C
C functions called
C
	LOGICAL		TRIFND		! find character
	LOGICAL		SRIPSC		! plot symbol component
C
C w/s
	INTEGER*4	I
	INTEGER*2	FONT
	INTEGER*4	FSNPTR		! start of new component
	INTEGER*4	NCOORD		! coords this component
	INTEGER*4	SCCODE		! component code
	REAL		LWIDTH		! linewidth scale factor
	INTEGER		PLCOLI		! polyline colour index
	INTEGER		FASTYLE		! fill area internal style
	INTEGER		FAINDEX		! fill area style index
	INTEGER		FACOLI		! fill area colour
	INTEGER*2	SYMNO		! symbol number
	INTEGER		LTYPE		! line type
	INTEGER		HW		! hardware tool
	REAL		ANG		! angle tool is at
C
C init things
C
	TRIPLT_SUB = .TRUE.	! assume will fail
	FONT   = ABS(THS_FONT)	! ignore -ve fonts here
	SRISTR = .FALSE.	! don't stretch symbol components
	NCOORD = 0
	SCCODE = -1
C
C if getting the coordinate extent, signal starting new character
C
	IF (GET_EXTENT) START_IT = .TRUE.
C
C check character currently selected and needs plotting
C
	IF (TRIFND(CHARNO,FONT)) GOTO 999
	IF (CHARNO.EQ.0.OR.CHARNO.EQ.32) THEN	! null and space
	   TRIPLT_SUB = .FALSE.	! succeeded
	   GOTO 999
	ENDIF
C
C save position of character, in case it is italicised
C
	TRIPOSX = X
	TRIPOSY = Y
	TRIANG  = ANGLE
C
C preserve polyline and fill area attributes
C
	CALL SRIGQP( LWIDTH, PLCOLI )
	CALL SRIGQL( LTYPE, HW, ANG)		! line characteristics
C
C preserve hatching characteristics in common, as they may be
C needed as default in SRIPSC
	CALL SRIGQA( FASTYLE, FAINDEX, FACOLI, SRIHAT )
C
C find the component parts and switch on action code
C
	SYMNO = CHARNO+FONT*256		! TR index
	DO 10 I=TRIIND,TRITOP
	   IF (TRITAB(I).LT.0) THEN	! start new component
	      IF (NCOORD.GT.0.AND.SCCODE.GE.0) THEN
	         IF(SRIPSC(NCOORD,TRIBUF(1,FSNPTR),SCCODE,
     &              X,Y,SIZE,ANGLE,
     &		    SRIGSL,SRIGSA,SRIGSP)) GOTO 998	! plot component
	      ENDIF
	      IF (TRITAB(I).NE.-32768) THEN
	         IF (SRIAREA) THEN
	            CALL SRI_END_AREA
	            SRIAREA = .FALSE.
	         ENDIF
	         IF (TRITAB(I).NE.-SYMNO) GOTO 50 ! end of this character
	         SCCODE = -1		! don't know code yet
	      ENDIF
	      FSNPTR = I		! start of this component
	      NCOORD = 1
	   ELSE				! continuing component
	      NCOORD = NCOORD + 1	! coords this component
	      SCCODE = TRITAB(I)
	   ENDIF
10	CONTINUE
C
C if get to here then CHARNO is last character in file (we hope)
C but there is still a component not yet plotted
C
	IF (SCCODE.GE.0) THEN
	   IF (SRIPSC(NCOORD,TRIBUF(1,FSNPTR),SCCODE,X,Y,SIZE,ANGLE,
     &		    SRIGSL,SRIGSA,SRIGSP)) GOTO 998	! plot component
	ENDIF
C
C all done
C
50	TRIPLT_SUB = .FALSE.		! success
C
C that's all
C restore the polyline and fill area attributes - restore colour
C also, just in case
C
998	IF (SRIAREA) THEN
	   CALL SRI_END_AREA
	   SRIAREA = .FALSE.
	ENDIF
	CALL SRIGSP( LWIDTH, PLCOLI )
	CALL SRIGSL( LTYPE, HW, ANG)		! line characteristics
	CALL SRIGSA( FASTYLE, FAINDEX, FACOLI, SRIHAT)
C
999	RETURN
	END
