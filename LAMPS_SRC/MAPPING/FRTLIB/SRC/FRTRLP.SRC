	LOGICAL FUNCTION FRTRLP(PATINT,PATDIM)
C
**	IDENT	12FE91
**	MODULE	FRTRLP
C
C Copyright LaserScan Laboratories Ltd., Cambridge, England
C
C Author Paul Hardy after SOL version by TJI
C PATSEL read as I*4 as it should be	PGH	10-Nov-1983
C amended for use with PATFND		PGH	16-Sep-1983
C Created				PGH	17-Jun-1983
C
C to read a line pattern from the FRT file
C
C Patt Major Minor Major  Minor  Overall Major Minor Major Minor Patt Offset
C Index UC    UC   Repeat Repeat Size    Size  Size  Width Width Flags
C 25    0     12    0      0      4.5     3.0   1.0   0.0   2.0  [7]  [1.5]
C
	IMPLICIT NONE
C
***	COMMON/LSL$CMNFRT:FRTPAT/	! for the pattern tables
C
C arguments
	INTEGER*2	PATINT(6,*)
	REAL		PATDIM(6,*)
C
C functions called
	LOGICAL		RDINT, RDREAL, RDLONG
C
C workspace
	INTEGER		I		! loop variable
	INTEGER		PATNXT		! next free pattern
	INTEGER*4	LONG
	INTEGER*2	WORD
	EQUIVALENCE	(LONG,WORD)
C
C init things
	FRTRLP = .FALSE.		! assume will succeed
C
C have we room ?
	IF (PATCNT.GE.PATLIM) GOTO 920	! no room
	PATNXT = PATCNT + 1		! next free pattern
C
C read the pattern number
	IF (RDLONG(PATSEL)) GOTO 980	! nothing there
	IF (PATSEL.LE.0) GOTO 980
C
C check it hasn't been defined previously
	IF (PATCNT.EQ.0) GOTO 10
	IF (PATSEL.LE.PATINT(1,PATCNT)) GOTO 930
C
C read the rest of the pattern definition
10	IF (RDINT(PATINT(2,PATNXT))) GOTO 980	! major unit
	IF (RDINT(PATINT(3,PATNXT))) GOTO 980	! minor unit
	IF (RDINT(PATINT(4,PATNXT))) GOTO 980	! major repeat
	IF (RDINT(PATINT(5,PATNXT))) GOTO 980	! minor repeat
	IF (RDREAL(PATDIM(1,PATNXT))) GOTO 980	! overall size
	IF (RDREAL(PATDIM(2,PATNXT))) GOTO 980	! major size
	IF (RDREAL(PATDIM(3,PATNXT))) GOTO 980	! minor size
	IF (RDREAL(PATDIM(4,PATNXT))) GOTO 980	! major width
	IF (RDREAL(PATDIM(5,PATNXT))) GOTO 980	! minor width
	IF (RDLONG(LONG)) THEN			! flag
	   PATINT(6,PATNXT) = 0			! default
	   PATDIM(6,PATNXT) = 0.0		! no offset
	ELSE
	   PATINT(6,PATNXT) = WORD 		! equivalenced to LONG
	   IF (RDREAL(PATDIM(6,PATNXT))) PATDIM(6,PATNXT) = 0.0 ! offset
	ENDIF
C
C check for consistency
	IF (	(PATDIM(1,PATNXT).LE.0.0) .OR.	! overall size
     &		(PATDIM(2,PATNXT).LT.0.0) .OR.	! major size
     &		(PATDIM(3,PATNXT).LT.0.0) .OR.	! minor size
     &		(PATINT(4,PATNXT).LT.0) .OR.	! major repeat
     &		(PATINT(5,PATNXT).LT.0)	.OR.	! minor repeat
     &		(PATDIM(6,PATNXT).LT.0.0) .OR.	! offset
     &		(PATDIM(6,PATNXT).GE.PATDIM(1,PATNXT))
     &				 ) GOTO 960

C
C zero length major and minor with neither substituted is not allowed
	IF (PATDIM(2,PATNXT).EQ.0.0.AND.PATDIM(3,PATNXT).EQ.0.0.AND.
     &	    PATINT(2,PATNXT).EQ.0.AND.PATINT(3,PATNXT).EQ.0) GOTO 940

	IF ( (PATINT(4,PATNXT)+1)*PATDIM(2,PATNXT)+
     &         (PATINT(5,PATNXT)+1)*PATDIM(3,PATNXT)
     &	     .GT. PATDIM(1,PATNXT)) GOTO 910	! too big

	IF (PATINT(2,PATNXT).NE.0.AND.
     &      PATDIM(4,PATNXT).LE.0.0) GOTO 950	! zero width symbol
	IF (PATINT(3,PATNXT).NE.0.AND.
     &      PATDIM(5,PATNXT).LE.0.0) GOTO 950	! zero width symbol
C
C success, its a valid pattern
	PATINT(1,PATNXT) = PATSEL	! pattern number
	PATCNT = PATNXT			! another one done
	GOTO 999			! all done
C
C here if pattern too big
910	CALL FRTWRT('Pattern %N overflows overall size',PATSEL)
	GOTO 990
C
C here if run out of places in the pattern table
920	CALL FRTWRT('No room in pattern table')
	GOTO 990
C
C here if pattern defined twice
930	CALL FRTWRT('Pattern %N out of order or repeated',PATSEL)
	GOTO 990
C
C here if all gap
940	CALL FRTWRT('Pattern %N is all gap',PATSEL)
	GOTO 990
C
C here if zero width symbol
950	CALL FRTWRT('Pattern %N has zero width symbol',PATSEL)
	GOTO 990
C
C here for zero or negative sizes or repeat counts
960	CALL FRTWRT('Pattern %N has bad size or repeat count',PATSEL)
	GOTO 990
C general error exit
980	CALL FRTWRT('Bad pattern definition')
990	FRTRLP = .TRUE.
999	RETURN
	END
