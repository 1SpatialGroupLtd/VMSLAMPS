C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1986-05-19 15:46:34.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
  	SUBROUTINE PATERR(OK,SYM,PATT)
C
***	MODULE	PATERR
***	IDENT	15MY86
C
C Copyright Laser Scan Laboratories Ltd., Cambridge, England.
C Author  R.W. Russell
C
C To return an error that has occurred while setting up a pattern
C definition (using PATSET(0)) or drawing a pattern (using PATGPL))
C by checking if the symbol is now suppressed, while it wasn't before
C
	IMPLICIT NONE
C
C args (out)
C
	LOGICAL		OK(2)		! substitution symbols found
	INTEGER		SYM(2)		! symbols not found
	INTEGER		PATT		! pattern number
C
***	COMMON/LSL$CMNFRT:FRTCOM/
***	COMMON/LSL$CMNFRT:PATDEF/
C
C W/s
	INTEGER		I
C
	DO 10,I=1,2
	   OK(I) = .NOT.(SUPSUB(I).AND.(SAVSUP(I).NEQV.SUPSUB(I)))
	   SYM(I) = DSUBSS(I)
   10	CONTINUE
C
	PATT = CURPAT
C
	RETURN
C
	END
