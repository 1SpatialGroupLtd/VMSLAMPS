C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1988-08-25 15:24:02.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
C
C Defines data structures to hold ACD information
C Note: this should not be available to users. The user accessible
C common block is included in this one
C
***	COMMON/LSL$CMNFRT:FRTACD/
C
	PARAMETER	ACD_COM_BOT = 100	! lowest released AC
	PARAMETER	ACD_COM_TOP = 139	! highest released AC
C
	INTEGER*4	ACDMAX			! maximum number of ACDs
	INTEGER*4	ACDBASE			! current offset base
	INTEGER*4	ACDCNT			! number of defined ACs
	INTEGER*2	ACDSAV(24)		! to save command table
						! note: i*2 so that table
						! can (grubbily) be made
						! exact match
	LOGICAL		ACD_HAD_TABLE
C
C now addresses of things in dynamic memory
C (address of command table itself is in common FRTACD)
	INTEGER*4	ACDNAM_LOC		! name array
	INTEGER*4	ACD_LOC			! main ACD table
C
	COMMON/FRTACD_P/ACDNAM_LOC,ACD_LOC,
     &			ACDMAX,ACDBASE,ACDCNT,ACDSAV,ACD_HAD_TABLE
C
C define a structure holding the information for one ACD
C ACD_LOC points to an array of ACDMAX of these
C
	STRUCTURE	/ACD/
	  INTEGER*2	CODE		! AC codes
	  BYTE		DATATYPE	! data types (1-5)
	  BYTE		%FILL		! waste byte to align
	  INTEGER*4	NAME(2)		! descriptors for names
	  INTEGER*4	FORMAT(2)	! descriptors for formats
	  UNION
	    MAP
	      INTEGER*4	MINMAXI(2)	! min and max; data typ 1
	    END MAP
	    MAP
	      REAL*4	MINMAXR(2)	!            ; data typ 2
	    END MAP
	    MAP
	      CHARACTER*4 MINMAXC(2)	!            ; data typ 3
	    END MAP
	  END UNION
	  REAL*4	INTERVAL	! significant interval
	END STRUCTURE
C
	INTEGER		ACDSIZ		! size of ACD structure in bytes
	PARAMETER	(ACDSIZ=32)
C
