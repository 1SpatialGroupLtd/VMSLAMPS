C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1991-02-14 17:37:28.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
C Common block for line pattern generationCC Dashed and chained lines are supported with repeat counts andC symbol substitution for both the major and minor dashesC	INTEGER	CURPAT		! current pattern code	INTEGER	DDCSTG		! current stage of pattern generation:-C				! =0 => before major dashC				! =1 => in major dashC				! =2 => in first gapC				! =3 => in minor dashC				! =4 => in second gap 	INTEGER	INISTG		! initial DDCSTG	REAL	DEFLEN,DDCLEN	! def/actual period length of pattern	REAL 	DEFMAJ,DDCMAJ	! size of major on	REAL	DEFMIN,DDCMIN	! size of minor on	REAL	DEFOFF		! offset at start	REAL	SAVOFF		! saved copy of it	REAL	DEFGAP,DDCGAP	! size of gap	REAL	DDCRES 		! residue of current pattern	REAL	INIRES		! initial DDCRES	REAL	SUBSTX,SUBSTY	! position for symbol substitution	REAL	SUBSTZ	REAL	SUBANG		! angle of current substituted symbol	REAL	DSUBSZ(2)	! maj/min substitution symbol sizes	REAL	DSUBST		! substitution symbol stretch factor	REAL	HLFDSH		! half the current dash length forC				! finding the position of subs symbols	REAL	CX(2),CY(2)	! holds the last point and next pointC				! to be plotted/moved to	REAL	CZ(2)	INTEGER	DSUBSS(2)	! maj/min substitution symbol codes	INTEGER DREPCT(2)	! repetition counts - major/minor dashes	INTEGER DREPOS		! number of repetitions outstandingC				! for current stage	INTEGER INIREP		! initial DREPOS	LOGICAL*1 PATFST	! set for 1st point of feature	LOGICAL*1 SUPCPT	! suppress current pattern if set	LOGICAL*1 SUPSUB(2)	! for suppressing substitution symbols	LOGICAL*1 SAVSUP(2)	! save of SUPSUP	LOGICAL*1 GOTPSN	! set once the position on the dash for				! symbol substitution has been found	LOGICAL*1 SYTURN(2)	! this symbol to be inverted?CC interpretation of flags wordC	LOGICAL*1 PHSRES	! phase restore at each vertex	LOGICAL*1 PATSCL	! scale pattern to fit feature	LOGICAL*1 SAVSCL	! saved copy of it	LOGICAL*1 SYINVT(2)	! invert major/minor symbol alternately	LOGICAL*1 SYHORZ(2)	! do not rotate major/minor symbol	LOGICAL*1 SYHDWR(2)	! use hardware to draw hardware symbol	LOGICAL*1 SYSTRT(2)	! stretch major/minor symbol	LOGICAL*1 DSHFIT(2)	! fit whole number of dashes	LOGICAL*1 DSHDRW(2)	! draw/suppress dashes	LOGICAL*1 DRALIN	! draw straight line if can't fit pat.	LOGICAL*1 SUPSYM	! suppress symbol at start pattern	LOGICAL*1 PATON		! pattern output on?C	COMMON/PATDEF/CURPAT,DDCSTG,INISTG,     &  DEFLEN,DEFMAJ,DEFMIN,DEFGAP,DEFOFF,     &  DDCLEN,DDCMAJ,DDCMIN,DDCGAP,     &	DDCRES,INIRES,     &  CX,CY,SUBSTX,SUBSTY,SUBANG,HLFDSH,     &  DSUBSS,DSUBSZ,DSUBST,     &  DREPOS,INIREP,DREPCT,     &  PATFST,SUPCPT,SUPSUB,SAVSUP,GOTPSN,     &	SYTURN,     &	PHSRES,PATSCL,SYINVT,SYHORZ,SYHDWR,SYSTRT,     &	DSHFIT,DSHDRW,     &	SAVSCL,DRALIN,SAVOFF,SUPSYM,	! ***** align     &	CZ,SUBSTZ,PATON