C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1987-05-01 13:20:06.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
CC MCE map/manuscript header - version 1CC Author TJ Ibbs, file created  		TJ Ibbs		21-Mar-1983C enhanced by 					CC Brunt	26-Aug-1983C Renamed block MAPHDR cf MHDMB and MHDEF	R.W. Russell	 4-Feb-1985C Manuscript type and coord type fields added	PGH		17-Jul-1985CC This common block defines the map/manuscript header for use by MCEC MCE conceive the map header as being divided into various sections:CC  1.	Sheet identityC  2.	SecurityC  3.	CoverageC  4.	Projection informationC  5.	Digitising informationC  6.	SpecificationC  7.	Sheet history information & datesC  8.	Accuracy informationC  9.	Processing datesC 10.	Status flagsC 11.	Terrain informationCC we maintain these divisions for ease of useC note that each division has a 'buffer region' after it, to allow forC possible extension, without having to actually reformat the wholeC common block.CC *********************************************************************CC  0.	Define the space we must work inCC we will use the same basic array names as in MHDMB, the OS map headerCC thus we first define the size of the basic map header array, whichC we won't, in fact, fillC	PARAMETER	MHLEN  = 350	! the length of the header	PARAMETER	MHI4SZ = 174	! and in longwordsCC and the array itself is thenC	INTEGER*2	MHARR( MHLEN )	! map header basic arrayCC having got our workspace, we need a second level of definitionCC we may regard this common block as two parts - the first part is aC standard descriptor, which is of the form:CC	type, number		'type' is byte, word, longword, etcC	type, number		'number' is how many there are of themC	...   ...C	0,    0CC (in the future it may be of the form:CC	customer, format versionC	type,     numberC	type,     numberC	...       ...C	0,        0CC to cope with different types of map header)CC this descriptor is set up by anything which CREATES an IFF file fromC scratch. It is used by IED, etc, to decide how to display the mapC header. For OS, as for here, we just regard the entire thing as anC array of longwords, for simplicity.CC thus we only need 4 bytes (one type,number pair, one zero,zeroC terminator).CC following this we have a longword (integer*4) view of the rest ofC the MHARR array, and superimposed on this, a byte view of the same.C	BYTE		MHDESC( 4 )	INTEGER*4	MHINT4( MHI4SZ )	BYTE		MHI4BY( MHI4SZ*4 )C	EQUIVALENCE	( MHARR(1), MHDESC(1) )	EQUIVALENCE	( MHARR(3), MHINT4(1) )	EQUIVALENCE	( MHI4BY(1),MHINT4(1) )CCC and we can actually declare the common here, before getting down toC individual fieldsC	COMMON	/MAPHDR/ MHARRCCC *********************************************************************CC  1.	Sheet identityC	BYTE		MHTASK(6)	! TASK name	    ( 6 chars)	BYTE		MHSHT(12)	! SHeeT name	    (12 chars)	BYTE		MHEDN		! EDitioN no	    (1-99)	BYTE		MHTYPE(6)	! file TYPE	    ( 6 chars)	BYTE		MHLEV		! LEVel of map	    (1-9)	BYTE		MHWAC(8)	! WAC number/id	    ( 8 chars)	BYTE		MHCOCO(15)	! country coverage  (15 chars)	BYTE		MHREFN(15)	! unique reference  (15 chars)	BYTE		MHMANU		! Manuscript type   (0-1)	BYTE		MHCOOR		! Coordinate type   (1-3)C	EQUIVALENCE	(MHTASK, MHI4BY(1))		! byte  1- 6	EQUIVALENCE	(MHSHT,  MHI4BY(7))		! byte  7-18	EQUIVALENCE	(MHEDN,  MHI4BY(19))		! byte 19	EQUIVALENCE	(MHTYPE, MHI4BY(20))		! byte 20-25	EQUIVALENCE	(MHLEV,  MHI4BY(26))		! byte 26	EQUIVALENCE	(MHWAC,  MHI4BY(27))		! byte 27-34	EQUIVALENCE	(MHCOCO, MHI4BY(35))		! byte 35-49	EQUIVALENCE	(MHREFN, MHI4BY(50))		! byte 50-64	EQUIVALENCE	(MHMANU, MHI4BY(65))		! byte 65	EQUIVALENCE	(MHCOOR, MHI4BY(66))		! byte 66C							!*byte 67-100CC TASK (series) name is the name of the particular series of whichC this manuscript forms a part (eg UKL2 - UK Level 2)CC SHT is the SHeeT name/number of this manuscript within that taskC (eg BM 3906)CC EDN gives the EDitioN number (eg 2)CC TYPE is the file TYPE - what type of data we are dealing withC (eg DFAD)CC LEV gives the LEVel of this data (eg 2)CC WAC is the World Aeronautical Code of this map (eg 01512315)CC COCO is a description of the COuntry COverage (eg UK/NI)CC REFN is a unique reference for this map (eg UKL2 39-06)CC MANU is the manuscript type. 0 is Terrain, 1 is Culture.CC COOR is the Coordinate type.	0 is sheet mmC				1 is grid mC				2 is unusedC				3 is geog 1/10 secondsCC *********************************************************************CC  2.	SecurityC	BYTE		MHSEC		! SECurity	    (0-99)	BYTE		MHSECD		! SECurity desc	    (1 char)	BYTE		MHREL		! RELeasability	    (0-99)	BYTE		MHSHD(27)	! Sec Handling Desc (27 chars)C	EQUIVALENCE	(MHSEC,  MHI4BY(101))		! byte 101	EQUIVALENCE	(MHSECD, MHI4BY(102))		! byte 102	EQUIVALENCE	(MHREL,  MHI4BY(103))		! byte 103	EQUIVALENCE	(MHSHD,  MHI4BY(104))		! byte 104-130C							!*byte 131-160CC SEC is the SECurity classification of this map -C values are something like:	Top Secret	4C				Secret		3C				Confidential	2C				Restricted	1C				Unclassified	0CC SECD is a one character SECurity Descriptor (eg C)CC REL is the RELeasability code, and has values derived from the textC associated withCC SHD which is the Security Handling DescriptionC (eg LASERSCAN EYES ONLY)CC *********************************************************************CC  3.	Coverage - let us define where the map fallsCC firstly in grid metresC	INTEGER*4	MHMSWE		! Map SW Cnr (E) (0-10 000 000)	INTEGER*4	MHMSWN		! Map SW Cnr (N) (0-10 000 000)	INTEGER*4	MHMLEW		! E-W limit	 (0-10 000 000)	INTEGER*4	MHMLNS		! N-S limit	 (0-10 000 000)C	EQUIVALENCE	(MHMSWE, MHINT4(41))		! byte 161-164	EQUIVALENCE	(MHMSWN, MHINT4(42))		! byte 165-168	EQUIVALENCE	(MHMLEW, MHINT4(43))		! byte 169-172	EQUIVALENCE	(MHMLNS, MHINT4(44))		! byte 173-176CC and then define the corners in Geographicals (units are tenths ofC a second)C	INTEGER*4	MHLASW		! SW cnr (lat)	 (0+/- 90 deg)	INTEGER*4	MHLOSW		! SW cnr (long)	 (0+/-180 deg)	INTEGER*4	MHLASE		! SE cnr (lat)	 (0+/- 90 deg)	INTEGER*4	MHLOSE		! SE cnr (long)	 (0+/-180 deg)	INTEGER*4	MHLANE		! NE cnr (lat)	 (0+/- 90 deg)	INTEGER*4	MHLONE		! NE cnr (long)	 (0+/-180 deg)	INTEGER*4	MHLANW		! NW cnr (lat)	 (0+/- 90 deg)	INTEGER*4	MHLONW		! NW cnr (long)	 (0+/-180 deg)C	EQUIVALENCE	(MHLASW, MHINT4(45))		! byte 177-180	EQUIVALENCE	(MHLOSW, MHINT4(46))		! byte 181-184	EQUIVALENCE	(MHLASE, MHINT4(47))		! byte 185-188	EQUIVALENCE	(MHLOSE, MHINT4(48))		! byte 189-192	EQUIVALENCE	(MHLANE, MHINT4(49))		! byte 193-196	EQUIVALENCE	(MHLONE, MHINT4(50))		! byte 197-200	EQUIVALENCE	(MHLANW, MHINT4(51))		! byte 201-204	EQUIVALENCE	(MHLONW, MHINT4(52))		! byte 205-208CC and define the origin and extent in geographicalsC units and size limitations as aboveC	INTEGER*4	MHLAMO		! ms origin (lat)  (0+/-90 deg)	INTEGER*4	MHLOMO		! ms origin (long) (0+/-180deg)	INTEGER*4	MHLAEX		! geog extent (lat)  (0-90 deg)	INTEGER*4	MHLOEX		! geog extent (long) (0-90 deg)C	EQUIVALENCE	(MHLAMO, MHINT4(53))		! byte 209-212	EQUIVALENCE	(MHLOMO, MHINT4(54))		! byte 213-216	EQUIVALENCE	(MHLAEX, MHINT4(55))		! byte 217-220	EQUIVALENCE	(MHLOEX, MHINT4(56))		! byte 221-224C							!*byte 224-250CC we define the position of the bottom left hand corner (most south andC west corner) in both grid metres and geographicals, and we alsoC define the extent of the map in the same. All corners are recorded inC geographicals.CC MSWE, MSWN are the Map SW corner Easting and NorthingC MLEW, MLNS are the Map Limits (extents) both E-W and N-SCC LASW, LOSW, LASE, etc are the LAtitude and LOngitude of eachC corner in turnCC LAMO, LOMO are the LAtitude and LOngitude of the Manuscript OriginC LAEX, LOEX are the LAtitude and LOngitude extents of the mapCC *********************************************************************CC  4.	ProjectionC	BYTE		MHPROJ(12)	! PROJection	   (12 chars)	BYTE		MHSPH(15)	! SPHeroid	   (15 chars)	INTEGER*4	MHCMER		! Central Meridian (0-180 deg)	INTEGER*4	MHLAFO		! Lat False Origin (0- 90 deg)	INTEGER*4	MHNPAR		! Stndrd PARl (N)  (0- 90 deg)	INTEGER*4	MHSPAR		! Stndrd PARl (S)  (0- 90 deg)C	EQUIVALENCE	(MHPROJ, MHI4BY(251))	! byte 251-262	EQUIVALENCE	(MHSPH,  MHI4BY(263))	! byte 263-277C						!*byte 278-280	EQUIVALENCE	(MHCMER, MHINT4(71))	! byte 281-284	EQUIVALENCE	(MHLAFO, MHINT4(72))	! byte 285-288	EQUIVALENCE	(MHNPAR, MHINT4(73))	! byte 289-292	EQUIVALENCE	(MHSPAR, MHINT4(74))	! byte 293-296C						!*byte 297-322CC PROJ is the name of the PROJection used for this map (eg LC0)CC SPH  is the name of the SPHeroid used (eg INTERNATIONAL)CC CMER is the Central MERidian, stored as integer secondsCC LAFO is the Latitude Of False Origin (again as integer seconds)CC NPAR is the North standard ParallelC SPAR is the South standard Parallel	both in integer secondsCC *********************************************************************CC  5.	Digitising informationC	BYTE		MHMENU(9)	! MENU name	(9 chars)	INTEGER*4	MHDGSC		! Dig Scale	(0-200 000 000)	INTEGER*4	MHDBSC		! DB Scale	(0-200 000 000)	BYTE		MHDSYS(10)	! dig system	(10 chars)C	EQUIVALENCE	(MHMENU, MHI4BY(323))	! byte 323-331C						!*byte 332	EQUIVALENCE	(MHDGSC, MHINT4(84))	! byte 333-336	EQUIVALENCE	(MHDBSC, MHINT4(85))	! byte 337-340	EQUIVALENCE	(MHDSYS, MHI4BY(341))	! byte 341-350C						!*byte 350-360CC MENU name is the name of the menu to use with this manuscript (itC is the VAX file name of it, without .MEN extension, eg DLMSUKL2)CC DGSC is the SCale the map was DiGitised atCC DBSC is the SCale it is held in the DataBase atCC DSYS is the name of the SYStem with which the map was DigitisedCC *********************************************************************CC  6.	SpecificationC	BYTE		MHPCDE(8)	! Producer CoDE	      (8 chars)	BYTE		MHPSSN(9)	! Prdct Spec Stock No (9 chars)	BYTE		MHPSCN		! Prdct Spec ChangeNo (0-99)	INTEGER*4	MHPSDT		! Prdct Spec Date     (date)	INTEGER*4	MHVAL		! VALidatn table      (0-9999)C	EQUIVALENCE	(MHPCDE, MHI4BY(361))	! byte 361-368	EQUIVALENCE	(MHPSSN, MHI4BY(369))	! byte 369-377	EQUIVALENCE	(MHPSCN, MHI4BY(378))	! byte 378C						!*byte 379-380	EQUIVALENCE	(MHPSDT, MHINT4(96))	! byte 381-384	EQUIVALENCE	(MHVAL,  MHINT4(97))	! byte 385-388C						!*byte 389-400CC PCDE is the Producer CoDE (eg UKMODMCE) (who produced this map)CC PSSN is the Product Specification Stock Number (eg SPECXDLMS)C (describes the specification to which this was made/digitised)CC PSCN is the Product Specification Change Number (eg 03)C (DFAD change number, etc)CC PSDT is the Product Specification DaTe (held as binary days)CC VALidation table is something I don't know about (eg 7702)CC *********************************************************************CC  7.	Sheet history information and datesC	INTEGER*4	MHCDTE		! Comp/anal DaTE   (date)	BYTE		MHCTYP		! Compilation TYPe (1 char)	INTEGER*4	MHMDTE		! Maintenance DaTE (date)	BYTE		MHMCDE(4)	! Mtce descn CoDE  (4 chars)	INTEGER*4	MHMMD		! Match/Merge Date (date)	BYTE		MHMMV		! Match/Merge Ver  (1 char)	INTEGER*4	MHMCD		! Currency Date	   (date)	INTEGER*4	MHREV		! REVision date	   (date)C	EQUIVALENCE	(MHCDTE, MHINT4(101))	! byte 401-404	EQUIVALENCE	(MHCTYP, MHI4BY(405))	! byte 405C						!*byte 406-408	EQUIVALENCE	(MHMDTE, MHINT4(103))	! byte 409-412	EQUIVALENCE	(MHMCDE, MHI4BY(413))	! byte 413-416	EQUIVALENCE	(MHMMD,  MHINT4(105))	! byte 417-420	EQUIVALENCE	(MHMMV,  MHI4BY(421))	! byte 421C						!*byte 422-424	EQUIVALENCE	(MHMCD,  MHINT4(107))	! byte 425-428	EQUIVALENCE	(MHREV,  MHINT4(108))	! byte 429-432C						!*byte 432-460CC CDTE is the Compilation/analysis DaTE (stored as binary days sinceC some date in 1900)CC CTYP is the Compilation TYPe (eg B)CC MDTE is the Maintenance DaTECC MCDE is the Maintenance description CoDE (eg AAAA)CC MMD  is the Match/Merge DateC MMV  is the Match/Merge Version (eg A)CC MCD is the Map Currency DateCC REV is the REVision cut-off dateCC *********************************************************************CC  8.	Accuracy informationCC	(NB for DFAD change 3 and upwards tapes, accuracy polygonsC	 are stored in layer 0 of the IFF file)C	BYTE		MHHDTM(5)	! Horizontal DaTuM    (5 chars)	BYTE		MHVDTM(3)	! Vertical DaTuM      (3 chars)	INTEGER*4	MHAHAC		! Abs Hor Accuracy    (0-9999)	INTEGER*4	MHAVAC		! Abs Ver Accuracy    (0-9999)	INTEGER*4	MHRHAC		! Rel Hor Accuracy    (0-9999)	INTEGER*4	MHRVAC		! Rel Ver Accuracy    (0-9999)	INTEGER*4	MHVHAC		! Vert Heighting Acc  (0-9999)C	EQUIVALENCE	(MHHDTM, MHI4BY(461))	! byte 461-465	EQUIVALENCE	(MHVDTM, MHI4BY(466))	! byte 466-468	EQUIVALENCE	(MHAHAC, MHINT4(118))	! byte 469-472	EQUIVALENCE	(MHAVAC, MHINT4(119))	! byte 473-476	EQUIVALENCE	(MHRHAC, MHINT4(120))	! byte 477-480	EQUIVALENCE	(MHRVAC, MHINT4(121))	! byte 481-484	EQUIVALENCE	(MHVHAC, MHINT4(122))	! byte 485-488C						!*byte 489-500CC HDTM is the Horizontal DaTuM (eg WGS72)C VDTM is the Vertical   DaTuM (eg MSL)CC AHAC, AVAC are the Absolute Horizontal and Vertical AccuraciesCC RHAC, RVAC are the Relative Horizontal and Vertical AccuraciesCC VHAC is the Vertical Heighting ACcuracyCC *********************************************************************CC  9.	Processing datesC	INTEGER*4	MHDUP1		! Digital Update 1	(date)	INTEGER*4	MHDUP2		! Digital Update 2	(date)	INTEGER*4	MHDUP3		! Digital Update 3	(date)	INTEGER*4	MHDUP4		! Digital Update 4	(date)	INTEGER*4	MHDUP5		! Digital Update 5	(date)	INTEGER*4	MHDUP6		! Digital Update 6	(date)	INTEGER*4	MHDLH		! Date last handled	(date)C	INTEGER*4	MHDUP(6)	! for all the DUP fields	EQUIVALENCE	(MHDUP1,MHDUP(1))C	EQUIVALENCE	(MHDUP1, MHINT4(126))	! byte 501-504	EQUIVALENCE	(MHDUP2, MHINT4(127))	! byte 505-508	EQUIVALENCE	(MHDUP3, MHINT4(128))	! byte 509-512	EQUIVALENCE	(MHDUP4, MHINT4(129))	! byte 513-516	EQUIVALENCE	(MHDUP5, MHINT4(130))	! byte 517-520	EQUIVALENCE	(MHDUP6, MHINT4(131))	! byte 521-524	EQUIVALENCE	(MHDLH,  MHINT4(132))	! byte 525-528C						!*byte 529-540CC DUPx are the Digital UPdate fields. Each is a date when the map hasC been updated, with DUP1 being the most recent, DUP2 the next, etcC These values scroll round (DUP2 <- DUP1 when DUP1 changes, etc),C with DUP6 being discarded as necessaryCC DLH is the date last handled for the mapCC *********************************************************************CC 10.	Status flagsC	BYTE		MHEMSN		! Edge Match N	   (yes/no)	BYTE		MHEMSE		! Edge Match E	   (yes/no)	BYTE		MHEMSS		! Edge Match S	   (yes/no)	BYTE		MHEMSW		! Edge Match W	   (yes/no)	BYTE		MHFLAG		! Processing flag  (0-9)C	EQUIVALENCE	(MHEMSN, MHI4BY(541))	! byte 541	EQUIVALENCE	(MHEMSE, MHI4BY(542))	! byte 542	EQUIVALENCE	(MHEMSS, MHI4BY(543))	! byte 543	EQUIVALENCE	(MHEMSW, MHI4BY(544))	! byte 544	EQUIVALENCE	(MHFLAG, MHI4BY(545))	! byte 545C						!*byte 546-580CC EMSN...W are the Edge Match Status flags for each of the four sidesC of the map, containing a simple yes/no value (TRUE/FALSE)CC FLAG is the processing status FLAG, use undefined as yetCC *********************************************************************CC 11.	Terrain informationC	INTEGER*4	MHCLOD		! CLOckwise ori Data (0-180deg)	INTEGER*4	MHLAIN		! LAtitude interval  (0-9999)	INTEGER*4	MHLOIN		! LOngitude ditto    (0-9999)	INTEGER*4	MHLALI		! no of LAt  LInes   (0-9999)	INTEGER*4	MHLOLI		! no of LOng LInes   (0-9999)	BYTE		MHPCIN		! Partial Cell INdicr(0-99)C	EQUIVALENCE	(MHCLOD, MHINT4(146))	! byte 581-584	EQUIVALENCE	(MHLAIN, MHINT4(147))	! byte 585-588	EQUIVALENCE	(MHLOIN, MHINT4(148))	! byte 589-592	EQUIVALENCE	(MHLALI, MHINT4(149))	! byte 593-596	EQUIVALENCE	(MHLOLI, MHINT4(150))	! byte 597-600	EQUIVALENCE	(MHPCIN, MHI4BY(601))	! byte 601C						!*byte 602-696CC CLOD is the CLockwise Orientation of the Data, in integer tenths ofC a secondCC LAIN, LOIN are the LAtitude and LOngitude INtervalsCC LALI, LOLI are the number of LInes of LAtitude and LOngitudeCC PCIN is the Partial Cell INdicatorCC *********************************************************************C