C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1987-05-01 13:20:06.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
C
C MCE map/manuscript header - version 1
C
C Author TJ Ibbs, file created  		TJ Ibbs		21-Mar-1983
C enhanced by 					CC Brunt	26-Aug-1983
C Renamed block MAPHDR cf MHDMB and MHDEF	R.W. Russell	 4-Feb-1985
C Manuscript type and coord type fields added	PGH		17-Jul-1985
C
C This common block defines the map/manuscript header for use by MCE
C MCE conceive the map header as being divided into various sections:
C
C  1.	Sheet identity
C  2.	Security
C  3.	Coverage
C  4.	Projection information
C  5.	Digitising information
C  6.	Specification
C  7.	Sheet history information & dates
C  8.	Accuracy information
C  9.	Processing dates
C 10.	Status flags
C 11.	Terrain information
C
C we maintain these divisions for ease of use
C note that each division has a 'buffer region' after it, to allow for
C possible extension, without having to actually reformat the whole
C common block.
C
C *********************************************************************
C
C  0.	Define the space we must work in
C
C we will use the same basic array names as in MHDMB, the OS map header
C
C thus we first define the size of the basic map header array, which
C we won't, in fact, fill
C
	PARAMETER	MHLEN  = 350	! the length of the header
	PARAMETER	MHI4SZ = 174	! and in longwords
C
C and the array itself is then
C
	INTEGER*2	MHARR( MHLEN )	! map header basic array
C
C having got our workspace, we need a second level of definition
C
C we may regard this common block as two parts - the first part is a
C standard descriptor, which is of the form:
C
C	type, number		'type' is byte, word, longword, etc
C	type, number		'number' is how many there are of them
C	...   ...
C	0,    0
C
C (in the future it may be of the form:
C
C	customer, format version
C	type,     number
C	type,     number
C	...       ...
C	0,        0
C
C to cope with different types of map header)
C
C this descriptor is set up by anything which CREATES an IFF file from
C scratch. It is used by IED, etc, to decide how to display the map
C header. For OS, as for here, we just regard the entire thing as an
C array of longwords, for simplicity.
C
C thus we only need 4 bytes (one type,number pair, one zero,zero
C terminator).
C
C following this we have a longword (integer*4) view of the rest of
C the MHARR array, and superimposed on this, a byte view of the same.
C
	BYTE		MHDESC( 4 )
	INTEGER*4	MHINT4( MHI4SZ )
	BYTE		MHI4BY( MHI4SZ*4 )
C
	EQUIVALENCE	( MHARR(1), MHDESC(1) )
	EQUIVALENCE	( MHARR(3), MHINT4(1) )
	EQUIVALENCE	( MHI4BY(1),MHINT4(1) )
C
C
C and we can actually declare the common here, before getting down to
C individual fields
C
	COMMON	/MAPHDR/ MHARR
C
C
C *********************************************************************
C
C  1.	Sheet identity
C
	BYTE		MHTASK(6)	! TASK name	    ( 6 chars)
	BYTE		MHSHT(12)	! SHeeT name	    (12 chars)
	BYTE		MHEDN		! EDitioN no	    (1-99)
	BYTE		MHTYPE(6)	! file TYPE	    ( 6 chars)
	BYTE		MHLEV		! LEVel of map	    (1-9)
	BYTE		MHWAC(8)	! WAC number/id	    ( 8 chars)
	BYTE		MHCOCO(15)	! country coverage  (15 chars)
	BYTE		MHREFN(15)	! unique reference  (15 chars)
	BYTE		MHMANU		! Manuscript type   (0-1)
	BYTE		MHCOOR		! Coordinate type   (1-3)
C
	EQUIVALENCE	(MHTASK, MHI4BY(1))		! byte  1- 6
	EQUIVALENCE	(MHSHT,  MHI4BY(7))		! byte  7-18
	EQUIVALENCE	(MHEDN,  MHI4BY(19))		! byte 19
	EQUIVALENCE	(MHTYPE, MHI4BY(20))		! byte 20-25
	EQUIVALENCE	(MHLEV,  MHI4BY(26))		! byte 26
	EQUIVALENCE	(MHWAC,  MHI4BY(27))		! byte 27-34
	EQUIVALENCE	(MHCOCO, MHI4BY(35))		! byte 35-49
	EQUIVALENCE	(MHREFN, MHI4BY(50))		! byte 50-64
	EQUIVALENCE	(MHMANU, MHI4BY(65))		! byte 65
	EQUIVALENCE	(MHCOOR, MHI4BY(66))		! byte 66
C							!*byte 67-100
C
C TASK (series) name is the name of the particular series of which
C this manuscript forms a part (eg UKL2 - UK Level 2)
C
C SHT is the SHeeT name/number of this manuscript within that task
C (eg BM 3906)
C
C EDN gives the EDitioN number (eg 2)
C
C TYPE is the file TYPE - what type of data we are dealing with
C (eg DFAD)
C
C LEV gives the LEVel of this data (eg 2)
C
C WAC is the World Aeronautical Code of this map (eg 01512315)
C
C COCO is a description of the COuntry COverage (eg UK/NI)
C
C REFN is a unique reference for this map (eg UKL2 39-06)
C
C MANU is the manuscript type. 0 is Terrain, 1 is Culture.
C
C COOR is the Coordinate type.	0 is sheet mm
C				1 is grid m
C				2 is unused
C				3 is geog 1/10 seconds
C
C *********************************************************************
C
C  2.	Security
C
	BYTE		MHSEC		! SECurity	    (0-99)
	BYTE		MHSECD		! SECurity desc	    (1 char)
	BYTE		MHREL		! RELeasability	    (0-99)
	BYTE		MHSHD(27)	! Sec Handling Desc (27 chars)
C
	EQUIVALENCE	(MHSEC,  MHI4BY(101))		! byte 101
	EQUIVALENCE	(MHSECD, MHI4BY(102))		! byte 102
	EQUIVALENCE	(MHREL,  MHI4BY(103))		! byte 103
	EQUIVALENCE	(MHSHD,  MHI4BY(104))		! byte 104-130
C							!*byte 131-160
C
C SEC is the SECurity classification of this map -
C values are something like:	Top Secret	4
C				Secret		3
C				Confidential	2
C				Restricted	1
C				Unclassified	0
C
C SECD is a one character SECurity Descriptor (eg C)
C
C REL is the RELeasability code, and has values derived from the text
C associated with
C
C SHD which is the Security Handling Description
C (eg LASERSCAN EYES ONLY)
C
C *********************************************************************
C
C  3.	Coverage - let us define where the map falls
C
C firstly in grid metres
C
	INTEGER*4	MHMSWE		! Map SW Cnr (E) (0-10 000 000)
	INTEGER*4	MHMSWN		! Map SW Cnr (N) (0-10 000 000)
	INTEGER*4	MHMLEW		! E-W limit	 (0-10 000 000)
	INTEGER*4	MHMLNS		! N-S limit	 (0-10 000 000)
C
	EQUIVALENCE	(MHMSWE, MHINT4(41))		! byte 161-164
	EQUIVALENCE	(MHMSWN, MHINT4(42))		! byte 165-168
	EQUIVALENCE	(MHMLEW, MHINT4(43))		! byte 169-172
	EQUIVALENCE	(MHMLNS, MHINT4(44))		! byte 173-176
C
C and then define the corners in Geographicals (units are tenths of
C a second)
C
	INTEGER*4	MHLASW		! SW cnr (lat)	 (0+/- 90 deg)
	INTEGER*4	MHLOSW		! SW cnr (long)	 (0+/-180 deg)
	INTEGER*4	MHLASE		! SE cnr (lat)	 (0+/- 90 deg)
	INTEGER*4	MHLOSE		! SE cnr (long)	 (0+/-180 deg)
	INTEGER*4	MHLANE		! NE cnr (lat)	 (0+/- 90 deg)
	INTEGER*4	MHLONE		! NE cnr (long)	 (0+/-180 deg)
	INTEGER*4	MHLANW		! NW cnr (lat)	 (0+/- 90 deg)
	INTEGER*4	MHLONW		! NW cnr (long)	 (0+/-180 deg)
C
	EQUIVALENCE	(MHLASW, MHINT4(45))		! byte 177-180
	EQUIVALENCE	(MHLOSW, MHINT4(46))		! byte 181-184
	EQUIVALENCE	(MHLASE, MHINT4(47))		! byte 185-188
	EQUIVALENCE	(MHLOSE, MHINT4(48))		! byte 189-192
	EQUIVALENCE	(MHLANE, MHINT4(49))		! byte 193-196
	EQUIVALENCE	(MHLONE, MHINT4(50))		! byte 197-200
	EQUIVALENCE	(MHLANW, MHINT4(51))		! byte 201-204
	EQUIVALENCE	(MHLONW, MHINT4(52))		! byte 205-208
C
C and define the origin and extent in geographicals
C units and size limitations as above
C
	INTEGER*4	MHLAMO		! ms origin (lat)  (0+/-90 deg)
	INTEGER*4	MHLOMO		! ms origin (long) (0+/-180deg)
	INTEGER*4	MHLAEX		! geog extent (lat)  (0-90 deg)
	INTEGER*4	MHLOEX		! geog extent (long) (0-90 deg)
C
	EQUIVALENCE	(MHLAMO, MHINT4(53))		! byte 209-212
	EQUIVALENCE	(MHLOMO, MHINT4(54))		! byte 213-216
	EQUIVALENCE	(MHLAEX, MHINT4(55))		! byte 217-220
	EQUIVALENCE	(MHLOEX, MHINT4(56))		! byte 221-224
C							!*byte 224-250
C
C we define the position of the bottom left hand corner (most south and
C west corner) in both grid metres and geographicals, and we also
C define the extent of the map in the same. All corners are recorded in
C geographicals.
C
C MSWE, MSWN are the Map SW corner Easting and Northing
C MLEW, MLNS are the Map Limits (extents) both E-W and N-S
C
C LASW, LOSW, LASE, etc are the LAtitude and LOngitude of each
C corner in turn
C
C LAMO, LOMO are the LAtitude and LOngitude of the Manuscript Origin
C LAEX, LOEX are the LAtitude and LOngitude extents of the map
C
C *********************************************************************
C
C  4.	Projection
C
	BYTE		MHPROJ(12)	! PROJection	   (12 chars)
	BYTE		MHSPH(15)	! SPHeroid	   (15 chars)
	INTEGER*4	MHCMER		! Central Meridian (0-180 deg)
	INTEGER*4	MHLAFO		! Lat False Origin (0- 90 deg)
	INTEGER*4	MHNPAR		! Stndrd PARl (N)  (0- 90 deg)
	INTEGER*4	MHSPAR		! Stndrd PARl (S)  (0- 90 deg)
C
	EQUIVALENCE	(MHPROJ, MHI4BY(251))	! byte 251-262
	EQUIVALENCE	(MHSPH,  MHI4BY(263))	! byte 263-277
C						!*byte 278-280
	EQUIVALENCE	(MHCMER, MHINT4(71))	! byte 281-284
	EQUIVALENCE	(MHLAFO, MHINT4(72))	! byte 285-288
	EQUIVALENCE	(MHNPAR, MHINT4(73))	! byte 289-292
	EQUIVALENCE	(MHSPAR, MHINT4(74))	! byte 293-296
C						!*byte 297-322
C
C PROJ is the name of the PROJection used for this map (eg LC0)
C
C SPH  is the name of the SPHeroid used (eg INTERNATIONAL)
C
C CMER is the Central MERidian, stored as integer seconds
C
C LAFO is the Latitude Of False Origin (again as integer seconds)
C
C NPAR is the North standard Parallel
C SPAR is the South standard Parallel	both in integer seconds
C
C *********************************************************************
C
C  5.	Digitising information
C
	BYTE		MHMENU(9)	! MENU name	(9 chars)
	INTEGER*4	MHDGSC		! Dig Scale	(0-200 000 000)
	INTEGER*4	MHDBSC		! DB Scale	(0-200 000 000)
	BYTE		MHDSYS(10)	! dig system	(10 chars)
C
	EQUIVALENCE	(MHMENU, MHI4BY(323))	! byte 323-331
C						!*byte 332
	EQUIVALENCE	(MHDGSC, MHINT4(84))	! byte 333-336
	EQUIVALENCE	(MHDBSC, MHINT4(85))	! byte 337-340
	EQUIVALENCE	(MHDSYS, MHI4BY(341))	! byte 341-350
C						!*byte 350-360
C
C MENU name is the name of the menu to use with this manuscript (it
C is the VAX file name of it, without .MEN extension, eg DLMSUKL2)
C
C DGSC is the SCale the map was DiGitised at
C
C DBSC is the SCale it is held in the DataBase at
C
C DSYS is the name of the SYStem with which the map was Digitised
C
C *********************************************************************
C
C  6.	Specification
C
	BYTE		MHPCDE(8)	! Producer CoDE	      (8 chars)
	BYTE		MHPSSN(9)	! Prdct Spec Stock No (9 chars)
	BYTE		MHPSCN		! Prdct Spec ChangeNo (0-99)
	INTEGER*4	MHPSDT		! Prdct Spec Date     (date)
	INTEGER*4	MHVAL		! VALidatn table      (0-9999)
C
	EQUIVALENCE	(MHPCDE, MHI4BY(361))	! byte 361-368
	EQUIVALENCE	(MHPSSN, MHI4BY(369))	! byte 369-377
	EQUIVALENCE	(MHPSCN, MHI4BY(378))	! byte 378
C						!*byte 379-380
	EQUIVALENCE	(MHPSDT, MHINT4(96))	! byte 381-384
	EQUIVALENCE	(MHVAL,  MHINT4(97))	! byte 385-388
C						!*byte 389-400
C
C PCDE is the Producer CoDE (eg UKMODMCE) (who produced this map)
C
C PSSN is the Product Specification Stock Number (eg SPECXDLMS)
C (describes the specification to which this was made/digitised)
C
C PSCN is the Product Specification Change Number (eg 03)
C (DFAD change number, etc)
C
C PSDT is the Product Specification DaTe (held as binary days)
C
C VALidation table is something I don't know about (eg 7702)
C
C *********************************************************************
C
C  7.	Sheet history information and dates
C
	INTEGER*4	MHCDTE		! Comp/anal DaTE   (date)
	BYTE		MHCTYP		! Compilation TYPe (1 char)
	INTEGER*4	MHMDTE		! Maintenance DaTE (date)
	BYTE		MHMCDE(4)	! Mtce descn CoDE  (4 chars)
	INTEGER*4	MHMMD		! Match/Merge Date (date)
	BYTE		MHMMV		! Match/Merge Ver  (1 char)
	INTEGER*4	MHMCD		! Currency Date	   (date)
	INTEGER*4	MHREV		! REVision date	   (date)
C
	EQUIVALENCE	(MHCDTE, MHINT4(101))	! byte 401-404
	EQUIVALENCE	(MHCTYP, MHI4BY(405))	! byte 405
C						!*byte 406-408
	EQUIVALENCE	(MHMDTE, MHINT4(103))	! byte 409-412
	EQUIVALENCE	(MHMCDE, MHI4BY(413))	! byte 413-416
	EQUIVALENCE	(MHMMD,  MHINT4(105))	! byte 417-420
	EQUIVALENCE	(MHMMV,  MHI4BY(421))	! byte 421
C						!*byte 422-424
	EQUIVALENCE	(MHMCD,  MHINT4(107))	! byte 425-428
	EQUIVALENCE	(MHREV,  MHINT4(108))	! byte 429-432
C						!*byte 432-460
C
C CDTE is the Compilation/analysis DaTE (stored as binary days since
C some date in 1900)
C
C CTYP is the Compilation TYPe (eg B)
C
C MDTE is the Maintenance DaTE
C
C MCDE is the Maintenance description CoDE (eg AAAA)
C
C MMD  is the Match/Merge Date
C MMV  is the Match/Merge Version (eg A)
C
C MCD is the Map Currency Date
C
C REV is the REVision cut-off date
C
C *********************************************************************
C
C  8.	Accuracy information
C
C	(NB for DFAD change 3 and upwards tapes, accuracy polygons
C	 are stored in layer 0 of the IFF file)
C
	BYTE		MHHDTM(5)	! Horizontal DaTuM    (5 chars)
	BYTE		MHVDTM(3)	! Vertical DaTuM      (3 chars)
	INTEGER*4	MHAHAC		! Abs Hor Accuracy    (0-9999)
	INTEGER*4	MHAVAC		! Abs Ver Accuracy    (0-9999)
	INTEGER*4	MHRHAC		! Rel Hor Accuracy    (0-9999)
	INTEGER*4	MHRVAC		! Rel Ver Accuracy    (0-9999)
	INTEGER*4	MHVHAC		! Vert Heighting Acc  (0-9999)
C
	EQUIVALENCE	(MHHDTM, MHI4BY(461))	! byte 461-465
	EQUIVALENCE	(MHVDTM, MHI4BY(466))	! byte 466-468
	EQUIVALENCE	(MHAHAC, MHINT4(118))	! byte 469-472
	EQUIVALENCE	(MHAVAC, MHINT4(119))	! byte 473-476
	EQUIVALENCE	(MHRHAC, MHINT4(120))	! byte 477-480
	EQUIVALENCE	(MHRVAC, MHINT4(121))	! byte 481-484
	EQUIVALENCE	(MHVHAC, MHINT4(122))	! byte 485-488
C						!*byte 489-500
C
C HDTM is the Horizontal DaTuM (eg WGS72)
C VDTM is the Vertical   DaTuM (eg MSL)
C
C AHAC, AVAC are the Absolute Horizontal and Vertical Accuracies
C
C RHAC, RVAC are the Relative Horizontal and Vertical Accuracies
C
C VHAC is the Vertical Heighting ACcuracy
C
C *********************************************************************
C
C  9.	Processing dates
C
	INTEGER*4	MHDUP1		! Digital Update 1	(date)
	INTEGER*4	MHDUP2		! Digital Update 2	(date)
	INTEGER*4	MHDUP3		! Digital Update 3	(date)
	INTEGER*4	MHDUP4		! Digital Update 4	(date)
	INTEGER*4	MHDUP5		! Digital Update 5	(date)
	INTEGER*4	MHDUP6		! Digital Update 6	(date)
	INTEGER*4	MHDLH		! Date last handled	(date)
C
	INTEGER*4	MHDUP(6)	! for all the DUP fields
	EQUIVALENCE	(MHDUP1,MHDUP(1))
C
	EQUIVALENCE	(MHDUP1, MHINT4(126))	! byte 501-504
	EQUIVALENCE	(MHDUP2, MHINT4(127))	! byte 505-508
	EQUIVALENCE	(MHDUP3, MHINT4(128))	! byte 509-512
	EQUIVALENCE	(MHDUP4, MHINT4(129))	! byte 513-516
	EQUIVALENCE	(MHDUP5, MHINT4(130))	! byte 517-520
	EQUIVALENCE	(MHDUP6, MHINT4(131))	! byte 521-524
	EQUIVALENCE	(MHDLH,  MHINT4(132))	! byte 525-528
C						!*byte 529-540
C
C DUPx are the Digital UPdate fields. Each is a date when the map has
C been updated, with DUP1 being the most recent, DUP2 the next, etc
C These values scroll round (DUP2 <- DUP1 when DUP1 changes, etc),
C with DUP6 being discarded as necessary
C
C DLH is the date last handled for the map
C
C *********************************************************************
C
C 10.	Status flags
C
	BYTE		MHEMSN		! Edge Match N	   (yes/no)
	BYTE		MHEMSE		! Edge Match E	   (yes/no)
	BYTE		MHEMSS		! Edge Match S	   (yes/no)
	BYTE		MHEMSW		! Edge Match W	   (yes/no)
	BYTE		MHFLAG		! Processing flag  (0-9)
C
	EQUIVALENCE	(MHEMSN, MHI4BY(541))	! byte 541
	EQUIVALENCE	(MHEMSE, MHI4BY(542))	! byte 542
	EQUIVALENCE	(MHEMSS, MHI4BY(543))	! byte 543
	EQUIVALENCE	(MHEMSW, MHI4BY(544))	! byte 544
	EQUIVALENCE	(MHFLAG, MHI4BY(545))	! byte 545
C						!*byte 546-580
C
C EMSN...W are the Edge Match Status flags for each of the four sides
C of the map, containing a simple yes/no value (TRUE/FALSE)
C
C FLAG is the processing status FLAG, use undefined as yet
C
C *********************************************************************
C
C 11.	Terrain information
C
	INTEGER*4	MHCLOD		! CLOckwise ori Data (0-180deg)
	INTEGER*4	MHLAIN		! LAtitude interval  (0-9999)
	INTEGER*4	MHLOIN		! LOngitude ditto    (0-9999)
	INTEGER*4	MHLALI		! no of LAt  LInes   (0-9999)
	INTEGER*4	MHLOLI		! no of LOng LInes   (0-9999)
	BYTE		MHPCIN		! Partial Cell INdicr(0-99)
C
	EQUIVALENCE	(MHCLOD, MHINT4(146))	! byte 581-584
	EQUIVALENCE	(MHLAIN, MHINT4(147))	! byte 585-588
	EQUIVALENCE	(MHLOIN, MHINT4(148))	! byte 589-592
	EQUIVALENCE	(MHLALI, MHINT4(149))	! byte 593-596
	EQUIVALENCE	(MHLOLI, MHINT4(150))	! byte 597-600
	EQUIVALENCE	(MHPCIN, MHI4BY(601))	! byte 601
C						!*byte 602-696
C
C CLOD is the CLockwise Orientation of the Data, in integer tenths of
C a second
C
C LAIN, LOIN are the LAtitude and LOngitude INtervals
C
C LALI, LOLI are the number of LInes of LAtitude and LOngitude
C
C PCIN is the Partial Cell INdicator
C
C *********************************************************************
C
