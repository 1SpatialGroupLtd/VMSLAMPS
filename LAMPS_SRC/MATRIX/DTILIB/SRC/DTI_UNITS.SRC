	INTEGER*4 FUNCTION DTI_UNITS ( DTI_LUN, UNITS )
C
***	IDENT	23NO88
***	MODULE	DTI_UNITS
C
C	Copyright : Laser-Scan Laboratories, Cambridge, England
C	Author    : D R Catlow
C	Created   : 23 November 1988
C
C----------------------------------------------------------------------------
C
C	DTILIB Function.   
C
C	Utility to test whether the UNITS type is valid for the file
C	currently opened on DTI_LUN, or in the special case when
C	UNITS is passed with a value of 0, to determine the most
C	appropriate UNITS type for this file, and return it in the
C	UNITS argument.
C
C	1	DTI (matrix) units
C	2	METRES
C	3	SECONDS 			
C	4	DEGREES, MINUTES and SECONDS	
C	5	PROJECTION
C
C----------------------------------------------------------------------------
C
	IMPLICIT NONE
C
C parameters
***	PARAMETER/LSL$CMNDTI:DTIDEF/
***	PARAMETER/LSL$CMNDTI:DTIPAR/
***	PARAMETER/LSL$CMNDTI:DTILIBMSG/
C
***	COMMON/LSL$CMNDTI:DTIHDR/
***	COMMON/LSL$CMNDTI:DTIPROJ/
C
C arguments
	INTEGER*4		DTI_LUN		!LUN on which DTI is open
	INTEGER*4		UNITS		!What type of UNITS
C
C****************************************************************************
C
C	Test if the supplied LUN number is valid
	IF(DTI_LUN.LT.1.OR.DTI_LUN.GT.MAX_DTI)THEN
	  DTI_UNITS=DTI__BADLUN		!LUN out of range
	  GOTO 999				!Return
 	ENDIF
C
C	Test of the supplied LUN is in use
	IF(.NOT.DTILUN_INUSE(DTI_LUN))THEN
	  DTI_UNITS=DTI__LUNUNUSED	!no file opened on LUN
	  GOTO 999				!Return
	ENDIF
C
C	Test if UNITS is valid
	IF(UNITS.NE.0.AND.
     &     UNITS.NE.UNITS_DTI.AND.
     &     UNITS.NE.UNITS_MET.AND.
     &	   UNITS.NE.UNITS_SEC.AND.
     &	   UNITS.NE.UNITS_DEG.AND.
     &     UNITS.NE.UNITS_PROJ)THEN
	   DTI_UNITS=DTI__BADUNITS	!unrecognised units
	   GOTO 999
	ENDIF
C
C------------------------------------------------------------------------
C	Matrix Units
C	Valid for all files
C
	IF(UNITS.EQ.UNITS_DTI)THEN
	  DTI_UNITS=DTI__NORMAL
	  GOTO 999
	ENDIF
C
C------------------------------------------------------------------------
C	Metre Units
C	Valid for UHL1 and TED4 header files,
C       historical ALVY and MIKE files,
C	a LSLA file without a projection record,
C	and a LSLA file with a projection record whose units
C	does not indicate unset, feet, sheet mms or thousands of inch.
C
	IF(UNITS.EQ.UNITS_MET)THEN
C
C	UHL1, TED4, ALVY or MIKE file?	  
	  IF(HEADER_TYPE(DTI_LUN).EQ.DTI_UHL1.OR.
     &       HEADER_TYPE(DTI_LUN).EQ.DTI_TED4.OR.
     &       HEADER_TYPE(DTI_LUN).EQ.DTI_ALVY.OR.
     &       HEADER_TYPE(DTI_LUN).EQ.DTI_MIKE)THEN
	    DTI_UNITS = DTI__NORMAL
	    GOTO 999
	  ENDIF
C
C	LSLA file?
	  IF(HEADER_TYPE(DTI_LUN).EQ.DTI_LSLA)THEN
C
C	No projection record?
	    IF(.NOT.HAD_PROJ_RECORD(DTI_LUN))THEN
	      DTI_UNITS = DTI__NORMAL
	      GOTO 999
	    ENDIF	    
C
C	Appropriate units in projection reord?
	    IF(DTIPROJ_UNITS(DTI_LUN).EQ.0.OR.
     &         DTIPROJ_UNITS(DTI_LUN).EQ.1.OR.
     &         DTIPROJ_UNITS(DTI_LUN).EQ.102.OR.
     &         DTIPROJ_UNITS(DTI_LUN).EQ.104)THEN
	      DTI_UNITS = DTI__INVUNITS
	      GOTO 999
	    ENDIF
C
	  ENDIF
C
C	O.K.
	  DTI_UNITS = DTI__NORMAL
	  GOTO 999
C
	ENDIF
C---------------------------------------------------------------------------
C	Seconds or Latlong Units
C	Valid for UHL1 and TED4 (DTED) header files
C	Valid for LSLA with Projection Record that indicates
C	the data is held in geographicals
C
	IF(UNITS.EQ.UNITS_SEC.OR.UNITS.EQ.UNITS_DEG)THEN
C
C	UHL1 or TED4 header?
	  IF(HEADER_TYPE(DTI_LUN).EQ.DTI_UHL1.OR.
     &       HEADER_TYPE(DTI_LUN).EQ.DTI_TED4)THEN
	     DTI_UNITS=DTI__NORMAL
	     GOTO 999
	  ENDIF
C
C	LSLA header?
	  IF(HEADER_TYPE(DTI_LUN).NE.DTI_LSLA)THEN
	     DTI_UNITS=DTI__INVUNITS
	     GOTO 999
	  ENDIF
C
C	Contains a Projection Record?
	  IF(.NOT.HAD_PROJ_RECORD(DTI_LUN))THEN
	     DTI_UNITS=DTI__INVUNITS
	     GOTO 999
	  ENDIF
C
C	Sensible units in Projection Record?
	  IF(DTIPROJ_UNITS(DTI_LUN).NE.3.AND.
     &       DTIPROJ_UNITS(DTI_LUN).NE.4.AND.
     &       DTIPROJ_UNITS(DTI_LUN).NE.5.AND.
     &       DTIPROJ_UNITS(DTI_LUN).NE.110)THEN
	     DTI_UNITS=DTI__INVUNITS
	     GOTO 999
	  ENDIF
C
C	O.K.
	  DTI_UNITS=DTI__NORMAL
	  GOTO 999
C
	ENDIF
C--------------------------------------------------------------------------
C	UNITS Projection
C	Valid for a LSLA header with a Projection Record
C	and if the units entry in the record is itself valid
C
	IF(UNITS.EQ.UNITS_PROJ)THEN
C
C	LSLA header?
	  IF(HEADER_TYPE(DTI_LUN).NE.DTI_LSLA)THEN
	     DTI_UNITS=DTI__INVUNITS
	     GOTO 999
	  ENDIF
C
C	Contains a Projection Record?
	  IF(.NOT.HAD_PROJ_RECORD(DTI_LUN))THEN
	     DTI_UNITS=DTI__INVUNITS
	     GOTO 999
	  ENDIF
C
C	Sensible units in Projection Record?
	  IF(DTIPROJ_UNITS(DTI_LUN).EQ.0.OR.
     &      (DTIPROJ_UNITS(DTI_LUN).GT.5.AND.
     &      (DTIPROJ_UNITS(DTI_LUN).NE.102.AND.
     &       DTIPROJ_UNITS(DTI_LUN).NE.104.AND.
     &       DTIPROJ_UNITS(DTI_LUN).NE.110)))THEN
	     DTI_UNITS=DTI__INVUNITS
	     GOTO 999
	  ENDIF
C
C	O.K.
	  DTI_UNITS=DTI__NORMAL
	  GOTO 999
C
	ENDIF
C
C------------------------------------------------------------------------	
C	UNITS = 0
C	In this case we determine the most sensible (generally default)
C	UNITS type.
C	For UHL1 and TED4 headers, default is UNITS_DEG
C	For MIKE and ALVY headers, default is UNITS_DTI
C	For LSLA header without projection record, default is UNITS_DTI
C	For LSLA header with projection record, default units is
C	UNITS_PROJ except if:
C	DTIPROJ_UNITS is 0 when default is UNITS_DTI
C	DTIPROJ_UNITS is 2 when default is UNITS_MET
C	DTIPROJ_UNITS is 3,4,5 or 110 when default is UNITS_DEG
C
	IF(UNITS.EQ.0)THEN
C
C	UHL1 or TED4 header?
	  IF(HEADER_TYPE(DTI_LUN).EQ.DTI_UHL1.OR.
     &       HEADER_TYPE(DTI_LUN).EQ.DTI_TED4)THEN
	    UNITS = UNITS_DEG
	    DTI_UNITS = DTI__NORMAL
	    GOTO 999
	  ENDIF
C
C	MIKE or ALVY header?
	  IF(HEADER_TYPE(DTI_LUN).EQ.DTI_MIKE.OR.
     &       HEADER_TYPE(DTI_LUN).EQ.DTI_ALVY)THEN
	    UNITS = UNITS_DTI
	    DTI_UNITS = DTI__NORMAL
	    GOTO 999
	  ENDIF
C
C	LSLA header?
	  IF(HEADER_TYPE(DTI_LUN).EQ.DTI_LSLA)THEN
C
C	Without a projection record?
	    IF(.NOT.HAD_PROJ_RECORD(DTI_LUN))THEN
	      UNITS = UNITS_DTI
	      DTI_UNITS = DTI__NORMAL
	      GOTO 999
	    ENDIF
C
C	Set to matrix units
	    IF(DTIPROJ_UNITS(DTI_LUN).EQ.0)THEN
	      UNITS = UNITS_DTI
	      DTI_UNITS = DTI__NORMAL
	      GOTO 999
	    ENDIF
C
C	Set to metres?
	    IF(DTIPROJ_UNITS(DTI_LUN).EQ.2)THEN
	      UNITS = UNITS_MET
	      DTI_UNITS = DTI__NORMAL
	      GOTO 999
	    ENDIF
C
C	Set to projection units? (feet, mms or thousands of an inch)
	    IF(DTIPROJ_UNITS(DTI_LUN).EQ.1.OR.
     &         DTIPROJ_UNITS(DTI_LUN).EQ.102.OR.
     &         DTIPROJ_UNITS(DTI_LUN).EQ.104)THEN
	      UNITS = UNITS_PROJ
	      DTI_UNITS = DTI__NORMAL
	      GOTO 999
	    ENDIF
C
C	Set to UNITS_DEG ?
	    IF(DTIPROJ_UNITS(DTI_LUN).EQ.3.OR.
     &         DTIPROJ_UNITS(DTI_LUN).EQ.4.OR.
     &         DTIPROJ_UNITS(DTI_LUN).EQ.5.OR.
     &         DTIPROJ_UNITS(DTI_LUN).EQ.110)THEN
	      UNITS = UNITS_DEG
	      DTI_UNITS = DTI__NORMAL
	      GOTO 999
	    ENDIF
C
C	Unrecognised (so defualt to matrix units)
	    UNITS = UNITS_DTI
	    DTI_UNITS = DTI__NORMAL
	    GOTO 999
	  ENDIF
C
	ENDIF
C
C--------------------------------------------------------------------------
C
999	RETURN
C
	END
