C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1988-08-01 18:03:26.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	INTEGER*4 FUNCTION DTI_WRITE_UHL ( DTI_LUN, RETVAL )
C
***	IDENT	01AU88
***	MODULE	DTI_WRITE_UHL
C
C	Copyright : Laser-Scan Laboratories, Cambridge, England
C	Author    : D R Catlow
C
C	DTILIB Function.   
C
C	Modified  : 30MA88  to ensure column and row values
C		            are correctly updated
C	Modified  : 01AU88  to check for write access to the file
C
C	Modifies the part of the UHL record containing 
C	LATLONG S.W. corner and grid interval values
C
C	The LATLONG header details are transferred from the 
C	common block DTIHDR.
C
C	The function returns true if successful.
C	Any system error is returned in RETVAL.
C
C-----------------------------------------------------------------------------
C
	IMPLICIT NONE
C
C parameters
	INCLUDE '($SSDEF)'
C
***	PARAMETER/LSL$CMNDTI:DTIDEF/
***	PARAMETER/LSL$CMNDTI:DTIPAR/
***	PARAMETER/LSL$CMNDTI:DTILIBMSG/
C
***	COMMON/LSL$CMNDTI:DTIHDR/
C
C local
	INTEGER*4	ERROR			!READSI system 
C						!error return code
C arguments
	INTEGER*4	DTI_LUN			!LUN on which to open file
	INTEGER*4	RETVAL			!system error return code
C
C****************************************************************************
C
C	Test if the supplied LUN number is valid
	IF(DTI_LUN.LT.1.OR.DTI_LUN.GT.MAX_DTI)THEN
	  DTI_WRITE_UHL=DTI__BADLUN		!LUN out of range
	  GOTO 999				!Return
	ENDIF
C
C	Test of the supplied LUN is in use
	IF(.NOT.DTILUN_INUSE(DTI_LUN))THEN
	  DTI_WRITE_UHL=DTI__LUNUNUSED		!no file opened on LUN
	  GOTO 999				!Return
	ENDIF
C
C	Test for write access to the file
	IF(READ_ONLY(DTI_LUN))THEN
	  DTI_WRITE_UHL=DTI__READONLY	!read only access
	  GOTO 999
	ENDIF
C
C	Test if the file is a UHL1 file
	IF(HEADER_TYPE(DTI_LUN).NE.DTI_UHL1)THEN
	  DTI_WRITE_UHL=DTI__BADHEADER		!bad header
	  GOTO 999
	ENDIF
C
C--------------------------------------------------------------------------
C
	CALL DTI_WRIUHL(DATA_OFFSET(DTI_LUN)-1,%VAL(SEC_ADDR(DTI_LUN)),
     &			DTI_LUN,ERROR)
C
C	Check for any error
	IF(ERROR.NE.SS$_NORMAL)THEN
	  DTI_WRITE_UHL=DTI__SYSERR
	  RETVAL=ERROR				!Pass back system error
	ELSE
	  DTI_WRITE_UHL=DTI__NORMAL		!Signal success
	ENDIF
C
999	RETURN
C
	END	   
C
C****************************************************************************
C
	SUBROUTINE DTI_WRIUHL (HEADER_SIZE,HEADER_ARRAY,WHICH_DTI,IERR)
C
***	IDENT	25SE87
***	MODULE	DTI_WRIUHL
C
C	Copyright : Laser-Scan Laboratories, Cambridge, England
C	Author    : D R Catlow
C
	IMPLICIT NONE
C
***	PARAMETER/LSL$CMNDTI:DTILIBMSG/
***	COMMON/LSL$CMNDTI:DTIHDR/
***	COMMON/LSL$CMNLSL:EXPC/
C
C arguments
	INTEGER*4	HEADER_SIZE	!Size of header area
	BYTE		HEADER_ARRAY(0:HEADER_SIZE)
	INTEGER*4	WHICH_DTI	!Which DTI file
	INTEGER*4	IERR		!system error code
C locals
	INTEGER*4	I		!counter
	INTEGER*4	DEGR,MINU,SECO	!converted latlong values
	LOGICAL		NEGA		!neg or pos seconds value
C
C function
	INTEGER*4	VIOMV3		!transfer bytes
C
C***************************************************************************
C
C	Write S.W. corner values
        CALL DTI_CVTANG(LONREC(1,WHICH_DTI),
     &  NEGA,DEGR,MINU,SECO)
	CALL EXPAND('%P0%I3%P0%I2%P0%I2',DEGR,MINU,SECO)
	IF(NEGA)THEN
	  CALL APPEND('W')
	ELSE
	  CALL APPEND('E')
	ENDIF
C
	CALL DTI_CVTANG(LATREC(1,WHICH_DTI),
     &	NEGA,DEGR,MINU,SECO)
	CALL APPEND('%P0%I3%P0%I2%P0%I2',DEGR,MINU,SECO)
	IF(NEGA)THEN
	  CALL APPEND('S')
	ELSE
	  CALL APPEND('N')
	ENDIF
C		
C	LATINT and LONINT records
	CALL APPEND('%P0%I4',LONINT(WHICH_DTI))
	CALL APPEND('%P0%I4',LATINT(WHICH_DTI))
C
C	Transfer from EXPBUF to HEADER_ARRAY
	IERR = VIOMV3(EXPBUF,24,HEADER_ARRAY(4))
	IF(.NOT.IERR)GOTO 999	
C
C	Column and Row Counts
	CALL EXPAND('%P0%I4',X_EXTENT(WHICH_DTI))
	CALL APPEND('%P0%I4',Y_EXTENT(WHICH_DTI))
C
C	Transfer from EXPBUF to HEADER_ARRAY
	IERR = VIOMV3(EXPBUF,8,HEADER_ARRAY(47))
	IF(.NOT.IERR)GOTO 999	
C
C--------------------------------------------------------------------------
C
999	RETURN
C
	END
