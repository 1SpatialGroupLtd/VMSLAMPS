C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1988-08-01 17:39:28.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	INTEGER*4 FUNCTION DTI_WRITE_WORD_HEADER 
     &                     ( DTI_LUN, WORD_WRITE, BYTE_OFFSET, RETVAL )
C
***	IDENT	01AU88
***	MODULE	DTI_WRITE_WORD_HEADER
C
C	Copyright : Laser-Scan Laboratories, Cambridge, England
C	Author    : D R Catlow
C	Created   : 17 November 1986
C
C	Modified  : DRC 29JL88  To return an error if the supplied byte
C		    offset would result in data partly being transferred
C		    to the data area.
C	Modified  : DRC 01AU88  To test for write access to the file
C
C	DTILIB Function.   
C
C	Writes a word into the DTI header at position BYTE_OFFSET
C
C	The function returns true if successful.
C	Any system error is returned in RETVAL.
C
C--------------------------------------------------------------------------
C
	IMPLICIT NONE
C
C parameters
	INCLUDE '($SSDEF)'
C
***	PARAMETER/LSL$CMNDTI:DTIDEF/
***	PARAMETER/LSL$CMNDTI:DTIPAR/
***	PARAMETER/LSL$CMNDTI:DTILIBMSG/
C
***	COMMON/LSL$CMNDTI:DTIHDR/
C
C arguments
	INTEGER*2		WORD_WRITE	!Value of word
	INTEGER*4		BYTE_OFFSET	!Offset in header
	INTEGER*4		DTI_LUN		!which DTI file?
	INTEGER*4		RETVAL		!error return code
C
C local
	INTEGER*4		IERR		!function return status
	INTEGER*4		ERROR		!system error return code
C
C****************************************************************************
C
C	Test if the supplied LUN number is valid
	IF(DTI_LUN.LT.1.OR.DTI_LUN.GT.MAX_DTI)THEN
	  DTI_WRITE_WORD_HEADER=DTI__BADLUN		!LUN out of range
	  GOTO 999					!Return
	ENDIF
C
C	Test of the supplied LUN is in use
	IF(.NOT.DTILUN_INUSE(DTI_LUN))THEN
	  DTI_WRITE_WORD_HEADER=DTI__LUNUNUSED		!LUN not in use
	  GOTO 999					!Return
	ENDIF
C
C	Test for write access to the file
	IF(READ_ONLY(DTI_LUN))THEN
	  DTI_WRITE_WORD_HEADER=DTI__READONLY		!read only access
	  GOTO 999
	ENDIF
C
C	Test if the supplied byte offset is sensible.
C	ie that it lies within the header area, and allows 2 bytes to
C	be written without writing a byte from the data area.
	IF(BYTE_OFFSET.LT.0.OR.BYTE_OFFSET.GT.DATA_OFFSET(DTI_LUN)-2)THEN
	  DTI_WRITE_WORD_HEADER=DTI__BADHEADOFF		!Bad data offset
	  GOTO 999					!Return
	ENDIF
C
C----------------------------------------------------------------------------
C	O.K. now write the word to the header area
	CALL DTI_WW (DATA_OFFSET(DTI_LUN)-1,%VAL(SEC_ADDR(DTI_LUN)),
     & 		     BYTE_OFFSET,WORD_WRITE,IERR)
C
C	Check for any error - highly unlikely!
	IF(IERR.NE.SS$_NORMAL)THEN
	  DTI_WRITE_WORD_HEADER=DTI__SYSERR
	  RETVAL=IERR				!Pass back system error
	ELSE
	  DTI_WRITE_WORD_HEADER=DTI__NORMAL	!Signal success
	ENDIF
C
999	RETURN
C
	END
C
C****************************************************************************
C
	SUBROUTINE DTI_WW 
     &  (HEADER_SIZE,HEADER_ARRAY,B_OFF,VALUE,ERROR)
C
***	IDENT	07OC86
***	MODULE	DTI_WW
C
C	Copyright : Laser-Scan Laboratories, Cambridge, England
C	Author    : D R Catlow
C
	IMPLICIT NONE
C
C arguments
	INTEGER*4	HEADER_SIZE		!Size of header
	BYTE		HEADER_ARRAY(0:HEADER_SIZE)!Byte header
	INTEGER*4	B_OFF			!Byte offset in header
	INTEGER*2	VALUE			!word value
	INTEGER*4	ERROR			!VIOMV3 return code
C
C function
	INTEGER*4	VIOMV3		!to transfer VALUE into byte header
C					!array
C
C---------------------------------------------------------------------------
C
C	Transfer 2 bytes
	ERROR=VIOMV3(VALUE,2,HEADER_ARRAY(B_OFF))
C	
999	RETURN
C
	END
