	INTEGER*4 FUNCTION DTI_WRITE_DATA
     &                     (DTI_LUN, VALUE, X_POSN ,Y_POSN )
C
***	IDENT	01AU88
***	MODULE	DTI_WRITE_DATA
C
C	Copyright : Laser-Scan Laboratories, Cambridge, England
C	Author    : D R Catlow
C
C	Modified  : DRC 03AP87 for use with bit data files
C	Modified  : DRC 01AU88 To test for write access to the file.
C
C----------------------------------------------------------------------------
C
C	DTILIB Function.   
C
C	Writes a value into the DTI data area at position 
C	X_POSN,Y_POSN
C
C	The function returns true if successful.
C
C----------------------------------------------------------------------------
C
	IMPLICIT NONE
C
***	PARAMETER/LSL$CMNDTI:DTIDEF/
***	PARAMETER/LSL$CMNDTI:DTIPAR/
***	PARAMETER/LSL$CMNDTI:DTILIBMSG/
C
***	COMMON/LSL$CMNDTI:DTIHDR/
C
C arguments
	INTEGER*4		DTI_LUN		!which DTI file?
	INTEGER*4		X_POSN		!Column value
	INTEGER*4		Y_POSN		!Row value
	BYTE			VALUE		!Value to write
C
C****************************************************************************
C
C	Test if the supplied LUN number is valid
	IF(DTI_LUN.LT.1.OR.DTI_LUN.GT.MAX_DTI)THEN
	  DTI_WRITE_DATA=DTI__BADLUN		!LUN out of range
	  GOTO 999					!Return
	ENDIF
C
C	Test if the supplied LUN is in use
	IF(.NOT.DTILUN_INUSE(DTI_LUN))THEN
	  DTI_WRITE_DATA=DTI__LUNUNUSED		!LUN not in use
	  GOTO 999					!Return
	ENDIF
C
C	Test for write access to the file
	IF(READ_ONLY(DTI_LUN))THEN
	  DTI_WRITE_DATA=DTI__READONLY		!read only access
	  GOTO 999
	ENDIF
C
C	Test if the supplied x and y positions are within the data area
	IF(X_POSN.LE.0.OR.X_POSN.GT.X_EXTENT(DTI_LUN).OR.
     &	   Y_POSN.LE.0.OR.Y_POSN.GT.Y_EXTENT(DTI_LUN))THEN
	  DTI_WRITE_DATA=DTI__BADDATAPOS		!Bad data position
	  GOTO 999					!Return
	ENDIF
C
C----------------------------------------------------------------------------
C
C	Determine which type of data is stored in the file, and
C	call the appropriate reading routine.
	IF      (DATA_TYPE(DTI_LUN).EQ.DATA_BYTE)THEN
	  CALL DTI_WB_DATA (%VAL(SEC_ADDR(DTI_LUN)+DATA_OFFSET(DTI_LUN)),
     & 		            X_POSN,Y_POSN,VALUE,DTI_LUN)
	ELSE IF (DATA_TYPE(DTI_LUN).EQ.DATA_WORD)THEN
	  CALL DTI_WW_DATA (%VAL(SEC_ADDR(DTI_LUN)+DATA_OFFSET(DTI_LUN)),
     & 		            X_POSN,Y_POSN,VALUE,DTI_LUN)
	ELSE IF (DATA_TYPE(DTI_LUN).EQ.DATA_LONG)THEN
	  CALL DTI_WL_DATA (%VAL(SEC_ADDR(DTI_LUN)+DATA_OFFSET(DTI_LUN)),
     & 		            X_POSN,Y_POSN,VALUE,DTI_LUN)
	ELSE IF (DATA_TYPE(DTI_LUN).EQ.DATA_REAL)THEN
	  CALL DTI_WR_DATA (%VAL(SEC_ADDR(DTI_LUN)+DATA_OFFSET(DTI_LUN)),
     & 		            X_POSN,Y_POSN,VALUE,DTI_LUN)
	ELSE IF (DATA_TYPE(DTI_LUN).EQ.DATA_BIT)THEN
	  CALL DTI_WBIT_DATA (%VAL(SEC_ADDR(DTI_LUN)+DATA_OFFSET(DTI_LUN)),
     & 		            X_POSN,Y_POSN,VALUE,DTI_LUN)
	ENDIF
C
C-----------------------------------------------------------------------------
C
	DTI_WRITE_DATA=DTI__NORMAL
C
999	RETURN
C
	END

