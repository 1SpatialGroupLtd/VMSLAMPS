C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1987-04-02 10:54:40.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	INTEGER*4 FUNCTION DTI_READ_DATA
     &                     (DTI_LUN, VALUE, X_POSN ,Y_POSN )
C
***	IDENT	02AP87
***	MODULE	DTI_READ_DATA
C
C	Copyright : Laser-Scan Laboratories, Cambridge, England
C	Author    : D R Catlow
C
C	Modified  : DRC 02AP87 for use with bit data.
C
C----------------------------------------------------------------------------
C	DTILIB Function.   
C
C	Reads a value from the DTI data area at position 
C	X_POSN,Y_POSN
C
C	The function returns true if successful.
C
C----------------------------------------------------------------------------
C
	IMPLICIT NONE
C
***	PARAMETER/LSL$CMNDTI:DTIDEF/
***	PARAMETER/LSL$CMNDTI:DTIPAR/
***	PARAMETER/LSL$CMNDTI:DTILIBMSG/
C
***	COMMON/LSL$CMNDTI:DTIHDR/
C
C arguments
	INTEGER*4		DTI_LUN		!which DTI file?
	INTEGER*4		X_POSN		!Column value
	INTEGER*4		Y_POSN		!Row value
	BYTE			VALUE		!Value read
C
C****************************************************************************
C
C	Test if the supplied LUN number is valid
	IF(DTI_LUN.LT.1.OR.DTI_LUN.GT.MAX_DTI)THEN
	  DTI_READ_DATA=DTI__BADLUN		!LUN out of range
	  GOTO 999					!Return
	ENDIF
C
C	Test if the supplied LUN is in use
	IF(.NOT.DTILUN_INUSE(DTI_LUN))THEN
	  DTI_READ_DATA=DTI__LUNUNUSED		!LUN not in use
	  GOTO 999					!Return
	ENDIF
C
C	Test if the supplied x and y positions are within the data area
	IF(X_POSN.LE.0.OR.X_POSN.GT.X_EXTENT(DTI_LUN).OR.
     &	   Y_POSN.LE.0.OR.Y_POSN.GT.Y_EXTENT(DTI_LUN))THEN
	  DTI_READ_DATA=DTI__BADDATAPOS		!Bad data position
	  GOTO 999					!Return
	ENDIF
C
C----------------------------------------------------------------------------
C
C	Determine which type of data is stored in the file, and
C	call the appropriate reading routine.
	IF      (DATA_TYPE(DTI_LUN).EQ.DATA_BYTE)THEN
	  CALL DTI_RB_DATA (%VAL(SEC_ADDR(DTI_LUN)+DATA_OFFSET(DTI_LUN)),
     & 		            X_POSN,Y_POSN,VALUE,DTI_LUN)
	ELSE IF (DATA_TYPE(DTI_LUN).EQ.DATA_WORD)THEN
	  CALL DTI_RW_DATA (%VAL(SEC_ADDR(DTI_LUN)+DATA_OFFSET(DTI_LUN)),
     & 		            X_POSN,Y_POSN,VALUE,DTI_LUN)
	ELSE IF (DATA_TYPE(DTI_LUN).EQ.DATA_LONG)THEN
	  CALL DTI_RL_DATA (%VAL(SEC_ADDR(DTI_LUN)+DATA_OFFSET(DTI_LUN)),
     & 		            X_POSN,Y_POSN,VALUE,DTI_LUN)
	ELSE IF (DATA_TYPE(DTI_LUN).EQ.DATA_REAL)THEN
	  CALL DTI_RR_DATA (%VAL(SEC_ADDR(DTI_LUN)+DATA_OFFSET(DTI_LUN)),
     & 		            X_POSN,Y_POSN,VALUE,DTI_LUN)
	ELSE IF (DATA_TYPE(DTI_LUN).EQ.DATA_BIT)THEN
	  CALL DTI_RBIT_DATA (%VAL(SEC_ADDR(DTI_LUN)+DATA_OFFSET(DTI_LUN)),
     & 		            X_POSN,Y_POSN,VALUE,DTI_LUN)
	ENDIF
C
C-----------------------------------------------------------------------------
C
	DTI_READ_DATA=DTI__NORMAL
C
999	RETURN
C
	END

