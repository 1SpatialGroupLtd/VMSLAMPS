C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1988-12-06 16:20:10.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE DTI_INIT
C
***	IDENT	06DE88
***	MODULE	DTI_INIT
C
C	Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C	Created DRC from LSL_INIT		20-NOV-86
C
CMOD	To set up exit handler, so that DTI files are unmapped
C	using DTI_CLOSE         		DRC 06DE88           
C				
C	Function to initialise DTILIB library.  Should be called
C	before any other DTILIB routine.  Ensures that a call
C	to LSL_PUTMSG with a DTILIB error code will be correctly
C	handled.
C
C-----------------------------------------------------------------------
C
	IMPLICIT NONE
C
C Just an external reference, to extract messages
	EXTERNAL	DTI__NORMAL
C
	EXTERNAL	DTI_EXIT_HANDLER
C
	INTEGER*4 	DESBLK(4)	! descr. block for exit handler
	INTEGER*4 	STATUS		! exit status
	LOGICAL*4	SETUP_HANDLER	! to ensure exit handler is
C					! set up only once
C
C-----------------------------------------------------------------------
C Check that DTI_INIT is being called for the first time
	IF(SETUP_HANDLER)GOTO 999
C
C Set up exit handler
	DESBLK(2) = %LOC(DTI_EXIT_HANDLER)
	DESBLK(3) = 1
	DESBLK(4) = %LOC(STATUS)
	CALL SYS$DCLEXH(DESBLK)
C
	SETUP_HANDLER=.TRUE.
C
999	RETURN
	END
