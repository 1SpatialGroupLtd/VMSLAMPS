C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1988-08-30 16:49:52.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	INTEGER*4 FUNCTION DTI_WRITE_PROJ_REC 
     &            ( DTI_LUN, PROJ_OFFSET, RETVAL )
C
***	IDENT	30AU88
***	MODULE	DTI_WRITE_PROJ_REC
C
C	Copyright : Laser-Scan Laboratories, Cambridge, England
C	Author    : D R Catlow
C	Created   : 22 September 1987
C
C	Modified  : DRC 30AU88 to ensure the byte offset argument
C		    is treated as an optional argument
C	Modified  : DRC 01AU88 to test for write access to the file,
C		    and to handle LSLA type header.
C
C	DTILIB Function.   
C
C	Writes a DTI Projection record to a file opened on DTI_LUN.
C	The record is written at the specified byte offset
C	in the DTI header record.  Projection record details are
C	extracted from the variables in common DTIPROJ.
C	Note: A DTI Projection record may only be written to an ALVY
C	or LSLA	DTI file, and the header record must be of sufficient 
C	length 	to accommodate the Projection record.  
C	The function returns an error condition if these conditions 
C	are not fulfilled.
C
C	The function returns true if successful.
C	Any system error is returned in RETVAL.
C
C----------------------------------------------------------------------------
C
	IMPLICIT NONE
C
C parameters
***	PARAMETER/LSL$CMNDTI:DTIDEF/
***	PARAMETER/LSL$CMNDTI:DTIPAR/
***	PARAMETER/LSL$CMNDTI:DTILIBMSG/
C
***	COMMON/LSL$CMNDTI:DTIPROJ/		!DTI Projection Record
***	COMMON/LSL$CMNDTI:DTIHDR/
C
C arguments
	INTEGER*4	DTI_LUN			!LUN on which to open file
	INTEGER*4	PROJ_OFFSET		!Offset in header
	INTEGER*4	RETVAL			!System error return code
C
C local
	INTEGER*4	IERR			!function return status
	INTEGER*4	ERROR			!system error return code
	INTEGER*4	I			!counter
	INTEGER*4	BYTE_OFFSET		!copy of proj_offset
	INTEGER*4	OFFSET			!offset in header
C
C functions
	LOGICAL		HAVE_I_AN_ARG		!test for presence of argument
	INTEGER*4	DTI_WRITE_LONG_HEADER 	!writes longword to header
	INTEGER*4	DTI_WRITE_REAL_HEADER 	!writes real*4 to header
	INTEGER*4	DTI_WRITE_REAL8_HEADER 	!writes real*8 to header
C
C****************************************************************************
C
C	Test if the supplied LUN number is valid
	IF(DTI_LUN.LT.1.OR.DTI_LUN.GT.MAX_DTI)THEN
	  DTI_WRITE_PROJ_REC=DTI__BADLUN		!LUN out of range
	  GOTO 999					!Return
	ENDIF
C
C	Test of the supplied LUN is in use
	IF(.NOT.DTILUN_INUSE(DTI_LUN))THEN
	  DTI_WRITE_PROJ_REC=DTI__LUNUNUSED		!LUN not in use
	  GOTO 999					!Return
	ENDIF
C
C	Test for write access to the file
	IF(READ_ONLY(DTI_LUN))THEN
	  DTI_WRITE_PROJ_REC=DTI__READONLY		!read only access
	  GOTO 999
	ENDIF
C
C	Test if the file opened on the LUN is an ALVY file
	IF(HEADER_TYPE(DTI_LUN).NE.DTI_ALVY.AND.
     &     HEADER_TYPE(DTI_LUN).NE.DTI_LSLA)THEN
	  DTI_WRITE_PROJ_REC=DTI__BADHEADER
	  GOTO 999
	ENDIF
C
C----------------------------------------------------------------------------
C	Do we have the byte offset argument.
C	If the answer is no, then use the projection record offset
C	value recorded in common DTIPROJ
	IF(.NOT.HAVE_I_AN_ARG(2))THEN
	   BYTE_OFFSET=DTIPROJ_RECORD_OFFSET(DTI_LUN)
	ELSE
	   BYTE_OFFSET=PROJ_OFFSET
	ENDIF
C
C----------------------------------------------------------------------------
C	Test if the supplied byte offset lies within the header area
	IF(BYTE_OFFSET.LT.0.OR.BYTE_OFFSET.GT.DATA_OFFSET(DTI_LUN)-1)THEN
	  DTI_WRITE_PROJ_REC=DTI__BADHEADOFF
	  GOTO 999
	ENDIF
C
C	Test if the Projection Record will fit into the header area
	IF(BYTE_OFFSET+DTIPROJ_RECORD_LENGTH.GT.
     &    DATA_OFFSET(DTI_LUN))THEN
	  DTI_WRITE_PROJ_REC=DTI__HEADTOOSMALL
	  GOTO 999
	ENDIF
C
C----------------------------------------------------------------------------
C	Write DTIPROJ values to ALVY or LSLA header.
C	First the Projection Record Identifier as two longwords
	IERR=DTI_WRITE_LONG_HEADER(DTI_LUN,DTIPROJ_IDENT1,
     &                             BYTE_OFFSET,ERROR)
	IF(IERR.NE.DTI__NORMAL)GOTO 900
C
	IERR=DTI_WRITE_LONG_HEADER(DTI_LUN,DTIPROJ_IDENT2,
     &                             BYTE_OFFSET+4,ERROR)
	IF(IERR.NE.DTI__NORMAL)GOTO 900
C
C	Origin Offset values (x and y)
	IERR=DTI_WRITE_REAL8_HEADER(DTI_LUN,DTIPROJ_ORIGIN(1,DTI_LUN),
     &                              BYTE_OFFSET+8,ERROR)
	IF(IERR.NE.DTI__NORMAL)GOTO 900
C
	IERR=DTI_WRITE_REAL8_HEADER(DTI_LUN,DTIPROJ_ORIGIN(2,DTI_LUN),
     &                              BYTE_OFFSET+16,ERROR)
	IF(IERR.NE.DTI__NORMAL)GOTO 900
C
C	Sample x and y values
	IERR=DTI_WRITE_REAL_HEADER(DTI_LUN,DTIPROJ_SAMPLE(1,DTI_LUN),
     &                              BYTE_OFFSET+24,ERROR)
	IF(IERR.NE.DTI__NORMAL)GOTO 900
C
	IERR=DTI_WRITE_REAL_HEADER(DTI_LUN,DTIPROJ_SAMPLE(2,DTI_LUN),
     &                              BYTE_OFFSET+28,ERROR)
	IF(IERR.NE.DTI__NORMAL)GOTO 900
C
C	Units code
	IERR=DTI_WRITE_LONG_HEADER(DTI_LUN,DTIPROJ_UNITS(DTI_LUN),
     &                             BYTE_OFFSET+32,ERROR)
	IF(IERR.NE.DTI__NORMAL)GOTO 900
C
C	Spheroid Code
	IERR=DTI_WRITE_LONG_HEADER(DTI_LUN,DTIPROJ_SPHEROID(DTI_LUN),
     &                             BYTE_OFFSET+36,ERROR)
	IF(IERR.NE.DTI__NORMAL)GOTO 900
C
C	User Spheroid Values (only if spheroid code is 101)
	IF(DTIPROJ_SPHEROID(DTI_LUN).EQ.101)THEN
	  IERR=DTI_WRITE_REAL8_HEADER(DTI_LUN,
     &                                DTIPROJ_USER_SPHEROID(1,DTI_LUN),
     &                                BYTE_OFFSET+40,ERROR)
	  IF(IERR.NE.DTI__NORMAL)GOTO 900
C
	  IERR=DTI_WRITE_REAL8_HEADER(DTI_LUN,
     &                                DTIPROJ_USER_SPHEROID(2,DTI_LUN),
     &                                BYTE_OFFSET+48,ERROR)
	  IF(IERR.NE.DTI__NORMAL)GOTO 900
	ENDIF
C
C	Projection Code
	IERR=DTI_WRITE_LONG_HEADER(DTI_LUN,DTIPROJ_PROJECTION(DTI_LUN),
     &                             BYTE_OFFSET+56,ERROR)
	IF(IERR.NE.DTI__NORMAL)GOTO 900
C
C	Projection Parameters  - Not required for Geographicals or
C	U.K. National Grid
	IF(DTIPROJ_PROJECTION(DTI_LUN).EQ.100.OR.
     &     DTIPROJ_PROJECTION(DTI_LUN).EQ.101)THEN
	   DTI_WRITE_PROJ_REC=DTI__NORMAL
	   GOTO 999
	ENDIF
C
	OFFSET=BYTE_OFFSET+60
	DO 100 I=1,15
	   IERR=DTI_WRITE_REAL8_HEADER(DTI_LUN,
     &                                 DTIPROJ_PROJ_PARAMS(I,DTI_LUN),
     &                                 OFFSET,
     &                                 ERROR)
	   IF(IERR.NE.DTI__NORMAL)GOTO 900
	   OFFSET=OFFSET+8
100	CONTINUE
C
	DTI_WRITE_PROJ_REC=DTI__NORMAL	! signal success
	GOTO 999
C	
C-------------------------------------------------------------------------
C
C	Error occured while writing the header details
900	DTI_WRITE_PROJ_REC=DTI__SYSERR
	RETVAL=ERROR
C
999	RETURN
C
	END
