	INTEGER*4 FUNCTION DTI_INIT_DATA
     &                     ( DTI_LUN, VALUE,
     &			     X_POSN ,Y_POSN, 
     &			     X_NUMBER, Y_NUMBER )
C
***	IDENT	01AU88
***	MODULE	DTI_INIT_DATA
C
C	Copyright : Laser-Scan Laboratories, Cambridge, England
C	Author    : D R Catlow
C
C	Modified  : DRC 06AP87 for use with a bit data file
C	Modified  : DRC 01AU88 to check for write access to the
C	            file opened on DTI_LUN
C
C----------------------------------------------------------------------
C	DTILIB Function.   
C
C	Function to set the whole or part of the DTI data area
C	to the value VALUE.
C	The function calls the initialisation routine appropriate
C	to the data type the file opened on DTI_LUN.
C
C----------------------------------------------------------------------
C
	IMPLICIT NONE
C
C
***	PARAMETER/LSL$CMNDTI:DTIDEF/
***	PARAMETER/LSL$CMNDTI:DTIPAR/
***	PARAMETER/LSL$CMNDTI:DTILIBMSG/
C
***	COMMON/LSL$CMNDTI:DTIHDR/
C
C arguments
	INTEGER*4		DTI_LUN		!which DTI file?
	INTEGER*4		X_NUMBER	!number of columns
	INTEGER*4		Y_NUMBER	!number of rows
	INTEGER*4		X_POSN		!start column value
	INTEGER*4		Y_POSN		!start row value
	BYTE			VALUE	        !value to set data
C						!area to
C local
	INTEGER*4		I		!counter
	INTEGER*4		IERR		!function return code
	INTEGER*4		ERROR		!system error return code
	INTEGER*4		X_ST,Y_ST	!start positions
	INTEGER*4		X_NUM,Y_NUM	!number of cols and rows
C
C functions
	LOGICAL			HAVE_I_AN_ARG	!test for presence of argument
	INTEGER*4		DTI_INIT_BYTE_DATA !to set byte data
	INTEGER*4		DTI_INIT_WORD_DATA !to set word data
	INTEGER*4		DTI_INIT_LONG_DATA !to set long data
	INTEGER*4		DTI_INIT_REAL_DATA !to set real data
	INTEGER*4		DTI_INIT_BIT_DATA  !to set bit data
C
C****************************************************************************
C
C	Test if the supplied LUN number is valid
	IF(DTI_LUN.LT.1.OR.DTI_LUN.GT.MAX_DTI)THEN
	  DTI_INIT_DATA=DTI__BADLUN		!LUN out of range
	  GOTO 999					!Return
	ENDIF
C
C	Test if the supplied LUN is in use
	IF(.NOT.DTILUN_INUSE(DTI_LUN))THEN
	  DTI_INIT_DATA=DTI__LUNUNUSED		!LUN not in use
	  GOTO 999					!Return
	ENDIF
C
C	Test for write access to the file
	IF(READ_ONLY(DTI_LUN))THEN
	  DTI_INIT_DATA=DTI__READONLY		!read only access
	  GOTO 999
	ENDIF
C
C	Do we have a third argument?
	IF(HAVE_I_AN_ARG(3))THEN
C	Test that the remaining 3 optional arguments are present
	   DO 100 I=4,6
	      IF(.NOT.HAVE_I_AN_ARG(I))THEN
	        DTI_INIT_DATA=DTI__MISSARGS	!Missing argument
	        GOTO 999
	      ENDIF			! OK. all arguments present
100	   CONTINUE
C
C      Test if the supplied x and y positions are within the data area
	  IF(X_POSN.LE.0.OR.X_POSN.GT.X_EXTENT(DTI_LUN).OR.
     &	     Y_POSN.LE.0.OR.Y_POSN.GT.Y_EXTENT(DTI_LUN))THEN
	     DTI_INIT_DATA=DTI__BADDATAPOS		!Bad data position
	     GOTO 999					!Return
	   ENDIF
C
C	Test the data extents - is the specified area inside the data area?
	   IF(X_POSN+X_NUMBER-1.GT.X_EXTENT(DTI_LUN).OR.
     &	      Y_POSN+Y_NUMBER-1.GT.Y_EXTENT(DTI_LUN))THEN
	      DTI_INIT_DATA=DTI__BADDATAEXT		!Bad data extents
	      GOTO 999					!Return
	   ENDIF
C
	   X_ST=X_POSN
	   Y_ST=Y_POSN
	   X_NUM=X_NUMBER
	   Y_NUM=Y_NUMBER	   
	ELSE
	   X_ST=1		!start col position
	   Y_ST=1		!start row position
	   X_NUM=X_EXTENT(DTI_LUN)!number of cols to intialise
	   Y_NUM=Y_EXTENT(DTI_LUN)!number of rows to intialise
	ENDIF
C
C----------------------------------------------------------------------------
C	Call copying routine appropriate to the data type
	IF       (DATA_TYPE(DTI_LUN).EQ.DATA_BYTE)THEN
	         IERR=DTI_INIT_BYTE_DATA (DTI_LUN, VALUE,
     &                X_ST, Y_ST, X_NUM, Y_NUM )
C	Check for any error
		 IF(IERR.NE.DTI__NORMAL)THEN
	           DTI_INIT_DATA=IERR
		   GOTO 999
		 ENDIF
C
	ELSE IF  (DATA_TYPE(DTI_LUN).EQ.DATA_WORD)THEN
	         IERR=DTI_INIT_WORD_DATA (DTI_LUN, VALUE,
     &                X_ST, Y_ST, X_NUM, Y_NUM )
C	Check for any error
		 IF(IERR.NE.DTI__NORMAL)THEN
	           DTI_INIT_DATA=IERR
		   GOTO 999
		 ENDIF
C
	ELSE IF  (DATA_TYPE(DTI_LUN).EQ.DATA_BIT)THEN
	         IERR=DTI_INIT_BIT_DATA (DTI_LUN, VALUE,
     &                X_ST, Y_ST, X_NUM, Y_NUM )
C	Check for any error
		 IF(IERR.NE.DTI__NORMAL)THEN
	           DTI_INIT_DATA=IERR
		   GOTO 999
		 ENDIF
C
	ELSE IF  (DATA_TYPE(DTI_LUN).EQ.DATA_LONG)THEN
	         IERR=DTI_INIT_LONG_DATA (DTI_LUN, VALUE,
     &                X_ST, Y_ST, X_NUM, Y_NUM )
C	Check for any error
		 IF(IERR.NE.DTI__NORMAL)THEN
	           DTI_INIT_DATA=IERR
		   GOTO 999
		 ENDIF
C
	ELSE IF  (DATA_TYPE(DTI_LUN).EQ.DATA_REAL)THEN
	         IERR=DTI_INIT_REAL_DATA (DTI_LUN, VALUE,
     &                X_ST, Y_ST, X_NUM, Y_NUM )
C	Check for any error
		 IF(IERR.NE.DTI__NORMAL)THEN
	           DTI_INIT_DATA=IERR
		   GOTO 999
		 ENDIF
	ENDIF
C
C---------------------------------------------------------------------------
C
C	Signal success
	DTI_INIT_DATA=DTI__NORMAL
C
999	RETURN
C
	END
