C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1991-07-17 20:48:56.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	INTEGER*4 FUNCTION DTI_WRITE_LONG_DATA
     &                     ( DTI_LUN, LONG_WRITE, X_POSN ,Y_POSN )
C
***	IDENT	17JL91
***	MODULE	DTI_WRITE_LONG_DATA
C
C	Copyright : Laser-Scan Laboratories, Cambridge, England
C	Author    : D R Catlow
C	Created   : 13 November 1986
C
C	Modified  : DRC 01AU88 To test for write access to the file.
C
C	DTILIB Function.   
C
C	Writes a longword into the DTI data area at position 
C	X_POSN,Y_POSN
C
C	The function returns true if successful.
C
C----------------------------------------------------------------------------
C
	IMPLICIT NONE
C
C parameters
	INCLUDE '($SSDEF)'
C
***	PARAMETER/LSL$CMNDTI:DTIDEF/
***	PARAMETER/LSL$CMNDTI:DTIPAR/
***	PARAMETER/LSL$CMNDTI:DTILIBMSG/
C
***	COMMON/LSL$CMNDTI:DTIHDR/
C
C arguments
	INTEGER*4		LONG_WRITE	!Value of longword
	INTEGER*4		X_POSN		!Column value
	INTEGER*4		Y_POSN		!Row value
	INTEGER*4		DTI_LUN		!which DTI file?
C
C****************************************************************************
C
C	Test if the supplied LUN number is valid
	IF(DTI_LUN.LT.1.OR.DTI_LUN.GT.MAX_DTI)THEN
	  DTI_WRITE_LONG_DATA=DTI__BADLUN		!LUN out of range
	  GOTO 999					!Return
	ENDIF
C
C	Test if the supplied LUN is in use
	IF(.NOT.DTILUN_INUSE(DTI_LUN))THEN
	  DTI_WRITE_LONG_DATA=DTI__LUNUNUSED		!LUN not in use
	  GOTO 999					!Return
	ENDIF
C
C	Test if the file is set up to receive longword data
	IF(DATA_TYPE(DTI_LUN).NE.DATA_LONG)THEN
	  DTI_WRITE_LONG_DATA=DTI__DATAMISMATCH		!Data type mismatch
	  GOTO 999
	ENDIF
C
C	Test for write access to the file
	IF(READ_ONLY(DTI_LUN))THEN
	  DTI_WRITE_LONG_DATA=DTI__READONLY		!read only access
	  GOTO 999
	ENDIF
C
C	Test if the supplied x and y positions are within the data area
	IF(X_POSN.LE.0.OR.X_POSN.GT.X_EXTENT(DTI_LUN).OR.
     &	   Y_POSN.LE.0.OR.Y_POSN.GT.Y_EXTENT(DTI_LUN))THEN
	  DTI_WRITE_LONG_DATA=DTI__BADDATAPOS		!Bad data position
	  GOTO 999					!Return
	ENDIF
C
C----------------------------------------------------------------------------
C	O.K. now write the value of the word
	CALL DTI_WL_DATA (%VAL(SEC_ADDR(DTI_LUN)+DATA_OFFSET(DTI_LUN)),
     & 		          X_POSN,Y_POSN,LONG_WRITE,DTI_LUN)
C
	DTI_WRITE_LONG_DATA=DTI__NORMAL	!Signal success
C
999	RETURN
C
	END
C
C****************************************************************************
C
	SUBROUTINE DTI_WL_DATA
     &  (DATA_ARRAY,COL_POSN,ROW_POSN,VALUE,WHICH_DTI)
C
***	IDENT	13OC86
***	MODULE	DTI_WL_DATA
C
C	Copyright : Laser-Scan Laboratories, Cambridge, England
C	Author    : D R Catlow
C	Mod	  : PGH/JB	Redefine DATA_ARRAY
C
	IMPLICIT NONE
C
***	COMMON/LSL$CMNDTI:DTIHDR/
C
C arguments
	INTEGER*4	WHICH_DTI		!which DTI file?	
CCC	INTEGER*4	DATA_ARRAY(Y_EXTENT(WHICH_DTI),!data array
CCC  &				   X_EXTENT(WHICH_DTI))
C
	INTEGER*4	DATA_ARRAY(*)
C Above declaration used to work, but violates the Fortran standard,
C in that an array bound expression may not refer to another array!
C The compiler now objects, so change to assumed size array (*).
C
	INTEGER*4	COL_POSN		!x coordinate
	INTEGER*4	ROW_POSN		!y coordinate
	INTEGER*4	VALUE			!word value
	INTEGER*4	N
	INTEGER*4	MAX_Y,MAX_X
C
C---------------------------------------------------------------------------
	MAX_Y = Y_EXTENT(WHICH_DTI)
C	MAX_X = X_EXTENT(WHICH_DTI)
C
C Transfer word value - very easy
C	DATA_ARRAY(ROW_POSN,COL_POSN)=VALUE
C
	N = MAX_Y*(COL_POSN-1) + ROW_POSN
	DATA_ARRAY(N) = VALUE
C
	RETURN
	END
C
