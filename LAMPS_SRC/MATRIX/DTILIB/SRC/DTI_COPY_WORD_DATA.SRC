C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1991-07-18 13:12:46.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	INTEGER*4 FUNCTION DTI_COPY_WORD_DATA
     &                     ( DTI_LUN, WORD_ARRAY, TO , X_POSN ,Y_POSN, 
     &			     X_NUMBER, Y_NUMBER, RETVAL)
C
***	IDENT	18JL91
***	MODULE	DTI_COPY_WORD_DATA
C
C	Copyright : Laser-Scan Laboratories, Cambridge, England
C	Author    : D R Catlow
C	Modified  : DRC 01AU88 to check for write access if we
C	            are copying from the user array to the data area.
C
C	DTILIB Function.   
C
C	If TO is true copies an array of word values from
C	WORD_ARRAY into the DTI data area.
C	If TO is false, transfers values from the DTI data area
C	into the user array.
C
C	Number of values to copy is determined bu X_NUMBER and
C	Y_NUMBER.  The start position in the data area is
C	X_POSN,Y_POSN.
C
C	The function returns true if successful.
C	Any system error is returned in RETVAL.
C
C-----------------------------------------------------------------------
C
	IMPLICIT NONE
C
C parameters
	INCLUDE '($SSDEF)'
C
***	PARAMETER/LSL$CMNDTI:DTIDEF/
***	PARAMETER/LSL$CMNDTI:DTIPAR/
***	PARAMETER/LSL$CMNDTI:DTILIBMSG/
C
***	COMMON/LSL$CMNDTI:DTIHDR/
C
C arguments
	INTEGER*4		DTI_LUN		!which DTI file?
	INTEGER*4		X_NUMBER	!number of columns
	INTEGER*4		Y_NUMBER	!number of rows
	INTEGER*4		X_POSN		!start column value
	INTEGER*4		Y_POSN		!start row value
	INTEGER*4		RETVAL		!system error return code
	INTEGER*2		WORD_ARRAY(X_NUMBER*Y_NUMBER)!user array
	LOGICAL			TO		!if true copy data
C						from user array to data area
C
C local
	INTEGER*4		I		!counter
	INTEGER*4		XCOUNT		!X position from which
C						!to transfer
	INTEGER*4		YCOUNT		!Y position
	INTEGER*4		ERROR		!system error return code
	INTEGER*4		OFFSET		!offset in user array
	INTEGER*4		SIZE		!size of user array
C
C****************************************************************************
C
C	Test if the supplied LUN number is valid
	IF(DTI_LUN.LT.1.OR.DTI_LUN.GT.MAX_DTI)THEN
	  DTI_COPY_WORD_DATA=DTI__BADLUN		!LUN out of range
	  GOTO 999					!Return
	ENDIF
C
C	Test if the supplied LUN is in use
	IF(.NOT.DTILUN_INUSE(DTI_LUN))THEN
	  DTI_COPY_WORD_DATA=DTI__LUNUNUSED		!LUN not in use
	  GOTO 999					!Return
	ENDIF
C
C	Test if the file is set up to contain word data
	IF(DATA_TYPE(DTI_LUN).NE.DATA_WORD)THEN
	  DTI_COPY_WORD_DATA=DTI__DATAMISMATCH		!Data type mismatch
	  GOTO 999
	ENDIF
C
C	Test for write access if we are copying from the word
C	array to the data area
	IF(TO.AND.READ_ONLY(DTI_LUN))THEN
	  DTI_COPY_WORD_DATA=DTI__READONLY		!read only access
	  GOTO 999
	ENDIF
C
C	Test if the supplied x and y positions are within the data area
	IF(X_POSN.LE.0.OR.X_POSN.GT.X_EXTENT(DTI_LUN).OR.
     &	   Y_POSN.LE.0.OR.Y_POSN.GT.Y_EXTENT(DTI_LUN))THEN
	  DTI_COPY_WORD_DATA=DTI__BADDATAPOS		!Bad data position
	  GOTO 999					!Return
	ENDIF
C
C	Test the data extents - is the specified area inside the data area?
	IF(X_POSN+X_NUMBER-1.GT.X_EXTENT(DTI_LUN).OR.
     &	   Y_POSN+Y_NUMBER-1.GT.Y_EXTENT(DTI_LUN))THEN
	  DTI_COPY_WORD_DATA=DTI__BADDATAEXT		!Bad data extents
	  GOTO 999					!Return
	ENDIF
C
C----------------------------------------------------------------------------
C
	SIZE=X_NUMBER*Y_NUMBER		!total number of bytes to transfer
	YCOUNT=Y_POSN			!constant
	XCOUNT=X_POSN			!initial column value
	OFFSET=1			!initial offset in user array
C
	IF(.NOT.TO)GOTO 500
C
C----------------------------------------------------------------------------
C
C	Copy data from the user array to the data area
C
	DO 300 I=1,X_NUMBER
C
	   CALL COPY_WD_FROM
     &                (%VAL(SEC_ADDR(DTI_LUN)+DATA_OFFSET(DTI_LUN)), 
     & 		      XCOUNT,YCOUNT,Y_NUMBER,SIZE,WORD_ARRAY,
     &		      OFFSET,DTI_LUN,ERROR)
C
C	   Check for any error 
	   IF(ERROR.NE.SS$_NORMAL)THEN
	     DTI_COPY_WORD_DATA=DTI__SYSERR
	     RETVAL=ERROR			!Pass back system error
	     GOTO 999
	   ENDIF
C	    	    
	   XCOUNT=X_POSN+I
	   OFFSET=OFFSET+Y_NUMBER
C
300	CONTINUE
C
	DTI_COPY_WORD_DATA=DTI__NORMAL	!Signal success
	GOTO 999
C
C----------------------------------------------------------------------------
C
C	Copy data to the user array from the data area
C
500	DO 600 I=1,X_NUMBER
C
	   CALL COPY_WD_TO
     &                (%VAL(SEC_ADDR(DTI_LUN)+DATA_OFFSET(DTI_LUN)), 
     & 		      XCOUNT,YCOUNT,Y_NUMBER,SIZE,WORD_ARRAY,
     &		      OFFSET,DTI_LUN,ERROR)
C
C	   Check for any error 
	   IF(ERROR.NE.SS$_NORMAL)THEN
	     DTI_COPY_WORD_DATA=DTI__SYSERR
	     RETVAL=ERROR			!Pass back system error
	     GOTO 999
	   ENDIF
C	    	    
	   XCOUNT=X_POSN+I
	   OFFSET=OFFSET+Y_NUMBER
C
600	CONTINUE
C
	DTI_COPY_WORD_DATA=DTI__NORMAL	!Signal success
C
C----------------------------------------------------------------------------
C
999	RETURN
C
	END
C
C****************************************************************************
C
	SUBROUTINE COPY_WD_TO
     &	(DATA_ARRAY,COL_POS,ROW_POS,NUMBER_WORDS,
     &   ARRAY_SIZE,USER_ARRAY,ARRAY_OFF,WHICH_DTI,ERROR)
C
***	IDENT	13OC86
***	MODULE	COPY_WD_TO
C
C	Copyright : Laser-Scan Laboratories, Cambridge, England
C	Author    : D R Catlow
C	Mod	  : PGH/JB	Redefine DATA_ARRAY
C
C	Routine called by DTI_COPY_WORD_DATA to
C	transfer values from data area to user array
C
C------------------------------------------------------------------------
C
	IMPLICIT NONE
C
***	COMMON/LSL$CMNDTI:DTIHDR/
C
C arguments
	INTEGER*4	WHICH_DTI		!which DTI file
CCC	INTEGER*2	DATA_ARRAY(Y_EXTENT(WHICH_DTI),!data array
CCC  &				   X_EXTENT(WHICH_DTI))
C
	INTEGER*2	DATA_ARRAY(*)
C
	INTEGER*4	COL_POS			!column value
	INTEGER*4	ROW_POS			!row value
	INTEGER*4	NUMBER_WORDS		!number of words to copy
	INTEGER*4	ARRAY_SIZE		!size of user array
	INTEGER*4	ARRAY_OFF		!offset in user array
	INTEGER*4	ERROR			!VIOMV3 return code
	INTEGER*2	USER_ARRAY(ARRAY_SIZE)	!user array
C
C function
	INTEGER*4	VIOMV3			!to transfer bytes
C
C local
	INTEGER*4	NUMBER_BYTES	!number of bytes to transfer
	INTEGER*4	N
	INTEGER*4	MAX_Y,MAX_X
C
C---------------------------------------------------------------------------
	MAX_Y = Y_EXTENT(WHICH_DTI)
C	MAX_X = X_EXTENT(WHICH_DTI)
C
C Calculate number of bytes to transfer
	NUMBER_BYTES=NUMBER_WORDS*2
C
C Transfer from source to destination
C	ERROR=VIOMV3(DATA_ARRAY(ROW_POS,COL_POS),
C    &               NUMBER_BYTES,USER_ARRAY(ARRAY_OFF))
C
	N = MAX_Y*(COL_POS-1) + ROW_POS
	ERROR=VIOMV3(DATA_ARRAY(N),
     &               NUMBER_BYTES,USER_ARRAY(ARRAY_OFF))
C
999	RETURN
	END
C
C****************************************************************************
C
	SUBROUTINE COPY_WD_FROM
     &	(DATA_ARRAY,COL_POS,ROW_POS,NUMBER_WORDS,
     &   ARRAY_SIZE,USER_ARRAY,ARRAY_OFF,WHICH_DTI,ERROR)
C
***	IDENT	13OC86
***	MODULE	COPY_WD_FROM
C
C	Copyright : Laser-Scan Laboratories, Cambridge, England
C	Author    : D R Catlow
C	Mod	  : PGH/JB	Redefine DATA_ARRAY
C
C	Routine called by DTI_COPY_WORD_DATA to
C	transfer values to data area from user array
C
C------------------------------------------------------------------------
C
	IMPLICIT NONE
C
***	COMMON/LSL$CMNDTI:DTIHDR/
C
C arguments
	INTEGER*4	WHICH_DTI			!which DTI file
CCC	INTEGER*2	DATA_ARRAY(Y_EXTENT(WHICH_DTI), !data array
CCC  &				   X_EXTENT(WHICH_DTI))
C
	INTEGER*2	DATA_ARRAY(*)
C
	INTEGER*4	COL_POS			!column value
	INTEGER*4	ROW_POS			!row value
	INTEGER*4	NUMBER_WORDS		!number of words to copy
	INTEGER*4	ARRAY_SIZE		!size of user array
	INTEGER*2	USER_ARRAY(ARRAY_SIZE)	!user array
	INTEGER*4	ARRAY_OFF		!offset in user array
	INTEGER*4	ERROR			!VIOMV3 return code
C
C function
	INTEGER*4	VIOMV3		!to transfer bytes
C
C local
	INTEGER*4	NUMBER_BYTES	!number of bytes to transfer
	INTEGER*4	N
	INTEGER*4	MAX_Y,MAX_X
C
C---------------------------------------------------------------------------
	MAX_Y = Y_EXTENT(WHICH_DTI)
C	MAX_X = X_EXTENT(WHICH_DTI)
C
C Number of bytes to transfer
	NUMBER_BYTES=NUMBER_WORDS*2
C
C Transfer from user array to DTI data area.
C	ERROR=VIOMV3(USER_ARRAY(ARRAY_OFF),NUMBER_BYTES,
C    & 		     DATA_ARRAY(ROW_POS,COL_POS))
C
	N = MAX_Y*(COL_POS-1) + ROW_POS
	ERROR=VIOMV3(USER_ARRAY(ARRAY_OFF),NUMBER_BYTES,
     & 		     DATA_ARRAY(N))
C	
999	RETURN
	END
C
