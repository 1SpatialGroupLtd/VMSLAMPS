	INTEGER*4 FUNCTION DTI_CLOSE ( DTI_LUN, UPDATE, CLEAR_COMMON, 
     &				       RETVAL )
C
***	IDENT	27SE91
***	MODULE	DTI_CLOSE
C
C	Copyright : Laser-Scan, Cambridge, England
C	Author    : D R Catlow
C
CMOD    DRC 08FE88 To pass lun argument in range 0-8 to VIO$CLOSE_SEC
CMOD    DRC 03AU88 Parameter DTI_DTED changed to DTI_TED4
CMOD    DRC 16NO88 To call DTI_WRITE_PROJ_REC if UPDATE and
C		   HAD_PROJ_RECORD(DTI_LUN) are both true.
CMOD1045 JB 26SE91 Projection header not written back if UPDATE is .FALSE.
C
C	DTILIB Function.   
C
C	Closes the file opened on DTI_LUN.
C	The file is unmapped using the LSLLIB function VIO$CLOSE_SEC.
C	The header values in common block DTIHDR are written to the
C	mapped file before closing if UPDATE is true, and the 
C	appropriate values in common are cleared if CLEAR_COMMON is true.
C	Projection data held in common block DTIPROJ is also written
C	to the mapped file by a call to DTI_WRITE_PROJ_REC if UPDATE
C	is true, and the variable HAD_PROJ_REC(DTI_LUN) is true.
C
C	The function returns true if successful; any system error
C	is returned in RETVAL.
C
C--------------------------------------------------------------------------
C
	IMPLICIT NONE
C
C parameters
	INCLUDE '($SSDEF)'
C
***	PARAMETER/LSL$CMNDTI:DTIDEF/
***	PARAMETER/LSL$CMNDTI:DTIPAR/
***	PARAMETER/LSL$CMNDTI:DTILIBMSG/
C
***	COMMON/LSL$CMNDTI:DTIHDR/
***	COMMON/LSL$CMNDTI:DTIPROJ/
C
C arguments
	INTEGER*4		DTI_LUN		!LUN on which to close file
	LOGICAL			UPDATE		!If .t. write header
C						!details before closing
	LOGICAL			CLEAR_COMMON	!If .t. clear variables in
C						!common relating to this file
	INTEGER*4		RETVAL		!system error return
C
C functions
	INTEGER*4	DTI_WRITE_HEADER	!to write header values
C						!to DTI header
	INTEGER*4	DTI_WRITE_PROJ_REC	!to write proj rec
	INTEGER*4	VIO$CLOSE_SEC		!to unmap file
C
C local
	INTEGER*4		VIO_LUN		!LUN passed to VIO$CLOSE_SEC
	INTEGER*4		IERR		!error return code
	INTEGER*4		I		!counter
	INTEGER*4		ERROR		!sytem error code
C
C****************************************************************************
C	Test if the supplied LUN number is valid
	IF(DTI_LUN.LT.1.OR.DTI_LUN.GT.MAX_DTI)THEN
	  DTI_CLOSE=DTI__BADLUN		! LUN out of range
	  GOTO 999			! Return
	ENDIF
C
C	Test if the supplied LUN is in use
	IF(.NOT.DTILUN_INUSE(DTI_LUN))THEN
	  DTI_CLOSE=DTI__LUNUNUSED	! LUN not in use
	  GOTO 999			! Return
	ENDIF
C
C----------------------------------------------------------------------------
C	Update header values if necessary
C
C	Note: Despite failure to write header values, the routine continues
C	and attempts to unmap the file
	IF (UPDATE) THEN
	  IERR = DTI_WRITE_HEADER (DTI_LUN,ERROR)
	  IF (IERR.NE.DTI__NORMAL)THEN
	    DTI_CLOSE=IERR
	    RETVAL=ERROR		!?
	  ENDIF
	ENDIF	  
C
C----------------------------------------------------------------------------
C	Note: Despite failure to write header values, the routine continues
C	and attempts to unmap the file
	IF ((HEADER_TYPE(DTI_LUN).EQ.DTI_LSLA .OR.
     &	     HEADER_TYPE(DTI_LUN).EQ.DTI_ALVY) .AND.
     &       HAD_PROJ_RECORD(DTI_LUN) .AND. UPDATE) THEN
	  IERR = DTI_WRITE_PROJ_REC(DTI_LUN,
     &                              DTIPROJ_RECORD_OFFSET(DTI_LUN),
     &                              ERROR)
	  IF (IERR.NE.DTI__NORMAL) THEN
	    DTI_CLOSE=IERR
	    RETVAL=ERROR		!?
	  ENDIF
	ENDIF	  
C          
C----------------------------------------------------------------------------
C	Unmap the file from virtual memory
C
	VIO_LUN=DTI_LUN-1
	IERR  = VIO$CLOSE_SEC (VIO_LUN) ! LUN to close the file on 
C
	IF (IERR.NE.SS$_NORMAL) THEN	! Unsuccessful
	  DTI_CLOSE=DTI__SYSERR		! system error during close
	  RETVAL=IERR			! Pass back system error
	  GOTO 999
	ENDIF
C
C---------------------------------------------------------------------------
C	Flag the DTILUN as being free, and initialise mapped section
C	variables.
C
	DTILUN_INUSE(DTI_LUN)=.FALSE.
	SEC_ADDR(DTI_LUN)=0
	SEC_SIZE(DTI_LUN)=0	
C
C---------------------------------------------------------------------------
C	If CLEAR_COMMON, also initialise the variables in DTIHDR relating
C	to this file.
C
	IF(CLEAR_COMMON)THEN
	  X_GRID(DTI_LUN)     =0.0
	  Y_GRID(DTI_LUN)     =0.0
	  MIN_RVALUE(DTI_LUN) =0.0
	  MAX_RVALUE(DTI_LUN) =0.0
	  MIN_LVALUE(DTI_LUN) =0
	  MAX_LVALUE(DTI_LUN) =0
	  MIN_WVALUE(DTI_LUN) =0
	  MAX_WVALUE(DTI_LUN) =0
	  X_EXTENT(DTI_LUN)   =0
	  Y_EXTENT(DTI_LUN)   =0
	  DATA_OFFSET(DTI_LUN)=0
	  DATA_TYPE(DTI_LUN)  =0
	  DTI_NAME_LENGTH(DTI_LUN)=0
C
	  X_OFFSET(DTI_LUN) = 0
	  Y_OFFSET(DTI_LUN) = 0
	  DTI_WINDOW_SWX(DTI_LUN) = 0
	  DTI_WINDOW_SWY(DTI_LUN) = 0
	  DTI_WINDOW_NEX(DTI_LUN) = 0
	  DTI_WINDOW_NEY(DTI_LUN) = 0	
C
	  DTI_ORDER_CORNER(DTI_LUN) = 0
	  DTI_ORDER_DIRECTION(DTI_LUN) = 0
	  HAD_PROJ_RECORD(DTI_LUN)=.FALSE.
C	
C	Clear LAT/LONG values if necessary
	  IF(HEADER_TYPE(DTI_LUN).EQ.DTI_TED4)THEN
	    LATINT(DTI_LUN)=0
	    LONINT(DTI_LUN)=0
	    LONORI(DTI_LUN)=0
	    LATORI(DTI_LUN)=0
	    DO 100 I=1,4
	       LATREC(I,DTI_LUN)=0
	       LONREC(I,DTI_LUN)=0
100	    CONTINUE
	  ENDIF
C
C	Clear DTIPROJ variables if LSLA file
	  IF(HEADER_TYPE(DTI_LUN).EQ.DTI_LSLA)THEN
	    DTIPROJ_RECORD_OFFSET(DTI_LUN)=0
	    DTIPROJ_ORIGIN(1,DTI_LUN)=0.0
	    DTIPROJ_ORIGIN(2,DTI_LUN)=0.0
	    DTIPROJ_ORIGIN(1,DTI_LUN)=0.0
	    DTIPROJ_ORIGIN(2,DTI_LUN)=0.0
	    DTIPROJ_UNITS(DTI_LUN)=0
	    DTIPROJ_SPHEROID(DTI_LUN)=0
	    DTIPROJ_PROJECTION(DTI_LUN)=0
	    DTIPROJ_USER_SPHEROID(1,DTI_LUN)=0.0
	    DTIPROJ_USER_SPHEROID(2,DTI_LUN)=0.0
	    DO 500 I=1,15
	       DTIPROJ_PROJ_PARAMS(I,DTI_LUN)=0.0
500	    CONTINUE
	  ENDIF	   
C
	  HEADER_TYPE(DTI_LUN)=0	     	
	ENDIF
C	  
	DTI_CLOSE=DTI__NORMAL	! signal success
C
C----------------------------------------------------------------------------
C
999	RETURN
	END
C
