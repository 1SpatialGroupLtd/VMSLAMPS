	PROGRAM DTIPATCH
C
***	MODULE DTIPATCH
***	IDENT  02AU91
C
C Copyright Laser Scan Laboratories Ltd., Cambridge, England
C Author: 	D R Catlow.
C
CMOD	Check for negative values		MWSR	20-Jan-1989
C	Jiffy Program to Patch DTI file header
C	User is prompted for a file, and then the 6 or 8 values
C	Carriage Return leaves existing value unchanged
C
CMOD	Update projection records at the same time	JB 2-Aug-1991
C
	IMPLICIT NONE
C
***	COMMON/LSL$CMNDTI:DTIHDR/
***	COMMON/LSL$CMNDTI:DTIPROJ/
***	PARAMETER/LSL$CMNDTI:DTIPAR/
***	PARAMETER/LSL$CMNDTI:DTILIBMSG/
***	PARAMETER/LSL$CMNLSL:LSLLIBMSG/
C
C----------------------------------------------------------------------
C workspace
	INTEGER*4	ERROR		! system error
	INTEGER*4	RETVAL		! function return
	INTEGER*4	NCHS		! number of characters
	INTEGER*4	LONGWORD	! longword value
C
C functions called
	LOGICAL		RDREAL		! reads a real value
	INTEGER*4	RDLONG		! reads a longword value
	INTEGER*4	TTRSTR		! read line from terminal
	INTEGER*4	GETFILNAM	! to parse filename
C
	INTEGER*4	DTI_OPEN	! to open the DTI file
	INTEGER*4	DTI_CLOSE	! to update header and close DTI
	CHARACTER*2	CORNER(4)
	CHARACTER*15	DIRECTION(2)
C
	DATA CORNER/'SW','NW','NE','SE'/
	DATA DIRECTION/'(clockwise)    ','(anticlockwise)'/
C
C***********************************************************************
C	Initialise the libraries
	CALL LSL_INIT
	CALL DTI_INIT
C
C	Announce ourself
	CALL DTMJPI
C
	CALL WRITEF(' ')
	CALL WRITEF('		    DTIPATCH ')
	CALL WRITEF(' ')
	CALL WRITEF('This module allows the first part of the DTI header
     & to be edited.')
	CALL WRITEF('You will be prompted for a filename, followed by a
     & series of header')
        CALL WRITEF('values.')
	CALL WRITEF('To leave a header value unchanged, press RETURN')
	CALL WRITEF(' ')
	CALL WRITEF('	********************************************')
	CALL WRITEF('	* WARNING - NO CONSISTENCY CHECKS ARE MADE *')
	CALL WRITEF('	********************************************')
	CALL WRITEF(' ')
C
C	Prompt for filename
C
10	RETVAL=TTRSTR(,NCHS,'Enter DTI filename > ')	
	IF(.NOT.RETVAL)THEN
	  IF(RETVAL.EQ.LSL__EOF)GOTO 999
	  CALL LSL_PUTMSG(RETVAL)
	  GOTO 10
	ENDIF
C
	IF(NCHS.EQ.0)GOTO 10
	CALL BSLN
C
C	Parse the input file name against LSL$DTI:.DTI
15	RETVAL=GETFILNAM(DTI_NAME(1),
     &                   DTI_NAME_LENGTH(1),
     &                   'LSL$DTI:.DTI',
     &                   .TRUE.)
C
	IF(.NOT.RETVAL)THEN
	  CALL LSL_PUTMSG(RETVAL)
	  GOTO 10
	ENDIF
C
C-----------------------------------------------------------------------
C	Open and map the file.  
C	Note the file is opened for read only.
	RETVAL = DTI_OPEN (1, 
     &                     DTI_NAME(1), 
     &                     DTI_NAME_LENGTH(1),
     &                     .TRUE.,
     &	                   ERROR)
C
	IF(RETVAL.NE.DTI__NORMAL)THEN
	  CALL LSL_PUTMSG(RETVAL)
	  IF(RETVAL.EQ.DTI__SYSERR)CALL LSL_PUTMSG(ERROR)
	  GOTO 10			!return
	ENDIF
C
C	Print out existing header values
C
	CALL WRITEF(' ')
	CALL WRITEF('Existing Header Values')
	CALL WRITEF('------------------------------------')
C
	IF(HEADER_TYPE(1).EQ.DTI_LSLA)THEN
	  CALL WRITEF('Corner of Data Origin : %N (%S)',
     &    DTI_ORDER_CORNER(1),CORNER(DTI_ORDER_CORNER(1)+1))
	  CALL WRITEF('Data Direction        : %N %S',
     &    DTI_ORDER_DIRECTION(1),DIRECTION(DTI_ORDER_DIRECTION(1)+1))
	  CALL WRITEF(' ')
	ENDIF
C
	CALL WRITEF('Number of Columns     : %I7',X_EXTENT(1))
	CALL WRITEF('Number of Rows        : %I7',Y_EXTENT(1))  
	CALL WRITEF('X Grid Interval       : %F10.2',X_GRID(1))
	CALL WRITEF('Y Grid Interval       : %F10.2',Y_GRID(1))
C
	IF(DATA_TYPE(1).EQ.DATA_REAL)THEN
	  CALL WRITEF('Minimum Data Value    : %F10.2',MIN_RVALUE(1))
	  CALL WRITEF('Maximum Data Value    : %F10.2',MAX_RVALUE(1))
	ELSE IF(DATA_TYPE(1).EQ.DATA_LONG)THEN
	  CALL WRITEF('Minimum Data Value    : %I7',MIN_LVALUE(1))
	  CALL WRITEF('Maximum Data Value    : %I7',MAX_LVALUE(1))
	ELSE
	  CALL WRITEF('Minimum Data Value    : %^W%I7',MIN_WVALUE(1))
	  CALL WRITEF('Maximum Data Value    : %^W%I7',MAX_WVALUE(1))
	ENDIF
	CALL WRITEF(' ')
C
C Copy existing values
C
	IF(HEADER_TYPE(1).EQ.DTI_LSLA)THEN
	  DTI_ORDER_CORNER(2)=DTI_ORDER_CORNER(1)
	  DTI_ORDER_DIRECTION(2)=DTI_ORDER_DIRECTION(1)
	ENDIF
C
	X_EXTENT(2)=X_EXTENT(1)
	Y_EXTENT(2)=Y_EXTENT(1)
	X_GRID(2)  =X_GRID(1)
	Y_GRID(2)  =Y_GRID(1)
	IF(DATA_TYPE(1).EQ.DATA_REAL)THEN
	  MIN_RVALUE(2)=MIN_RVALUE(1)
	  MAX_RVALUE(2)=MAX_RVALUE(1)
	ELSE IF(DATA_TYPE(1).EQ.DATA_LONG)THEN
	  MIN_LVALUE(2)=MIN_LVALUE(1)
	  MAX_LVALUE(2)=MAX_LVALUE(1)
	ELSE
	  MIN_WVALUE(2)=MIN_WVALUE(1)
	  MAX_WVALUE(2)=MAX_WVALUE(1)
	ENDIF
C
C Prompt for values
C
	IF(HEADER_TYPE(1).EQ.DTI_LSLA)THEN
100	  RETVAL=TTRSTR(,NCHS,'Corner of Data Origin > ')
	  IF(.NOT.RETVAL)THEN
	    IF(RETVAL.EQ.LSL__EOF)GOTO 999
	    CALL LSL_PUTMSG(RETVAL)
	    GOTO 100
	  ENDIF
	  CALL BSLN
	  IF(NCHS.EQ.0)GOTO 170
C
	  IF(RDLONG(LONGWORD))GOTO 100
C
	  IF(LONGWORD.NE.DTI_ORDER_SW.AND.
     &       LONGWORD.NE.DTI_ORDER_NW.AND.
     &       LONGWORD.NE.DTI_ORDER_NE.AND.
     &       LONGWORD.NE.DTI_ORDER_SE)THEN
	    CALL WRITEF('Number out of range')
            GOTO 100
	  ENDIF
C
	  DTI_ORDER_CORNER(2)=LONGWORD
C
170	  RETVAL=TTRSTR(,NCHS,'Data Direction        > ')
	  IF(.NOT.RETVAL)THEN
	    IF(RETVAL.EQ.LSL__EOF)GOTO 999
	    CALL LSL_PUTMSG(RETVAL)
	    GOTO 170
	  ENDIF
	  CALL BSLN
	  IF(NCHS.EQ.0)GOTO 200
C
	  IF(RDLONG(LONGWORD))GOTO 170
C
	  IF(LONGWORD.NE.DTI_ORDER_CLOCKWISE.AND.
     &       LONGWORD.NE.DTI_ORDER_ANTICLOCKWISE)THEN
	    CALL WRITEF('Number out of range')
            GOTO 170
	  ENDIF
C
	  DTI_ORDER_DIRECTION(2)=LONGWORD
C
	ENDIF
C
C------------------------------------------------------------------
200	RETVAL=TTRSTR(,NCHS,'Number of Columns     > ')	
	IF(.NOT.RETVAL)THEN
	  IF(RETVAL.EQ.LSL__EOF)GOTO 999
	  CALL LSL_PUTMSG(RETVAL)
	  GOTO 200
	ENDIF
	CALL BSLN
	IF(NCHS.EQ.0)GOTO 300
C
250	IF(RDLONG(X_EXTENT(2)))GOTO 200
	IF (X_EXTENT(2) .LT. 1) THEN
	    CALL WRITEF('Number out of range')
	    X_EXTENT(2) = X_EXTENT(1)
	    GOTO 200
	ENDIF
C
300	RETVAL=TTRSTR(,NCHS,'Number of Rows        > ')	
	IF(.NOT.RETVAL)THEN
	  IF(RETVAL.EQ.LSL__EOF)GOTO 999
	  CALL LSL_PUTMSG(RETVAL)
	  GOTO 300
	ENDIF
	CALL BSLN
	IF(NCHS.EQ.0)GOTO 400
C
350	IF(RDLONG(Y_EXTENT(2)))GOTO 300
	IF (Y_EXTENT(2).LT. 1) THEN	
	    CALL WRITEF('Number out of range')
	    Y_EXTENT(2) = Y_EXTENT(1)
	    GOTO 300
	ENDIF
C
400	RETVAL=TTRSTR(,NCHS,'X Grid Interval       > ')	
	IF(.NOT.RETVAL)THEN
	  IF(RETVAL.EQ.LSL__EOF)GOTO 999
	  CALL LSL_PUTMSG(RETVAL)
	  GOTO 400
	ENDIF
	CALL BSLN
	IF(NCHS.EQ.0)GOTO 500
C
450	IF(RDREAL(X_GRID(2)))GOTO 400
	IF (X_GRID(2).LE. 0) THEN
	   CALL WRITEF('Number out of range')
	   X_GRID(2) = X_GRID(1)
	   GOTO 400
	ENDIF
C
500	RETVAL=TTRSTR(,NCHS,'Y Grid Interval       > ')	
	IF(.NOT.RETVAL)THEN
	  IF(RETVAL.EQ.LSL__EOF)GOTO 999
	  CALL LSL_PUTMSG(RETVAL)
	  GOTO 500
	ENDIF
	CALL BSLN
	IF(NCHS)999,600,550
C
550	IF(RDREAL(Y_GRID(2)))GOTO 500
	IF (Y_GRID(2).LE. 0) THEN
	   CALL WRITEF('Number out of range')
	   Y_GRID(2) = Y_GRID(1)
	   GOTO 500
	ENDIF
C
600	RETVAL=TTRSTR(,NCHS,'Minimum Data Value    > ')	
	IF(.NOT.RETVAL)THEN
	  IF(RETVAL.EQ.LSL__EOF)GOTO 999
	  CALL LSL_PUTMSG(RETVAL)
	  GOTO 600
	ENDIF
	CALL BSLN
	IF(NCHS.EQ.0)GOTO 700
C
65	IF(DATA_TYPE(1).EQ.DATA_REAL)THEN
	  IF(RDREAL(MIN_RVALUE(2)))GOTO 600
	ELSE IF(DATA_TYPE(1).EQ.DATA_LONG)THEN
	  IF(RDLONG(MIN_LVALUE(2)))GOTO 600
	ELSE IF(DATA_TYPE(1).EQ.DATA_WORD)THEN
	  IF(RDLONG(MIN_LVALUE(2)))GOTO 600
	  IF(MIN_LVALUE(2).LT.-32768.OR.MIN_LVALUE(2).GT.32767)THEN
	    CALL WRITEF('Number out of range')
	    GOTO 600
	  ELSE
	    MIN_WVALUE(2)=MIN_LVALUE(2)
	  ENDIF
	ELSE IF(DATA_TYPE(1).EQ.DATA_BYTE)THEN
	  IF(RDLONG(MIN_LVALUE(2)))GOTO 600
	  IF(MIN_LVALUE(2).LT.0.OR.MIN_LVALUE(2).GT.255)THEN
	    CALL WRITEF('Number out of range')
	    GOTO 600
	  ELSE
	    MIN_WVALUE(2)=MIN_LVALUE(2)
	  ENDIF
	ELSE IF(DATA_TYPE(1).EQ.DATA_BIT)THEN
	  IF(RDLONG(MIN_LVALUE(2)))GOTO 600
	  IF(MIN_LVALUE(2).NE.0.AND.MIN_LVALUE(2).NE.1)THEN
	    CALL WRITEF('Number out of range')
	    GOTO 600
	  ELSE
	    MIN_WVALUE(2)=MIN_LVALUE(2)
	  ENDIF
	ENDIF
C
700	RETVAL=TTRSTR(,NCHS,'Maximum Data Value    > ')	
	IF(.NOT.RETVAL)THEN
	  IF(RETVAL.EQ.LSL__EOF)GOTO 999
	  CALL LSL_PUTMSG(RETVAL)
	  GOTO 700
	ENDIF
	CALL BSLN
	IF(NCHS.EQ.0)GOTO 80
C
75	IF(DATA_TYPE(1).EQ.DATA_REAL)THEN
	  IF(RDREAL(MAX_RVALUE(2)))GOTO 700
	ELSE IF(DATA_TYPE(1).EQ.DATA_LONG)THEN
	  IF(RDLONG(MAX_LVALUE(2)))GOTO 700
	ELSE IF(DATA_TYPE(1).EQ.DATA_WORD)THEN
	  IF(RDLONG(MAX_LVALUE(2)))GOTO 700
	  IF(MAX_LVALUE(2).LT.-32768.OR.MAX_LVALUE(2).GT.32767)THEN
	    CALL WRITEF('Number out of range')
	    GOTO 700
	  ELSE
	    MAX_WVALUE(2)=MAX_LVALUE(2)
	  ENDIF
	ELSE IF(DATA_TYPE(1).EQ.DATA_BYTE)THEN
	  IF(RDLONG(MAX_LVALUE(2)))GOTO 700
	  IF(MAX_LVALUE(2).LT.0.OR.MAX_LVALUE(2).GT.255)THEN
	    CALL WRITEF('Number out of range')
	    GOTO 700
	  ELSE
	    MAX_WVALUE(2)=MAX_LVALUE(2)
	  ENDIF
	ELSE IF(DATA_TYPE(1).EQ.DATA_BIT)THEN
	  IF(RDLONG(MAX_LVALUE(2)))GOTO 600
	  IF(MAX_LVALUE(2).NE.0.AND.MAX_LVALUE(2).NE.1)THEN
	    CALL WRITEF('Number out of range')
	    GOTO 600
	  ELSE
	    MAX_WVALUE(2)=MAX_LVALUE(2)
	  ENDIF
	ENDIF
C
C	Now write new values
C
80	CALL WRITEF(' ')
	CALL WRITEF('                     New Values     Old Values')
	CALL WRITEF('---------------------------------------------------')
	IF(HEADER_TYPE(1).EQ.DTI_LSLA)THEN
	  CALL WRITEF('Data Order Corner     : %I7    %I7',
     &    DTI_ORDER_CORNER(2),DTI_ORDER_CORNER(1))
	  CALL WRITEF('Data Order Direction  : %I7    %I7',
     &    DTI_ORDER_DIRECTION(2),DTI_ORDER_DIRECTION(1))
	  CALL WRITEF(' ')
	ENDIF
C
	CALL WRITEF
     &  ('Number of Columns     : %I7    %I7',X_EXTENT(2),X_EXTENT(1))
	CALL WRITEF
     &  ('Number of Rows        : %I7    %I7',Y_EXTENT(2),Y_EXTENT(1))  
	CALL WRITEF
     &  ('X Grid Interval       : %F10.2 %F10.2',X_GRID(2),X_GRID(1))
	CALL WRITEF
     &  ('Y Grid Interval       : %F10.2 %F10.2',Y_GRID(2),Y_GRID(1))
	IF(DATA_TYPE(1).EQ.DATA_REAL)THEN
	  CALL WRITEF
     &             ('Minimum Data Value    : %F10.2 %F10.2',
     &               MIN_RVALUE(2),MIN_RVALUE(1))
	  CALL WRITEF
     &             ('Maximum Data Value    : %F10.2 %F10.2',
     &               MAX_RVALUE(2),MAX_RVALUE(1))
	ELSE IF(DATA_TYPE(1).EQ.DATA_LONG)THEN
	  CALL WRITEF
     &             ('Minimum Data Value    : %I7    %I7',
     &               MIN_LVALUE(2),MIN_LVALUE(1))
	  CALL WRITEF
     &             ('Maximum Data Value    : %I7    %I7',
     &               MAX_LVALUE(2),MAX_LVALUE(1))
	ELSE
	  CALL WRITEF
     &             ('Minimum Data Value    : %^W%I7    %^W%I7',
     &               MIN_WVALUE(2),MIN_WVALUE(1))
	  CALL WRITEF
     &             ('Maximum Data Value    : %^W%I7    %^W%I7',
     &               MAX_WVALUE(2),MAX_WVALUE(1))
	ENDIF	
	CALL WRITEF(' ')
C
	CALL WRITEF('Writing new values to header now')
	CALL WRITEF(' ')
	IF(HEADER_TYPE(1).EQ.DTI_LSLA)THEN
	  DTI_ORDER_CORNER(1)=DTI_ORDER_CORNER(2)
	  DTI_ORDER_DIRECTION(1)=DTI_ORDER_DIRECTION(2)
	ENDIF
	X_EXTENT(1) = X_EXTENT(2)
	Y_EXTENT(1) = Y_EXTENT(2)
	X_GRID(1)   = X_GRID(2)
	Y_GRID(1)   = Y_GRID(2)
	IF (HAD_PROJ_RECORD(1)) THEN
	   DTIPROJ_SAMPLE(1,1) = X_GRID(2)
	   DTIPROJ_SAMPLE(2,1) = Y_GRID(2)
	ENDIF
C
	MIN_RVALUE(1)=MIN_RVALUE(2)
	MAX_RVALUE(1)=MAX_RVALUE(2)
	MIN_LVALUE(1)=MIN_LVALUE(2)
	MAX_LVALUE(1)=MAX_LVALUE(2)
	MIN_WVALUE(1)=MIN_WVALUE(2)
	MAX_WVALUE(1)=MAX_WVALUE(2)
C
	RETVAL=DTI_CLOSE(1,.TRUE.,.FALSE.,ERROR)
	IF(.NOT.RETVAL)THEN
	  CALL LSL_PUTMSG(RETVAL)
	  IF(RETVAL.EQ.DTI__SYSERR)CALL LSL_PUTMSG(ERROR)
	ENDIF
C
C---------------------------------------------------------------------
999	CONTINUE
C
	END
C
