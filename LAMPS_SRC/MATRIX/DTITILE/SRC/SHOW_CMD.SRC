C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1992-07-24 14:27:48.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL FUNCTION SHOW_CMD()
C
***	MODULE	SHOW_CMD
***	IDENT	24JL92
C
C	Copyright (C), Laser-Scan Ltd., Cambridge, England
C
CMOD	SHOW DEFAULTS,DIAGNOSTICS,PME,WINDOW axed
C	New command SHOW ENABLE
C	Bug in output of null byte value sorted		MWSR 06-Dec-1988
CMOD	Add absolute argument to DTI_PRINT_HEADER	MWSR 21-Nov-1988
C 	Modified from SHOW_CMD in DTI2TEXT		 ALB 03-Feb-1988
C
C	Function to show command status.
C	Namely, defaults, files, size, units, window
C
C	Function returns .TRUE. if all is well, .FALSE. if an error
C
	IMPLICIT NONE
C
C Parameters :
	INCLUDE 'LSL$DTMCREATESYS:MESPAR.PAR'
	INCLUDE 'LSL$CMNDTI:DTIPAR.PAR'
C
C Common blocks :
	INCLUDE 'LSL$CMNDTITILE:CONTROL.CMN'
	INCLUDE 'LSL$CMNDTI:DTIHDR.CMN'
 	INCLUDE 'LSL$CMNLSL:CMDCOM.CMN'
	INCLUDE 'LSL$CMNLSL:EXPC.CMN'
	INCLUDE 'LSL$CMNLSL:TXTC.CMN'	
C
C W/s
	BYTE		CH		! for use with RDCHS
	INTEGER		CMD     	! decoded command number
	INTEGER		RET_CODE	! return code
	LOGICAL		OK		! return code
	INTEGER		I		! loop counter
	BYTE		BVAL		
	INTEGER*2	WVAL
	EQUIVALENCE(WVAL,BVAL)
C
C Function:
	INTEGER		RDCOMM
	LOGICAL		SHOWVOID		!Print void window
	INTEGER		DTI_PRINT_HEADER	!Print DTI header	
C
C Command table:
	EXTERNAL	SHOW_CMD_TABLE
	INTEGER		SHOW_CMD_TABLE
C
C ......................................................................
C
	SHOW_CMD=.TRUE.			! assume success
C
	CALL WRITEF
	CMD=RDCOMM(SHOW_CMD_TABLE)	! get command
	CMD=CMD+1
	GOTO (
     &		100,			! error/nothing	- cmd=1
     &		200,			! enable	- cmd=2
     &		400,			! files		- cmd=4
     &		500,			! null		- cmd=5
     &		700,			! size		- cmd=7
     &		800,			! units		- cmd=8
     &		850			! voids		- cmd=9
     &			), CMD
C
C Command number out of range
	CALL WRITEF('%S Command not yet implemented',ERROR)
	SHOW_CMD=.FALSE.
	GOTO 999
C
C ......................................................................
C Error or nothing 
C
100	CONTINUE
	CALL WRITEF
	CALL WRITEF('%S Specifying command SHOW',ERROR)
	CALL WRITEF
	CALL WRITEF('Available SHOW command qualifiers are:')
	CALL WRITEF
	CALL WRITEF('ENABLE  FILES'//
     &  '  NULL  SIZE  UNITS  VOIDS ')
	GOTO 999
C
C ......................................................................
C Show enable
C
200	CONTINUE
	CALL WRITEF
	CALL WRITEF('Current status:')
	CALL WRITEF(' ')
	CALL EXPAND('ABSOLUTE       ')
	IF(HAD_ABSOLUTE)THEN
	  CALL APPEND('   On       ')
	ELSE
	  CALL APPEND('  Off       ')
	ENDIF
	CALL APPEND('DIAGNOSTICS    ')
	IF(HAD_DIAG)THEN
	  CALL APPEND('   On       ')
	ELSE
	  CALL APPEND('  Off       ')
	ENDIF
	CALL APPEND('NULL_CHECKING  ')
	IF(NULL_CHECKING)THEN
	  CALL APPEND('   On       ')
	ELSE
	  CALL APPEND('  Off       ')
	ENDIF
	CALL TTWLIN
	CALL EXPAND('PME            ')
	IF(HAD_PME)THEN
	  CALL APPEND('   On       ')
	ELSE
	  CALL APPEND('  Off       ')
	ENDIF
	CALL TTWLIN
	GOTO 999
C
C ......................................................................
C Show files
C
400	CONTINUE
C
C input files
C
	IF(NUM_DTIIN.GT.0) THEN
	   DO 410 I = 1,NUM_DTIIN 
	      RET_CODE = DTI_PRINT_HEADER(I,UNITS,HAD_ABSOLUTE)
410	   CONTINUE
	ELSE
	   CALL WRITEF('DTI input file not yet specified')
	ENDIF
C
C output files
C
	IF (DTIFSPEC(DTIOUT_LUN)) THEN
	   CALL WRITEF('DTI file %S selected for output',
     &			DTIFILE(DTIOUT_LUN)(:DTILEN(DTIOUT_LUN)))
	ELSE
	   CALL WRITEF('DTI output file not yet specified')
	ENDIF
	GOTO 999  
C
C .....................................................................
C Show null value
C
500	CONTINUE
	IF(NUM_DTIIN.NE.0) THEN
	   CALL WRITEF
	   IF(DATA_TYPE(1).EQ.DATA_BYTE) THEN
	      BVAL = NULL_BYTE_VAL
	      CALL WRITEF('Current null byte value is %^W%I',
     & 		WVAL)
	   ELSEIF(DATA_TYPE(1).EQ.DATA_WORD) THEN
	      CALL WRITEF('Current null word value is %^W%I',
     & 		NULL_WORD_VAL)
	   ELSEIF(DATA_TYPE(1).EQ.DATA_LONG) THEN
	      CALL WRITEF('Current null long value is %I',
     & 		NULL_LONG_VAL)
	   ELSEIF(DATA_TYPE(1).EQ.DATA_REAL) THEN
	      CALL WRITEF('Current null real value is %E',
     & 		NULL_REAL_VAL,NULL_REAL_VAL)
	   ENDIF
	ELSE
	   CALL WRITEF 
     &	   ('No input DTI files open therefore null cannot be '//
     &     'defined')
	ENDIF
	GOTO 999  
C
C .....................................................................
C Show size
C
700	IF (HAD_SIZE) THEN
	   CALL WRITEF ('Current user defined size is %I'//
     &		' for No of columns and %I for No of rows ',
     &		NCOL,NROW)
	ELSE
	   CALL WRITEF 
     &		('No user defined size for output DTI file')
	   CALL WRITEF 
     &		('size will calculated from input DTI files')
	ENDIF
	GOTO 999  
C
C .....................................................................
C Show units
C
800	IF(UNITS.NE.0) THEN
	   CALL WRITEF ('Current units set to %S', UNITS_TEXT(UNITS))
	ELSE
	   CALL WRITEF ('Units currently unset')
	ENDIF
	GOTO 999  
C
C ......................................................................
C Show voids
C
850	IF(NUM_VOID.NE.0) THEN
	   DO 860 I = 1,NUM_VOID
	      IF (VOID_SET(I)) THEN
	         OK = SHOWVOID(I)
	      ELSE
	         CALL WRITEF('Void number %I0 is not currently set',I)
	      ENDIF
860	   CONTINUE
	ELSE
	   CALL WRITEF 
     &	   ('No voids defined ')
	ENDIF
	GOTO 999  
C
C .....................................................................
C Exit
C
999	CONTINUE
	CALL WRITEF
	NOMESS=.FALSE.			! restore CMDLIB error reporting
	RETURN
	END
C
