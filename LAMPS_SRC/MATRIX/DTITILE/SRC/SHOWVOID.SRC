	LOGICAL FUNCTION SHOWVOID(VOID_NUM)
C
***	MODULE	SHOWVOID
***	IDENT	06DE88
C
C	Copyright : Laser-Scan Laboratories, Cambridge, England
C
C Created by					ALB 22-Mar-1988
C	
C Function to show a void window in current units
C
C	Function returns .TRUE. if successful.
C
	IMPLICIT NONE
C
C Common:
C
	INCLUDE	'LSL$CMNDTITILE:CONTROL.CMN'
	INCLUDE	'LSL$CMNDTI:DTIHDR.CMN'
	INCLUDE	'LSL$CMNDTI:DTIPROJ.CMN'
C
C Arguments
C
	INTEGER		VOID_NUM	! Void number
C
C W/s
C
	INTEGER*4	V_UNITS		! void defined units
	INTEGER*4	DEGR		! degree part of latlong
	INTEGER*4	MINU		! minute part of latlong
	INTEGER*4	SECO		! second part of latlong
	LOGICAL		NEGA		! neg latlong value
	INTEGER*4	X1		! SW x in matrix units
	INTEGER*4	Y1		! SW y in matrix units
	INTEGER*4	X2		! NE x in matrix units
	INTEGER*4	Y2		! NE y in matrix units
	REAL*4		XR1		! SW X 
	REAL*4		YR1		! SW Y
	REAL*4		XR2		! NE X 
	REAL*4		YR2		! NE Y
C
C ......................................................................
C
	SHOWVOID=.TRUE.		! assume success
C
C
	V_UNITS = VOID_UNITS(VOID_NUM)
	GOTO (100,200,300,400,500) V_UNITS
C
C----------------------------------------------------------------------
C	Matrix units
C
100	CONTINUE
	X1=NINT(VOID_SWX(VOID_NUM))
	Y1=NINT(VOID_SWY(VOID_NUM))
	X2=NINT(VOID_NEX(VOID_NUM))
	Y2=NINT(VOID_NEY(VOID_NUM))
	CALL WRITEF('Void number %I0 in %S : '//
     &	'%I0 %I0 %I0 %I0',VOID_NUM,UNITS_TEXT(V_UNITS)(:21),
     &  X1,Y1,X2,Y2) 
	GOTO 1000
C
C----------------------------------------------------------------------
C	Metres
C
200	CONTINUE
	XR1 = VOID_SWX(VOID_NUM)	   
	YR1 = VOID_SWY(VOID_NUM)	   
	XR2 = VOID_NEX(VOID_NUM)	   
	YR2 = VOID_NEY(VOID_NUM)	   
	IF (HAD_ABSOLUTE) THEN 
	   IF (.NOT.VOID_ABS(VOID_NUM))THEN
	      XR1 = XR1+X_OFFSET(WEST_FILE)
	      YR1 = YR1+Y_OFFSET(SOUTH_FILE)
	      XR2 = XR2+X_OFFSET(WEST_FILE)
	      YR2 = YR2+Y_OFFSET(SOUTH_FILE)
	   ENDIF
	ELSE
	   IF (VOID_ABS(VOID_NUM))THEN
	      XR1 = XR1-X_OFFSET(WEST_FILE)
	      YR1 = YR1-Y_OFFSET(SOUTH_FILE)
	      XR2 = XR2-X_OFFSET(WEST_FILE)
	      YR2 = YR2-Y_OFFSET(SOUTH_FILE)
	   ENDIF
	ENDIF
	CALL WRITEF('Void number %I0 in %S : '//
     &	'%F0.2 %F0.2 %F0.2 %F0.2',VOID_NUM,
     &  UNITS_TEXT(V_UNITS)(:21),XR1,YR1,XR2,YR2)
	GOTO 1000
C
C-----------------------------------------------------------------------
C	Seconds
C
300	CONTINUE
	CALL WRITEF('Void number %I0 in %S : '//
     &	'%F0.2 %F0.2 %F0.2 %F0.2',VOID_NUM,
     &  UNITS_TEXT(V_UNITS)(:21),VOID_SWX(VOID_NUM),
     &  VOID_SWY(VOID_NUM),VOID_NEX(VOID_NUM),VOID_NEY(VOID_NUM)) 
	GOTO 1000
C
C-----------------------------------------------------------------------
C	Degrees, Minutes & Seconds
C	Convert values from tenths secs of arc
C
400	CONTINUE
	CALL CVTANG(VOID_SWY(VOID_NUM),NEGA,DEGR,MINU,SECO)
	CALL EXPAND('Void number %I0 in %S :',VOID_NUM,
     &  UNITS_TEXT(V_UNITS)(:21))
	CALL APPEND('%P %I3 %P0%I2 %P0%I2',DEGR,MINU,SECO)
	IF(NEGA)THEN
	  CALL APPEND('S ')
	ELSE
	  CALL APPEND('N ')
	ENDIF
	CALL CVTANG(VOID_SWX(VOID_NUM),NEGA,DEGR,MINU,SECO)
	CALL APPEND('%P %I3 %P0%I2 %P0%I2',DEGR,MINU,SECO)
	IF(NEGA)THEN
	  CALL APPEND('W ')
	ELSE
	  CALL APPEND('E ')
	ENDIF
C	CALL TTWSTR
C
	CALL CVTANG(VOID_NEY(VOID_NUM),NEGA,DEGR,MINU,SECO)
	CALL APPEND('%P %I3 %P0%I2 %P0%I2',DEGR,MINU,SECO)
	IF(NEGA)THEN
	  CALL APPEND('S ')
	ELSE
	  CALL APPEND('N ')
	ENDIF
C
	CALL CVTANG(VOID_NEX(VOID_NUM),NEGA,DEGR,MINU,SECO)
	CALL APPEND('%P %I3 %P0%I2 %P0%I2',DEGR,MINU,SECO)
	IF(NEGA)THEN
	  CALL APPEND('W ')
	ELSE
	  CALL APPEND('E ')
	ENDIF
C	  
	CALL TTWSTR
	GOTO 1000
C
C
C----------------------------------------------------------------------
C	Projection units
C
500	CONTINUE
	XR1 = VOID_SWX(VOID_NUM)	   
	YR1 = VOID_SWY(VOID_NUM)	   
	XR2 = VOID_NEX(VOID_NUM)	   
	YR2 = VOID_NEY(VOID_NUM)	   
	IF (HAD_ABSOLUTE) THEN 
	   IF (.NOT.VOID_ABS(VOID_NUM))THEN
	      XR1 = XR1+DTIPROJ_ORIGIN(1,WEST_FILE)
	      YR1 = YR1+DTIPROJ_ORIGIN(2,SOUTH_FILE)
	      XR2 = XR2+DTIPROJ_ORIGIN(1,WEST_FILE)
	      YR2 = YR2+DTIPROJ_ORIGIN(2,SOUTH_FILE)
	   ENDIF
	ELSE
	   IF (VOID_ABS(VOID_NUM))THEN
	      XR1 = XR1-DTIPROJ_ORIGIN(1,WEST_FILE)
	      YR1 = YR1-DTIPROJ_ORIGIN(2,SOUTH_FILE)
	      XR2 = XR2-DTIPROJ_ORIGIN(1,WEST_FILE)
	      YR2 = YR2-DTIPROJ_ORIGIN(2,SOUTH_FILE)
	   ENDIF
	ENDIF
	CALL WRITEF('Void number %I0 in %S : '//
     &	'%F0.2 %F0.2 %F0.2 %F0.2',VOID_NUM,
     &  UNITS_TEXT(V_UNITS)(:21),XR1,YR1,XR2,YR2)
	GOTO 1000
C----------------------------------------------------------------------
C
999	CONTINUE
1000	CONTINUE
	RETURN
	END
