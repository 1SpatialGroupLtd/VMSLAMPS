	LOGICAL FUNCTION COPYDAT(FILEIN)
C
***	MODULE	COPYDAT
***	IDENT	06AU92
C
C	Copyright : Laser-Scan, Cambridge, England
C
CMOD1129 Fix windowing of multiple input files		  JB 23-Jul-1992
CMOD	 Include call to CHECK_NULL if required		MWSR 15-Nov-1988
C
C	 Modified version of COPYDAT from PANTILE	 ALB 04-Feb-1988
C
C	Routine to copy data from the input file to the output
C	file taking into account any WINDOW setting and the ORIGIN
C	specified for each input file.
C
	IMPLICIT NONE
C
	INCLUDE 'LSL$CMNDTI:DTILIBMSG.PAR'
	INCLUDE 'LSL$CMNDTI:DTIHDR.CMN'
	INCLUDE 'LSL$CMNDTI:DTIPAR.PAR'
	INCLUDE 'LSL$CMNDTITILE:CONTROL.CMN'
	INCLUDE 'LSL$CMNDTITILE:NULLCHK.CMN'
C
C Arguments
	INTEGER*4		FILEIN		!which input file
C
C w/s
	INTEGER			RET_CODE	!return code
	INTEGER			IERR		!system error return
	INTEGER			COL_IN		!input column
	INTEGER			ROW_IN		!input row
	INTEGER			NUM_COLS	!number of columns
	INTEGER			NUM_ROWS	!number of rows
	INTEGER			COL_OUT		!output column
	INTEGER			ROW_OUT		!output row
C
C Function
	LOGICAL			DTI_COPY_DATA	!copy DTI column
	LOGICAL			CHECK_NULL	!check for existing 
C						!null values
C***********************************************************************
C
	COPYDAT = .TRUE.	! assume ok
C
	NUM_COLS = 1
C
C Find first and number of rows to copy
C
	ROW_IN   = DTI_WINDOW_SWY(FILEIN)
	NUM_ROWS = DTI_WINDOW_NEY(FILEIN) - ROW_IN + 1
C
	COL_OUT = DTI_WINDOW_SWX(FILEIN) + X_ORIGIN(FILEIN)
     &					- OUT_XMIN
	ROW_OUT = DTI_WINDOW_SWY(FILEIN) + Y_ORIGIN(FILEIN)
     &					- OUT_YMIN
C
C Message saying which input file is being processed if diagnostics enabled
C
	IF (HAD_DIAG) THEN
	   CALL WRITEF ('%S input DTI file currently being processed',
     &		DTIFILE(FILEIN)(:DTILEN(FILEIN)))
	   IF (WIN_SET(FILEIN)) THEN
	      CALL WRITEF('Input file has been windowed: ')
	      CALL WRITEF
	      CALL WRITEF('   South west corner x ......... %I',
     &	      DTI_WINDOW_SWX(FILEIN))
	      CALL WRITEF('   South west corner y ......... %I',
     &	      DTI_WINDOW_SWY(FILEIN))
	      CALL WRITEF('   North east corner x ......... %I',
     &	      DTI_WINDOW_NEX(FILEIN))
	      CALL WRITEF('   North east corner y ......... %I',
     &	      DTI_WINDOW_NEY(FILEIN))
	   ENDIF
	ENDIF
C
C Copy column by column from input file to output file
C
	DO 200 COL_IN = DTI_WINDOW_SWX(FILEIN),
     &			DTI_WINDOW_NEX(FILEIN)	
C
C read data from DTI file into user array
C
	   RET_CODE=DTI_COPY_DATA (FILEIN,	! LUN of input DTI
     &				 COLUMN,	! Target array
     &				.FALSE.,	! Copy data into array
     &				 COL_IN,	! First x (column)
     &				 ROW_IN,	! First y (row)
     &				 NUM_COLS,	! Number of columns
     &				 NUM_ROWS,	! Number of rows
     &				 IERR)		! Error code
C
C Check on error
C
	   IF (RET_CODE.NE.DTI__NORMAL) THEN
	      CALL LSL_PUTMSG(RET_CODE)
	      IF (RET_CODE.EQ.DTI__SYSERR) CALL LSL_ADDMSG(IERR)
	      COPYDAT = .FALSE.			! error occurred 
	      GOTO 999
	   ENDIF   	      
C
C process the column of values if we're null checking
	   IF (NULL_CHECKING) THEN
	      COPYDAT = CHECK_NULL(COL_OUT,ROW_OUT,NUM_ROWS)
	      IF (.NOT.COPYDAT) GOTO 999
	   ENDIF
C	
C write data from user array into ountput DTI file
C
	   RET_CODE=DTI_COPY_DATA(DTIOUT_LUN,	! LUN of output DTI
     &				  COLUMN,	! Target array
     &				 .TRUE.,	! Copy data from array
     &				  COL_OUT,	! First x (column)
     &				  ROW_OUT,	! First y (row)
     &				  NUM_COLS,	! Number of columns
     &				  NUM_ROWS,	! Number of rows
     &				  IERR)		! Error code
C
C Check on error
	   IF (RET_CODE.NE.DTI__NORMAL) THEN
	      CALL LSL_PUTMSG(RET_CODE)
	      IF (RET_CODE.EQ.DTI__SYSERR) CALL LSL_ADDMSG(IERR)
	      COPYDAT = .FALSE.			! error occurred 
	      GOTO 999
	   ENDIF   	      
C
	   COL_OUT = COL_OUT + 1
C
200	CONTINUE
C
999	CONTINUE
	RETURN
	END
C
