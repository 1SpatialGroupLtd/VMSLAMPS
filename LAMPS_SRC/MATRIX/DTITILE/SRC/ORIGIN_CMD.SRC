	LOGICAL FUNCTION ORIGIN_CMD()
C
***	MODULE	ORIGIN_CMD
***	IDENT	24JL92
C
C	Copyright : Laser-Scan Ltd., Cambridge, England
C
CMOD 	use first file DTIPROJ_ORIGIN		
C    	no longer disallow negative origin values  	MWSR  12-Dec-1988
CMOD 	update minimum origin info			MWSR  08-Dec-1988
CMOD 	allow origin to be specified in proj units 	MWSR  23-Nov-1988
CMOD	allow absolute meter coordinates input   	MWSR  21-Nov-1988
CMOD 	subtract 1 from origin values	      		MWSR  15-Nov-1988
C
C 	Created by 					 ALB  04-Feb-1988
C	
C	Function to set the origin of the input DTI file on 
C	the output file 
C	The routine interpretes the command line according to the
C	current UNITS setting.
C	The function checks that the origin values are sensible
C
C	Function returns .TRUE. if successful.
C
	IMPLICIT NONE
C
C Parameters:
	INCLUDE 'LSL$DTMCREATESYS:MESPAR.PAR'	
	INCLUDE 'LSL$CMNDTI:DTIDEF.PAR'		! DTILIB common
C	
C Common:
	INCLUDE 'LSL$CMNDTI:DTIHDR.CMN'		! DTILIB common
	INCLUDE 'LSL$CMNDTI:DTIPROJ.CMN'	! DTILIB common
	INCLUDE 'LSL$CMNLSL:CMDCOM.CMN'		! LSLLIB common
	INCLUDE	'LSL$CMNDTITILE:CONTROL.CMN'
C
C W/s
	INTEGER*4	X1,Y1,X2,Y2	! origin values in matrix units
	INTEGER*4	LLDEGS(4)	! origin values in seconds
	REAL*8		DLONINT,DLATINT
	REAL*8		D_MOD
C
C Function
	LOGICAL		READLL		! reads lat/long
C
C ......................................................................
C
	ORIGIN_CMD=.TRUE.		! assume success
C
C test whether file opened
C
	IF (NUM_DTIIN.EQ.0) THEN		! no file opened?
	   CALL WRITEF(
     &	        '%S FILEIN command must be used to '//
     &			'open the DTI file first',ERROR)
	   ORIGIN_CMD=.FALSE.		! command failed
	   GOTO 999
	ENDIF
C
	IF (CMDRCT.NE.2) THEN
	   CALL WRITEF('%S Specifying DTI origin',ERROR)
	   CALL WRITEF
     &	  ('Command requires x,y coordinate for position in output')
	   ORIGIN_CMD=.FALSE.		! command failed
	   GOTO 999
	ENDIF
C
	GOTO (10,20,30,40,45) UNITS
C
C----------------------------------------------------------------------
C	Matrix units
10	X1=NINT(REALAR(1))
	Y1=NINT(REALAR(2))
	GOTO 50
C
C----------------------------------------------------------------------
C	Metres
20	IF (HAD_ABSOLUTE) THEN
	   X1=NINT((REALAR(1)-X_OFFSET(1))/X_GRID(1))+1
	   Y1=NINT((REALAR(2)-Y_OFFSET(1))/Y_GRID(1))+1
	ELSE
	   X1=NINT(REALAR(1)/X_GRID(1))+1
	   Y1=NINT(REALAR(2)/Y_GRID(1))+1
	ENDIF
	GOTO 50
C
C-----------------------------------------------------------------------
C	Seconds
C
30	CONTINUE
C
	D_MOD = 360.0*3600*10
	DLATINT = DBLE(LATREC(3,1)-LATORI(1)) / DBLE(Y_EXTENT(1)-1)
	DLATINT = DMOD(DLATINT,D_MOD)
	DLONINT = DBLE(LONREC(3,1)-LONORI(1)) / DBLE(X_EXTENT(1)-1)
	DLONINT = DMOD(DLONINT,D_MOD)
C
	Y1=NINT(REALAR(1)*10)
	X1=NINT(REALAR(2)*10)
C
	X1=(X1-LONREC(1,1))/DLONINT + 1
	Y1=(Y1-LATREC(1,1))/DLATINT + 1
C
	GOTO 50 
C
C-----------------------------------------------------------------------
C	Degrees, Minutes & Seconds
C	Call READLL to convert to .1 seconds
C
40	CONTINUE
C
	D_MOD = 360.0*3600*10
	DLATINT = DBLE(LATREC(3,1)-LATORI(1)) / DBLE(Y_EXTENT(1)-1)
	DLATINT = DMOD(DLATINT,D_MOD)
	DLONINT = DBLE(LONREC(3,1)-LONORI(1)) / DBLE(X_EXTENT(1)-1)
	DLONINT = DMOD(DLONINT,D_MOD)
C
	IF (READLL(LLDEGS,2)) THEN
	   CALL WRITEF('%S Specifying DTI origin',ERROR)
	   CALL WRITEF('Unable to use supplied LATLONG values')
	   ORIGIN_CMD=.FALSE.		! command failed
	   GOTO 999
	ELSE
	   Y1=LLDEGS(1)*10
	   X1=LLDEGS(2)*10
	   X1=(X1-LONREC(1,1))/DLONINT + 1
	   Y1=(Y1-LATREC(1,1))/DLATINT + 1
	ENDIF
	GOTO 50
C
C----------------------------------------------------------------------
C	Metres
45	IF (HAD_ABSOLUTE) THEN
	   X1=NINT((REALAR(1)-DTIPROJ_ORIGIN(1,1))
     &             /DTIPROJ_SAMPLE(1,NUM_DTIIN))+1
	   Y1=NINT((REALAR(2)-DTIPROJ_ORIGIN(2,1))
     &             /DTIPROJ_SAMPLE(2,NUM_DTIIN))+1
	ELSE
	   X1=NINT(REALAR(1)/DTIPROJ_SAMPLE(1,NUM_DTIIN))+1
	   Y1=NINT(REALAR(2)/DTIPROJ_SAMPLE(2,NUM_DTIIN))+1
	ENDIF
	GOTO 50
C----------------------------------------------------------------------
C	Are the origin values sensible?
C
50	IF(HAD_SIZE) THEN
	   IF((X1-MIN_X_ORIGIN-1).GE.NCOL.OR.(Y1-MIN_Y_ORIGIN-1).GE.
     &     NROW)THEN
	      CALL WRITEF('%S Specifying DTI origin',ERROR)
	      CALL WRITEF
     &        ('Origin must not cause supplied output '//
     &	       'matrix sizes to be exceeded')
	      CALL WRITEF
     &        ('Output matrix sizes are %I columns and '//
     &	       '%I rows',NCOL,NROW)
	      ORIGIN_CMD=.FALSE.		! command failed
	      GOTO 999
	   ENDIF
	ENDIF
C
C write to X_ORIGIN and Y_ORIGIN for last opened input file
C
	X_ORIGIN(NUM_DTIIN) = X1-1
	Y_ORIGIN(NUM_DTIIN) = Y1-1
C
C update southerly and westerly origin records
	IF (X_ORIGIN(NUM_DTIIN) .LT. MIN_X_ORIGIN) THEN
	   WEST_FILE = NUM_DTIIN
	   MIN_X_ORIGIN = X_ORIGIN(NUM_DTIIN)
	ENDIF
	IF (Y_ORIGIN(NUM_DTIIN) .LT. MIN_Y_ORIGIN) THEN
	   SOUTH_FILE = NUM_DTIIN
	   MIN_Y_ORIGIN = Y_ORIGIN(NUM_DTIIN)
        ENDIF
C
C----------------------------------------------------------------------
C
999	CONTINUE
	RETURN
	END
C
