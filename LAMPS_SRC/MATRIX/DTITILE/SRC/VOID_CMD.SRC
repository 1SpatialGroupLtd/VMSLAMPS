C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1988-12-06 10:57:18.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL FUNCTION VOID_CMD()
C
***	MODULE	VOID_CMD
***	IDENT	06DE88
C
C	Copyright : Laser-Scan Laboratories, Cambridge, England
C
CMOD keep record if we're in absolutes	       MWSR 06-Dec-1988
C Created by					ALB 22-Mar-1988
C	
C Function to set up voids in the output DTI file.  A number of voids can 
C be defined up to maximum of determined by MAX_VOID parameter.
C The routine interpretes the command line according to the
C current UNITS setting.  The function checks that the void window values
C are senisble.  The values are stored in specified units. 
C
C	Function returns .TRUE. if successful.
C
	IMPLICIT NONE
C
C Parameters:
	INCLUDE 'LSL$DTMCREATESYS:MESPAR.PAR'	
C	
C Common:
	INCLUDE 'LSL$CMNDTI:DTIHDR.CMN'		! DTILIB common
	INCLUDE 'LSL$CMNLSL:CMDCOM.CMN'		! LSLLIB common
	INCLUDE	'LSL$CMNDTITILE:CONTROL.CMN'
C
C W/s
	INTEGER*4	I		! loop couter
	REAL*4		X1,Y1,X2,Y2	! window values 
	INTEGER*4	LLDEGS(4)	! window values in seconds 
C
C Function
	LOGICAL		READLL		! reads lat/long
C
C ......................................................................
C
	VOID_CMD=.TRUE.		! assume success
C
	IF(NUM_DTIIN.EQ.0) THEN		! no input file open
	   CALL WRITEF('%S Specifying the VOID command ',ERROR)
	   CALL WRITEF('You must use the FILEIN command to '//
     &	   'open an input DTI first')
	   VOID_CMD = .FALSE.
	   GOTO 999
	ENDIF
	IF (CMDRCT.NE.4.AND.UNITS.NE.4) THEN
	   CALL WRITEF('%S Specifying DTI void arguments',ERROR)
	   CALL WRITEF
     &	  ('Command requires 2 x,y coordinate pairs (SW and NE)')
	   VOID_CMD =.FALSE.
	   GOTO 999
	ENDIF
C
C-----------------------------------------------------------------------
C if units is lat long then call READLL to convert to .1 seconds
C
	IF(UNITS.EQ.4) THEN
	   IF (READLL(LLDEGS,4)) THEN
	      CALL WRITEF('%S Specifying DTI void window',ERROR)
	      CALL WRITEF('Unable to use supplied LATLONG values')
	      VOID_CMD =.FALSE.
	      GOTO 999
	   ENDIF
	   X1 = FLOAT(LLDEGS(1))
	   Y1 = FLOAT(LLDEGS(2))
	   X2 = FLOAT(LLDEGS(3))
	   Y2 = FLOAT(LLDEGS(4))
	ELSE
	   X1 = REALAR(1)
	   Y1 = REALAR(2)
	   X2 = REALAR(3)
	   Y2 = REALAR(4)
	ENDIF
C
C----------------------------------------------------------------------
C
C	Are the window values sensible?
C	Does the NE coordinate exceed the SW coordinate
C
	IF (X2.LE.X1.OR.Y2.LE.Y1) THEN
	   CALL WRITEF('%S Specifying command VOID',ERROR)
	   CALL WRITEF('Command parameters invalid')
	   CALL WRITEF
     &    ('NE coordinates must exceed SW coordinates')
	   VOID_CMD =.FALSE.
	   GOTO 999
	ENDIF
C
C	Transfer to the void common block variables
C
	DO 100 I = 1,MAX_VOID
	   IF(.NOT.VOID_SET(I)) THEN
	      VOID_SWX(I) = X1
	      VOID_SWY(I) = Y1
	      VOID_NEX(I) = X2	
	      VOID_NEY(I) = Y2
	      VOID_UNITS(I)= UNITS	!remember units during void define
	      VOID_SET(I)=.TRUE.	!void defined
C
C remember if working in absolutes 
	      VOID_ABS(I)=HAD_ABSOLUTE	
	      NUM_VOID = MAX (I,NUM_VOID)
	      CALL WRITEF('Void number %I0 has been specified in %S',
     &		I,UNITS_TEXT(UNITS))
	      GOTO 1000
	   ENDIF
100	CONTINUE
	CALL WRITEF('%S Specifying command VOID',ERROR)
	CALL WRITEF('Maximum number of voids %I exceeded',MAX_VOID)
	CALL WRITEF('Use SHOW VOID command followed by CANCEL '//
     &		'VOID ''void_number'' first')
	VOID_CMD = .FALSE.
C
C----------------------------------------------------------------------
C
999	CONTINUE
1000	CONTINUE
	RETURN
	END
