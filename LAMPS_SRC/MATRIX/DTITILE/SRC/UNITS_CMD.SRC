	LOGICAL FUNCTION UNITS_CMD()
C
***	MODULE	UNITS_CMD
***	IDENT	23NO88
C
C	Copyright (C), Laser-Scan Laboratories Ltd., Cambridge, England
C
CMOD	Allow UNITS PROJECTION			       MWRS 23-Nov-1988
CMOD	Test for new logical GEOGRAPHICALS_OK	       MWSR 16-Nov-1988	
CMOD	UNITS SEC and UNITS LATLONG now accepted	TJH 24-Feb-1988
C Modified from UNITS_CMD module in DTICONTOUR		ALB 04-Feb-1988
C
C Function to get UNITS command. Function returns .TRUE. if all is well.
C
	IMPLICIT NONE
C
C Parameters:
	INCLUDE	'LSL$DTMCREATESYS:MESPAR.PAR'
	INCLUDE 'LSL$CMNDTI:DTIDEF.PAR'
	INCLUDE 'LSL$CMNDTI:DTIPAR.PAR'
	INCLUDE 'LSL$CMNDTI:DTILIBMSG.PAR'
C
C Common:
	INCLUDE	'LSL$CMNLSL:CMDCOM.CMN'
	INCLUDE	'LSL$CMNDTI:DTIHDR.CMN'
	INCLUDE	'LSL$CMNDTI:DTIPROJ.CMN'
	INCLUDE	'LSL$CMNDTITILE:CONTROL.CMN'
C
C W/s
	INTEGER		CMD     ! decoded command number
	INTEGER		RETVAL
C
C Define command tables:
	EXTERNAL	UNITS_CMD_TABLE
	INTEGER		UNITS_CMD_TABLE
C
C Function:
	LOGICAL 	RDCOMM  	! read command from line
	INTEGER*4	DTI_UNITS
C
C ......................................................................
C
	UNITS_CMD=.TRUE.		! assume success
C
C check that an input DTI file is opened
C
	IF (NUM_DTIIN.EQ.0) THEN		! no file opened?
	   CALL WRITEF(
     &	        '%S FILEIN command must be used to '//
     &		'open an input DTI file first',ERROR)
	   UNITS_CMD=.FALSE.		! command failed
	   GOTO 999
	ENDIF
C
	CMD=RDCOMM(UNITS_CMD_TABLE)	
	IF (CMD.LE.0) THEN		! unrecognised command
	   CALL WRITEF('%S Specifying command UNITS',ERROR)
	   CALL WRITEF('Command should be followed by '//
     &		'MATRIX, METRES, LATLONG, SECONDS or PROJECTION')
	   IF (UNITS.EQ.0) THEN
	      CALL WRITEF('UNITS remain undefined')
	   ELSE
	      CALL WRITEF('UNITS remain set to %S',UNITS_TEXT(UNITS))
	   ENDIF
	   UNITS_CMD=.FALSE.
	ELSE
C
C check that the UNITS are valid
C  
	   RETVAL = DTI_UNITS(NUM_DTIIN,CMD)
	   IF (.NOT. RETVAL) THEN
	      IF (RETVAL .EQ. DTI__INVUNITS) THEN
	         CALL WRITEF('%S Specifying command UNITS',ERROR)
		 CALL WRITEF
     &           ('Command qualifier is invalid for the input file')
	      ELSE
		 CALL LSL_PUTMSG(RETVAL)
	      ENDIF
	      UNITS_CMD = .FALSE.
	   ELSE
	      UNITS = CMD
	   ENDIF
	ENDIF
C
999	CONTINUE
	RETURN
	END
