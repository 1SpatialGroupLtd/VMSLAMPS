	LOGICAL FUNCTION DISABLE_CMD()
C
***	MODULE DISABLE_CMD
***	IDENT 21NO88
C
C	Copyright (C), Laser-Scan Laboratories Ltd., Cambridge, England.
C
CMOD add DISABLE ABSOLUTE command		       MWSR 21-Nov-1988
CMOD add DISABLE NULL_CHECKING command		       MWSR 15-Nov-1988
C Modified from module DISABLE_CMD in DTI2TEXT		ALB 04-Feb-1988
C
C Function to set command switches 'off' for diagnostics, DTI real
C data rounding to integers and pme.
C To be used in conjunction with ENABLE.
C
C Function returns .TRUE. if all is well, .FALSE. if there is an error.
C
	IMPLICIT NONE
C
C Parameters :
	INCLUDE 'LSL$DTMCREATESYS:MESPAR.PAR'
C
C Common blocks :
	INCLUDE 'LSL$CMNDTITILE:CONTROL.CMN'
C
C Command table :
	EXTERNAL	DISABLE_CMD_TABLE
	INTEGER		DISABLE_CMD_TABLE
C
C w/s
	INTEGER		CMD	! decoded command number
C
C Functions:
	LOGICAL		RDCOMM	! get command	
C .....................................................................
C
	DISABLE_CMD = .TRUE.		! success assumed
C
	CMD = RDCOMM(DISABLE_CMD_TABLE)	! get command
	GOTO (
     &		10,	! error/nothing
     &		20,	! diagnostics
     &		40,	! pme
     &          50,	! null checking
     &          60	! absolute
     &			), CMD+1
C
C command number out of range
C
	CALL WRITEF('Command not yet implemented')
	DISABLE_CMD = .FALSE.
	GOTO 100
C
C .....................................................................
C Error or nothing found
C so inform user of avaiable options and exit with error
C
10	CALL WRITEF
	CALL WRITEF ('%S Specifying command DISABLE', ERROR)
	CALL WRITEF
	CALL WRITEF('Available DISABLE qualifiers are :')
	CALL WRITEF
     &  ('ABSOLUTE	DIAGNOSTICS    NULL_CHECKING 	PME	')
	CALL WRITEF
	DISABLE_CMD = .FALSE.
	GOTO 100		!exit
C
C .....................................................................
C disable diagnostics
C
20	HAD_DIAG = .FALSE.
	GOTO 100		! exit
C
C .....................................................................
C disable PME
C
40	IF (.NOT.HAD_PME) THEN
	   CALL WRITEF ('%S You are not using PME !', WARNING)
	ELSE
	   CALL PME_EXIT	!  Finish PME
	   HAD_PME = .FALSE.
	ENDIF
	GOTO 100
C
C .....................................................................
C disable NULL_CHECKING
C
50	NULL_CHECKING = .FALSE.
	GOTO 100
C .....................................................................
C Disable  ABSOLUTE
C
60	HAD_ABSOLUTE = .FALSE.
	GOTO 100
C .....................................................................
C exit sequence
C
100	RETURN
	END
