	LOGICAL FUNCTION UNITS_CMD()
C
***	MODULE	UNITS_CMD
**	IDENT	25NO88
C
C	Copyright (C), Laser-Scan Laboratories Ltd., Cambridge, England
C
CMOD	UNITS PROJECTION and call to DTI_UNITS added   MWSR 25-Nov-1988
C	Created						JMB 02-Dec-1987
C
C Function to get UNITS command. Function returns .TRUE. if all is well.
C
	IMPLICIT NONE
C
C Parameters :
	INCLUDE 'LSL$DTMCREATESYS:MESPAR.PAR'
	INCLUDE 'LSL$CMNDTI:DTILIBMSG.PAR'
C
C Common block :
	INCLUDE	'LSL$CMNLSL:CMDCOM.CMN'
	INCLUDE 'LSL$CMNLSL:EXPC.CMN'
	INCLUDE 'LSL$CMNLSL:TXTC.CMN'
	INCLUDE	'LSL$CMNDTI2TEXT:CONTROL.CMN'
C
C W/s
	INTEGER		CMD     ! decoded command number
	INTEGER*4	RETVAL	! return code
C
C Define command tables:
	EXTERNAL	UNITS_CMD_TABLE
	INTEGER		UNITS_CMD_TABLE
C
C Function:
	INTEGER		DTI_UNITS	! tests for valid units
	LOGICAL 	RDCOMM  	! read command from line
C
C ......................................................................
C
	UNITS_CMD=.TRUE.		! assume success
C
C Find which units have been specified
C
	CMD=RDCOMM(UNITS_CMD_TABLE)	
C
C Check for unrecognised units
C
	IF (CMD.LE.0) THEN		! unrecognised command
	   CALL WRITEF('%S specifying coordinate units',ERROR)
	   CALL WRITEF('Command should be followed by '//
     &		'MATRIX, METRES, LATLONG, SECONDS or PROJECTION')
C
	   IF (UNITS.EQ.0) THEN
	      CALL WRITEF('UNITS remain undefined')
	   ELSE
	      CALL WRITEF('UNITS remain set to %S',UNITS_TEXT(UNITS))
	   ENDIF
C
	   UNITS_CMD=.FALSE.
	ELSE
C
C check that the UNITS are valid
C  
	   RETVAL = DTI_UNITS(DTILUN,CMD)
	   IF (.NOT. RETVAL) THEN
	      IF (RETVAL .EQ. DTI__INVUNITS) THEN
	         CALL WRITEF('%S Specifying command UNITS',ERROR)
		 CALL WRITEF
     &           ('Command qualifier is invalid for the input file')
	      ELSE
		 CALL LSL_PUTMSG(RETVAL)
	      ENDIF
	      UNITS_CMD = .FALSE.
	   ELSE
	      UNITS = CMD
	   ENDIF
	ENDIF
	RETURN
	END
