C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1989-01-20 10:56:48.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL FUNCTION FILEOUT_CMD()
C
***	MODULE	FILEOUT_CMD
***	IDENT	20JA89
C
C	Copyright (C), Laser-Scan Laboratories Ltd., Cambridge, England
C
C	Created from IFF FILEOUT_CMD in DTICONTOUR.	JMB 03-Dec-1987
CMOD	Close file if output file already open         MWSR 10-Jan-1989
C
C Function to get output file-spec from FILEOUT command. If argument is
C missing the user is prompted. When argument read, output file
C spec is constructed and the files opened.
C
C Function returns .TRUE. if all is well, otherwise .FALSE.
C
	IMPLICIT NONE
C
C Parameters:
	INCLUDE	'LSL$DTMCREATESYS:MESPAR.PAR'
C
C Common:
	INCLUDE	'LSL$CMNLSL:FILENAME.CMN'
	INCLUDE	'LSL$CMNLSL:TXTC.CMN'
	INCLUDE 'LSL$CMNDTI2TEXT:CONTROL.CMN'
C
C W/s
	BYTE		CH	! a character
	LOGICAL		IERR	! for error returns
	LOGICAL		OK	! for error returns
C
C Functions
	LOGICAL		GETFILNAM	! get file-spec
	LOGICAL		FLWOPN		! open new text file
	LOGICAL		FLWSEL		! select output file
	LOGICAL		RDCHS		! read char. skipping spaces
	LOGICAL		TTRSTR		! read from TT:
	LOGICAL		FLWCLO		! close file
C
C ......................................................................
C
	FILEOUT_CMD=.TRUE.		! assume success
C
C ......................................................................
C
C Check that file is not already open
C
	IF (TXTOPN) THEN
	   OK = FLWCLO(TXTLUN,IERR)
	   IF (.NOT. OK) THEN
	      CALL LSL_PUTMSG(OK)
	      CALL LSL_PUTMSG(IERR)
	      GOTO 20
	   ENDIF
	   TXTOPN = .FALSE.
	ENDIF
C
C If the user hasn't given a file-spec prompt for one
C
	IF (RDCHS(CH)) THEN			! empty line
	   IF (TTIN) THEN
	      CALL WRITEF('%S You must specify a file-spec argument'//
     &		' to the FILEOUT command',WARNING)
	   ELSE
	      CALL WRITEF('%S You must specify a file-spec argument'//
     &		'to the FILEOUT command',ERROR)
	   ENDIF	   
	   CALL WRITEF('For example FILEOUT DUA3:[MYDIR.DAT]JIM.DAT')
C
C Accept file-spec as input if from terminal
C
	   IF (TTIN) THEN
	      OK=TTRSTR(,,'Output text file? ',IERR)
	      IF (OK) THEN
	         CALL BSLN			! rewind pointer
	      ELSE
	         CALL LSL_PUTMSG(OK)
	         CALL LSL_ADDMSG(IERR)
	         GOTO 10
	      ENDIF
	      IF (TXTPTR.EQ.0) GOTO 10		! empty line
	   ELSE
	      GOTO 10  ! someone got their indirect file wrong !!
	   ENDIF
	ENDIF
C
C Interpret filename
C
	CALL BSCH			! back one char
	OK=GETFILNAM(	TXTFILE,	! filename
     &			TXTLEN,		! filename length
     &			'.DAT',		! default
     &			.TRUE.,		! allow version numbers
     &			%REF('!') )	! terminator
C
C Check for errors in interpreting
C
	IF (.NOT.OK) THEN
	   CALL WRITEF('%S Unable to interpret output file-spec',ERROR)
	   CALL LSL_PUTMSG(OK)
	   GOTO 15
	ENDIF
C
C After all that try to open the file!
C Create and open a new sequential file for writing
C
	OK=FLWOPN(TXTLUN, TXTFILE(1:TXTLEN), IERR)
	IF (.NOT.OK) THEN
C
C Report errors with opening file
C
	   CALL WRITEF('%S in opening output file %S', 
     &			ERROR, TXTFILE(:TXTLEN))
	   CALL LSL_PUTMSG(OK)
	   CALL LSL_ADDMSG(IERR)
	   GOTO 15
C
C Select output text file
C
	ELSE
	   OK = FLWSEL (TXTLUN)
	   IF (OK) THEN
	      TXTOPN = .TRUE.
	      CALL WRITEF('Text output file %S opened', 
     &					TXTFILE(:TXTLEN))
	      GOTO 20			! success
	   ENDIF
C
C Error in selecting file for output
C
	   CALL WRITEF('%S Error in selecting output file %S',
     &			ERROR, TXTFILE(:TXTLEN))
	   CALL LSL_PUTMSG(OK)
	   GOTO 15
	ENDIF
C
C Return with our tail down
C
10	CALL WRITEF('%S Not possible to open file %S', 
     &			ERROR, TXTFILE(1:TXTLEN))
15	FILEOUT_CMD=.FALSE.
C
C ......................................................................
C
20	RETURN
	END
