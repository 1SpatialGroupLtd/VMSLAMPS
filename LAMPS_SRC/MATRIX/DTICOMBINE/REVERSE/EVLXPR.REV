reverse engineering of evlxpr to get at essence
-----------------------------------------------
Sunil Gupta 5/4/91
Source file EVLXPR.SRC IDENT 03SE87


Parameters 		passed in as
	STR		EXPRSN		rev polish version of original
	NCHRS		EXPRLN		lenght(number of tokens)
	VAL		ARGLST		values of variables substituted in
	NVALS		ARGNUM		number of variables
	ANSWER		XPRVAL
Returns
	-1	for success
	 1	for invalid RP-syntax
	 2	for too few values in expression
	 3	for invalid character in expression
NOTES
	trig functions are assumed to be in degrees. THese are converted to
	and from radians since fortran uses radians

reversing
	take first token in STR
	if not a number or NVALS less than 1
	invalid syntax (since rev polish is like that)
	if only one token in string then return it
	initialise output stack and pointer
	(OBSCURE LOOP, programmer having another brainstorm)
	increment pointer to input stack
	  if off bottom of input stack error
	  read token on input stack
	  findout whether it's a number or a operator
	  if an operator then if it's
		(poss BUG, operators dont check there are enuf items on stack)
		UNA: unary minus negate whatever is on the output stack
	  	ABB: put absolute value of whatever is on stack
	  	ACO:
	  	ASI:
		ATA:
		CSI:
		NIN:NINT
		SNE:
		TNG:
		(ELSE STATEMENT TO SEPARATE BINARY OPERATORS)
		  PLS
		  MNS
		  TMS
		  DVD
		  EXP
		  count binary operators
		end if
	   end if
	   check correct number of operators+operands counted
END
completed: 17:35 4/4/91
