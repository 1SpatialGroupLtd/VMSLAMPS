reverse engineering of parse() to get at essence
by Sunil Gupta 5/4/91 10:20

using ident number of parse	IDENT 23FE88

USES: Prec() to determine precedence of operator

	Initialise variables and stacks
	for ICHR = 1 to number of tokens in input stack
	  set flag to say whether previous token was operator
	  read a token from stack
	  set flag to say whether token is a NUMber
	  set flag to say whether token is an operator
	  if Number flag set
	    increment stack1 pointer
	    put token on stack1
	    increment n_vals
	  else if it operator flag set
	    if the previous one was an operator
		if token was MNS,ABB,ACO,ASI,ATA,NIN,CSI,SNE,TNG
		  increment stack2 pointer 
		  put token  UNA,ABB,ACO,ASI,ATA,NIN,CSI,SNE,TNG on stack2
		else
		  set error condition to bad operator syntax
		  goto 60
		end if
	     else
10		if precedence of token <= precedence of token at top of stack 2	
		  increment stack1 pointer
		  move token from stack2 to stack1
		  decrement stack2 pointer
	          goto 10
		else
		  put token onto stack2
		  increment stack2 pointer
		endif
		incremment operator count
	    end if
	  else if token = left bracket
	    put token on stack2, increment stack2 pointer
	  else if token = right bracket
20	    if precedence of token < precedence of token on stack2
		pop token off stack2 and push onto stack1
	        goto 20
	    else if token on stack2 is left bracket
		pop token off stack2
	    else
		generate parsing error
		goto 60  
	    end if
	  else
	    generate parsing error
	    goto 60
	  end if
	end for ICHR
40	if items still on stack2
	  get top token from stack2
	  if neither left nor right brackets
	    push token onto stack1,
	    pop stack2
	    goto 40
	  else
	    parsing error
	    goto 60
	  end if
	ENDIF
	copy all tokens from stack1 into input stack
	set flag for success
60	END

finished 5/4/91 10:50
