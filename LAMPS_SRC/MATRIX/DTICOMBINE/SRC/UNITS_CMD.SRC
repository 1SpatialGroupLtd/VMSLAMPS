C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1988-11-24 12:38:12.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL FUNCTION UNITS_CMD()
C
***	MODULE	UNITS_CMD
**	IDENT	24NO88
C
C	Copyright (C), Laser-Scan Laboratories Ltd., Cambridge, England
C
C	Created						TJH 23-Jul-1987
C	MOD 22AU88 Parameter DTI_DTED replaced by DTI_TED4  DRC
CMOD    UNITS PROJECTION added			       MWSR 24-Nov-1988
C
C Function to get UNITS command. Function returns .TRUE. if all is well.
C
	IMPLICIT NONE
C
C Parameters:
	INCLUDE	'LSL$DTMCREATESYS:MESPAR.PAR'
	INCLUDE	'LSL$CMNDTI:DTIPAR.PAR'
	INCLUDE	'LSL$CMNDTI:DTILIBMSG.PAR'
C
C Common:
	INCLUDE	'LSL$CMNLSL:CMDCOM.CMN'
	INCLUDE	'LSL$CMNDTI:DTIHDR.CMN'
	INCLUDE	'LSL$CMNDTICOMBINE:CONTROL.CMN'
C
C W/s
	INTEGER		CMD     ! decoded command number
	INTEGER		RETVAL  ! return code
C
C Define command tables:
	EXTERNAL	UNIT_CMD_TABLE
	INTEGER		UNIT_CMD_TABLE
C
C Function:
	INTEGER		SIGCHS
	LOGICAL 	RDCOMM  	! read command from line
	INTEGER		DTI_UNITS	! verify the units
C
C ......................................................................
C
	UNITS_CMD=.TRUE.		! assume success
	CMD=RDCOMM(UNIT_CMD_TABLE)	
	IF (CMD.LE.0) THEN		! unrecognised command
	   CALL WRITEF('%S specifying coordinate units',ERROR)
	   CALL WRITEF('Command should be followed by '//
     &		'MATRIX, METRES, LATLONG, SECONDS or PROJECTION')
	   CALL WRITEF('UNITS remain set to %S',
     &		UNITS_STR(WIN_UNITS(MAX(1,CURRENT_FILE))))
	   UNITS_CMD=.FALSE.
	ELSE
C
C check that the UNITS are valid
C  
	   RETVAL = DTI_UNITS(CURRENT_FILE,CMD)
	   IF (.NOT. RETVAL) THEN
	      IF (RETVAL .EQ. DTI__INVUNITS) THEN
	         CALL WRITEF('%S Specifying command UNITS',ERROR)
		 CALL WRITEF
     &           ('Command qualifier is invalid for the input file')
	      ELSE
		 CALL LSL_PUTMSG(RETVAL)
	      ENDIF
	      UNITS_CMD = .FALSE.
	   ELSE
              WIN_UNITS(CURRENT_FILE)=CMD
	   ENDIF
	ENDIF
C
	RETURN
	END
