C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1991-08-09 15:24:42.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL FUNCTION SHOW_CMD()
C
***	MODULE	SHOW_CMD
**	IDENT	01DE88
C
C	Copyright (C), Laser-Scan Laboratories Ltd., Cambridge, England
C
CMOD	New SHOW ENABLE - get rid of SHOW DIAGNOSTICS  MWSR 01-Dec-1988
C	and SHOW DEFAULTS
CMOD    Extra argument added to DTI_PRINT_HEADER       MWSR 24-Nov-1988
CMOD	Classification added				JHR 22-Sep-1988
CMOD	removed BOOLEAN_FALSE, TOLERANCE
CMOD	added OUTPUT				   	 SG 22-Apr-1991
C	Created						TJH 03-Nov-1987
C
C Function to show command status eg SHOW FILES
C
C Function returns .TRUE. if all is well, .FALSE. if an error
C
	IMPLICIT NONE
C
C Parameters:
	INCLUDE 'LSL$DTMCREATESYS:MESPAR.PAR'
	
C
C Common blocks:
	INCLUDE 'LSL$CMNDTICOMBINE:CONTROL.CMN'
	INCLUDE 'LSL$CMNDTI:DTIHDR.CMN'
	INCLUDE 'LSL$CMNLSL:CMDCOM.CMN'
C
C W/s
	BYTE		CH	! for use with RDCHS
	INTEGER		CMD     ! decoded command number
C
C Functions:
	INTEGER		RDCOMM
	INTEGER		SIGCHS
C
C Command table:
	EXTERNAL	SHOW_CMD_TABLE
	INTEGER		SHOW_CMD_TABLE
C
C ......................................................................
C
	SHOW_CMD=.TRUE.			! assume success
C
	NOMESS=.TRUE.			! turn off CMDLIB messages
	CALL WRITEF
	CMD=RDCOMM(SHOW_CMD_TABLE)	! get command
	CMD=CMD+1
	GOTO (
     &		10,			! error/nothing	- cmd=1
     &		20,			! enable	- cmd=2
     &		40,			! expression	- cmd=3
     &		60,			! filea		- cmd=4
     &		70,			! fileb		- cmd=5
     &		80,			! filec		- cmd=6
     &		90,			! filed		- cmd=7
     &		100,			! filee		- cmd=8
     &		110,			! filef		- cmd=9
     &		120,			! fileg		- cmd=10
     &		130,			! fileh		- cmd=11
     &		50,			! files		- cmd=12
     &		140,			! units		- cmd=13
     &		150,			! classes	- cmd=14
     &	        160			! output
     &			), CMD
C
C Command number out of range
	CALL WRITEF('%S Command not yet implemented',ERROR)
	SHOW_CMD=.FALSE.
	goto 1000
C
C ......................................................................
C SHOW 
C
10	CALL WRITEF
	CALL WRITEF(' %S Specifying command SHOW',ERROR)
	CALL WRITEF
	CALL WRITEF('Available SHOW command qualifiers are:')
	CALL WRITEF
	CALL WRITEF(' CLASSES, ENABLE, EXPRESSION, FILEA, FILEB, FILEC')
	CALL WRITEF(' FILED  , FILEE , FILEF     , FILEG, FILEH, FILES')
	CALL WRITEF(' OUTPUT ,  UNITS')
	goto 1000
C
C ......................................................................
C SHOW ENABLE
C
20	CALL WRITEF
	CALL WRITEF('Current status:')
	CALL WRITEF(' ')
	CALL EXPAND('ABSOLUTE       ')
	IF(HAD_ABSOLUTE)THEN
	  CALL APPEND('   On       ')
	ELSE
	  CALL APPEND('  Off       ')
	ENDIF
	CALL APPEND('CLASSIFICATION ')
	IF(CLASS_ENABLED)THEN
	  CALL APPEND('   On       ')
	ELSE
	  CALL APPEND('  Off       ')
	ENDIF
	CALL APPEND('DIAGNOSTICS    ')
	IF(DIAG)THEN
	  CALL APPEND('   On       ')
	ELSE
	  CALL APPEND('  Off       ')
	ENDIF
	CALL TTWLIN
	CALL EXPAND('PME            ')
	IF(PMEING)THEN
	  CALL APPEND('   On       ')
	ELSE
	  CALL APPEND('  Off       ')
	ENDIF
	CALL TTWLIN
	CALL WRITEF(' ')
	goto 1000
C
C ......................................................................
C SHOW EXPRESSION
40	IF (HAD_EQU) THEN
	   CALL WRITEF('       %S',EXPSTR(1:SIGCHS(EXPSTR)))
	ELSE
	   CALL WRITEF('Expression undefined')
	ENDIF
	goto 1000  ! only show expression
C
C ......................................................................
C SHOW FILEA
50	CALL WRITEF
	CALL WRITEF('FILEA:')
60	IF (DTILUN_INUSE(1)) THEN
	   CALL DTI_PRINT_HEADER(1,WIN_UNITS(1),HAD_ABSOLUTE)
	ELSE
	   CALL WRITEF('File A is undefined')
	ENDIF
	IF (CMD.EQ.4) goto 1000  ! only show FILEB
C
C ......................................................................
	CALL WRITEF
	CALL WRITEF('FILEB:')
70	IF (DTILUN_INUSE(2)) THEN
	   CALL DTI_PRINT_HEADER(2,WIN_UNITS(2),HAD_ABSOLUTE)
	ELSE
	   CALL WRITEF('File B is undefined')
	ENDIF
	IF (CMD.EQ.5) goto 1000  ! only show FILEB
C
C ......................................................................
	CALL WRITEF
	CALL WRITEF('FILEC:')
80	IF (DTILUN_INUSE(3)) THEN
	   CALL DTI_PRINT_HEADER(3,WIN_UNITS(3),HAD_ABSOLUTE)
	ELSE
	   CALL WRITEF('File C is undefined')
	ENDIF
	IF (CMD.EQ.6) goto 1000  ! only show FILEC
C
C ......................................................................
	CALL WRITEF
	CALL WRITEF('FILED:')
90	IF (DTILUN_INUSE(4)) THEN
	   CALL DTI_PRINT_HEADER(4,WIN_UNITS(4),HAD_ABSOLUTE)
	ELSE
	   CALL WRITEF('File D is undefined')
	ENDIF
	IF (CMD.EQ.7) goto 1000  ! only show FILED
C
C ......................................................................
	CALL WRITEF
	CALL WRITEF('FILEE:')
100	IF (DTILUN_INUSE(5)) THEN
	   CALL DTI_PRINT_HEADER(5,WIN_UNITS(5),HAD_ABSOLUTE)
	ELSE
	   CALL WRITEF('File E is undefined')
	ENDIF
	IF (CMD.EQ.8) goto 1000  ! only show FILEE
C
C ......................................................................
	CALL WRITEF
	CALL WRITEF('FILEF:')
110	IF (DTILUN_INUSE(6)) THEN
	   CALL DTI_PRINT_HEADER(6,WIN_UNITS(6),HAD_ABSOLUTE)
	ELSE
	   CALL WRITEF('File F is undefined')
	ENDIF
	IF (CMD.EQ.9) goto 1000  ! only show FILEF
C
C ......................................................................
	CALL WRITEF
	CALL WRITEF('FILEG:')
120	IF (DTILUN_INUSE(7)) THEN
	   CALL DTI_PRINT_HEADER(7,WIN_UNITS(7),HAD_ABSOLUTE)
	ELSE
	   CALL WRITEF('File G is undefined')
	ENDIF
	IF (CMD.EQ.10) goto 1000  ! only show FILEG
C
C ......................................................................
	CALL WRITEF
	CALL WRITEF('FILEH:')
130	IF (DTILUN_INUSE(8)) THEN
	   CALL DTI_PRINT_HEADER(8,WIN_UNITS(8),HAD_ABSOLUTE)
	ELSE
	   CALL WRITEF('File H is undefined')
	ENDIF
	goto 1000  
C
C ......................................................................
C Show current file units unless current file not yet selected and 
C CURRENT_FILE is thus 0. 
140	IF(CURRENT_FILE .EQ. 0) THEN
	   CALL WRITEF('Current WINDOW units are undefined')
	ELSE
	   CALL WRITEF('Current WINDOW units are %S',
     &		UNITS_STR(WIN_UNITS(CURRENT_FILE)))
	ENDIF
C
	goto 1000
C ......................................................................
C SHOW CLASSES
150	IF (CLASS_ENABLED)  THEN
	  CALL SHOW_CLASS
	ELSE
	  CALL WRITEF('Classification not enabled')
	ENDIF
	goto 1000
C
C ......................................................................
C show output file type
160	CALL EXPAND('OUTPUT set to')
	IF (INTERSECTION) THEN
	  CALL writap(' intersection of input files')
	ELSE
	  CALL writap(' Union of input files')
	ENDIF
	GOTO 1000
C ......................................................................
1000	NOMESS=.FALSE.
	RETURN
	END
