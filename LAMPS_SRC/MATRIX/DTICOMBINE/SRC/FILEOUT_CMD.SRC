	LOGICAL FUNCTION FILEOUT_CMD(HAD_FILEOUT)
C
***	MODULE	FILEOUT_CMD
***	IDENT	18JA88
C
C	Copyright (C), Laser-Scan Laboratories Ltd., Cambridge, England
C
C	Created						TJH 18-Jan-1988
C
C Function to get output file-spec from FILEOUT command. If argument is
C missing the user is prompted. When argument read, output file
C spec is constructed and stored in /DTIHDR/. 
C
C Function returns .TRUE. if all is well, otherwise .FALSE.
C
	IMPLICIT NONE
C
C Argument:
	LOGICAL*1 HAD_FILEOUT		! already had FILEOUT cmd?
C
C Parameters:
	INCLUDE	'LSL$DTMCREATESYS:MESPAR.PAR'
	INCLUDE	'LSL$CMNDTI:DTIPAR.PAR'
C
C Common:
	INCLUDE	'LSL$CMNDTI:DTIHDR.CMN'
	INCLUDE	'LSL$CMNLSL:FILENAME.CMN'
	INCLUDE	'LSL$CMNLSL:TXTC.CMN'
	INCLUDE 'LSL$CMNDTICOMBINE:CONTROL.CMN'
	INCLUDE 'LSL$CMNDTICOMBINE:FILES.CMN'
C
C W/s
	INTEGER		I
	INTEGER		DATA_TYP	! to set output file data type
	BYTE		CH		! a character
	LOGICAL		IERR		! for error returns
	CHARACTER*128	NAME		! temp filename
	INTEGER		NAME_LENGTH	! it's length
C
C Functions
	LOGICAL		GETFILNAM	! get file-spec
	LOGICAL		RDCHS		! read char. skipping spaces
	LOGICAL		TTRSTR		! read from TT:
C
C ......................................................................
C
	IF (HAD_FILEOUT) THEN
	   CALL WRITEF(WARNING//'%S is already open for output',
     &		DTI_NAME(OUTLUN)(1:DTI_NAME_LENGTH(OUTLUN)))
	ENDIF
C
C If the silly user hasn't given a file-spec prompt for one
	IF (RDCHS(CH)) THEN			! empty line
	   IF (TTIN) THEN
	      CALL WRITEF('%S You must specify a file-spec argument'//
     &		' to the FILEOUT command',WARNING)
	   ELSE
	      CALL WRITEF('%S You must specify a file-spec argument'//
     &		'to the FILEOUT command',ERROR)
	   ENDIF	   
	   CALL WRITEF('For example FILEOUT DUA3:[MYDIR]JIM.DTI')
	   IF (TTIN) THEN
	      FILEOUT_CMD=TTRSTR(,,'Output DTI file? ',IERR)
	      IF (FILEOUT_CMD) THEN
	         CALL BSLN
	      ELSE
	         CALL LSL_PUTMSG(FILEOUT_CMD)
	         CALL LSL_ADDMSG(IERR)
	         GOTO 10
	      ENDIF
	      IF (TXTPTR.EQ.0) GOTO 10		! empty line
	   ELSE
	      GOTO 10  ! someone got their indirect file wrong !!
	   ENDIF
	ENDIF
	CALL BSCH
	FILEOUT_CMD=GETFILNAM(NAME,NAME_LENGTH,
     &		'LSL$DTI:DTI.DTI',.TRUE.,%REF('!'))
	IF (FILEOUT_CMD) THEN
	   DTI_NAME(OUTLUN)=NAME
	   DTI_NAME_LENGTH(OUTLUN)=NAME_LENGTH
C
C Uppercase the file-spec
	   CALL STR$UPCASE(DTI_NAME(OUTLUN),DTI_NAME(OUTLUN))
	ELSE
	   CALL WRITEF('%S reading output file-spec',ERROR)
	   CALL LSL_PUTMSG(FILEOUT_CMD)
	ENDIF
10	IF (FILEOUT_CMD.AND.HAD_FILEOUT) THEN
	   CALL EXPAND(WARNING//'Previous FILEOUT file superseded')
	   CALL WRTAPP(' - output file is now %S',
     &			DTI_NAME(OUTLUN)(1:DTI_NAME_LENGTH(OUTLUN)))
	ELSEIF (.NOT.FILEOUT_CMD.AND.HAD_FILEOUT) THEN
	   CALL WRITEF(WARNING//
     &	   'Previous FILEOUT file (%S) remains open for output',
     &	                DTI_NAME(OUTLUN)(1:DTI_NAME_LENGTH(OUTLUN)))
	ENDIF
	RETURN
	END
