	SUBROUTINE CULPLT(XPT,YPT,FC)
C
***	MODULE	CULPLT
***	IDENT	13AP89
C
C	Copyright : Laser-Scan Laboratories, Cambridge, England
C	Created   : 18SE85
C	Author    : D R Catlow
C
C	Modified  : DRC                                        Jan 1988
C                   To use primary and secondary graphics
C		    devices and extended GKSLDLIB.
C		    Now also uses DTILIB calls.
C
C	Routine for DTVIEW to take a transformed IFF culture data
C	point, transform it into plot (screen) coords, and plot the
C	data on the selected device(s).
C
C---------------------------------------------------------------------------
C
	IMPLICIT NONE
C
C	Arguments:
	INTEGER*4		XPT	!DTI coordinate
	INTEGER*4		YPT	!pair
	INTEGER*2		FC	!feature code
C
C Commons:
***	COMMON/LSL$CMNDTI:DTIHDR/
C
***	COMMON/LSL$CMNFRT:FRTCOM/
C
C	DTVIEW Commons
***	COMMON/HERE:VIEW/
***	COMMON/HERE:MODEL/
***	COMMON/HERE:DTICMN/
***	COMMON/HERE:CULTRE/
***	COMMON/HERE:DEVICE/
***	COMMON/HERE:GKSCMN/
***	COMMON/HERE:DRCTRL/
***	COMMON/HERE:FOG/
C
C	Locals:
	REAL		X,Y,Z		!untransformed coords
	REAL		XX,YY		!plot (transfromed) coords
	INTEGER*4	COL		!colour index for item
	INTEGER*2	THISY		!cell height
	INTEGER*2	PREVY		!previous cell height
	INTEGER*4	RETVAL		!function return value
C
C	Functions:
	INTEGER*4	DTI_READ_WORD_DATA
	INTEGER*4	ICOL
C
C*************************************************************************
C
C	Test whether the passed coordinate lies within the model
C
	IF(XPT.LT.DTI_WINDOW_SWX(1).OR.
     &     XPT.GT.DTI_WINDOW_NEX(1))THEN
	  STALIN=.TRUE.		!pen up ie. start new feature
          GOTO 999
	ENDIF
C
	IF(YPT.LT.DTI_WINDOW_SWY(1).OR.
     &     YPT.GT.DTI_WINDOW_NEY(1))THEN
	  STALIN=.TRUE.		!pen up ie. start new feature
          GOTO 999
	ENDIF
C
C------------------------------------------------------------------------
C	Retrieve the height of point XPT and YPT
	RETVAL=DTI_READ_WORD_DATA(1,THISY,XPT,YPT)
	IF(.NOT.RETVAL)THEN
	  CALL LSL_PUTMSG(RETVAL)
	  GOTO 999
	ENDIF
C
C	Bathymetry options
	IF(BATH)THEN
	  IF(THISY.GT.0)THISY=1
	ENDIF
C
C	Null value?
	IF(THISY.EQ.-32767)THEN
	  STALIN=.TRUE.
	  GOTO 999
	ENDIF
C
C	Multiply by vertical exaggeration value
	Y = FLOAT(THISY) * YSCALE
C
C-------------------------------------------------------------------------
C
	IF(DIRECT.EQ.1)THEN			!west
	  Z = FLOAT((XPT-1)-DTMOFX)  * ZSCALE
	  X = FLOAT(YPT-DTMOFY)  * XSCALE
	ENDIF
C
	IF(DIRECT.EQ.3)THEN			!east (reverse of west)
	  Z = FLOAT(NLINES-(XPT-DTMOFX))  * ZSCALE
	  X = FLOAT((NPTS+1)-(YPT-DTMOFY))  * XSCALE
	ENDIF
C	  
	IF(DIRECT.EQ.2)THEN			!south
	  Z = FLOAT((YPT-1)-DTMOFY)  * ZSCALE
	  X = FLOAT(NLINES-((XPT-1)-DTMOFX))  * XSCALE
	ENDIF
C
	IF(DIRECT.EQ.4)THEN			!north
	  Z = FLOAT(NPTS-(YPT-DTMOFY))  * ZSCALE
	  X = FLOAT(XPT-DTMOFX)  * XSCALE
	ENDIF
C
C	Transform .....
	CALL CORDTF(X,Y,Z,XX,YY)
C
C************************************************************************
C
C	Output to selected device(s)
	IF(STALIN)THEN				!invisible move required
	  IF(DEBUG)CALL WRITEF('Invisible move to %F %F',XX,YY)
          CALL G3MVTO(XX,YY)			!first pt - invis move
	  STFEAT=.FALSE.			!not yet drawn vector
	  STALIN=.FALSE.
	  PREVY=THISY
	  IF(FC.NE.-1)CURFC=FC
	ELSE
	  IF(FC.EQ.-1)THEN
	     IF(HAD_FOG.AND.PRSPVW) THEN
		IF(IN_FOG) THEN
		   COLOUR_INDEX = FOG_COLOUR
		ELSE
		   COLOUR_INDEX=ICOL(MAX(THISY,PREVY))
		ENDIF
	     ELSE
	        COLOUR_INDEX=ICOL(MAX(THISY,PREVY))
	     ENDIF	
	     CALL SET_COLOUR(COLOUR_INDEX)
	     PREVY=THISY
	  ELSE
	     IF(HAD_FOG.AND.PRSPVW) THEN
		IF(IN_FOG) THEN
		   COL = 0
		ELSE
	           COL=FRTCOL			!required colour of feature
	    	   COL=MIN(COL,OVERLAY_COLOURS)
		ENDIF
	     ELSE 
	        COL=FRTCOL			!required colour of feature
	        IF(NOPLNS.GT.4)THEN
	    	  COL=MIN(COL,OVERLAY_COLOURS)
	        ELSE
	          COL=MIN(COL,MAXCOL)
	        ENDIF
	     ENDIF
             CALL GSPLCI(COL)			!set colour index
	  ENDIF
	  IF(DEBUG)CALL WRITEF
     &      ('Visible move to %F %F - colour %N',XX,YY,COL)
          CALL G3LNTO(XX,YY)			!draw vector
	  STFEAT=.TRUE.				!now drawing feature
	  STALIN=.FALSE.
	ENDIF
C
C------------------------------------------------------------------------------
C
999	RETURN
C
	END	
