	SUBROUTINE DTIVIEW_SET_WINDOW (DTI_LUN)
C
***	IDENT	21JL88
***	MODULE	DTIVIEW_SET_WINDOW
C
C	Copyright : Laser-Scan Laboratories, Cambridge, England
C	Author    : D R Catlow
C	
C	Subroutine to set the area of interest in the input DTM.
C	The routine interpretes the command line according to the
C	current UNITS setting.
C	The routine checks that the window values are sensible,
C	or if they fall outside the DTM bounds.
C
	IMPLICIT NONE
C	
C DTILIB common
***	COMMON/LSL$CMNDTI:DTIHDR/
C LSLLIB common
***	COMMON/LSL$CMNLSL:CMDCOM/
C
***	COMMON/HERE:MODEL/		! contains UNITS etc.
C
C	Argument
	INTEGER*4	DTI_LUN		! which DTI file
C
C	Local
	INTEGER*4	X1,Y1,X2,Y2	! window values in matrix units
	INTEGER*4	LLDEGS(4)	! window values in seconds
C
C	Function
	LOGICAL		READLL		! reads lat/long
C
C************************************************************************
C
	IF(.NOT.DTILUN_INUSE(DTI_LUN))THEN
	  CALL WRITEF('%S Specifying command WINDOW',ERROR_BELL)	  
	  CALL WRITEF('The input DTI file must be specified before WINDOW')
	  GOTO 999
	ENDIF
C
	IF(CMDRCT.NE.4.AND.UNITS.NE.4)THEN
	  CALL WRITEF('%S Specifying command WINDOW',ERROR_BELL)	  
	  CALL WRITEF('Command requires 4 arguments')
	  GOTO 999
	ENDIF
C
	GOTO (100,200,300,400)UNITS
C
C------------------------------------------------------------------------
C	Matrix units
100     X1=NINT(REALAR(1))
        Y1=NINT(REALAR(2))
        X2=NINT(REALAR(3))
        Y2=NINT(REALAR(4))
	GOTO 500
C
C------------------------------------------------------------------------
C	Metres
200	X1=NINT(REALAR(1)/X_GRID(DTI_LUN))+1
	Y1=NINT(REALAR(2)/Y_GRID(DTI_LUN))+1
	X2=NINT(REALAR(3)/X_GRID(DTI_LUN))+1
	Y2=NINT(REALAR(4)/Y_GRID(DTI_LUN))+1
	GOTO 500
C
C------------------------------------------------------------------------
C	Seconds
300     Y1=NINT(REALAR(1)*10)
        X1=NINT(REALAR(2)*10)
        Y2=NINT(REALAR(3)*10)
        X2=NINT(REALAR(4)*10)
        X1=((X1-LONREC(1,DTI_LUN))/LONINT(DTI_LUN))+1
        Y1=((Y1-LATREC(1,DTI_LUN))/LATINT(DTI_LUN))+1
	X2=((X2-LONREC(1,DTI_LUN))/LONINT(DTI_LUN))+1
	Y2=((Y2-LATREC(1,DTI_LUN))/LATINT(DTI_LUN))+1
	GOTO 500
C
C------------------------------------------------------------------------
C	Degrees, Minutes & Seconds
C	Call READLL to convert to .1 seconds
C
400     IF(READLL(LLDEGS,4,.FALSE.))THEN
	  CALL WRITEF('%S Specifying command WINDOW',ERROR_BELL)
	  CALL WRITEF('Unable to use supplied LATLONG values')
	  GOTO 999
	ELSE
	  Y1=LLDEGS(1)*10
	  X1=LLDEGS(2)*10
	  Y2=LLDEGS(3)*10
	  X2=LLDEGS(4)*10
	  X1=((X1-LONREC(1,DTI_LUN))/LONINT(DTI_LUN))+1
	  Y1=((Y1-LATREC(1,DTI_LUN))/LATINT(DTI_LUN))+1
	  X2=((X2-LONREC(1,DTI_LUN))/LONINT(DTI_LUN))+1
	  Y2=((Y2-LATREC(1,DTI_LUN))/LATINT(DTI_LUN))+1
	ENDIF
C
C-----------------------------------------------------------------------
C
C	Are the window values sensible?
C	Does the NE coordinate exceed the SW coordinate
500     IF(X2.LE.X1.OR.Y2.LE.Y1)THEN
	  CALL WRITEF('%S Specifying WINDOW',ERROR_BELL)
     	  CALL WRITEF('NE corner values must exceed SW corner values')
	  GOTO 999
	ENDIF
C
	IF(X1.LT.1.OR.Y1.LT.1.OR.
     &     X2.GT.X_EXTENT(DTI_LUN).OR.Y2.GT.Y_EXTENT(DTI_LUN))THEN
	  CALL WRITEF('%S Specifying command WINDOW',ERROR_BELL)	  
	  CALL WRITEF('Supplied values exceed DTM extents')
	  GOTO 999
	ENDIF
C
C	Transfer to the DTI common block variables
	DTI_WINDOW_SWX(DTI_LUN) = X1
	DTI_WINDOW_SWY(DTI_LUN) = Y1
	DTI_WINDOW_NEX(DTI_LUN) = X2	
	DTI_WINDOW_NEY(DTI_LUN) = Y2
C
C-----------------------------------------------------------------------
C
999	RETURN
C
	END
