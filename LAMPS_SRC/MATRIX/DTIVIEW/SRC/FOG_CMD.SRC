C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1988-07-29 16:00:36.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL FUNCTION FOG_CMD()
C
***	MODULE	FOG_CMD
***	IDENT	29JL88
C
C Copyright Laser Scan Laboratories Limited, Cambridge, England
C
C Created by					ALB  19-Jul-1988
C
C Function to set fog parameters
C
	IMPLICIT NONE
C
C common blocks
C
***	COMMON/LSL$CMNLSL:CMDCOM/
***	COMMON/LSL$CMNLSL:TXTC/
***	COMMON/HERE:DRCTRL/
***	COMMON/HERE:MODEL/
***	COMMON/HERE:FOG/
C
C W/s.
C
	LOGICAL 	OK		! return code
	INTEGER		CMD		! command number
	INTEGER 	I		! loop controls.
C
C symbol table
C
	EXTERNAL 	FOG_CMD_TABLE
	INTEGER 	FOG_CMD_TABLE
C
C Functions.
C
	INTEGER		RDCOMM
C
C -----------------------------------------------------------------------------
C Initialise.
C
	FOG_CMD=.TRUE.		! assume success
C
C -----------------------------------------------------------------------------
C
C
	IF(.NOT.HAD_FOG)THEN
	   CALL WRITEF('%S Specifying command FOG',ERROR_BELL)
	   CALL WRITEF('Fog has not been enabled')
	   CALL WRITEF('Use ENABLE FOG command')
	   FOG_CMD=.FALSE.
	   GOTO 999
	ENDIF
C
C -----------------------------------------------------------------------------
C process subcommands
C 
	CMD=RDCOMM(FOG_CMD_TABLE)	
C
	GOTO (		100,		! unrecognised command
     &			200,		! set colour of fog
     &			300)CMD+1	! set visibility distance
C
C -----------------------------------------------------------------------------
C unrecognised commands
C 
100	CONTINUE
	CALL WRITEF('%S Specifying command FOG',ERROR_BELL)
	CALL WRITEF('Command qualifier are COLOUR or VISIBILITY')
	FOG_CMD=.FALSE.
	GOTO 999
C
C -----------------------------------------------------------------------------
C COLOUR command
C 
200	CONTINUE
	IF((CMDICT.LT.1).OR.
     &	(INTARG(1).LT.0.OR.INTARG(1).GT.MAXCOL+2)) THEN
	   CALL WRITEF('%S Specifying command FOG COLOUR',ERROR_BELL)
	   CALL WRITEF('command requires integer colour index '//
     &	   'in the range 0 to %I0',MAXCOL+2)
	   FOG_CMD=.FALSE.
	   GOTO 999
	ENDIF
	FOG_COLOUR = INTARG(1)
	GOTO 1000
C
C -----------------------------------------------------------------------------
C VISIBILITY command
C 
300	CONTINUE
	IF((CMDRCT.LT.1).OR.(REALAR(1).LT.0.0)) THEN
	   CALL WRITEF('%S Specifying command FOG VISIBILITY',ERROR_BELL)
	   CALL WRITEF('command requires one real argument '//
     &	   'greater than 0.0')
	   FOG_CMD=.FALSE.
	   GOTO 999
	ENDIF
	FOG_VISIBILITY = REALAR(1)
	GOTO 1000
C
C -----------------------------------------------------------------------------
C
999	CONTINUE
1000	CONTINUE
	RETURN
	END
