	INTEGER*4 FUNCTION CREATE_IFF_FILE
C
***	IDENT	01NO88
***	MODULE	CREATE_IFF_FILE
C
C	Copyright : Laser-Scan Laboratories, Cambridge, England
C	Author    : D R Catlow
C	
	IMPLICIT NONE
C
C------------------------------------------------------------------------
C
C	Function to create a IFF file.
C	The filename specified on the command line (optionally contained
C	within quotation marks) is parsed against a default LSL$IF:IFF.IFF
C
C	The function returns TRUE if a file is successfully opened, and
C	FALSE if an error has occured.
C
C-------------------------------------------------------------------------
C
C
***	PARAMETER/LSL$CMNDTI:DTIPAR/
***	PARAMETER/LSL$CMNDTI:DTILIBMSG/
C
***	COMMON/LSL$CMNIFF:IFFHAN/
***	COMMON/LSL$CMNIFF:MD2DES/
***	COMMON/LSL$CMNIFF:MHDEF/
C
C 	LSLLIB parameter files
***	COMMON/LSL$CMNLSL:READSTR.PAR/
***	COMMON/LSL$CMNLSL:LSLLIBMSG.PAR/
C
***	COMMON/HERE:GKSCMN/
***	COMMON/HERE:CULTRE/
***	COMMON/HERE:MODEL/
***	COMMON/HERE:DRCTRL/
***	COMMON/HERE:DEVICE/
C
C
C workspace
C
	REAL		CPARR(4,4)	! control points
	REAL		CCARR(2,10)	! calib coeffs
	INTEGER*2	IELEN
	CHARACTER*80	FILNAM
	INTEGER		FILLEN
	BYTE		CH
C
	INTEGER*4	I,J		
	INTEGER*4	ERROR		! function system errir code
	INTEGER*4	RETVAL		! function return code
C
C 	Functions
	INTEGER*4	GETFILNAM	! parse filename
	INTEGER*4	IFFCREATE	! create IFF file
	LOGICAL		RDCHS		! read character
C
	DATA		CCARR/0.0,1.0,8*0.0,
     &			      2*0.0,1.0,7*0.0/
	DATA		CPARR/0.0,1.0,0.0,1.0,
     &			      4*0.0,1.0,0.0,1.0,
     &			      0.0,4*1.0/
C
C****************************************************************************
C
	CREATE_IFF_FILE=.TRUE.	! Assume function is successful
C
C	Check for optional quotes around the filename
	IF(RDCHS(CH))THEN
	  CALL WRITEF('%S Specifying command IFF',ERROR_BELL)
	  CALL WRITEF('IFF filename is missing')
	  CREATE_IFF_FILE=.FALSE.
	  CALL BSLN
	  GOTO 999	  
	ENDIF
C
	IF (CH.EQ.''''.OR.CH.EQ.'"') THEN
	  RETVAL = GETFILNAM(FILNAM,FILLEN,'LSL$IF:.IFF',.TRUE.,CH)
	ELSE
	  CALL BSCH
	  RETVAL = GETFILNAM(FILNAM,FILLEN,'LSL$IF:.IFF',.TRUE.)
	ENDIF
C
	IF (.NOT.RETVAL) THEN
	  CALL LSL_PUTMSG(RETVAL)
	  CREATE_IFF_FILE=.FALSE.
	  GOTO 999
	ENDIF
C
C------------------------------------------------------------------------
C	Close any existing IFF output file
	IF(PLOT_IFF)THEN
          CALL ENDIFF
	  PLOT_IFF=.FALSE.
	  ACTIVE_IFF=.FALSE.
	ENDIF
C
C------------------------------------------------------------------------
	RETVAL = IFFCREATE(1,FILNAM(:FILLEN),'Output',,.TRUE.)
	IF(.NOT.RETVAL)THEN
	  CALL LSL_PUTMSG(RETVAL)
	  CREATE_IFF_FILE=.FALSE.
	  GOTO 999
	ENDIF
C
C put the standard stuff in
	CALL IFFRA(RANGE)
	CALL IFFHI
	CALL IFFMH(MHARR,MHLEN)
	MATV2 = -1		! unset descriptor
	CALL IFFMD(MD2ARR,MD2LEN)
	CALL IFFNS('DTM file')
	CALL IFFCC(CCARR)
	CALL IFFCP(CPARR)
	LPOSNO = LPOSE
	CALL IFFNO(LAYER,0,0)
	LAYER=LAYER+1
C
C put markers in DRCTRL
	INFT = .FALSE.		! not in a feature
	FTNUM = 1		! initialise feature counter
	VRTPT = 0		! (and none buffered)
C
999	RETURN
C
	END
