	LOGICAL FUNCTION READLL(RESULT,NUMVAL,BYPASS_ARG)
C
***	IDENT	21JL88
***	MODULE	READLL
C
C	Copyright LaserScan Laboratories Ltd., Cambridge, England
C
C	Author D R Catlow
C	Created 28OC85
C
C	Modified by ALB to include arguement bypass facility 	21-Jul-1988
C
C	Modified version of RDFANG
C	To read lat/long values and convert to seconds of arc.
C 	Reads a free format angle from TXTC the current text buffer
C 	returning TRUE if an error occurs, FALSE if it all works
C
C 	The required format is 
C	[DD]D [MM] [SS] H	where H is hemisphere
C
	IMPLICIT NONE
C
C	Returned:
	INTEGER*4	RESULT(4)	! lat and long in seconds
C	Passed:
	INTEGER*4	NUMVAL
	LOGICAL 	BYPASS_ARG	! bypass first argument
C
C parameters - hemisphere letters (compulsory!)
C
	PARAMETER	POSN = 'N'	! upper case hemisphere letters
	PARAMETER	POSE = 'E'
	PARAMETER	NEGS = 'S'
	PARAMETER	NEGW = 'W'
	PARAMETER	POSNLC = 'n'	! lower case hemisphere letters
	PARAMETER	POSELC = 'e'
	PARAMETER	NEGSLC = 's'
	PARAMETER	NEGWLC = 'w'
C
C 	Functions:
C
	LOGICAL		RDCH	! read a char
	LOGICAL		RDLONG	! read a number
C
C  	Workspace 
C
	INTEGER*4	I	! counter
	INTEGER*4	ACCUM	! accumulate angle in here
	INTEGER*4	NUMBER
	BYTE		CH	! a character
C
C**********************************************************************
C
	READLL = .TRUE.		! be pessimistic
C
	CALL BSLN
C
C	Set to first numeric character (ie skip COVER command)
50	IF (RDCH(CH)) GOTO 999	! error
	IF (CH.LT.'0'.OR.CH.GT.'9') GOTO 50
C
	IF(BYPASS_ARG) THEN		! bypass first argument
60	   IF (RDCH(CH)) GOTO 999	! error
	   IF (CH.NE.' ') GOTO 60
C
C blank located
C
70	   IF (RDCH(CH)) GOTO 999	! error
	   IF (CH.LT.'0'.OR.CH.GT.'9') GOTO 70
	ENDIF
C
	DO 500 I=1,NUMVAL
	CALL BSCH
C
C	Read degree part - occupying 3 characters
	ACCUM = 0
C
	IF (RDLONG(NUMBER)) GOTO 999
C
C 	and accumulate our result...
C
	ACCUM = NUMBER * 3600		! in seconds
C
C	Test if minutes is present
250	IF (RDCH(CH)) GOTO 999
	IF(CH.EQ.' ')GOTO 250		! space
	IF(CH.GT.'@')GOTO 300		! alpha character
	IF(CH.LT.'0'.OR.CH.GT.'9')GOTO 999
	CALL BSCH
C
C 	Minutes
C
	IF ( RDLONG(NUMBER) ) GOTO 999
C
C 	and accumulate...
C
	ACCUM = ACCUM + NUMBER*60	! in seconds
C
C	Test if seconds is present
270	IF(RDCH(CH))GOTO 999
	IF(CH.EQ.' ')GOTO 270		! space
	IF(CH.GT.'@')GOTO 300		! alpha character
	IF(CH.LT.'0'.OR.CH.GT.'9')GOTO 999
	CALL BSCH
C
C 	Seconds
C
	IF (RDLONG(NUMBER)) GOTO 999
C
C 	otherwise, accumulate this too
C
	ACCUM = ACCUM + NUMBER		! seconds
C
C	Hemisphere character
280	IF (RDCH(CH)) GOTO 999
	IF(CH.EQ.' ')GOTO 280
C
C is it a negative type hemisphere
C
300	IF(I.EQ.1.OR.I.EQ.3)THEN
	  IF(CH.EQ.'W'.OR.CH.EQ.'w'.OR.CH.EQ.'E'.OR.CH.EQ.'e')THEN
	    CALL WRITEF('Lat and Long values supplied in wrong order')
	    GOTO 999
	  ENDIF
	ELSE
	  IF(CH.EQ.'N'.OR.CH.EQ.'n'.OR.CH.EQ.'S'.OR.CH.EQ.'s')THEN
	    CALL WRITEF('Lat and Long values supplied in wrong order')
	    GOTO 999
	  ENDIF
	ENDIF
C
    	IF (CH.EQ.'S'.OR.CH.EQ.'s')THEN
	   ACCUM= -ACCUM 
	   GOTO 450
	ENDIF
C
	IF (CH.EQ.'W'.OR.CH.EQ.'w')THEN
	   ACCUM= -ACCUM
	   GOTO 450
	ENDIF
C
	IF (CH.EQ.'N'.OR.CH.EQ.'n')GOTO 450
	IF (CH.EQ.'E'.OR.CH.EQ.'e')GOTO 450

	GOTO 999
C
C     	We now have a sensible (?) angle 
C
450	RESULT(I)=ACCUM
	IF(I.NE.NUMVAL)THEN
460	  IF(RDCH(CH))GOTO 999
C
C	Move to next numeric value (allows skipping of , and -)
	  IF (CH.LT.'0'.OR.CH.GT.'9')GOTO 460
	ENDIF
C
500	CONTINUE
C
	READLL = .FALSE.
C
999     RETURN
	END
