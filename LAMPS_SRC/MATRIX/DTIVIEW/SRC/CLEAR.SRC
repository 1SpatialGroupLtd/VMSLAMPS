C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1988-04-13 16:56:52.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE CLEAR (IQUAD,PIC)
C
***	MODULE	CLEAR
***	IDENT	13AP88
C
C	Copyright : Laser-Scan Laboratories Ltd, Cambridge, England
C	Author    : DRC
C	Created   : Dec 1984
C
C	Modified  : DRC					Jan 1988
C	            For use with primary and secondary graphics
C		    devices and extended GKSLDLIB
C		    Call to PLTPOS removed.
C	Modified  : DRC					Feb 1987
C	    	    To use new plot device flags
C	Modified  : DRC					Jul 1987
C		    To add argument IQUAD and call to 
C		    PLTPOS to ensure correct transformation
C		    is first set up.
C		    DEVICE common block added.
C	Modified  : ACM				  	May 1985
C                   To use GKS
C
C----------------------------------------------------------------------
C
	IMPLICIT NONE
C
***	COMMON/HERE:DEVICE/		! has QUAD etc.
***	COMMON/HERE:GKSCMN/		! has TEK
C
***	PARAMETER/HERE:GKSPAR/
C
C 	Argument
	INTEGER*4	IQUAD		! Which quadrant to clear
C					! 0 = Full Screen
C					! 1 = Top Lefthand Quadrant
C					! 2 = Top Righthand Quadrant
C					! 3 = Bottom Righthand Quadrant
C					! 4 = Bottom Lefthand Quadrant
	INTEGER*4	PIC		! Which PICTURE
C					! -1 indicates both pictures
C
	REAL		PX(4),PY(4)	! rectangle coordinates
	INTEGER*4	I		! counter
	INTEGER*4	SAVED_QUAD	! copy of QUAD
C
C----------------------------------------------------------------------
C----------------------------------------------------------------------
C
C	Is a graphics device enabled
	IF (.NOT.(PRIMARY.OR.SECONDARY))GOTO 999
C
C----------------------------------------------------------------------
C	Save quadrant number
	SAVED_QUAD = QUAD
	QUAD = IQUAD
C
C	Whole screen operations
	IF (QUAD.EQ.0)THEN
C
C	If we are have 4 planes set, then all operations work on
C	both pictures.
C	Clearing of both pictures ie. all bit-planes.
	   IF(PIC.EQ.-1.OR.NOPLNS.EQ.4)THEN
	     IF(PRIMARY.AND.INIT_PRIMARY)THEN
               CALL GCLRWK(1,GALWAY)
	       DO 10 I = 0,4
	          VIEW_SHOWN(1,I) = .FALSE.
10	       CONTINUE
	     ENDIF
C
	     IF(SECONDARY.AND.INIT_SECONDARY)THEN
               CALL GCLRWK(2,GALWAY)
	       DO 20 I = 0,4
	          VIEW_SHOWN(2,I) = .FALSE.
20	       CONTINUE
	     ENDIF
C
	   ELSE
C
C	First deactivate the TEK if necessary
	     IF(WTYPE(1).EQ.9900)CALL GDAWK(1)
C
	     IF(PIC.EQ.1)THEN
	       IF(PRIMARY.AND.INIT_PRIMARY)THEN
	          CALL LSG_PLANE_SELECT(1,PLANE_MASK)
	          CALL LSG_PLANE_OFFSET(1,0)
	       ENDIF
	       IF(SECONDARY.AND.INIT_SECONDARY)THEN
	          CALL LSG_PLANE_SELECT(2,PLANE_MASK)
	          CALL LSG_PLANE_OFFSET(2,0)
	       ENDIF
	     ELSE IF(PIC.EQ.2)THEN
	       IF(PRIMARY.AND.INIT_PRIMARY)THEN
	          CALL LSG_PLANE_SELECT(1,.NOT.PLANE_MASK)
	          CALL LSG_PLANE_OFFSET(1,NOPLNS)
	       ENDIF
	       IF(SECONDARY.AND.INIT_SECONDARY)THEN
	          CALL LSG_PLANE_SELECT(2,.NOT.PLANE_MASK)
	          CALL LSG_PLANE_OFFSET(2,NOPLNS)
	       ENDIF
	     ENDIF
C
C	Draw black fill area that corresponds to the whole screen
	     CALL PLTPOS(.FALSE.,.TRUE.)
C
	     CALL GSSGT
C
	     CALL G3FILL(WXMIN,WYMIN,WXMAX,WYMAX,0)
C
C	Reactivate TEK if necessary or update workstations
             IF(WTYPE(1).EQ.9900)CALL GACWK(1)
	  ENDIF
C
C	Reset to current quadrant
	  QUAD=SAVED_QUAD
C
C	Update workstation device(s)
          IF(PRIMARY)CALL GUWK(1,GSUPP)
          IF(SECONDARY)CALL GUWK(2,GSUPP)
C
	  GOTO 999
	ENDIF
C
C----------------------------------------------------------------------
C
C 	Clear selected quadrant
C	First for the primary device
	IF(PRIMARY)THEN
C	Select the appropriate pictures
	  IF(PIC.EQ.-1)THEN
	    CALL LSG_PLANE_SELECT(1,-1)
	    CALL LSG_PLANE_OFFSET(1,0)
	  ELSE IF(PIC.EQ.1)THEN
	    CALL LSG_PLANE_SELECT(1,PLANE_MASK)
	    CALL LSG_PLANE_OFFSET(1,0)
	  ELSE IF(PIC.EQ.2)THEN
	    CALL LSG_PLANE_SELECT(1,.NOT.PLANE_MASK)
	    CALL LSG_PLANE_OFFSET(1,NOPLNS)
	  ENDIF
	ENDIF
C
C	Secondary device
	IF(SECONDARY)THEN
C	Select the appropriate pictures
	  IF(PIC.EQ.-1)THEN
	    CALL LSG_PLANE_SELECT(2,-1)
	    CALL LSG_PLANE_OFFSET(2,0)
	  ELSE IF(PIC.EQ.1)THEN
	    CALL LSG_PLANE_SELECT(2,PLANE_MASK)
	    CALL LSG_PLANE_OFFSET(2,0)
	  ELSE IF(PIC.EQ.2)THEN
	    CALL LSG_PLANE_SELECT(2,.NOT.PLANE_MASK)
	    CALL LSG_PLANE_OFFSET(2,NOPLNS)
	  ENDIF
	ENDIF
C
C	Deselect the TEK if necessary
	IF(PRIMARY.AND.WTYPE(1).EQ.9900)CALL GDAWK(1)
C
C	Define the coordinates of the quadrant
	CALL PLTPOS(.FALSE.,.TRUE.)
C
	CALL GSSGT
C
	CALL G3FILL(WXMIN,WYMIN,WXMAX,WYMAX,0)
C
C	Update view flags
	IF(PRIMARY)VIEW_SHOWN(1,IQUAD)=.FALSE. 
	IF(SECONDARY)VIEW_SHOWN(2,IQUAD)=.FALSE.
C
C	Reset to current quadrant
	QUAD=SAVED_QUAD
C
C	Reactive the TEK if necessary
	IF(PRIMARY.AND.WTYPE(1).EQ.9900)CALL GACWK(1)
C
	IF(PRIMARY)CALL GUWK(1,GSUPP)
	IF(SECONDARY)CALL GUWK(2,GSUPP)
C
C----------------------------------------------------------------------------
C
999	RETURN
C
	END
