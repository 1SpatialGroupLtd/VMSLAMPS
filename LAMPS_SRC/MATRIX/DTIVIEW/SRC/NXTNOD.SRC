C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1986-07-11 17:05:40.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE NXTNOD
C
***	MODULE NXTNOD
***	IDENT 11JL86
C
	IMPLICIT NONE
C
C Copyright Laser Scan Laboratories Ltd., Cambridge, England
C Author R. Fairbairns
C
C Coded June 1982
C
C To advance to the next node of the horizon chain
C
***	COMMON/HORIZN/
C
C------------------------------------------------------------------
C
C have we advanced along mask once already?
	IF (.NOT.HORADV) THEN		! not
	   CALL ADDNOD(OLDX1, OLDY1)
	   HORADV = .TRUE.
	ENDIF
C
C - copy X2 to X1
	OLDX1 = OLDX2
	OLDY1 = OLDY2
C
C - advance old horizon 'emptying' pointer
	HOREMP = HOREMP+1
C
C - are we to copy this node as we pass over it?
	IF (NDCOPY) THEN
	   CALL ADDNOD(OLDX1, OLDY1)	! copy it
	ELSE
	   NDCOPY = .TRUE.		! copy next one, anyway
	ENDIF
C
C - and discriminate on state now
	IF (HOREMP.GT.HORPT2) THEN
	   DANGLE = 1			! reached end of old horizon
	ELSE
	   OLDX2 = HORIZN(OLDPTX, HOREMP)
	   OLDY2 = HORIZN(OLDPTY, HOREMP)
	ENDIF
	RETURN
C
	END
