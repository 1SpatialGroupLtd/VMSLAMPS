	INTEGER*4 FUNCTION OPEN_IFF_FILE
C
***	IDENT	28NO88
***	MODULE	OPEN_IFF_FILE
C
C	Copyright : Laser-Scan Laboratories, Cambridge, England
C	Author    : D R Catlow
C
C	Modified  : DRC 14NO88 to read in MD2 and extract local origin
CMOD	Call to new routine SET_IFFWIN 		MWSR  28-Nov-1988
C	
	IMPLICIT NONE
C
C------------------------------------------------------------------------
C
C	Function to open a IFF file.
C	The filename specified on the command line (optionally contained
C	within quotation marks) is parsed against a default LSL$IF:IFF.IFF
C
C	The function returns TRUE if a file is successfully opened, and
C	FALSE if an error has occured.
C
C-------------------------------------------------------------------------
C
C
***	PARAMETER/LSL$CMNDTI:DTIPAR/
***	PARAMETER/LSL$CMNDTI:DTILIBMSG/
C
***	COMMON/LSL$CMNIFF:MD2DES/	! IFF type 2 map descriptor info
C
C 	LSLLIB parameter files
***	COMMON/LSL$CMNLSL:READSTR.PAR/
***	COMMON/LSL$CMNLSL:LSLLIBMSG.PAR/
C
***	COMMON/HERE:GKSCMN/
***	COMMON/HERE:CULTRE/
***	COMMON/HERE:MODEL/
C
C
C workspace
C
	INTEGER*2	IELEN
	BYTE		CH
C
	INTEGER*4	I,J		
	INTEGER*4	ERROR		! function system errir code
	INTEGER*4	RETVAL		! function return code
C
C 	Functions
	INTEGER*4	GETFILNAM	! parse filename
	INTEGER*4	IFFOPEN		! open IFF file
	LOGICAL		RDCHS		! read character
C
C****************************************************************************
C
	OPEN_IFF_FILE=.TRUE.	! Assume function is successful
C
C	Check for optional quotes around the filename
	IF (CH.EQ.''''.OR.CH.EQ.'"') THEN
	  RETVAL = GETFILNAM(INPUT_IFF_NAME,
     &                       INPUT_IFF_LENGTH,
     &                       'LSL$IF:.IFF',
     &                       .TRUE.,
     &                       CH)
	ELSE
	  CALL BSCH
	  RETVAL = GETFILNAM(INPUT_IFF_NAME,
     &                       INPUT_IFF_LENGTH,
     &                       'LSL$IF:.IFF',
     &                       .TRUE.)
	ENDIF
C
	IF (.NOT.RETVAL) THEN
	  CALL LSL_PUTMSG(RETVAL)
	  OPEN_IFF_FILE=.FALSE.
	  GOTO 999
	ENDIF
C
C------------------------------------------------------------------------
C	Open the file
	IF (HADIFF) CALL IFFCLO(3)
C
C Open with revision level of 1
	RETVAL = IFFOPEN(3,INPUT_IFF_NAME(1:INPUT_IFF_LENGTH),,.TRUE.,1)
	IF (.NOT.RETVAL)THEN
	   OPEN_IFF_FILE=.FALSE.
	   CALL WRITEF
           GOTO 999
	ENDIF
C
	HADIFF =.TRUE.
C
C 	Read in IFF range values
	CALL IFFNXC ('RA',IELEN)
	CALL EIHRR(RANGE_VALUES,IELEN/2,1)
C
	HADWIN=.FALSE.
C
C	Check for type 2 MD and read local origin values
C	These are added on to RANGE_VALUES and WIND
        CALL IFFNXC('MD',IELEN)
	ORIGIN_OFFSET(1) = 0.0
	ORIGIN_OFFSET(2) = 0.0
	IF (IELEN .EQ. MD2LEN) THEN		! type 2 MD
	   CALL EIHR(MD2ARR,MD2LEN,1)		! read entry
	   ORIGIN_OFFSET(1) = MD2LOC(1)
	   ORIGIN_OFFSET(2) = MD2LOC(2)
	ENDIF
C
C set up the IFFWINDOW
	CALL SET_IFFWIN
C
999	RETURN
C
	END
