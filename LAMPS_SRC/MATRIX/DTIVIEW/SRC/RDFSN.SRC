C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1989-01-19 18:07:06.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL FUNCTION RDFSN(FSNCMD)
C
***	MODULE	RDFSN
***	IDENT	19JA89
C
C Copyright Laser Scan Laboratories Limited, Cambridge, England
C Author R.W.Russell  (from RDLAY by R. Daly)
CMOD	Modified from ROVER version		MWSR	19-Jan-1989
C
C Function to read the arguments of a select FSN / deselect FSN command.
C Function returns TRUE  if error occurs.
C
	IMPLICIT NONE
C
	LOGICAL*1 FSNCMD
C
***	COMMON/HERE:SELECT/
***	COMMON/HERE:MODEL/
C
C W/s.
	INTEGER I,J		! loop controls.
	INTEGER COUNT		! number of range pairs read.
	INTEGER MASK		! value to be put into bit-map.
	BYTE CHR
C
C Functions.
	LOGICAL*1 RDRANG,RDCHS
C
C Initialise.
	RDFSN=.FALSE.
	COUNT=0
	MASK=0
	IF (FSNCMD) MASK=1
C
C Read all the ranges given with this command before updating
C the bit-map (since don't want to change anything if there is an
C error).
10	IF (RDCHS(CHR)) GOTO 30
C If interactive then not expecting any other commands.
	IF ((CHR.GE.48).AND.(CHR.LE.57)) GOTO 20	! end of cmd ?
	CALL BSCH
	GOTO 96
20	COUNT=COUNT+1
	IF (RDRANG(PAIRS(1,COUNT),PAIRS(2,COUNT))) GOTO 99
	IF ((PAIRS(1,COUNT).LT.0).OR.(PAIRS(1,COUNT).GT.MAXFSN)) GOTO 97
	IF ((PAIRS(2,COUNT).LT.0).OR.(PAIRS(2,COUNT).GT.MAXFSN)) GOTO 98
	GOTO 10
C
C If 1st FSN selection we've had then put the whole bit-map
C into select mode.
30	IF (COUNT.EQ.0) GOTO 96
	IF (.NOT.FSNCMD) GOTO 40 ! is it a SELECT or DESELECT command?
	IF (FSNMOD) GOTO 40	 ! are we in select or deselect mode?
	FSNMOD=.TRUE.
	CALL VIOCLR(FSNMAP,FSNMAX*4)	 ! reset the whole bit-map.
C
C Now set the required bits in the bit-map.
40	DO 60 I=1,COUNT
	   DO 50 J=PAIRS(1,I),PAIRS(2,I)
	      WORD=J/32		! which word (0-n) the bits in.
	      OFFSET=J-WORD*32	! offset into word.
	      CALL LIB$INSV(MASK,OFFSET,1,FSNMAP(WORD+1))
50	   CONTINUE
60	CONTINUE
	GOTO 1000
C
C Errors.
96	IF(FSNCMD)THEN
	   CALL WRITEF('%S Specifying command SELECT FSN',ERROR_BELL)
	ELSE
	   CALL WRITEF('%S Specifying command DESELECT FSN',ERROR_BELL)
	ENDIF
	CALL WRITEF('Unable to read FSN value')
	GOTO 99
97	IF (FSNCMD) THEN
	   CALL WRITEF('%S Specifying command SELECT FSN',ERROR_BELL)
	ELSE
	   CALL WRITEF('%S Specifying command DESELECT FSN',ERROR_BELL)
	ENDIF
	CALL WRITEF('Illegal FSN number %^L%N.',PAIRS(1,COUNT))
	GOTO 99
98	IF (FSNCMD) THEN
	   CALL WRITEF('%S Specifying command SELECT FSN',ERROR_BELL)
	ELSE
	   CALL WRITEF('%S Specifying command DESELECT FSN',ERROR_BELL)
	ENDIF
	CALL WRITEF('Illegal FSN number %^L%N.',PAIRS(2,COUNT))
99	RDFSN=.TRUE.		! reject the rest of the command line.
1000	RETURN
C
	END
