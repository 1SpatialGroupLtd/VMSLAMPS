C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1988-11-01 11:39:24.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE DRAW_LEGEND
C
***	MODULE	DRAW_LEGEND
***	IDENT	01NO88
C
C	Copyright : Laser-Scan Laboratories Ltd, Cambridge, England
C	Author    : DRC
C	Created   : March 1988
C
	IMPLICIT NONE
C
***	COMMON/LSL$CMNDTI:DTIHDR/
C
***	COMMON/LSL$CMNLSL:EXPC/
***	COMMON/HERE:MODEL/
***	COMMON/HERE:DEVICE/
***	COMMON/HERE:DRCTRL/
***	COMMON/HERE:DTICMN/
***	COMMON/HERE:GKSCMN/
***	PARAMETER/HERE:GKSPAR/
C
C workspace
	INTEGER*4	INCR		! height increment
	INTEGER*4	HRANGE		! height range
	INTEGER*4	BOX		! legend box count
	INTEGER*4	I
	INTEGER*4	HGT
	INTEGER		COL
	INTEGER*4	ISEG		! saved quadrant values
	INTEGER*4	DEVICE
	REAL		LS
	REAL		HGT0
	REAL		RDUMMY
	REAL		LX,LY		! legend position in device units
	REAL		XLL,YLL,XUR,YUR	! box ll and ur corners in WC
	REAL		WXR,WYR		! world range
	REAL		WX,WY		! world coords
C
	INTEGER		NBOXES

C
C functions
	INTEGER		ICOL
C
C**********************************************************************
C
C	Is an appropriate device selected?
	IF (.NOT.(PRIMARY.OR.SECONDARY))GOTO 999
C
C	Deactivate TEK4014 since a legend on a non-colour device
C	is meaningless
C
	IF(PRIMARY.AND.WTYPE(1).EQ.9900)THEN
	   CALL GDAWK(1)
	ENDIF
C	
C	Select the appropriate picture
	IF(PRIMARY)THEN
	  CALL LSG_PLANE_SELECT(1,PLANE_MASK)
	  CALL LSG_PLANE_OFFSET(1,0)
	ENDIF
C
	IF(SECONDARY)THEN
	  CALL LSG_PLANE_SELECT(2,PLANE_MASK)
	  CALL LSG_PLANE_OFFSET(2,0)
	ENDIF

C----------------------------------------------------------------------
C
C	Take into account a split screen
	IF (SPLIT)THEN
	   ISEG=QUAD
	   QUAD=QUAD-1
	   IF(QUAD.EQ.0)QUAD=4
	ENDIF
C
C	Set text characteristics
	CALL GSTXCI(1)		!colour
	CALL GSLWSC(1.0)	!thin lines
	CALL GSCHUP(0.0,1.0)	!angle of text
C
	IF(PRIMARY)THEN
	  HGT0=(WYMAX-WYMIN)*0.0025/SCRNDY(1)
	  CALL GSCHH(HGT0)
	ENDIF
C
	IF(SECONDARY)THEN
	  HGT0=(WYMAX-WYMIN)*0.0025/SCRNDY(2)
	  CALL GSCHH(HGT0)
	ENDIF
C	
C	Translate legend position specified in normalised device
C	coordinates into world coordinates.
C
	IF (PRIMARY) THEN
	  WXR=SCRNDX(1)	!world x range
	  WYR=SCRNDY(1)	!world y range
	  LX =(LEGX*WXR)-(WXR*0.5)
	  LY =(LEGY*WYR)-(WYR*0.5)
	  LS =LEGSIZ*0.01
	  DEVICE=1
C	Otherwise
	ELSE
	  WXR=SCRNDX(2)	!world x range
	  WYR=SCRNDY(2)	!world y range
	  LX =(LEGX*WXR)-(WXR*0.5)
	  LY =(LEGY*WYR)-(WYR*0.5)
	  LS =LEGSIZ*0.01
	  DEVICE=2
	END IF
C
C	Increment box counts
	BOX=1
C 	Do we need a box for sea?
	IF(MIN_WVALUE(1).LE.0)THEN
	  CALL VSTKD2W(DEVICE,LS+LX,LS*BOX*5.0+LY,XLL,YLL)
	  CALL VSTKD2W(DEVICE,LS*2.0+LX,LS*(BOX+1)*5.0+LY,XUR,YUR)
	  CALL G3FILL(XLL,YLL,XUR,YUR,2)! fill in blue
	  CALL VSTKD2W(DEVICE,LS*2.5+LX,LS*(BOX+1)*5.0+LY,WX,WY)
	  CALL G3TX(WX,WY,'     0')	! draw text
	  BOX=BOX+1
	ENDIF
C
C	Do we need an outside height range box
	IF(ZLOWER.GT.MIN_WVALUE(1))THEN
	  CALL VSTKD2W(DEVICE,LS+LX,LS*BOX*5.0+LY,XLL,YLL)
	  CALL VSTKD2W(DEVICE,LS*2.0+LX,LS*(BOX+1)*5.0+LY,XUR,YUR)
	  CALL G3FILL(XLL,YLL,XUR,YUR,1)
	  CALL VSTKD2W(DEVICE,LS*2.5+LX,LS*(BOX+1)*5.0+LY,WX,WY)
	  CALL EXPAND('%I',ZLOWER)
	  CALL G3TX(WX,WY,EXPDSC)
	  BOX=BOX+1
	ENDIF
C
C Generate and label the rest of the legend
C The legend may have up to 10 boxes
	HRANGE=(ZUPPER-ZLOWER)
	INCR=STPINT
50	NBOXES=(HRANGE/INCR)+1
	IF(NBOXES.GT.10)THEN
	  INCR=INCR*2
	  GOTO 50
	ENDIF
C
C Base height
	HGT = ZLOWER
C Generate legend boxes
	DO 60 I=1,NBOXES
	   HGT = HGT+INCR
	   IF(HGT.GT.ZUPPER)GOTO 100
	   COL = ICOL(HGT-1)
	   CALL VSTKD2W(DEVICE,LS+LX,LS*BOX*5.0+LY,XLL,YLL)
	   CALL VSTKD2W(DEVICE,LS*2.0+LX,LS*(BOX+1)*5.0+LY,XUR,YUR)
	   CALL G3FILL(XLL,YLL,XUR,YUR,COL)
C
C label bottom of first box with base
	   IF(I.EQ.1.AND.ZLOWER.EQ.MIN_WVALUE(1)) THEN
	     CALL EXPAND('%^W%I',MIN_WVALUE(1))
	     CALL VSTKD2W(DEVICE,LS*2.5+LX,LS*BOX*5.0+LY,WX,WY)
	     CALL G3TX(WX,WY,EXPDSC)
	   ENDIF
C
	   CALL EXPAND('%I',HGT)
	   CALL VSTKD2W(DEVICE,LS*2.5+LX,LS*(BOX+1)*5.0+LY,WX,WY)
	   CALL G3TX(WX,WY,EXPDSC)
C
	   BOX=BOX+1
C
60	CONTINUE
C 
C	Generate last box
100	IF(ZUPPER.LT.MAX_WVALUE(1))THEN
	  CALL VSTKD2W(DEVICE,LS+LX,LS*BOX*5.0+LY,XLL,YLL)
	  CALL VSTKD2W(DEVICE,LS*2.0+LX,LS*(BOX+1)*5.0+LY,XUR,YUR)
	  COL=ICOL(ZUPPER-1)
	  CALL G3FILL(XLL,YLL,XUR,YUR,COL)
C
	  CALL EXPAND('%I',ZUPPER)
	  CALL VSTKD2W(DEVICE,LS*2.5+LX,LS*(BOX+1)*5.0+LY,WX,WY)
	  CALL G3TX(WX,WY,EXPDSC)
	  BOX=BOX+1
	ENDIF
C
	CALL VSTKD2W(DEVICE,LS+LX,LS*BOX*5.0+LY,XLL,YLL)
	CALL VSTKD2W(DEVICE,LS*2.0+LX,LS*(BOX+1)*5.0+LY,XUR,YUR)
	COL=ICOL(MAX_WVALUE(1)-1)
	CALL G3FILL(XLL,YLL,XUR,YUR,COL)
C	
	CALL EXPAND('%^W%I',MAX_WVALUE(1))
	CALL VSTKD2W(DEVICE,LS*2.5+LX,LS*(BOX+1)*5.0+LY,WX,WY)
	CALL G3TX(WX,WY,EXPDSC)
C
	IF (SPLIT) QUAD = ISEG
C
C
C-----------------------------------------------------------------------------
C	Reactivate TEK if nec
	IF (PRIMARY.AND.WTYPE(1).EQ.9900)THEN
	   CALL GACWK(1)
	ENDIF
C
C	Update workstation
	IF(PRIMARY)CALL GUWK(1,GSUPP)
	IF(SECONDARY)CALL GUWK(2,GSUPP)
C
C-----------------------------------------------------------------------------
999	RETURN
	END
