	SUBROUTINE HORVIN(X, Y)
C
***	MODULE HORVIN
***	IDENT 11JL86
C
	IMPLICIT NONE
C
C Copyright Laser Scan Laboratories Ltd., Cambridge, England
C Author R. Fairbairns
C
C Coded June 1982
C
C To define the start of a new horizon vector
C
C arguments:
	REAL		X, Y		! coord of start of horizon
C
C DTVIEW common:
***	COMMON/HORIZN/
C
C workspace:
	REAL		MASKY		! masking Y-value
C
C-----------------------------------------------------------------------
C are we starting a new picture?
	IF (HORPT1.EQ.0) THEN
	   INIHOR = .TRUE.		! mark initialising
	   CALL ADDNOD(X, Y)		! set up first node
	   CALL G3MVTO(X, Y)		! position ourselves
	   MASKED = 0			! on horizon?
	   RETURN			! and we're done
	ENDIF
C
C tidy up old horizon
	IF (DANGLE.EQ.0 .AND. .NOT.INIHOR)
     &		CALL ADDNOD(OLDX2, OLDY2)
C
C not initialising, copy nodes
	INIHOR = .FALSE.
	NDCOPY = .TRUE.
C
C copy point defined by args
	NEWX1 = X
	NEWY1 = Y
C
C swap horizon vectors
	OLDPTX = HORPTX
	OLDPTY = HORPTY
	HORPTX = 4-HORPTX
	HORPTY = HORPTX+1
	HORPT2 = HORPT1
	HORPT1 = 0
C
C load first two points of old horizon
	HOREMP = 2
	OLDX1  = HORIZN(OLDPTX,1)
	OLDY1  = HORIZN(OLDPTY,1)
	OLDX2  = HORIZN(OLDPTX,2)
	OLDY2  = HORIZN(OLDPTY,2)
C
C is first point maskeable by old horizon?
	IF (OLDX1.GT.NEWX1) THEN	! not
	   CALL ADDNOD(NEWX1, NEWY1)
	   CALL G3MVTO(NEWX1, NEWY1)
	   DANGLE = -1			! mark state
	   RETURN
	ENDIF
C
C so we're potentially maskable
	DANGLE = 0			! record the fact
C
C are we to the right of the current mask vector?
	HORADV = .FALSE.		! not moved yet
10	IF (NEWX1.GE.OLDX2) THEN	! we are
	   CALL NXTNOD			! (sets DANGLE)
	   IF (DANGLE.GT.0) THEN	! end of 'old' horizon
	      CALL G3MVTO(NEWX1, NEWY1)
	      CALL ADDNOD(NEWX1, NEWY1)
	      RETURN
	   ELSE
	   GOTO 10			! i.e. DO WHILE
	   ENDIF
	ENDIF
C
C deal with case of NEWX1 = OLDX1
	IF (NEWX1.EQ.OLDX1) THEN
	   IF (NEWY1.LT.OLDY1) THEN	! below horizon
	      MASKED = -1		! mark,
	      IF (.NOT.HORADV)
     &		   CALL ADDNOD(OLDX1, OLDY1) ! 'advance' horizon
	      HORADV = .TRUE.		!   ...and...
	      RETURN			! 	we're done
	   ENDIF
	   IF (NEWY1.GT.OLDY1) THEN	! above horizon
	      MASKED = 1		! mark, and
	   ELSE				! on horizon
	      MASKED = 0		! mark
	   ENDIF
	   CALL ADDNOD(OLDX1, NEWY1)	! make new horizon entry
	   HORADV = .TRUE.
	   CALL G3MVTO(OLDX1, NEWY1)	! get to new position,
	   RETURN			! and exit
	ENDIF
C
C now we have OLDX1 < NEWX1 < OLDX2 -
C   initialise masking arrangements
	IF (.NOT.HORADV) CALL ADDNOD(OLDX1, OLDY1)
	HORADV = .TRUE.
	MASKY = OLDY1 + (OLDY2-OLDY1)*(NEWX1-OLDX1)/(OLDX2-OLDX1)
	IF (MASKY.LE.NEWY1) THEN	! above or on horizon
	   IF (MASKY.EQ.NEWY1) THEN
	      MASKED = 0		! on horizon
	   ELSE
	      MASKED = 1		! above it
	   ENDIF
	   CALL ADDNOD(NEWX1, NEWY1)
	   CALL G3MVTO(NEWX1, NEWY1)
	ELSE				! below horizon
	   MASKED = -1
	ENDIF
C
C whew (!)
C
	RETURN
C
	END
