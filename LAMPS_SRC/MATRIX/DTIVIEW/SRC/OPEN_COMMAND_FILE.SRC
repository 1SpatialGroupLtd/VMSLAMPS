C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1988-07-21 18:57:18.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE OPEN_COMMAND_FILE
C
***	IDENT	21JL88
***	MODULE  OPEN_COMMAND_FILE
C
C	Copyright : Laser-Scan Laboratories, Cambridge, England
C	Author    : D R Catlow
C	Created   : April 1988 
C	Modified  : ALB 	for use with DTIVIEW	21-Jul-1988
C	
C	Function  :
C	To parse the indirect command filename, and open the file.
C
C-----------------------------------------------------------------------
C
	IMPLICIT NONE
C
***	COMMON/HERE:MODEL/
***	COMMON/HERE:DTIQIO/
C
C-----------------------------------------------------------------------
C
	CHARACTER*128	FILENAME	! file name
	INTEGER*4	FILENAME_LEN	! length of filename
	BYTE		CH		! single character
	INTEGER*4	RETVAL		! function return
	INTEGER*4	ERROR 		! system error return
C
C 	Functions
	INTEGER*4	GETFILNAM	! parse filename
	LOGICAL		RDCHS		! read character
	INTEGER*4 	FLROPN		! open the indirect command file
C
C-----------------------------------------------------------------------
C
C	Check that @ has not been issued from within another command
C	file
	IF(HAD_INDIRECT_FILE)THEN
	  CALL WRITEF('%S Specifying command @',ERROR_BELL)
	  CALL WRITEF('Nested command files not supported')
	  GOTO 999
	ENDIF
C
	IF(RDCHS(CH))THEN
	  CALL WRITEF('%S Specifying command @',ERROR_BELL)
	  CALL WRITEF('Command file specification is missing')
	  GOTO 999
	ENDIF
C
C	Backspace over character just read, and parse against the
C	default
	CALL BSCH
	RETVAL = GETFILNAM(FILENAME,FILENAME_LEN,
     &                     'SYS$DISK:[].COM;0',.TRUE.,%REF('!'))
C
	IF (.NOT.RETVAL) THEN
	  CALL LSL_PUTMSG(RETVAL)
	  GOTO 999
	ENDIF
C
C 	Open the indirect command file
	RETVAL = FLROPN(9,FILENAME,ERROR,)
	IF(.NOT. RETVAL)THEN
	   CALL WRITEF
     &     ('%S Unable to open indirect command file %S',
     &     ERROR_BELL,FILENAME(1:FILENAME_LEN))
	   CALL LSL_PUTMSG(RETVAL)
	   GOTO 999
	ENDIF
C
C-----------------------------------------------------------------------
C	Signal that input is now from indirect command file
C
	HAD_INDIRECT_FILE=.TRUE.
C
C-----------------------------------------------------------------------
999	RETURN
C
	END
