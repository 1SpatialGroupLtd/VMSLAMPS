C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1990-04-02 12:39:28.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE VSBLTY (XCELL,YCELL)
C
***	IDENT	27JL88
***	MODULE	VSBLTY
C
C	Copyright : Laser-Scan Laboratories, Cambridge, England
C
C	Author	  : D Catlow
C	Created   : May 1985
C
C	Modified  : DRC                                     Jan-1988
C	            To use DTILIB functions
C
C	Subroutine to fill out the visibility matrix.
C	The visibility bitmap is opened on channel 2.
C	0 = not visible
C	1 = visible
C	These are derived from MASKED in HORIZN.CMN where MASKED <0 means
C	not visible, and MASKED >=0 means visible.
C
	IMPLICIT NONE
C
***	COMMON/LSL$CMNDTI:DTIHDR/
C
***	COMMON/HERE:DTICMN/
***	COMMON/HERE:HORIZN/		! contains MASKED
***	COMMON/HERE:MODEL/
***	COMMON/HERE:FOG/
C
C parameters in
	INTEGER*4 	XCELL		!col in DTI file	
	INTEGER*4	YCELL		!row in DTI file
C
C locals
	INTEGER*4	X_DTI,Y_DTI	!corrected bitmap coordinates
	INTEGER*4	RETVAL		!function return
C
C functions
	INTEGER*4	DTI_WRITE_BYTE_DATA	!to encode      bit map
C
C*************************************************************************
C
	Y_DTI=XCELL-DTMOFY
	X_DTI=YCELL-DTMOFX
C
	IF(X_DTI.LT.1.OR.X_DTI.GT.X_EXTENT(2).OR.
     &     Y_DTI.LT.1.OR.Y_DTI.GT.Y_EXTENT(2))GOTO 999
C
	IF(MASKED.LT.0)THEN
	  RETVAL=DTI_WRITE_BYTE_DATA(2,0,X_DTI,Y_DTI)
	  IF(.NOT.RETVAL)THEN
	    CALL LSL_PUTMSG(RETVAL)
            GOTO 999
	  ENDIF
	ELSEIF(IN_FOG) THEN
	  RETVAL=DTI_WRITE_BYTE_DATA(2,2,X_DTI,Y_DTI)
	  IF(.NOT.RETVAL)THEN
	    CALL LSL_PUTMSG(RETVAL)
            GOTO 999
	  ENDIF
	ELSE
	  RETVAL=DTI_WRITE_BYTE_DATA(2,1,X_DTI,Y_DTI)
	  IF(.NOT.RETVAL)THEN
	    CALL LSL_PUTMSG(RETVAL)
            GOTO 999
	  ENDIF
	ENDIF
C
999	RETURN
C
	END




