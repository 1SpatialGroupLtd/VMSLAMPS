C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1988-07-22 11:55:38.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL FUNCTION SYMBOL_FC_CMD()
C
***	MODULE	SYMBOL_FC_CMD
***	IDENT	22JL88
C
C Copyright Laser Scan Laboratories Limited, Cambridge, England
C
C Created by					ALB  19-Jul-1988
C
C Function to define symbols
C
	IMPLICIT NONE
C
C common blocks
C
***	COMMON/LSL$CMNLSL:CMDCOM/
***	COMMON/LSL$CMNFRT:FRTCOM/
***	COMMON/LSL$CMNLSL:TXTC/
***	COMMON/HERE:MODEL/
***	COMMON/HERE:USER_SYMBOLS/
C
C W/s.
C
	LOGICAL 	OK		! return code
	INTEGER 	I		! loop controls.
	INTEGER		SYMBOL_NUM	! temp variable to hold symbol number
	INTEGER		SYMBOL_FC	! temp variable to hold symbol fc	
C
C Functions.
C
	LOGICAL 	FRTFND
C
C -----------------------------------------------------------------------------
C Initialise.
C
	SYMBOL_FC_CMD = .TRUE.		! assume success
C
C -----------------------------------------------------------------------------
	IF(CMDICT.NE.2)THEN
	   CALL WRITEF('%S Specifying command SYMBOL FC',
     &	   ERROR_BELL)
	   CALL WRITEF('Command requires 2 integer arguments')
	   CALL WRITEF('eg SYMBOL FC <symbol number> <feature code>')
	   SYMBOL_FC_CMD=.FALSE.
	   GOTO 999
	ENDIF
C
	SYMBOL_NUM = INTARG(1) 
	SYMBOL_FC = INTARG(2) 
C
C Look up feature code in FRT
C
	OK = FRTFND(SYMBOL_FC)	
	IF(.NOT.FRTSYM) THEN
	   CALL WRITEF('%S Specifying command SYMBOL FC',
     &	   ERROR_BELL)
	   CALL WRITEF('Feature code %I0 is not a point symbol ',
     &	   SYMBOL_FC)
	   SYMBOL_FC_CMD=.FALSE.
	   GOTO 999
	ENDIF
	IF(SYMBOL_LDATA(5,SYMBOL_NUM)) THEN
	   CALL WRITEF('%S Symbol %I0 is being redefined',
     &	   WARN_BELL,SYMBOL_NUM)
	   SYMBOLS_DEFINED = SYMBOLS_DEFINED - 1
	ENDIF
	SYMBOL_IDATA(1,SYMBOL_NUM) = SYMBOL_NUM
	SYMBOL_IDATA(4,SYMBOL_NUM) = SYMBOL_FC
	SYMBOL_LDATA(5,SYMBOL_NUM) = .TRUE.
	SYMBOLS_DEFINED = SYMBOLS_DEFINED + 1
	GOTO 1000
C
C -----------------------------------------------------------------------------
C
999	CONTINUE
1000	CONTINUE
	RETURN
	END
