	SUBROUTINE PLOT_AREA (FC,NVERTS)
C
***	MODULE PLOT_AREA
***	IDENT  14NO88
C
C	Copyright : Laser-Scan Laboratories, Cambridge, England.
C	Created   : 10DE85
C	Author    : D R Catlow
C
C	Routine to determine internal coordinate points of an area,
C	transform to DTM coordinate system, and pass to ENCODE for
C	encoding and plotting.
C	Following this the boundary of the area is also plotted.
C
	IMPLICIT NONE
C
***	COMMON/LSL$CMNDTI:DTIHDR/
C
***	COMMON/HERE:CULTRE/
***	COMMON/HERE:MODEL/
***	COMMON/HERE:VIEW/
***	COMMON/HERE:DTICMN/
***	COMMON/HERE:TRANS/
C
C	Arguments:
	INTEGER*2	FC		!Feature code
	INTEGER*4	NVERTS		!number of coord pts passed
C
C	Locals:
	REAL		RLINE		!scan line
	REAL		RCOL		!scan column
	REAL		RINT		!real intersection with
C					!scan line or column
	INTEGER*4	XVERTS(8196)	!transformed
	INTEGER*4	YVERTS(8196)	!coordinates
	INTEGER*4	COUNT_VERTS	!number of verts defining
C					!clipped area
	INTEGER*4	INTER(512)	!x intersection pts
	INTEGER*4	NSECT		!number of intersections of
C					!current scan line
	INTEGER*4	LINE		!scan line counter
	INTEGER*4	COL		!scan column counter
	INTEGER*4	I		!loop counter
	INTEGER*4	X1,Y1,X2,Y2	!temporary coordinate values
	INTEGER*4	ITEMP		!temp value used in sort
	INTEGER*4	YMIN,YMAX	!scan line limits
	INTEGER*4	XMIN,XMAX	!scan column limits
	INTEGER*4	X_DTI(2)
	INTEGER*4	Y_DTI(2)
	INTEGER*4	WAY		!direction to encode
C
	LOGICAL		SORTED		!do intersections require sorting
C
C*************************************************************************
C
C	First transform (IFF to DTM ) clipped boundary coordinates
C	and put into local arrays XVERTS and YVERTS.
C	At the same time determine minimum and maximum scan line values
C
	COUNT_VERTS=0
	YMIN       =99999
	XMIN       =99999
	YMAX       =0
	XMAX       =0
C
	DO 100 I=1,NVERTS
C to DTM coordinate system
	   X1=DTI_WINDOW_SWX(1)-1
     &     +NINT(0.5+(XPTS(I)-WIND(1,1))*IFF_DTI(1,1))
	   Y1=DTI_WINDOW_SWY(1)-1
     &     +NINT(0.5+(YPTS(I)-WIND(1,2))*IFF_DTI(1,2))
C
C Store transformed coordinate in local arrays
	   COUNT_VERTS=COUNT_VERTS+1
	   XVERTS(COUNT_VERTS)=X1
	   YVERTS(COUNT_VERTS)=Y1
C
C Update maximum and minimum scan line values
	   IF(DIRECT.EQ.1.OR.DIRECT.EQ.3)THEN
	     YMIN=MIN(YMIN,YVERTS(COUNT_VERTS))
	     YMAX=MAX(YMAX,YVERTS(COUNT_VERTS))	   
	   ELSE
	     XMIN=MIN(XMIN,XVERTS(COUNT_VERTS))
	     XMAX=MAX(XMAX,XVERTS(COUNT_VERTS))
	   ENDIF
C
100 	CONTINUE
C
C Ensure area is correctly closed
	IF( (XVERTS(COUNT_VERTS).NE.XVERTS(1)).OR.
     &      (YVERTS(COUNT_VERTS).NE.YVERTS(1)) )THEN
	  COUNT_VERTS=COUNT_VERTS+1
	  XVERTS(COUNT_VERTS)=XVERTS(1)
	  YVERTS(COUNT_VERTS)=YVERTS(1)
	ENDIF
C
C************************************************************************
C
C Now determine interior coordinate points by scan line
C method, involving calculation of intersection points
C
	IF(DIRECT.EQ.2.OR.DIRECT.EQ.4)GOTO 220
C
	WAY=2
        DO 200 LINE=YMIN,YMAX	
C
	   NSECT=0
	   RLINE=FLOAT(LINE)+0.001
C
	   DO 150 I=2,COUNT_VERTS
C
	      Y1=YVERTS(I-1)
	      Y2=YVERTS(I)
	      IF(Y1.EQ.Y2)GOTO 150
	      IF(RLINE.LT.Y1.AND.RLINE.LT.Y2)GOTO 150
	      IF(RLINE.GT.Y1.AND.RLINE.GT.Y2)GOTO 150
	      NSECT=NSECT+1
C
	      X1=XVERTS(I-1)
	      X2=XVERTS(I)
	      RINT=(X1+(X2-X1)*(RLINE-Y1)/(Y2-Y1))
	      INTER(NSECT)=NINT(RINT)
C
150	   CONTINUE
C
	   IF(NSECT.LE.1)GOTO 200
C
C Now sort the x intersection points
155	 CONTINUE
C
	   SORTED=.TRUE.
C
	   DO 160 I=2,NSECT
C
	      IF(INTER(I-1).LE.INTER(I))GOTO 160
	      ITEMP	=INTER(I-1)
	      INTER(I-1)=INTER(I)
	      INTER(I)  =ITEMP
	      SORTED=.FALSE.
C
160	   CONTINUE
C
	   IF(.NOT.SORTED)GOTO 155
C
C Call encode to plot the interior scan lines
	   DO 180 I=2,NSECT,2
	      STALIN=.TRUE.
	      CALL ENCODE_IFF(INTER(I-1),LINE,INTER(I),LINE,FC,WAY)
180	   CONTINUE
C
200	CONTINUE
C
	GOTO 490
C
C************************************************************************
C
220     DO 400 COL=XMIN,XMAX	
C
	   WAY=1
	   NSECT=0
	   RCOL=FLOAT(COL)+0.001
C
	   DO 250 I=2,COUNT_VERTS
C
	      X1=XVERTS(I-1)
	      X2=XVERTS(I)
	      IF(X1.EQ.X2)GOTO 250
	      IF(RCOL.LT.X1.AND.RCOL.LT.X2)GOTO 250
	      IF(RCOL.GT.X1.AND.RCOL.GT.X2)GOTO 250
	      NSECT=NSECT+1
C
	      Y1=YVERTS(I-1)
	      Y2=YVERTS(I)
	      RINT=(Y1+(Y2-Y1)*(RCOL-X1)/(X2-X1))
	      INTER(NSECT)=NINT(RINT)
C
250	   CONTINUE
C
	   IF(NSECT.LE.1)GOTO 400
C
C Now sort the x intersection points
255	 CONTINUE
C
	   SORTED=.TRUE.
C
	   DO 260 I=2,NSECT
C
	      IF(INTER(I-1).LE.INTER(I))GOTO 260
	      ITEMP	=INTER(I-1)
	      INTER(I-1)=INTER(I)
	      INTER(I)  =ITEMP
	      SORTED=.FALSE.
C
260	   CONTINUE
C
	   IF(.NOT.SORTED)GOTO 255
C
C Call encode to plot the interior scan lines
	   DO 300 I=2,NSECT,2
	      STALIN=.TRUE.
	      CALL ENCODE_IFF(COL,INTER(I-1),COL,INTER(I),FC,WAY)
300	   CONTINUE
C
400	CONTINUE
C
C************************************************************************
C
C Plot area boundary using the transformed coordinates in
C XVERTS and YVERTS
C
490	STALIN=.TRUE.
C
	DO 500 I=2,COUNT_VERTS
	   X_DTI(1)=XVERTS(I-1)
	   Y_DTI(1)=YVERTS(I-1)
	   X_DTI(2)=XVERTS(I)
	   Y_DTI(2)=YVERTS(I)
C
	   CALL ENCODE_IFF
     &	        (X_DTI(1),Y_DTI(1),X_DTI(2),Y_DTI(2),FC,WAY)
500	CONTINUE
C
900	RETURN
	END
