C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1988-07-27 14:56:08.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL FUNCTION SYMBOL_CMD()
C
***	MODULE	SYMBOL_CMD
***	IDENT	27JL88
C
C Copyright Laser Scan Laboratories Limited, Cambridge, England
C
C Created by					ALB  19-Jul-1988
C
C Function to define symbols, position/move symbols and clear symbols
C if certain precondition hold.
C
	IMPLICIT NONE
C
C common blocks
C
***	COMMON/LSL$CMNLSL:CMDCOM/
***	COMMON/LSL$CMNLSL:TXTC/
***	COMMON/HERE:MODEL/
***	COMMON/HERE:USER_SYMBOLS/
***	COMMON/HERE:CULTRE/
***	COMMON/HERE:GKSCMN/
C
C W/s.
C
	LOGICAL 	OK		! return code
	INTEGER		CMD		! command number
	INTEGER 	I		! loop controls.
C
C symbol table
C
	EXTERNAL 	SYMBOL_CMD_TABLE
	INTEGER 	SYMBOL_CMD_TABLE
C
C Functions.
C
	INTEGER		RDCOMM
	LOGICAL 	SYMBOL_CLEAR_CMD
	LOGICAL 	SYMBOL_FC_CMD
	LOGICAL 	SYMBOL_POSITION_CMD
C
C -----------------------------------------------------------------------------
C Initialise.
C
	SYMBOL_CMD=.TRUE.		! assume success
C
C -----------------------------------------------------------------------------
C check on preconditions
C 
	IF(.NOT.SYMBOLS)THEN
	   CALL WRITEF('%S Specifying command SYMBOL',ERROR_BELL)
	   CALL WRITEF('Symbol options are not enabled')
	   CALL WRITEF('Ue ENABLE SYMBOLS command')
	   SYMBOL_CMD=.FALSE.
	   GOTO 999
	ENDIF
C
	IF(NOPLNS.EQ.8)THEN
	   CALL WRITEF('%S Specifying command SYMBOL',ERROR_BELL)
	   CALL WRITEF('Symbol plotting not possible with a '//
     &	   'planes setting of 8')
	   SYMBOL_CMD=.FALSE.
	   GOTO 999
	ENDIF
C
	IF(.NOT.HADFRT)THEN
	   CALL WRITEF('%S Specifying command SYMBOL',ERROR_BELL)
	   CALL WRITEF('No FRT file has been specified')
	   CALL WRITEF('Use FRT command')
	   SYMBOL_CMD=.FALSE.
	   GOTO 999
	ENDIF
C
	IF(.NOT.HADSRI)THEN
	   CALL WRITEF('%S Specifying command SYMBOL',ERROR_BELL)
	   CALL WRITEF('No SRI file has been specified')
	   CALL WRITEF('Use SRI command')
	   SYMBOL_CMD=.FALSE.
	   GOTO 999
	ENDIF
C
C -----------------------------------------------------------------------------
C process subcommands
C 
	CMD=RDCOMM(SYMBOL_CMD_TABLE)	
C
	GOTO (		100,		! unrecognised command
     &			200,		! clear symbol
     &			300,		! define fc for symbol
     &			400),CMD+1	! position symbol
C
C -----------------------------------------------------------------------------
C unrecognised commands
C 
100	CONTINUE
	CALL WRITEF('%S Specifying command SYMBOL',ERROR_BELL)
	CALL WRITEF('Command qualifier are CLEAR, FC or POSITION')
	SYMBOL_CMD=.FALSE.
	GOTO 999
C
C -----------------------------------------------------------------------------
C CLEAR command
C 
200	CONTINUE
	OK = SYMBOL_CLEAR_CMD()
	IF(.NOT.OK) THEN
	   SYMBOL_CMD = .FALSE.
	   GOTO 999
	ENDIF
	GOTO 1000
C
C -----------------------------------------------------------------------------
C FC command
C 
300	CONTINUE
	OK = SYMBOL_FC_CMD()
	IF(.NOT.OK) THEN
	   SYMBOL_CMD = .FALSE.
	   GOTO 999
	ENDIF
	GOTO 1000
C
C -----------------------------------------------------------------------------
C POSITION command
C 
400	CONTINUE
	OK = SYMBOL_POSITION_CMD()
	IF(.NOT.OK) THEN
	   SYMBOL_CMD = .FALSE.
	   GOTO 999
	ENDIF
	GOTO 1000
C
C -----------------------------------------------------------------------------
C
999	CONTINUE
1000	CONTINUE
	RETURN
	END
