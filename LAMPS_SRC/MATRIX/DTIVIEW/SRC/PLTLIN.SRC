C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1988-11-14 13:51:40.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE PLOT_LINE (FC,NVERTS)
C
***	MODULE	PLOT_LINE
***	IDENT	14NO88
C
C	Copyright : Laser-Scan Laboratories, Cambridge, England
C	Created   : 10DE85
C	Author    : D R Catlow
C
C	Routine to transform line coordinate points from IFF to DTM,
C	and pass transformed points to ENCODE for encoding and plotting.
C
	IMPLICIT NONE
C
***	COMMON/LSL$CMNDTI:DTIHDR/
C
***	COMMON/LSL$CMNFRT:FRTCOM/
***	COMMON/HERE:CULTRE/
***	COMMON/HERE:MODEL/
***	COMMON/HERE:DTICMN/
***	COMMON/HERE:TRANS/
C
C	Arguments
	INTEGER*2	FC		!feature code
	INTEGER*4	NVERTS		!number of coordinate pts.
C
C	Locals
	INTEGER*4	X1_DTI		!DTM
	INTEGER*4	Y1_DTI		!coordinates
	INTEGER*4	X2_DTI		!
	INTEGER*4	Y2_DTI		!
	INTEGER*4	I		!counter
C
C**********************************************************************
C
	STALIN=.TRUE.
C
	DO 100 I=2,NVERTS
C
C	  Transfrom points into DTI coordinates
	  X1_DTI=DTI_WINDOW_SWX(1)-1
     &    +NINT(0.5+(XPTS(I-1)-WIND(1,1))*IFF_DTI(1,1))
	  Y1_DTI=DTI_WINDOW_SWY(1)-1
     &    +NINT(0.5+(YPTS(I-1)-WIND(1,2))*IFF_DTI(1,2))
	  X2_DTI=DTI_WINDOW_SWX(1)-1
     &    +NINT(0.5+(XPTS(I)-WIND(1,1))*IFF_DTI(1,1))
	  Y2_DTI=DTI_WINDOW_SWY(1)-1
     &    +NINT(0.5+(YPTS(I)-WIND(1,2))*IFF_DTI(1,2))
C
C	  Test if the same, and skip if necessary
	  IF(X2_DTI.EQ.X1_DTI.AND.Y2_DTI.EQ.Y1_DTI)GOTO 100
C
C	  Call encode to get intermdiary matrix points, and draw
C	  connecting line
	  CALL ENCODE_IFF(X1_DTI,Y1_DTI,X2_DTI,Y2_DTI,
     &    FC,0)
C
100	CONTINUE
C
	RETURN
C
	END
