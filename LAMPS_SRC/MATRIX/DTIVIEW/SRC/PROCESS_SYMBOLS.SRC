	LOGICAL FUNCTION PROCESS_SYMBOLS(SYM_NUM,X_COORD,Y_COORD,
     &	CONVERT_TO_DTI)
C
***	MODULE PROCESS_SYMBOLS
***	IDENT  01NO88
C
C	Copyright : Laser-Scan Laboratories, Cambridge, England.
C
C	Created by : Adrian Bennetton			18-July-1988
C
C This routine is designed to process user specified symbols.  The routine
C allows symbols to be moved about the DTM.
C
	IMPLICIT NONE
C
***	COMMON/HERE:USER_SYMBOLS/
***	COMMON/LSL$CMNFRT:FRTCOM/
***	COMMON/HERE:TAB/
***	COMMON/HERE:TRANS/
***	COMMON/HERE:MODEL/
***	COMMON/HERE:DTICMN/
***	COMMON/HERE:DEVICE/
***	COMMON/HERE:GKSCMN/
***	PARAMETER/HERE:GKSPAR/
C
C arguments
C
	INTEGER		SYM_NUM		!Symbol number
	INTEGER		X_COORD		!X input coordinate
	INTEGER		Y_COORD		!Y input coordinate
	LOGICAL		CONVERT_TO_DTI	!TRUE if input coords are table units
C
C workspace
C
	INTEGER		I		!loop counter
	REAL 		X_RDTI		!X (real) DTI matrix coordinate
	REAL 		Y_RDTI		!Y (real) DTI matrix coordinate
	LOGICAL		OK		!return code
C
C functions
C
	LOGICAL		FRTFND
C
C
C------------------------------------------------------------------------------
C
	PROCESS_SYMBOLS = .TRUE.
C
C------------------------------------------------------------------------------
C Check whether user defined symbols option has been enabled if not exit
C
	IF(.NOT.SYMBOLS) THEN
	   PROCESS_SYMBOLS = .FALSE.
	   GOTO 999
	ENDIF
C
C Is an appropriate device selected
C
	IF(.NOT.(PRIMARY.OR.SECONDARY)) THEN
	   PROCESS_SYMBOLS = .FALSE.
	   GOTO 999
	ENDIF
C -----------------------------------------------------------------------------
C Deactivate TEK4014 since no facility clear symbols on this type of device
C
	IF(PRIMARY.AND.WTYPE(1).EQ.9900) THEN
	   CALL GDAWK(1)
	ENDIF
C -----------------------------------------------------------------------------
C Test whether the symbol is valid
C
	IF((SYM_NUM.LT.0).OR.(SYM_NUM.GT.MAX_SYMBOLS)) THEN
	   CALL WRITEF('%S symbol %I0 is invalid',
     &	   ERROR_BELL,SYM_NUM) 
	   CALL WRITEF
     &	   ('Symbol number less than 1 or greater than %I0',
     &     MAX_SYMBOLS)
	   PROCESS_SYMBOLS = .FALSE.
	   GOTO 999
	ENDIF
C
C Check user symbol array to determine whether symbol has been defined
C		
	IF(SYM_NUM.GE.1.AND.
     &	.NOT.SYMBOL_LDATA(5,SYM_NUM)) THEN !.FALSE. if undefined
	   CALL WRITEF('%S Symbol %I0 selected but no symbol '//
     &	   'defined',ERROR_BELL,SYM_NUM) 
	   CALL WRITEF('Use SYMBOL FC %I0 <fc> command to '//
     &	   'activate symbol',SYM_NUM)
	   PROCESS_SYMBOLS = .FALSE.
	   GOTO 999
	ENDIF
C------------------------------------------------------------------------
C 
C
	IF(.NOT.MOVE_SYMBOLS) THEN
	   MOVE_SYMBOLS = .TRUE.
	   CALL PLTPOS(.FALSE.,.FALSE.)
	   CALL GSSGT
C
C	Select the second set of planes if drawing to a graphics
C	device (unless a 4 planes device).
C
	   IF(PRIMARY)THEN
	      IF(NOPLNS.EQ.4)THEN
	         CALL LSG_PLANE_SELECT(1,PLANE_MASK)
	         CALL LSG_PLANE_OFFSET(1,0)
	         CALL LSG_PLANE_VISIBLE(1,-1)
	      ELSE
	         CALL LSG_PLANE_SELECT(1,.NOT.PLANE_MASK)
	         CALL LSG_PLANE_OFFSET(1,NOPLNS)
	         CALL LSG_PLANE_VISIBLE(1,-1)
	      ENDIF
	   ENDIF
C
	   IF(SECONDARY)THEN
              IF(NOPLNS.EQ.4)THEN
	         CALL LSG_PLANE_SELECT(2,PLANE_MASK)
	         CALL LSG_PLANE_OFFSET(2,0)
	         CALL LSG_PLANE_VISIBLE(2,-1)
	      ELSE
		 CALL LSG_PLANE_SELECT(2,.NOT.PLANE_MASK)
		 CALL LSG_PLANE_OFFSET(2,NOPLNS)
		 CALL LSG_PLANE_VISIBLE(2,-1)
	      ENDIF
	   ENDIF
	ENDIF
	IF(SYM_NUM.EQ.0) THEN
C -----------------------------------------------------------------------------
C Redraw  all symbols usually done after terrain has been redrawn
C
	   DO 100 I = 1,MAX_SYMBOLS
	      IF(SYMBOL_LDATA(7,I)) THEN
C
	         OK = FRTFND(SYMBOL_IDATA(4,I))		! lookup FC in FRT
C
		 CALL PLOT_SYMBOL(SYMBOL_IDATA(4,I),	! Feat Code
     &	   			SYMBOL_RDATA(2,I),	! old matrix x coord
     &	   			SYMBOL_RDATA(3,I),	! old matrix y coord
     &				.FALSE.,		! not IFF data
     &				.FALSE.,		! no clear
     &				I)			! button pressed
	      ENDIF
100	   CONTINUE
	ELSE
C
C undraw old symbol if previously drawn 
C
	   IF(SYMBOL_LDATA(7,SYM_NUM)) THEN
C
C Look up feature code in FRT
C
	      OK = FRTFND(SYMBOL_IDATA(4,SYM_NUM))	
C
	      CALL SRICOL(0)		! force colour of black
	      CALL PLOT_SYMBOL(	SYMBOL_IDATA(4,SYM_NUM),! Feat Code
     &	   			SYMBOL_RDATA(2,SYM_NUM),! old matrix x coord
     &	   			SYMBOL_RDATA(3,SYM_NUM),! old matrix y coord
     &				.FALSE.,		! not IFF data
     &				.TRUE.,			! clear mode (undraw)
     &				SYM_NUM)		! button pressed
C
	      CALL SRICOL(-1)		! get set to FRTCOL
C
	   ENDIF
C
C if CONVERT_TO_DTI true then convert from table coords into DTI units 
C and store as real 
C
	   IF(CONVERT_TO_DTI) THEN
	      IF(.NOT.MAP_SET) THEN
		 CALL WRITEF('%S Map area not registered',ERROR_BELL)
		 CALL WRITEF('Use the SETUP MAP command')
		 PROCESS_SYMBOLS = .FALSE.
		 GOTO 999
	      ENDIF
	      X_RDTI=FLOAT(NINT(TAB_DTI(1,1)*X_COORD 
     &	      + TAB_DTI(1,2)*Y_COORD + TAB_DTI(1,3)))
	      Y_RDTI=FLOAT(NINT(TAB_DTI(2,1)*X_COORD 
     &	      + TAB_DTI(2,2)*Y_COORD + TAB_DTI(2,3)))
	   ELSE
	      X_RDTI = X_COORD
	      Y_RDTI = Y_COORD
	   ENDIF
C
C Look up feature code in FRT
C
	   OK = FRTFND(SYMBOL_IDATA(4,SYM_NUM))	
C
C Call routine to plot out symbol
C
	   CALL PLOT_SYMBOL(	SYMBOL_IDATA(4,SYM_NUM),! Feat Code
     &	   			X_RDTI, 		! new matrix x coord
     &	   			Y_RDTI, 		! new matrix y coord
     &				.FALSE.,		! not IFF data
     &				.FALSE.,		! no clear
     &				SYM_NUM)		! button pressed
C
C if symbols not in window then redraw sybmol in old position
C		
	   IF(.NOT.SYMBOL_LDATA(8,SYM_NUM)) THEN
	      CALL PLOT_SYMBOL(	SYMBOL_IDATA(4,SYM_NUM),! Feat Code
     &	   			SYMBOL_RDATA(2,SYM_NUM),! old matrix x coord
     &	   			SYMBOL_RDATA(3,SYM_NUM),! old matrix y coord
     &				.FALSE.,		! not IFF data
     &				.FALSE.,		! no clear
     &				SYM_NUM)		! button pressed
	   ELSE
	      SYMBOL_RDATA(2,SYM_NUM) = X_RDTI
	      SYMBOL_RDATA(3,SYM_NUM) = Y_RDTI
	      IF(.NOT.SYMBOL_LDATA(6,SYM_NUM)) THEN
	         SYMBOL_LDATA(6,SYM_NUM) = .TRUE.
	      	 SYMBOLS_USED = SYMBOLS_USED + 1
	      ENDIF
	   ENDIF
	ENDIF
C -----------------------------------------------------------------------------
C Reactivate TEK is necessary
C
	IF(PRIMARY.AND.WTYPE(1).EQ.9900) THEN
	   CALL GACWK(1)
	ENDIF
C
C	Update workstation
	IF(PRIMARY)CALL GUWK(1,GSUPP)
	IF(SECONDARY)CALL GUWK(2,GSUPP)
C
999	CONTINUE
	RETURN
	END
