	PROGRAM DTIINFO
C
	IMPLICIT NONE
C
	INCLUDE      'LSL$CMNLSL:CLD.CMN'
	INCLUDE	     'LSL$CMNLSL:FILENAME.CMN'
	INCLUDE	     'LSL$SOURCE_ROOT:[DTMCONVERT.DTI2IIS]DTI2IISMSG.PAR'
	INCLUDE	     'LSL$CMNDTI:DTIHDR.CMN'
C
C Functions
C
	LOGICAL	     DTI_COPY_WORD_DATA      ! Copy DTI word data to a buffer
	LOGICAL	     DTI_COPY_BYTE_DATA      ! Copy DTI byte data to a buffer
	LOGICAL      DTI_COPY_LONG_DATA      ! Copy DTI long data to a buffer
	LOGICAL      DTI_OPEN		! Opens a DTI file
C
C W/s
C
	CHARACTER*128 DTIFIL,NAME
C
	LOGICAL	     OK
C
	BYTE	     BYUSER(512)	! Array for output of bytes
	INTEGER	     LOUSER(128)	! Array for output of long ints
	INTEGER*2    SHUSER(256)	! Array for output of short inTs
	INTEGER	     DTILEN
	INTEGER	     IERR		! System error code
	INTEGER      STX,STY
	INTEGER      I,J,K,L,M,N
C
	INTEGER      NX,NY
	INTEGER      IX,IY
	INTEGER      IIX,IIY
	INTEGER      NXSTEPS,NYSTEPS
	INTEGER      MINZ,MAXZ
	CHARACTER*1  TYPE
	INTEGER      MAXCLASS
	PARAMETER    (MAXCLASS=100)
	INTEGER      COUNT(MAXCLASS)
	INTEGER      CLASS(MAXCLASS)
	INTEGER      NCLASS
	INTEGER      VAL
	INTEGER      TOTAL,MAXCOUNT,PERCENT
	CHARACTER*100 BLANK
	CHARACTER*100 STARSTR
	REAL         Z
C
	CALL LSL_INIT
	CALL DTI_INIT
C
	CALL LIB$GET_INPUT(NAME,'Name ',L)
	IF(L.LE.0)GOTO 500
	DTIFIL='LSL$DTI:'//NAME(1:L)//'.DTI?'
	DTILEN=INDEX(DTIFIL,'?')-1
C
C Open the DTI file
C
	OK = DTI_OPEN(1,DTIFIL,DTILEN,.FALSE.,IERR)
	IF (.NOT.OK) THEN
	   PRINT*,'Error opening DTI file'
	   GOTO 500
	ENDIF
C
	PRINT*,' '
	IF(DATA_TYPE(1) .EQ. 1)THEN
	   TYPE='B'
	   MINZ=MIN_WVALUE(1)
	   MAXZ=MAX_WVALUE(1)
	   PRINT*,'Data type is BYTE'
	ELSE IF(DATA_TYPE(1) .EQ. 2)THEN
	   TYPE='W'
	   MINZ=MIN_WVALUE(1)
	   MAXZ=MAX_WVALUE(1)
	   PRINT*,'Data type is SHORT INTEGER'
	ELSE IF(DATA_TYPE(1) .EQ. 3)THEN
	   TYPE='L'
	   MINZ=MIN_LVALUE(1)
	   MAXZ=MAX_LVALUE(1)
	   PRINT*,'Data type is LONG INTEGER'
	ELSE
	   PRINT*,'Unrecognised data type'
	   GOTO 500
	ENDIF

1	NCLASS=0

	DO 10 I=1,MAXCLASS
	COUNT(I)=0
10	CONTINUE

	DO 20 I=1,100
	STARSTR(I:I)='*'
	BLANK(I:I)=' '
20	CONTINUE
C
	Z=MAX(MAXZ,-MINZ)
	N=LOG10(Z+1.0)+2

	PRINT9500,MINZ,MAXZ
9500	FORMAT(' Data range: ',I<N>,' to ',I<N>)
	PRINT*,' '

	NCLASS=0
40	CALL LIB$GET_INPUT(NAME,'Class limit ',L)
	IF(L .LE. 0)GOTO 50

	IF(NAME(1:1) .EQ. '*')THEN
	   NAME=NAME(2:100)
	   READ(NAME,*,ERR=45)L
	   IF(L.LE.0)GOTO 45
	   DO 42 I=-1000,1000
	   J=I*L
	   IF((NCLASS .LT. MAXCLASS) .AND. (J.GE.MINZ) .AND. (J.LT.MAXZ))THEN
	      NCLASS=NCLASS+1
	      CLASS(NCLASS)=J
	   ENDIF
42	   CONTINUE
	   GOTO 50
	ENDIF

	READ(NAME,*,ERR=45)L
	IF(L .LT. MINZ)THEN
	   PRINT*,'Invalid limit (less than minimum)'
	   GOTO 40
	ENDIF
	IF(L .GE. MAXZ)THEN
	   PRINT*,'Invalid limit (greater than or equal to maximum)'
	   GOTO 40
	ENDIF
	IF(NCLASS .GT. 0)THEN
	   IF(L .LE. CLASS(NCLASS))THEN
	      PRINT*,'Invalid limit (less than previous limit)'
	      GOTO 40
	   ENDIF
	ENDIF
	NCLASS=NCLASS+1
	CLASS(NCLASS)=L
	IF(NCLASS .LT. MAXCLASS) GOTO 40
45	PRINT*,'Invalid input'
	GOTO 40
50	CONTINUE

	NX=X_EXTENT(1)
	NY=Y_EXTENT(1)
C
	IF(TYPE .EQ. 'B')THEN
	   IX=16
	   IY=16
	ELSE IF(TYPE .EQ. 'W')THEN
	   IX=16
	   IY=16
	ELSE IF(TYPE .EQ. 'L')THEN
	   IX=8
	   IY=8
	ENDIF
C
C read data in IXxIY blocks
C
	IF(IX.GT.1) THEN
	   NXSTEPS=(NX+IX-1)/IX
	ELSE
	   NXSTEPS=NX
	ENDIF

	IF(IY.GT.1) THEN
	   NYSTEPS=(NY+IY-1)/IY
	ELSE
	   NYSTEPS=NY
	ENDIF

	DO 200 I=1,NXSTEPS

	STX=(I-1)*IX + 1
	IIX=MIN(IX,NX+1-STX)

	DO 150 J=1,NYSTEPS

	STY=(J-1)*IY + 1
	IIY=MIN(IY,NY+1-STY)

	IF(TYPE .EQ. 'B')THEN
	   OK = DTI_COPY_BYTE_DATA(1,BYUSER,.FALSE.,STX,STY,IIX,IIY,IERR)
	ELSE IF(TYPE .EQ. 'W')THEN
	   OK = DTI_COPY_WORD_DATA(1,SHUSER,.FALSE.,STX,STY,IIX,IIY,IERR)
	ELSE IF(TYPE .EQ. 'L')THEN
	   OK = DTI_COPY_LONG_DATA(1,LOUSER,.FALSE.,STX,STY,IIX,IIY,IERR)
	ENDIF

	IF(OK)THEN
C	   PRINT*,'Read ',IIX,IIY,' at ',STX,STY
	ELSE
	   PRINT*,'Error reading at ',STX,STY
	   GOTO 500
	ENDIF

	DO 120 K=1,IIX*IIY
	IF(TYPE .EQ. 'B')THEN
	   VAL=BYUSER(K)
	   IF(VAL.LT.0)VAL=256+VAL
	ELSE IF(TYPE .EQ. 'W')THEN
	   VAL=SHUSER(K)
	ELSE IF(TYPE .EQ. 'L')THEN
	   VAL=LOUSER(K)
	ENDIF

	DO 110 L=NCLASS,1,-1
	IF(VAL.GT.CLASS(L))THEN
	   COUNT(L+1)=COUNT(L+1)+1
	   GOTO 120
	ENDIF
110	CONTINUE
	COUNT(1)=COUNT(1)+1

120	CONTINUE

150	CONTINUE
200	CONTINUE

	TOTAL=0
	MAXCOUNT=0
	DO 300 I=1,NCLASS
	TOTAL=TOTAL+COUNT(I)
	MAXCOUNT=MAX(COUNT(I),MAXCOUNT)
300	CONTINUE
	TOTAL=TOTAL+COUNT(NCLASS+1)
	MAXCOUNT=MAX(COUNT(NCLASS+1),MAXCOUNT)
	M=LOG10(REAL(MAXCOUNT)+1.0)+1

	PRINT*,' '
	DO 400 I=1,NCLASS
C	PERCENT=(COUNT(I)*100/TOTAL)+0.5
	PERCENT=(COUNT(I)*50/MAXCOUNT)+0.5
	IF(I.EQ.1)THEN
	   PRINT9501,MINZ,CLASS(I),COUNT(I),STARSTR(1:PERCENT)
9501	   FORMAT(' ',I<N>,' to',I<N>,' (',I<M>,') ',A)
	ELSE
	   PRINT9501,CLASS(I-1)+1,CLASS(I),COUNT(I),STARSTR(1:PERCENT)
	ENDIF
400	CONTINUE
C	PERCENT=COUNT(NCLASS+1)*100/TOTAL
	PERCENT=(COUNT(NCLASS+1)*50/MAXCOUNT)+0.5
	K=MAX(N-1,1)
	PRINT9502,BLANK(1:K),CLASS(NCLASS),COUNT(NCLASS+1),STARSTR(1:PERCENT)
9502	FORMAT(' ',A<K>,'Over',I<N>,' (',I<M>,') ',A)
	PRINT*,' '
	K=LOG10(REAL(MAXCOUNT/50)+1.0)+2
	PRINT9503,NINT(MAXCOUNT/50.0)
9503	FORMAT(' * =',I<K>)
	PRINT*,' '

	CALL LIB$GET_INPUT(NAME,'Reclassify? ',L)
	IF((L.GT.0) .AND. (NAME(1:1) .EQ. 'Y' .OR. NAME(1:1) .EQ. 'y'))GOTO 1

500	CALL LSL_EXIT(OK)
C
1000	STOP ' '
	END
