C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1988-09-01 15:31:24.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL FUNCTION ANGQU(VAL,PROMPT,FLG)
C
***	MODULE ANGQU
***	IDENT 01SE88
C
C Copyright Laser-Scan Laboratories Ltd.,Cambridge,England
C 
C Author    Ron Russell				17-Dec-1985
C
C       This subroutine asks for an angular value
C
	IMPLICIT NONE
C
C argument (output)
C
	REAL*8		VAL		! input (default) angle
					! and output angle (in secs)
C
C argument (input)
C
	CHARACTER*(*)	PROMPT		! prompt to use
	INTEGER*4	FLG		! type of angle
					! = 0 for a signed angle
					! = 1 for latitude
					! = 2 for longitude
C
	INCLUDE '($SSDEF)'
***	PARAMETER/HERE:DTITRANSMSG/
***	PARAMETER/LSL$CMNLSL:LSLLIBMSG/
C
***	COMMON/LSL$CMNLSL:EXPC/
C
	INTEGER		IERR
	REAL*8		X
	INTEGER		OUTFLG
	CHARACTER	ICH
	INTEGER		LEN
C
C functions
C
	INTEGER		TTRSTR
	INTEGER		RDANG
	INTEGER		RDCHS
	CHARACTER*14	DISPANG
C
C assume success
C
	ANGQU=SS$_NORMAL
C
	X=VAL					! set up default
C
   10	X=VAL					! and for prompting
	CALL WRITEF('   %S',PROMPT)
C
	CALL EXPAND('   in DDD MM SS.SS format (%S): ',DISPANG(X,FLG))
C
	ANGQU=TTRSTR(,LEN,EXPDSC,IERR)
	IF (.NOT.ANGQU) THEN
	   IF (ANGQU.NE.LSL__EOF) THEN		! must be LSL__SYSERR
	      CALL LSL_PUTMSG(IERR)
	      ANGQU=IERR
	   ELSE
	      ANGQU=DTRANS__EOF
	   ENDIF
	   GOTO 999
	ELSEIF (LEN.EQ.0) THEN
	   GOTO 20			! take default
	ENDIF
C
	CALL BSLN
C
C read a value
C
	IF (RDANG(X,OUTFLG)) GOTO 10
C
C check for end of line
C
	IF (.NOT.RDCHS(ICH)) THEN
	   CALL LSL_PUTMSG(DTRANS__UNEXPCH,ICH)
	   GOTO 10
	ENDIF
C
C check for correct type of angle
C
	IF (OUTFLG.GT.0) THEN
	   IF (OUTFLG.NE.FLG) THEN
	      CALL LSL_PUTMSG(DTRANS__WRNGHEM)
	      GOTO 10
	   ENDIF
	ENDIF
C
C check for valid longitude and latitude
C
	IF (FLG.EQ.2.AND.ABS(X).GT.648000.0) THEN
	   CALL LSL_PUTMSG(DTRANS__ILLEGLONG,DISPANG(X,0))
	   GOTO 10
	ELSEIF (FLG.EQ.1.AND.ABS(X).GT.324000.0) THEN
	   CALL LSL_PUTMSG(DTRANS__ILLEGLAT,DISPANG(X,0))
	   GOTO 10
	ENDIF
C
   20	VAL=X
C
  999	RETURN
	END
