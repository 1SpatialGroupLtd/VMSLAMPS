        INTEGER*4 FUNCTION GET_OUTPUT_SIZE()
C
***	MODULE	GET_OUTPUT_SIZE
***	IDENT	08MY91
C
C 	Copyright Laser-Scan Laboratories Ltd.,Cambridge,England
C 	Author  : D R Catlow
C	Created : 28 September 1987
C	Modified: for SATMAP, DJG, 27 Apr 1988
C
C	Function for DTITRANS to determine the size of the output DTI
C	file, which holds the transformed and resampled data.
C	When a projection change transformation is required, this
C	involves transforming the first and last columns and rows of
C	data in the input file to determine the maxima values for the
C	output.
C	If resampling is all that is required, things are much simpler,
C	and we determine the size of the output on the basis of the
C	sample values alone.
C
C----------------------------------------------------------------------
	IMPLICIT NONE
C
C	DTILIB commons
***	COMMON   /LSL$CMNDTI:DTIHDR/
***	COMMON	 /LSL$CMNDTI:DTIPROJ/
C
C	DTITRANS commons
***	COMMON   /HERE:DTITRANS/
***	PARAMETER/HERE:DTITRANSMSG/
C
C Functions:
	INTEGER*4	SATMAP_TRANS
	INTEGER*4	TRANSFORM_COORD	!to transform a single coord
C
C Locals:
	REAL*8		X_SIZE		!X size of input file
	REAL*8		Y_SIZE		!Y size of input file
	REAL*8		ICOORD(2)	!untransformed coord pt
	REAL*8		OCOORD(2)	!transformed coord pt
	REAL*8		X(4),Y(4)	!transformed coords.
	INTEGER*4	I		!counter
C
C----------------------------------------------------------------------
C----------------------------------------------------------------------
C Get sizes of output matrix
C
	IF (IMAGEMAP) THEN
C
	   X_SIZE=DTIPROJ_SAMPLE(1,IN_LUN)*(X_EXTENT(IN_LUN)-1)
	   Y_SIZE=DTIPROJ_SAMPLE(2,IN_LUN)*(Y_EXTENT(IN_LUN)-1)
C
	   TRANS = 2			! image to ground
C
C Transform each corner in turn
C SW corner
	   IN_X = ABSOLUTE_SWX(IN_LUN)
	   IN_Y = ABSOLUTE_SWY(IN_LUN)
	   GET_OUTPUT_SIZE = SATMAP_TRANS()
	   X(1) = OUT_X
	   Y(1) = OUT_Y
C
C NW corner
	   IN_X = ABSOLUTE_SWX(IN_LUN)
	   IN_Y = ABSOLUTE_NEY(IN_LUN)
	   GET_OUTPUT_SIZE = SATMAP_TRANS()
	   X(2) = OUT_X
	   Y(2) = OUT_Y
C
C NE corner
	   IN_X = ABSOLUTE_NEX(IN_LUN)
	   IN_Y = ABSOLUTE_NEY(IN_LUN)
	   GET_OUTPUT_SIZE = SATMAP_TRANS()
	   X(3) = OUT_X
	   Y(3) = OUT_Y
C
C SE corner
	   IN_X = ABSOLUTE_NEX(IN_LUN)
	   IN_Y = ABSOLUTE_SWY(IN_LUN)
	   GET_OUTPUT_SIZE = SATMAP_TRANS()
	   X(4) = OUT_X
	   Y(4) = OUT_Y
C
	ELSE IF (CONTROL) THEN	
C
	   X_SIZE=DTIPROJ_SAMPLE(1,IN_LUN)*(X_EXTENT(IN_LUN)-1)
	   Y_SIZE=DTIPROJ_SAMPLE(2,IN_LUN)*(Y_EXTENT(IN_LUN)-1)
C
C	Transform each corner of the source matrix (these equate to the
C	current input window).
C	SW CORNER:
C
	   ICOORD(1)=ABSOLUTE_SWX(IN_LUN) - CONTROL_INPUT_ORG(1)
	   ICOORD(2)=ABSOLUTE_SWY(IN_LUN) - CONTROL_INPUT_ORG(2)
	   CALL TRNUSE(ICOORD,OCOORD,FORMATRIX)
	   X(1)=OCOORD(1) + CONTROL_OUTPUT_ORG(1) 
	   Y(1)=OCOORD(2) + CONTROL_OUTPUT_ORG(2) 
C
C	NW CORNER:
C
	   ICOORD(1)=ABSOLUTE_SWX(IN_LUN) - CONTROL_INPUT_ORG(1)
	   ICOORD(2)=ABSOLUTE_NEY(IN_LUN) - CONTROL_INPUT_ORG(2)
	   CALL TRNUSE(ICOORD,OCOORD,FORMATRIX)
	   X(2)=OCOORD(1) + CONTROL_OUTPUT_ORG(1) 
	   Y(2)=OCOORD(2) + CONTROL_OUTPUT_ORG(2) 
C
C	NE CORNER:
C
	   ICOORD(1)=ABSOLUTE_NEX(IN_LUN) - CONTROL_INPUT_ORG(1)
	   ICOORD(2)=ABSOLUTE_NEY(IN_LUN) - CONTROL_INPUT_ORG(2)
	   CALL TRNUSE(ICOORD,OCOORD,FORMATRIX)
	   X(3)=OCOORD(1) + CONTROL_OUTPUT_ORG(1) 
	   Y(3)=OCOORD(2) + CONTROL_OUTPUT_ORG(2) 
C
C	SE CORNER:
C
	   ICOORD(1)=ABSOLUTE_NEX(IN_LUN) - CONTROL_INPUT_ORG(1)
	   ICOORD(2)=ABSOLUTE_SWY(IN_LUN) - CONTROL_INPUT_ORG(2)
	   CALL TRNUSE(ICOORD,OCOORD,FORMATRIX)
	   X(4)=OCOORD(1) + CONTROL_OUTPUT_ORG(1) 
	   Y(4)=OCOORD(2) + CONTROL_OUTPUT_ORG(2) 
C
	ELSEIF (DO_TRANSFORM) THEN
C
	   X_SIZE=DTIPROJ_SAMPLE(1,IN_LUN)*(X_EXTENT(IN_LUN)-1)
	   Y_SIZE=DTIPROJ_SAMPLE(2,IN_LUN)*(Y_EXTENT(IN_LUN)-1)
C
C	Transform each corner of the source matrix (these equate to the
C	current input window).
C	SW CORNER:
C
	   ICOORD(1)=ABSOLUTE_SWX(IN_LUN)
	   ICOORD(2)=ABSOLUTE_SWY(IN_LUN)
	   CALL TRANSFORM_COORD(ICOORD,OCOORD,.FALSE.)
	   X(1)=OCOORD(1)
	   Y(1)=OCOORD(2)
C
C	NW CORNER:
C
	   ICOORD(1)=ABSOLUTE_SWX(IN_LUN)
	   ICOORD(2)=ABSOLUTE_NEY(IN_LUN)
	   CALL TRANSFORM_COORD(ICOORD,OCOORD,.FALSE.)
	   X(2)=OCOORD(1)
	   Y(2)=OCOORD(2)
C
C	NE CORNER:
C
	   ICOORD(1)=ABSOLUTE_NEX(IN_LUN)
	   ICOORD(2)=ABSOLUTE_NEY(IN_LUN)
	   CALL TRANSFORM_COORD(ICOORD,OCOORD,.FALSE.)
	   X(3)=OCOORD(1)
	   Y(3)=OCOORD(2)
C
C	SE CORNER:
C
	   ICOORD(1)=ABSOLUTE_NEX(IN_LUN)
	   ICOORD(2)=ABSOLUTE_SWY(IN_LUN)
	   CALL TRANSFORM_COORD(ICOORD,OCOORD,.FALSE.)
	   X(4)=OCOORD(1)
	   Y(4)=OCOORD(2)
C
	ELSE
C
C	Determine size of input in projection units...
	  X_SIZE=ABSOLUTE_NEX(IN_LUN)-ABSOLUTE_SWX(IN_LUN)
	  Y_SIZE=ABSOLUTE_NEY(IN_LUN)-ABSOLUTE_SWY(IN_LUN)
C
C	  ...and simply divide by the output sample values to get
C	  the size of the output matrix
	  X_EXTENT(OUT_LUN)=1+INT(X_SIZE/DTIPROJ_SAMPLE(1,OUT_LUN))
	  Y_EXTENT(OUT_LUN)=1+INT(Y_SIZE/DTIPROJ_SAMPLE(2,OUT_LUN))
C
C	Fill in origin values for output file.
C	These are the same as the input file.
	  DTIPROJ_ORIGIN(1,OUT_LUN)=DTIPROJ_ORIGIN(1,IN_LUN)
	  DTIPROJ_ORIGIN(2,OUT_LUN)=DTIPROJ_ORIGIN(2,IN_LUN)
	  X_OFFSET(OUT_LUN) = DTIPROJ_ORIGIN(1,OUT_LUN)
	  Y_OFFSET(OUT_LUN) = DTIPROJ_ORIGIN(2,OUT_LUN)
C
	  ABSOLUTE_SWX(OUT_LUN)=ABSOLUTE_SWX(IN_LUN)
	  ABSOLUTE_SWY(OUT_LUN)=ABSOLUTE_SWY(IN_LUN)
	  ABSOLUTE_NEX(OUT_LUN)=ABSOLUTE_NEX(IN_LUN)
	  ABSOLUTE_NEY(OUT_LUN)=ABSOLUTE_NEY(IN_LUN)
C
	  GOTO 900
C
	ENDIF
C
C-----------------------------------------------------------------------
C	Work out the minimun and maximum values
C	ie. output rectangle in world coordinates
C
	  ABSOLUTE_SWX(OUT_LUN)=X(1)
	  ABSOLUTE_SWY(OUT_LUN)=Y(1)
	  ABSOLUTE_NEX(OUT_LUN)=X(1)
	  ABSOLUTE_NEY(OUT_LUN)=Y(1)
C
	  DO 100 I=2,4
	     ABSOLUTE_SWX(OUT_LUN)=MIN(ABSOLUTE_SWX(OUT_LUN),X(I))
	     ABSOLUTE_SWY(OUT_LUN)=MIN(ABSOLUTE_SWY(OUT_LUN),Y(I))
	     ABSOLUTE_NEX(OUT_LUN)=MAX(ABSOLUTE_NEX(OUT_LUN),X(I))
	     ABSOLUTE_NEY(OUT_LUN)=MAX(ABSOLUTE_NEY(OUT_LUN),Y(I))
 100  	  CONTINUE
C
C	Now work out the size of the output matrix rectangle in
C	terms of columns and rows
C
	  X_SIZE = ABSOLUTE_NEX(OUT_LUN) - ABSOLUTE_SWX(OUT_LUN)
	  Y_SIZE = ABSOLUTE_NEY(OUT_LUN) - ABSOLUTE_SWY(OUT_LUN)
	  X_EXTENT(OUT_LUN) = 1 + INT(X_SIZE/DTIPROJ_SAMPLE(1,OUT_LUN))
	  Y_EXTENT(OUT_LUN) = 1 + INT(Y_SIZE/DTIPROJ_SAMPLE(2,OUT_LUN))
C
C	Fill in origin values for output file.
	  DTIPROJ_ORIGIN(1,OUT_LUN) = ABSOLUTE_SWX(OUT_LUN)
	  DTIPROJ_ORIGIN(2,OUT_LUN) = ABSOLUTE_SWY(OUT_LUN)
	  X_OFFSET(OUT_LUN) = DTIPROJ_ORIGIN(1,OUT_LUN)
	  Y_OFFSET(OUT_LUN) = DTIPROJ_ORIGIN(2,OUT_LUN)
C	ENDIF
C
C	Fill in window values for the output file
900	DTI_WINDOW_SWX(OUT_LUN)=1
	DTI_WINDOW_SWY(OUT_LUN)=1
	DTI_WINDOW_NEX(OUT_LUN)=X_EXTENT(OUT_LUN)
	DTI_WINDOW_NEY(OUT_LUN)=Y_EXTENT(OUT_LUN)
C
C----------------------------------------------------------------------
        GET_OUTPUT_SIZE=DTRANS__NORMAL
C
C----------------------------------------------------------------------
999	RETURN
	END
C
