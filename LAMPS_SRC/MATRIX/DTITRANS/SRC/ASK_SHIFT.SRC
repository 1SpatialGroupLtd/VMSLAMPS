        INTEGER*4 FUNCTION ASK_SHIFT()
C
***	MODULE	ASK_SHIFT
***	IDENT	31AU88
C
C 	Copyright Laser-Scan Laboratories Ltd.,Cambridge,England
C 	Author  : D R Catlow
C	Created : 27 July 1988
C	Modified:
C
C	Function for DTITRANS to request x and y shift values if
C	/SHIFT has been specified on the command line.
C	The x and y shift values are applied to the output file
C	coordinates prior to transform and/or resampling.  This
C	is achieved by simply adjusting the file local origin
C	values.
C
C----------------------------------------------------------------------
	IMPLICIT NONE
C
***	COMMON		/LSL$CMNLSL:EXCEPTION/
***	COMMON		/LSL$CMNLSL:EXPC/
***	PARAMETER	/LSL$CMNLSL:LSLLIBMSG/
C
***	COMMON		/LSL$CMNDTI:DTIPROJ/
***	COMMON		/LSL$CMNDTI:DTIHDR/
C
***	COMMON		/HERE:DTITRANS/
***	PARAMETER	/HERE:DTITRANSMSG/
C
C	Locals:
	REAL*8		X,Y		!values input read from terminal
	REAL*8		YY		! copy of Y
C
	INTEGER*4	UNITS_INDEX	!units index
	INTEGER*4	J,I		!counter
	INTEGER*4	LEN		!number of characters read
	INTEGER*4	NOCHAR		!length of prompt and default
	INTEGER*4	ERROR		!system error code
	BYTE		ICH		!single character
C
C	Functions:
	INTEGER*4	SIGCHS		!determines no. of sign. chs.
	INTEGER*4	EXPAND		!expands into EXPBUF
	INTEGER*4	TTRSTR		!read response from terminal
	INTEGER*4	RDDBLE		!read REAL*8
	INTEGER*4       RDCHS		!read a single character
C
	CHARACTER*80	STRNG
	INTEGER*4	STRNL
	CHARACTER*80	BLANK		!blank characters
	DATA		(BLANK(I:I),I=1,80)/80*' '/
C
	REAL*8		PI
	PARAMETER	(PI=3.14159265358979323846D0)
C----------------------------------------------------------------------
C----------------------------------------------------------------------
C	Assume success
50	ASK_SHIFT=DTRANS__NORMAL
C
C----------------------------------------------------------------------
C	Set default values
	X = 0.0
	Y = 0.0
C
	IF(.NOT.DO_SHIFT)GOTO 999
C----------------------------------------------------------------------
C	Prompt for values
	CALL WRITEF(' ')
100	IF (DTIPROJ_PROJECTION(OUT_LUN).EQ.100) THEN
	   CALL EXPAND
     &     ('Define origin shift as Latitude Longitude '//
     &	               '(%^D%F0.3, %F0.3): ',X,Y)
	ELSE
	   CALL EXPAND
     &     ('Define origin shift as Eastings Northings '//
     &	               '(%^D%F0.3, %F0.3): ',X,Y)
	ENDIF
C
C----------------------------------------------------------------------
C	Check response
	ASK_SHIFT=TTRSTR(,LEN,EXPDSC,ERROR)
	IF (.NOT.ASK_SHIFT) THEN
	   IF (ASK_SHIFT.NE.LSL__EOF) THEN
	      CALL LSL_PUTMSG(ERROR)
	   ELSE
	      ASK_SHIFT=DTRANS__EOF
	      CALL LSL_PUTMSG(ASK_SHIFT)
	   ENDIF
	   GOTO 999
	ENDIF
C
	IF(LEN.EQ.0) GOTO 250	!take default 
C
C----------------------------------------------------------------------
	CALL BSLN
C
	IF(RDCHS(ICH)) GOTO 100
C
C	Check for ? and print helpful message
	IF(ICH.EQ.'?') THEN
	   IF(DTIPROJ_PROJECTION(OUT_LUN).EQ.100) THEN
	      CALL WRITEF('Enter the Latitude and Longitude '//
     &	                  'shift as two real numbers')
	   ELSE
	      CALL WRITEF('Enter the Eastings and Northings '//
     &	                  'shift as two real numbers')
	   ENDIF
	   GOTO 100
	ENDIF
C
	CALL BSCH
C
C 	Read the first value
	IF (RDDBLE(X)) THEN
	   IF (ERRNUM.EQ.LSL__HADEXCP) THEN
	      CALL LSL_PUTMSG(LSL_EXCP)
	   ELSE
	      CALL LSL_PUTMSG(ERRNUM)
	   ENDIF
	   GOTO 100
	ENDIF	
C
C	Check for both values on same line
	IF (.NOT.RDDBLE(Y)) GOTO 250
C
C 	check for end of line
	IF (.NOT.RDCHS(ICH)) THEN
	   CALL LSL_PUTMSG(DTRANS__UNEXPCH,ICH)
	   GOTO 100
	ENDIF
C
C----------------------------------------------------------------------
C	Set up prompt for second value
160	IF (DTIPROJ_PROJECTION(OUT_LUN).NE.100) THEN
	   CALL EXPAND('Northings (%^D%F0.3): ',YY)
	ELSE
	   CALL EXPAND('Longitude (%^D%F0.3): ',YY)
	ENDIF
C
	ASK_SHIFT=TTRSTR(,LEN,EXPDSC,ERROR)
	IF (.NOT.ASK_SHIFT) THEN
	   IF (ASK_SHIFT.NE.LSL__EOF) THEN
	      CALL LSL_PUTMSG(ERROR)
	   ELSE
	      ASK_SHIFT=DTRANS__EOF
	      CALL LSL_PUTMSG(ASK_SHIFT)	       
	   ENDIF
	   GOTO 999
	ENDIF
C
	IF (LEN.EQ.0) GOTO 250		! take default for 2nd value
C
	CALL BSLN
C
C	Read the second value
	IF (RDDBLE(Y)) THEN
	   IF (ERRNUM.EQ.LSL__HADEXCP) THEN
	      CALL LSL_PUTMSG(LSL_EXCP)
	   ELSE
	      CALL LSL_PUTMSG(ERRNUM)
	   ENDIF
	   GOTO 100
	ENDIF
C
C 	check for end of line
	IF (.NOT.RDCHS(ICH)) THEN
	   CALL LSL_PUTMSG(DTRANS__UNEXPCH,ICH)
	   GOTO 100
	ENDIF
C
C----------------------------------------------------------------------
C 	Check for sensible latlong values 
C	 - first the latitude - in range -90 -> +90
C
250	IF (DTIPROJ_PROJECTION(OUT_LUN).EQ.100) THEN
	   STRNL=0
	   IF     (DTIPROJ_UNITS(OUT_LUN).EQ.5
     &            .AND.ABS(X).GT.PI/2.0) THEN
	      STRNL=EXPAND('%WS%^D%F10.7',STRNG,X)
	   ELSEIF (DTIPROJ_UNITS(OUT_LUN).EQ.3
     &            .AND.ABS(X).GT.324000.0) THEN
	      STRNL=EXPAND('%WS%^D%F10.3',STRNG,X)
	   ELSEIF (DTIPROJ_UNITS(OUT_LUN).EQ.4
     &            .AND.ABS(X).GT.90) THEN
	      STRNL=EXPAND('%WS%^D%F8.3',STRNG,X)
	   ELSEIF (DTIPROJ_UNITS(OUT_LUN).EQ.110
     &            .AND.ABS(X).GT.3240000.0) THEN
	      STRNL=EXPAND('%WS%^D%F10.2',STRNG,X)
	   ENDIF	      
C
	   IF (STRNL.GT.0) THEN
	      CALL LSL_PUTMSG(DTRANS__ILLEGLAT,STRNG(1:STRNL))
	      CALL LSL_PUTMSG(DTRANS__REENTER)
	      GOTO 50
	   ENDIF
C
C 	And the longitude - in range -180 -> +180
C
	   STRNL=0
	   IF     (DTIPROJ_UNITS(OUT_LUN).EQ.5
     &            .AND.ABS(Y).GT.PI) THEN
	      STRNL=EXPAND('%WS%^D%F10.7',STRNG,Y)
	   ELSEIF (DTIPROJ_UNITS(OUT_LUN).EQ.3
     &            .AND.ABS(Y).GT.648000.0) THEN
	      STRNL=EXPAND('%WS%^D%F10.3',STRNG,Y)
	   ELSEIF (DTIPROJ_UNITS(OUT_LUN).EQ.4
     &            .AND.ABS(Y).GT.180.0) THEN
	      STRNL=EXPAND('%WS%^D%F8.3',STRNG,Y)
	   ELSEIF (DTIPROJ_UNITS(OUT_LUN).EQ.110
     &            .AND.ABS(Y).GT.6480000.0) THEN
	      STRNL=EXPAND('%WS%^D%F10.2',STRNG,Y)
	   ENDIF	      
C
	   IF (STRNL.GT.0) THEN
	      CALL LSL_PUTMSG(DTRANS__ILLEGLONG,STRNG(1:STRNL))
	      CALL LSL_PUTMSG(DTRANS__REENTER)
	      GOTO 50
	   ENDIF
C
C 	Transfer these values to common, remembering to switch them
C	around if Latlong
	   X_SHIFT = Y
	   Y_SHIFT = X
	ELSE
	   X_SHIFT = X
	   Y_SHIFT = Y
	ENDIF
C
C----------------------------------------------------------------------
999	RETURN
C
	END
