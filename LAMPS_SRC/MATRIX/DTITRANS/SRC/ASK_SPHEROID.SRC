C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1995-01-19 16:46:50.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
        INTEGER*4 FUNCTION ASK_SPHEROID(DTILUN)
C
***	MODULE	ASK_SPHEROID
***	IDENT	19JA95
C
C 	Copyright Laser-Scan Ltd., Cambridge, England
C 	Author  : D R Catlow
C
C	Created : 02 October 1987
C	Modified:
C
C	Function for DTITRANS to request the spheroid code
C	and if required (ie. User Specified Spheroid) associated
C	parameters for the DTI file opened on DTILUN.
C	The values are written to the relevant variables in
C	DTIPROJ.
C	Based on ITRANS routine ASKMD.
C
C----------------------------------------------------------------------
	IMPLICIT NONE
C
***	COMMON		/LSL$CMNLSL:EXCEPTION/
***	COMMON		/LSL$CMNLSL:EXPC/
***	PARAMETER	/LSL$CMNLSL:LSLLIBMSG/
C
***	COMMON   	/LSL$CMNIFF:MD2NAM/	!holds MD variables that are
C						!used by DTITRANS to ensure
C						!compatability with ITRANS.
C
***	COMMON		/LSL$CMNDTI:DTIPROJ/
C
***	COMMON		/HERE:DTITRANS/
***	PARAMETER	/HERE:DTITRANSMSG/
C
C	Arguments:
	INTEGER*4	DTILUN			!which DTI file
C
C	Locals:
	REAL*8		X,Y			!values read  
	INTEGER*4	SPHEROID_INDEX		!spheroid index
	INTEGER*4	I,J,K			!loop counters
	INTEGER*4	LEN			!number of characters read
	INTEGER*4	NOCHAR			!length of prompt and default
	INTEGER*4	ERROR			!system error code
	BYTE		ICH			!single character
C
C	Functions:
	INTEGER*4	SIGCHS			!gets number of significant chs.
	INTEGER		TTRSTR			!read response from terminal
	INTEGER		EXPAND			!expand into EXPBUF
	INTEGER		RDDBLE			!read REAL*8
	INTEGER		RDLONG			!read INTEGER*4
	INTEGER		RDCHS			!read single character
	CHARACTER*80	BLANK			!blank characters
	DATA		(BLANK(I:I),I=1,80)/80*' '/
C
C----------------------------------------------------------------------
C----------------------------------------------------------------------
C	Set up prompt, and default
C
100	J = DTIPROJ_SPHEROID(IN_LUN)
	NOCHAR = EXPAND('Enter spheroid code (%^L%N): ',J)
C
C	Read response
C
	ASK_SPHEROID=TTRSTR(,LEN,EXPDSC,ERROR)
	IF (.NOT.ASK_SPHEROID) THEN		!error
	  IF (ASK_SPHEROID.NE.LSL__EOF) THEN
	     CALL LSL_PUTMSG(ERROR)
C
	  ELSE
	     ASK_SPHEROID=DTRANS__EOF
	     CALL LSL_PUTMSG(ASK_SPHEROID)
	  ENDIF
C
	  GOTO 999
	ENDIF
C
	IF (LEN.EQ.0) GOTO 205			!take default
C
C----------------------------------------------------------------------
C	Decode the response
C
	CALL BSLN
C
	IF (RDCHS(ICH)) GOTO 100		!reprompt
C
C----------------------------------------------------------------------
C 	If ? then list all available speheroids in pairs
C
	IF (ICH.EQ.'?') THEN
	  CALL WRITEF(' ')	
	  CALL WRITEF('Allowable spheroids and their codes are:-')
	  CALL WRITEF(' ')
	  DO 200, I=1,MD2_NOSPH/2
	     J=I*2-1
	     CALL WRITEF
     &       ('%^L%I3 %S  %I3 %S',MD2_SPHCD(J),  MD2_SPH(J),
     &				  MD2_SPHCD(J+1),MD2_SPH(J+1))
200	  CONTINUE
C
C 	And any odd one.....
	  IF (MOD(MD2_NOSPH,2).NE.0) CALL WRITEF
     &       ('%^L%I3 %S', MD2_SPHCD(MD2_NOSPH),MD2_SPH(MD2_NOSPH))
C
	  GOTO 100
	ENDIF
C
C----------------------------------------------------------------------
C	Read a spheroid value
C
	CALL BSCH
C
	IF (RDLONG(J)) THEN
	   CALL LSL_PUTMSG(ERRNUM)
	   GOTO 100
	ENDIF
C
C----------------------------------------------------------------------
C 	Check if the spheroid code is valid
C
205	DO 210, I=1,MD2_NOSPH
	   IF (J.EQ.MD2_SPHCD(I)) GOTO 220
210	CONTINUE
C
C 	Invalid spheroid code
C
	CALL LSL_PUTMSG(DTRANS__BADSPHCODE,J)
	GOTO 100			!reprompt
C
C----------------------------------------------------------------------
C
220	DTIPROJ_SPHEROID(DTILUN)=J
	SPHEROID_INDEX=I
C
	CALL WRITEF('%S(%S)',BLANK(1:NOCHAR),
     &	            MD2_SPH(SPHEROID_INDEX)
     &              (1:SIGCHS(MD2_SPH(SPHEROID_INDEX))))
	CALL WRITEF(' ')
C
C----------------------------------------------------------------------
C 	Ask for spheroid constants if user definable spheroid
C
	IF (DTIPROJ_SPHEROID(DTILUN).NE.MD2_SPHCD(MD2_NOSPH)) GOTO 900
C
C	Set up defaults
C
	X=DTIPROJ_USER_SPHEROID(1,DTILUN)
	Y=DTIPROJ_USER_SPHEROID(2,DTILUN)
C
	CALL WRITEF(' ')
250	CALL EXPAND('Define elements of spheroid (%^D%F0.3, %F0.3): ',
     &	             X,Y)
	ASK_SPHEROID=TTRSTR(,LEN,EXPDSC,ERROR)
C
	IF (.NOT.ASK_SPHEROID) THEN			!  error
	  IF (ASK_SPHEROID.NE.LSL__EOF)THEN
	     CALL LSL_PUTMSG(ERROR)
C
	  ELSE
	     ASK_SPHEROID=DTRANS__EOF
	     CALL LSL_PUTMSG(ASK_SPHEROID)
	  ENDIF
C
	  GOTO 999
	ENDIF
C
	IF(LEN.EQ.0)GOTO 300				! take default
C
C----------------------------------------------------------------------
C	Read a spheroid value
C
	CALL BSCH
C
	IF (RDCHS(ICH)) GOTO 300
C
C 	Check for ?
C
	IF (ICH.EQ.'?') THEN
	   CALL WRITEF('Enter two real numbers, the first of '//
     &	               'which is the semi-major axis')
	   CALL WRITEF('The second is one of 1) 0.0 for a sphere')
	   CALL WRITEF('                     2) The semi-minor axis')
	   CALL WRITEF('                     3) Eccentricity '//
     &	                                        'squared')
	   GOTO  250		!reprompt
	ENDIF
C
C----------------------------------------------------------------------
C	Read the spheroid values
C
	CALL BSCH
C
	IF(RDDBLE(X))THEN
	  CALL LSL_PUTMSG(ERRNUM)
	  GOTO  250
	ENDIF	

	IF (.NOT.RDDBLE(Y)) GOTO 300 
C
C 	check for end of line
C
	IF (.NOT.RDCHS(ICH)) GOTO 250
C
260	CALL EXPAND('Second element (%^D%F0.3): ',
     &               DTIPROJ_USER_SPHEROID(2,DTILUN))
C
	ASK_SPHEROID=TTRSTR(,LEN,EXPDSC,ERROR)
	IF(.NOT.ASK_SPHEROID)THEN
	  IF (ASK_SPHEROID.NE.LSL__EOF) THEN
	    CALL LSL_PUTMSG(ERROR)
C
	  ELSE
	    ASK_SPHEROID=DTRANS__EOF
	    CALL LSL_PUTMSG(ASK_SPHEROID)
	  ENDIF
C
	  GOTO 999
	ENDIF
C
	IF(LEN.EQ.0)GOTO 300			! take default
C
	CALL BSLN
C
	IF(RDDBLE(Y))THEN
	   CALL LSL_PUTMSG(ERRNUM)
	   GOTO 260
	ENDIF
C
C----------------------------------------------------------------------
C 	Check for impossible value
C
300	IF (X.LE.0.0) THEN
	   CALL LSL_PUTMSG(DTRANS__INVALRVAL,X)
	   GOTO 250
C
	ELSEIF (Y.LT.0.0) THEN
	   CALL LSL_PUTMSG(DTRANS__INVALRVAL,Y)
	   GOTO 250
	ENDIF
C
C----------------------------------------------------------------------
C	Transfer values to DTIPROJ common block
C
	DTIPROJ_USER_SPHEROID(1,DTILUN)=X
	DTIPROJ_USER_SPHEROID(2,DTILUN)=Y
C
C----------------------------------------------------------------------
C	Signal success
C
900	ASK_SPHEROID=DTRANS__NORMAL
C
C----------------------------------------------------------------------
C
999	RETURN
	END
C
