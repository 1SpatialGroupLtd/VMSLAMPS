C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1991-07-18 19:44:52.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
        LOGICAL FUNCTION ASK4PT(NPTS,CPTS,COEF,FORWARD)
C
***	MODULE ASK4PT
***	IDENT 18JL91
C
C Copyright Laser-Scan Laboratories Ltd.,Cambridge,England
C 
C Author    	Ron Russell	  (for ITRANS)		 9-Dec-1985
C
C Modified  	Catherine Biggs   (for DTITRANS)	 4-Jul-1990
C
C MOD993	Jon Barber				29-Apr-1991
C	Use EXTENDED_4PT_LS instead of CPSET
C
C       This subroutine works out transformation from mms to projection
C	units
C
	IMPLICIT NONE
C
	INCLUDE '($SSDEF)'
C
***	PARAMETER/HERE:DTITRANSMSG/
***	PARAMETER/LSL$CMNLSL:LSLLIBMSG/
***	PARAMETER/LSL$CMNLSL:RDYES/
C
***	COMMON   /LSL$CMNLSL:CLD/
***	COMMON   /HERE:DTITRANS/
C
C arguments
	INTEGER		NPTS
	REAL		CPTS(4,NPTS)	! input coefficients
	REAL*8		COEF(4,2)	! output matrix
	LOGICAL		FORWARD		! true if forward transformation
C
C w/s
C
	INTEGER*4	I,J		! counters
	LOGICAL		YESNO
	REAL		XMAX,YMAX	! maximum residuals (target
					! units)
	REAL		XRMS,YRMS	! RMS residuals (target units)
	REAL		XERR,YERR	! allowable X and Y error
	REAL		RESID(2,MAXPOINTS) ! residuals (target space)
	REAL*8		GCPCOEF(3,2)	! coefficients for GENTRN
	REAL*8		COEF2P(4)	! coefficients for RWR2PT
	REAL*8		CPCOEF(4,2)	! coefficients for DM4PT
C	COMMON	/CPCOM/ CPCOEF
C
C functions
C
	LOGICAL		EXTENDED_4PT_LS
	LOGICAL		GENTRN
C	LOGICAL		CPSET
	LOGICAL		RWR2PT
	LOGICAL		PROJ4PT
	LOGICAL		RDYES
C
C compute allowable errors
C
	XERR=ABS(MAX(CPTS(3,4)-CPTS(3,1),CPTS(3,3)-CPTS(3,2)))/1000
	YERR=ABS(MAX(CPTS(4,1)-CPTS(4,2),CPTS(4,4)-CPTS(4,3)))/1000
	XMAX = 0.0
	YMAX = 0.0
C
C compute transformation parameters and check that they are OK 
C
	IF (THREE) THEN
	   IF (GENTRN(NPTS,CPTS,GCPCOEF,RESID,XMAX,YMAX,XRMS,YRMS)) THEN
	      CALL LSL_PUTMSG(DTRANS__BADCPTS)
	      ASK4PT=DTRANS__BADCPTS
	      GOTO 999
	   ELSE
	      DO 10, I=1,3
	         DO 10, J=1,2
	            COEF(I,J)=GCPCOEF(I,J)
	         CONTINUE
  10	      CONTINUE
	      COEF(4,1)=0.0			! no x*y term
	      COEF(4,2)=0.0
	   ENDIF
	ELSEIF (FOUR) THEN
C
	   IF (EXTENDED_4PT_LS(NPTS, CPTS, CPCOEF,
     &				  RESID, XMAX, YMAX, XRMS, YRMS)) THEN
	      CALL LSL_PUTMSG(DTRANS__BADCPTS)
	      ASK4PT=DTRANS__BADCPTS
	      GOTO 999
	   ENDIF
C
	   DO 20, I=1,4
	      DO 20, J=1,2
	         COEF(I,J)=CPCOEF(I,J)
	      CONTINUE
20	   CONTINUE
C
C
C	   IF (CPSET(CPTS)) THEN
C	      CALL LSL_PUTMSG(DTRANS__BADCPTS)
C	      ASK4PT=DTRANS__BADCPTS
C	      GOTO 999
C	   ELSE
C	      DO 20, I=1,4
C	         DO 20, J=1,2
C	            COEF(I,J)=CPCOEF(I,J)
C	         CONTINUE
C20	      CONTINUE
C	   ENDIF
C
	ELSEIF (PROJECTIVE) THEN		! for projective use
	   IF (PROJ4PT(CPTS,CPCOEF)) THEN	! COEFFS IN CPCOM
	      CALL LSL_PUTMSG(DTRANS__BADCPTS)
	      ASK4PT=DTRANS__BADCPTS
	      GOTO 999
	   ELSE
	      DO 30, I=1,4
	         DO 30, J=1,2
	            COEF(I,J)=CPCOEF(I,J)
	         CONTINUE
  30	      CONTINUE
	   ENDIF
	ELSE				! TWO
	   IF (RWR2PT(NPTS,CPTS,COEF2P,RESID,XMAX,YMAX,XRMS,YRMS)) THEN
	      CALL LSL_PUTMSG(DTRANS__BADCPTS)
	      ASK4PT=DTRANS__BADCPTS
	      GOTO 999
	   ELSE
	      COEF(1,1)=COEF2P(1)	! a0+a1x-a2y
	      COEF(2,1)=COEF2P(2)	! b1+a2x+a1y
	      COEF(3,1)=-COEF2P(3)
	      COEF(4,1)=0.0
	      COEF(1,2)=COEF2P(4)
	      COEF(2,2)=COEF2P(3)
	      COEF(3,2)=COEF2P(2)
	      COEF(4,2)=0.0
	   ENDIF
	ENDIF
C
C check for residuals (if any)
C
	IF (XMAX.GT.XERR.OR.YMAX.GT.YERR) THEN
	   IF (FORWARD) THEN
	      CALL LSL_PUTMSG(DTRANS__ERRCPTS,'forward',XMAX,YMAX,'output')
	   ELSE
	      CALL LSL_PUTMSG(DTRANS__ERRCPTS,'backward',XMAX,YMAX,'input')
	   ENDIF
C
	   ASK4PT=RDYES('Do you wish to continue with these '//
     &	                     'residuals [N]',YESNO,ASSUME_NO,I)
C
	   IF (.NOT.ASK4PT) THEN
	      CALL LSL_PUTMSG(I)
	      ASK4PT = .FALSE.
	      GOTO 999
	   ELSEIF (.NOT.YESNO) THEN
	      ASK4PT = .FALSE.
	      GOTO 999
	   ENDIF
	ENDIF
C
C successful 
C
	ASK4PT=.TRUE.
C
999	RETURN
   	END
C
