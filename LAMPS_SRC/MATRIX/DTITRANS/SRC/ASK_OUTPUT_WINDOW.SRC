        INTEGER*4 FUNCTION ASK_OUTPUT_WINDOW()
C
***	MODULE	ASK_OUTPUT_WINDOW
***	IDENT	19JL91
C
C 	Copyright Laser-Scan Laboratories Ltd.,Cambridge,England
C 	Author  : D J Gugan
C	Created : 29 April 1988
C	Modified:
C
C	Function for DTITRANS to request the x and y coordinates
C	of the bottom left and top right corners of a window 
C	for the output file opened on SATMAP_LUN.
C	The values are written to the relevant variables in
C	DTIPROJ.
C
C----------------------------------------------------------------------
	IMPLICIT NONE
C
***	COMMON		/LSL$CMNLSL:EXCEPTION/
***	COMMON		/LSL$CMNLSL:EXPC/
***	PARAMETER	/LSL$CMNLSL:LSLLIBMSG/
C
***	COMMON		/LSL$CMNDTI:DTIPROJ/
***	COMMON		/LSL$CMNDTI:DTIHDR/
***	PARAMETER	/LSL$CMNDTI:DTIPAR/
C
***	COMMON		/HERE:DTITRANS/
***	PARAMETER	/HERE:DTITRANSMSG/
C
C Functions:
	INTEGER		EXPAND		!expands into EXPBUF
	INTEGER		TTRSTR		!read response from terminal
	INTEGER		RDDBLE		!read REAL*8
	INTEGER		RDCHS		!read a single character
C
C Locals:
	REAL*8		RNUMBER(4)	!4 real*8 values
	REAL*8		X_SIZE, Y_SIZE 	!window in real world coords
	INTEGER*4	I		!counter
	INTEGER*4	LEN		!number of characters read
	INTEGER*4	ERROR		!system error code
	BYTE		CH		!single character
C
	CHARACTER*80	STRNG
	INTEGER*4	STRNL
	CHARACTER*80	BLANK
	DATA		(BLANK(I:I),I=1,80)/80*' '/
C
	REAL*8		PI
	PARAMETER	(PI=3.14159265358979323846D0)
C
C----------------------------------------------------------------------
C----------------------------------------------------------------------
C Apply any shift to output origin
	DTIPROJ_ORIGIN(1,OUT_LUN)=DTIPROJ_ORIGIN(1,OUT_LUN)+X_SHIFT
	DTIPROJ_ORIGIN(2,OUT_LUN)=DTIPROJ_ORIGIN(2,OUT_LUN)+Y_SHIFT	
	X_OFFSET(OUT_LUN) = DTIPROJ_ORIGIN(1,OUT_LUN)
	Y_OFFSET(OUT_LUN) = DTIPROJ_ORIGIN(2,OUT_LUN)
C
	ABSOLUTE_SWX(OUT_LUN)=ABSOLUTE_SWX(OUT_LUN)+X_SHIFT
	ABSOLUTE_SWY(OUT_LUN)=ABSOLUTE_SWY(OUT_LUN)+Y_SHIFT
	ABSOLUTE_NEX(OUT_LUN)=ABSOLUTE_NEX(OUT_LUN)+X_SHIFT
	ABSOLUTE_NEY(OUT_LUN)=ABSOLUTE_NEY(OUT_LUN)+Y_SHIFT
C
C Is an output window required?
	IF (.NOT.HAD_WINDOW) GOTO 900
C
C----------------------------------------------------------------------
C	Set up default values.
C	These have been calculated by transforming the corners of the
C	input DTI file.
C
50	IF(DTIPROJ_PROJECTION(OUT_LUN).EQ.100)THEN
	  RNUMBER(1) = ABSOLUTE_SWY(OUT_LUN)
	  RNUMBER(2) = ABSOLUTE_SWX(OUT_LUN)
	  RNUMBER(3) = ABSOLUTE_NEY(OUT_LUN)
	  RNUMBER(4) = ABSOLUTE_NEX(OUT_LUN)
	ELSE
	  RNUMBER(1) = ABSOLUTE_SWX(OUT_LUN)
	  RNUMBER(2) = ABSOLUTE_SWY(OUT_LUN)
	  RNUMBER(3) = ABSOLUTE_NEX(OUT_LUN)
	  RNUMBER(4) = ABSOLUTE_NEY(OUT_LUN)
	ENDIF
C
C----------------------------------------------------------------------
C	Set up prompt
	CALL WRITEF(' ')
100	IF(DTIPROJ_PROJECTION(OUT_LUN).EQ.100)THEN
	  CALL EXPAND ('Define output window as Latitude Longitude '//
     &	        '(%^D%F0.3, %F0.3, %F0.3, %F0.3):',
     &          RNUMBER(1),
     &		RNUMBER(2),
     &          RNUMBER(3),
     &          RNUMBER(4))
	ELSE
	  CALL EXPAND ('Define output window as Eastings Northings '//
     &	        '(%^D%F0.3, %F0.3, %F0.3, %F0.3):',
     &          RNUMBER(1),
     &		RNUMBER(2),
     &          RNUMBER(3),
     &          RNUMBER(4))
	ENDIF
C
C-----------------------------------------------------------------------
C
	ASK_OUTPUT_WINDOW = TTRSTR(,LEN,EXPDSC,ERROR)
	IF(.NOT.ASK_OUTPUT_WINDOW) THEN			!  error
	  IF ( ASK_OUTPUT_WINDOW .NE. LSL__EOF ) THEN
	     CALL LSL_PUTMSG(ERROR)
	  ELSE
	     ASK_OUTPUT_WINDOW = DTRANS__EOF
	     CALL LSL_PUTMSG(ASK_OUTPUT_WINDOW)
	  ENDIF
	  GOTO 999
	ENDIF
C
	IF (LEN.EQ.0) GOTO 200		! accept current window
C
C----------------------------------------------------------------------
C	Decode the response
C
	CALL BSLN
C
	IF ( RDCHS(CH) ) THEN
	  CALL LSL_PUTMSG(DTRANS__UNEXPEOL)
	  GOTO 100
	ENDIF
C
C	Check for ?
C
	IF(CH.EQ.'?')THEN
  	  IF(DTIPROJ_PROJECTION(OUT_LUN).EQ.100) THEN
	  CALL WRITEF('Enter the Latitude and Longitude of the '//
     &	              'SW and NE corners as four real numbers')
	  ELSE
	  CALL WRITEF('Enter the Eastings and Northings of the '//
     &	   	      'SW and NE corners as four real numbers')
	  ENDIF
	  GOTO 100		!reprompt
	ENDIF
C
        CALL BSCH
C
C----------------------------------------------------------------------
C 	Read the first value.  This is the X value of the SW corner. If the 
C	projection system is geographicals, it is the
C	latitude or Y value.
C
	IF (RDDBLE(RNUMBER(1))) THEN
	   IF(ERRNUM.EQ.LSL__HADEXCP)THEN
	     CALL LSL_PUTMSG(LSL_EXCP)
	   ELSE
	     CALL LSL_PUTMSG(ERRNUM)
	   ENDIF
	   GOTO 100
	ENDIF	
C
C----------------------------------------------------------------------
C	Read the second value.  This is the Y value of the SW corner. If the
C	projection system is geographicals, it is the
C	longitude or X value
C
	IF (RDDBLE(RNUMBER(2))) THEN
	   IF(ERRNUM.EQ.LSL__HADEXCP)THEN
	     CALL LSL_PUTMSG(LSL_EXCP)
	   ELSE
	     CALL LSL_PUTMSG(ERRNUM)
	   ENDIF
	   GOTO 100
	ENDIF	
C
C----------------------------------------------------------------------
C 	Read the third value.  This is the X value of the NE corner. If the 
C	projection system is geographicals, it is the
C	latitude or Y value.
C
	IF (RDDBLE(RNUMBER(3))) THEN
	   IF(ERRNUM.EQ.LSL__HADEXCP)THEN
	     CALL LSL_PUTMSG(LSL_EXCP)
	   ELSE
	     CALL LSL_PUTMSG(ERRNUM)
	   ENDIF
	   GOTO 100
	ENDIF	
C
C----------------------------------------------------------------------
C	Read the fourth value.  This is the Y value of the NE corner. If the
C	projection system is geographicals, it is the
C	longitude or X value
C
	IF (RDDBLE(RNUMBER(4))) THEN
	   IF(ERRNUM.EQ.LSL__HADEXCP)THEN
	     CALL LSL_PUTMSG(LSL_EXCP)
	   ELSE
	     CALL LSL_PUTMSG(ERRNUM)
	   ENDIF
	   GOTO 100
	ENDIF	
C
C----------------------------------------------------------------------
C	Check for sensible Latlong values
	IF (DTIPROJ_PROJECTION(OUT_LUN).EQ.100)THEN
	   STRNL=0
	   IF     (DTIPROJ_UNITS(OUT_LUN).EQ.5
     &            .AND.ABS(RNUMBER(1)).GT.PI/2.0) THEN
	      STRNL=EXPAND('%WS%^D%F10.7',STRNG,RNUMBER(1))
	   ELSEIF (DTIPROJ_UNITS(OUT_LUN).EQ.3
     &            .AND.ABS(RNUMBER(1)).GT.324000.0) THEN
	      STRNL=EXPAND('%WS%^D%F10.3',STRNG,RNUMBER(1))
	   ELSEIF (DTIPROJ_UNITS(OUT_LUN).EQ.4
     &            .AND.ABS(RNUMBER(1)).GT.90) THEN
	      STRNL=EXPAND('%WS%^D%F8.3',STRNG,RNUMBER(1))
	   ELSEIF (DTIPROJ_UNITS(OUT_LUN).EQ.110
     &            .AND.ABS(RNUMBER(1)).GT.3240000.0) THEN
	      STRNL=EXPAND('%WS%^D%F10.2',STRNG,RNUMBER(1))
	   ENDIF	      
C
	   IF (STRNL.GT.0) THEN
	      CALL LSL_PUTMSG(DTRANS__ILLEGLAT,STRNG(1:STRNL))
	      CALL LSL_PUTMSG(DTRANS__REENTER)
	      GOTO 100
	   ENDIF
C
C 	And the longitude - in range -180 -> +180
C
	   STRNL=0
	   IF     (DTIPROJ_UNITS(OUT_LUN).EQ.5
     &            .AND.ABS(RNUMBER(2)).GT.PI) THEN
	      STRNL=EXPAND('%WS%^D%F10.7',STRNG,RNUMBER(2))
	   ELSEIF (DTIPROJ_UNITS(OUT_LUN).EQ.3
     &            .AND.ABS(RNUMBER(2)).GT.648000.0) THEN
	      STRNL=EXPAND('%WS%^D%F10.3',STRNG,RNUMBER(2))
	   ELSEIF (DTIPROJ_UNITS(OUT_LUN).EQ.4
     &            .AND.ABS(RNUMBER(2)).GT.180.0) THEN
	      STRNL=EXPAND('%WS%^D%F8.3',STRNG,RNUMBER(2))
	   ELSEIF (DTIPROJ_UNITS(OUT_LUN).EQ.110
     &            .AND.ABS(RNUMBER(2)).GT.6480000.0) THEN
	      STRNL=EXPAND('%WS%^D%F10.2',STRNG,RNUMBER(2))
	   ENDIF	      
C
	   IF (STRNL.GT.0) THEN
	      CALL LSL_PUTMSG(DTRANS__ILLEGLONG,STRNG(1:STRNL))
	      CALL LSL_PUTMSG(DTRANS__REENTER)
	      GOTO 100
	   ENDIF
C
	   STRNL=0
	   IF     (DTIPROJ_UNITS(OUT_LUN).EQ.5
     &            .AND.ABS(RNUMBER(3)).GT.PI/2.0) THEN
	      STRNL=EXPAND('%WS%^D%F10.7',STRNG,RNUMBER(1))
	   ELSEIF (DTIPROJ_UNITS(OUT_LUN).EQ.3
     &            .AND.ABS(RNUMBER(3)).GT.324000.0) THEN
	      STRNL=EXPAND('%WS%^D%F10.3',STRNG,RNUMBER(1))
	   ELSEIF (DTIPROJ_UNITS(OUT_LUN).EQ.4
     &            .AND.ABS(RNUMBER(3)).GT.90) THEN
	      STRNL=EXPAND('%WS%^D%F8.3',STRNG,RNUMBER(1))
	   ELSEIF (DTIPROJ_UNITS(OUT_LUN).EQ.110
     &            .AND.ABS(RNUMBER(3)).GT.3240000.0) THEN
	   ENDIF	      
C
	   IF (STRNL.GT.0) THEN
	      CALL LSL_PUTMSG(DTRANS__ILLEGLAT,STRNG(1:STRNL))
	      CALL LSL_PUTMSG(DTRANS__REENTER)
	      GOTO 100
	   ENDIF
C
C 	And the longitude - in range -180 -> +180
C
	   STRNL=0
	   IF     (DTIPROJ_UNITS(OUT_LUN).EQ.5
     &            .AND.ABS(RNUMBER(4)).GT.PI) THEN
	      STRNL=EXPAND('%WS%^D%F10.7',STRNG,RNUMBER(2))
	   ELSEIF (DTIPROJ_UNITS(OUT_LUN).EQ.3
     &            .AND.ABS(RNUMBER(4)).GT.648000.0) THEN
	      STRNL=EXPAND('%WS%^D%F10.3',STRNG,RNUMBER(2))
	   ELSEIF (DTIPROJ_UNITS(OUT_LUN).EQ.4
     &            .AND.ABS(RNUMBER(4)).GT.180.0) THEN
	      STRNL=EXPAND('%WS%^D%F8.3',STRNG,RNUMBER(2))
	   ELSEIF (DTIPROJ_UNITS(OUT_LUN).EQ.110
     &            .AND.ABS(RNUMBER(4)).GT.6480000.0) THEN
	      STRNL=EXPAND('%WS%^D%F10.2',STRNG,RNUMBER(2))
	   ENDIF	      
C
	   IF (STRNL.GT.0) THEN
	      CALL LSL_PUTMSG(DTRANS__ILLEGLONG,STRNG(1:STRNL))
	      CALL LSL_PUTMSG(DTRANS__REENTER)
	      GOTO 100
	   ENDIF
	ENDIF
C
C----------------------------------------------------------------------
C	Use the supplied values to calculate the new size of the
C	output matrix. (ie. translate into column and row values).
C
200	IF (DTIPROJ_PROJECTION(OUT_LUN).EQ.100)THEN
	   X_SIZE = RNUMBER(4)-RNUMBER(2)
	   Y_SIZE = RNUMBER(3)-RNUMBER(1)
	ELSE
	   X_SIZE = RNUMBER(3)-RNUMBER(1)
	   Y_SIZE = RNUMBER(4)-RNUMBER(2)
	ENDIF
C
	X_EXTENT(OUT_LUN) = 1 + INT(X_SIZE/DTIPROJ_SAMPLE(1,OUT_LUN))
	Y_EXTENT(OUT_LUN) = 1 + INT(Y_SIZE/DTIPROJ_SAMPLE(2,OUT_LUN))
C
C Add 1 for rounding down if response was not defaulted (LEN = 0)
C
	IF (LEN.NE.0) THEN
	   IF ( (X_EXTENT(OUT_LUN)-1)*DTIPROJ_SAMPLE(1,OUT_LUN) .LT.
     &		X_SIZE ) X_EXTENT(OUT_LUN) = X_EXTENT(OUT_LUN) + 1 
	   IF ( (Y_EXTENT(OUT_LUN)-1)*DTIPROJ_SAMPLE(2,OUT_LUN) .LT. 
     &		Y_SIZE ) Y_EXTENT(OUT_LUN) = Y_EXTENT(OUT_LUN) + 1 
	ENDIF
C
C Transfer values to window variables
	DTI_WINDOW_NEX(OUT_LUN)=X_EXTENT(OUT_LUN)
	DTI_WINDOW_NEY(OUT_LUN)=Y_EXTENT(OUT_LUN)
C
	IF (DTIPROJ_PROJECTION(OUT_LUN).EQ.100)THEN
          ABSOLUTE_SWX(OUT_LUN) = RNUMBER(2)
	  ABSOLUTE_SWY(OUT_LUN) = RNUMBER(1)
	  ABSOLUTE_NEX(OUT_LUN) = RNUMBER(4)
	  ABSOLUTE_NEY(OUT_LUN) = RNUMBER(3)
	ELSE
          ABSOLUTE_SWX(OUT_LUN) = RNUMBER(1)
	  ABSOLUTE_SWY(OUT_LUN) = RNUMBER(2)
	  ABSOLUTE_NEX(OUT_LUN) = RNUMBER(3)
	  ABSOLUTE_NEY(OUT_LUN) = RNUMBER(4)
	ENDIF
C
C Set new origin of output file
	DTIPROJ_ORIGIN(1,OUT_LUN)=ABSOLUTE_SWX(OUT_LUN)
	DTIPROJ_ORIGIN(2,OUT_LUN)=ABSOLUTE_SWY(OUT_LUN)
	X_OFFSET(OUT_LUN) = DTIPROJ_ORIGIN(1,OUT_LUN)
	Y_OFFSET(OUT_LUN) = DTIPROJ_ORIGIN(2,OUT_LUN)
C
C----------------------------------------------------------------------
C Ensure Y dimension is multiple of 8 for BIT files
C
900	CONTINUE
C
	DATA_TYPE(OUT_LUN) = DATA_TYPE(IN_LUN)
C	IF (DATA_TYPE(OUT_LUN) .EQ. DATA_BIT) THEN
C	   I = MOD(Y_EXTENT(OUT_LUN),8)
C	   IF (I.NE.0) THEN
C	      Y_EXTENT(OUT_LUN) = Y_EXTENT(OUT_LUN) + 8-I
C	      DTI_WINDOW_NEY(OUT_LUN)=Y_EXTENT(OUT_LUN)
C	   ENDIF
C	ENDIF
C
C Signal success
	ASK_OUTPUT_WINDOW = DTRANS__NORMAL
C
C----------------------------------------------------------------------
C
999	RETURN
	END
C
