C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1991-05-14 17:27:36.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
        INTEGER*4 FUNCTION ASK_INPUT_WINDOW()
C
***	MODULE	ASK_INPUT_WINDOW
***	IDENT	14MY91
C
C 	Copyright Laser-Scan Laboratories Ltd.,Cambridge,England
C 	Author  : D J Gugan
C	Created : 26 April 1988
C	Modified:
C
C	Function for DTITRANS to request the x and y coordinates
C	of the bottom left and top right corners of a window 
C	for the file opened on IN_LUN.
C	The values are written to the relevant variables in
C	DTIPROJ.
C
C----------------------------------------------------------------------
	IMPLICIT NONE
C
***	COMMON		/LSL$CMNLSL:EXCEPTION/
***	COMMON		/LSL$CMNLSL:EXPC/
***	PARAMETER	/LSL$CMNLSL:LSLLIBMSG/
C
***	COMMON		/LSL$CMNDTI:DTIPROJ/
***	COMMON		/LSL$CMNDTI:DTIHDR/
C
***	COMMON		/HERE:DTITRANS/
***	PARAMETER	/HERE:DTITRANSMSG/
C
C
C	Locals:
	REAL*8		RNUMBER(4)	!4 real*8 values
	INTEGER*4	LEN		!number of characters read
	INTEGER*4	ERROR		!system error code
	INTEGER*4	I		!counter
	BYTE		CH		!single character
C
C	Functions:
	INTEGER		EXPAND		!expands into EXPBUF
	INTEGER		TTRSTR		!read response from terminal
	INTEGER		RDDBLE		!read REAL*8
	INTEGER		RDCHS		!read a single character
C
	CHARACTER*80	STRNG
	INTEGER*4	STRNL
	CHARACTER*80	BLANK
	DATA		(BLANK(I:I),I=1,80)/80*' '/
C
	REAL*8		PI
	PARAMETER	(PI=3.14159265358979323846D0)
C
C----------------------------------------------------------------------
C----------------------------------------------------------------------
C	Set up default values - if IMAGEMAP (i.e. input is a satellite
C	image), give the matrix size; if not, give the size in the input
C	projection units
C
50	IF (IMAGEMAP) THEN
	   RNUMBER(1) = 1
	   RNUMBER(2) = 1
	   RNUMBER(3) = X_EXTENT(IN_LUN)
	   RNUMBER(4) = Y_EXTENT(IN_LUN)
	ELSE
           IF(DTIPROJ_PROJECTION(IN_LUN).EQ.100)THEN
	     RNUMBER(1) = DTIPROJ_ORIGIN(2,IN_LUN)
	     RNUMBER(2) = DTIPROJ_ORIGIN(1,IN_LUN)
	     RNUMBER(3) = DTIPROJ_ORIGIN(2,IN_LUN) +
     &	               (DTIPROJ_SAMPLE(2,IN_LUN)*(Y_EXTENT(IN_LUN)-1))
	     RNUMBER(4) = DTIPROJ_ORIGIN(1,IN_LUN) +
     &	               (DTIPROJ_SAMPLE(1,IN_LUN)*(X_EXTENT(IN_LUN)-1))
	   ELSE
	     RNUMBER(1) = DTIPROJ_ORIGIN(1,IN_LUN)
	     RNUMBER(2) = DTIPROJ_ORIGIN(2,IN_LUN)
	     RNUMBER(3) = DTIPROJ_ORIGIN(1,IN_LUN) +
     &	               (DTIPROJ_SAMPLE(1,IN_LUN)*(X_EXTENT(IN_LUN)-1))
	     RNUMBER(4) = DTIPROJ_ORIGIN(2,IN_LUN) +
     &	               (DTIPROJ_SAMPLE(2,IN_LUN)*(Y_EXTENT(IN_LUN)-1))
	   ENDIF
	ENDIF
C
C----------------------------------------------------------------------
C	Is an input window required?
	IF (.NOT.HAD_WINDOW) GOTO 200
C
C----------------------------------------------------------------------
C	Set up prompt
	CALL WRITEF(' ')
100	IF(IMAGEMAP)THEN
	  CALL EXPAND ('Define input window as Columns Rows '//
     &	        '(%N,%N,%N,%N):',
     &          INT(RNUMBER(1)),
     &		INT(RNUMBER(2)),
     &          INT(RNUMBER(3)),
     &          INT(RNUMBER(4)))
	ELSE
	  IF(DTIPROJ_PROJECTION(IN_LUN).EQ.100)THEN
	    CALL EXPAND ('Define input window as Latitude Longitude '//
     &	        '(%^D%F0.3, %F0.3, %F0.3, %F0.3):',
     &          RNUMBER(1),
     &		RNUMBER(2),
     &          RNUMBER(3),
     &          RNUMBER(4))
	  ELSE
	    CALL EXPAND ('Define input window as Eastings Northings '//
     &	        '(%^D%F0.3, %F0.3, %F0.3, %F0.3):',
     &          RNUMBER(1),
     &		RNUMBER(2),
     &          RNUMBER(3),
     &          RNUMBER(4))
	  ENDIF
	ENDIF
C
C----------------------------------------------------------------------
C
	ASK_INPUT_WINDOW = TTRSTR(,LEN,EXPDSC,ERROR)
	IF(.NOT.ASK_INPUT_WINDOW) THEN			!  error
	  IF ( ASK_INPUT_WINDOW .NE. LSL__EOF ) THEN
	     CALL LSL_PUTMSG(ERROR)
	  ELSE
	     ASK_INPUT_WINDOW = DTRANS__EOF
	     CALL LSL_PUTMSG(ASK_INPUT_WINDOW)
	  ENDIF
	  GOTO 999
	ENDIF
C
	IF (LEN.EQ.0) GOTO 200			! accept current win
C
C----------------------------------------------------------------------
C	Decode the response
C
	CALL BSLN
C
	IF ( RDCHS(CH) ) THEN
	  CALL LSL_PUTMSG(DTRANS__UNEXPEOL)
	  GOTO 100
	ENDIF
C
C	Check for ?
C
	IF(CH.EQ.'?')THEN
	  IF (IMAGEMAP) THEN
	    CALL WRITEF('Enter the SW and NE corner '//
     &	                     'values as four real numbers')
	  ELSE
  	     IF(DTIPROJ_PROJECTION(IN_LUN).EQ.100) THEN
	       CALL WRITEF('Enter the Latitude and Longitude of the '//
     &	                   'SW and NE corners as four real numbers')
	     ELSE
	       CALL WRITEF('Enter the Eastings and Northings of the '//
     &			   'SW and NE corners as four real numbers')
	     ENDIF
	  ENDIF
	  GOTO 100		!reprompt
	ENDIF
C
        CALL BSCH
C
C----------------------------------------------------------------------
C 	Read the first value.  This is the X value of the SW corner. If the 
C	projection system is geographicals, it is the
C	latitude or Y value.
C
	IF (RDDBLE(RNUMBER(1))) THEN
	   IF(ERRNUM.EQ.LSL__HADEXCP)THEN
	     CALL LSL_PUTMSG(LSL_EXCP)
	   ELSE
	     CALL LSL_PUTMSG(ERRNUM)
	   ENDIF
	   GOTO 100
	ENDIF	
C
C----------------------------------------------------------------------
C	Read the second value.  This is the Y value of the SW corner. If the
C	projection system is geographicals, it is the
C	longitude or X value
C
	IF (RDDBLE(RNUMBER(2))) THEN
	   IF(ERRNUM.EQ.LSL__HADEXCP)THEN
	     CALL LSL_PUTMSG(LSL_EXCP)
	   ELSE
	     CALL LSL_PUTMSG(ERRNUM)
	   ENDIF
	   GOTO 100
	ENDIF	
C
C----------------------------------------------------------------------
C 	Read the third value.  This is the X value of the NE corner. If the 
C	projection system is geographicals, it is the
C	latitude or Y value.
C
	IF (RDDBLE(RNUMBER(3))) THEN
	   IF(ERRNUM.EQ.LSL__HADEXCP)THEN
	     CALL LSL_PUTMSG(LSL_EXCP)
	   ELSE
	     CALL LSL_PUTMSG(ERRNUM)
	   ENDIF
	   GOTO 100
	ENDIF	
C
C----------------------------------------------------------------------
C	Read the fourth value.  This is the Y value of the NE corner. If the
C	projection system is geographicals, it is the
C	longitude or X value
C
	IF (RDDBLE(RNUMBER(4))) THEN
	   IF(ERRNUM.EQ.LSL__HADEXCP)THEN
	     CALL LSL_PUTMSG(LSL_EXCP)
	   ELSE
	     CALL LSL_PUTMSG(ERRNUM)
	   ENDIF
	   GOTO 100
	ENDIF	
C
C----------------------------------------------------------------------
C	Check for sensible Latlong values
	IF (DTIPROJ_PROJECTION(IN_LUN).EQ.100)THEN
	   STRNL=0
	   IF     (DTIPROJ_UNITS(IN_LUN).EQ.5
     &            .AND.ABS(RNUMBER(1)).GT.PI/2.0) THEN
	      STRNL=EXPAND('%WS%^D%F10.7',STRNG,RNUMBER(1))
	   ELSEIF (DTIPROJ_UNITS(IN_LUN).EQ.3
     &            .AND.ABS(RNUMBER(1)).GT.324000.0) THEN
	      STRNL=EXPAND('%WS%^D%F10.3',STRNG,RNUMBER(1))
	   ELSEIF (DTIPROJ_UNITS(IN_LUN).EQ.4
     &            .AND.ABS(RNUMBER(1)).GT.90) THEN
	      STRNL=EXPAND('%WS%^D%F8.3',STRNG,RNUMBER(1))
	   ELSEIF (DTIPROJ_UNITS(IN_LUN).EQ.110
     &            .AND.ABS(RNUMBER(1)).GT.3240000.0) THEN
	      STRNL=EXPAND('%WS%^D%F10.2',STRNG,RNUMBER(1))
	   ENDIF	      
C
	   IF (STRNL.GT.0) THEN
	      CALL LSL_PUTMSG(DTRANS__ILLEGLAT,STRNG(1:STRNL))
	      CALL LSL_PUTMSG(DTRANS__REENTER)
	      GOTO 100
	   ENDIF
C
C 	And the longitude - in range -180 -> +180
C
	   STRNL=0
	   IF     (DTIPROJ_UNITS(IN_LUN).EQ.5
     &            .AND.ABS(RNUMBER(2)).GT.PI) THEN
	      STRNL=EXPAND('%WS%^D%F10.7',STRNG,RNUMBER(2))
	   ELSEIF (DTIPROJ_UNITS(IN_LUN).EQ.3
     &            .AND.ABS(RNUMBER(2)).GT.648000.0) THEN
	      STRNL=EXPAND('%WS%^D%F10.3',STRNG,RNUMBER(2))
	   ELSEIF (DTIPROJ_UNITS(IN_LUN).EQ.4
     &            .AND.ABS(RNUMBER(2)).GT.180.0) THEN
	      STRNL=EXPAND('%WS%^D%F8.3',STRNG,RNUMBER(2))
	   ELSEIF (DTIPROJ_UNITS(IN_LUN).EQ.110
     &            .AND.ABS(RNUMBER(2)).GT.6480000.0) THEN
	      STRNL=EXPAND('%WS%^D%F10.2',STRNG,RNUMBER(2))
	   ENDIF	      
C
	   IF (STRNL.GT.0) THEN
	      CALL LSL_PUTMSG(DTRANS__ILLEGLONG,STRNG(1:STRNL))
	      CALL LSL_PUTMSG(DTRANS__REENTER)
	      GOTO 100
	   ENDIF
C
	   STRNL=0
	   IF     (DTIPROJ_UNITS(IN_LUN).EQ.5
     &            .AND.ABS(RNUMBER(1)).GT.PI/2.0) THEN
	      STRNL=EXPAND('%WS%^D%F10.7',STRNG,RNUMBER(1))
	   ELSEIF (DTIPROJ_UNITS(IN_LUN).EQ.3
     &            .AND.ABS(RNUMBER(1)).GT.324000.0) THEN
	      STRNL=EXPAND('%WS%^D%F10.3',STRNG,RNUMBER(1))
	   ELSEIF (DTIPROJ_UNITS(IN_LUN).EQ.4
     &            .AND.ABS(RNUMBER(1)).GT.90) THEN
	      STRNL=EXPAND('%WS%^D%F8.3',STRNG,RNUMBER(1))
	   ELSEIF (DTIPROJ_UNITS(IN_LUN).EQ.110
     &            .AND.ABS(RNUMBER(1)).GT.3240000.0) THEN
	      STRNL=EXPAND('%WS%^D%F10.2',STRNG,RNUMBER(1))
	   ENDIF	      
C
	   IF (STRNL.GT.0) THEN
	      CALL LSL_PUTMSG(DTRANS__ILLEGLAT,STRNG(1:STRNL))
	      CALL LSL_PUTMSG(DTRANS__REENTER)
	      GOTO 100
	   ENDIF
C
C 	And the longitude - in range -180 -> +180
C
	   STRNL=0
	   IF     (DTIPROJ_UNITS(IN_LUN).EQ.5
     &            .AND.ABS(RNUMBER(2)).GT.PI) THEN
	      STRNL=EXPAND('%WS%^D%F10.7',STRNG,RNUMBER(2))
	   ELSEIF (DTIPROJ_UNITS(IN_LUN).EQ.3
     &            .AND.ABS(RNUMBER(2)).GT.648000.0) THEN
	      STRNL=EXPAND('%WS%^D%F10.3',STRNG,RNUMBER(2))
	   ELSEIF (DTIPROJ_UNITS(IN_LUN).EQ.4
     &            .AND.ABS(RNUMBER(2)).GT.180.0) THEN
	      STRNL=EXPAND('%WS%^D%F8.3',STRNG,RNUMBER(2))
	   ELSEIF (DTIPROJ_UNITS(IN_LUN).EQ.110
     &            .AND.ABS(RNUMBER(2)).GT.6480000.0) THEN
	      STRNL=EXPAND('%WS%^D%F10.2',STRNG,RNUMBER(2))
	   ENDIF	      
C
	   IF (STRNL.GT.0) THEN
	      CALL LSL_PUTMSG(DTRANS__ILLEGLONG,STRNG(1:STRNL))
	      CALL LSL_PUTMSG(DTRANS__REENTER)
	      GOTO 100
	   ENDIF
	ENDIF
C
C----------------------------------------------------------------------
C	Transfer values to window variables
C	If Geographicals swap the X and Y values around
C
200	IF (DTIPROJ_PROJECTION(IN_LUN).EQ.100) THEN
	  ABSOLUTE_SWX(IN_LUN) = RNUMBER(2)
	  ABSOLUTE_SWY(IN_LUN) = RNUMBER(1)
	  ABSOLUTE_NEX(IN_LUN) = RNUMBER(4)
	  ABSOLUTE_NEY(IN_LUN) = RNUMBER(3)
	ELSEIF (IMAGEMAP)THEN
	  ABSOLUTE_SWX(IN_LUN) = RNUMBER(1)-1
	  ABSOLUTE_SWY(IN_LUN) = RNUMBER(2)-1
	  ABSOLUTE_NEX(IN_LUN) = RNUMBER(3)-1
	  ABSOLUTE_NEY(IN_LUN) = RNUMBER(4)-1
	ELSE
	  ABSOLUTE_SWX(IN_LUN) = RNUMBER(1)
	  ABSOLUTE_SWY(IN_LUN) = RNUMBER(2)
	  ABSOLUTE_NEX(IN_LUN) = RNUMBER(3)
	  ABSOLUTE_NEY(IN_LUN) = RNUMBER(4)
	ENDIF
C
C----------------------------------------------------------------------
C	Signal success
900	ASK_INPUT_WINDOW = DTRANS__NORMAL
C
C----------------------------------------------------------------------
C
999	RETURN
	END
C
