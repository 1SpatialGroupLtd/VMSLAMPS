C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1987-10-06 09:52:32.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL FUNCTION DBLQU(VAL,PROMPT,FORMAT)
C
***	MODULE DBLQU
***	IDENT 26MR86
C
C Copyright Laser-Scan Laboratories Ltd.,Cambridge,England
C 
C Author    Ron Russell				17-Dec-1985
C
C       This subroutine gets a r*8 value from terminal
C
	IMPLICIT NONE
C
C argument
C
	REAL*8		VAL		! input and output
	CHARACTER*(*)	PROMPT		! input
	INTEGER*4	FORMAT		! = 1 for scale format
					! = not 1, for coordinate format
C
***	PARAMETER/LSL$CMNLSL:LSLLIBMSG/
***	PARAMETER/HERE:DTITRANSMSG/
C
***	COMMON/LSL$CMNLSL:EXCEPTION/
***	COMMON/LSL$CMNLSL:EXPC/
C
	INTEGER*4	LEN
	INTEGER*4	IERR
	REAL*8		X
	BYTE		ICH
C
	INTEGER		TTRSTR
	INTEGER		RDDBLE
	INTEGER		RDCHS
C
	X=VAL					! set up default
C
   10	CONTINUE
	IF (FORMAT.NE.1) THEN		
	   CALL EXPAND('   %S (%^D%F0.3): ',PROMPT,VAL)
	ELSE
	   CALL EXPAND('   %S (%^D%F0.9): ',PROMPT,VAL)
	ENDIF
C
	DBLQU=TTRSTR(,LEN,EXPDSC,IERR)
	IF (.NOT.DBLQU) THEN			! error
	  IF (DBLQU.NE.LSL__EOF) THEN		! must be LSL__SYSERR
	      DBLQU=IERR
	      CALL LSL_PUTMSG(IERR)
	   ELSE
	      DBLQU=DTRANS__EOF
	   ENDIF
	   GOTO 999
	ELSEIF (LEN.EQ.0) THEN			! take default
	   GOTO 20
	ENDIF
C
	CALL BSLN
C
C read a value
C
	IF (RDDBLE(X)) THEN
	   IF (ERRNUM.EQ.LSL__HADEXCP) THEN
	      CALL LSL_PUTMSG(LSL_EXCP)
	   ELSE
	      CALL LSL_PUTMSG(ERRNUM)
	   ENDIF
	   GOTO 10
	ENDIF	
C
C check for end of line
C
	IF (.NOT.RDCHS(ICH)) THEN
	   CALL LSL_PUTMSG(DTRANS__UNEXPCH,ICH)
	   GOTO 10
	ENDIF
C
   20	VAL=X
C
  999	RETURN
	END
