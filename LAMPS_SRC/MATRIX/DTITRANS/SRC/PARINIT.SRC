C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1996-02-29 17:40:16.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE PARINIT(SYS,ZONE,PAR,UNIT,DTILUN)
C
***	MODULE PARINIT
***	IDENT 29FE96
C
C Copyright Laser-Scan Ltd.,Cambridge,England
C 
C Author    Ron Russell						19-Dec-1985
C Modified  Dave Catlow                         		19-Jul-1988
C	    from ITRANS version for use with DTITRANS
C
CMOD make sure SPHD$0 always sets the parameters by passing
C    them as 0.0					RWR 	23-Mar-1993
C
CMOD1533 Change any occurrence of SPHD$0 to SPHD, 	 JB	29-Feb-1996
C	 and remove any $0 from module names for
C	 GOTHIC versions of GCTPLIB
C
C       This subroutine initialises arguments for call of GTRN($0)
C
	IMPLICIT NONE
C
***	COMMON/LSL$CMNDTI:DTIPROJ/
***	COMMON/LSL$CMNIFF:MD2NAM/
***	COMMON/HERE:DTITRANS/
C
C arguments (output)
C
	INTEGER*4	SYS		! projection system
	INTEGER*4	ZONE		! projection zone
	REAL*8		PAR(15)		! projection parameters
	INTEGER*4	UNIT		! units to work in
C
C (input)
C
	INTEGER*4	DTILUN		! which DTI file.
C					! ie. whether the input or
C					! output file.
C
	INTEGER*4	I		! loop counters
	INTEGER*4	PROJ_INDEX
C
	REAL*8		DUMM(2)
	REAL*8		A$,E$,ES$,E0$,E1$,E2$,E3$
C
C common blocks for GCTP
C
	COMMON/ELLP/ A$,E$,ES$,E0$,E1$,E2$,E3$
C
C functions
C
	REAL*8		E0FN
	REAL*8		E1FN
	REAL*8		E2FN
	REAL*8		E3FN
C
C-----------------------------------------------------------------------
C-----------------------------------------------------------------------
C 	Get the projection index 
C
	DO 20, I=1,MD2_NOPRJ
	   IF (DTIPROJ_PROJECTION(DTILUN).EQ.MD2_PRJCD(I)) THEN
	      PROJ_INDEX=I
	      GOTO 22
	   ENDIF
   20	CONTINUE
C
C-----------------------------------------------------------------------
C 	Set up the Units
C
C 	GCTP thinks radians are code 0
22	IF (DTIPROJ_UNITS(DTILUN).EQ.5) THEN
	   UNIT=0
C
C 	GCTP cannot cope with 1/10's of seconds, so use seconds
	ELSEIF (DTIPROJ_UNITS(DTILUN).EQ.110) THEN
	   UNIT=3
C
C 	GCTP cannot cope with real feet (only american feet) so use metres
	ELSEIF (DTIPROJ_UNITS(DTILUN).EQ.1.AND.
     &          DTIPROJ_PROJECTION(DTILUN).NE.2) THEN
	   UNIT=2
C
C 	Otherwise use units from projection record
	ELSE
	   UNIT=DTIPROJ_UNITS(DTILUN)
	ENDIF
C
C----------------------------------------------------------------------
C	Copy all but first 2 parameters from the projection record
C	to the parameter array
C
	DO 30,I=3,15
	   PAR(I)=DTIPROJ_PROJ_PARAMS(I,DTILUN)
   30	CONTINUE
C
C----------------------------------------------------------------------
C	Set up the spheroid parameters.
C 	For all projections, except UTM and SPS these are held in the
C	the first two elements of the parameter array.
C
	IF (DTIPROJ_PROJECTION(DTILUN).GT.2.AND.
     &      DTIPROJ_PROJECTION(DTILUN).NE.100) THEN
	   IF (DTIPROJ_SPHEROID(DTILUN).EQ.101) THEN	! user specified
	      PAR(1)=DTIPROJ_USER_SPHEROID(1,DTILUN)
	      PAR(2)=DTIPROJ_USER_SPHEROID(2,DTILUN)
	   ELSE				! GCTP knows about this spheroid
	      PAR(1) = 0.0
	      PAR(2) = 0.0
	      CALL SPHD(DTIPROJ_SPHEROID(DTILUN),PAR)
	   ENDIF
C
C 	For UTM, need to set up common block ELLP
C
	ELSEIF (DTIPROJ_PROJECTION(DTILUN).EQ.1) THEN
C
C	first get data about spheroid in DUMM
C
	   IF (DTIPROJ_SPHEROID(DTILUN).EQ.101) THEN
	      DUMM(1)=DTIPROJ_USER_SPHEROID(1,DTILUN)	   
	      DUMM(2)=DTIPROJ_USER_SPHEROID(2,DTILUN)
	   ELSE
	      DUMM(1) = 0.0
	      DUMM(2) = 0.0
	      CALL SPHD(DTIPROJ_SPHEROID(DTILUN),DUMM)
	   ENDIF
C
C 	Now use this to fill in the ELLP common block
C
	   IF (DUMM(2).LE.0.0) THEN		! dealing with sphere
	      ES$ = 0.0
	      E$  = 0.0
	   ELSEIF (DUMM(2).LT.1.0) THEN		! eccentricity squared
	      ES$ = DUMM(2)
	      E$  = SQRT(ES$)
	   ELSE					! major and minor axes
	      ES$ = 1.0-(DUMM(2)/DUMM(1))**2
	      E$  = SQRT(ES$)
	   ENDIF
C
	   E0$ = E0FN(ES$)
	   E1$ = E1FN(ES$)
	   E2$ = E2FN(ES$)
	   E3$ = E3FN(ES$)
	   A$  = DUMM(1)
C
C 	For UTM, PAR(1) and PAR(2) we need to copy them from
C	the projection parameter values in DTIPROJ.
C
	   PAR(1)=DTIPROJ_PROJ_PARAMS(1,DTILUN)
	   PAR(2)=DTIPROJ_PROJ_PARAMS(2,DTILUN)
C
C 	For geographicals, they can be 0.0
C
	ELSEIF (DTIPROJ_PROJECTION(DTILUN).EQ.100) THEN
	   PAR(1)=0.0
	   PAR(2)=0.0
	ENDIF
C
C 	For projections marked with a "*" use a sphere rather 
C	than a spheroid so convert the spheroid to a sphere 
C	with the same area
C
	IF (INDEX(MD2_PRJ(PROJ_INDEX),'*').NE.0) THEN
	   CALL EQRAD(PAR)
	ENDIF
C
C 	GCTP thinks geographicals are code 0
	IF (DTIPROJ_PROJECTION(DTILUN).EQ.100) THEN
	   SYS=0
C
C 	Projection 101 is UK national grid - set up special case 
C	of projection 9 (Airy)
C
	ELSEIF (DTIPROJ_PROJECTION(DTILUN).EQ.101) THEN
	   PAR(3)=0.9996012717		! scale factor on CM
	   PAR(5)=-2000000.00		! central meridian 2 deg W
	   PAR(6)=49000000.00		! origin 49 deg N
	   PAR(7)=400000.00		! false eastings
	   PAR(8)=-100000.00		! false northings
	   SYS=9
	ELSE
	   SYS=DTIPROJ_PROJECTION(DTILUN)
	ENDIF
C
C-----------------------------------------------------------------------
C 	Set up zone; use specified zone for UTM and SPS.
C 	Otherwise make sure input and output zones are different
C
	IF(DTIPROJ_PROJECTION(DTILUN).EQ.1.OR.
     &    DTIPROJ_PROJECTION(DTILUN).EQ.2) THEN
	  ZONE=PAR(3)			! R*8 -> I*4
	ELSE
	  IF(DTILUN.EQ.IN_LUN)THEN	! input zone
	    ZONE=99
	  ELSE				! output zone
	    ZONE=100
	  ENDIF
	ENDIF
C
C-----------------------------------------------------------------------
C 	Set up data for DATUM_SHIFT
C	IF (HAD_DATUM) THEN
C	   IF (THSSPH.EQ.101) THEN
C	      SPH(1,TYPE) = THSUSP(1)
C	      SPH(2,TYPE) = THSUSP(2)
C	   ELSE
C	      SPH(1,TYPE) = 0.0
C	      SPH(2,TYPE) = 0.0
C	      CALL SPHD(THSSPH,SPH(1,TYPE))
C	   ENDIF
C	   SPH(3,TYPE) = THSSEP
C	ENDIF
C-----------------------------------------------------------------------
C
	RETURN
	END
C
