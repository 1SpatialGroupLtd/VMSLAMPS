	LOGICAL FUNCTION IFF()
C
***	MODULE	IFF
**	IDENT	14MY91
C
C	Copyright (C), Laser-Scan Laboratories Ltd., Cambridge, England
C
C       Modified for DTITRANS				DJG 05-May-1988
C       Modified for DTICHECK				DJG 03-Mar-1988
C	Created						TJH 13-Oct-1987
C
C Function to create an output IFF file with border and grid ticks for a
C DTITRANS SATMAP imagemap file
C
C Function returns .TRUE. if all is well, otherwise .FALSE.
C
	IMPLICIT NONE
C
C Common:
C
	INCLUDE	'LSL$CMNLSL:FILENAME.CMN'
	INCLUDE	'LSL$CMNLSL:TXTC.CMN'
	INCLUDE	'LSL$CMNLSL:EXPC.CMN'
	INCLUDE 'LSL$CMNDTI:DTIHDR.CMN'
	INCLUDE 'LSL$CMNIFF:MD2DES.CMN'
	INCLUDE 'LSL$CMNIFF:MHDEF.CMN'
	INCLUDE 'LSL$CMNIFF:IFFHAN.CMN'
	INCLUDE 'HERE:DTITRANS.CMN'
	INCLUDE 'LSL$CMNDTI:DTIPROJ.CMN'
C
C W/s
C
	BYTE		CH	! a character
	LOGICAL		OK,IERR	! for error returns
	REAL		RANGE(4)
	REAL		CFT(10,2)
	REAL		CPARRY(4,4)
	REAL		MRK_ST(2,3)
	REAL		START_X, START_Y
	INTEGER*2	ISQ, ISTAT(4), LEN
	INTEGER		LPOSNO
	INTEGER		MRK_FSN
	INTEGER		I, J, N_KM_X, N_KM_Y
C
C Functions
C
	LOGICAL		IFFCREATE ! open new IFF file
	INTEGER*2	EXPAND
C
C initialise
C
	DATA CFT/0,1,0,7*0,0,0,1,7*0/
C
C ......................................................................
C
	IFF = .TRUE.			! assume success
	MATV2   = 2			! map descriptor = type 2
C
C ......................................................................
C
	OK=IFFCREATE(IFF_LUN,IFF_NAME(1:IFF_NAME_LENGTH),,,.TRUE.)
	IF (.NOT.OK) GOTO 10
C
	IFF_FILE = .TRUE.
C
C Set IFF projection values the same as the output DTI file values
C
	MD2SCL    = 50000
C
	MD2LOC(1) = ABSOLUTE_SWX(OUT_LUN)
	MD2LOC(2) = ABSOLUTE_SWY(OUT_LUN)
C
	MD2PRJ	  = DTIPROJ_PROJECTION(OUT_LUN)
C
	MD2UNT    = DTIPROJ_UNITS(OUT_LUN)
C
	MD2SPH    = DTIPROJ_SPHEROID(OUT_LUN)
C
	DO 5 I = 1, 15
    5	   MD2PAR(I) = DTIPROJ_PROJ_PARAMS(I,OUT_LUN)
C
C
C Write header data into IFF file. Make a larger border around the
C bottom and left to contain the coordinate data
C
	RANGE(1) = ABSOLUTE_SWX(OUT_LUN) - MD2LOC(1) - 500
	RANGE(2) = ABSOLUTE_NEX(OUT_LUN) - MD2LOC(1) 
	RANGE(3) = ABSOLUTE_SWY(OUT_LUN) - MD2LOC(2) - 800
	RANGE(4) = ABSOLUTE_NEY(OUT_LUN) - MD2LOC( 2) 
C
C IFF Control Points are the corners of the DTI file input in lon/lat
C Note that the order of points is different in the IFF and DTI file 
C types
C The input and output data sets are the same.
C
	CPARRY(1,1) = ABSOLUTE_SWX(OUT_LUN) - MD2LOC(1) 
	CPARRY(2,1) = ABSOLUTE_SWY(OUT_LUN) - MD2LOC(2) 
	CPARRY(1,2) = ABSOLUTE_SWX(OUT_LUN) - MD2LOC(1) 
	CPARRY(2,2) = ABSOLUTE_NEY(OUT_LUN) - MD2LOC(2) 
	CPARRY(1,3) = ABSOLUTE_NEX(OUT_LUN) - MD2LOC(1) 
	CPARRY(2,3) = ABSOLUTE_NEY(OUT_LUN) - MD2LOC(2) 
	CPARRY(1,4) = ABSOLUTE_NEX(OUT_LUN) - MD2LOC(1) 
	CPARRY(2,4) = ABSOLUTE_SWY(OUT_LUN) - MD2LOC(2) 
C
C
	CALL IFFSEL ( IFF_LUN )
	CALL IFFRA  ( RANGE )
	CALL IFFHI
	CALL IFFMH  ( MHARR,  MHLEN )
	CALL IFFMD  ( MD2ARR, MD2LEN )
	CALL IFFNS  ('File created by DTITRANS')
	CALL IFFCC  ( CFT )
	CALL IFFCP  ( CPARRY )
	LPOSNO = LPOSE
	CALL IFFNO  ( 0, 0, 0 )
	MRK_FSN = 0
C
C Write 4 border lines into layer 1, fc 0
C
C Left :
C
	ISTAT(1) = 0
	ISQ      = 0
	MRK_FSN  = MRK_FSN + 1
	MRK_ST(1,1) = ABSOLUTE_SWX(OUT_LUN) - MD2LOC(1) 
	MRK_ST(2,1) = ABSOLUTE_SWY(OUT_LUN) - MD2LOC(2) 
	MRK_ST(1,2) = ABSOLUTE_SWX(OUT_LUN) - MD2LOC(1) 
	MRK_ST(2,2) = ABSOLUTE_NEY(OUT_LUN) - MD2LOC(2) 
	CALL IFFNF ( MRK_FSN, ISQ )
	CALL IFFFS ( ISTAT )
	CALL IFFST ( MRK_ST, 2, 0 )
	CALL IFFEF
C
C Top 
C
	ISQ      = 0
	MRK_FSN  = MRK_FSN + 1
	MRK_ST(1,1) = ABSOLUTE_SWX(OUT_LUN) - MD2LOC(1)
	MRK_ST(2,1) = ABSOLUTE_NEY(OUT_LUN) - MD2LOC(2)
	MRK_ST(1,2) = ABSOLUTE_NEX(OUT_LUN) - MD2LOC(1)
	MRK_ST(2,2) = ABSOLUTE_NEY(OUT_LUN) - MD2LOC(2)
	CALL IFFNF ( MRK_FSN, ISQ )
	CALL IFFFS ( ISTAT )
	CALL IFFST ( MRK_ST, 2, 0 )
	CALL IFFEF
C
C Right
C
	ISQ      = 0
	MRK_FSN  = MRK_FSN + 1
	MRK_ST(1,1) = ABSOLUTE_NEX(OUT_LUN) - MD2LOC(1)
	MRK_ST(2,1) = ABSOLUTE_NEY(OUT_LUN) - MD2LOC(2)
	MRK_ST(1,2) = ABSOLUTE_NEX(OUT_LUN) - MD2LOC(1)
	MRK_ST(2,2) = ABSOLUTE_SWY(OUT_LUN) - MD2LOC(2)
	CALL IFFNF ( MRK_FSN, ISQ )
	CALL IFFFS ( ISTAT )
	CALL IFFST ( MRK_ST, 2, 0 )
	CALL IFFEF
C
C Bottom
C
	ISQ      = 0
	MRK_FSN  = MRK_FSN + 1
	MRK_ST(1,1) = ABSOLUTE_NEX(OUT_LUN) - MD2LOC(1)
	MRK_ST(2,1) = ABSOLUTE_SWY(OUT_LUN) - MD2LOC(2)
	MRK_ST(1,2) = ABSOLUTE_SWX(OUT_LUN) - MD2LOC(1)
	MRK_ST(2,2) = ABSOLUTE_SWY(OUT_LUN) - MD2LOC(2)
	CALL IFFNF ( MRK_FSN, ISQ )
	CALL IFFFS ( ISTAT )
	CALL IFFST ( MRK_ST, 2, 0 )
	CALL IFFEF
C
C	Draw grid crosses at km intervals in the image area. First find the
C	number of X and Y crosses
C
	N_KM_X = INT( ( ABSOLUTE_NEX(OUT_LUN)-ABSOLUTE_SWX(OUT_LUN)-1) 
     &              / 1000.0 )
	N_KM_Y = INT( ( ABSOLUTE_NEY(OUT_LUN)-ABSOLUTE_SWY(OUT_LUN)-1) 
     &              / 1000.0 )
C
C	The first position is the first Km unit in from the map border
C
	START_X = INT( ABSOLUTE_SWX(OUT_LUN) / 1000.0 ) * 1000.0
	START_Y = INT( ABSOLUTE_SWY(OUT_LUN) / 1000.0 ) * 1000.0
C
C	Step through all positions, drawing crosses as two features each
C
	DO 100 I = 1, N_KM_X
	   DO 100 J = 1, N_KM_Y
C
	      ISQ      = 0
	      MRK_FSN  = MRK_FSN + 1
	      MRK_ST(1,1) = START_X + I*1000.0 - MD2LOC(1) - 50.0
	      MRK_ST(2,1) = START_Y + J*1000.0 - MD2LOC(2)
	      MRK_ST(1,2) = START_X + I*1000.0 - MD2LOC(1) + 50.0
	      MRK_ST(2,2) = START_Y + J*1000.0 - MD2LOC(2)
	      CALL IFFNF ( MRK_FSN, ISQ )
	      CALL IFFFS ( ISTAT )
	      CALL IFFST ( MRK_ST, 2, 0 )
	      CALL IFFEF
C
	      ISQ      = 0
	      MRK_FSN  = MRK_FSN + 1
	      MRK_ST(1,1) = START_X + I*1000.0 - MD2LOC(1)
	      MRK_ST(2,1) = START_Y + J*1000.0 - MD2LOC(2) - 50.0
	      MRK_ST(1,2) = START_X + I*1000.0 - MD2LOC(1)
	      MRK_ST(2,2) = START_Y + J*1000.0 - MD2LOC(2) + 50.0
	      CALL IFFNF ( MRK_FSN, ISQ )
	      CALL IFFFS ( ISTAT )
	      CALL IFFST ( MRK_ST, 2, 0 )
	      CALL IFFEF
C
  100	CONTINUE
C
C	Now draw single tick marks along the bottom and the top of the map
C	border and put their coordinates along the bottom, rotated vertical
C
	DO 200 I = 1, N_KM_X
C
C	   Ticks along the bottom
C
	   ISQ      = 0
	   MRK_FSN  = MRK_FSN + 1
	   MRK_ST(1,1) = START_X + I * 1000.0 - MD2LOC(1)
	   MRK_ST(2,1) = ABSOLUTE_SWY(OUT_LUN) - MD2LOC(2)
	   MRK_ST(1,2) = START_X + I*1000.0 - MD2LOC(1)
	   MRK_ST(2,2) = ABSOLUTE_SWY(OUT_LUN) + 50.0 - MD2LOC(2)
	   CALL IFFNF ( MRK_FSN, ISQ )
	   CALL IFFFS ( ISTAT )
	   CALL IFFST ( MRK_ST, 2, 0 )
	   CALL IFFEF
C
C	   Coordinates along the bottom, feature code 28
C
	   ISQ      = 0
	   MRK_FSN  = MRK_FSN + 1
   	   ISTAT(1) = 28
	   CALL LIB$INSV ( 2, 14, 2, ISTAT(3) )
	   CALL LIB$INSV ( 7,  0, 4, ISTAT(3) )
	   CALL IFFNF ( MRK_FSN, ISQ )
	   CALL IFFFS ( ISTAT )
	   CALL IFFTH ( 200 )
	   MRK_ST(1,1) = START_X + I * 1000.0 - MD2LOC(1)
	   MRK_ST(2,1) = ABSOLUTE_SWY(OUT_LUN) - 100 - MD2LOC(2)
	   CALL IFFST ( MRK_ST, 1, 0 )
	   CALL IFFRO ( 1.57079 )
	   LEN = EXPAND ( '%F10.1', (MRK_ST(1,1)+MD2LOC(1)) )
	   CALL IFFTX ( EXPBUF, LEN )
	   CALL IFFEF
	   ISTAT(1) = 0
	   ISTAT(3) = 0
C
C	   Ticks along the top
C
	   ISQ      = 0
	   MRK_FSN  = MRK_FSN + 1
	   MRK_ST(1,1) = START_X + I*1000.0 - MD2LOC(1)
	   MRK_ST(2,1) = ABSOLUTE_NEY(OUT_LUN) - MD2LOC(2)
	   MRK_ST(1,2) = START_X + I*1000.0 - MD2LOC(1)
	   MRK_ST(2,2) = ABSOLUTE_NEY(OUT_LUN) - 50.0 - MD2LOC(2)
	   CALL IFFNF ( MRK_FSN, ISQ )
	   CALL IFFFS ( ISTAT )
	   CALL IFFST ( MRK_ST, 2, 0 )
	   CALL IFFEF
C
  200	CONTINUE
C
C	Draw single tick marks up the sides, and their coordinates up the left
C
	DO 300 I = 1, N_KM_Y
C
C	   Ticks up the left side
C
	   ISQ      = 0
	   MRK_FSN  = MRK_FSN + 1
	   MRK_ST(1,1) = ABSOLUTE_SWX(OUT_LUN) - MD2LOC(1)
	   MRK_ST(2,1) = START_Y + I*1000.0 - MD2LOC(2)
	   MRK_ST(1,2) = ABSOLUTE_SWX(OUT_LUN) + 50.0 - MD2LOC(1)
	   MRK_ST(2,2) = START_Y + I*1000.0 - MD2LOC(2)
	   CALL IFFNF ( MRK_FSN, ISQ )
	   CALL IFFFS ( ISTAT )
	   CALL IFFST ( MRK_ST, 2, 0 )
	   CALL IFFEF
C
C	   Coordinates up the left side
C
	   ISQ      = 0
	   MRK_FSN  = MRK_FSN + 1
   	   ISTAT(1) = 28
	   CALL LIB$INSV ( 2, 14, 2, ISTAT(3) )
	   CALL LIB$INSV ( 7,  0, 4, ISTAT(3) )
	   CALL IFFNF ( MRK_FSN, ISQ )
	   CALL IFFFS ( ISTAT )
	   CALL IFFTH ( 200 )
	   MRK_ST(1,1) = ABSOLUTE_SWX(OUT_LUN) - 100 - MD2LOC(1)
	   MRK_ST(2,1) = START_Y + I*1000.0 - MD2LOC(2)
	   CALL IFFST ( MRK_ST, 1, 0 )
	   CALL IFFRO ( 0.0 )
	   LEN = EXPAND ( '%F10.1', (MRK_ST(2,1)+MD2LOC(2)) )
	   CALL IFFTX ( EXPBUF, LEN )
	   CALL IFFEF
   	   ISTAT(1) = 0
   	   ISTAT(3) = 0
C
C	   Ticks up the right side
C
	   ISQ      = 0
	   MRK_FSN  = MRK_FSN + 1
	   MRK_ST(1,1) = ABSOLUTE_NEX(OUT_LUN) - 50.0 - MD2LOC(1)
	   MRK_ST(2,1) = START_Y + I*1000.0 - MD2LOC(2)
	   MRK_ST(1,2) = ABSOLUTE_NEX(OUT_LUN) - MD2LOC(1)
	   MRK_ST(2,2) = START_Y + I*1000.0 - MD2LOC(2)
	   CALL IFFNF ( MRK_FSN, ISQ )
	   CALL IFFFS ( ISTAT )
	   CALL IFFST ( MRK_ST, 2, 0 )
	   CALL IFFEF
C
  300	CONTINUE
C
C
C	1km Scale bar along the bottom with ticks at each end
C
	ISQ      = 0
	MRK_FSN  = MRK_FSN + 1
	MRK_ST(1,1) = 500
	MRK_ST(2,1) = -600
	MRK_ST(1,2) = 1500
	MRK_ST(2,2) = -600
	CALL IFFNF ( MRK_FSN, ISQ )
	CALL IFFFS ( ISTAT )
	CALL IFFST ( MRK_ST, 2, 0 )
	CALL IFFEF
C
	ISQ      = 0
	MRK_FSN  = MRK_FSN + 1
	MRK_ST(1,1) = 500
	MRK_ST(2,1) = -600
	MRK_ST(1,2) = 500
	MRK_ST(2,2) = -580
	CALL IFFNF ( MRK_FSN, ISQ )
	CALL IFFFS ( ISTAT )
	CALL IFFST ( MRK_ST, 2, 0 )
	CALL IFFEF
C
	ISQ      = 0
	MRK_FSN  = MRK_FSN + 1
	MRK_ST(1,1) = 1500
	MRK_ST(2,1) = -600
	MRK_ST(1,2) = 1500
	MRK_ST(2,2) = -580
	CALL IFFNF ( MRK_FSN, ISQ )
	CALL IFFFS ( ISTAT )
	CALL IFFST ( MRK_ST, 2, 0 )
	CALL IFFEF
C
C	Write information along bottom of scale bar
C
	ISQ      = 0
	MRK_FSN  = MRK_FSN + 1
   	ISTAT(1) = 28
	CALL LIB$INSV ( 2, 14, 2, ISTAT(3) )
	CALL LIB$INSV ( 1,  0, 4, ISTAT(3) )
	CALL IFFNF ( MRK_FSN, ISQ )
	CALL IFFFS ( ISTAT )
	CALL IFFTH ( 200 )
	MRK_ST(1,1) = 500
	MRK_ST(2,1) = -650
	CALL IFFST ( MRK_ST, 1, 0 )
	CALL IFFRO ( 0.0 )
	LEN = EXPAND ( 'Image map scale : 1 km' )
	CALL IFFTX ( EXPBUF, LEN )
	CALL IFFEF
   	ISTAT(1) = 0
   	ISTAT(3) = 0
C
C	Write information along bottom of scale bar
C
	ISQ      = 0
	MRK_FSN  = MRK_FSN + 1
   	ISTAT(1) = 28
	CALL LIB$INSV ( 2, 14, 2, ISTAT(3) )
	CALL LIB$INSV ( 1,  0, 4, ISTAT(3) )
	CALL IFFNF ( MRK_FSN, ISQ )
	CALL IFFFS ( ISTAT )
	CALL IFFTH ( 200 )
	MRK_ST(1,1) = 0
	MRK_ST(2,1) = -780
	CALL IFFST ( MRK_ST, 1, 0 )
	CALL IFFRO ( 0.0 )
	LEN = EXPAND ( 'Image map produced by Laser-Scan SATMAP system' )
	CALL IFFTX ( EXPBUF, LEN )
	CALL IFFEF
   	ISTAT(1) = 0
   	ISTAT(3) = 0
C
C
	CALL IFFUNO ( LPOSNO )
	CALL IFFEO
C
C
	CALL IFFEM
	CALL IFFEJ
	CALL IFFCLO(IFF_LUN)
C
	GOTO 20
C
C Return with error message
C
10	IFF = .FALSE.
	IFF_FILE = .FALSE.
	CALL IFFCDL(IFF_LUN)	! delete on error
C
C ......................................................................
C
20	RETURN
	END
C
