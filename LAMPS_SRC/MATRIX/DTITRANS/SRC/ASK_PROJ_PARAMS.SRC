        INTEGER*4 FUNCTION ASK_PROJ_PARAMS(DTILUN)
C
***	MODULE	ASK_PROJ_PARAMS
***	IDENT	29FE96
C
C 	Copyright Laser-Scan Ltd., Cambridge, England
C 	Author  : D R Catlow
C
C	Created : 5 October 1987
C	Modified:
C
CMOD	Ask correct questions for Sinusoidal and 
C	Equirectangular Projections			RWR  8-May-1991
C
CMOD	(wi 93/3) Add extra projections (Cassini,Krovak,
C       Bonne, Mollweide, Hammer-Aitoff and Winkel III)	RWR  1-Mar-1993
C
CMOD1292 Set EQUIDIST to be TRUE when it should be	 JB 10-Sep-1993
C
CMOD1453 Do not lose the original DTI projection values by setting to
C	 an arbitrary default value (usually 0.0 or 1.0) before getting
C	 the new value from the user			 JB 11-Jan-1995
C
CMOD1500 Set Modified Stereographic projections		 JB 11-Jul-1995
C
CMOD1533 Change ERRM$0 to ERRM and IS02$0 to IS02F	 JB 29-Feb-1996
C	 for GOTHIC versions
C
C	Function for DTITRANS to request details of the parameters
C	associated with the projection system for the file opened on
C	DTILUN.
C	The values are written to the relevant variables in
C	DTIPROJ.
C	Based on ITRANS routine ASKPAR/ASK_PROJ_PARAMS.
C	If we are prompting for values for the output DTI file, then
C	were possible default values are supplied.
C
C----------------------------------------------------------------------
	IMPLICIT NONE
C
***	COMMON		/LSL$CMNLSL:EXCEPTION/
***	COMMON		/LSL$CMNLSL:EXPC/
***	PARAMETER	/LSL$CMNLSL:LSLLIBMSG/
C
***	COMMON   	/LSL$CMNIFF:MD2NAM/	! holds MD variables that are
C						! used by DTITRANS to ensure
C						! compatibility with ITRANS.
C
***	COMMON		/LSL$CMNDTI:DTIPROJ/
C
***	COMMON		/HERE:DTITRANS/
***	PARAMETER	/HERE:DTITRANSMSG/
C
C Arguments:
	INTEGER*4	DTILUN			! which DTI file
C
C Parameters
	INTEGER*4	LAT,LONG
	PARAMETER	(LONG=2,LAT=1)
C
	INTEGER*4	SCL,COORD
	PARAMETER	(COORD=0,SCL=1)
C
C Make sure common block is block-data ed
	EXTERNAL	MD2DAT
C
C Locals:
	REAL*8		X,Y			! real values
	REAL*8		DATA(15)		! parameters for projection
	REAL*8		RAD			! radian value of angle
	INTEGER*4	PROJ_INDEX		! projection index
	INTEGER*4	I,J			! counters
	INTEGER*4	LEN			! length of string read from
C						! terminal.
	INTEGER*4	MODIND			! modified-stereographic option
	INTEGER*2	NOCHAR			! no. of chars
	INTEGER*4	ERROR			! error condition
	INTEGER*4	ZONE			! zone value
	LOGICAL		TYPEA			! .T. if type A projection
	BYTE		ICH			! single character
	CHARACTER*80	BLANK			! blank string
	DATA		(BLANK(I:I),I=1,80)/80*' '/
C
	INTEGER*4	IER			! error code for GCTP
	COMMON/ERRM/	IER
	LOGICAL		EQUIRECT		! equirectangular
	LOGICAL		EQUIDIST		! equidistant conic
C
C Functions:
	INTEGER		TTRSTR			! read response
	INTEGER		RDCHS			! read character
	INTEGER		SIGCHS			! trun. to significant chs.
	INTEGER		RDLONG			! read INTEGER*4
	INTEGER		DMSQU			! read angle format DDDMMMSSS.SS
	INTEGER		DBLQU			! read REAL*8 value
	INTEGER*2	EXPAND			! expand a string
C
C----------------------------------------------------------------------
C----------------------------------------------------------------------
C Set to success initially
C
	ASK_PROJ_PARAMS = DTRANS__NORMAL
C
C Assume not Equirectangular or Equidistant Conic projection at the moment
C
	EQUIRECT = .FALSE.
	EQUIDIST = .FALSE.
	TYPEA    = .TRUE.
C
C----------------------------------------------------------------------
C Determine the projection index
C
5	CONTINUE
C
	DO 10, I=1,MD2_NOPRJ
	   IF (DTIPROJ_PROJECTION(DTILUN).EQ.MD2_PRJCD(I)) GOTO 20
10	CONTINUE
C
C No match found, so return with error
C
	ASK_PROJ_PARAMS = DTRANS__BADPROJCODE
	GOTO 9999
C
20	PROJ_INDEX = I
C
	CALL WRITEF(' ')
C
C----------------------------------------------------------------------
C If Equidistant Conic or Oblique Mercator, 
C determine whether type A or type B.
C
	IF (DTIPROJ_PROJECTION(DTILUN).EQ.8 .OR.
     &      DTIPROJ_PROJECTION(DTILUN).EQ.20 .OR.
     &      DTIPROJ_PROJECTION(DTILUN).EQ.21) THEN
C
C Set up prompt
C
25	   CALL EXPAND('Select format A or B for %S projection: ',
     &	           MD2_PRJ(PROJ_INDEX) (3:SIGCHS(MD2_PRJ(PROJ_INDEX))))
C
	   ASK_PROJ_PARAMS = TTRSTR(,LEN,EXPDSC,ERROR)
C
	   IF (.NOT.ASK_PROJ_PARAMS) THEN			! error
	      IF (ASK_PROJ_PARAMS.NE.LSL__EOF) THEN
	         CALL LSL_PUTMSG(ERROR)
C
	      ELSE
	         ASK_PROJ_PARAMS=DTRANS__EOF
	         CALL LSL_PUTMSG(ASK_PROJ_PARAMS)
	      ENDIF
C
	      GOTO 9999
	   ENDIF
C
	   IF (LEN.EQ.0) GOTO 25
C
C Decode the response
C
	   CALL BSLN
C
	   IF (RDCHS(ICH)) GOTO 25			! reprompt
C
C If ? then print out explanation	 
C
	   IF (ICH.EQ.'?') THEN
	      CALL WRITEF(' ')
	      CALL WRITEF('For the %S projection, format A uses ',
     &	           MD2_PRJ(PROJ_INDEX)(3:SIGCHS(MD2_PRJ(PROJ_INDEX))))
C
	      IF (DTIPROJ_PROJECTION(DTILUN).EQ.8) THEN
	         CALL WRITEF('1 standard parallel; format B uses 2')
C
	      ELSEIF (DTIPROJ_PROJECTION(DTILUN).EQ.20) THEN
	         CALL WRITEF('2 points to define the central line; '//
     &	                     'format B uses one point and an azimuth')
C
	      ELSEIF (DTIPROJ_PROJECTION(DTILUN).EQ.21) THEN
	         CALL WRITEF('2 points to define the false equator; '//
     &	                     'format B uses the vertex')
C
	         CALL WRITEF('Both define the datum in '//
     &	                     'geographical coordinates')
	      ENDIF
C
	      GOTO 25				! reprompt
	   ENDIF
C
	   IF (ICH.NE.'A' .AND. ICH.NE.'a' .AND.
     &	       ICH.NE.'B' .AND. ICH.NE.'b')
     &	   GOTO 25
C
C Select A or B
	   TYPEA = (ICH.EQ.'A' .OR. ICH.EQ.'a')	   
C
	ENDIF
C
C----------------------------------------------------------------------
C Branch according to projection index
C
C	     unset,  utm,   spc,  alb,   lcc, mer, pol ster, poly, eqd con
C	        tm, ster,  laea,   az,  gnom,  orth,
C	      gvnp, sinu, equirect, mill,  vdg,
C	      obl mer (hot/sph), ster, cass, krov,  bonn,
C	      moll, hamm, wink, mod ster, unset , unset
C
	GOTO   (9999, 400,  450,  500,  500,  550,  550,   600,   650,
     &		 700, 750,  750,  750,  750,  750,
     &		 800, 850,  840,  850,  850,
     &		 900, 950,       1000,  1050, 1100, 1150,
     &		 850, 850,  850, 1250, 9999, 9999) PROJ_INDEX
C
C----------------------------------------------------------------------
C 	UTM
C----------------------------------------------------------------------
C
400	CALL WRITEF(' ')
	CALL WRITEF('The %S projection requires the following',
     &	     MD2_PRJ(PROJ_INDEX) (3:SIGCHS(MD2_PRJ(PROJ_INDEX))))
	CALL WRITEF('additional information:-')
	CALL WRITEF(' ')
C
C Set up default values if this is the output file, and
C the input file is on the same projection system
C
410	IF ((DTILUN.EQ.OUT_LUN .AND. DTIPROJ_PROJECTION(IN_LUN).EQ.1) .OR.
     &	    (HAD_DESCRIPTOR) ) THEN
	   J = DTIPROJ_PROJ_PARAMS(3,IN_LUN)
C
	ELSE
	   J = 0
	ENDIF
C
	ZONE = J
C
	CALL EXPAND('   UTM zone (%^L%N): ', ZONE)
C
	ASK_PROJ_PARAMS = TTRSTR(,LEN,EXPDSC,ERROR)
C
	IF (.NOT.ASK_PROJ_PARAMS) THEN
	   IF (ASK_PROJ_PARAMS.NE.LSL__EOF) THEN
	      CALL LSL_PUTMSG(ERROR)
C
	   ELSE
	      ASK_PROJ_PARAMS=DTRANS__EOF
	      CALL LSL_PUTMSG(ASK_PROJ_PARAMS)
	   ENDIF
C
	   GOTO 9999				! return
	ENDIF
C
	IF (LEN.EQ.0) GOTO 420			! take default
C
	CALL BSLN
C
C If ? then print out explanatory message
C
	IF(RDCHS(ICH))GOTO 410
C
	IF(ICH.EQ.'?')THEN
	  CALL WRITEF(' ')
	  CALL WRITEF('UTM zones cover 6 degrees of longitude. '//
     &	              'The central meridian')
C
	  CALL WRITEF('of zone 1 is 177 degrees west, '//
     &	              'and they increase eastward. Thus')
C
	  CALL WRITEF('zone 30 is centred on 3 degrees W, '//
     &	              '31 on 3 degrees E and zone 60')
C
	  CALL WRITEF('on 177 degrees E.')
C
	  CALL WRITEF('Use negative zones if working in southern '//
     &	              'hemisphere.')
C
	  CALL WRITEF('If the zone is unknown, enter zone 0; you '//
     &	              'will then be asked for')
C
	  CALL WRITEF('the geographical coordinates of one point in '//
     &	              'the area')
	  GOTO 410
	ENDIF
C
C Read a value
        CALL BSCH
C
	IF (RDLONG(J)) THEN
	  CALL LSL_PUTMSG(ERRNUM)
	  GOTO 410
	ENDIF
C
C Check for sensible values
C
420	CONTINUE
C
	IF (J.LT.-60 .OR. J.GT.60) THEN
	   CALL LSL_PUTMSG(DTRANS__BADUTMZONE,J)
	   GOTO 410					! reprompt
	ENDIF
C
C Transfer value into common
C
	DTIPROJ_PROJ_PARAMS(3,DTILUN) = J
C
	IF (HAD_DESCRIPTOR .OR. (DTILUN.EQ.OUT_LUN .AND.
     &	    DTIPROJ_PROJECTION(DTILUN) .NE.
     &      DTIPROJ_PROJECTION(IN_LUN))) THEN
C
C	   DTIPROJ_PROJ_PARAMS(1,DTILUN) = 0.0		! mod1453
C	   DTIPROJ_PROJ_PARAMS(2,DTILUN) = 0.0		! mod1453
	ENDIF
C
C Get latitude
C
	IF (J.EQ.0) THEN
	   ASK_PROJ_PARAMS = DMSQU(DTIPROJ_PROJ_PARAMS(2,DTILUN),
     &     'Latitude of any point in the UTM zone', LAT)
C
	   IF (.NOT.ASK_PROJ_PARAMS) THEN
	      IF (ASK_PROJ_PARAMS.NE.DTRANS__EOF) THEN
	         GOTO 9999
C
	      ELSE
	         CALL LSL_PUTMSG(DTRANS__REENTER)
	         GOTO 400
	      ENDIF
	   ENDIF
C
C And longitude...
C
	   ASK_PROJ_PARAMS = DMSQU(DTIPROJ_PROJ_PARAMS(1,DTILUN),
     &     'Longitude of any point in the UTM zone', LONG)
C
	   IF (.NOT.ASK_PROJ_PARAMS) THEN
	      IF (ASK_PROJ_PARAMS.NE.DTRANS__EOF) THEN
	         GOTO 9999
C
	      ELSE
	         CALL LSL_PUTMSG(DTRANS__REENTER)
	         GOTO 400
	      ENDIF
	   ENDIF
C
C For -ve zone (southern hemisphere) have a -ve latitude
C
	ELSEIF (J.LT.0 .OR. DTIPROJ_PROJ_PARAMS(2,DTILUN).LT.0) THEN
	   DTIPROJ_PROJ_PARAMS(1,DTILUN) = 0.0
	   DTIPROJ_PROJ_PARAMS(2,DTILUN) = -45000000.00
	   DTIPROJ_PROJ_PARAMS(3,DTILUN) = ABS(J)
C
	ELSE
	   DTIPROJ_PROJ_PARAMS(1,DTILUN) = 0.0
	   DTIPROJ_PROJ_PARAMS(2,DTILUN) = 0.0
	ENDIF
C
C Initialise the remainder of the parameter values
	DO 430, I=4,15
	   DTIPROJ_PROJ_PARAMS(I,DTILUN) = 0.0
430	CONTINUE
C
	GOTO 9999
C
C----------------------------------------------------------------------
C State plane coordinate system
C----------------------------------------------------------------------
C
450	CALL WRITEF(' ')
	CALL WRITEF('The %S projection requires the following',
     &	     MD2_PRJ(PROJ_INDEX) (3:SIGCHS(MD2_PRJ(PROJ_INDEX))))
	CALL WRITEF('additional information:-')
	CALL WRITEF(' ')
C
C 	Set up default zone value
C
	IF (HAD_DESCRIPTOR .OR. (DTILUN.EQ.OUT_LUN .AND.
     &	    DTIPROJ_PROJECTION(DTILUN).EQ.
     &     DTIPROJ_PROJECTION(IN_LUN)))THEN
	   J = DTIPROJ_PROJ_PARAMS(3,IN_LUN) 	
C
	ELSE
	   J = 0
	ENDIF
C
	ZONE=J
C
460	CALL EXPAND('   State Plane zone (%^L%N): ',ZONE)
C
	ASK_PROJ_PARAMS = TTRSTR(,LEN,EXPDSC,ERROR)
C
	IF (.NOT.ASK_PROJ_PARAMS) THEN
	   IF (ASK_PROJ_PARAMS.NE.LSL__EOF) THEN
	      CALL LSL_PUTMSG(ERROR)
C
	   ELSE
	      ASK_PROJ_PARAMS=DTRANS__EOF
	      CALL LSL_PUTMSG(ASK_PROJ_PARAMS)
	   ENDIF
C
	   GOTO 9999					! return
	ENDIF
C
	IF (LEN.EQ.0) GOTO 480				! take default
C
	CALL BSLN
C
C 	If ? then print out explanatory message
C
	IF (RDCHS(ICH)) GOTO 460			! reprompt
C
C 	Check for ?
C
	IF(ICH.EQ.'?')THEN
	   CALL SPSHLP
	   GOTO 460
	ENDIF
C
	CALL BSCH
C
	IF (RDLONG(J)) THEN
	  CALL LSL_PUTMSG(ERRNUM)
	  GOTO 410
	ENDIF
C
C Check for sensible values by initialising the projection
C
480	CONTINUE
C
	IER=0					! initialise common block
	DATA(1)=0.0
	CALL IS02F(J,DATA)
C
	IF (IER.NE.0) THEN
	   CALL LSL_PUTMSG(DTRANS__BADSPSZONE,J)
	   GOTO 460
	ENDIF
C
C Transfer into common
C
	DTIPROJ_PROJ_PARAMS(3,DTILUN)=J
	DTIPROJ_PROJ_PARAMS(1,DTILUN)=0.0
	DTIPROJ_PROJ_PARAMS(2,DTILUN)=0.0
C
C Initialise remaining parameters
C
	DO 490,I=4,15
	   DTIPROJ_PROJ_PARAMS(I,DTILUN)=0.0
490	CONTINUE
C
	GOTO 9999
C
C----------------------------------------------------------------------
C 	Albers Conical equal area and Lambert Conformal Conic
C----------------------------------------------------------------------
C
500	CALL WRITEF(' ')
	CALL WRITEF('The %S projection requires the following',
     &	     MD2_PRJ(PROJ_INDEX) (3:SIGCHS(MD2_PRJ(PROJ_INDEX))))
	CALL WRITEF('additional information:-')
	CALL WRITEF(' ')
C
C Set up default values
C
505	CONTINUE
C
	DTIPROJ_PROJ_PARAMS(1,DTILUN) = 0.0
	DTIPROJ_PROJ_PARAMS(2,DTILUN) = 0.0
C
	IF (HAD_DESCRIPTOR .OR. (DTILUN.EQ.OUT_LUN .AND.
     &	    DTIPROJ_PROJECTION(DTILUN) .NE.
     &      DTIPROJ_PROJECTION(IN_LUN))) THEN
C
	   DTIPROJ_PROJ_PARAMS(3,DTILUN) = 0.0
	   DTIPROJ_PROJ_PARAMS(4,DTILUN) = 0.0
	ENDIF
C
C Get latitude for 1st standard parallel
C
	ASK_PROJ_PARAMS = DMSQU(DTIPROJ_PROJ_PARAMS(3,DTILUN),
     &      'Latitude of 1st standard parallel', LAT)
C
	IF (.NOT.ASK_PROJ_PARAMS) GOTO 9999
C
C Now get latitude of 2nd standard parallel
C
	ASK_PROJ_PARAMS = DMSQU(DTIPROJ_PROJ_PARAMS(4,DTILUN),
     &      'Latitude of 2nd standard parallel', LAT)
C
	IF (.NOT.ASK_PROJ_PARAMS) THEN
	   IF (ASK_PROJ_PARAMS.NE.DTRANS__EOF) THEN
	      GOTO 9999
C
	   ELSE
	      CALL LSL_PUTMSG(DTRANS__REENTER)
	      GOTO 500
	   ENDIF
	ENDIF
C
C Get long of central meridian, latitude of origin, 
C false eastings and false northings
C
C Set up any defaults
C
510	IF (HAD_DESCRIPTOR .OR. (DTILUN.EQ.OUT_LUN .AND.
     &	    DTIPROJ_PROJECTION(DTILUN) .NE.
     &      DTIPROJ_PROJECTION(IN_LUN))) THEN
	   DO 520, I=5,8
C
C	   DTIPROJ_PROJ_PARAMS(I,DTILUN) = 0.0		! mod1453
C
520	   CONTINUE
	ENDIF
C
	ASK_PROJ_PARAMS = DMSQU(DTIPROJ_PROJ_PARAMS(6,DTILUN),
     &  'Latitude of the origin ', LAT)
C
	IF (.NOT.ASK_PROJ_PARAMS) THEN
	   IF (ASK_PROJ_PARAMS.NE.DTRANS__EOF) THEN
	      GOTO 9999
C
	   ELSE
	      CALL LSL_PUTMSG(DTRANS__REENTER)
	      GOTO 500
	   ENDIF
	ENDIF
C
	ASK_PROJ_PARAMS = DMSQU(DTIPROJ_PROJ_PARAMS(5,DTILUN),
     &	  'Longitude of the central meridian', LONG)
C
	IF (.NOT.ASK_PROJ_PARAMS) THEN
	   IF (ASK_PROJ_PARAMS.NE.DTRANS__EOF) THEN
	      GOTO 9999
C
	   ELSE
	      CALL LSL_PUTMSG(DTRANS__REENTER)
	      GOTO 500
	   ENDIF
	ENDIF
C
C False origins
C
530	ASK_PROJ_PARAMS = DBLQU(DTIPROJ_PROJ_PARAMS(7,DTILUN),
     &	       'Eastings of the origin of the projection', COORD)
C
	IF (.NOT.ASK_PROJ_PARAMS)THEN
	   IF (ASK_PROJ_PARAMS.NE.DTRANS__EOF) THEN
	      GOTO 9999
C
	   ELSE
	      CALL LSL_PUTMSG(DTRANS__REENTER)
	      GOTO 5
	   ENDIF
	ENDIF
C
	ASK_PROJ_PARAMS = DBLQU(DTIPROJ_PROJ_PARAMS(8,DTILUN),
     &	       'Northings of the origin of the projection', COORD)
C
	IF (.NOT.ASK_PROJ_PARAMS) THEN
	   IF (ASK_PROJ_PARAMS.NE.DTRANS__EOF) THEN
	      GOTO 9999
C
	   ELSE
	      CALL LSL_PUTMSG(DTRANS__REENTER)
	      GOTO 5
	   ENDIF
	ENDIF
C
C Fill rest with 0.0
C
	IF (.NOT.EQUIDIST.OR.(EQUIDIST.AND.TYPEA))
     &	                           DTIPROJ_PROJ_PARAMS(9,DTILUN)=0.0
C
	DO 540,I=10,15
	   DTIPROJ_PROJ_PARAMS(I,DTILUN) = 0.0
540	CONTINUE
C
	GOTO 9999
C
C----------------------------------------------------------------------
C 	Mercator and Polar stereographic
C----------------------------------------------------------------------
C
550	CALL WRITEF(' ')
	CALL WRITEF('The %S projection requires the following',
     &	     MD2_PRJ(PROJ_INDEX) (3:SIGCHS(MD2_PRJ(PROJ_INDEX))))
	CALL WRITEF('additional information:-')
	CALL WRITEF(' ')
C
C Initialise first 4 values
C
	DO 560, I=1,4
	   DTIPROJ_PROJ_PARAMS(I,DTILUN)=0.0
560	CONTINUE
C
	IF (HAD_DESCRIPTOR .OR. (DTILUN.EQ.OUT_LUN .AND.
     &	    DTIPROJ_PROJECTION(DTILUN).NE.
     &     DTIPROJ_PROJECTION(IN_LUN)))THEN
	   DO 570, I=5,8
	      DTIPROJ_PROJ_PARAMS(I,DTILUN)=0.0
570	   CONTINUE
	ENDIF
C
C Latitude of true scale
C
	ASK_PROJ_PARAMS = DMSQU(DTIPROJ_PROJ_PARAMS(6,DTILUN),
     &	         'Latitude that has true scale',LAT)
	IF (.NOT.ASK_PROJ_PARAMS) GOTO 9999
C
C Longitude of central meridian (for Mercator)
C
	IF (PROJ_INDEX.EQ.6) THEN
	   ASK_PROJ_PARAMS = DMSQU(DTIPROJ_PROJ_PARAMS(5,DTILUN),
     &     'Longitude of the central meridian', LONG)
C
C For Polar sterographic, get longitude straight down from the pole
C
	ELSE
	   ASK_PROJ_PARAMS = DMSQU(DTIPROJ_PROJ_PARAMS(5,DTILUN),
     &	  'Longitude straight down from N Pole of map up from S Pole',
     &	   LONG)
	ENDIF
C
	IF (.NOT.ASK_PROJ_PARAMS) THEN
	  IF (ASK_PROJ_PARAMS.NE.DTRANS__EOF) THEN
	    GOTO 9999
C
	  ELSE
	    CALL LSL_PUTMSG(DTRANS__REENTER)
	    GOTO 550
	   ENDIF
	ENDIF
C
C Rest is same as projection 3 and 4
	GOTO 530
C
C----------------------------------------------------------------------
C 	Polyconic
C----------------------------------------------------------------------
C
600	CONTINUE
C
	CALL WRITEF(' ')
	CALL WRITEF('The %S projection requires the following',
     &	     MD2_PRJ(PROJ_INDEX) (3:SIGCHS(MD2_PRJ(PROJ_INDEX))))
	CALL WRITEF('additional information:-')
	CALL WRITEF
C
	DO 610, I=1,4
	   DTIPROJ_PROJ_PARAMS(I,DTILUN)=0.0
610	CONTINUE
C
C rest is same as other conics
C
	GOTO 510
C
C----------------------------------------------------------------------
C 	Equidistant Conic 
C----------------------------------------------------------------------
C
650	CONTINUE
C
	EQUIDIST = .TRUE.
C
	CALL WRITEF
	CALL WRITEF('The %S projection requires the following',
     &	     MD2_PRJ(PROJ_INDEX) (3:SIGCHS(MD2_PRJ(PROJ_INDEX))))
	CALL WRITEF('additional information:-')
	CALL WRITEF
C
C Type B is same as other conics
C
	IF (.NOT.TYPEA) THEN
	   DTIPROJ_PROJ_PARAMS(9,DTILUN)=999.0
	   GOTO 505
	ENDIF
C
C Type A
C
	DTIPROJ_PROJ_PARAMS(9,DTILUN)=0.0
	DTIPROJ_PROJ_PARAMS(1,DTILUN)=0.0
	DTIPROJ_PROJ_PARAMS(2,DTILUN)=0.0
	DTIPROJ_PROJ_PARAMS(4,DTILUN)=0.0
C
	IF (HAD_DESCRIPTOR .OR. (DTILUN.EQ.OUT_LUN .AND.
     &	    DTIPROJ_PROJECTION(DTILUN) .EQ.
     &      DTIPROJ_PROJECTION(IN_LUN))) THEN
	   DTIPROJ_PROJ_PARAMS(3,DTILUN) = 0.0
	ENDIF
C
C Get latitude for standard parallel
C
	ASK_PROJ_PARAMS = DMSQU(DTIPROJ_PROJ_PARAMS(3,DTILUN),
     &	         'Latitude of standard parallel',LAT)
C
	IF (.NOT.ASK_PROJ_PARAMS) THEN
	   IF (ASK_PROJ_PARAMS.NE.DTRANS__EOF) THEN
	      GOTO 9999
	   ELSE
	      CALL LSL_PUTMSG(DTRANS__REENTER)
	      GOTO 650
	   ENDIF
	ENDIF
C
C now the same as other conics
C
	GOTO 510
C
C----------------------------------------------------------------------
C 	Transverse Mercator
C----------------------------------------------------------------------
C
700	CONTINUE
C
	CALL WRITEF
	CALL WRITEF('The %S projection requires the following',
     &	     MD2_PRJ(PROJ_INDEX) (3:SIGCHS(MD2_PRJ(PROJ_INDEX))))
	CALL WRITEF('additional information:-')
	CALL WRITEF
C
C	DTIPROJ_PROJ_PARAMS(1,DTILUN) = 0.0		! mod1453
C	DTIPROJ_PROJ_PARAMS(2,DTILUN) = 0.0		! mod1453
C	DTIPROJ_PROJ_PARAMS(4,DTILUN) = 0.0		! mod1453
C
C 	Get scale factor of Central Meridian
C
	IF (HAD_DESCRIPTOR .OR. (DTILUN.EQ.OUT_LUN .AND.
     &	    DTIPROJ_PROJECTION(IN_LUN).NE.
     &      DTIPROJ_PROJECTION(OUT_LUN))) THEN		! set up default
C
C	    DTIPROJ_PROJ_PARAMS(3,DTILUN) = 1.0		! mod1453
C
	ENDIF
C
	ASK_PROJ_PARAMS = DBLQU(DTIPROJ_PROJ_PARAMS(3,DTILUN),
     &	            'Scale factor of central meridian', SCL)
	IF (.NOT.ASK_PROJ_PARAMS) GOTO 9999
C
C Now the same as other conics
C
	GOTO 510
C
C----------------------------------------------------------------------
C Stereographic, Lambert Azimuthal Equal Area, Azimuthal, 
C Gnomonic, and Orthographic 
C----------------------------------------------------------------------
C
750	CALL WRITEF
	CALL WRITEF('The %S projection requires the following',
     &	     MD2_PRJ(PROJ_INDEX) (3:SIGCHS(MD2_PRJ(PROJ_INDEX))))
	CALL WRITEF('additional information:-')
	CALL WRITEF
C
C Initialise first 4 parameters
C
	DO 760, I=1,4
	   DTIPROJ_PROJ_PARAMS(I,DTILUN)=0.0
760	CONTINUE
C
	IF(HAD_DESCRIPTOR .OR. (DTILUN.EQ.OUT_LUN .AND.
     &	    DTIPROJ_PROJECTION(IN_LUN).NE.
     &      DTIPROJ_PROJECTION(OUT_LUN))) THEN
C
	   DO 770, I=5,8
	      DTIPROJ_PROJ_PARAMS(I,DTILUN)=0.0
770	   CONTINUE
	ENDIF
C
780	ASK_PROJ_PARAMS = DMSQU(DTIPROJ_PROJ_PARAMS(6,DTILUN),
     &	         'Latitude of the centre of the projection',LAT)
C
	IF(.NOT.ASK_PROJ_PARAMS)THEN
	   IF(DTIPROJ_PROJECTION(DTILUN).NE.15)THEN
	     GOTO 9999
C
	   ELSE
	     IF(ASK_PROJ_PARAMS.NE.DTRANS__EOF)THEN
	       GOTO 9999
	     ELSE
	       CALL LSL_PUTMSG(DTRANS__REENTER)
	       GOTO 750
	     ENDIF
	   ENDIF
	ENDIF
C
C And longitude.....
C
	ASK_PROJ_PARAMS = DMSQU(DTIPROJ_PROJ_PARAMS(5,DTILUN),
     &	   'Longitude of the centre of the projection', LONG)
C
	IF(.NOT.ASK_PROJ_PARAMS)THEN
	   IF(ASK_PROJ_PARAMS.NE.DTRANS__EOF)THEN
	     GOTO 9999
C
	   ELSE
	     CALL LSL_PUTMSG(DTRANS__REENTER)
	     GOTO 750
	   ENDIF
	ENDIF
C
C Now get false eastings and northings
C
	GOTO 530
C
C----------------------------------------------------------------------
C 	General Vertical Near-side Perspective
C----------------------------------------------------------------------
C
800	CALL WRITEF
	CALL WRITEF('The %S projection requires the following',
     &	     MD2_PRJ(PROJ_INDEX) (3:SIGCHS(MD2_PRJ(PROJ_INDEX))))
	CALL WRITEF('additional information:-')
	CALL WRITEF
C
	DTIPROJ_PROJ_PARAMS(1,DTILUN)=0.0
	DTIPROJ_PROJ_PARAMS(2,DTILUN)=0.0
	DTIPROJ_PROJ_PARAMS(4,DTILUN)=0.0
C
C get height of perspective point above surface
C
	IF (HAD_DESCRIPTOR .OR. (DTILUN.EQ.OUT_LUN .AND.
     &	    DTIPROJ_PROJECTION(IN_LUN).NE.
     &      DTIPROJ_PROJECTION(OUT_LUN))) THEN		! set up default
C
	   DTIPROJ_PROJ_PARAMS(3,DTILUN)=0.0
	ENDIF
C
	ASK_PROJ_PARAMS = DBLQU(DTIPROJ_PROJ_PARAMS(3,DTILUN),
     &	            'Height of perspective point above '//
     &	            'surface',COORD)
C
	IF (.NOT.ASK_PROJ_PARAMS) GOTO 9999
C
C now the same as other shperical projections
C
	GOTO 780
C
C----------------------------------------------------------------------
C Sinusoidal, Miller Cylindrical and Van der Grinten projection
C also Equi-rectangular, Mollweide, Hammer-Aitoff and Winkel III
C----------------------------------------------------------------------
C
840	EQUIRECT = .TRUE.		! Equirectangular 
C
850	CALL WRITEF			! All the rest
	CALL WRITEF('The %S projection requires the following',
     &	     MD2_PRJ(PROJ_INDEX) (3:SIGCHS(MD2_PRJ(PROJ_INDEX))))
	CALL WRITEF('additional information:-')
	CALL WRITEF
C
C First 4 parameters are 0.0
C
	DTIPROJ_PROJ_PARAMS(1,DTILUN)=0.0
	DTIPROJ_PROJ_PARAMS(2,DTILUN)=0.0
	DTIPROJ_PROJ_PARAMS(3,DTILUN)=0.0
	DTIPROJ_PROJ_PARAMS(4,DTILUN)=0.0
C
C Get longitude of central meridian
C
	IF (HAD_DESCRIPTOR .OR. (DTILUN.EQ.OUT_LUN .AND.
     &	    DTIPROJ_PROJECTION(IN_LUN).NE.
     &      DTIPROJ_PROJECTION(OUT_LUN)))
     &     DTIPROJ_PROJ_PARAMS(5,DTILUN) = 0.0
C
	ASK_PROJ_PARAMS = DMSQU(DTIPROJ_PROJ_PARAMS(5,DTILUN),
     &     'Longitude of the central meridian', LONG)
C
	IF (.NOT.ASK_PROJ_PARAMS) GOTO 9999
C
C Get latitude of true scale, for equi-rectangular projection
C
	IF(.NOT.EQUIRECT) THEN
	  DTIPROJ_PROJ_PARAMS(6,DTILUN)=0.0
C
	ELSE
	  IF(HAD_DESCRIPTOR .OR. (DTILUN.EQ.OUT_LUN .AND.
     &	    DTIPROJ_PROJECTION(IN_LUN).NE.
     &      DTIPROJ_PROJECTION(OUT_LUN)))
     &	   DTIPROJ_PROJ_PARAMS(6,DTILUN)=0.0
C
	   ASK_PROJ_PARAMS = DMSQU(DTIPROJ_PROJ_PARAMS(6,DTILUN),
     &	         'Latitude that has true scale',LAT)
C
	   IF (.NOT.ASK_PROJ_PARAMS) THEN
	      IF (ASK_PROJ_PARAMS.NE.DTRANS__EOF) THEN
	         GOTO 9999
	      ELSE
	         CALL LSL_PUTMSG(DTRANS__REENTER)
	         GOTO 850
	      ENDIF
	   ENDIF
	ENDIF
C
C rest is same as projection 3 and 4
C
	GOTO 530
C
C----------------------------------------------------------------------
C 	Oblique Mercator (Hotine)
C----------------------------------------------------------------------
C
900	CALL WRITEF
	CALL WRITEF('The %S projection requires the following',
     &	     MD2_PRJ(PROJ_INDEX)(3:SIGCHS(MD2_PRJ(PROJ_INDEX))))
	CALL WRITEF('additional information:-')
	CALL WRITEF
C
C First two parameters are zero
C
	DTIPROJ_PROJ_PARAMS(1,DTILUN)=0.0
	DTIPROJ_PROJ_PARAMS(2,DTILUN)=0.0
C
C Scale factor at centre of projection
C
	IF(HAD_DESCRIPTOR .OR. (DTILUN.EQ.OUT_LUN .AND.
     &	    DTIPROJ_PROJECTION(IN_LUN).NE.
     &    DTIPROJ_PROJECTION(OUT_LUN)))
     &	  DTIPROJ_PROJ_PARAMS(3,DTILUN)=1.0
C
	ASK_PROJ_PARAMS = DBLQU(DTIPROJ_PROJ_PARAMS(3,DTILUN),
     &	         'Scale factor at centre of projection',SCL)
C
	IF (.NOT.ASK_PROJ_PARAMS) THEN
	   IF (ASK_PROJ_PARAMS.NE.DTRANS__EOF) THEN
	      GOTO 9999
	   ELSE
	      CALL LSL_PUTMSG(DTRANS__REENTER)
	      GOTO 900
	   ENDIF
	ENDIF
C
C Type B, azimuth angle east of north of central line
C longtitude of point on central line where azimuth is measured
C
	IF (TYPEA) THEN
	   DTIPROJ_PROJ_PARAMS(4,DTILUN)=0.0
	   DTIPROJ_PROJ_PARAMS(5,DTILUN)=0.0
C
	ELSE
	   IF(HAD_DESCRIPTOR .OR. (DTILUN.EQ.OUT_LUN .AND.
     &        DTIPROJ_PROJECTION(DTILUN).NE.
     &	      DTIPROJ_PROJECTION(IN_LUN)))THEN
	     DTIPROJ_PROJ_PARAMS(4,DTILUN)=0.0
	     DTIPROJ_PROJ_PARAMS(5,DTILUN)=0.0
	   ENDIF
C
	   ASK_PROJ_PARAMS = DMSQU(DTIPROJ_PROJ_PARAMS(4,DTILUN),
     &	          'Angle (clockwise from north) of central line',0)
	   IF (.NOT.ASK_PROJ_PARAMS) THEN
	      IF (ASK_PROJ_PARAMS.NE.DTRANS__EOF) THEN
	         GOTO 9999
	      ELSE
	         CALL LSL_PUTMSG(DTRANS__REENTER)
	         GOTO 900
	      ENDIF
	   ENDIF
C
	   ASK_PROJ_PARAMS = DMSQU(DTIPROJ_PROJ_PARAMS(5,DTILUN),
     &	          'Longitude of point where azimuth of central '//
     &	          'line is measured',LONG)
	   IF (.NOT.ASK_PROJ_PARAMS) THEN
	      IF (ASK_PROJ_PARAMS.NE.DTRANS__EOF) THEN
	         GOTO 9999
	      ELSE
	         CALL LSL_PUTMSG(DTRANS__REENTER)
	         GOTO 900
	      ENDIF
	   ENDIF
	ENDIF
C
C Latitude of centre of map, and false origin
C
	IF (HAD_DESCRIPTOR .OR. (DTILUN.EQ.OUT_LUN .AND.
     &	    DTIPROJ_PROJECTION(DTILUN).NE.
     &      DTIPROJ_PROJECTION(IN_LUN)))THEN
C
	   DTIPROJ_PROJ_PARAMS(6,DTILUN)=0.0
	   DTIPROJ_PROJ_PARAMS(7,DTILUN)=0.0
	   DTIPROJ_PROJ_PARAMS(8,DTILUN)=0.0
	ENDIF
C
	ASK_PROJ_PARAMS = DMSQU(DTIPROJ_PROJ_PARAMS(6,DTILUN),
     &	 'Latitude of centre of projection (on central line)',LAT)
C
	IF (.NOT.ASK_PROJ_PARAMS) THEN
	   IF (ASK_PROJ_PARAMS.NE.DTRANS__EOF) THEN
	      GOTO 9999
	   ELSE
	      CALL LSL_PUTMSG(DTRANS__REENTER)
	      GOTO 900
	   ENDIF
	ENDIF
C
	ASK_PROJ_PARAMS = DBLQU(DTIPROJ_PROJ_PARAMS(7,DTILUN),
     &	       'Eastings of the origin of the projection',COORD)
C
	IF (.NOT.ASK_PROJ_PARAMS) THEN
	   IF (ASK_PROJ_PARAMS.NE.DTRANS__EOF) THEN
	      GOTO 9999
	   ELSE
	      CALL LSL_PUTMSG(DTRANS__REENTER)
	      GOTO 900
	   ENDIF
	ENDIF
C
	ASK_PROJ_PARAMS = DBLQU(DTIPROJ_PROJ_PARAMS(8,DTILUN),
     &	       'Northings of the origin of the projection',COORD)
C
	IF (.NOT.ASK_PROJ_PARAMS) THEN
	   IF (ASK_PROJ_PARAMS.NE.DTRANS__EOF) THEN
	      GOTO 9999
	   ELSE
	      CALL LSL_PUTMSG(DTRANS__REENTER)
	      GOTO 900
	   ENDIF
	ENDIF
C
C Type A - end points of central line
C
	IF (.NOT.TYPEA) THEN
	   DTIPROJ_PROJ_PARAMS(9 ,DTILUN)=0.0
	   DTIPROJ_PROJ_PARAMS(10,DTILUN)=0.0
	   DTIPROJ_PROJ_PARAMS(11,DTILUN)=0.0
	   DTIPROJ_PROJ_PARAMS(12,DTILUN)=0.0
C
	ELSE
	   IF(HAD_DESCRIPTOR .OR. (DTILUN.EQ.OUT_LUN .AND.
     &	    DTIPROJ_PROJECTION(DTILUN).NE.
     & 	      DTIPROJ_PROJECTION(IN_LUN)))THEN
	      DTIPROJ_PROJ_PARAMS(9, DTILUN)=0.0
	      DTIPROJ_PROJ_PARAMS(10,DTILUN)=0.0
	      DTIPROJ_PROJ_PARAMS(11,DTILUN)=0.0
	      DTIPROJ_PROJ_PARAMS(12,DTILUN)=45000000.0
	   ENDIF
C
	   ASK_PROJ_PARAMS = DMSQU(DTIPROJ_PROJ_PARAMS(10,DTILUN),
     &	          'Latitude of 1st point on central line',LAT)
	   IF (.NOT.ASK_PROJ_PARAMS) THEN
	      IF (ASK_PROJ_PARAMS.NE.DTRANS__EOF) THEN
	         GOTO 9999
	      ELSE
	         CALL LSL_PUTMSG(DTRANS__REENTER)
	         GOTO 900
	      ENDIF
	   ENDIF
C
	   ASK_PROJ_PARAMS = DMSQU(DTIPROJ_PROJ_PARAMS(9,DTILUN),
     &	          'Longitude of 1st point on central line',LONG)
	   IF (.NOT.ASK_PROJ_PARAMS) THEN
	      IF (ASK_PROJ_PARAMS.NE.DTRANS__EOF) THEN
	         GOTO 9999
	      ELSE
	         CALL LSL_PUTMSG(DTRANS__REENTER)
	         GOTO 900
	      ENDIF
	   ENDIF
C
	   ASK_PROJ_PARAMS = DMSQU(DTIPROJ_PROJ_PARAMS(12,DTILUN),
     &	          'Latitude of 2nd point on central line',LAT)
	   IF (.NOT.ASK_PROJ_PARAMS) THEN
	      IF (ASK_PROJ_PARAMS.NE.DTRANS__EOF) THEN
	         GOTO 9999
	      ELSE
	         CALL LSL_PUTMSG(DTRANS__REENTER)
	         GOTO 900
	      ENDIF
	   ENDIF
C
	   ASK_PROJ_PARAMS = DMSQU(DTIPROJ_PROJ_PARAMS(11,DTILUN),
     &	          'Longitude of 2nd point on central line',LONG)
	   IF (.NOT.ASK_PROJ_PARAMS) THEN
	      IF (ASK_PROJ_PARAMS.NE.DTRANS__EOF) THEN
	         GOTO 9999
	      ELSE
	         CALL LSL_PUTMSG(DTRANS__REENTER)
	         GOTO 900
	      ENDIF
	   ENDIF
C
C Check for valid DTIPROJ_PROJ_PARAMS(12,DTILUN) value
C - cannot be the same as DTIPROJ_PROJ_PARAMS(10,DTILUN)
C
	   IF (DTIPROJ_PROJ_PARAMS(12,DTILUN).EQ.
     &         DTIPROJ_PROJ_PARAMS(10,DTILUN))THEN
	       CALL LSL_PUTMSG(DTRANS__INVALLATS)
	       GOTO 900
	   ENDIF
	ENDIF
C
C DTIPROJ_PROJ_PARAMS(13) is a flag to say which type we have
C
	IF (TYPEA) THEN
	   DTIPROJ_PROJ_PARAMS(13,DTILUN)=0.0
	ELSE
	   DTIPROJ_PROJ_PARAMS(13,DTILUN)=999.0
	ENDIF	
C
C Initialise remaining values
	DTIPROJ_PROJ_PARAMS(14,DTILUN)=0.0
	DTIPROJ_PROJ_PARAMS(15,DTILUN)=0.0
C
	GOTO 9999
C
C----------------------------------------------------------------------
C 	Oblique Mercator (Spherical)
C----------------------------------------------------------------------
C
950	CALL WRITEF
	CALL WRITEF('The %S projection requires the following',
     &	     MD2_PRJ(PROJ_INDEX) (3:SIGCHS(MD2_PRJ(PROJ_INDEX))))
	CALL WRITEF('additional information:-')
	CALL WRITEF
C
C First two parameters are zero
C
	DTIPROJ_PROJ_PARAMS(1,DTILUN)=0.0
	DTIPROJ_PROJ_PARAMS(2,DTILUN)=0.0
C
C scale factor at centre of projection
C
	IF (HAD_DESCRIPTOR .OR. (DTILUN.EQ.OUT_LUN .AND.
     &	    DTIPROJ_PROJECTION(DTILUN).NE.
     &      DTIPROJ_PROJECTION(IN_LUN)))
     &      DTIPROJ_PROJ_PARAMS(3,DTILUN)=1.0
C
	ASK_PROJ_PARAMS = DBLQU(DTIPROJ_PROJ_PARAMS(3,DTILUN),
     &	         'Scale factor on false equator',SCL)
C
	IF (.NOT.ASK_PROJ_PARAMS) THEN
	   IF (ASK_PROJ_PARAMS.NE.DTRANS__EOF) THEN
	      GOTO 9999
	   ELSE
	      CALL LSL_PUTMSG(DTRANS__REENTER)
	      GOTO 950
	   ENDIF
	ENDIF
C
	DTIPROJ_PROJ_PARAMS(4,DTILUN)=0.0
	DTIPROJ_PROJ_PARAMS(5,DTILUN)=0.0
	DTIPROJ_PROJ_PARAMS(6,DTILUN)=0.0
C
C now get false origin (in geographicals!)
C
	IF (HAD_DESCRIPTOR .OR. (DTILUN.EQ.OUT_LUN .AND.
     &	    DTIPROJ_PROJECTION(DTILUN).NE.
     &     DTIPROJ_PROJECTION(IN_LUN)))THEN
	   DTIPROJ_PROJ_PARAMS(7,DTILUN)=0.0
	   DTIPROJ_PROJ_PARAMS(8,DTILUN)=0.0
	ENDIF
C
	ASK_PROJ_PARAMS = DMSQU(DTIPROJ_PROJ_PARAMS(8,DTILUN),
     &	       'Latitude  of datum of projection',LAT)
	IF (.NOT.ASK_PROJ_PARAMS) THEN
	   IF (ASK_PROJ_PARAMS.NE.DTRANS__EOF) THEN
	      GOTO 9999
	   ELSE
	      CALL LSL_PUTMSG(DTRANS__REENTER)
	      GOTO 950
	   ENDIF
	ENDIF
C
	ASK_PROJ_PARAMS = DMSQU(DTIPROJ_PROJ_PARAMS(7,DTILUN),
     &	       'Longitude of datum of projection',LONG)
	IF (.NOT.ASK_PROJ_PARAMS) THEN
	   IF (ASK_PROJ_PARAMS.NE.DTRANS__EOF) THEN
	      GOTO 9999
C
	   ELSE
	      CALL LSL_PUTMSG(DTRANS__REENTER)
	      GOTO 950
	   ENDIF
	ENDIF
C
C Type A - end points of central line
C
	IF (TYPEA) THEN
	   IF(HAD_DESCRIPTOR .OR. (DTILUN.EQ.OUT_LUN .AND.
     &	    DTIPROJ_PROJECTION(DTILUN).NE.
     &        DTIPROJ_PROJECTION(IN_LUN)))THEN
	     DTIPROJ_PROJ_PARAMS(9 ,DTILUN)=0.0
	     DTIPROJ_PROJ_PARAMS(10,DTILUN)=0.0
	     DTIPROJ_PROJ_PARAMS(11,DTILUN)=0.0
	     DTIPROJ_PROJ_PARAMS(12,DTILUN)=0.0
	   ENDIF
C
	   ASK_PROJ_PARAMS = DMSQU(DTIPROJ_PROJ_PARAMS(10,DTILUN),
     &	          'Latitude of 1st point on central line',LAT)
	   IF (.NOT.ASK_PROJ_PARAMS) THEN
	      IF (ASK_PROJ_PARAMS.NE.DTRANS__EOF) THEN
	         GOTO 9999
	      ELSE
	         CALL LSL_PUTMSG(DTRANS__REENTER)
	         GOTO 950
	      ENDIF
	   ENDIF
C
	   ASK_PROJ_PARAMS = DMSQU(DTIPROJ_PROJ_PARAMS(9,DTILUN),
     &	          'Longitude of 1st point on central line',LONG)
	   IF (.NOT.ASK_PROJ_PARAMS) THEN
	      IF (ASK_PROJ_PARAMS.NE.DTRANS__EOF) THEN
	         GOTO 9999
	      ELSE
	         CALL LSL_PUTMSG(DTRANS__REENTER)
	         GOTO 950
	      ENDIF
	   ENDIF
C
	   ASK_PROJ_PARAMS = DMSQU(DTIPROJ_PROJ_PARAMS(12,DTILUN),
     &	          'Latitude of 2nd point on central line',LAT)
	   IF (.NOT.ASK_PROJ_PARAMS) THEN
	      IF (ASK_PROJ_PARAMS.NE.DTRANS__EOF) THEN
	         GOTO 9999
	      ELSE
	         CALL LSL_PUTMSG(DTRANS__REENTER)
	         GOTO 950
	      ENDIF
	   ENDIF
C
	   ASK_PROJ_PARAMS = DMSQU(DTIPROJ_PROJ_PARAMS(11,DTILUN),
     &	          'Longitude of 2nd point on central line',LONG)
	   IF (.NOT.ASK_PROJ_PARAMS) THEN
	      IF (ASK_PROJ_PARAMS.NE.DTRANS__EOF) THEN
	         GOTO 9999
	      ELSE
	         CALL LSL_PUTMSG(DTRANS__REENTER)
	         GOTO 950
	      ENDIF
	   ENDIF
	ELSE
C
C type B - geographicals of vertex
C
	   IF(HAD_DESCRIPTOR .OR. (DTILUN.EQ.OUT_LUN .AND.
     &	      DTIPROJ_PROJECTION(DTILUN) .NE.
     &        DTIPROJ_PROJECTION(IN_LUN))) THEN	!set up defaults
	     DTIPROJ_PROJ_PARAMS(9,DTILUN)=0.0
	     DTIPROJ_PROJ_PARAMS(10,DTILUN)=0.0
	   ENDIF
C
	   ASK_PROJ_PARAMS = DMSQU(DTIPROJ_PROJ_PARAMS(10,DTILUN),
     &	          'Latitude  of vertex of central line',LAT)
	   IF (.NOT.ASK_PROJ_PARAMS) THEN
	      IF (ASK_PROJ_PARAMS.NE.DTRANS__EOF) THEN
	         GOTO 9999
	      ELSE
	         CALL LSL_PUTMSG(DTRANS__REENTER)
	         GOTO 950
	      ENDIF
	   ENDIF
C
	   ASK_PROJ_PARAMS = DMSQU(DTIPROJ_PROJ_PARAMS(9,DTILUN),
     &	          'Longitude of vertex of central line',LONG)
	   IF (.NOT.ASK_PROJ_PARAMS) THEN
	      IF (ASK_PROJ_PARAMS.NE.DTRANS__EOF) THEN
	         GOTO 9999
	      ELSE
	         CALL LSL_PUTMSG(DTRANS__REENTER)
	         GOTO 950
	      ENDIF
	   ENDIF
C
	   DTIPROJ_PROJ_PARAMS(11,DTILUN)=0.0
	   DTIPROJ_PROJ_PARAMS(12,DTILUN)=0.0
	ENDIF
C
C DTIPROJ_PROJ_PARAMS(13,DTILUN) is a flag to say 
C which type we have
C
	IF (TYPEA) THEN
	   DTIPROJ_PROJ_PARAMS(13,DTILUN)=0.0
	ELSE
	   DTIPROJ_PROJ_PARAMS(13,DTILUN)=999.0
	ENDIF	
C
C Initialise remaining values
	DTIPROJ_PROJ_PARAMS(14,DTILUN)=0.0
	DTIPROJ_PROJ_PARAMS(15,DTILUN)=0.0
C
	GOTO 9999
C
C----------------------------------------------------------------------
C 	Stereographic (UKSL formulae)
C----------------------------------------------------------------------
C
1000	CALL WRITEF
	CALL WRITEF('The %S projection requires the following',
     &	     MD2_PRJ(PROJ_INDEX) (3:SIGCHS(MD2_PRJ(PROJ_INDEX))))
	CALL WRITEF('additional information:-')
	CALL WRITEF
C
C parameters 1-3 are blank
C
	DO 1010, I=1,3
	   DTIPROJ_PROJ_PARAMS(I,DTILUN)=0.0
1010	CONTINUE
C
	IF(HAD_DESCRIPTOR .OR. (DTILUN.EQ.OUT_LUN .AND.
     &	    DTIPROJ_PROJECTION(DTILUN).NE.
     &     DTIPROJ_PROJECTION(IN_LUN)))THEN
	   DO 1020, I=4,8
	      DTIPROJ_PROJ_PARAMS(I,DTILUN)=0.0
1020	   CONTINUE
	ENDIF
C
C Ask for radius of conformal earth
C
	ASK_PROJ_PARAMS = DBLQU(DTIPROJ_PROJ_PARAMS(4,DTILUN),
     &     'Radius of Conformal Earth',COORD)
	IF (.NOT.ASK_PROJ_PARAMS) GOTO 9999
C
C Ask for latitude of centre of projection
C
	ASK_PROJ_PARAMS = DMSQU(DTIPROJ_PROJ_PARAMS(6,DTILUN),
     &	         'Latitude of the centre of the projection',LAT)
C
	IF (.NOT.ASK_PROJ_PARAMS) THEN
	    IF (ASK_PROJ_PARAMS.NE.DTRANS__EOF) THEN
	       GOTO 9999
C
	    ELSE
	       CALL LSL_PUTMSG(DTRANS__REENTER)
	       GOTO 1000
	   ENDIF
	ENDIF
C
C And longitude...
C
	ASK_PROJ_PARAMS = DMSQU(DTIPROJ_PROJ_PARAMS(5,DTILUN),
     &	         'Longitude of the centre of the projection',LONG)
	IF (.NOT.ASK_PROJ_PARAMS) THEN
	   IF (ASK_PROJ_PARAMS.NE.DTRANS__EOF) THEN
	      GOTO 9999
	   ELSE
	      CALL LSL_PUTMSG(DTRANS__REENTER)
	      GOTO 1000
	   ENDIF
	ENDIF
C
C now get false eastings and northings
C
	GOTO 530
C
C----------------------------------------------------------------------
C Cassini
C------------------------------------------------------------------------
C
1050	CONTINUE
C
C write out header for parameters for this projection
C
	CALL WRITEF
	CALL WRITEF('The %S projection requires the following',
     &	     MD2_PRJ(PROJ_INDEX) (3:SIGCHS(MD2_PRJ(PROJ_INDEX))))
	CALL WRITEF('additional information:-')
	CALL WRITEF
C
	DTIPROJ_PROJ_PARAMS(1,DTILUN)=0.0
	DTIPROJ_PROJ_PARAMS(2,DTILUN)=0.0
	DTIPROJ_PROJ_PARAMS(3,DTILUN)=0.0
	DTIPROJ_PROJ_PARAMS(4,DTILUN)=0.0
C
	IF(HAD_DESCRIPTOR .OR. (DTILUN.EQ.OUT_LUN .AND.
     &	    DTIPROJ_PROJECTION(IN_LUN).NE.
     &      DTIPROJ_PROJECTION(OUT_LUN)))THEN		! setup default
	   DTIPROJ_PROJ_PARAMS(5,DTILUN)=0.0
	   DTIPROJ_PROJ_PARAMS(6,DTILUN)=0.0
	   DTIPROJ_PROJ_PARAMS(7,DTILUN)=0.0
	   DTIPROJ_PROJ_PARAMS(8,DTILUN)=0.0
	ENDIF
C
	ASK_PROJ_PARAMS = DMSQU(DTIPROJ_PROJ_PARAMS(6,DTILUN),
     &	                  'Latitude of the origin ',LAT)
	IF (.NOT.ASK_PROJ_PARAMS) GOTO 9999
C
	ASK_PROJ_PARAMS = DMSQU(DTIPROJ_PROJ_PARAMS(5,DTILUN),
     &	      'Longitude of the central meridian',LONG )
	IF (.NOT.ASK_PROJ_PARAMS) THEN
	   IF (ASK_PROJ_PARAMS.NE.DTRANS__EOF) THEN
	      GOTO 9999
	   ELSE
	      CALL LSL_PUTMSG(DTRANS__REENTER)
	      GOTO 1050
	   ENDIF
	ENDIF
C
C Get false origin
C
	GOTO 530
C
C------------------------------------------------------------------------
C Krovak
C------------------------------------------------------------------------
C
1100	CONTINUE
C
C write out header for parameters for this projection
C
	CALL WRITEF
	CALL WRITEF('The %S projection requires the following',
     &	     MD2_PRJ(PROJ_INDEX) (3:SIGCHS(MD2_PRJ(PROJ_INDEX))))
	CALL WRITEF('additional information:-')
	CALL WRITEF

	DTIPROJ_PROJ_PARAMS(1,DTILUN)=0.0
	DTIPROJ_PROJ_PARAMS(2,DTILUN)=0.0

	IF(HAD_DESCRIPTOR .OR. (DTILUN.EQ.OUT_LUN .AND.
     &	    DTIPROJ_PROJECTION(IN_LUN).NE.
     &      DTIPROJ_PROJECTION(OUT_LUN)))THEN		! setup default
	   DTIPROJ_PROJ_PARAMS(3,DTILUN)=0.0
	   DTIPROJ_PROJ_PARAMS(4,DTILUN)=0.0
	   DTIPROJ_PROJ_PARAMS(5,DTILUN)=0.0
	   DTIPROJ_PROJ_PARAMS(6,DTILUN)=1.0
	   DTIPROJ_PROJ_PARAMS(7,DTILUN)=0.0
	   DTIPROJ_PROJ_PARAMS(8,DTILUN)=0.0
	   DTIPROJ_PROJ_PARAMS(9,DTILUN)=0.0
	   DTIPROJ_PROJ_PARAMS(10,DTILUN) = 0.0
	ENDIF
C
	ASK_PROJ_PARAMS = DMSQU(DTIPROJ_PROJ_PARAMS(9,DTILUN),
     &	       'Latitude at which to calculate conformal sphere',LAT)
	IF (.NOT.ASK_PROJ_PARAMS) GOTO 9999
C
	ASK_PROJ_PARAMS = DMSQU(DTIPROJ_PROJ_PARAMS(4,DTILUN),
     &	            'Latitude of origin',LAT)
	IF (.NOT.ASK_PROJ_PARAMS) THEN
	   IF (ASK_PROJ_PARAMS.NE.DTRANS__EOF) THEN
	      GOTO 9999
	   ELSE
	      CALL LSL_PUTMSG(DTRANS__REENTER)
	      GOTO 1100
	   ENDIF
	ENDIF
C
	ASK_PROJ_PARAMS = DMSQU(DTIPROJ_PROJ_PARAMS(3,DTILUN),
     &	               'Longitude of origin',LONG)
	IF (.NOT.ASK_PROJ_PARAMS) THEN
	   IF (ASK_PROJ_PARAMS.NE.DTRANS__EOF) THEN
	      GOTO 9999
	   ELSE
	      CALL LSL_PUTMSG(DTRANS__REENTER)
	      GOTO 1100
	   ENDIF
	ENDIF
C
	ASK_PROJ_PARAMS = DMSQU(DTIPROJ_PROJ_PARAMS(5,DTILUN),
     &	               'Latitude of origin on conformal sphere',LAT)
	IF (.NOT.ASK_PROJ_PARAMS) THEN
	   IF (ASK_PROJ_PARAMS.NE.DTRANS__EOF) THEN
	      GOTO 9999
	   ELSE
	      CALL LSL_PUTMSG(DTRANS__REENTER)
	      GOTO 1100
	   ENDIF
	ENDIF
C
	ASK_PROJ_PARAMS = DBLQU(DTIPROJ_PROJ_PARAMS(6,DTILUN),
     &	            'Scale factor on parallel through origin',SCL)
C
	IF (.NOT.ASK_PROJ_PARAMS) THEN
	   IF (ASK_PROJ_PARAMS.NE.DTRANS__EOF) THEN
	      GOTO 9999
	   ELSE
	      CALL LSL_PUTMSG(DTRANS__REENTER)
	      GOTO 1100
	   ENDIF
	ENDIF
C
C get false origin (don't use common code, as it clears PAR(9) which
C we are using)
C
	ASK_PROJ_PARAMS = DBLQU(DTIPROJ_PROJ_PARAMS(7,DTILUN),
     &	       'Eastings of the origin of the projection',COORD)
C
	IF (.NOT.ASK_PROJ_PARAMS) THEN
	   IF (ASK_PROJ_PARAMS.NE.DTRANS__EOF) THEN
	      GOTO 9999
	   ELSE
	      CALL LSL_PUTMSG(DTRANS__REENTER)
	      GOTO 1100
	   ENDIF
	ENDIF
C
	ASK_PROJ_PARAMS = DBLQU(DTIPROJ_PROJ_PARAMS(8,DTILUN),
     &	       'Northings of the origin of the projection',COORD)
C
	IF (.NOT.ASK_PROJ_PARAMS) THEN
	   IF (ASK_PROJ_PARAMS.NE.DTRANS__EOF) THEN
	      GOTO 9999
	   ELSE
	      CALL LSL_PUTMSG(DTRANS__REENTER)
	      GOTO 1100
	   ENDIF
	ENDIF
C
	IF (TYPEA) THEN
	   DTIPROJ_PROJ_PARAMS(10,DTILUN) = 0.0
	ELSE
	   DTIPROJ_PROJ_PARAMS(10,DTILUN) = 999.0
	ENDIF
C
C fill rest with 0.0
C
	DO 1105, I=11,15
	   DTIPROJ_PROJ_PARAMS(I,DTILUN)=0.0
1105	CONTINUE
C
	GOTO 9999
C
C------------------------------------------------------------------------
C Bonne
C------------------------------------------------------------------------
C
1150	CONTINUE
C
C write out header for parameters for this projection
C
	CALL WRITEF
	CALL WRITEF('The %S projection requires the following',
     &	     MD2_PRJ(PROJ_INDEX) (3:SIGCHS(MD2_PRJ(PROJ_INDEX))))
	CALL WRITEF('additional information:-')
	CALL WRITEF
C
C these parameters are not used
	DTIPROJ_PROJ_PARAMS(1,DTILUN)  = 0.0
	DTIPROJ_PROJ_PARAMS(2,DTILUN)  = 0.0
	DTIPROJ_PROJ_PARAMS(4,DTILUN)  = 0.0
	DTIPROJ_PROJ_PARAMS(6,DTILUN)  = 0.0
C
	DO 1155 , I = 9,15
	   DTIPROJ_PROJ_PARAMS(I,DTILUN) = 0.0
1155	CONTINUE
C
	IF (HAD_DESCRIPTOR .OR. (DTILUN.EQ.OUT_LUN .AND.
     &	    DTIPROJ_PROJECTION(IN_LUN) .NE.
     &      DTIPROJ_PROJECTION(OUT_LUN))) THEN		! setup default
C
	   DTIPROJ_PROJ_PARAMS(3,DTILUN)=45000000.0
	   DTIPROJ_PROJ_PARAMS(5,DTILUN)=0.0
	   DTIPROJ_PROJ_PARAMS(7,DTILUN)=0.0
	   DTIPROJ_PROJ_PARAMS(8,DTILUN)=0.0
	ENDIF
C
C latitude of standard parallel
C
	ASK_PROJ_PARAMS = DMSQU(DTIPROJ_PROJ_PARAMS(3,DTILUN),
     &	               'Latitude of standard parallel',LAT)
	IF (.NOT.ASK_PROJ_PARAMS) GOTO 9999
C
C longitude of central meridian
C
	ASK_PROJ_PARAMS = DMSQU(DTIPROJ_PROJ_PARAMS(5,DTILUN),
     &	         'Longitude of the central meridian',LONG )
	IF (.NOT.ASK_PROJ_PARAMS) THEN
	   IF (ASK_PROJ_PARAMS.NE.DTRANS__EOF) THEN
	      GOTO 9999
	   ELSE
	      CALL LSL_PUTMSG(DTRANS__REENTER)
	      GOTO 1150
	   ENDIF
	ENDIF
C
C get false origin
C
	GOTO 530
C
C------------------------------------------------------------------------
C Modified-Stereographic
C------------------------------------------------------------------------
C
1250	CONTINUE
C
C write out header for parameters for this projection
C
	CALL WRITEF
	CALL WRITEF('The %S projection requires the following',
     &	     MD2_PRJ(PROJ_INDEX) (3:SIGCHS(MD2_PRJ(PROJ_INDEX))))
	CALL WRITEF('additional information:-')
	CALL WRITEF
C
C these parameters are 0.0
C
	DTIPROJ_PROJ_PARAMS(1,DTILUN)=0.0
	DTIPROJ_PROJ_PARAMS(2,DTILUN)=0.0
	DTIPROJ_PROJ_PARAMS(3,DTILUN)=0.0
	DTIPROJ_PROJ_PARAMS(4,DTILUN)=0.0
C
C ask for the modified-stereographic projection code
C
	GOTO 1270	! skip (use of ITRANS HAD_LEARN not implemented)
C
C list available modified-stereographic projections (in pairs)
C
 1255	CONTINUE
C
	CALL WRITEF(' ')	
	CALL WRITEF('Allowable modified-stereographic projections '//
     &              'and their codes are:-')
	CALL WRITEF(' ')
C
	DO 1260, I=1,MD2_NOMOD/2
	   J=I*2-1
	   CALL WRITEF('%^L%I3%S  %I3%S',MD2_MODCD(J),MD2_MOD(J),
     &	                 MD2_MODCD(J+1),MD2_MOD(J+1))
 1260	CONTINUE
C
C and any odd one
C
	IF (MOD(MD2_NOMOD,2).NE.0) CALL WRITEF('%^L%I3%S',
     &	      		 MD2_MODCD(MD2_NOMOD),MD2_MOD(MD2_NOMOD))
C
C add an explanation
C
	CALL WRITEF
	CALL WRITEF('Note: projections marked "*" are defined for '//
     &	            'the sphere, not the spheroid.')
	CALL WRITEF('      If a spheroid is defined, then the sphere '//
     &	            'with the same surface area')
	CALL WRITEF('      as the spheroid is used')
C
C ask for projection code
C
 1270	CALL WRITEF(' ')
C
	J = MD2_MODCD(1)
	NOCHAR = EXPAND('Enter modified-stereographic projection '//
     &                  'code (%^L%N): ',J)
	ASK_PROJ_PARAMS = TTRSTR(,LEN,EXPDSC,ERROR)
C
	IF (.NOT.ASK_PROJ_PARAMS) THEN			!  error
	   IF (ASK_PROJ_PARAMS.NE.LSL__EOF) THEN
	      ASK_PROJ_PARAMS = ERROR
	      CALL LSL_PUTMSG(ERROR)
	      GOTO 9999
C
	   ELSE
	      ASK_PROJ_PARAMS = DTRANS__EOF
	      CALL LSL_PUTMSG(ASK_PROJ_PARAMS)
	      GOTO 9999					! quit
	   ENDIF
C
	ELSEIF (LEN.EQ.0) THEN				! take default
	   GOTO 1290
	ENDIF
C
	CALL BSLN
C
C check for ?
C
	IF (RDCHS(ICH)) THEN
	   CALL LSL_PUTMSG(DTRANS__UNEXPEOL)
	   GOTO 1270
C
	ELSE
	   IF (ICH.EQ.'?') THEN
	      GOTO 1255
	   ELSE
	      CALL BSCH
	   ENDIF
	ENDIF	
C
C read a value
C
	IF (RDLONG(J)) THEN
	   IF (ERRNUM.EQ.LSL__HADEXCP) THEN
	      CALL LSL_PUTMSG(LSL_EXCP)
	   ELSE
	      CALL LSL_PUTMSG(ERRNUM)
	   ENDIF
C
	   GOTO 1270
C
C check for end of line
C
	ELSEIF (.NOT.RDCHS(ICH)) THEN
	   CALL LSL_PUTMSG(DTRANS__UNEXPCH,ICH)
	   GOTO 1270
	ENDIF	
C
C check if this is a valid code
C
 1290	CONTINUE
C
	DO 1295, I=1,MD2_NOMOD
	   IF (J.EQ.MD2_MODCD(I)) THEN
	      MODIND=I
	      GOTO 1310
	   ENDIF
 1295	CONTINUE
C
C invalid projection code
C
	CALL LSL_PUTMSG(DTRANS__BADMODSTOPT,J)
	GOTO 1255
C
 1310	CONTINUE
C
	CALL WRITEF('%S(%S)',BLANK(1:NOCHAR),
     &	            MD2_MOD(MODIND)(3:SIGCHS(MD2_MOD(MODIND))))
C
	DTIPROJ_PROJ_PARAMS(4,DTILUN) = REAL(MODIND)
	IF (MODIND.EQ.1) THEN
	   DTIPROJ_PROJ_PARAMS(5,DTILUN)= 020000000.0
	   DTIPROJ_PROJ_PARAMS(6,DTILUN)= 018000000.0
C
	ELSEIF (MODIND.EQ.2) THEN
	   DTIPROJ_PROJ_PARAMS(5,DTILUN)=-165000000.0
	   DTIPROJ_PROJ_PARAMS(6,DTILUN)=-010000000.0
C
	ELSEIF (MODIND.EQ.3) THEN
	   DTIPROJ_PROJ_PARAMS(5,DTILUN)=-120000000.0
	   DTIPROJ_PROJ_PARAMS(6,DTILUN)= 045000000.0
C
	ELSEIF (MODIND.EQ.4) THEN
	   DTIPROJ_PROJ_PARAMS(5,DTILUN)=-152000000.0
	   DTIPROJ_PROJ_PARAMS(6,DTILUN)= 064000000.0
C
	ELSEIF (MODIND.EQ.5) THEN
	   DTIPROJ_PROJ_PARAMS(5,DTILUN)=-096000000.0
	   DTIPROJ_PROJ_PARAMS(6,DTILUN)= 039000000.0
	ENDIF
C
C ask for latitude of centre of projection
C
	ASK_PROJ_PARAMS = DMSQU(DTIPROJ_PROJ_PARAMS(6,DTILUN),
     &	         'Latitude of the centre of the '//
     &	            'projection',LAT)
C
	IF (.NOT.ASK_PROJ_PARAMS) THEN
	   IF (ASK_PROJ_PARAMS.NE.DTRANS__EOF) THEN
	      GOTO 9999
C
	   ELSE
	      CALL LSL_PUTMSG(DTRANS__REENTER)
	      GOTO 5
	   ENDIF
	ENDIF
C
C and longitude
C
	ASK_PROJ_PARAMS = DMSQU(DTIPROJ_PROJ_PARAMS(5,DTILUN),
     &	         'Longitude of the centre of the '//
     &	            'projection',LONG)
C
	IF (.NOT.ASK_PROJ_PARAMS) THEN
	   IF (ASK_PROJ_PARAMS.NE.DTRANS__EOF) THEN
	      GOTO 9999
C
	   ELSE
	      CALL LSL_PUTMSG(DTRANS__REENTER)
	      GOTO 5
	   ENDIF
	ENDIF
C
C now get false eastings and northings
C
	DTIPROJ_PROJ_PARAMS(7,DTILUN)=0.0
	DTIPROJ_PROJ_PARAMS(8,DTILUN)=0.0
C
	GOTO 530
C
C----------------------------------------------------------------------
C
9999	RETURN
	END
C
