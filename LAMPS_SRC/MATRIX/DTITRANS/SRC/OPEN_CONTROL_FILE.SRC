C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1991-07-18 19:04:20.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
        INTEGER*4 FUNCTION OPEN_CONTROL_FILE()
C
***	MODULE	OPEN_CONTROL_FILE
***	IDENT	18JL91
C
C 	Copyright Laser-Scan Laboratories Ltd.,Cambridge,England
C 	Author  : 				C A Biggs
C	Created : 				26 May 1990
C
C	Modified: 				10 Dec 1990 - RWR
C	Only set scale factor to around 0.5 if it is > 1.0 - SPR 925
C
CMOD993 Modified:				29 Apr 1991 - JB
C	Allow up to 20 CP data lines in the CONTROL file, and
C	use EXTENDED_4PT_LS instead of CPSET in ASK4PT
C	Close control file on error
C
C	Function for DTITRANS to open an input CONTROL file.
C
C----------------------------------------------------------------------
C
	IMPLICIT NONE
C
C	DTITRANS commons
***	PARAMETER/LSL$CMNLSL:LSLLIBMSG/
***	PARAMETER/HERE:DTITRANSMSG/
C
***	COMMON   /HERE:DTITRANS/
***	COMMON	 /LSL$CMNLSL:TXTC/
C
C Functions:
	INTEGER*4	FLROPN             !to open a file
	INTEGER*4	FLRCLO             !to close a file
	INTEGER*4	FLRLIN		   !to read a line from the file
	LOGICAL		RDCHS
	LOGICAL		RDDBLE
	LOGICAL		ASK4PT
C
C Locals:
	INTEGER*4	I,J		   !temporary index
	INTEGER		COUNT
	INTEGER*4	NUMPTS
	INTEGER*4	OK
	REAL*8		FORWARDS(4,MAXPOINTS)
	REAL		FOR(4,MAXPOINTS)
	REAL		BACK(4,MAXPOINTS)
	BYTE		ASC
	LOGICAL		FAIL
C
C----------------------------------------------------------------------
C If CONTROL = TRUE then open the *_RECTIFY.COM file and read in the
C two coordinate systems.
C
	OPEN_CONTROL_FILE = FLROPN (CONTROL_LUN,RECTIFY_NAME,I)
	IF (.NOT. OPEN_CONTROL_FILE ) THEN
	   CALL LSL_PUTMSG (DTRANS__CTRL_FILE_ERR)
	   CALL LSL_ADDMSG (OPEN_CONTROL_FILE)
	   IF (OPEN_CONTROL_FILE.EQ.LSL__SYSOPEN) CALL LSL_ADDMSG(I)
	   GOTO 999
	ENDIF
C
	CALL BSLN
	NUMPTS = 0
C
100	OK = FLRLIN()
C
	IF (.NOT. OK) THEN
	   IF (OK .EQ. LSL__EOF) THEN
	      OK = LSL__NORMAL
	      GOTO 300
	   ELSE
	      OPEN_CONTROL_FILE = DTRANS__BAD_COM_FILE
	      CALL LSL_PUTMSG (DTRANS__BAD_COM_FILE)
	      CALL LSL_ADDMSG (OK)
	      OK = FLRCLO (CONTROL_LUN)
	      GOTO 999
	   ENDIF
	ENDIF
C					
C check for blank line or comment line
C
	CALL BSLN
	FAIL = RDCHS(ASC)
	IF ((FAIL) .OR. (ASC .EQ. '!') .OR. (ASC .EQ. ';')) GOTO 100
C
C Found max no of points
C
	IF (NUMPTS .GE. MAXPOINTS) THEN 
	   CALL LSL_PUTMSG (DTRANS__EXTRA_CPTS)
	   GOTO 300
	ENDIF
C
	CALL BSCH
	NUMPTS = NUMPTS+1
C
	DO 200 J = 1,4			!loop to count across lines
	   FAIL = RDDBLE(FORWARDS(J,NUMPTS))	!assign coordinates
C
C check for early end of line
C
	   IF (FAIL) THEN
	      OPEN_CONTROL_FILE = DTRANS__CTRL_UNEXPEOL
	      CALL LSL_PUTMSG (DTRANS__CTRL_UNEXPEOL)
	      OK = FLRCLO (CONTROL_LUN)
	      GOTO 999
	   ENDIF
200	CONTINUE
C
	GOTO 100
C
C reduce to minimum of X and Y
C
300	CONTINUE
C
	IF (NUMPTS .LT. 4) THEN
	   OPEN_CONTROL_FILE = DTRANS__MISSING_CPTS
	   CALL LSL_PUTMSG (DTRANS__MISSING_CPTS)
	   OK = FLRCLO (CONTROL_LUN)
	   GOTO 999
 	ENDIF
C
	CONTROL_INPUT_ORG(1) = FORWARDS(1,1)
	CONTROL_INPUT_ORG(2) = FORWARDS(2,1)
	CONTROL_OUTPUT_ORG(1) = FORWARDS(3,1)
	CONTROL_OUTPUT_ORG(2) = FORWARDS(4,1)
C
C find minimum
C
	DO 225, I = 2,NUMPTS
	   CONTROL_INPUT_ORG(1) = 
     &	               MIN(CONTROL_INPUT_ORG(1), FORWARDS(1,I))
	   CONTROL_OUTPUT_ORG(1) = 
     &	               MIN(CONTROL_OUTPUT_ORG(1), FORWARDS(3,I))
C
	   CONTROL_INPUT_ORG(2) = 
     &	               MIN(CONTROL_INPUT_ORG(2), FORWARDS(2,I))
	   CONTROL_OUTPUT_ORG(2) = 
     &	               MIN(CONTROL_OUTPUT_ORG(2), FORWARDS(4,I))
225	CONTINUE
C
C apply to CPTS
C
	DO 250, I = 1,NUMPTS
	   FORWARDS(1,I) = FORWARDS(1,I) - CONTROL_INPUT_ORG(1)
	   FORWARDS(3,I) = FORWARDS(3,I) - CONTROL_OUTPUT_ORG(1)
	   FORWARDS(2,I) = FORWARDS(2,I) - CONTROL_INPUT_ORG(2)
	   FORWARDS(4,I) = FORWARDS(4,I) - CONTROL_OUTPUT_ORG(2)
250	CONTINUE
C
	DO 500 I = 1,NUMPTS
	   BACK(1,I)=FORWARDS(3,I)
	   BACK(3,I)=FORWARDS(1,I)	
C
	   BACK(2,I)=FORWARDS(4,I)
	   BACK(4,I)=FORWARDS(2,I)	
C
C Convert to real
C
	   FOR(1,I) = FORWARDS(1,I)
	   FOR(2,I) = FORWARDS(2,I)
	   FOR(3,I) = FORWARDS(3,I)
	   FOR(4,I) = FORWARDS(4,I)
C
500	CONTINUE
C
	FAIL = ASK4PT(NUMPTS,FOR,FORMATRIX,.TRUE.)
	IF (.NOT.FAIL) THEN
C
C Check if user rejects residuals in ASK4PT, otherwise give message for 
C error in control points
C
	   IF (FAIL.NE.0) CALL LSL_PUTMSG(DTRANS__FWD_MATRIX_ERR)
	   OPEN_CONTROL_FILE = DTRANS__FWD_MATRIX_ERR
	   OK = FLRCLO (CONTROL_LUN)
	   GOTO 999
	ENDIF
C
	FAIL = ASK4PT(NUMPTS,BACK,BACKMATRIX,.FALSE.)
C
C Check if residuals not acceptable in ASK4PT, otherwise error in 
C control points
C
	IF (.NOT.FAIL) THEN
	   IF (FAIL.NE.0) CALL LSL_PUTMSG(DTRANS__BKWD_MATRIX_ERR)
	   OPEN_CONTROL_FILE = DTRANS__BKWD_MATRIX_ERR
	   OK = FLRCLO (CONTROL_LUN)
	   GOTO 999
	ENDIF
C
C work out scale factor for calculating size of output pixels from
C input ones
C
	CONTROL_SF = 0.0
	COUNT = 0
	DO 600 I = 1,NUMPTS-1
	   DO 600 J = I+1,NUMPTS
	      COUNT = COUNT+1
	      CONTROL_SF = CONTROL_SF +
     &                          SQRT((FORWARDS(3,I)-FORWARDS(3,J))**2+
     &	                             (FORWARDS(4,I)-FORWARDS(4,J))**2)/
     &	                        SQRT((FORWARDS(1,I)-FORWARDS(1,J))**2+
     &	                             (FORWARDS(2,I)-FORWARDS(2,J))**2)
	   CONTINUE
600	CONTINUE
C
C set scale factor to a round 0.5, if it is > 1.0
C
	CONTROL_SF = CONTROL_SF/COUNT
	IF (CONTROL_SF.GT.1.0) CONTROL_SF = NINT(CONTROL_SF*2.0)/2.0
C
C-----------------------------------------------------------------------
C Signal success
	OK = FLRCLO (CONTROL_LUN)
	OPEN_CONTROL_FILE=DTRANS__NORMAL
C
999	RETURN
	END
C
