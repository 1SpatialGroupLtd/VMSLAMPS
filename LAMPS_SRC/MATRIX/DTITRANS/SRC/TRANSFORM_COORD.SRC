C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1996-03-04 16:37:54.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
        INTEGER*4 FUNCTION TRANSFORM_COORD(IN_COORD,OUT_COORD,INVERSE)
C
***	MODULE TRANSFORM_COORD
***	IDENT 29FE96
C
C 	Copyright Laser-Scan Ltd.,Cambridge,England
C 
C 	Author    Dave Catlow			 
C	Created   19-July-1988
C
CMOD1533 Change GTRN$0 to GTRN for GOTHIC versions 
C	 of GCTPLIB  					JB 29-Feb-1996
C
C This subroutine transforms a coordinate pair from one projection
C to another.
C
	IMPLICIT NONE
C
***	COMMON/LSL$CMNDTI:DTIPROJ/
C
***	PARAMETER/HERE:DTITRANSMSG/
***	COMMON/HERE:DTITRANS/
C
C 	Arguments
C
	REAL*8		IN_COORD(2)	! input coordinate pair 
	REAL*8		OUT_COORD(2)	! output coordinate pair
	LOGICAL		INVERSE		! If .TRUE. transform from
C					! target to source coord system.
C					! If .FALSE transform from
C					! source to target coord system.
C
C conversion factors
	REAL*8		F2M		! feet to metre conversion
	PARAMETER	(F2M=0.3048)
C
C w/s
	REAL*8		SCL
	INTEGER*4	IERR
C
C----------------------------------------------------------------------
C----------------------------------------------------------------------
C
	IF (INVERSE) GOTO 100
C
C Convert to coordinate units that GCTPLIB understands if	necessary.
C .1 seconds to seconds
C
	IF(DTIPROJ_UNITS(IN_LUN).EQ.110)THEN
	  IN_COORD(1)=IN_COORD(1)/10.0
	  IN_COORD(2)=IN_COORD(2)/10.0
C
C feet to international metres
	ELSE IF(DTIPROJ_UNITS(IN_LUN).EQ.1)THEN
	  IN_COORD(1)=IN_COORD(1)*F2M
	  IN_COORD(2)=IN_COORD(2)*F2M
        ENDIF
C
C Transfornm the coordinates
	CALL GTRN(IN_COORD,INSYS,INZONE,PARIN,INUNIT,
     &            OUT_COORD,OUTSYS,OUTZONE,PAROUT,OUTUNIT,IERR)
C
C	Deal with any error either from GCTPLIB or from the exception
C	handler.
	IF(IERR.NE.0)THEN		
	  CALL LSL_PUTMSG(DTRANS__WGCTPERR)
	  GOTO 999		!give up at this point
	ENDIF
C
C	Do any conversion into the output coordinate system that may
C	be necessary
C
C	Convert from seconds to .1 seconds
	IF(DTIPROJ_UNITS(OUT_LUN).EQ.110)THEN
	  OUT_COORD(1)=OUT_COORD(1)*10.0
	  OUT_COORD(2)=OUT_COORD(2)*10.0
C	Convert from metres to feet
	ELSE IF(DTIPROJ_UNITS(OUT_LUN).EQ.1)THEN	       
	  OUT_COORD(1)=OUT_COORD(1)/F2M
	  OUT_COORD(2)=OUT_COORD(2)/F2M
	ENDIF
C
	GOTO 900
C
C-----------------------------------------------------------------------
C	Convert to coordinate units that GCTPLIB understands if	necessary.
C	.1 seconds to seconds
100	IF(DTIPROJ_UNITS(OUT_LUN).EQ.110)THEN
	  IN_COORD(1)=IN_COORD(1)/10.0
	  IN_COORD(2)=IN_COORD(2)/10.0
C	feet to international metres
	ELSE IF(DTIPROJ_UNITS(OUT_LUN).EQ.1)THEN
	  IN_COORD(1)=IN_COORD(1)*F2M
	  IN_COORD(2)=IN_COORD(2)*F2M
        ENDIF
C
C	Transfornm the coordinates
	CALL GTRN(IN_COORD,OUTSYS,OUTZONE,PAROUT,OUTUNIT,
     &	          OUT_COORD,INSYS,INZONE,PARIN,INUNIT,IERR)
C
C	Deal with any error either from GCTPLIB or from the exception
C	handler.
C
	IF(IERR.NE.0)THEN		
	  CALL LSL_PUTMSG(DTRANS__WGCTPERR)
	  GOTO 999		! give up at this point
	ENDIF
C
C Do any conversion into the output coordinate system that may
C be necessary
C
C Convert from seconds to .1 seconds
	IF(DTIPROJ_UNITS(IN_LUN).EQ.110)THEN
	  OUT_COORD(1) = OUT_COORD(1)*10.0
	  OUT_COORD(2) = OUT_COORD(2)*10.0
C
C Convert from metres to feet
	ELSE IF(DTIPROJ_UNITS(IN_LUN).EQ.1)THEN	       
	  OUT_COORD(1) = OUT_COORD(1)/F2M
	  OUT_COORD(2) = OUT_COORD(2)/F2M
	ENDIF
C
C-----------------------------------------------------------------------
C Signal success of the transformation operation
900	TRANSFORM_COORD=DTRANS__NORMAL
C-----------------------------------------------------------------------
C
999	RETURN
   	END
C
