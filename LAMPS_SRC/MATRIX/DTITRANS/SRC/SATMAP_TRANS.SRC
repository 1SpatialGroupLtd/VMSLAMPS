C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1988-05-03 12:54:34.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	INTEGER*4 FUNCTION SATMAP_TRANS()
C
***	MODULE SATMAP_TRANS
***	IDENT  27AP88
C
C	Copyright Laser-Scan Laboratories Ltd, Cambridge, England
C	Author :   D J Gugan
C	Created :  27 April 1988
C	Modified :
C
C	Function for DTITRANS to transform a satellite image orientated
C	by SATMAP to an imagemap. Orientation parameters have been read
C	from a SATMAP file and can be either Affine, Projective or
C	Polynomial
C
	IMPLICIT             NONE
C
***	COMMON	  /HERE:DTITRANS/
***	PARAMETER /HERE:DTITRANSMSG/
C
C
C
C
        IF ( SATMAP_TRANS_TYPE .EQ. 1 ) THEN
C
  	  OUT_X = PARAMETERS(TRANS,1) *   IN_X   +
     &            PARAMETERS(TRANS,2) *   IN_Y   +  PARAMETERS(TRANS,5)
	  OUT_Y = PARAMETERS(TRANS,3) * (-IN_X)  +
     &            PARAMETERS(TRANS,4) *   IN_Y   +  PARAMETERS(TRANS,6)
C
	ELSE IF ( SATMAP_TRANS_TYPE .EQ. 2 ) THEN
C
C	NOTE : THIS IS WRONG !! Change code in 2DOR to calculate a correct
C	projective transformation.
C
	  OUT_X = PARAMETERS(TRANS,1) * IN_X  +
     &            PARAMETERS(TRANS,2) * IN_Y  +
     &            PARAMETERS(TRANS,3) -
     &            PARAMETERS(TRANS,7) * IN_X +
     &	          PARAMETERS(TRANS,8) * IN_Y
C
	  OUT_Y = PARAMETERS(TRANS,4) * IN_X  +
     &            PARAMETERS(TRANS,5) * IN_Y  +
     &            PARAMETERS(TRANS,6) -
     &            PARAMETERS(TRANS,7) * IN_X +
     &	          PARAMETERS(TRANS,8) * IN_Y
C
	ELSE
C
	  OUT_X = PARAMETERS(TRANS,1) +
     &            PARAMETERS(TRANS,2) * IN_X  +
     &            PARAMETERS(TRANS,3) * IN_Y  +
     &            PARAMETERS(TRANS,4) * IN_X**2 +
     &            PARAMETERS(TRANS,5) * IN_Y**2 +
     &	          PARAMETERS(TRANS,6) * IN_X * IN_Y
C
	  OUT_Y = PARAMETERS(TRANS,7)  +
     &            PARAMETERS(TRANS,8)  * IN_X  +
     &            PARAMETERS(TRANS,9)  * IN_Y  +
     &            PARAMETERS(TRANS,10) * IN_X**2 +
     &            PARAMETERS(TRANS,11) * IN_Y**2 +
     &	          PARAMETERS(TRANS,12) * IN_X * IN_Y
C
	ENDIF
C
C
	SATMAP_TRANS = DTRANS__NORMAL
C
	RETURN
	END
