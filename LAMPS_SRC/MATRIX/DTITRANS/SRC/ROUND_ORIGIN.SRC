C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1996-03-08 13:51:20.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
        INTEGER*4 FUNCTION ROUND_ORIGIN(DTILUN)
C
***	MODULE	ROUND_ORIGIN
***	IDENT	08MR96
C
C 	 Copyright Laser-Scan Ltd., Cambridge, England
CMOD1533 Author  : J Barber
C
C	Function for DTITRANS to round the x and y origin values to a 
C	multiple of the grid (sampling) size for the file opened on DTILUN.
C	The values are written to the relevant variables in
C	DTIPROJ.
C
C----------------------------------------------------------------------
	IMPLICIT NONE
C
C***	COMMON		/LSL$CMNLSL:EXCEPTION/
C***	COMMON		/LSL$CMNLSL:EXPC/
C***	PARAMETER	/LSL$CMNLSL:LSLLIBMSG/
C
***	COMMON		/LSL$CMNDTI:DTIPROJ/
***	COMMON		/LSL$CMNDTI:DTIHDR/
C
***	COMMON		/HERE:DTITRANS/
***	PARAMETER	/HERE:DTITRANSMSG/
C
C Arguments:
	INTEGER*4	DTILUN		! which DTI file
C
C Locals:
	REAL*8		XVALUE		! nint(x origin,x_sample) value
	REAL*8		YVALUE		! nint(y origin,y_sample) value
	REAL*8		XOFF,YOFF	! variables for nint comparison
	REAL*8		XSAM,YSAM	! variables for nint comparison
C
C----------------------------------------------------------------------
C----------------------------------------------------------------------
C Check if requested
C
	IF (.NOT.HAD_ROUND) GOTO 900
C
C Set up values, and convert both to real*8
C
	XOFF = X_OFFSET(DTILUN)		! origin offset
	YOFF = Y_OFFSET(DTILUN)
	XSAM = X_GRID(DTILUN)		! sampling interval
	YSAM = Y_GRID(DTILUN)
C
	IF ((DTIPROJ_SAMPLE(1,DTILUN).LE.0) .OR.
     &	    (DTIPROJ_SAMPLE(2,DTILUN).LE.0)) THEN
	   ROUND_ORIGIN = DTRANS__BADSAMPLE
	   GOTO 999		! exit
	ENDIF
C
	IF (X_GRID(DTILUN).LE.0 .OR.
     &	    Y_GRID(DTILUN).LE.0) THEN
	   ROUND_ORIGIN = DTRANS__BADSAMPLE
	   GOTO 999		! exit
	ENDIF
C
	XVALUE = XSAM*ANINT (XOFF/XSAM)		! nearest multiple of XSAM
	X_OFFSET(DTILUN) 	 = XVALUE
	DTIPROJ_ORIGIN(1,DTILUN) = XVALUE
C
	YVALUE = YSAM*ANINT (YOFF/YSAM)		! nearest multiple of YSAM
	Y_OFFSET(DTILUN) 	 = YVALUE
	DTIPROJ_ORIGIN(2,DTILUN) = YVALUE
C
C---------------------------------------------------------------------
C Signal success
900	ROUND_ORIGIN = DTRANS__NORMAL
C
C----------------------------------------------------------------------
C
999	RETURN
	END
C
