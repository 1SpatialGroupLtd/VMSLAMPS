C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1993-04-29 15:05:50.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL FUNCTION FILEIN_CMD()
C
***	MODULE	FILEIN_CMD
***	IDENT	29AP93
C
C	Copyright (C), Laser-Scan Ltd., Cambridge, England
C
C	Modified from FILEIN_CMD in DTITILE		ALB 18-Mar-1988
C
CMOD	 Call DTI_PRINT_HEADER on opening	       MWSR 25-Nov-1988
CMOD1216 Exit for BIT data				 JB 14-Apr-1993
C
C Function to get input file-spec from FILEIN command. If argument is
C missing the user is prompted.  Checks that a FILEIN command is
C appropriate at this stage of interaction.
C
C Function returns .TRUE. if all is well, otherwise .FALSE.
C
	IMPLICIT NONE
C
C Parameters :
	INCLUDE 'LSL$DTMCREATESYS:MESPAR.PAR'
	INCLUDE 'LSL$CMNDTI:DTILIBMSG.PAR'		! DTI messages
	INCLUDE 'LSL$CMNDTI:DTIPAR.PAR'			! DTIPAR values
	INCLUDE 'LSL$CMNDTI:DTIHDR.CMN'			! DTIHDR common
C
C Common:
	INCLUDE	'LSL$CMNLSL:TXTC.CMN'
	INCLUDE 'LSL$CMNDTIROTATE:CONTROL.CMN'
C
C W/s
	BYTE		CH		! a character
	LOGICAL		BLANK		! blank line?
	LOGICAL		OK		! for error returns
	LOGICAL		IERR		! for error returns
	INTEGER		RET_CODE	! return code
C
C Functions
	INTEGER		DTI_OPEN	! open a DTI file
	INTEGER		DTI_CLOSE	! close a DTI file
	LOGICAL		GETFILNAM 	! get file-spec
	LOGICAL		OPNDTI		! open specified DTI file
	LOGICAL		RDCHS		! read char. skipping spaces
	LOGICAL		TTRSTR		! read from TT:
	INTEGER		DTI_PRINT_HEADER !output header info
C
C ......................................................................
C
	FILEIN_CMD=.TRUE.		! assume success
C
C ......................................................................
C
	IF (HAD_DTIIN) THEN
	   RET_CODE = DTI_CLOSE(DTIIN_LUN,.FALSE.,.TRUE.,IERR)
	   IF (RET_CODE.NE.DTI__NORMAL) THEN
	      CALL LSL_PUTMSG(RET_CODE)
	      IF (RET_CODE.EQ.DTI__SYSERR) CALL LSL_ADDMSG(IERR)
	      FILEIN_CMD = .FALSE.
	      GOTO 999
	   ENDIF
	   HAD_DTIIN = .FALSE.
	ENDIF	   
C
C Look for filename, taking appropriate action if none found
C
	BLANK=RDCHS(CH)			! empty line ...
	IF (BLANK.OR.CH.EQ.'!') THEN	! or comment?
C
C Display warning/error for no filename present
C
	   IF (TTIN) THEN
	      CALL WRITEF('%S Specifying command FILEIN',WARNING)
	      CALL WRITEF('You must specify a file-spec argument'//
     &		' to the FILEIN command')
	   ELSE
	      CALL WRITEF('%S Specifying command FILEIN',ERROR)
	      CALL WRITEF('You must specify a file-spec argument'//
     &		'to the FILEIN command')
	   ENDIF	   
C
C If terminal input, prompt for filename
C
	   IF (TTIN) THEN
	      CALL WRITEF('For example FILEIN SW301.DTI')
	      OK=TTRSTR(,,'Read from which DTI file? ',IERR)
	      IF (OK) THEN
	         CALL BSLN			! reset decode ptr
	      ELSE
	         CALL LSL_PUTMSG(OK)		! problem with input
	         CALL LSL_ADDMSG(IERR)
	         FILEIN_CMD=.FALSE.
	         GOTO 999
	      ENDIF
C
	      IF (TXTPTR.EQ.0) THEN
	   	 FILEIN_CMD=.FALSE.
		 GOTO 999		! empty line
	      ENDIF
	   ELSE
	      FILEIN_CMD=.FALSE.
	      GOTO 999  ! someone got their indirect file wrong !!
	   ENDIF
	ENDIF
C
C ......................................................................
C Try interpreting the file-spec
C
	CALL BSCH				! move back one chr
	OK=  GETFILNAM(	DTIFILE(1),		! filename
     &			DTILEN(1),		! filename length
     &			'LSL$DTI:DTI.DTI;0',	! default
     &			.TRUE.,			! allow version numbers
     &			%REF('!') )		! termination character
C
C Deal with any error in interpreting file-spec
C
	IF (.NOT.OK) THEN
	   CALL WRITEF('%S Specifying command FILEIN',ERROR)
	   CALL WRITEF('Unable to interpret input file-spec')
	   CALL LSL_PUTMSG(OK)
	   FILEIN_CMD=.FALSE.
	   GOTO 999
	ELSE
C
C ......................................................................
C attempt to open the DTI file (readonly)
C
	   OK=DTI_OPEN(DTIIN_LUN,
     &		DTIFILE(1),
     &		DTILEN(1),.FALSE.,IERR)
C
	   IF (OK) THEN
C
C Test if BIT DTI file
	      IF (DATA_TYPE(DTIIN_LUN) .EQ. DATA_BIT) THEN
		 CALL WRITEF('%S Specifying command FILEIN',ERROR)
		 CALL WRITEF('BIT data is not suitable for DTIROTATE')
C
		 RET_CODE = DTI_CLOSE(DTIIN_LUN,.FALSE.,.TRUE.,IERR)
		 IF (RET_CODE.NE.DTI__NORMAL) THEN
		    CALL LSL_PUTMSG(RET_CODE)
		    IF (RET_CODE.EQ.DTI__SYSERR) CALL LSL_ADDMSG(IERR)
		    FILEIN_CMD = .FALSE.
		    GOTO 999
		 ENDIF
C
		 HAD_DTIIN  = .FALSE.
		 FILEIN_CMD = .FALSE.
		 GOTO 999
	      ENDIF
C
C output header info - matrix units
	      OK = DTI_PRINT_HEADER(DTIIN_LUN,1)
	      IF (.NOT. OK) THEN
		 CALL LSL_PUTMSG(OK)
	 	 FILEIN_CMD=.FALSE.
		 GOTO 999
	      ENDIF
C
	   ELSE
	      CALL WRITEF('%S Specifying command FILEIN',ERROR)
	      CALL WRITEF('Failed while opening DTI file %S for input',
     &		DTIFILE(1)(:DTILEN(1)))
	      CALL LSL_PUTMSG(OK)
	      IF (OK.EQ.DTI__SYSERR) CALL LSL_ADDMSG(IERR)
	      FILEIN_CMD=.FALSE.
	      GOTO 999
	   ENDIF
	ENDIF
C
	HAD_DTIIN = .TRUE.
C
999	CONTINUE
C
	RETURN
	END
C
