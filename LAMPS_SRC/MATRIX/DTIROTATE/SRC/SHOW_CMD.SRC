C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1988-12-02 13:21:30.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL FUNCTION SHOW_CMD()
C
***	MODULE	SHOW_CMD
***	IDENT	02DE88
C
C	Copyright (C), Laser-Scan Laboratories Ltd., Cambridge, England
C
C Modified from SHOW_CMD in DTITILE			ALB 17-MAR-1988
CMOD     Delete commands SHOW DIAGNOSTICS, PME, 
C        DEFAULTS - new command SHOW ENABLE	       
C	 Call DTI_PRINT_HEADER on SHOW FILES		MWSR 02-DEC-1988
C
C Function to show command status.
C Namely, defaults, diagostics files parameters pme
C
C Function returns .TRUE. if all is well, .FALSE. if an error
C
	IMPLICIT NONE
C
C Parameters :
	INCLUDE 'LSL$DTMCREATESYS:MESPAR.PAR'
	INCLUDE 'LSL$CMNDTI:DTIPAR.PAR'
C
C Common blocks :
	INCLUDE 'LSL$CMNDTIROTATE:CONTROL.CMN'
	INCLUDE 'LSL$CMNDTI:DTIHDR.CMN'
 	INCLUDE 'LSL$CMNLSL:CMDCOM.CMN'
	INCLUDE 'LSL$CMNLSL:EXPC.CMN'
	INCLUDE 'LSL$CMNLSL:TXTC.CMN'	
C
C W/s
	BYTE		CH		! for use with RDCHS
	INTEGER		CMD     	! decoded command number
	INTEGER		RET_CODE	! for use with RDCHS
	INTEGER		I		! loop counter
C
C Function:
	INTEGER		RDCOMM
	INTEGER		DTI_PRINT_HEADER	!Print DTI header	
C
C Command table:
	EXTERNAL	SHOW_CMD_TABLE
	INTEGER		SHOW_CMD_TABLE
C
C ......................................................................
C
	SHOW_CMD=.TRUE.			! assume success
C
	CALL WRITEF
	NOMESS=.TRUE.			! suppress CMDLIB error reporting
	CMD=RDCOMM(SHOW_CMD_TABLE)	! get command
	NOMESS=.FALSE.			! restore CMDLIB error reporting
	CMD=CMD+1
	GOTO (
     &		100,			! error/nothing	- cmd=1
     &		200,			! enable	- cmd=2
     &		400,			! files		- cmd=3
     &		500			! parameters	- cmd=4
     &			), CMD
C
C Command number out of range
	CALL WRITEF('%S Command not yet implemented',ERROR)
	SHOW_CMD=.FALSE.
	GOTO 999
C
C ......................................................................
C Error or nothing 
C
100	CONTINUE
	CALL WRITEF
	CALL WRITEF('%S Specifying command SHOW',ERROR)
	CALL WRITEF
	CALL WRITEF('Available SHOW command qualifiers are:')
	CALL WRITEF
	CALL WRITEF('ENABLE FILES'//
     &  '  PARAMETERS ')
	GOTO 999
C
C ......................................................................
C Show enable
C
200	CONTINUE
	CALL WRITEF
	CALL WRITEF('Current status:')
	CALL WRITEF(' ')
	CALL EXPAND('DIAGNOSTICS    ')
	IF(HAD_DIAG)THEN
	  CALL APPEND('   On       ')
	ELSE
	  CALL APPEND('  Off       ')
	ENDIF
	CALL APPEND('MIRROR BOTH    ')
	IF(MIRROR_BOTH)THEN
	  CALL APPEND('   On       ')
	ELSE
	  CALL APPEND('  Off       ')
	ENDIF
	CALL APPEND('MIRROR X       ')
	IF(MIRROR_X)THEN
	  CALL APPEND('   On       ')
	ELSE
	  CALL APPEND('  Off       ')
	ENDIF
	CALL TTWLIN
	CALL EXPAND('MIRROR Y       ')
	IF(MIRROR_Y)THEN
	  CALL APPEND('   On       ')
	ELSE
	  CALL APPEND('  Off       ')
	ENDIF
	CALL APPEND('PME            ')
	IF(HAD_PME)THEN
	  CALL APPEND('   On       ')
	ELSE
	  CALL APPEND('  Off       ')
	ENDIF
	CALL APPEND('ROTATE         ')
	IF(HAD_ROTATE)THEN
	  CALL APPEND('   On       ')
	ELSE
	  CALL APPEND('  Off       ')
	ENDIF
	CALL TTWLIN
	GOTO 999
C
C ......................................................................
C Show files
C
400	CONTINUE
	CALL WRITEF('FILES:')
C
C input files
C
	IF(HAD_DTIIN) THEN
	   RET_CODE = DTI_PRINT_HEADER(DTIIN_LUN,1)
	   IF (.NOT. RET_CODE) THEN
	      SHOW_CMD=.FALSE.
	      CALL LSL_PUTMSG(RET_CODE)
	      GOTO 999
	   ENDIF
	ELSE
	   CALL WRITEF('DTI input file not yet specified')
	ENDIF
C
C output files
C
	IF(HAD_DTIOUT) THEN
	   CALL WRITEF('DTI file %S selected for output',
     &			DTIFILE(2)(:DTILEN(2)))
	ELSE
	   CALL WRITEF('DTI output file not yet specified')
	ENDIF
	GOTO 999  ! only show files
C
C Show parameters 
C
500	CONTINUE
	CALL WRITEF('PARAMETERS:')
	IF(.NOT.HAD_MIRROR.AND.HAD_ROTATE) THEN
	   CALL WRITEF('MIRROR disabled  ROTATE enabled')
	   CALL WRITEF('File will be rotated clockwise '//
     &		'through 90 deg')
	   CALL WRITEF
	   CALL WRITEF('       INPUT DTI         >>     OUTPUT DTI')
	   CALL WRITEF(' ---------------------       ----------------')
	   CALL WRITEF(' |  3 |  6 |  9 | 12 |       |  1 |  2 |  3 |')
	   CALL WRITEF(' ---------------------       ----------------')
	   CALL WRITEF(' |  2 |  5 |  8 | 11 |       |  4 |  5 |  6 |')
	   CALL WRITEF(' ---------------------       ----------------')
	   CALL WRITEF(' |  1 |  4 |  7 | 10 |       |  7 |  8 |  9 |')
	   CALL WRITEF(' ---------------------       ----------------')
	   CALL WRITEF('                             | 10 | 11 | 12 |')
	   CALL WRITEF('                             ----------------')
	ENDIF
	IF(MIRROR_X.AND.HAD_ROTATE) THEN
	   CALL WRITEF('MIRROR X enabled  ROTATE enabled')
	   CALL WRITEF('File will be mirrored about the x axis '//
     &		'then rotated clockwise through 90 deg')
	   CALL WRITEF
	   CALL WRITEF('       INPUT DTI         >>     OUTPUT DTI')
	   CALL WRITEF(' ---------------------       ----------------')
	   CALL WRITEF(' |  3 |  6 |  9 | 12 |       |  3 |  2 |  1 |')
	   CALL WRITEF(' ---------------------       ----------------')
	   CALL WRITEF(' |  2 |  5 |  8 | 11 |       |  6 |  5 |  4 |')
	   CALL WRITEF(' ---------------------       ----------------')
	   CALL WRITEF(' |  1 |  4 |  7 | 10 |       |  9 |  8 |  7 |')
	   CALL WRITEF(' ---------------------       ----------------')
	   CALL WRITEF('                             | 12 | 11 | 10 |')
	   CALL WRITEF('                             ----------------')
	ENDIF
	IF(MIRROR_Y.AND.HAD_ROTATE) THEN
	   CALL WRITEF('MIRROR Y enabled  ROTATE enabled')
	   CALL WRITEF('File will be mirrored about the y axis '//
     &		'then rotated clockwise through 90 deg')
	   CALL WRITEF
	   CALL WRITEF('       INPUT DTI         >>     OUTPUT DTI')
	   CALL WRITEF(' ---------------------       ----------------')
	   CALL WRITEF(' |  3 |  6 |  9 | 12 |       | 10 | 11 | 12 |')
	   CALL WRITEF(' ---------------------       ----------------')
	   CALL WRITEF(' |  2 |  5 |  8 | 11 |       |  7 |  8 |  9 |')
	   CALL WRITEF(' ---------------------       ----------------')
	   CALL WRITEF(' |  1 |  4 |  7 | 10 |       |  4 |  5 |  6 |')
	   CALL WRITEF(' ---------------------       ----------------')
	   CALL WRITEF('                             |  1 |  2 |  3 |')
	   CALL WRITEF('                             ----------------')
	ENDIF
	IF(MIRROR_BOTH.AND.HAD_ROTATE) THEN
	   CALL WRITEF('MIRROR BOTH enabled  ROTATE enabled')
	   CALL WRITEF('File will be mirrored about both axes '//
     &		'then rotated clockwise through 90 deg')
	   CALL WRITEF
	   CALL WRITEF('       INPUT DTI         >>     OUTPUT DTI')
	   CALL WRITEF(' ---------------------       ----------------')
	   CALL WRITEF(' |  3 |  6 |  9 | 12 |       | 12 | 11 | 10 |')
	   CALL WRITEF(' ---------------------       ----------------')
	   CALL WRITEF(' |  2 |  5 |  8 | 11 |       |  9 |  8 |  7 |')
	   CALL WRITEF(' ---------------------       ----------------')
	   CALL WRITEF(' |  1 |  4 |  7 | 10 |       |  6 |  5 |  4 |')
	   CALL WRITEF(' ---------------------       ----------------')
	   CALL WRITEF('                             |  3 |  2 |  1 |')
	   CALL WRITEF('                             ----------------')
	ENDIF
	IF(.NOT.HAD_MIRROR.AND..NOT.HAD_ROTATE) THEN
	   CALL WRITEF('MIRROR disabled  ROTATE disabled')
	   CALL WRITEF('This is an invalid combination')
	   CALL WRITEF('No processing will be performed')
	ENDIF
	IF(MIRROR_X.AND..NOT.HAD_ROTATE) THEN
	   CALL WRITEF('MIRROR X enabled  ROTATE disabled')
	   CALL WRITEF('File will be mirrored about the x axis '//
     &		'no rotation')
	   CALL WRITEF
	   CALL WRITEF
     &		('       INPUT DTI         >>     OUTPUT DTI')
	   CALL WRITEF
     &		(' ---------------------       ---------------------')
	   CALL WRITEF
     &		(' |  3 |  6 |  9 | 12 |       |  1 |  4 |  7 | 10 |')
	   CALL WRITEF
     &		(' ---------------------       ---------------------')
	   CALL WRITEF
     &		(' |  2 |  5 |  8 | 11 |       |  2 |  5 |  8 | 11 |')
	   CALL WRITEF
     &		(' ---------------------       ---------------------')
	   CALL WRITEF
     &		(' |  1 |  4 |  7 | 10 |       |  3 |  6 |  9 | 12 |')
	   CALL WRITEF
     &		(' ---------------------       ---------------------')
	ENDIF
	IF(MIRROR_Y.AND..NOT.HAD_ROTATE) THEN
	   CALL WRITEF('MIRROR Y enabled  ROTATE disabled')
	   CALL WRITEF('File will be mirrored about the y axis')
	   CALL WRITEF
	   CALL WRITEF
     &		('       INPUT DTI         >>     OUTPUT DTI')
	   CALL WRITEF
     &		(' ---------------------       ---------------------')
	   CALL WRITEF
     &		(' |  3 |  6 |  9 | 12 |       | 12 |  9 |  6 |  3 |')
	   CALL WRITEF
     &		(' ---------------------       ---------------------')
	   CALL WRITEF
     &		(' |  2 |  5 |  8 | 11 |       | 11 |  8 |  5 |  2 |')
	   CALL WRITEF
     &		(' ---------------------       ---------------------')
	   CALL WRITEF
     &		(' |  1 |  4 |  7 | 10 |       | 10 |  7 |  4 |  1 |')
	   CALL WRITEF
     &		(' ---------------------       ---------------------')
	ENDIF
	IF(MIRROR_BOTH.AND..NOT.HAD_ROTATE) THEN
	   CALL WRITEF('MIRROR BOTH enabled  ROTATE disabled')
	   CALL WRITEF('File will be mirrored about both axes ')
	   CALL WRITEF
	   CALL WRITEF
     &		('       INPUT DTI         >>     OUTPUT DTI')
	   CALL WRITEF
     &		(' ---------------------       ---------------------')
	   CALL WRITEF
     &		(' |  3 |  6 |  9 | 12 |       | 10 |  7 |  4 |  1 |')
	   CALL WRITEF
     &		(' ---------------------       ---------------------')
	   CALL WRITEF
     &		(' |  2 |  5 |  8 | 11 |       | 11 |  8 |  5 |  2 |')
	   CALL WRITEF
     &		(' ---------------------       ---------------------')
	   CALL WRITEF
     &		(' |  1 |  4 |  7 | 10 |       | 12 |  9 |  6 |  3 |')
	   CALL WRITEF
     &		(' ---------------------       ---------------------')
	ENDIF
	GOTO 999  ! only show parameters
C
C .....................................................................
C Exit
C
999	CONTINUE
	CALL WRITEF
	NOMESS=.FALSE.			! restore CMDLIB error reporting
	RETURN
	END
