C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1988-05-25 14:08:30.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE SWAP(TABLE,INDEX1,INDEX2)
C
***	MODULE	SWAP
***	IDENT	11MY88
C	
C Copyright Laser Scan Laboratories, Cambridge, England.
C 	
C Created by					ALB 6-May-1988
C
C Function to swap two elements in array TABLE.  The array is really two
C dimensional but is treated as one dimensional within this routine.
C The absolute position within the array can be calculated knowing
C the first dimension.  
C 
C Routine required by LSLLIB SHELL_SORT
C
	IMPLICIT NONE
C
C arguments
C
	INTEGER*4	TABLE(*)	!array to be sorted
	INTEGER*2	INDEX1		!1st element to be compared
	INTEGER*2	INDEX2		!2nd element to be compared
C
C w/s
C
	INTEGER*4	I	!counter
	INTEGER*4	ITEMP	!Temp var used in swap TABLE elements
	INTEGER*4	I1	!Absolute position in array
	INTEGER*4	I2	!Absolute position in array
C 
C ......................................................................
C swap all elements in two columns in TABLE array
C
	DO 100 I = 1,2
	   I1 = INDEX1 * 2 - 2 + I
	   I2 = INDEX2 * 2 - 2 + I
	   ITEMP = TABLE(I1)
	   TABLE(I1) = TABLE(I2)
	   TABLE(I2) = ITEMP
100	CONTINUE
	RETURN
	END
