C---------------------------------------------------------------------
C		P R O C E S S    C O M M O N   B L O C K
C
C N.B. PARAMS.PAR must be included BEFORE this file.
C
C---------------------------------------------------------------------
C
C IFF_TAB holds which file & the sector and START_STOP_TAB
C holds start/stop vertices for each feature (or part) feature which
C lies within the blend zone sectors.
	BYTE		IFF_TAB(2,MAX_FTRS)	
	INTEGER*2	START_STOP_TAB(2,MAX_FTRS)
C
C Related to this is NF_ADDRESS_TAB which stores the address of the 
C IFF features involved in IFF_TAB. The elements of NF_ADDRESS_TAB
C match those of IFF_TAB
	INTEGER		NF_ADDRESS_TAB(MAX_FTRS)
C
C     IFF_TAB              NF_ADDRESS_TAB     START_STOP_TAB
C ======================  ===============  ===========================  
C +-------------+--------+---------------+---------------+-------------+
C | IFF file #  | Sector |   NF address  | start vertex  | stop vertex |
C +-------------+--------+---------------+---------------+-------------+
C |  feature 1  |   *    |      *        |        *      |       *     |
C |     .       |   *    |      *        |        *      |       *     |
C |     .       |   *    |      *        |        *      |       *     |
C |     .       |   *    |      *        |        *      |       *     |
C |  feature n  |   *    |      *        |        *      |       *     |
C +-------------+--------+---------------+---------------+-------------+
C
C
	INTEGER		NUM_FTRS	! # IFF entries in blend zone
C					! sectors (in all the IFF files)
C
	INTEGER		INLUN(2)	! the 2 DTI input file luns
	REAL		BLEND_ZONE(2,4)	! the blend zone corners in
C					! LSL order ie NW,SW,SE,NE
C
	INTEGER		HOLD_LUN	! the lun of the hold_file
	INTEGER		BLEND_LUN(2)	! the BLEND file input luns
	INTEGER		ROVER_LUN(2)	! the ROVER file output luns
	INTEGER		OUT_LUN(2)	! the output LUNS matching
C                                         BLEND_LUN()
C
	INTEGER	SHARED_COL(DTILIB_MAX_DTI)! shared column in each file
	INTEGER	SHARED_ROW(DTILIB_MAX_DTI)! shared row in each file
	REAL	BLEND_SECTOR_WIDTH(2)	! blend sector width (x and y)
C					! unused axis =0.0
	LOGICAL	VERTICAL_JOIN		! DTMs join side to side?
	LOGICAL	HORIZONTAL_JOIN		! DTMs join top to bottom?
C
	INTEGER	NSECTOR			! number of blend zone sectors
C
	REAL	MINXOF,MINYOF		! minimun origin offset
C					! from the input DTI files used
C					! as local datum 
	REAL*4 	LOCOFF(2,MAX_IFF)	! offset relative to local datum
C
	REAL	FIXZAR(2,MAX_INS)	! distance and fixed Z 
	INTEGER	NUMINS			! number of fixed Z's
C
C A new edge of DTI data
	LOGICAL*4	EDGEARR(MAX_ROW)!dummy edge array
	REAL*4		REDGE(MAX_ROW)	!real
	INTEGER*2	WEDGE(MAX_ROW)	!word
	INTEGER*4	LEDGE(MAX_ROW)	!longword
	BYTE		BEDGE(MAX_ROW)	!longword
C
	EQUIVALENCE (EDGEARR,WEDGE,REDGE,LEDGE,BEDGE) 
C
	COMMON /PROCESS/ INLUN,BLEND_ZONE,IFF_TAB,NUM_FTRS,
     &			 HOLD_LUN,BLEND_LUN,OUT_LUN,SHARED_COL,
     &			 SHARED_ROW,BLEND_SECTOR_WIDTH,VERTICAL_JOIN,
     &			 HORIZONTAL_JOIN,NSECTOR,NF_ADDRESS_TAB,
     &			 START_STOP_TAB,ROVER_LUN,MINXOF,MINYOF,
     &			 LOCOFF,EDGEARR,FIXZAR,NUMINS
