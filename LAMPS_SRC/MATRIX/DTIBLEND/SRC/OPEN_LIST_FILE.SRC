	LOGICAL FUNCTION OPEN_LIST_FILE()
C
***	MODULE	OPEN_LIST_FILE
***	IDENT	23MY88
C
C	Copyright (C), Laser-Scan Laboratories Ltd., Cambridge, England
C
C	Created						TJH 23-May-1987
C
C Function to open LIST file defined in /FILES/LIST_NAME.
C
C Function returns .TRUE. if all is well
C
	IMPLICIT NONE
C
C Parameters:
	INCLUDE 'LSL$CMNDTIBLEND:PARAMS.PAR'
	INCLUDE 'LSL$CMNDTIBLEND:DTIBLENDMSG.PAR'
C
C Common:
	INCLUDE 'LSL$CMNDTIBLEND:PROCESS.CMN'
	INCLUDE 'LSL$CMNDTIBLEND:COMMAND.CMN'
	INCLUDE 'LSL$CMNDTIBLEND:SELECTIONS.CMN'
	INCLUDE 'LSL$CMNDTIBLEND:FILES.CMN'
	INCLUDE 'LSL$CMNDTI:DTIHDR.CMN'
	INCLUDE 'LSL$DTMCREATESYS:DTMJPI.CMN'
C
C W/s
	CHARACTER*23	DATETIME	! todays date
	LOGICAL		OK,IERR		! for error returns
	INTEGER		I
C
C Functions:
	LOGICAL 	FLWOPN
C
C ......................................................................
C
	OPEN_LIST_FILE = .TRUE.		! assume success
C
C Does the user want a LIST file?
	IF (.NOT.HAD_LIST) GOTO 30
C
C
C Open file
	OPEN_LIST_FILE=FLWOPN(LISLUN,LIST_NAME(1:LIST_NAME_LENGTH),IERR)
	IF (OPEN_LIST_FILE) THEN		! did it open ok?
	      IF (HAD_DIAG) THEN
	         OPEN_LIST_FILE = DTIBLN__LSTOPEN	! yes, tell user
	         CALL LSL_PUTMSG(OPEN_LIST_FILE,
     &		LIST_NAME(1:LIST_NAME_LENGTH))
	      ENDIF
	      LIST_OPN=.TRUE.
C
C Write header stuff into it
	   CALL FLWSEL(LISLUN)
	   CALL FLWRTF(
     &		'============================== D T I B L E N D '//
     &		'================================')
	   CALL FLWRTF
	   CALL LIB$DATE_TIME(DATETIME)
	   CALL FLWRTF('DTIBLEND log file created by %S at %S using %S' 
     &		,USERNAME(1:USERLEN),DATETIME,IMAGNAME(1:IMAGELEN))
     &			
	   CALL FLWRTF
	   IF (HOLD_LUN.NE.0) THEN
	      CALL FLWRTF('HOLD file:')
	      CALL FLWRTF('%S',
     &		DTI_NAME(HOLD_LUN)(1:DTI_NAME_LENGTH(HOLD_LUN)))
	      CALL FLWRTF
	      CALL FLWRTF('Blended file:')
	   ELSE
	      CALL FLWRTF
	      CALL FLWRTF('Two files specified for blend:')
	   ENDIF
	   CALL FLWRTF('%S',
     &		DTI_NAME(BLEND_LUN(1))(1:DTI_NAME_LENGTH(BLEND_LUN(1))))
	   IF (BLEND_LUN(2).NE.0) THEN
	      CALL FLWRTF
	      CALL FLWRTF('%S',
     &		DTI_NAME(BLEND_LUN(2))(1:DTI_NAME_LENGTH(BLEND_LUN(2))))
	   ENDIF
C
	   CALL FLWRTF
	   CALL FLWRTF('With a BORDER value of %N, all DTI z '//
     &		'values are subject to change that',BORDER_WIDTH)
	   CALL FLWRTF('lie within the rectangle defined by:')
	   CALL FLWRTF('SW corner: %F14.3  %F14.3',
     &				BLEND_ZONE(1,2),BLEND_ZONE(2,2))
	   CALL FLWRTF('NE corner: %F14.3  %F14.3',
     &			BLEND_ZONE(1,4),BLEND_ZONE(2,4))
	   CALL FLWRTF
	   CALL FLWRTF('In %S this affects:',
     &	      DTI_NAME(BLEND_LUN(1))(1:DTI_NAME_LENGTH(BLEND_LUN(1))))
	   CALL FLWRTF('Column %N to column %N and row %N to row %N',
     &			DTI_WINDOW_SWX(BLEND_LUN(1)),
     &			DTI_WINDOW_NEX(BLEND_LUN(1)),
     &			DTI_WINDOW_SWY(BLEND_LUN(1)),
     &			DTI_WINDOW_NEY(BLEND_LUN(1)))
	   IF (BLEND_LUN(2).NE.0) THEN
	   CALL FLWRTF
	      CALL FLWRTF('In %S this affects:',
     &		DTI_NAME(BLEND_LUN(2))(1:DTI_NAME_LENGTH(BLEND_LUN(2))))
	      CALL FLWRTF('Column %n to column %N and row %N to row %N',
     &			DTI_WINDOW_SWX(BLEND_LUN(2)),
     &			DTI_WINDOW_NEX(BLEND_LUN(2)),
     &			DTI_WINDOW_SWY(BLEND_LUN(2)),
     &			DTI_WINDOW_NEY(BLEND_LUN(2)))
	   ENDIF
	   IF (NUM_IFF.NE.0) THEN
	      CALL FLWRTF
	      CALL FLWRTF('IFF control is supplied by:')
	      DO 20 I=1,NUM_IFF
	         CALL FLWRTF
	         CALL FLWRTF('%S',IFF_NAME(I)(1:IFF_NAME_LENGTH(I)))
	         CALL FLWRTF
	         CALL EXPAND ('Heights expected in type ')
	         IF (IFF_AC2HT(I)) THEN
	            CALL FLWAPP('2 ACs')
	         ELSE
	            CALL FLWAPP('3 ACs')
	         ENDIF
	         CALL FLWRTF
	         CALL FLWRTF('IFF selections:')
	         CALL FLWRTF
	         CALL FLWRTF('Layers:')
	         CALL DISPLBTMP(
     &			'Layers selected for input:',
     &			'All layers deselected',
     &			 BMAX,
     &		 	IFF_USEOV(1,I),.FALSE.)
	         CALL FLWRTF
	         CALL FLWRTF('Feature codes:')
	         CALL DISPLBTMP(
     &			'Feature codes selected for input:',
     &			'All feature codes deselected',
     &			 BMAX,
     &			 IFF_USEFC(1,I),.FALSE.)
20	      CONTINUE
	   ENDIF
	   CALL FLWRTF
	   CALL FLWRTF(
     &		'=================================================='//
     &		'==============================')
	   
	ELSE
	   CALL LSL_PUTMSG(DTIBLN__OPNLST,
     &			LIST_NAME(1:LIST_NAME_LENGTH))
	   CALL LSL_ADDMSG(OPEN_LIST_FILE)
	   CALL LSL_ADDMSG(IERR)		! give any 2ndary error
	ENDIF
C	
30	RETURN
	END
