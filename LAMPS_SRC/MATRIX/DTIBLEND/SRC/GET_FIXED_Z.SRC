C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1996-08-20 14:38:16.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL FUNCTION GET_FIXED_Z(JPOS,LUN)
C
***	MODULE	GET_FIXED_Z
***	IDENT	08FE89
C
C	Copyright (C), Laser-Scan Laboratories Ltd., Cambridge, England
C
C	Created						TJH 20-MAY-1988
CMOD	DTI_DTED replaced by parameter DTI_TED4         DRC 18-Aug-1988
C	Modified to handle unsigned bytes correctly	SAB 20-Aug-1996
C
C Function to get the fixed Z values along a blend row or column
C for use in the interpolation function INTERP.
C
C Normally this will be only be 2: the post on the shared edge and the
C post BORDER posts in from the edge. If however, there is IFF control
C there may be anything between 2 and MAX_INS fixed Z values.
C
C The fixed Z values to be interpolated between are held in the fixed Z
C array /PROCESS/FIXZAR. There are /PROCESS/NUMINS fixed points.
C
C Function returns .TRUE. if all is well
C
	IMPLICIT NONE
C
C Argument
	INTEGER	JPOS		! position along the shared edge
	INTEGER	LUN		! the LUN of the blend file in use
C
C Parameters:
	INCLUDE 'LSL$CMNDTIBLEND:DTIBLENDMSG.PAR'
	INCLUDE 'LSL$CMNDTIBLEND:PARAMS.PAR'
	INCLUDE 'LSL$CMNDTI:DTIPAR.PAR'
C
C Common:
	INCLUDE 'LSL$CMNDTI:DTIHDR.CMN'
	INCLUDE	'LSL$CMNDTIBLEND:COMMAND.CMN'
	INCLUDE	'LSL$CMNDTIBLEND:PROCESS.CMN'
	INCLUDE	'LSL$CMNDTIBLEND:FILES.CMN'
	INCLUDE '($SSDEF)/NOLIST'
C
C W/s
	INTEGER		I,J
	INTEGER		IERR			! error return
	LOGICAL*4	VALUE			! 4 bytes
	BYTE		BVALUE
	REAL*4		RVALUE
	INTEGER*4	LVALUE
	INTEGER*2	WVALUE
	EQUIVALENCE (VALUE,RVALUE,WVALUE,LVALUE,BVALUE)
	BYTE		BVAL
	INTEGER*2	UNSIGNED_BVAL
	EQUIVALENCE (UNSIGNED_BVAL,BVAL)
C
C Functions
	LOGICAL		DTI_READ_DATA
	LOGICAL		IFF_INTERSECTIONS ! gets IFF intersections
C
C Routines for SHELL_SORT
	EXTERNAL	COMPARE		  ! comparison routine
	EXTERNAL	SWAP		  ! swap routine
C
C ......................................................................
C
	GET_FIXED_Z=SS$_ABORT			! assume failure
C
C Even if no IFF intersections there will always be 2 fixed Z
C values, the Z value on the shared edge got from EDGEARR(JPOS), and
C the Z value at the post BORDER posts in from the edge.
C
	IF (HEADER_TYPE(LUN).EQ.DTI_TED4) THEN
C
C ......................................................................
C		G E O G R A P H I C A L   C O O R D I N A T E S
	   IF (HORIZONTAL_JOIN) THEN
C
C ......................................................................
C		H O R I Z O N T A L   J O I N
C DTI_WINDOW_SWX     JPOS                               DTI_WINDOW_NEX
C     *----------------*-------------------------------------*
C                      | FIXZAR(*,1)
C       BORDER_WIDTH   |
C                      |
C                      * FIXZAR(*,2)
C
C Use equivalenced vars. to get effect of "FIXZAR(2,1)=EDGEARR(JPOS)"
	      IF (DATA_TYPE(BLEND_LUN(1)).EQ.DATA_BYTE) THEN
		 IF (BEDGE(JPOS).EQ.NULL_BYTE_VALUE) THEN
	            FIXZAR(2,1)=DTI_NULL_REAL
		 ELSE
		    BVAL = BEDGE(JPOS)
	            FIXZAR(2,1)=UNSIGNED_BVAL
		 ENDIF
	      ELSEIF (DATA_TYPE(BLEND_LUN(1)).EQ.DATA_WORD) THEN
		 IF (WEDGE(JPOS).EQ.NULL_WORD_VALUE) THEN
	            FIXZAR(2,1)=DTI_NULL_REAL
		 ELSE
	            FIXZAR(2,1)=WEDGE(JPOS)
		 ENDIF
	      ELSEIF (DATA_TYPE(BLEND_LUN(1)).EQ.DATA_LONG) THEN
		 IF (LEDGE(JPOS).EQ.NULL_LONG_VALUE) THEN
	            FIXZAR(2,1)=DTI_NULL_REAL
		 ELSE
	            FIXZAR(2,1)=LEDGE(JPOS)
		 ENDIF
	      ELSEIF (DATA_TYPE(BLEND_LUN(1)).EQ.DATA_REAL) THEN
	         FIXZAR(2,1)=REDGE(JPOS)
	      ENDIF
	      FIXZAR(1,1)=LATREC(1,LUN)-MINYOF+(SHARED_ROW(LUN)-1)
     &					*LATINT(LUN)
C
C Shared edge at bottom of file
	      IF (SHARED_ROW(LUN).EQ.1) THEN
	         FIXZAR(1,2)=FIXZAR(1,1)+(BORDER_WIDTH-1)*LATINT(LUN)
	         GET_FIXED_Z=DTI_READ_DATA(
     &			LUN,				! lun
     &			VALUE,				! a post
     &			DTI_WINDOW_SWX(LUN)+JPOS-1,	! x posn
     &			SHARED_ROW(LUN)+BORDER_WIDTH-1)	! y posn
C
	      ELSE
C Shared edge at top of file
	         FIXZAR(1,2)=FIXZAR(1,1)-(BORDER_WIDTH-1)*LATINT(LUN)
	         GET_FIXED_Z=DTI_READ_DATA(
     &			LUN,				! lun
     &			VALUE,				! a post
     &			DTI_WINDOW_SWX(LUN)+JPOS-1,	! x posn
     &			SHARED_ROW(LUN)-BORDER_WIDTH-1)	! y posn
	      ENDIF
	      IF (.NOT.GET_FIXED_Z) THEN
	         CALL LSL_PUTMSG(GET_FIXED_Z)
	         GOTO 10
	      ENDIF
C
C ......................................................................
C 		V E R T I C A L    J O I N
	   ELSE
C
C Use equivalenced vars. to get effect of "FIXZAR(2,1)=EDGEARR(JPOS)"
	      IF (DATA_TYPE(BLEND_LUN(1)).EQ.DATA_BYTE) THEN
		 IF (BEDGE(JPOS).EQ.NULL_BYTE_VALUE) THEN
	            FIXZAR(2,1)=DTI_NULL_REAL
		 ELSE
		    BVAL = BEDGE(JPOS)
	            FIXZAR(2,1)=UNSIGNED_BVAL
		 ENDIF
	      ELSEIF (DATA_TYPE(BLEND_LUN(1)).EQ.DATA_WORD) THEN
		 IF (WEDGE(JPOS).EQ.NULL_WORD_VALUE) THEN
	            FIXZAR(2,1)=DTI_NULL_REAL
		 ELSE
	            FIXZAR(2,1)=WEDGE(JPOS)
		 ENDIF
	      ELSEIF (DATA_TYPE(BLEND_LUN(1)).EQ.DATA_LONG) THEN
		 IF (LEDGE(JPOS).EQ.NULL_LONG_VALUE) THEN
	            FIXZAR(2,1)=DTI_NULL_REAL
		 ELSE
	            FIXZAR(2,1)=LEDGE(JPOS)
		 ENDIF
	      ELSEIF (DATA_TYPE(BLEND_LUN(1)).EQ.DATA_REAL) THEN
	         FIXZAR(2,1)=REDGE(JPOS)
	      ENDIF
	      FIXZAR(1,1)=LONREC(1,LUN)-MINXOF+(SHARED_COL(LUN)-1)
     &					*LONINT(LUN)
C
C Shared edge at left of file
	      IF (SHARED_COL(LUN).EQ.1) THEN
	         FIXZAR(1,2)=FIXZAR(1,1)+(BORDER_WIDTH-1)*LONINT(LUN)
	         GET_FIXED_Z=DTI_READ_DATA(
     &			LUN,				! lun
     &			VALUE,				! a post
     &			SHARED_COL(LUN)+BORDER_WIDTH-1,	! x posn
     &			DTI_WINDOW_SWY(LUN)+JPOS-1)	! y posn
C
	      ELSE
C Shared edge at right of file
	         FIXZAR(1,2)=FIXZAR(1,1)-(BORDER_WIDTH-1)*LONINT(LUN)
	         GET_FIXED_Z=DTI_READ_DATA(
     &			LUN,				! lun
     &			VALUE,				! a post
     &			SHARED_COL(LUN)-(BORDER_WIDTH-1),! x posn
     &			DTI_WINDOW_SWY(LUN)+JPOS-1)	! y posn
	      ENDIF
	      IF (.NOT.GET_FIXED_Z) THEN
	         CALL LSL_PUTMSG(GET_FIXED_Z)
	         GOTO 10
	      ENDIF
	   ENDIF
C
	ELSE
C
C ......................................................................
C
C  		    G R I D   U N I T S
C
	   IF (HORIZONTAL_JOIN) THEN
C
C ......................................................................
C		H O R I Z O N T A L   J O I N
C DTI_WINDOW_SWX     JPOS                               DTI_WINDOW_NEX
C     *----------------*-------------------------------------*
C                      | FIXZAR(*,1)
C       BORDER_WIDTH   |
C                      |
C                      * FIXZAR(*,2)
C
	      IF (DATA_TYPE(BLEND_LUN(1)).EQ.DATA_BYTE) THEN
		 IF (BEDGE(JPOS).EQ.NULL_BYTE_VALUE) THEN
	            FIXZAR(2,1)=DTI_NULL_REAL
		 ELSE
		    BVAL = BEDGE(JPOS)
	            FIXZAR(2,1)=UNSIGNED_BVAL
		 ENDIF
	      ELSEIF (DATA_TYPE(BLEND_LUN(1)).EQ.DATA_WORD) THEN
		 IF (WEDGE(JPOS).EQ.NULL_WORD_VALUE) THEN
	            FIXZAR(2,1)=DTI_NULL_REAL
		 ELSE
	            FIXZAR(2,1)=WEDGE(JPOS)
		 ENDIF
	      ELSEIF (DATA_TYPE(BLEND_LUN(1)).EQ.DATA_LONG) THEN
		 IF (LEDGE(JPOS).EQ.NULL_LONG_VALUE) THEN
	            FIXZAR(2,1)=DTI_NULL_REAL
		 ELSE
	            FIXZAR(2,1)=LEDGE(JPOS)
		 ENDIF
	      ELSEIF (DATA_TYPE(BLEND_LUN(1)).EQ.DATA_REAL) THEN
	         FIXZAR(2,1)=REDGE(JPOS)
	      ENDIF
	      FIXZAR(1,1)=Y_OFFSET(LUN)-MINYOF+(SHARED_ROW(LUN)-1)
     &					*Y_GRID(LUN)
C
C Shared edge at bottom of file
	      IF (SHARED_ROW(LUN).EQ.1) THEN
	         FIXZAR(1,2)=FIXZAR(1,1)+(BORDER_WIDTH-1)*Y_GRID(LUN)
	         GET_FIXED_Z=DTI_READ_DATA(
     &			LUN,				! lun
     &			VALUE,				! a post
     &			DTI_WINDOW_SWX(LUN)+JPOS-1,	! x posn
     &			SHARED_ROW(LUN)+BORDER_WIDTH-1)	! y posn
C
	      ELSE
C Shared edge at top of file
	         FIXZAR(1,2)=FIXZAR(1,1)-(BORDER_WIDTH-1)*Y_GRID(LUN)
	         GET_FIXED_Z=DTI_READ_DATA(
     &			LUN,				! lun
     &			VALUE,				! a post
     &			DTI_WINDOW_SWX(LUN)+JPOS-1,	! x posn
     &			SHARED_ROW(LUN)-(BORDER_WIDTH-1))! y posn
	      ENDIF
	      IF (.NOT.GET_FIXED_Z) THEN
	         CALL LSL_PUTMSG(GET_FIXED_Z)
	         GOTO 10
	      ENDIF
C
C ......................................................................
C 		V E R T I C A L    J O I N
	   ELSE
C
	      IF (DATA_TYPE(BLEND_LUN(1)).EQ.DATA_BYTE) THEN
		 IF (BEDGE(JPOS).EQ.NULL_BYTE_VALUE) THEN
	            FIXZAR(2,1)=DTI_NULL_REAL
		 ELSE
		    BVAL = BEDGE(JPOS)
	            FIXZAR(2,1)=UNSIGNED_BVAL
		 ENDIF
	      ELSEIF (DATA_TYPE(BLEND_LUN(1)).EQ.DATA_WORD) THEN
		 IF (WEDGE(JPOS).EQ.NULL_WORD_VALUE) THEN
	            FIXZAR(2,1)=DTI_NULL_REAL
		 ELSE
	            FIXZAR(2,1)=WEDGE(JPOS)
		 ENDIF
	      ELSEIF (DATA_TYPE(BLEND_LUN(1)).EQ.DATA_LONG) THEN
		 IF (LEDGE(JPOS).EQ.NULL_LONG_VALUE) THEN
	            FIXZAR(2,1)=DTI_NULL_REAL
		 ELSE
	            FIXZAR(2,1)=LEDGE(JPOS)
		 ENDIF
	      ELSEIF (DATA_TYPE(BLEND_LUN(1)).EQ.DATA_REAL) THEN
	         FIXZAR(2,1)=REDGE(JPOS)
	      ENDIF
	      FIXZAR(1,1)=X_OFFSET(LUN)-MINXOF+(SHARED_COL(LUN)-1)
     &					*X_GRID(LUN)
C
C Shared edge at left of file
	      IF (SHARED_COL(LUN).EQ.1) THEN
	         FIXZAR(1,2)=FIXZAR(1,1)+(BORDER_WIDTH-1)*X_GRID(LUN)
	         GET_FIXED_Z=DTI_READ_DATA(
     &			LUN,				! lun
     &			VALUE,				! a post
     &			SHARED_COL(LUN)+BORDER_WIDTH-1,	! x posn
     &			DTI_WINDOW_SWY(LUN)+JPOS-1)	! y posn
C
	      ELSE
C Shared edge at right of file
	         FIXZAR(1,2)=FIXZAR(1,1)-(BORDER_WIDTH-1)*X_GRID(LUN)
	         GET_FIXED_Z=DTI_READ_DATA(
     &			LUN,				! lun
     &			VALUE,				! a post
     &			SHARED_COL(LUN)-(BORDER_WIDTH-1),! x posn
     &			DTI_WINDOW_SWY(LUN)+JPOS-1)	! y posn
	      ENDIF
	      IF (.NOT.GET_FIXED_Z) THEN
	         CALL LSL_PUTMSG(GET_FIXED_Z)
	         GOTO 10
	      ENDIF
	   ENDIF
	ENDIF
C
C Now put the DTI post value into our fixed Z array, probably
C having to convert data type as we go
	IF (DATA_TYPE(BLEND_LUN(1)).EQ.DATA_BYTE) THEN
	   IF (BVALUE.EQ.NULL_BYTE_VALUE) THEN
	      FIXZAR(2,2)=DTI_NULL_REAL
	   ELSE
	      BVAL=BVALUE			! convert to unsigned
	      FIXZAR(2,2)=UNSIGNED_BVAL
	   ENDIF
	ELSEIF (DATA_TYPE(BLEND_LUN(1)).EQ.DATA_WORD) THEN
	   IF (WVALUE.EQ.NULL_WORD_VALUE) THEN
	      FIXZAR(2,2)=DTI_NULL_REAL
	   ELSE
	      FIXZAR(2,2)=WVALUE
	   ENDIF
	ELSEIF (DATA_TYPE(BLEND_LUN(1)).EQ.DATA_LONG) THEN
	   IF (LVALUE.EQ.NULL_LONG_VALUE) THEN
	      FIXZAR(2,2)=DTI_NULL_REAL
	   ELSE
	      FIXZAR(2,2)=LVALUE
	   ENDIF
	ELSEIF (DATA_TYPE(BLEND_LUN(1)).EQ.DATA_REAL) THEN
	   FIXZAR(2,2)=RVALUE
	ENDIF
	NUMINS=2
	IF (NUM_IFF.GT.0) THEN
	   GET_FIXED_Z=IFF_INTERSECTIONS(JPOS,LUN)
	   IF (.NOT.GET_FIXED_Z) GOTO 10
C
C If IFF intersections have been found, sort them into ascending order
C of distance
	   IF (NUMINS.GT.2) THEN
	      CALL SHELL_SORT(FIXZAR,NUMINS,COMPARE,SWAP)
	   ENDIF
	ENDIF
	GET_FIXED_Z=SS$_NORMAL
10	RETURN
	END
