	LOGICAL FUNCTION BLEND_CMD()
C
***	MODULE	BLEND_CMD
***	IDENT	28JL92
C
C	Copyright (C), Laser-Scan Ltd., Cambridge, England
C
CMOD	Unwanted function declarations removed		TJH 08-Feb-1989
C	Created						TJH 23-Jul-1987
C
C Function to get input file-spec from BLEND command. If argument is
C missing the user is prompted. 
C
C Function returns .TRUE. if all is well, otherwise .FALSE.
C
	IMPLICIT NONE
C
C Parameters:
	INCLUDE	'LSL$DTMCREATESYS:MESPAR.PAR'
	INCLUDE 'LSL$CMNDTIBLEND:PARAMS.PAR'
	INCLUDE 'LSL$CMNDTI:DTIPAR.PAR'
	INCLUDE 'LSL$CMNDTI:DTILIBMSG.PAR'
	INCLUDE 'LSL$CMNDTI:DTIDEF.PAR'
C
C Common:
	INCLUDE 'LSL$CMNDTI:DTIHDR.CMN'
	INCLUDE	'LSL$CMNDTIBLEND:COMMAND.CMN'
	INCLUDE	'LSL$CMNDTIBLEND:FILES.CMN'
	INCLUDE 'LSL$CMNLSL:CMDCOM.CMN'
	INCLUDE 'LSL$CMNLSL:TXTC.CMN'
C
C W/s
	LOGICAL		AMBIG		! had an ambiguous file name ?
	LOGICAL*1	HELD		! had a HOLD file already?
	INTEGER		LUN		! current LUN
	INTEGER		I,N		! temp var
	BYTE		CH		! a character
	LOGICAL		BLANK,OK,IERR	! for error returns
	LOGICAL		PROMPT		! in prompt mode?
	INTEGER*2	SAVED_TXTPTR	! copy of TXTPTR
	CHARACTER*128	TMP_NAME	! temp. filename
	INTEGER		TMP_NAME_LENGTH	! temp. filename
C
C Functions
	LOGICAL	  GETSPEC 		! jacket for LIB$FIND_FILE
	LOGICAL	  GETFILNAM 		! get file-spec
	LOGICAL	  RDCHS			! read char. skipping spaces
	LOGICAL	  TTRSTR		! read from tt:
	LOGICAL	  OPEN_DTI		! open DTI file for access
C					! controlled by DTI_ACCESS(LUN)
C ......................................................................
C
	BLEND_CMD=.FALSE.		! assume failure
C
C See if the user has already specified a HOLD and a BLEND command
C or 2 BLEND commands! Look for a file opened by a HOLD command...
C
	HELD=.FALSE.
	DO 110 I=1,MAX_DTI
	   IF (DTI_ACCESS(I).EQ.1) HELD=.TRUE.
110	CONTINUE	     
C
C Count the blend commands
	N=0
	DO 115 I=1,MAX_DTI
	   IF (DTI_ACCESS(I).EQ.2.OR.DTI_ACCESS(I).EQ.4) N=N+1
115	CONTINUE	     
C
C Now complain if the idiot user has already specified 2 BLEND commands!
C
	IF (N.EQ.2) THEN
	   CALL WRITEF(ERROR//
     &		'Two BLEND commands have already been accepted!')
	   CALL WRITEF('              DTIBLEND requires either '//
     &			'a HOLD command and a BLEND command')
	   CALL WRITEF('              or two BLEND commands')
	   GOTO 30
	ENDIF
C
C Or has already specified a hold and a BLEND command
C
	IF (HELD .AND. N.NE.0) THEN
	   CALL WRITEF(ERROR//
     &	     'A BLEND and a HOLD command have already been accepted!')
	   CALL WRITEF('              DTIBLEND requires either '//
     &			'a HOLD command and a BLEND command')
	   CALL WRITEF('              or two BLEND commands')
	   GOTO 30
	ENDIF
	PROMPT=.FALSE.
C	
C See if at least one command argument was supplied
C
	BLANK=RDCHS(CH)			! empty line ...
	IF (BLANK.OR.CH.EQ.'!') THEN	! or comment?
	   IF (TTIN) THEN
	      CALL EXPAND('%S',WARNING)
	   ELSE
	      CALL EXPAND('%S  ',ERROR)
	   ENDIF	   
	   PROMPT=.TRUE.
	   IF (INSITU) THEN
	      CALL APPEND('You must specify a file-spec argument to')
	      CALL WRTAPP('the BLEND command')
	   ELSE
	      CALL WRTAPP(
     &		'You must specify two file-spec arguments to ')
	      CALL WRITEF(
     &		'                the BLEND command')
	   ENDIF
C
	   IF (TTIN) THEN
	      CALL WRITEF('                For '//
     &			'example BLEND SW301.DTI SW301OUT.DTI')
	      CALL WRITEF
	      IF (INSITU) THEN
	         OK=TTRSTR(,,'Read and modify which DTI file? ',IERR)
	      ELSE
	         OK=TTRSTR(,,'Read from which DTI file? ',IERR)
	      ENDIF
	      IF (OK) THEN
	         CALL BSLN
	      ELSE
	         CALL LSL_PUTMSG(OK)
	         CALL LSL_ADDMSG(IERR)
	         GOTO 30
	      ENDIF
	      IF (TXTPTR.EQ.0) GOTO 30		! empty line
	   ELSE
	      GOTO 30	! someone got their indirect file wrong !!
	   ENDIF
	ENDIF
C
C ......................................................................
C BLEND command is in context, set up next available DTI LUN by
C incrementing /FILES/ DTI_LUN
C
	IF (DTI_LUN+1.GT.MAX_DTI) THEN
	   CALL LSL_PUTMSG(DTI__NOFREELUN)
	   GOTO 30
	ELSE
	   DTI_LUN=DTI_LUN+1
	   LUN=DTI_LUN
	ENDIF
C
C Got a LUN, try interpreting the file-spec
	CALL BSCH
C
C Check that the user hasn't put a "!" comment delimiter immediately
C after the 1st file-spec. Reduce TXTPTR anyway as GETFILNAM 
C can't handle 2 file-specs at a time
C
	SAVED_TXTPTR=TXTPTR
	DO 10 I=DCPTR,TXTPTR
	   IF (TXTBUF(I).EQ.'!') THEN
	      TXTPTR=I-1
	      GOTO 20
	   ELSEIF(TXTBUF(I).EQ.' ') THEN
	      TXTPTR=I
	      GOTO 20
	   ENDIF
10	CONTINUE
C
20	OK=GETFILNAM(DTI_NAME(LUN),	! name
     &		DTI_NAME_LENGTH(LUN),	! name length
     &		'LSL$DTI:DTI.DTI;0',	! default spec
     &		.TRUE.)			! allow version numbers
	IF (OK) THEN
	   CALL STR$UPCASE(DTI_NAME(LUN),DTI_NAME(LUN))
	ELSE
	   CALL WRITEF(ERROR//'Unable to interpret BLEND file-spec')
	   CALL LSL_PUTMSG(OK)
	   GOTO 30
	ENDIF
C
C Now try to find the file.
C
	OK=GETSPEC(DTI_NAME(LUN),	! name
     &		DTI_NAME_LENGTH(LUN),	! name length
     &		TMP_NAME,		! full name of file found
     &		TMP_NAME_LENGTH,	! length of name found
     &		'LSL$DTI:DTI.DTI;',	! default
     &		' ',
     &		AMBIG)
	IF (.NOT.OK) THEN
	   CALL WRITEF('%S searching for file %S'
     &			,ERROR,	  DTI_NAME(LUN)(1:DTI_NAME_LENGTH(LUN)))
	   CALL LSL_ADDMSG(OK)
	   GOTO 30
	ENDIF
C
C First file-spec is OK. Check if we are in insitu mode. If not prompt
C for a second file (for output) if necesary. If we are we are
C now able to open the input file for modification
C
	TXTPTR=SAVED_TXTPTR		! restore TXTPTR
	IF (INSITU) THEN
	   DTI_ACCESS(LUN)=4		! open read/write
	   OK = OPEN_DTI(LUN)
	   IF (OK) BLEND_CMD=.TRUE.
	ELSE
	   BLANK=RDCHS(CH)			! empty line ...
	   CALL BSCH
	   IF ((BLANK.OR.CH.EQ.'!').AND.(.NOT.PROMPT)) THEN
	      CALL WRITEF(WARNING//
     &			'You must specify two file-spec arguments to')
	      CALL WRITEF(
     &		'                the BLEND command if the '//
     &		'IN_SITU option is disabled.')
	   ENDIF
	   IF (PROMPT.OR.BLANK.OR.CH.EQ.'!') THEN
	      CALL WRITEF
	      CALL WRITEF(
     &			'Now specify the output DTI file '//
     &			'into which the results of')
	      CALL WRITEF(
     &			'blending are to be written.')
	      CALL WRITEF
	      OK=TTRSTR(,,'Output DTI file-spec? ',IERR)
	      IF (OK) THEN
	         CALL BSLN
	      ELSE
	         CALL LSL_PUTMSG(OK)
	         CALL LSL_ADDMSG(IERR)
	         GOTO 30
	      ENDIF
	      IF (TXTPTR.EQ.0) GOTO 30
	   ENDIF
C
C See if a second file-spec is now available	
	   BLANK=RDCHS(CH)			! empty line ...
	   IF (BLANK.OR.CH.EQ.'!') THEN		! or comment?
	      CALL WRITEF(ERROR//
     &		'Reading BLEND output file-spec')
	      CALL LSL_PUTMSG(OK)
	   ELSE
C
C File-spec appears to be there, see if it ia a valid file-spec
	      CALL BSCH
	      OK=GETFILNAM(TMP_NAME,		! name
     &			TMP_NAME_LENGTH,	! name length
     &			'LSL$DTI:DTI.DTI;0',	! default spec
     &			.TRUE.,			! allow version number
     &			%REF('!'))		! stop at comment
	      IF (.NOT.OK) THEN
	         CALL WRITEF(ERROR//
     &		'Unable to interpret BLEND output file-spec')
	         CALL LSL_PUTMSG(OK)
	         GOTO 30
	      ENDIF
	      CALL STR$UPCASE(TMP_NAME,TMP_NAME)
C
C Open the first file for readonly
	      DTI_ACCESS(LUN)=2		! 2 = blend file open for read
	      OK = OPEN_DTI(LUN)
	      IF (OK) THEN
C
C Get next available DTI LUN and then try interpreting the BLEND
C output file-spec
	         IF (DTI_LUN+1.GT.MAX_DTI) THEN
	            CALL LSL_PUTMSG(DTI__NOFREELUN)
	         ELSE
	            DTI_LUN=DTI_LUN+1
	            LUN=DTI_LUN
	         ENDIF
	      ELSE
	         GOTO 30
	      ENDIF
C
	      IF (OK) THEN
C
C That seems OK, try opening the output file. Transfer our temporary
C output DTI file-spac into /DTIHDR/
	         DTI_NAME(LUN)=TMP_NAME
	         DTI_NAME_LENGTH(LUN)=TMP_NAME_LENGTH
	         DTI_ACCESS(LUN)=3		! open for write
	         OK = OPEN_DTI(LUN)
	         IF (OK) BLEND_CMD=.TRUE.
	      ENDIF
	   ENDIF
	ENDIF
C
30	RETURN
	END
C
