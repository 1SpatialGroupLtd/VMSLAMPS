	LOGICAL FUNCTION CHECK_ABUT()
C
***	MODULE	CHECK_ABUT
***	IDENT	13AU92
C
C 	Copyright Laser-Scan Limited, Cambridge, England.
C
C 	Created 					TJH 12-May-1988
C
CMOD	XMIN(*),XMAX(*) now correct for DTED		TJH 10-Jun-1988
CMOD	DTI_DTED replaced by parameter DTI_TED4         DRC 18-Aug-1988
CMOD1137 Fix bug comparing abutment which used y instead
C	 of x for horizontally adjacent files		 JB 13-AUG-1992
C
C Check that the two DTMs actually lie adjacent to one another, that
C the DTI data are in the same geographics units and that the DTI
C files have the same number of rows or columns on the mutually
C shared boundary. If any of these conditions are not met
C give up. We also get the range information for IFF vector underlay
C clipping.
C
C The function value is .TRUE. if we succeed.
C
	IMPLICIT NONE
C
C Parameters
	INCLUDE 'LSL$DTMCREATESYS:MESPAR.PAR'
	INCLUDE 'LSL$CMNDTIBLEND:PARAMS.PAR'
	INCLUDE 'LSL$CMNDTI:DTIPAR.PAR'
	INCLUDE 'LSL$CMNDTI:DTIDEF.PAR'
C
C Common
	INCLUDE 'LSL$CMNDTI:DTIHDR.CMN'
	INCLUDE 'LSL$CMNDTIBLEND:COMMAND.CMN'
	INCLUDE 'LSL$CMNDTIBLEND:PROCESS.CMN'
	INCLUDE 'LSL$CMNDTIBLEND:FILES.CMN'
	INCLUDE 'LSL$CMNLSL:CMDCOM.CMN'
	INCLUDE 'LSL$CMNLSL:TXTC.CMN'
C
C W/s
	INTEGER		I
	REAL		XMIN(2),YMIN(2),XMAX(2),YMAX(2)
	REAL		WIDTMP,TEMP
	LOGICAL		ADJACENT	! files share edge?
C
C ......................................................................
C
	CHECK_ABUT=.TRUE.		! assume success
C
C Determine the coverage of each of the two input DTI files	
C Unless DTED file use metres
C
	IF (HEADER_TYPE(INLUN(1)).NE.DTI_TED4) THEN	
	   XMIN(1)=X_OFFSET(INLUN(1))-MINXOF
	   XMAX(1)=FLOAT(X_EXTENT(INLUN(1))-1)*X_GRID(INLUN(1))
     &			+X_OFFSET(INLUN(1))-MINXOF
	   YMIN(1)=Y_OFFSET(INLUN(1))-MINYOF
	   YMAX(1)=FLOAT(Y_EXTENT(INLUN(1))-1)*Y_GRID(INLUN(1))
     &			+Y_OFFSET(INLUN(1))-MINYOF
C
	   XMIN(2)=X_OFFSET(INLUN(2))-MINXOF
	   XMAX(2)=FLOAT(X_EXTENT(INLUN(2))-1)*X_GRID(INLUN(2))
     &			+X_OFFSET(INLUN(2))-MINXOF
	   YMIN(2)=Y_OFFSET(INLUN(2))-MINYOF
	   YMAX(2)=FLOAT(Y_EXTENT(INLUN(2))-1)*Y_GRID(INLUN(2))
     &			+Y_OFFSET(INLUN(2))-MINYOF
C
	ELSE
C
C DTED file - use the geographical bounding rect. from the header
	   XMIN(1)=LONREC(1,INLUN(1))-MINXOF
	   XMAX(1)=LONREC(3,INLUN(1))-MINXOF
	   YMIN(1)=LATREC(1,INLUN(1))-MINYOF
	   YMAX(1)=LATREC(3,INLUN(1))-MINYOF
C
	   XMIN(2)=LONREC(1,INLUN(2))-MINXOF
	   XMAX(2)=LONREC(3,INLUN(2))-MINXOF
	   YMIN(2)=LATREC(1,INLUN(2))-MINYOF
	   YMAX(2)=LATREC(3,INLUN(2))-MINYOF
	ENDIF
C
C Now check if they are physically adjacent. If so put the join
C line in BLEND_ZONE. BLEND_ZONE will later be given a width
C determined by BORDER_WIDTH-1 times cell side-length
C
	ADJACENT=.FALSE.
C
	IF (XMIN(1).EQ.XMAX(2)) THEN		! vertical join i.e.
C						! files side by side
	   SHARED_COL(INLUN(2))=X_EXTENT(INLUN(2))
	   SHARED_COL(INLUN(1))=1
	   SHARED_ROW(INLUN(1))=0
	   SHARED_ROW(INLUN(2))=0
	   BLEND_ZONE(1,1)=XMIN(1)		! NW x
	   BLEND_ZONE(1,2)=XMIN(1)		! SW x
	   BLEND_ZONE(1,3)=XMIN(1)		! SE x
	   BLEND_ZONE(1,4)=XMIN(1)		! NE x
	   BLEND_ZONE(2,1)=MIN(YMAX(1),YMAX(2))	! NW y
	   BLEND_ZONE(2,2)=MAX(YMIN(1),YMIN(2))	! SW y
	   BLEND_ZONE(2,3)=MAX(YMIN(1),YMIN(2))	! SE y
	   BLEND_ZONE(2,4)=MIN(YMAX(1),YMAX(2))	! NE y
	   ADJACENT=.TRUE.
C
	ELSEIF (XMIN(2).EQ.XMAX(1)) THEN	! vertical join i.e.
C						! files side by side
	   SHARED_COL(INLUN(1))=X_EXTENT(INLUN(1))
	   SHARED_COL(INLUN(2))=1
	   SHARED_ROW(INLUN(1))=0
	   SHARED_ROW(INLUN(2))=0
	   BLEND_ZONE(1,1)=XMIN(2)		! NW x
	   BLEND_ZONE(1,2)=XMIN(2)		! SW x
	   BLEND_ZONE(1,3)=XMIN(2)		! SE x
	   BLEND_ZONE(1,4)=XMIN(2)		! NE x
	   BLEND_ZONE(2,1)=MIN(YMAX(1),YMAX(2))	! NW y
	   BLEND_ZONE(2,2)=MAX(YMIN(1),YMIN(2))	! SW y
	   BLEND_ZONE(2,3)=MAX(YMIN(1),YMIN(2))	! SE y
	   BLEND_ZONE(2,4)=MIN(YMAX(1),YMAX(2))	! NE y
	   ADJACENT=.TRUE.
C
	ELSEIF (YMIN(1).EQ.YMAX(2)) THEN	! horizontal join i.e.
C						! files top and bottom
	   SHARED_ROW(INLUN(1))=1
	   SHARED_ROW(INLUN(2))=Y_EXTENT(INLUN(2))
	   SHARED_COL(INLUN(1))=0
	   SHARED_COL(INLUN(2))=0
	   BLEND_ZONE(2,1)=YMIN(1)		! NW Y
	   BLEND_ZONE(2,2)=YMIN(1)		! SW Y
	   BLEND_ZONE(2,3)=YMIN(1)		! SE Y
	   BLEND_ZONE(2,4)=YMIN(1)		! NE Y
	   BLEND_ZONE(1,1)=MAX(XMIN(1),XMIN(2))	! NW X
	   BLEND_ZONE(1,2)=MAX(XMIN(1),XMIN(2))	! SW X
	   BLEND_ZONE(1,3)=MIN(XMAX(1),XMAX(2))	! SE X
	   BLEND_ZONE(1,4)=MIN(XMAX(1),XMAX(2))	! NE X
	   ADJACENT=.TRUE.
C
	ELSEIF (YMIN(2).EQ.YMAX(1)) THEN	! horizontal join i.e.
C						! files top and bottom
	   SHARED_ROW(INLUN(2))=1
	   SHARED_ROW(INLUN(1))=Y_EXTENT(INLUN(1))
	   SHARED_COL(INLUN(1))=0
	   SHARED_COL(INLUN(2))=0
	   BLEND_ZONE(2,1)=YMIN(2)		! NW Y
	   BLEND_ZONE(2,2)=YMIN(2)		! SW Y
	   BLEND_ZONE(2,3)=YMIN(2)		! SE Y
	   BLEND_ZONE(2,4)=YMIN(2)		! NE Y
	   BLEND_ZONE(1,1)=MAX(XMIN(1),XMIN(2))	! NW X
	   BLEND_ZONE(1,2)=MAX(XMIN(1),XMIN(2))	! SW X
	   BLEND_ZONE(1,3)=MIN(XMAX(1),XMAX(2))	! SE X
	   BLEND_ZONE(1,4)=MIN(XMAX(1),XMAX(2))	! NE X
	   ADJACENT=.TRUE.
	ENDIF
C
	IF (.NOT.ADJACENT) THEN
	   CALL WRITEF(ERROR//
     &    'The input DTI files do not join along a common edge')
	   CHECK_ABUT=.FALSE.
	   GOTO 10
	ENDIF
C
C As the files appear to be adjacent along one axis, do they match
C across the axis, or do they miss each other entirely? 
C
	IF (BLEND_ZONE(1,1).EQ.BLEND_ZONE(1,4)) THEN ! vertical join
	   VERTICAL_JOIN   =.TRUE.
	   HORIZONTAL_JOIN =.FALSE.
C
	   IF ( ABS(YMAX(1)-YMAX(2)) .GT. (YMAX(1)-YMIN(1)) ) THEN
	      CALL WRITEF(ERROR//
     &		'Although abutting along a common '//
     &			'vertical axis, the input')
	      CALL WRITEF
     &	('              DTI files do not join across a common edge') 
	      CHECK_ABUT=.FALSE.
C
C Calculate the blend zone window width using BORDER_WIDTH times cell
C side length. 
	   ELSE
C
C DTED file - geographicals
	      IF (HEADER_TYPE(INLUN(1)) .EQ. DTI_TED4) THEN
	         WIDTMP = FLOAT(BORDER_WIDTH-1) * LONINT(INLUN(1))
C
C Only extend the blend zone into the BLEND file area if we have been
C given a HOLD file
	         IF (HOLD_LUN.NE.0) THEN
		    TEMP = BLEND_ZONE(1,1) + WIDTMP
C
	            IF (TEMP.GT.LONREC(1,HOLD_LUN) .AND.
     &			TEMP.LT.LONREC(2,HOLD_LUN)) THEN
	               BLEND_ZONE(1,1)=BLEND_ZONE(1,1)-WIDTMP
	               BLEND_ZONE(1,2)=BLEND_ZONE(1,1)
	            ELSE
	               BLEND_ZONE(1,3)=BLEND_ZONE(1,3)+WIDTMP
	               BLEND_ZONE(1,4)=BLEND_ZONE(1,3)
	            ENDIF
C
	         ELSE
	            BLEND_ZONE(1,1)=BLEND_ZONE(1,1)-WIDTMP
	            BLEND_ZONE(1,2)=BLEND_ZONE(1,1)
	            BLEND_ZONE(1,3)=BLEND_ZONE(1,3)+WIDTMP
	            BLEND_ZONE(1,4)=BLEND_ZONE(1,3)
	         ENDIF
C
C Ground metres (or something like)
	      ELSE
	         WIDTMP=FLOAT(BORDER_WIDTH-1) * X_GRID(INLUN(1))
C
C Only extend the blend zone into the BLEND file area if we have been
C given a HOLD file
C
	         IF (HOLD_LUN.NE.0) THEN
		    TEMP = BLEND_ZONE(1,1) + WIDTMP
C
	            IF (TEMP .GT. (X_OFFSET(HOLD_LUN)-MINXOF) .AND.
     &			TEMP .LT. (X_EXTENT(HOLD_LUN)-1) * 
     &				   X_GRID(HOLD_LUN) + 
     &				   X_OFFSET(HOLD_LUN)-MINXOF) THEN
	               BLEND_ZONE(1,1)=BLEND_ZONE(1,1)-WIDTMP
	               BLEND_ZONE(1,2)=BLEND_ZONE(1,1)
	            ELSE
	               BLEND_ZONE(1,3)=BLEND_ZONE(1,3)+WIDTMP
	               BLEND_ZONE(1,4)=BLEND_ZONE(1,3)
	            ENDIF
	         ELSE
	            BLEND_ZONE(1,1)=BLEND_ZONE(1,1)-WIDTMP
	            BLEND_ZONE(1,2)=BLEND_ZONE(1,1)
	            BLEND_ZONE(1,3)=BLEND_ZONE(1,3)+WIDTMP
	            BLEND_ZONE(1,4)=BLEND_ZONE(1,3)
	         ENDIF
	      ENDIF
	   ENDIF
	ELSE					! horizontal join
C
	   VERTICAL_JOIN   =.FALSE.
	   HORIZONTAL_JOIN =.TRUE.
C
	   IF (ABS(XMAX(1)-XMAX(2)) .GT. (XMAX(1)-XMIN(1))) THEN
	      CALL WRITEF(ERROR//
     &		'Although abutting along a common '//
     &			'horizontal axis, the input')
	      CALL WRITEF
     &	('              DTI files do not join across a common edge') 
	      CHECK_ABUT=.FALSE.
	      GOTO 10
C
C Calculate the blend zone window width using BORDER_WIDTH times cell
C side length. Determine whether we are blending both input files.
	   ELSE
C
C DTED file - geographicals
	      IF (HEADER_TYPE(INLUN(1)).EQ.DTI_TED4) THEN
	         WIDTMP=FLOAT(BORDER_WIDTH-1)*LATINT(INLUN(1))
C
C Only extend the blend zone into the BLEND file area if we have been
C given a HOLD file
	         IF (HOLD_LUN.NE.0) THEN
		    TEMP = BLEND_ZONE(2,1)+WIDTMP
C
	            IF (TEMP .GT. LATREC(1,HOLD_LUN) .AND.
     &			TEMP .LT. LATREC(3,HOLD_LUN)) THEN
	               BLEND_ZONE(2,2)=BLEND_ZONE(2,2)-WIDTMP
	               BLEND_ZONE(2,3)=BLEND_ZONE(2,2)
	            ELSE
	               BLEND_ZONE(2,1)=BLEND_ZONE(2,1)+WIDTMP
	               BLEND_ZONE(2,4)=BLEND_ZONE(2,1)
	            ENDIF
	         ELSE
	            BLEND_ZONE(2,1)=BLEND_ZONE(2,1)+WIDTMP
	            BLEND_ZONE(2,2)=BLEND_ZONE(2,2)-WIDTMP
	            BLEND_ZONE(2,3)=BLEND_ZONE(2,2)
	            BLEND_ZONE(2,4)=BLEND_ZONE(2,1)
	         ENDIF
	      ELSE		! Ground metres (or something like)
	         WIDTMP=FLOAT(BORDER_WIDTH-1)*Y_GRID(INLUN(1))
C
C Only extend the blend zone into the BLEND file area if we have been
C given a HOLD file
	         IF (HOLD_LUN.NE.0) THEN
		    TEMP = BLEND_ZONE(2,1)+WIDTMP
C
	            IF (TEMP .GT. (Y_OFFSET(HOLD_LUN)-MINYOF) .AND.
     &			TEMP .LT. (Y_EXTENT(HOLD_LUN)-1) *
     &			Y_GRID(HOLD_LUN) + 
     &			Y_OFFSET(HOLD_LUN)-MINYOF) THEN
	               BLEND_ZONE(2,2)=BLEND_ZONE(2,2)-WIDTMP
	               BLEND_ZONE(2,3)=BLEND_ZONE(2,2)
	            ELSE
	               BLEND_ZONE(2,1)=BLEND_ZONE(2,1)+WIDTMP
	               BLEND_ZONE(2,4)=BLEND_ZONE(2,1)
	            ENDIF
	         ELSE
	            BLEND_ZONE(2,1)=BLEND_ZONE(2,1)+WIDTMP
	            BLEND_ZONE(2,2)=BLEND_ZONE(2,2)-WIDTMP
	            BLEND_ZONE(2,3)=BLEND_ZONE(2,2)
	            BLEND_ZONE(2,4)=BLEND_ZONE(2,1)
	         ENDIF
	      ENDIF
	   ENDIF
	ENDIF
C
C ......................................................................
C Define the start_col/stop_col & start_row/stop-row for the BLEND
C file(s)  - put the result in /DTIHDR/DTI_WINDOW()
C
	CALL COVERAGE(INLUN(1))
	CALL COVERAGE(INLUN(2))
C
C Report the blend zone coverage to the user
	CALL REPORT_ZONE
C
10	RETURN
	END
C
