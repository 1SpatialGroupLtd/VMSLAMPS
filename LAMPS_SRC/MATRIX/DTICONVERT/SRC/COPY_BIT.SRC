	LOGICAL FUNCTION COPY_BIT (FROM,TO,HOW)
C
***	IDENT	06AU92
***	MODULE	COPY_BIT
C
C	Copyright : Laser-Scan Laboratories, Cambridge, England
C	Author    : D R Catlow
CMOD899 For COPY_BIT				JB 13-Jun-1990
C
C 	Routine to copy an array of bit data from the input file;
C	convert into another data format if necessary, and transfer
C	to the output file.
C	The data is dealt with on a column by column basis.
C	
	IMPLICIT NONE
C
C	Arguments:
	INTEGER*4	FROM		!input DTI lun
	INTEGER*4	TO		!output DTI lun
	INTEGER*4	HOW		!conversion procedure
C
C	HOW=0	!no data conversion (straight copy)
C	HOW=1	!bit to byte conversion
C	HOW=2	!bit to word conversion
C	HOW=3	!bit to longword conversion
C	HOW=4	!bit to real conversion
C
***	PARAMETER/LSL$CMNDTI:DTILIBMSG/
***	PARAMETER/LSL$CMNDTI:DTIPAR/
***	COMMON/LSL$CMNDTI:DTIHDR/
C
C locals
	REAL		REAL_BUFFER(DTI_MAX_ROWS)
	INTEGER*4	LONG_BUFFER(DTI_MAX_ROWS)
	INTEGER*2	WORD_BUFFER(DTI_MAX_ROWS)
	BYTE		BYTE_BUFFER(DTI_MAX_ROWS)
	BYTE		TEMP_BUFFER(DTI_MAX_ROWS)
	BYTE		TEMP_BYTE
C
	INTEGER*4	X,Y,I		!counters
	INTEGER*4	RETVAL		!function return code
	INTEGER*4	ERROR		!system error code
C
	EQUIVALENCE	(TEMP_BYTE,I)
C
C Functions
	INTEGER*4	DTI_COPY_BIT_DATA	!transfer bit  data
	INTEGER*4	DTI_COPY_BYTE_DATA	!transfer byte data
	INTEGER*4	DTI_COPY_WORD_DATA	!transfer word data
	INTEGER*4	DTI_COPY_LONG_DATA	!transfer long data
	INTEGER*4	DTI_COPY_REAL_DATA	!transfer real data
	INTEGER*4	LIB$EXTZV
C
C---------------------------------------------------------------------------
C Process DTI columns
C
	DO 500 X = 1,X_EXTENT(FROM)
C
	   RETVAL = DTI_COPY_BIT_DATA(FROM,BYTE_BUFFER,.FALSE.,
     &                                 X,1,1,Y_EXTENT(FROM),ERROR)
C
	   IF(RETVAL.NE.DTI__NORMAL)THEN
	      CALL LSL_PUTMSG(RETVAL)
	      IF(RETVAL.EQ.DTI__SYSERR)CALL LSL_PUTMSG(RETVAL)
	      COPY_BIT =.FALSE.			!signal failure
	      GOTO 999
	   ENDIF
C
C Convert to the different datatypes
C
	   IF      (HOW.EQ.1) THEN		!bit to byte
	           DO 100 Y = 1,Y_EXTENT(FROM)
		     I = LIB$EXTZV(Y-1,1,BYTE_BUFFER)
		     TEMP_BUFFER(Y) = TEMP_BYTE
100 		   CONTINUE
C
	   ELSE IF (HOW.EQ.2) THEN		!bit to word
	           DO 200 Y = 1,Y_EXTENT(FROM)
 	              WORD_BUFFER(Y) = LIB$EXTZV(Y-1,1,BYTE_BUFFER)
200 		   CONTINUE
C
	   ELSE IF (HOW.EQ.3) THEN		!bit to long
	           DO 300 Y = 1,Y_EXTENT(FROM)
 	              LONG_BUFFER(Y) = LIB$EXTZV(Y-1,1,BYTE_BUFFER)
300	  	   CONTINUE
C
	   ELSE IF (HOW.EQ.4) THEN		!bit to real
	           DO 400 Y = 1,Y_EXTENT(FROM)
 	              REAL_BUFFER(Y) = LIB$EXTZV(Y-1,1,BYTE_BUFFER)
400	  	   CONTINUE
	   ENDIF
C	     
C------------------------------------------------------------------------
C Output the converted data values to the output file
C
	   IF (HOW.EQ.0) THEN
C
	       RETVAL = DTI_COPY_BIT_DATA(TO, BYTE_BUFFER,.TRUE.,
     &                                 X,1,1,Y_EXTENT(FROM),ERROR)
	       IF (RETVAL.NE.DTI__NORMAL)THEN
	          CALL LSL_PUTMSG(RETVAL)
	          IF(RETVAL.EQ.DTI__SYSERR)CALL LSL_PUTMSG(RETVAL)
	          COPY_BIT =.FALSE.		!signal failure
	          GOTO 999
	       ENDIF
C
	   ELSE IF (HOW.EQ.1)THEN	
	       RETVAL = DTI_COPY_BYTE_DATA(TO,TEMP_BUFFER,.TRUE.,
     &                                 X,1,1,Y_EXTENT(FROM),ERROR)
	       IF(RETVAL.NE.DTI__NORMAL)THEN
	          CALL LSL_PUTMSG(RETVAL)
	          IF(RETVAL.EQ.DTI__SYSERR)CALL LSL_PUTMSG(RETVAL)
	          COPY_BIT=.FALSE.		!signal failure
	          GOTO 999
	       ENDIF
C
	   ELSE IF (HOW.EQ.2)THEN
	       RETVAL = DTI_COPY_WORD_DATA(TO,WORD_BUFFER,.TRUE.,
     &                                 X,1,1,Y_EXTENT(FROM),ERROR)
	       IF(RETVAL.NE.DTI__NORMAL)THEN
	          CALL LSL_PUTMSG(RETVAL)
	          IF(RETVAL.EQ.DTI__SYSERR)CALL LSL_PUTMSG(RETVAL)
	          COPY_BIT=.FALSE.		!signal failure
	          GOTO 999
	       ENDIF
C
	   ELSE IF (HOW.EQ.3)THEN
	       RETVAL = DTI_COPY_LONG_DATA(TO,LONG_BUFFER,.TRUE.,
     &                                 X,1,1,Y_EXTENT(FROM),ERROR)
	       IF(RETVAL.NE.DTI__NORMAL)THEN
	          CALL LSL_PUTMSG(RETVAL)
	          IF(RETVAL.EQ.DTI__SYSERR)CALL LSL_PUTMSG(RETVAL)
	          COPY_BIT=.FALSE.		!signal failure
	          GOTO 999
	       ENDIF
C
	   ELSE IF (HOW.EQ.4)THEN
	       RETVAL = DTI_COPY_REAL_DATA(TO,REAL_BUFFER,.TRUE.,
     &                                 X,1,1,Y_EXTENT(FROM),ERROR)
	       IF(RETVAL.NE.DTI__NORMAL)THEN
	          CALL LSL_PUTMSG(RETVAL)
	          IF(RETVAL.EQ.DTI__SYSERR)CALL LSL_PUTMSG(RETVAL)
	          COPY_BIT =.FALSE.		!signal failure
	          GOTO 999
	       ENDIF
C
	   ENDIF
C
500	CONTINUE		!do the next column of data
C
C----------------------------------------------------------------------------
C
	COPY_BIT = .TRUE.	!signal success
C
999	RETURN
	END
C
