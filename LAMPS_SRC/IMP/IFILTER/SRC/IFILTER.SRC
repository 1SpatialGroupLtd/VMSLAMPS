	PROGRAM IFILTER
C
***	IDENT	23AU89
***	MODULE	IFILTER
C
C	Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C	Created						RJH 16-May-1986
CMOD	Exception handler added				TJH 23-Aug-1989
C
C	IMP IFILTER Program - Smooths and/or filters IFF strings
C
C Description
C
C	The program will smooth or filter, or smooth and then filter 
C	IFF strings. 
C
C	For filtering, it uses either
C
C		i)  the least squares "BUNCH" filter, or
C		ii) the Douglas-Peuker filter
C
C	The smoothing options are
C
C		i)  linear interpolation, or
C		ii) Akima cubic interpolation
C
	IMPLICIT NONE
C
	INTEGER*2 I,J,L
	LOGICAL	  OK		! function return
	CHARACTER*256	ERROR	! error message (after FAO)
	CHARACTER*256	TEXT	! error message (before FAO)
	CHARACTER*1	NULL	! ASCII zero
	DATA 		NULL/0/
C
C Functions called
C
	LOGICAL		BRIDGE		! establishes exception handler
	LOGICAL		GET_COMMAND	! get and decode command line
	LOGICAL		OPEN_IFF	! open IFF files
	LOGICAL		CLOSE_IFF	! close IFF files
C
C
***	PARAMETER/LSL$CMNIFILT:IFILTMSG/! IFILTER messages
C
***	COMMON/LSL$CMNIFILT:ERRMSG/	! for exception handler routine
***	COMMON/LSL$CMNLSL:STATUS/	! LSLLIB status flag
	INCLUDE '($SSDEF)/NOLIST'
C
C Initialise libraries
C
	CALL LSL_INIT(.TRUE.)
	CALL FRT_ACDINI
	CALL IFFTDY
C
C Get and decode the command line
C
	IF (GET_COMMAND()) THEN
C
C Open the IFF files 
C
	   IF (OPEN_IFF()) THEN
C
C Process the input file and produce the output file
C Call PROCESS via BRIDGE to enable us to declare an exception handler.
	      OK=BRIDGE()
	      IF (.NOT.OK) THEN 		! we've had an exception
	         CALL LSL_PUTMSG(IFILT__ARITHMETIC)
	         CALL LSL_GETMSG(OK,TEXT,J)	! get what went wrong
	         CALL SYS$FAOL(TEXT,J,ERROR,ERRARG(3))! patch in any args
	         DO 10 I=1,J		! strip off all the nulls (!!)
	            L=J-I+1
	            IF (ERROR(L:L).NE.NULL) GOTO 20
10	         CONTINUE
C Change leading '%' to a '-'
20		 IF (ERROR(1:1).EQ.'%') ERROR(1:1)='-'
		 CALL WRITEF('%S',ERROR(1:L))
C Output (hopefully useful) "look at your qualifier arguments message"
		 CALL LSL_ADDMSG(IFILT__CHKARGS)
		 LSL_STATUS=SS$_ABORT
	      ENDIF
C
C Close the IFF files
C
	      CALL CLOSE_IFF
	   ENDIF
	ENDIF
C
C Set the return status and finish up
C
	CALL LSL_EXIT
	END
