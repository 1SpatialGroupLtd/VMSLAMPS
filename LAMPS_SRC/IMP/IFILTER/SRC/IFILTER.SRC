C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1989-08-23 11:35:04.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	PROGRAM IFILTER
C
***	IDENT	23AU89
***	MODULE	IFILTER
C
C	Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C	Created						RJH 16-May-1986
CMOD	Exception handler added				TJH 23-Aug-1989
C
C	IMP IFILTER Program - Smooths and/or filters IFF strings
C
C Description
C
C	The program will smooth or filter, or smooth and then filter 
C	IFF strings. 
C
C	For filtering, it uses either
C
C		i)  the least squares "BUNCH" filter, or
C		ii) the Douglas-Peuker filter
C
C	The smoothing options are
C
C		i)  linear interpolation, or
C		ii) Akima cubic interpolation
C
	IMPLICIT NONE
C
	INTEGER*2 I,J,L
	LOGICAL	  OK		! function return
	CHARACTER*256	ERROR	! error message (after FAO)
	CHARACTER*256	TEXT	! error message (before FAO)
	CHARACTER*1	NULL	! ASCII zero
	DATA 		NULL/0/
C
C Functions called
C
	LOGICAL		BRIDGE		! establishes exception handler
	LOGICAL		GET_COMMAND	! get and decode command line
	LOGICAL		OPEN_IFF	! open IFF files
	LOGICAL		CLOSE_IFF	! close IFF files
C
C
***	PARAMETER/LSL$CMNIFILT:IFILTMSG/! IFILTER messages
C
***	COMMON/LSL$CMNIFILT:ERRMSG/	! for exception handler routine
***	COMMON/LSL$CMNLSL:STATUS/	! LSLLIB status flag
	INCLUDE '($SSDEF)/NOLIST'
C
C Initialise libraries
C
	CALL LSL_INIT(.TRUE.)
	CALL FRT_ACDINI
	CALL IFFTDY
C
C Get and decode the command line
C
	IF (GET_COMMAND()) THEN
C
C Open the IFF files 
C
	   IF (OPEN_IFF()) THEN
C
C Process the input file and produce the output file
C Call PROCESS via BRIDGE to enable us to declare an exception handler.
	      OK=BRIDGE()
	      IF (.NOT.OK) THEN 		! we've had an exception
	         CALL LSL_PUTMSG(IFILT__ARITHMETIC)
	         CALL LSL_GETMSG(OK,TEXT,J)	! get what went wrong
	         CALL SYS$FAOL(TEXT,J,ERROR,ERRARG(3))! patch in any args
	         DO 10 I=1,J		! strip off all the nulls (!!)
	            L=J-I+1
	            IF (ERROR(L:L).NE.NULL) GOTO 20
10	         CONTINUE
C Change leading '%' to a '-'
20		 IF (ERROR(1:1).EQ.'%') ERROR(1:1)='-'
		 CALL WRITEF('%S',ERROR(1:L))
C Output (hopefully useful) "look at your qualifier arguments message"
		 CALL LSL_ADDMSG(IFILT__CHKARGS)
		 LSL_STATUS=SS$_ABORT
	      ENDIF
C
C Close the IFF files
C
	      CALL CLOSE_IFF
	   ENDIF
	ENDIF
C
C Set the return status and finish up
C
	CALL LSL_EXIT
	END
