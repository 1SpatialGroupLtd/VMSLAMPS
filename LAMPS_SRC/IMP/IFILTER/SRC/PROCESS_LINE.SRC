        LOGICAL FUNCTION PROCESS_LINE(FSN,ISN,CLOSED)
C
***     IDENT   03SE87
***     MODULE  PROCESS_LINE
C
C	Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
CMOD	Modified to accommodate a Bezier smoothing DRC  03-Sep-1987
CMOD	Last edited				 DM	03-Dec-1986
C	Created 				RJH	24-Oct-1986
C
C	IMP IFILTER Program - Process a line
C
C Description
C
C
        IMPLICIT NONE
C
C Arguments
C
	INTEGER*2	FSN		! feature serial number
	INTEGER*2	ISN		! internal sequence number
	LOGICAL		CLOSED		! closed feature ?
C
C Common Blocks
C
***	COMMON/LSL$CMNIFILT:CONTROL/	! control variables
***	COMMON/LSL$CMNIFILT:LINES/	! input and output line strings
C
C Functions called
C
	LOGICAL		FILTER_LINE	! filter the line
	LOGICAL		SMOOTH_LINE	! smooth the line
	LOGICAL		FLUSH_LINE	! output the line
C
C Local variables
C
	LOGICAL		OK
C
C Initialise output line and assume success
C
	NUM_OUT = 0
	OK = .TRUE.
C
C If filtering first, we must also be smoothing so do them both, 
C remembering to transfer the points back to the input buffer in between
C
	IF (FILTER_FIRST) THEN
	   OK = FILTER_LINE(CLOSED)
	   IF (OK) THEN
	      CALL TRANSFER_PTS
	      OK = SMOOTH_LINE(CLOSED)
	   ENDIF
C
C Otherwise, if we are smoothing then do it and transfer the points 
C back into the input buffer if we are also then filtering. If we are 
C filtering, do that last.
C
	ELSE
	   IF (HAD_AKI .OR. HAD_MC .OR. HAD_LIN .OR. HAD_BEZ) THEN
	      OK = SMOOTH_LINE(CLOSED)
	      IF (OK .AND. (HAD_BUN .OR. USE_DP)) CALL TRANSFER_PTS
	   ENDIF
	   IF (OK .AND. (HAD_BUN .OR. USE_DP)) OK = FILTER_LINE(CLOSED)
	ENDIF
C
C Output the resulting line to the IFF file
C
	IF (OK) OK = FLUSH_LINE(FSN,ISN)
C
C Assign function value
C
	PROCESS_LINE = OK
C
C Return
C
	RETURN
        END
