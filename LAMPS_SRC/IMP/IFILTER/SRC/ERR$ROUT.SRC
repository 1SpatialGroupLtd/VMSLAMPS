C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1989-08-23 09:49:22.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	OPTIONS /I4
	INTEGER FUNCTION ERR$ROUT(SIGARGS,MECHARGS)
C
***	MODULE ERR$ROUT
***	IDENT  22AU89
C
C	Copyright Laser-Scan Laboratories Ltd., Cambridge, England
C
C   Stolen and renamed from TRIEDIT               TJH  22-Aug-1989
C
C To be declared as an exception handler.
C
C Check against integer and floating overflow and divide by zero, and
C floating underflow. If the error is one of these, unwind to the
C subroutine that declared us, pretending that the subroutine that was
C called has returned with an error. 
C
C For DECs explanation see the Run Time Library Users Guide.
C
	IMPLICIT NONE
C
C parameters:
	INCLUDE '($MTHDEF)'
	INCLUDE '($SSDEF)'
C
C arguments:
	INTEGER SIGARGS(*),MECHARGS(*)
C
C common block:
	INCLUDE 'LSL$CMNIFILT:ERRMSG.CMN'
C
C local workspace:
	INTEGER JJJ
C
C functions:
	INTEGER LIB$SIG_TO_RET
	INTEGER LIB$MATCH_COND
C
C ......................................................................
C
	JJJ=LIB$MATCH_COND(SIGARGS(2),SS$_INTOVF,
     &				      SS$_INTDIV,
     &				      SS$_FLTOVF_F,
     &				      SS$_FLTUND_F,
     &				      SS$_FLTDIV_F,
     &				      MTH$_FLOOVEMAT,
     &				      MTH$_FLOUNDMAT)
	IF (JJJ.EQ.0) THEN
C ... no match - re-signal it.
	   ERR$ROUT=SS$_RESIGNAL
	ELSE
C
C ... preserve arguments for external use.
	   DO 10 JJJ=1,MIN((SIGARGS(1).AND.'FFFF'X) + 1,20)
	      ERRARG(JJJ)=SIGARGS(JJJ)
10	   CONTINUE
C
C ... return to whoever established us (unless SIG_TO_RET fails,
C ... when we use that error instead.
	   ERR$ROUT=LIB$SIG_TO_RET(SIGARGS,MECHARGS)
	ENDIF
	RETURN
	END
