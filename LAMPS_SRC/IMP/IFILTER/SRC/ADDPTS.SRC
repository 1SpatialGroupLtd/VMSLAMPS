C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1986-10-28 14:23:56.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE ADDPTS(NPTS,XY,DUMMY)
C
***     IDENT   28OC86
***     MODULE  ADDPTS
C
C	Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C	Created 				RJH	21-Oct-1986
C
C	IMP IFILTER Program - Add points to output buffer
C
C Description
C
C
        IMPLICIT NONE
C
C Included Parameter Files
C
	INCLUDE	'($STSDEF)/NOLIST'
***	PARAMETER/LSL$CMNIFILT:IFILTMSG/	! message definitions
C
C Arguments
C
	INTEGER*4	NPTS		! number of points
	REAL		XY(2,NPTS)	! line string
	LOGICAL*1	DUMMY		! dummy argument
C
C Common Blocks
C
***	COMMON/LSL$CMNIFILT:LINES/	! input and output line strings
***	COMMON/LSL$CMNLSL:STATUS/	! LSLLIB status flag
C
C Local Variables
C
	INTEGER*4	I		! counter
	LOGICAL		OK_SO_FAR	! no blunders ?
C
C Check there have been no errors
C
	OK_SO_FAR = LSL_STATUS .OR. 
     &		((LSL_STATUS .AND. STS$M_SEVERITY) .EQ. STS$K_WARNING)
	IF (OK_SO_FAR) THEN
	   I = 0
C
C While there are still points to add and the output line is not full ..
C
100	   IF ((I .EQ. NPTS) .OR. (NUM_OUT .EQ. MAXPTS)) GO TO 200
C
C ... add the next point
C
	   I = I + 1
	   NUM_OUT = NUM_OUT + 1
	   LINE_OUT(X,NUM_OUT) = XY(X,I)
	   LINE_OUT(Y,NUM_OUT) = XY(Y,I)
	   GO TO 100
C
C Output message if the buffer was full
C
200	   IF (I .NE. NPTS) THEN
	      CALL LSL_PUTMSG(IFILT__OUTBUFFULL)
	   ENDIF
	ENDIF
C
C Return
C
	RETURN
	END
