C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1987-12-22 13:41:04.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL FUNCTION CHECK_ACD_RANGE( ACVAL )
C
***	IDENT	22DE87
***	MODULE	CHECK_ACD_RANGE
C
C Copyright (C) LaserScan Laboratories Ltd, Cambridge, England
C
C Author Clarke Brunt, 18 December 1987
C
C to check whether an ACD value is in range
C - returns TRUE if not
C
	IMPLICIT NONE
C
C arguments
C
	INTEGER*4	ACVAL	! the value to check
C
C **********************************************************************
C parameter files
C
	INCLUDE	'LSL$CMNIFF:CB.STR'
	INCLUDE	'HERE:IPATCHMSG.PAR'
C
C common files
C
	INCLUDE	'LSL$CMNFRT:FRTACD.CMN'
C
C functions
C
	INTEGER		LIB$EXTZV
C
C workspace
C
	INTEGER		I
	INTEGER		IVALUE
	REAL		RVALUE
	CHARACTER*4	CVALUE
	EQUIVALENCE	(IVALUE,RVALUE,CVALUE)
	CHARACTER*4	EQUIV_MIN_MAX_C(2)
	EQUIVALENCE	(EQUIV_MIN_MAX_C,ACD_MIN_MAX_I)
C
C **********************************************************************
C assume OK
C
	CHECK_ACD_RANGE = .FALSE.		! assume OK
	IF (ACVAL.EQ.IFF_ABSENT) GOTO 990	! absent value OK
	IVALUE = ACVAL
C
	GOTO (910,920,930,910,910), ACD_DATA_TYPE
C
910	IF (IVALUE.LT.ACD_MIN_MAX_I(1).OR.
     &	    IVALUE.GT.ACD_MIN_MAX_I(2)) GOTO 950
	GOTO 990
C
C for reals, also grubbily check for 'reserved operand'
920	IF ( LIB$EXTZV(7,9,RVALUE).EQ.'100'X ) GOTO 950
	IF (RVALUE.LT.ACD_MIN_MAX_R(1).OR.
     &	    RVALUE.GT.ACD_MIN_MAX_R(2)) GOTO 950
	GOTO 990
C
930	DO 931 I=1,4
	   IF (CVALUE(I:I).LT.EQUIV_MIN_MAX_C(1)(I:I).OR.
     &	       CVALUE(I:I).GT.EQUIV_MIN_MAX_C(2)(I:I)) GOTO 950
931	CONTINUE
	GOTO 990
C
950	CHECK_ACD_RANGE = .TRUE.	! out of range
C
990	RETURN
	END
