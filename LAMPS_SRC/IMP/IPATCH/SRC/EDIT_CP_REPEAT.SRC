	LOGICAL FUNCTION EDIT_CP_REPEAT
C
***	IDENT	11AU86
***	MODULE	EDIT_CP_REPEAT
C
C Copyright (C) LaserScan Laboratories Ltd, Cambridge, England
C
C Author TJ Ibbs, 8 August 1986
C
C to repeat the previous CP edit on the current CP
C - returns TRUE if it fails
C
	IMPLICIT NONE
C
C **********************************************************************
C parameter files
C
	INCLUDE	'HERE:IPATCHMSG.PAR'
C
C common files
C
	INCLUDE	'HERE:ENTRY.CMN'		! for CP
	INCLUDE	'HERE:SWITCHES.CMN'		! for FATAL_ERROR
	INCLUDE	'HERE:CPEDIT.CMN'
C
C functions
C
	LOGICAL		CHECK_EOL		! check eol for rubbish
C
C workspace
C
	INTEGER		I			! for DO loops
C
	CHARACTER*2	N(4)
	DATA		N / 'NW', 'SW', 'SE', 'NE' /
C
C **********************************************************************
C assume the worst
C
	   EDIT_CP_REPEAT = .TRUE.
C
C check there's nothign at eol
C
	IF ( CHECK_EOL() ) GOTO 9999
C
C so repeat the last edit, if we are allowed to
C
	IF ( TYPE_OF_EDIT.EQ.CP_NONE ) THEN		! none before
C
	   CALL LSL_PUTMSG( IPATCH__CPNONE )
C
	ELSEIF ( TYPE_OF_EDIT.EQ.CP_BOTH ) THEN		! can't change LH side!
C
	   CALL LSL_PUTMSG( IPATCH__CPBOTH )
C
	ELSEIF ( TYPE_OF_EDIT.EQ.CP_ORDER ) THEN
C
	   CALL LSL_PUTMSG( IPATCH__REPROTATE, N(NEW_NW) )
	   IF ( NEW_NW.EQ.1 ) THEN
	      CALL LSL_PUTMSG( IPATCH__NOROTATE )
	      EDIT_CP_REPEAT = .TRUE.
	   ELSE
	      CALL ROTATE_CP( NEW_NW )		! rotate it
	      EDIT_CP_REPEAT = .FALSE.		! success
	   ENDIF
C
	ELSEIF ( TYPE_OF_EDIT.EQ.CP_TARGET ) THEN
C
	   CALL LSL_PUTMSG( IPATCH__REPTARGET )
	   DO 100 I = 1,4
	      CP(3,I) = TARGET(1,I)
	      CP(4,I) = TARGET(2,I)
100	   CONTINUE
	   EDIT_CP_REPEAT = .FALSE.		! success
C
	ELSE
C
	   CALL LSL_PUTMSG( IPATCH__BADREPEAT, TYPE_OF_EDIT )
	   CALL LSL_ADDMSG( IPATCH__REPORTLSL )
	   FATAL_ERROR = .TRUE.
C
	ENDIF
C
9999	RETURN
	END
