C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1986-08-11 10:49:30.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL FUNCTION EDIT_CP_ROTATE
C
***	IDENT	11AU86
***	MODULE	EDIT_CP_ROTATE
C
C Copyright (C) LaserScan Laboratories Ltd, Cambridge, England
C
C Author TJ Ibbs, 8 August 1986
C
C to rotate the CP to have a new NW corner
C - returns TRUE if it fails
C
	IMPLICIT NONE
C
C **********************************************************************
C parameter files
C
	INCLUDE	'LSL$CMNLSL:READSTR.PAR'	! for ON_SPACE
	INCLUDE	'HERE:IPATCHMSG.PAR'		! error numbers
C
C common files
C
	INCLUDE	'HERE:ENTRY.CMN'		! for CP
	INCLUDE	'HERE:CPEDIT.CMN'
C
C functions
C
	INTEGER*2	READSTR		! read a string
	LOGICAL		CHECK_EOL	! check for rubbish at eol
C
C workspace
C
	LOGICAL		OK		! function return
	INTEGER		I		! for DO loops
	CHARACTER*2	CORNER		! new corner at NW
	INTEGER		LENGTH		! length of string
C
	CHARACTER*2	N(4)
	DATA		N / 'NW', 'SW', 'SE', 'NE' /
C
C **********************************************************************
C assume that we fail
C
	EDIT_CP_ROTATE = .TRUE.
C
C note what sort of edit this is
C
	TYPE_OF_EDIT = CP_ORDER
C
C read the name of the corner to be at the NW
C
	LENGTH = READSTR( CORNER, 0, ON_SPACE, .TRUE., OK )
	IF ( .NOT.OK ) THEN
	   CALL LSL_PUTMSG( OK )
	   GOTO 9999
	ENDIF
C
C and check that it makes sense
C
	IF ( LENGTH.EQ.0 ) THEN
	   CALL LSL_PUTMSG( IPATCH__NOCORNER )
	   GOTO 9999
	ENDIF
C
C check there's no rubbish on the line
C
	IF ( CHECK_EOL() ) GOTO 9999
C
C uppercase the corner, and identify it
C
	CALL STR$UPCASE( CORNER,CORNER )
	DO 100 I = 1,4
	   IF ( CORNER(:LENGTH).EQ.N(I) ) THEN
	      NEW_NW = I			! remember which corner
	      GOTO 200				! and go and do it
	   ENDIF
100	CONTINUE
C
	CALL LSL_PUTMSG( IPATCH__BADCORNER, CORNER(:LENGTH) )
	TYPE_OF_EDIT = CP_NONE		! force no-previous-edit
	GOTO 9999
C
C so we must make corner CORNER be at the NW
C - check for the trivial case of asking for the same NW
C
200	IF ( NEW_NW.EQ.1 ) THEN
	   CALL LSL_PUTMSG( IPATCH__NOROTATE )
	ELSE
	   CALL ROTATE_CP( NEW_NW )		! rotate the CP
	   EDIT_CP_ROTATE = .FALSE.		! success
	ENDIF
C
9999	RETURN
	END
