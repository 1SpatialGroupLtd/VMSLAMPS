C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1986-12-01 11:51:22.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL FUNCTION SEARCH_REALAR( ENTRY, COUNT, VALUE )
C
***	IDENT	01DE86
***	MODULE	SEARCH_REALAR
C
C Copyright (C) LaserScan Laboratories Ltd, Cambridge, England
C
C Author TJ Ibbs, 25 July 1986
C
C to look for the next entry with mnemonic ENTRY and real
C argument as specified
C - returns FALSE if we find one, TRUE if we don't
C
	IMPLICIT NONE
C
C arguments
C
 	INTEGER*2	ENTRY		! what to look for
	INTEGER*2	COUNT		! 0 or 1 reals to be checked
	REAL		VALUE		! and the real itself
C
C **********************************************************************
C parameter file
C
	INCLUDE	'HERE:USEFUL.PAR'	! for REAL_TOL
C
C common files
C
	INCLUDE	'LSL$CMNIFF:IFFHAN.CMN'	! for error returns,etc
	INCLUDE	'HERE:ENTRY.CMN'	! for entry details
C
C functions
C
	LOGICAL		SEARCH_SIMPLE
C
C **********************************************************************
C assume that the search fails
C
	SEARCH_REALAR = .TRUE.
C
C so look for the next entry of the right type
C - fail at once if there isn't one
C
2000	IF ( SEARCH_SIMPLE( ENTRY ) ) GOTO 9000
C
C now, read the entry into /ENTRY/
C
	CALL READ_ENTRY
C
C and compare the argument (if any) with the values found
C - if we don't care about any argument, then this is an immediate success
C
	IF ( COUNT.EQ.0 ) GOTO 8000
C
C - otherwise, compare the argument - if they are within tolerance
C   of each other, then consider them the same
C
	IF ( ABS(MISC_REAL-VALUE).LE.REAL_TOL ) GOTO 8000
C
C - and if that's not what we want, then try the next entry
C
	GOTO 2000
C
C **********************************************************************
C and return with success
C
8000	SEARCH_REALAR = .FALSE.
C
C **********************************************************************
C error return joins us here
C
9000	RETURN
	END
