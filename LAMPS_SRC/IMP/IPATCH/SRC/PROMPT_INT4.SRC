C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1986-08-11 09:33:42.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL FUNCTION PROMPT_INT4( PROMPT, VALUE )
C
***	IDENT	11AU86
***	MODULE	PROMPT_INT4
C
C Copyright (C) LaserScan Laboratories Ltd, Cambridge, England
C
C Author TJ Ibbs, 31 July 1986
C
C function to prompt the user for a long integer
C - returns FALSE if the user answers with a valid number, or a carriage
C   return
C
	IMPLICIT NONE
C
C arguments
C
	CHARACTER*(*)	PROMPT		! what to ask with
	INTEGER*4	VALUE	    	! what to return
C
C **********************************************************************
C parameter files
C
	INCLUDE	'LSL$CMNLSL:LSLLIBMSG.PAR'
	INCLUDE	'HERE:IPATCHMSG.PAR'
C
C common files
C
	INCLUDE	'LSL$CMNLSL:EXCEPTION.CMN'
C
C functions
C
	LOGICAL		READ_PROMPT	! to read a reply
	LOGICAL		RDLONG		! to read a long integer
	LOGICAL		RDCHS		! read a character
	LOGICAL		CHECK_EOL	! check end of line for rubbish
C
C workspace
C
	LOGICAL		OK		! did call succeed?
	INTEGER		IERR		! error response
	INTEGER		NUMBER		! to read into
	BYTE		ICH		! a character
C
C **********************************************************************
C assume that we succeed
C
	PROMPT_INT4 = .FALSE.
C
C so prompt the user
C
2000	IF ( READ_PROMPT( PROMPT, ' ' ) ) THEN
	   PROMPT_INT4 = .TRUE.			! failure
	   GOTO 9000
	ENDIF
C
C did they reply with anything?
C
	IF ( RDCHS(ICH) ) GOTO 9000		! nothing - just return
	CALL BSCH
C
C try to read the number in
C
	IF ( RDLONG(NUMBER) ) THEN
	   CALL LSL_PUTMSG(ERRNUM)
	   IF ( ERRNUM.EQ.LSL__HADEXCP ) CALL LSL_ADDMSG(LSL_EXCP)
	   GOTO 2000
	ENDIF
C
C and there should be nowt more on the line
C
	IF ( CHECK_EOL() ) GOTO 2000
C
C so we have the value - return it
C
	VALUE = NUMBER
C
C and return
C
9000	RETURN
	END
