	LOGICAL FUNCTION READ_WILD_INT4( VALUE, IS_WILD )
C
***	IDENT	27NO86
***	MODULE	READ_WILD_INT4
C
C Copyright (C) LaserScan Laboratories Ltd, Cambridge, England
C
C Author TJ Ibbs, 26 July 1986
C
C to read a (possibly wildcarded) long integer
C - returns TRUE if nothing there (ie not a number, not a wildcard)
C
	IMPLICIT NONE
C
C arguments
C
	INTEGER*4	VALUE		! the number to read
	LOGICAL		IS_WILD		! true if was wildcarded
C
C **********************************************************************
C parameter files
C
	INCLUDE	'LSL$CMNLSL:LSLLIBMSG.PAR'
	INCLUDE	'HERE:IPATCHMSG.PAR'
C
C common files
C
	INCLUDE	'LSL$CMNLSL:EXCEPTION.CMN'
C
C functions
C
	LOGICAL		RDCHS		! read a character
	LOGICAL		RDLONG		! read a long integer
C
C workspace
C
	BYTE		ICH		! character
C
C and the wildcard
C
	BYTE		WILD
	PARAMETER	(WILD='*')
C
C **********************************************************************
C assume that we fail
C
	READ_WILD_INT4 = .TRUE.
C
C is there anything on the line?
C
	IF ( RDCHS(ICH) ) THEN
	   IS_WILD = .FALSE.
	   GOTO 9000
	ENDIF
C
C was it a wildcard?
C
	IF ( ICH.EQ.WILD ) THEN
	   IS_WILD = .TRUE.
	   READ_WILD_INT4 = .FALSE.
	   GOTO 9000
	ELSE
	   IS_WILD = .FALSE.
	ENDIF
C
C try to read an integer - read the appropriate length
C
	CALL BSCH
C
	IF ( RDLONG(VALUE) ) THEN
	   IF ( ERRNUM.EQ.LSL__HADEXCP ) THEN
	      CALL LSL_PUTMSG(ERRNUM)
	      CALL LSL_ADDMSG(LSL_EXCP)
	   ENDIF
	   GOTO 9000
	ENDIF
C
	READ_WILD_INT4 = .FALSE.		! success
C
C and return
C
9000	RETURN
	END
