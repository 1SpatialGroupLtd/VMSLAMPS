C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1986-08-11 12:34:12.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE EDIT_NF
C
***	IDENT	11AU86
***	MODULE	EDIT_NF
C
C Copyright (C) LaserScan Laboratories Ltd, Cambridge, England
C
C Author TJ Ibbs, 31 July 1986
C
C to edit the current NF entry
C
	IMPLICIT NONE
C
C **********************************************************************
C parameter files
C
	INCLUDE	'HERE:IPATCHMSG.PAR'	! for error numbers
C
C common files
C
  	INCLUDE	'HERE:ENTRY.CMN'	! for entry details
	INCLUDE	'HERE:SWITCHES.CMN'	! for FATAL_ERROR
C
C functions
C
	LOGICAL		RDCHS		! read a character
	LOGICAL		READ_WILD_INT2	! read an integer
	LOGICAL		PROMPT_INT2	! prompt for an integer
	LOGICAL		EDIT_NF_CMD
	LOGICAL		CHECK_EOL
C
C workspace
C
	BYTE		ICH		! single character
	INTEGER		NUMBER		! single number
	LOGICAL		WILD		! true if it is wildcarded
C
C **********************************************************************
C check if we have anything on the rest of this line
C - if there's nothing, then prompt the user for the values
C
	IF ( RDCHS(ICH) ) THEN
	   IF ( PROMPT_INT2( 'FSN: ', L_FSN, .TRUE. ) ) GOTO 9000
	   IF ( PROMPT_INT2( 'ISN: ', L_ISN, .TRUE. ) ) GOTO 9000
	   GOTO 8500
	ENDIF
C
C otherwise, unread that character and check whether we are reading
C numeric values...
C
	CALL BSCH
	IF ( READ_WILD_INT2( NUMBER, WILD, .TRUE. ) ) THEN
	   IF ( EDIT_NF_CMD() ) GOTO 9000
	   GOTO 8000			! use the values
	ENDIF
C
C so we have a number, or a wildcard...
C - if it's a number, then it's our new FSN
C
	IF ( .NOT.WILD ) L_FSN = NUMBER
C
C and try to read the ISN
C
	IF ( READ_WILD_INT2( NUMBER, WILD, .TRUE. ) ) GOTO 8000
C
C again, if we have a number, use it
C
	IF ( .NOT.WILD ) L_ISN = NUMBER
C
C **********************************************************************
C check that there's nothing silly on the end of line
C
8000	IF ( CHECK_EOL() ) GOTO 9000
C
C and all routes join up here to write the edited entry back
C
8500	CALL EIHW( FSN, 1, 1 )
	CALL EIHW( ISN, 1, 2 )
C
C and that's it
C
9000	RETURN
	END
