C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1987-12-20 13:38:10.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE LIST_ENTRY
C
***	IDENT	20DE87
***	MODULE	LIST_ENTRY
C
C Copyright (C) LaserScan Laboratories Ltd, Cambridge, England
C
C Author TJ Ibbs, 21 July 1986
C
C To output the selected points of the current ST,ZS, or CB to the user
C
	IMPLICIT NONE
C
C **********************************************************************
C parameter files
C
	INCLUDE	'HERE:IPATCHMSG.PAR'	! for error numbers
C
C common files
C
	INCLUDE	'LSL$CMNLSL:CMDCOM.CMN'	! for INTARG, CMDICT
	INCLUDE	'HERE:ENTRY.CMN'	! contains the entry data
C
C workspace
C
	INTEGER		START,END	! points to do
	INTEGER		L_NPTS		! long copy of NPTS
C
C **********************************************************************
C check that we actually have a string!
C
	IF (IECODE.NE.'ST'.AND.IECODE.NE.'ZS'.AND.IECODE.NE.'CB') THEN
	   CALL LSL_PUTMSG( IPATCH__NOTSTRING )
	   GOTO 9000
	ENDIF
C
C if we have had arguments to LIST, then those are our limits
C
	IF ( CMDICT.EQ.0 ) THEN		! no args - type it all
	   START = 1
	   END   = NPTS
	ELSEIF ( CMDICT.EQ.1 ) THEN	! one arg - type that point
	   START = INTARG(1)
	   END   = INTARG(1)
	ELSE				! two args - type that range
	   START = INTARG(1)
	   END   = INTARG(2)
	ENDIF
C
C and check that they are in range
C
	IF ( IECODE.EQ.'CB' ) THEN
	   L_NPTS = CBH.NROW
	ELSE
	   L_NPTS = NPTS
	ENDIF
C
	IF ( START.LT.1 .OR. START.GT.L_NPTS ) THEN
	   CALL LSL_PUTMSG( IPATCH__INTRANGE, START,1,L_NPTS )
	   GOTO 9000
	ELSEIF ( END.LT.1 .OR. END.GT.L_NPTS ) THEN
	   CALL LSL_PUTMSG( IPATCH__INTRANGE, END,1,L_NPTS )
	   GOTO 9000
	ELSEIF ( END.LT.START ) THEN
	   CALL LSL_PUTMSG( IPATCH__ORDER, START, END )
	   GOTO 9000
	ENDIF
C
C and type the string out
C
	IF ( IECODE.EQ.'CB' ) THEN
	   CALL TYPE_CB( START, END )
	ELSE
	   CALL TYPE_STRING( START, END )
	ENDIF
C
9000	RETURN
	END
