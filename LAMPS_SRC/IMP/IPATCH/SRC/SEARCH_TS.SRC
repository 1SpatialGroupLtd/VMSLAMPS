	LOGICAL FUNCTION SEARCH_TS
C
***	IDENT	21OC86
***	MODULE	SEARCH_TS
C
C Copyright (C) LaserScan Laboratories Ltd, Cambridge, England
C
C Author TJ Ibbs, 21 October 1986
C
C to look for the next TS entry
C - returns FALSE if we find one, TRUE if we don't
C
C - allows wildcards for integer values not required
C
	IMPLICIT NONE
C
C **********************************************************************
C common files
C
	INCLUDE	'HERE:ENTRY.CMN'		! for entry data
C
C functions
C
	LOGICAL	       	READ_WILD_INT2		! read a number
	LOGICAL	       	READ_WILD_HEX2		! read a hex number
	LOGICAL		SEARCH_SIMPLE		! do our search
	LOGICAL		CHECK_EOL		! check eol for rubbish
C
C workspace
C
	INTEGER		TS_WANTED(4)		! the values wanted
	LOGICAL		TS_WILD(4)		! if they're wild
	INTEGER		COUNT			! number of args
	INTEGER		I			! count for DO loop
C
C **********************************************************************
C assume the search works
C
	SEARCH_TS = .FALSE.
C
C no arguments yet
C
	COUNT = 0
C
C firstly, is there a feature code?
C
	IF ( READ_WILD_INT2( TS_WANTED(1),TS_WILD(1),.FALSE. ) ) GOTO 3900
C
	COUNT = 1
C
C next, try to read the three possible hexadecimal values
C
	DO 2000 I = 2,4
	   IF ( READ_WILD_HEX2( TS_WANTED(I),TS_WILD(I) ) ) GOTO 3900
	   COUNT = I
2000	CONTINUE
C
C and check the end of line for rubbish
C
3900	IF ( CHECK_EOL() ) GOTO 9000
C
C **********************************************************************
C so look for the next TS entry
C
4000	IF ( SEARCH_SIMPLE( %REF('TS') ) ) GOTO 8000
C
C if there were no arguments, then we have succeeded
C
	IF ( COUNT.EQ.0 ) GOTO 9000
C
C so read the entry in
C
	CALL READ_ENTRY
C
C and check the arguments
C
	DO 5000 I = 1,COUNT
	   IF ( TS_WILD(I) ) GOTO 5000			! wild - don't care
	   IF ( TS_WANTED(I).EQ.TS(I) ) GOTO 5000	! matches for TS
	   GOTO 4000					! no match - try again
5000	CONTINUE
C
C so it matched - return
C
	GOTO 9000
C
C **********************************************************************
C and report if we can't find it
C
8000	SEARCH_TS = .TRUE.
C
 	CALL EXPAND('%%IPATCH-W-SEARCH, cannot find TS')
C
	IF ( COUNT.GE.1 ) THEN
	   IF ( TS_WILD(1) ) THEN
	      CALL APPEND(' *')
	   ELSE
	      CALL APPEND(' %N',TS_WANTED(1))
	   ENDIF
	ENDIF
C
	DO 6000 I = 2,COUNT
	   IF ( TS_WILD(I) ) THEN
	      CALL APPEND(' *')
	   ELSE
	      CALL APPEND(' %^W%P0%X4',TS_WANTED(I))
	   ENDIF
6000	CONTINUE
C
	CALL TTWLIN
C
C **********************************************************************
C and return
C
9000	RETURN
	END
                                                
