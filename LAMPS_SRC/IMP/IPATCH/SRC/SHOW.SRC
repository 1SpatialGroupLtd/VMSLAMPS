C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1987-11-11 15:41:18.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE SHOW
C
***	IDENT	11NO87
***	MODULE	SHOW
C
C Copyright (C) LaserScan Laboratories Ltd, Cambridge, England
C
C Author TJ Ibbs, 30 July 1986
C
C to SHOW the current details of the file - what would normally
C appear on the status lines
C
	IMPLICIT NONE
C
C **********************************************************************
C common files
C
	INCLUDE	'LSL$CMNIFF:IFFHAN.CMN'		! for LPOSH,etc
	INCLUDE	'HERE:FILES.CMN'		! filenames
	INCLUDE	'HERE:SWITCHES.CMN'		! program control
	INCLUDE	'HERE:POINTERS.CMN'		! positions in the file
	INCLUDE	'HERE:ENTRY.CMN'		! entry information
C
C **********************************************************************
C line 1 - filename and read/write status
C
	IF ( READONLY ) THEN
	   CALL EXPAND('Reading')
	ELSE
	   CALL EXPAND('Writing')
 	ENDIF
C
 	CALL WRITAP(' file %S255',IFFNAM(:IFFLEN))
C
C ----------------------------------------------------------------------
C line 2 - current position - address, current NF, mark
C
	CALL EXPAND('current %P0%X8',LPOSH)
C
C if we are above HIGHWATER, or at the start of file, then we don't
C have an NF to display
C
	IF ( LPOSH.GE.HIGHWATER .OR. CURRENT_NF.EQ.0 ) THEN
	   CALL APPEND('   no previous known NF       ')
	ELSE
	   CALL APPEND('   NF %U%P %^W%I5, %^W%I5 at %P0%^L%X8',
     &				   FSN,	   ISN,	     NF_PTR(CURRENT_NF) )
 	ENDIF
C
C if there's no mark, then say as much
C
	IF ( MARKED_ENTRY.EQ.0 ) THEN
	   CALL APPEND('   no mark         ')
	ELSE
	   CALL APPEND('   mark at %P0%X8',MARKED_ENTRY)
	ENDIF
C
	CALL TTWLIN
C
C ----------------------------------------------------------------------
C line 3 - other positional data - end of file
C	   (current section and layer information to be added)
C	   and revision levels
C
   	CALL EXPAND('eof     %P0%X8',LPOSE)
	CALL APPEND('   revision levels: input %N output %N',
     &						IRVLEV,ORVLEV)
	CALL TTWLIN
C
C ----------------------------------------------------------------------
C line 4 - PREVIOUS status
C
 	CALL EXPAND('%I5 feature%m scanned ',LAST_NF)
C
	IF ( HIGHWATER.EQ.LPOSE+1 ) THEN
	   CALL APPEND('(up to EOF)    ')
	ELSE
	   CALL APPEND('(below %P0%X8)',HIGHWATER)
	ENDIF
C
	IF ( LPOSH.GE.HIGHWATER ) THEN
	   CALL APPEND(' - PREVIOUS will have to scan')
	ELSEIF ( AFTER_MAX_ENTRIES ) THEN
	   CALL APPEND(' - no PREVIOUS from %P0%X8 to ',
     &					    ENTRY_PTR(LAST_ENTRY) )
	   IF ( NF_PTR(CURRENT_NF+1).EQ.LPOSE+1 ) THEN
	      CALL APPEND('EOF     ')
	   ELSE
	      CALL APPEND('%P0%X8',NF_PTR(CURRENT_NF+1))
	   ENDIF
	ENDIF
C
	CALL TTWLIN
C
C ----------------------------------------------------------------------
C line 5 - other information
C
	CALL EXPAND('NEXT will ')
	IF ( .NOT.DISPLAY ) CALL APPEND('not ')
	CALL APPEND('display intermediate entries')
C
	CALL TTWLIN
C
C ----------------------------------------------------------------------
C
	RETURN
	END
