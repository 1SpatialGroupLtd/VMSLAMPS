	SUBROUTINE PRINT_FS_WORD3( WORD )
C
***	IDENT	12AU86
***	MODULE	PRINT_FS_WORD3
C
C Copyright (C) LaserScan Laboratories Ltd, Cambridge, England
C
C Author TJ Ibbs, 21 July 1986
C
C To output the contents of the current FS's third word to the user
C
	IMPLICIT NONE
C
C arguments
C
	INTEGER*2	WORD		! the word to explain
C
C **********************************************************************
C workspace
C
	INTEGER		TEXTSYM		! text/symbol value
	INTEGER		POSITION	! position field
	INTEGER		STYLE
	INTEGER		CATEGORY
	INTEGER		PC		! process code field
C
C function
C
	INTEGER		LIB$EXTZV	! extract bit field
C
C **********************************************************************
C - firstly, look at the text/symbol bits, to determine what sort of
C   feature this is
C
	TEXTSYM   = LIB$EXTZV( 14, 2, WORD )
C
C and interpret the type of feature...
C
	CALL EXPAND('	text/symbol bits = %I2', TEXTSYM)
	IF ( TEXTSYM.EQ.0 ) THEN
	   CALL WRITAP('	(linear feature)')
	ELSEIF ( TEXTSYM.EQ.1 ) THEN
	   CALL WRITAP('	(symbol feature)')
	ELSEIF ( TEXTSYM.EQ.2 ) THEN
	   CALL WRITAP('	(text feature)')
	ELSE
	   CALL WRITAP('  - illegal value')
	ENDIF
C
C if this is a linear or symbol feature, then the rest of the word
C is used as a process code (PC)
C if this is a text feature, then the rest of the word is made up
C of text description data
C
	IF ( TEXTSYM.NE.2 ) THEN
	   PC = LIB$EXTZV( 0, 13, WORD )
	   CALL WRITEF('	PC = %I5	(process code)',PC)
	ELSE
	   POSITION = LIB$EXTZV( 0, 4, WORD )
	   STYLE    = LIB$EXTZV( 4, 2, WORD )
	   CATEGORY = LIB$EXTZV( 6, 6, WORD )
	   CALL WRITEF('	position   = %I2', POSITION)
	   CALL WRITEF('	type style = %I2', STYLE)
	   CALL WRITEF('	category   = %I2', CATEGORY)
	ENDIF
C
	RETURN
	END
