	LOGICAL FUNCTION EDIT_CB_CHANGE
C
***	IDENT	20DE87
***	MODULE	EDIT_CB_CHANGE
C
C Copyright (C) LaserScan Laboratories Ltd, Cambridge, England
C
C Author Clarke Brunt, 20 December 1987
C
C to change some values in the current CB entry
C
C - returns TRUE if we fail to replace anything, or if the
C   replacement should be ignored
C
	IMPLICIT NONE
C
C **********************************************************************
C parameter files
C
	INCLUDE	'HERE:IPATCHMSG.PAR'
C
C common files
C
	INCLUDE	'LSL$CMNLSL:CMDCOM.CMN'	! for command details
  	INCLUDE	'HERE:ENTRY.CMN'	! for entry details
C
C functions
C
	LOGICAL		PROMPT_CB	! ask for new values
C
C workspace
C
	INTEGER		I		! DO loop variable
	INTEGER		BOT,TOP		! the range to change
C
C **********************************************************************
C assume the worst
C
	EDIT_CB_CHANGE = .TRUE.
C
C firstly, work out what we're being asked to do
C - note that our caller has already made sure that we have SOME
C   arguments to use
C
	BOT = INTARG(1)
	IF ( CMDICT.EQ.1 ) THEN
	   TOP = BOT
	ELSE
	   TOP = INTARG(2)
	ENDIF
C
C check that the numbers make sense
C
	IF ( BOT.LT.1 .OR. BOT.GT.CBH.NROW ) THEN
	   CALL LSL_PUTMSG( IPATCH__INTRANGE, BOT, 1, CBH.NROW )
	   GOTO 9000
	ELSEIF ( TOP.LT.1 .OR. TOP.GT.CBH.NROW ) THEN
	   CALL LSL_PUTMSG( IPATCH__INTRANGE, TOP, 1, CBH.NROW )
	   GOTO 9000
	ELSEIF ( TOP.LT.BOT ) THEN
	   CALL LSL_PUTMSG( IPATCH__ORDER, BOT, TOP )
	   GOTO 9000
	ENDIF
C
C **********************************************************************
C so do the replacement
C
	DO 2000 I = BOT, TOP
	   IF ( PROMPT_CB(I) ) THEN
	      CALL LSL_PUTMSG( IPATCH__NOCHANGE )
	      GOTO 9000
	   ENDIF
2000	CONTINUE
C
C and if we finish, then that's success
C
	EDIT_CB_CHANGE = .FALSE.
C
C **********************************************************************
C and that's it
C
9000	RETURN
	END
