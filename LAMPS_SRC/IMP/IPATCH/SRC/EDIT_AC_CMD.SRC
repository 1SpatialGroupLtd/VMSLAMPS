C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1987-12-21 12:08:50.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL FUNCTION EDIT_AC_CMD(CMD)
C
***	IDENT	21DE87
***	MODULE	EDIT_AC_CMD
C
C Copyright (C) LaserScan Laboratories Ltd, Cambridge, England
C
C Author TJ Ibbs, 31 July 1986
C
C to read and obey an edit command for the current AC entry
C - return TRUE on an error
C
	IMPLICIT NONE
C
C **********************************************************************
C parameter files
C
	INCLUDE	'LSL$CMNLSL:LSLLIBMSG.PAR'
	INCLUDE	'HERE:IPATCHMSG.PAR'	! for error numbers
	INCLUDE	'HERE:USEFUL.PAR'	! for ranges
C
C common files
C
	INCLUDE	'LSL$CMNLSL:CMDCOM.CMN'	! for command details
  	INCLUDE	'HERE:ENTRY.CMN'	! for entry details
	INCLUDE	'HERE:SWITCHES.CMN'	! for FATAL_ERROR
C
C argument
C
	INTEGER		CMD		! command number to obey
C
C functions
C
	LOGICAL		RDCHS		! read sig character
	LOGICAL		READ_WILD_ACTYPE
	LOGICAL		READ_WILD_ACVAL
C
C workspace
C
	INTEGER		I		! for a DO loop
	LOGICAL		WILD		! wildcard required
	INTEGER		NUMBER		! scratch number
	BYTE		ICH		! a character
C
C **********************************************************************
C assume failure
C
	EDIT_AC_CMD = .TRUE.
C
C jump according to the command
C
	GOTO ( 2000, 2100, 2200 ), CMD
C
C and if we come here, then complain
C
	CALL LSL_PUTMSG( IPATCH__NOSUCHCMD, CMD )
	CALL LSL_PUTMSG( IPATCH__REPORTLSL )
	FATAL_ERROR = .TRUE.
	GOTO 9000
C
C **********************************************************************
C TYPE  <int> or <name>
C
2000	IF ( RDCHS(ICH) ) THEN
	   CALL LSL_PUTMSG(LSL__UNEXPEOL)
	ELSE
	   CALL BSCH
	   WILD = .FALSE.		! don't want wildcard
	   IF ( .NOT.READ_WILD_ACTYPE( NUMBER, WILD ) ) THEN
	      AC_TYPE = NUMBER
	      EDIT_AC_CMD = .FALSE.
	   ENDIF
	ENDIF
	GOTO 9000
C
C **********************************************************************
C VALUE  <value>
C
2100	IF ( RDCHS(ICH) ) THEN
	   CALL LSL_PUTMSG(LSL__UNEXPEOL)
	ELSE
	   CALL BSCH
	   CALL ACDFND( AC_TYPE, .FALSE. )	! load common block
	   WILD = .FALSE.			! don't want wildcard
	   IF ( .NOT.READ_WILD_ACVAL( NUMBER, AC_TYPE, WILD ) ) THEN
	      AC_IVALUE = NUMBER
	      EDIT_AC_CMD = .FALSE.
	   ENDIF
	ENDIF
	GOTO 9000
C
C **********************************************************************
C TEXT  <text>	- is there a text to replace?
C
2200	IF ( TEXT_LEN.EQ.0 ) THEN
	   CALL LSL_PUTMSG( IPATCH__ACNOTEXT )
	   GOTO 9000
	ENDIF
C
C is the text we've read too long?
C
	IF ( STARLE.GT.TEXT_LEN ) CALL LSL_PUTMSG( LSL__STRTOOLONG )
C
C otherwise, copy it over
C
	CALL COPY_STRING( STARST, TEXT_DSC )
	EDIT_AC_CMD = .FALSE.
C
	GOTO 9000
C
C **********************************************************************
C and return
C
9000	RETURN
	END
