	SUBROUTINE CONVERT
C
***	IDENT	11AU86
***	MODULE	CONVERT
C
C Copyright (C) LaserScan Laboratories Ltd, Cambridge, England
C
C Author TJ Ibbs, 24 June 1986
C
C to convert from one type of number to another
C
	IMPLICIT NONE
C
C **********************************************************************
C parameter files
C
	INCLUDE	'LSL$CMNLSL:LSLLIBMSG.PAR'
	INCLUDE	'HERE:IPATCHMSG.PAR'		! error numbers
C
C common files
C
	INCLUDE	'LSL$CMNLSL:CMDCOM.CMN'		! for arguments, etc
	INCLUDE	'LSL$CMNLSL:EXCEPTION.CMN'	! for errors
	INCLUDE	'HERE:SWITCHES.CMN'		! for FATAL_ERROR
C
C a useful parameter...
C
	REAL		PI
	PARAMETER	(PI=3.1415926)
C
C functions
C
	LOGICAL		RDCHS		! read a character
	LOGICAL		RDLHEX		! read a hex number
	LOGICAL		CHECK_EOL	! check for rubbish at eol
C
C workspace
C
	BYTE		ICH		! single character
C
C **********************************************************************
C decide on our action according to the command given
C
	GOTO ( 500, 1000, 2000, 3000, 4000 ), SECMDN+1
C
C not a known command number - a fatal error
C
	CALL LSL_PUTMSG( IPATCH__NOSUCHCMD2, SECMDN )
	CALL LSL_ADDMSG( IPATCH__REPORTLSL )
	FATAL_ERROR = .TRUE.
	GOTO 9000
C
C **********************************************************************
C TO what?
C
500	CALL LSL_PUTMSG( IPATCH__CONVWHAT )
	GOTO 9000
C
C **********************************************************************
C TO RADIANS - from degrees
C
1000	IF ( CHECK_EOL() ) GOTO 9000
C
	CALL WRITEF('%F degrees is %F radians',
     &			REALAR(1), REALAR(1)*PI/180 )
	GOTO 9000
C
C **********************************************************************
C TO DEGREES - from radians
C
2000	IF ( CHECK_EOL() ) GOTO 9000
C
	CALL WRITEF('%F radians is %F degrees',
     &			REALAR(1), REALAR(1)*180/PI )
	GOTO 9000
C
C **********************************************************************
C TO DECIMAL - from hexadecimal
C
3000	IF ( RDCHS(ICH) ) THEN
	   ERRNUM = LSL__UNEXPEOL
	   CALL LSL_CMDERR		! pretend RDCOMM trapped it
	   GOTO 9000
	ENDIF
C
C unread that character, and read the number
C
	CALL BSCH
	IF ( RDLHEX(INTARG(1)) ) THEN
	   ERRNUM = LSL__NONUM
	   CALL LSL_CMDERR		! pretend RDCOMM trapped it
	   GOTO 9000
	ENDIF
C
C check for rubbish remaining on the line
C
	IF ( CHECK_EOL() ) GOTO 9000
C
C and report to the user
C
	CALL WRITEF('%X hexadecimal is %N decimal',INTARG(1),INTARG(1))
C
	GOTO 9000
C
C **********************************************************************
C TO HEXADECIMAL - from decimal
C
4000	IF ( CHECK_EOL() ) GOTO 9000
C
	CALL WRITEF('%N decimal is %X hexadecimal',INTARG(1),INTARG(1))
	GOTO 9000
C
C **********************************************************************
C common return
C
9000	RETURN
	END
