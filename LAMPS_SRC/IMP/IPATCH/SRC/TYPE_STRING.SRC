	SUBROUTINE TYPE_STRING( START, END )
C
***	IDENT	20DE87
***	MODULE	TYPE_STRING
C
C Copyright (C) LaserScan Laboratories Ltd, Cambridge, England
C
C Author TJ Ibbs, 21 July 1986
C
C To output some/all of the contents of the current ST or ZS to the user
C
	IMPLICIT NONE
C
C **********************************************************************
C parameter files
C
	INCLUDE	'HERE:IPATCHMSG.PAR'	! for error numbers
C
C common files
C
	INCLUDE	'HERE:ENTRY.CMN'	! contains the entry data
C
C arguments
C
	INTEGER		START,END	! points to type
C
C workspace
C
	INTEGER		PT		! for DO loops
C
C **********************************************************************
C so write out the basic description of the entry
C
	CALL PRINT_STRING( .FALSE. )
C
C check that we actually have any data - if NPTS is too big, we don't
C
	IF ( NPTS.GT.MAXPTS ) THEN
	   CALL LSL_PUTMSG( IPATCH__NOPTS )
	   GOTO 9000
	ENDIF
C
C and type the string out
C
	IF ( IECODE.EQ.'ST' ) THEN
	   DO 2000 PT = START,END
	      CALL WRITEF('%I3:	%F12.4, %F12.4',
     &			   PT,   STBUF(1,PT),STBUF(2,PT) )
2000	   CONTINUE
	ELSE
	   DO 3000 PT = START,END
	      CALL WRITEF('%I3:	%F12.4, %F12.4, %F12.4',
     &			   PT,   ZSBUF(1,PT),ZSBUF(2,PT),ZSBUF(3,PT) )
3000	   CONTINUE
	ENDIF
C
9000	RETURN
	END
