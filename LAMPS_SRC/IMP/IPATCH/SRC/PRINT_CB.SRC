C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1987-12-21 12:17:12.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE PRINT_CB( EXPLAIN )
C
***	IDENT	21DE87
***	MODULE	PRINT_CB
C
C Copyright (C) LaserScan Laboratories Ltd, Cambridge, England
C
C Author Clarke Brunt, 11 Nov 1987
C
C To output the description of the current CB to the user
C
	IMPLICIT NONE
C
C arguments
C
	LOGICAL		EXPLAIN		! TRUE if to explain the data
C
C **********************************************************************
C common files
C
	INCLUDE	'LSL$CMNIFF:IFFHAN.CMN'	! for LPOSH
	INCLUDE	'HERE:ENTRY.CMN'	! contains the entry data
C
C **********************************************************************
C so write out the basic description of the entry
C
	CALL WRITEF('%P0%X8: CB   %P %I4     %P0%X2   %P %I4   %I4   %I4',
     &		LPOSH,CBH.NROW,CBH.FLAGS,CBH.GTYPE,CBH.NCOL,CBH.NATT)
C
C and if so requested, explain what they mean
C
	IF ( EXPLAIN ) THEN
	   CALL WRITEF('Coordinate Block entry')
	   CALL WRITEF('- size of entry = %^W%I3 words',IELEN)
	   CALL WRITEF('- number of points = %N',CBH.NROW)
	   CALL EXPAND('- flag bits = %P0%^W%X4 - ie ',CBH.FLAGS)
	   IF ( (CBH.FLAGS.AND.1).EQ.0 ) THEN
	      CALL WRITAP('pen   UP to first point')
	   ELSE
	      CALL WRITAP('pen DOWN to first point')
	   ENDIF
	   IF ( (CBH.FLAGS.AND.'FFFE'X).GT.0 ) THEN
	      CALL WRITEF('- unrecognised bits set in flag')
	   ENDIF
	   CALL WRITEF('- graphical type = %N',CBH.GTYPE)
	   CALL WRITEF('- number of attributes per point = %N',CBH.NCOL)
	   CALL WRITEF('- number of fixed attributes = %N',CBH.NATT)
	ENDIF
C
	RETURN
	END
