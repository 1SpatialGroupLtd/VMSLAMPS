C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1987-11-11 10:32:58.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE PRINT_ENTRY( EXPLAIN )
C
***	IDENT	11NO87
***	MODULE	PRINT_ENTRY
C
C Copyright (C) LaserScan Laboratories Ltd, Cambridge, England
C
C Author TJ Ibbs, 21 July 1986
C
C To print out the contents of the current entry (entry in hand) from
C the /ENTRY/ common file
C
	IMPLICIT NONE
C
C arguments
C
	LOGICAL		EXPLAIN		! give more details
C
C **********************************************************************
C parameter files
C
	INCLUDE	'HERE:IPATCHMSG.PAR'	! error numbers
C
C common files
C
	INCLUDE	'LSL$CMNIFF:IFFHAN.CMN'	! for LPOSH for error below
	INCLUDE	'HERE:ENTRY.CMN'	! defines the entry name
C
C **********************************************************************
C decide what to do according to the entry type
C
	IF ( IECODE.EQ.'NF' ) THEN
	   CALL PRINT_NF(EXPLAIN)
	ELSEIF ( IECODE.EQ.'FS' ) THEN
	   CALL PRINT_FS(EXPLAIN)
	ELSEIF ( IECODE.EQ.'TS' ) THEN
	   CALL PRINT_TS(EXPLAIN)
	ELSEIF ( IECODE.EQ.'AC' ) THEN
	   CALL PRINT_AC(EXPLAIN)
	ELSEIF ( IECODE.EQ.'ST' .OR. IECODE.EQ.'ZS' ) THEN
	   CALL PRINT_STRING(EXPLAIN)
	ELSEIF ( IECODE.EQ.'CB' ) THEN
	   CALL PRINT_CB(EXPLAIN)
	ELSEIF ( IECODE.EQ.'NO' ) THEN
	   CALL PRINT_NO(EXPLAIN)
	ELSEIF ( IECODE.EQ.'CC' ) THEN
	   CALL PRINT_CC(EXPLAIN)
	ELSEIF ( IECODE.EQ.'CP' ) THEN
	   CALL PRINT_CP(EXPLAIN)
	ELSEIF ( IECODE.EQ.'RA' ) THEN
	   CALL PRINT_RA(EXPLAIN)
	ELSEIF ( IECODE.EQ.'MH' ) THEN
	   CALL PRINT_MH(EXPLAIN)
	ELSEIF ( IECODE.EQ.'MD' ) THEN
	   CALL PRINT_MD(EXPLAIN)
	ELSEIF ( IECODE.EQ.'RO' ) THEN
	   CALL PRINT_RO(EXPLAIN)
	ELSEIF ( IECODE.EQ.'TH' ) THEN
	   CALL PRINT_TH(EXPLAIN)
	ELSEIF ( IECODE.EQ.'HI' ) THEN
	   CALL PRINT_HI(EXPLAIN)
	ELSEIF ( IECODE.EQ.'TX' .OR. IECODE.EQ.'NS' .OR.
     &	         IECODE.EQ.'TC' .OR. IECODE.EQ.'CH' ) THEN
	   CALL PRINT_TEXT(EXPLAIN)
	ELSEIF ( IECODE.EQ.'JP' ) THEN
	   CALL PRINT_JP(EXPLAIN)
	ELSEIF ( IECODE.EQ.'JB' ) THEN
	   CALL PRINT_JB(EXPLAIN)
	ELSEIF ( IECODE.EQ.'SH' ) THEN
	   CALL PRINT_SH(EXPLAIN)
	ELSEIF ( IECODE.EQ.'CS' ) THEN
	   CALL PRINT_CS(EXPLAIN)
	ELSEIF ( IECODE.EQ.'SS' .OR. IECODE.EQ.'SL' ) THEN
	   CALL PRINT_SSL(EXPLAIN)
	ELSEIF ( IECODE.EQ.'EF' .OR. IECODE.EQ.'EO' .OR.
     &		 IECODE.EQ.'EM' .OR. IECODE.EQ.'EJ' ) THEN
	   CALL PRINT_ENDING(EXPLAIN)
	ELSEIF ( IECODE.EQ.'VO' ) THEN
	   CALL PRINT_VO(EXPLAIN)
	ELSEIF ( IECODE.EQ.'XX' ) THEN
	   CALL PRINT_XX(EXPLAIN)
	ELSE
	   CALL LSL_PUTMSG( IPATCH__UNKENTRY, IECODE, LPOSH )
	ENDIF
C
	RETURN
	END
