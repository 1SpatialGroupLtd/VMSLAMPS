C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1986-11-27 11:31:22.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL FUNCTION READ_WILD_REAL( VALUE, IS_WILD, IS_REAL )
C
***	IDENT	27NO86
***	MODULE	READ_WILD_REAL
C
C Copyright (C) LaserScan Laboratories Ltd, Cambridge, England
C
C Author TJ Ibbs, 26 July 1986
C
C to read a (possibly wildcarded) real
C - returns TRUE if nothing there (ie not a number, not a wildcard)
C
	IMPLICIT NONE
C
C arguments
C
	REAL		VALUE		! the number to read
	LOGICAL		IS_WILD		! true if was wildcarded
	LOGICAL		IS_REAL		! true if contained a '.' or 'E'
C
C **********************************************************************
C parameter files
C
	INCLUDE	'LSL$CMNLSL:LSLLIBMSG.PAR'
C
C common files
C
	INCLUDE	'LSL$CMNLSL:EXCEPTION.CMN'
C
C functions
C
	LOGICAL		RDCHS			! read a character
	LOGICAL		LSL_RDREAL_WHOLE	! read a real
C
C NOTE that LSL_RDREAL_WHOLE is an LSLLIB internal function, which
C we use because it tells us whether the number actually LOOKED like
C a real - ie had a dot in it, etc
C
C workspace
C
	BYTE		ICH		! character
C
C and the wildcard
C
	BYTE		WILD
	PARAMETER	(WILD='*')
C
C **********************************************************************
C assume that the number is NOT real
C
	IS_REAL = .FALSE.
C
C is there anything on the line?
C
	IF ( RDCHS(ICH) ) THEN
	   IS_WILD = .FALSE.
	   READ_WILD_REAL = .TRUE.	! nowt there
	   GOTO 9000
	ENDIF
C
C was it a wildcard?
C
	IF ( ICH.EQ.WILD ) THEN
	   IS_WILD = .TRUE.
	   READ_WILD_REAL = .FALSE.
	   GOTO 9000
	ELSE
	   IS_WILD = .FALSE.
	ENDIF
C
C try to read a real
C
	CALL BSCH
	IF ( LSL_RDREAL_WHOLE( VALUE, IS_REAL ) ) THEN
	   IF ( ERRNUM.EQ.LSL__HADEXCP ) THEN
	      CALL LSL_PUTMSG(ERRNUM)
	      CALL LSL_ADDMSG(LSL_EXCP)
	   ENDIF
	   READ_WILD_REAL = .TRUE.
	ELSE
	   READ_WILD_REAL = .FALSE.
	ENDIF
C
C and return
C
9000	RETURN
	END
