C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1986-08-11 10:50:34.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL FUNCTION EDIT_CP_TARGET
C
***	IDENT	11AU86
***	MODULE	EDIT_CP_TARGET
C
C Copyright (C) LaserScan Laboratories Ltd, Cambridge, England
C
C Author TJ Ibbs, 8 August 1986
C
C to change the RH side of a CP
C - returns TRUE if it fails
C
	IMPLICIT NONE
C
C **********************************************************************
C common files
C
	INCLUDE	'HERE:ENTRY.CMN'		! for CP
	INCLUDE	'HERE:CPEDIT.CMN'
C
C functions
C
	LOGICAL		CHECK_EOL	! check for rubbish at eol
	LOGICAL		PROMPT_CP	! prompt for new point
C
C workspace
C
	INTEGER		I		! for DO loops
C
C **********************************************************************
C assume that we fail
C
	EDIT_CP_TARGET = .TRUE.
C
C check that there's nothing silly at the end of line
C
	IF ( CHECK_EOL() ) GOTO 9999
C
C note what sort of edit this is
C
	TYPE_OF_EDIT = CP_TARGET
C
C transfer the old values to TARGET
C - this is because PROMPT_CP won't change values in the output that
C   the user has not altered
C
	DO 100 I = 1,4
	   TARGET(1,I) = CP(3,I)
	   TARGET(2,I) = CP(4,I)
100	CONTINUE
C
C prompt for a new value for each of the target numbers, and remember it
C
	CALL WRITEF(
     &	'Now give a new value for each of the target control points')
C
	DO 200 I = 1,4
	   IF ( PROMPT_CP( I, TARGET(1,I) ) ) GOTO 9999
200	CONTINUE
C
C so we have new values for all four corners - place them back into
C the CP entry
C
 	DO 300 I = 1,4
	   CP(3,I) = TARGET(1,I)
	   CP(4,I) = TARGET(2,I)
300	CONTINUE
C
	EDIT_CP_TARGET = .FALSE.		! success
C
9999	RETURN
	END
