	LOGICAL FUNCTION EDIT_TEXT_CMD
C
***	IDENT	11AU86
***	MODULE	EDIT_TEXT_CMD
C
C Copyright (C) LaserScan Laboratories Ltd, Cambridge, England
C
C Author TJ Ibbs, 1 August 1986
C
C to read and obey an edit command for the current text-type entry
C return TRUE on error
C
	IMPLICIT NONE
C
C **********************************************************************
C parameter files
C
	INCLUDE	'LSL$CMNLSL:LSLLIBMSG.PAR'
	INCLUDE	'HERE:IPATCHMSG.PAR'	! for error numbers
C
C common files
C
	INCLUDE	'LSL$CMNLSL:CMDCOM.CMN'	! for command details
  	INCLUDE	'HERE:ENTRY.CMN'	! for entry details
	INCLUDE	'HERE:SWITCHES.CMN'	! for FATAL_ERROR
C
C command table
C
	EXTERNAL	EDIT_TEXT_CMD_TABLE
C
C functions
C
	INTEGER		RDCOMM
C
C workspace
C
	INTEGER		CMD		! command number
C
C **********************************************************************
C assume the worst
C
	EDIT_TEXT_CMD = .TRUE.
C
C so read the command
C
	CMD = RDCOMM( EDIT_TEXT_CMD_TABLE )
C
C check for an error
C
	IF ( CMD.LE.0 ) GOTO 9000		! give up
C
C and if the number is too big, then complain
C
	IF ( CMD.GT.1 ) THEN
	   CALL LSL_PUTMSG( IPATCH__NOSUCHCMD, CMD )
	   CALL LSL_PUTMSG( IPATCH__REPORTLSL )
	   FATAL_ERROR = .TRUE.
	   GOTO 9000
	ENDIF
C
C otherwise, we have a string
C - check its length
C
	IF ( STARLE.GT.TEXT_LEN ) CALL LSL_PUTMSG( LSL__STRTOOLONG )
C
C - and copy it over
C
	CALL COPY_STRING( STARST, TEXT_DSC )
	EDIT_TEXT_CMD = .FALSE.
C
C **********************************************************************
C and return
C
9000	RETURN
	END
