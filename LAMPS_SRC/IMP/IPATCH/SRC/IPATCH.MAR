;
; * This file is part of the LAMPS distribution, released as a software
; * preservation project to archive digital history for future historians.
; * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
; *
; * Timestamp of this file for the 2002 release was: 1987-12-21 15:14:20.000000000 +0000
; *
; * This program is free software: you can redistribute it and/or modify
; * it under the terms of the GNU General Public License as published by
; * the Free Software Foundation, version 3.
; *
; * This program is distributed in the hope that it will be useful, but
; * WITHOUT ANY WARRANTY; without even the implied warranty of
; * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
; * General Public License for more details.
; *
; * You should have received a copy of the GNU General Public License
; * along with this program. If not, see http://www.gnu.org/licenses/.
;
	.TITLE	IPATCH
	.IDENT	/21DE87/
;
;
; Copyright LaserScan Laboratories Ltd., Cambridge, England
; Author  TJ Ibbs, 17 July 1986
;
; command definitions for the IMP program IPATCH
;
	.LIBRARY    	/LSL$LIBRARY:LSLMACLIB/
;
; main command table
; - commands with (*) in their description have arguments which are
;   decoded by the program outside RDCOMM
;
; ******************************************************************************
; MAIN COMMAND TABLE
;
	$CMTAB	MAIN, US
;
	$CMD	<NEXT,N>		; move to (Nth) next entry
	$CMD	<PREVIOUS,P>,	I	; move to (Nth) previous entry
	$CMD	<TYPE,T>		; type entry contents
	$CMD	<LIST,L>,	II	; list contents of an ST or ZS
	$CMD	<FIND,F>		; (*) find a position
	$CMD	EOF			; move to end-of-file
	$CMD	<MARK,M>		; mark the current entry
	$CMD	<RETURN,R>		; go back to the marked entry
	$CMD	STATUS,		M	; change or show status
 	$CMD	<HELP,H>		; (*) help on commands
	$CMD	<EXPLAIN,E>		; elucidate the current entry
;
	$CMD	DELETE,		M	; DELETE something
	$CMD	DISPLAY,	M	; DISPLAY ON or OFF when NEXTing
	$CMD	TO,		M	; convert numbers
	$CMD	EXIT			; leave the program
	$CMD	REVISION_LEVEL,	FI	; set input revision level
	$CMD	FRT			; new FRT file
;
; entry mnemonics
; - first, those with no arguments
;
	$CMD	RA			;	RA - range
	$CMD	HI			;	HI - history record
	$CMD	MH		  	;	MH - map header
	$CMD	MD			;	MD - map descriptor
 	$CMD	CC			;	CC - cubic coeffs
	$CMD	CP			;	CP - corner pts
	$CMD	EF			;	EF - end of feature
	$CMD	EO			;	EO - end of overlay
	$CMD	EM			;	EM - end of map
	$CMD	EJ			;	EJ - end of job
	$CMD	CB			;	CB - coordinate block
;
; and the junction entries share this section as well
;
	$CMD	JB			;	JB ??? - junction block
	$CMD	SH			;	SH ??? - section header
	$CMD	JP			;	JP ??? - junction pointer
;
; now entries which have their arguments read automatically
; - we don't have to do any argument processing ourselves
; note that the arguments are optional
;
	$CMD	NS,		S	;	NS "text"	- new section
	$CMD	TH,		I	;	TH hgt		- text height
	$CMD	RO,		R	;	RO ang		- rotation
	$CMD	TX, 		S	;	TX "text"	- text
	$CMD	TC,		S	;	TC "text"	- trans comment
	$CMD	CH,		S	;	CH "text"	- obsolete
	$CMD	SS,		I	;	SS sym		- obsolete
	$CMD	SL,		I	;	SL lib		- obsolete
	$CMD	VO,		I	;	VO siz		- void
;
; we read all of the numbers for the next few entries, to allow us
; to handle wildcarding
;
	$CMD	FS			; (*)	FS fc  hex hex hex
	$CMD	TS			; (*)	TS fc  hex hex hex
	$CMD	AC			; (*)	AC typ cod "text"
	$CMD	NO			; (*)	NO lyr 000 EOptr
	$CMD	ST			; (*)	ST pts pen
	$CMD	ZS			; (*)	ZS pts pen
 	$CMD	NF			; (*)	NF fsn isn
	$CMD	CS			; (*)	CS hgt spc	- obsolete
;
; the following commands are not strictly entry names, but they select
; out particular parts of entries
;
	$CMD	TEXT			; FS with text bit set
	$CMD	SYMBOL			; FS with symbol bit set
	$CMD	LINE			; FS with neither bit set
;
	$CMEND	MAIN
;
; ******************************************************************************
; DELETE COMMAND TABLE
;
	$CMTAB	DELETE, U
	$CMD	MARK			; delete from MARKed entry
	$CMEND	DELETE
;
; ******************************************************************************
; DISPLAY COMMAND TABLE
;
	$CMTAB	DISPLAY, U
	$CMD	ON			; NEXTs should display entries
	$CMD	OFF			; or they should not
	$CMEND	DISPLAY
;
; ******************************************************************************
; STATUS COMMAND TABLE
;
	$CMTAB	STATUS, U
	$CMD	ON			; status line on
	$CMD	OFF			; or off
	$CMEND	STATUS
;
; ******************************************************************************
; TO COMMAND TABLE
;
	$CMTAB	TO, U
	$CMD	RADIANS,	RF	; convert degrees to radians
	$CMD	DEGREES,	RF	; convert radians to degrees
	$CMD	DECIMAL			; (*) convert hex to decimal
	$CMD	HEXADECIMAL,	IF	; convert decimal to hex
	$CMEND	TO
;
; ******************************************************************************
; EDIT NF COMMAND TABLE
;
	$CMTAB	EDIT_NF, U
	$CMD	FSN,		IF	; change FSN
	$CMD	ISN,		IF	; change ISN
	$CMEND	EDIT_NF
;
; ******************************************************************************
; EDIT FS COMMAND TABLE
;
	$CMTAB	EDIT_FS, U
;
; word 1
	$CMD	FC,		IF	; change FC
;
; word 2
	$CMD	CLOSED,		IF	; change CLOSED   bit
	$CMD	NOTEDGE,	IF	; change NOTEDGE  bit
	$CMD	REVERSE,	IF	; change REVERSE  bit
	$CMD	TWOPART,	IF	; change TWOPART  bit
	$CMD	PAINTOUT,	IF	; change PAINTOUT bit
 	$CMD	SQUARE,		IF	; change SQUARE   bit
	$CMD	INVERSE,	IF	; change INVERSE  bit
	$CMD	SUPPRESS,	IF	; change SUPPRESS bit
	$CMD	STATUS			; (*) whole word (hex)
;
; word 3
	$CMD	TEXT			;   set text bit, unset symbol bit
	$CMD	SYMBOL			; unset text bit,   set symbol bit
	$CMD	LINE			; unset text bit, unset symbol bit
	$CMD	POSITION,	IF	; set the text position
	$CMD	TYPE_STYLE,	IF	; set the text type style
	$CMD	CATEGORY,	IF	; set the text category
	$CMD	PC,		IF	; set the process code (line or symbol)
;                                                                          
; general
	$CMD	WORD,		IF	; (*) WORD n hex - set word 'n' to 'hex'
;
	$CMEND	EDIT_FS
;
; ******************************************************************************
; EDIT TS COMMAND TABLE
;
	$CMTAB	EDIT_TS, U
;
; word 1
	$CMD	TCC,		IF	; change TCC
;
; word 3
	$CMD	POSITION,	IF	; set the text position
	$CMD	TYPE_STYLE,	IF	; set the text type style
	$CMD	CATEGORY,	IF	; set the text category
;                                                                          
; general
	$CMD	WORD,		IF	; (*) WORD n hex - set word 'n' to 'hex'
;
	$CMEND	EDIT_TS
;
; ******************************************************************************
; EDIT AC COMMAND TABLE
;
	$CMTAB	EDIT_AC, U
	$CMD	TYPE			; (*) set AC type
	$CMD	<VALUE,CODE>		; (*) set AC value
	$CMD	TEXT,		SF	; set AC text
	$CMEND	EDIT_AC
;
; ******************************************************************************
; EDIT ST COMMAND TABLE (also used for ZS entries)
;
	$CMTAB	EDIT_ST, U
	$CMD	PEN_POSITION		; (*) set pen up/down to be a hex value
	$CMD	CHANGE,		II	; edit   points I [to I]
	$CMD	DELETE,		II	; delete points I [to I]
	$CMEND	EDIT_ST
;
; ******************************************************************************
; EDIT CB COMMAND TABLE
;
	$CMTAB	EDIT_CB, U
	$CMD	FLAGS			; (*) set pen up/down to be a hex value
	$CMD	CHANGE,		II	; edit   points I [to I]
	$CMD	DELETE,		II	; delete points I [to I]
	$CMD	GTYPE,		IF	; edit gtype field
	$CMD	ATTRIBUTE		; (*) edit fixed attribute
	$CMEND	EDIT_CB
;
; ******************************************************************************
; EDIT NO COMMAND TABLE
;
	$CMTAB	EDIT_NO, U
	$CMD	LAYER,		IF	; change layer
	$CMD	STATUS			; (*) change status (not currently used)
	$CMD	POINTER			; (*) change EO pointer (hex)
	$CMEND	EDIT_NO
;
; ******************************************************************************
; EDIT CP COMMAND TABLE
;
	$CMTAB	EDIT_CP, U
	$CMD	TARGET			; change RH side of CPs
	$CMD	BOTH			; change both sides
	$CMD	ROTATE			; (*) reorder corners
	$CMD	REPEAT			; repeat last TARGET or ORDER
	$CMEND	EDIT_CP
;
; ******************************************************************************
; EDIT RA COMMAND TABLE
;
	$CMTAB	EDIT_RA, U
	$CMD	MINX,		RF	; change min X value
	$CMD	MAXX,		RF	; change max X
	$CMD	MINY,		RF	; change min Y
	$CMD	MAXY,		RF	; change max Y
	$CMEND	EDIT_RA
;
; ******************************************************************************
; EDIT MH COMMAND TABLE
;
	$CMTAB	EDIT_MH, U
	$CMD	CUSTOMER,	IF	; change customer number
	$CMEND	EDIT_MH
;
; ******************************************************************************
; EDIT CC COMMAND TABLE
;
	$CMTAB	EDIT_CC, U
	$CMD	A,		RF
	$CMD	B,		RF
	$CMD	C,		RF
	$CMD	D,		RF
	$CMD	E,		RF
	$CMD	F,		RF
	$CMD	G,		RF
	$CMD	H,		RF
	$CMD	I,		RF
	$CMD	J,		RF
	$CMD	K,		RF
	$CMD	L,		RF
	$CMD	M,		RF
	$CMD	N,		RF
	$CMD	O,		RF
	$CMD	P,		RF
	$CMD	Q,		RF
	$CMD	R,		RF
	$CMD	S,		RF
	$CMD	T,		RF
	$CMD	UNIT
	$CMEND	EDIT_CC
;
; ******************************************************************************
; EDIT RO COMMAND TABLE
;
	$CMTAB	EDIT_RO, U
	$CMD	ANGLE,		RF	; change the angle
	$CMEND	EDIT_RO
;
; ******************************************************************************
; EDIT TEXT COMMAND TABLE
;
	$CMTAB	EDIT_TEXT, U
	$CMD	TEXT,		SF	; change the text
	$CMEND	EDIT_TEXT
;
; ******************************************************************************
; EDIT TH COMMAND TABLE
;
	$CMTAB	EDIT_TH, U
	$CMD	THICKNESS,	IF	; change the line thickness
	$CMD	HEIGHT,		IF	; change the text height
	$CMEND	EDIT_TH
;
; ******************************************************************************
;
	.END
