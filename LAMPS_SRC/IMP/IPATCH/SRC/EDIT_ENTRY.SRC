C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1987-12-20 14:21:54.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE EDIT_ENTRY
C
***	IDENT	20DE87
***	MODULE	EDIT_ENTRY
C
C Copyright (C) LaserScan Laboratories Ltd, Cambridge, England
C
C Author TJ Ibbs, 21 July 1986
C
C To edit the contents of the current entry (entry in hand)
C
	IMPLICIT NONE
C
C **********************************************************************
C parameter files
C
	INCLUDE	'HERE:IPATCHMSG.PAR'	! error numbers
C
C common files
C
	INCLUDE	'LSL$CMNIFF:IFFHAN.CMN'	! for LPOSH for error below
	INCLUDE	'HERE:ENTRY.CMN'	! defines the entry name
	INCLUDE	'HERE:SWITCHES.CMN'	! for READONLY
C
C **********************************************************************
C check whether we are allowed to do anything
C
	IF ( READONLY ) THEN
	   CALL LSL_PUTMSG( IPATCH__NOTWRITE )
	   GOTO 9000
	ENDIF
C
C check that it isn't start or end of file
C
	IF ( LPOSH.EQ.0 ) THEN
	   CALL LSL_PUTMSG( IPATCH__CANTEDIT, 'start' )
	   GOTO 9000
	ELSEIF ( LPOSH.EQ.LPOSE ) THEN
	   CALL LSL_PUTMSG( IPATCH__CANTEDIT, 'end' )
	   GOTO 9000
	ENDIF
C
C decide what to do according to the entry type
C
	IF ( IECODE.EQ.'NF' ) THEN
	   CALL EDIT_NF
	ELSEIF ( IECODE.EQ.'FS' ) THEN
	   CALL EDIT_FS
	ELSEIF ( IECODE.EQ.'TS' ) THEN
	   CALL EDIT_TS
	ELSEIF ( IECODE.EQ.'AC' ) THEN
	   CALL EDIT_AC
	ELSEIF ( IECODE.EQ.'ST' .OR. IECODE.EQ.'ZS' ) THEN
	   CALL EDIT_STRING
	   GOTO 9999			! edit string displays ST/ZS itself
	ELSEIF ( IECODE.EQ.'CB' ) THEN
	   CALL EDIT_CB
	   GOTO 9999			! edit CB displays entry itself
	ELSEIF ( IECODE.EQ.'NO' ) THEN
	   CALL EDIT_NO
	ELSEIF ( IECODE.EQ.'CC' ) THEN
	   CALL EDIT_CC
	ELSEIF ( IECODE.EQ.'CP' ) THEN
	   CALL EDIT_CP
	ELSEIF ( IECODE.EQ.'RA' ) THEN
	   CALL EDIT_RA
	ELSEIF ( IECODE.EQ.'MH' ) THEN
	   CALL EDIT_MH
	ELSEIF ( IECODE.EQ.'RO' ) THEN
	   CALL EDIT_RO
	ELSEIF ( IECODE.EQ.'TH' ) THEN
	   CALL EDIT_TH
	ELSEIF ( IECODE.EQ.'TX' .OR. IECODE.EQ.'NS' .OR.
     &	         IECODE.EQ.'TC' .OR. IECODE.EQ.'CH' ) THEN
	   CALL EDIT_TEXT
	ELSEIF ( IECODE.EQ.'CS' ) THEN
	   CALL EDIT_CS
	ELSEIF ( IECODE.EQ.'SS' .OR. IECODE.EQ.'SL' ) THEN
	   CALL EDIT_SSL
	ELSEIF ( IECODE.EQ.'HI' .OR. IECODE.EQ.'SH' .OR.
     &		 IECODE.EQ.'JP' .OR. IECODE.EQ.'JB' .OR.
     &		 IECODE.EQ.'MD' .OR.
     &		 IECODE.EQ.'EF' .OR. IECODE.EQ.'EO' .OR.
     &		 IECODE.EQ.'EM' .OR. IECODE.EQ.'EJ' .OR.
     &		 IECODE.EQ.'VO' .OR. IECODE.EQ.'XX' ) THEN
	   CALL LSL_PUTMSG( IPATCH__NOEDIT, IECODE )
	ELSE
	   CALL LSL_PUTMSG( IPATCH__UNKENTRY, IECODE, LPOSH )
	ENDIF
C
9000	CALL DISPLAY_ENTRY(.FALSE.)
C
9999	RETURN
	END
