	SUBROUTINE PRINT_TS_WORD3( WORD )
C
***	IDENT	22OC86
***	MODULE	PRINT_TS_WORD3
C
C Copyright (C) LaserScan Laboratories Ltd, Cambridge, England
C
C Author TJ Ibbs, 21 October 1986
C
C To output the contents of the current TS's third word to the user
C
	IMPLICIT NONE
C
C arguments
C
	INTEGER*2	WORD		! the word to explain
C
C **********************************************************************
C workspace
C
	INTEGER		TEXT		! text bit value
	INTEGER		POSITION	! position field
	INTEGER		STYLE
	INTEGER		CATEGORY
C
C function
C
	INTEGER		LIB$EXTZV	! extract bit field
C
C **********************************************************************
C - firstly, look at the text bit, to make sure that it is set
C
	TEXT   = LIB$EXTZV( 14, 2, WORD )
C
C and what does it mean...
C
	CALL EXPAND('	redundancy bits = %I2', TEXT)
	IF ( TEXT.EQ.2 ) THEN
	   CALL WRITAP('	(set correctly)')
	ELSE
	   CALL WRITAP('	(should be 2)')
	   CALL EXPAND('        - if this was an FS word 3, it would be a')
	   IF ( TEXT.EQ.0 ) THEN
	      CALL WRITAP(' linear feature')
	   ELSEIF ( TEXT.EQ.1 ) THEN
	      CALL WRITAP(' symbol feature')
	   ELSE
	      CALL WRITAP('n illegal value')
	   ENDIF
	ENDIF
C
C the rest of the word is made up of text description data
C
	POSITION = LIB$EXTZV( 0, 4, WORD )
	STYLE    = LIB$EXTZV( 4, 2, WORD )
	CATEGORY = LIB$EXTZV( 6, 6, WORD )
	CALL WRITEF('	position   = %I2', POSITION)
	CALL WRITEF('	type style = %I2', STYLE)
	CALL WRITEF('	category   = %I2', CATEGORY)
C
	RETURN
	END
