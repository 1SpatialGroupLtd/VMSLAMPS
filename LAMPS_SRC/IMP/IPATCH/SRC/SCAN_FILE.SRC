	SUBROUTINE SCAN_FILE
C
***	IDENT	30JL86
***	MODULE	SCAN_FILE
C
C Copyright (C) LaserScan Laboratories Ltd, Cambridge, England
C
C Author TJ Ibbs, 18 July 1986
C
C To scan the IFF file for NF entries
C
C - this will allow us to work out where we are at all times,
C   and to move backwards in the file as well as forwards
C
C - note that we only read NF entries until we are just above our current
C   position - this stops us reading the whole file if we want to PREVIOUS
C   from the CP to the RA !
C - we expect to be called again before any attempt to move back at a
C   higher address
C
	IMPLICIT NONE
C
C parameter files
C
	INCLUDE	'HERE:IPATCHMSG.PAR'	! error numbers
C
C common files
C
	INCLUDE	'LSL$CMNIFF:IFFHAN.CMN'	! errors, LPOSH, etc
	INCLUDE	'HERE:SWITCHES.CMN'	! for LOG, DONE_SCAN_FILE
	INCLUDE	'HERE:POINTERS.CMN'	! what we are setting up
	INCLUDE	'HERE:ENTRY.CMN'	! for IELEN,IECODE
C
C functions
C
	LOGICAL		MOVE_TO_ADDRESS
C
C workspace
C
	INTEGER		POSN		! to remember LPOSH
	INTEGER*2	ENTCOD		! entry mnemonic
	INTEGER*2	OLD_IECODE	! record of current entry
C
C **********************************************************************
C if we have already scanned the whole file, then we need do nothing
C
	IF ( HIGHWATER.EQ.LPOSE+1 ) GOTO 9999
C
C if we are scanning above HIGHWATER, then announce our intention
C
	IF (LPOSH.GT.HIGHWATER) CALL WRITEF(
     &			'Scanning file to establish where we are')
C
C and if we haven't been called before, set up our initial state
C
	IF ( .NOT.DONE_SCAN_FILE ) THEN
	   LAST_NF    = 0		! no NF entries found yet
	   CURRENT_NF = -1		! and none is current
	   HIGHWATER  = 0		! none of file scanned yet
	   NF_PTR(0)  = 0	    	! start at start of file
	ENDIF
C
	POSN = LPOSH			! remember where we were
	OLD_IECODE = IECODE		! and what we were
C
C **********************************************************************
C and position to the 'last' NF in our list
C
	IF ( MOVE_TO_ADDRESS( NF_PTR(LAST_NF), %REF('NF'),
     &			      IPATCH__RESCAN, .TRUE. )
     &	   ) GOTO 9999
C
C and we can now look for NF entries
C
2000	CALL IFFNXC( 'NF', IELEN )
C
C check that this didn't go wrong - if we have an error, then tell
C the user that it occurred in scanning the IFF file, and return
C
C PREVIOUS will be legal up to the last word successfully read
C                     
	IF ( IERNM.NE.1 .OR. IERCD.NE.0 ) THEN
	   CALL LSL_PUTMSG( IPATCH__SCANERR )
	   HIGHWATER = LPOSR		! next word to read
	   GOTO 8000
	ENDIF
C
C IELEN returns -1 if we have reached end of file - in which case we
C have finished our scan, and can return with success
C
	IF ( IELEN.EQ.-1 ) THEN
	   HIGHWATER = LPOSE+1		! PREVIOUS works for whole file
	   GOTO 9000
	ENDIF
C
C if we have reached the NF above our original current position (POSN)
C then we won't scan further for the moment - this allows PREVIOUS to
C work with the minimum of current effort
C
	IF ( LPOSH.GT.POSN ) THEN
	   HIGHWATER = LPOSH
	   GOTO 9000
	ENDIF
C
C otherwise, we have found another NF entry - have we got room for it?
C if not, then stop scanning at this point, and PREVIOUS will only work
C in the area we have successfully scanned - ie up to this last NF
C (but not including it)
C
	IF ( LAST_NF.EQ.MAX_FEATURES ) THEN
	   CALL LSL_PUTMSG( IPATCH__TOOMANYNF, MAX_FEATURES )
	   HIGHWATER = LPOSH		! position of the NF
	   GOTO 8000
	ENDIF
C
C so we CAN add the NF to our list
C - count it and remember it's address in our table
C
	LAST_NF = LAST_NF +1
	NF_PTR(LAST_NF) = LPOSH		! position of entry-in-hand
C
C and loop back for another entry
C
	GOTO 2000
C
C **********************************************************************
C if something went wrong in the scan, then we come down here
C - if we successfully scanned PART of the file, then we will be able
C   to move backwards within that part of the file
C
8000	IF ( LAST_NF.GT.0 ) THEN
	   CALL LSL_ADDMSG( IPATCH__PARTPREV )
	ELSE
	   DONE_SCAN_FILE = .FALSE.
	   GOTO 9800
	ENDIF
C
C **********************************************************************
C a successful scan comes down here to return
C - remember that we have been called successfully
C
9000	DONE_SCAN_FILE = .TRUE.
C
C copy HIGHWATER into NF_PTR
C
	NF_PTR(LAST_NF+1) = HIGHWATER
C
C and go back to where we were before we were called
C
9800	CALL MOVE_TO_ADDRESS( POSN, OLD_IECODE, IPATCH__ENDSCAN, .TRUE. )
C
9999	RETURN
	END
