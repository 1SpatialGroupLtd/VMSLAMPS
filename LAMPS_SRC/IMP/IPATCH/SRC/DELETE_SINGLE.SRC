	SUBROUTINE DELETE_SINGLE
C
***	IDENT	30JL86
***	MODULE	DELETE_SINGLE
C
C Copyright (C) LaserScan Laboratories Ltd, Cambridge, England
C
C Author TJ Ibbs, 28 July 1986
C
C to delete the current entry - leaves a VOid current
C
	IMPLICIT NONE
C
C **********************************************************************
C parameter files
C
	INCLUDE	'HERE:IPATCHMSG.PAR'	! error numbers
C
C common files
C
	INCLUDE	'LSL$CMNIFF:IFFHAN.CMN'	! for IFF errors, etc
	INCLUDE	'HERE:POINTERS.CMN'	! for MARKED_ENTRY,etc
	INCLUDE	'HERE:SWITCHES.CMN'	! for DONE_SCAN_FILE, etc
	INCLUDE	'HERE:ENTRY.CMN'	! for IECODE,IELEN
C
C functions
C
	LOGICAL		MOVE_TO_ADDRESS
	LOGICAL		BINARY_CHOP	! to find an NF_PTR
C
C workspace
C
	INTEGER		LOW_NF		! first NF above that
	INTEGER		HIGH_NF		! last NF we're concerned with
C
C **********************************************************************
C check that we have an entry in hand to delete
C
	IF ( LPOSH.EQ.0 ) THEN
	   CALL LSL_PUTMSG( IPATCH__NOCURDEL )
	   GOTO 9000
	ENDIF
C
C **********************************************************************
C so we can proceed with the deletion
C - mark this entry, move to the next, and delete from the mark
C
	CALL EIHMK(1)
	MARKED_ENTRY = LPOSH
C
	CALL IFFNXT( IECODE,IELEN )
C
	IF ( IERNM.NE.1 .OR. IERCD.NE.0 ) THEN
	   CALL LSL_PUTMSG( IPATCH__NEXTDEL )
	   GOTO 9000
	ENDIF
C
C do the deletion
C
	CALL IFFVOM
C
C and clear the mark
C
 	CALL EIHMK(0)
C
C now move back to the previously current entry
C
	IF ( MOVE_TO_ADDRESS( MARKED_ENTRY, %REF('VO'),
     &			      IPATCH__GOTOVO, .TRUE. ) ) GOTO 8000
C
C **********************************************************************
C do we need to adjust our record of NF positions?
C - if we have not scanned the file yet, then we don't
C
	IF ( .NOT.DONE_SCAN_FILE ) GOTO 8000
C
C - similarly, if we are above the region in which PREVIOUS works,
C   then we don't need to worry
C
	IF ( MARKED_ENTRY.GE.HIGHWATER ) GOTO 8000
C
C otherwise, we only need to worry if the entry used to be an NF
C
	IF ( LPOSH.EQ.NF_PTR(CURRENT_NF) ) THEN
	   CALL COMPRESS_NF( CURRENT_NF, CURRENT_NF )
	ENDIF
C
C and get the entry into perspective again
C - force it to scan the whole 'feature' again
C
	CURRENT_NF = -1
	CALL GET_FEATURE
C
C **********************************************************************
C come here to clear OUR version of the mark
C
8000	MARKED_ENTRY = 0
C
9000	RETURN
	END
