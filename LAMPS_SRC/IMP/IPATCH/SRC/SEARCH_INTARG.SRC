	LOGICAL FUNCTION SEARCH_INTARG( ENTRY, LENGTH, ARRAY )
C
***	IDENT	25JL86
***	MODULE	SEARCH_INTARG
C
C Copyright (C) LaserScan Laboratories Ltd, Cambridge, England
C
C Author TJ Ibbs, 25 July 1986
C
C to look for the next entry with mnemonic ENTRY and integer
C arguments as specified
C - returns FALSE if we find one, TRUE if we don't
C
	IMPLICIT NONE
C
C arguments
C
 	INTEGER*2	ENTRY		! what to look for
	INTEGER*2	LENGTH		! length of array
	INTEGER*4	ARRAY(4)	! the array itself
C
C **********************************************************************
C common files
C
	INCLUDE	'LSL$CMNIFF:IFFHAN.CMN'	! for error returns,etc
	INCLUDE	'HERE:ENTRY.CMN'	! for entry details
C
C functions
C
	LOGICAL		SEARCH_SIMPLE
C
C workspace
C
	INTEGER		I		! for a DO loop
C
C **********************************************************************
C assume that the search fails
C
	SEARCH_INTARG = .TRUE.
C
C so look for the next entry of the right type
C - fail at once if there isn't one
C
2000	IF ( SEARCH_SIMPLE( ENTRY ) ) GOTO 9000
C
C now, read the entry into /ENTRY/
C
	CALL READ_ENTRY
C
C and compare the arguments (if any) with the values found
C - if we don't care about any arguments, then this is an immediate success
C
	IF ( LENGTH.EQ.0 ) GOTO 8000
C
C - otherwise, compare the arguments
C   this depends on the type of entry - we must treat NF,ST,ZS,VO,FS,NO
C  specially, but anything else has values placed into xxxx_INT2
C
	IF ( ENTRY.EQ.'NF' ) THEN
	   IF ( LENGTH.GE.1 .AND. L_FSN.NE.ARRAY(1) ) GOTO 2000
	   IF ( LENGTH.GE.2 .AND. L_ISN.NE.ARRAY(2) ) GOTO 2000
	   GOTO 8000
	ELSEIF ( ENTRY.EQ.'ST' .OR. ENTRY.EQ.'ZS' ) THEN
	   IF ( LENGTH.GE.1 .AND. NPTS .NE.ARRAY(1) ) GOTO 2000
	   IF ( LENGTH.GE.2 .AND. IENDS.NE.ARRAY(2) ) GOTO 2000
	   GOTO 8000
	ELSEIF ( ENTRY.EQ.'VO' ) THEN
	   IF ( LENGTH.GE.1 .AND. IELEN.NE.ARRAY(1) ) GOTO 2000
	   GOTO 8000
	ELSEIF ( ENTRY.EQ.'FS' ) THEN
	   DO 2100 I = 1,LENGTH
	      IF ( LENGTH.GE.I .AND. FS(I).NE.ARRAY(I) ) GOTO 2000
2100	   CONTINUE
	   GOTO 8000
	ELSEIF ( ENTRY.EQ.'NO' ) THEN
	   IF ( LENGTH.GE.1 .AND. LAYER    .NE.ARRAY(1) ) GOTO 2000
	   IF ( LENGTH.GE.2 .AND. MISC_INT2.NE.ARRAY(2) ) GOTO 2000
	   IF ( LENGTH.GE.3 .AND. POINTER  .NE.ARRAY(3) ) GOTO 2000
	   GOTO 8000
	ELSE
	   IF ( LENGTH.GE.1 .AND. MISC_INT2.NE.ARRAY(1) ) GOTO 2000
	   IF ( LENGTH.GE.2 .AND. OTHR_INT2.NE.ARRAY(2) ) GOTO 2000
	   GOTO 8000
	ENDIF
C
C - and if that's not what we want, then try the next entry
C
	GOTO 2000
C
C **********************************************************************
C and return with success
C
8000	SEARCH_INTARG = .FALSE.
C
C **********************************************************************
C error return joins us here
C
9000	RETURN
	END
