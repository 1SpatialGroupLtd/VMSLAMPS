	LOGICAL FUNCTION EDIT_NO_CMD
C
***	IDENT	11AU86
***	MODULE	EDIT_NO_CMD
C
C Copyright (C) LaserScan Laboratories Ltd, Cambridge, England
C
C Author TJ Ibbs, 1 August 1986
C
C to read and obey an edit command for the current NO entry
C return TRUE on an error
C
	IMPLICIT NONE
C
C **********************************************************************
C parameter files
C
	INCLUDE	'LSL$CMNLSL:LSLLIBMSG.PAR'
	INCLUDE	'HERE:IPATCHMSG.PAR'	! for error numbers
	INCLUDE	'HERE:USEFUL.PAR'	! for ranges
C
C common files
C
	INCLUDE	'LSL$CMNLSL:EXCEPTION.CMN'
	INCLUDE	'LSL$CMNLSL:CMDCOM.CMN'	! for command details
  	INCLUDE	'HERE:ENTRY.CMN'	! for entry details
	INCLUDE	'HERE:SWITCHES.CMN'	! for FATAL_ERROR
C
C command table
C
	EXTERNAL	EDIT_NO_CMD_TABLE
C
C functions
C
	INTEGER		RDCOMM		! read a command
	LOGICAL		RDHEX		! read a short hex number
	LOGICAL		RDLHEX		! and a long one
C
C workspace
C
	INTEGER		CMD		! command number
 	INTEGER		NUMBER		! number to read
C
C **********************************************************************
C assume the worst
C
	EDIT_NO_CMD = .TRUE.
C
C so read the command
C
	CMD = RDCOMM( EDIT_NO_CMD_TABLE )
C
C check for an error
C
	IF ( CMD.LE.0 ) GOTO 9999		! give up
C
C otherwise, jump according to the command
C
	GOTO ( 2000, 2100, 2200 ), CMD
C
C and if we come here, then complain
C
	CALL LSL_PUTMSG( IPATCH__NOSUCHCMD, CMD )
	CALL LSL_PUTMSG( IPATCH__REPORTLSL )
	FATAL_ERROR = .TRUE.
	GOTO 9999
C
C **********************************************************************
C LAYER <fsn>
C
2000	IF ( INTARG(1).GT.MAXI2 .OR. INTARG(1).LT.0 ) THEN
	   CALL LSL_PUTMSG( IPATCH__INTRANGE, INTARG(1), 0, MAXU2 )
	   GOTO 9999
	ELSE
	   LAYER = INTARG(1)
	   GOTO 9000
	ENDIF
C
C **********************************************************************
C STATUS  <hex>  (short number)
C
2100	IF ( RDHEX(NUMBER) ) THEN
	   CALL LSL_PUTMSG(ERRNUM)
	   IF ( ERRNUM.EQ.LSL__HADEXCP ) CALL LSL_ADDMSG(LSL_EXCP)
	   GOTO 9999
	ELSE
	   MISC_INT2 = NUMBER
	   GOTO 9000
	ENDIF
C
C **********************************************************************
C POINTER  <hex>
C
2200	IF ( IELEN.NE.4 ) THEN
	   CALL LSL_PUTMSG( IPATCH__NOEOPTR )
	   GOTO 9999
	ELSEIF ( RDLHEX(NUMBER) ) THEN
	   CALL LSL_PUTMSG(ERRNUM)
	   IF ( ERRNUM.EQ.LSL__HADEXCP ) CALL LSL_ADDMSG(LSL_EXCP)
	   GOTO 9999
	ELSE
	   POINTER = NUMBER
	   GOTO 9000
	ENDIF
C
C **********************************************************************
C and return
C
9000	EDIT_NO_CMD = .FALSE.
9999	RETURN
	END
