C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1987-12-19 18:34:40.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE READ_AC
C
***	IDENT	19DE87
***	MODULE	READ_AC
C
C Copyright (C) LaserScan Laboratories Ltd, Cambridge, England
C
C Author TJ Ibbs, 18 July 1986
C
C To read the contents of the current AC into the /ENTRY/ common file
C
	IMPLICIT NONE
C
C **********************************************************************
C common files
C
	INCLUDE	'HERE:ENTRY.CMN'	! to hold the entry data
	INCLUDE	'LSL$CMNFRT:FRTACD.CMN'
C
C
C **********************************************************************
C AC - ancillary code
C
	AC_TYPE = 0			! clear longword
	CALL EIHRI( AC_TYPE, 1, 1 )	! read type into bottom word
	CALL ACDFND( AC_TYPE, .FALSE. )	! look up type
	AC_DATATYPE = ACD_DATA_TYPE	! remember datatype
C
C read the value
C
	CALL EIHRL( AC_IVALUE, 1, 2 )
C
C - work out how many words of text are left in the AC entry
C
	TEXT_LEN = IELEN -3
C
C - is there any?
C
	IF ( TEXT_LEN.NE.0 ) THEN
C
C	 read the text in
C
	   CALL EIHRI( TEXT_BUF, TEXT_LEN, 4 )
C
C	 convert the length to bytes (characters), and check that
C	 the last character is significant
C
 	   TEXT_LEN = 2*TEXT_LEN
 	   IF ( TEXT_BUF(TEXT_LEN).EQ.0 ) TEXT_LEN = TEXT_LEN-1
C
	ENDIF
C
	RETURN
	END
