C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1986-10-22 09:26:04.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE AUTO_STATUS
C
***	IDENT	22OC86
***	MODULE	AUTO_STATUS
C
C Copyright (C) LaserScan Laboratories Ltd, Cambridge, England
C
C Author TJ Ibbs, 22 October 1986
C
C sets the status area on, if the terminal will support it
C
	IMPLICIT NONE
C
C ***********************************************************************
C parameters
C
	INCLUDE	'HERE:IPATCHMSG.PAR'
C
C common files
C
	INCLUDE	'HERE:SWITCHES.CMN'	! for STATUS_LINE
C
C functions
C
	LOGICAL		IS_TERM_ANSI	! is it an ANSI terminal?
C
C ***********************************************************************
C since we are trying to start up the status line automatically, we must
C be careful
C
C If we are talking to a terminal, then a status line seems sensible
C However, if we are being run from a command file, we don't really
C want to muck up the display! In the latter case, although SYS$OUTPUT:
C will be the terminal, SYS$INPUT: will be the file (unless the user
C is talking to us directly, in which case we do want the status, after
C all)
C
C Did you understand all of that?
C
       	IF ( IS_TERM_ANSI( 'SYS$INPUT:' ) ) THEN
	   CALL STATUS_ON
	ENDIF
C
C (note that, in tru belts-and-braces style, the call of STATUS_ON
C  will also check that SYS$OUTPUT: is an ANSI terminal)
C
	RETURN
	END
