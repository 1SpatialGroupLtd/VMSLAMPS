C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1987-12-23 22:50:22.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE READ_STRING
C
***	IDENT	23DE87
***	MODULE	READ_STRING
C
C Copyright (C) LaserScan Laboratories Ltd, Cambridge, England
C
C Author TJ Ibbs, 18 July 1986
C
C To read the contents of the current point string (ST or ZS) into
C the /ENTRY/ common file
C
	IMPLICIT NONE
C
C **********************************************************************
C parameter files
C
	INCLUDE	'HERE:IPATCHMSG.PAR'	! error numbers
C
C common files
C
	INCLUDE	'HERE:ENTRY.CMN'	! to hold the entry data
C
C **********************************************************************
C
	CALL EIHRS( NPTS, IENDS )
C
C check that the string is not too long for us to read
C
	IF ( NPTS.GT.MAXPTS ) THEN
	   CALL LSL_PUTMSG( IPATCH__MAXPTS, IECODE, ZEXT(NPTS), MAXPTS )
	   CALL LSL_ADDMSG( IPATCH__NOPTS )
	   GOTO 9000
	ENDIF
C
C decide on what dimension of data we are reading
C
	IF ( IECODE.EQ.'ST' ) THEN
	   CALL EIHRR( STBUF, NPTS*2, 1 )
	ELSE
	   CALL EIHRR( ZSBUF, NPTS*3, 1 )
	ENDIF
C
9000	RETURN
	END
