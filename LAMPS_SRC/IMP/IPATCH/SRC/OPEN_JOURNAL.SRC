C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1986-12-17 11:19:24.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE OPEN_JOURNAL
C
***	IDENT	17DE86
***	MODULE	OPEN_JOURNAL
C
C Copyright (C) LaserScan Laboratories Ltd, Cambridge, England
C
C Author TJ Ibbs, 7 August 1986
C
C to open the journal file
C
	IMPLICIT NONE
C
C **********************************************************************
C parameter files
C
	INCLUDE	'LSL$CMNLSL:LSLLIBMSG.PAR'
	INCLUDE	'HERE:IPATCHMSG.PAR'		! error numbers
C
C common files
C
	INCLUDE	'HERE:FILES.CMN'		! filenames, etc
	INCLUDE	'HERE:SWITCHES.CMN'		! for JOURNAL
C
C functions
C
	LOGICAL		FLWOPN			! open file for write
C
C workspace
C
	LOGICAL		OK			! function return
	INTEGER		IERR			! specific error
C
C **********************************************************************
C so open the file
C
	OK = FLWOPN( JOULUN, JOUNAM(:JOULEN), IERR )
C
	IF ( .NOT.OK ) THEN
	   CALL LSL_PUTMSG( IPATCH__OPENJOU, JOUNAM(:JOULEN) )
	   CALL LSL_ADDMSG( OK )
	   IF ( OK.EQ.LSL__SYSOPEN ) CALL LSL_ADDMSG(IERR)
	   JOURNAL = .FALSE.			! disable journalling
	ENDIF
C
C and note what we are recording
C
	CALL FLWRTF('! journal of IPATCH session on %S255',
     &						    IFFNAM(:IFFLEN))
C
	IF ( READONLY ) THEN
	   CALL FLWSTR('! file was opened read-only')
	ELSE
	   CALL FLWSTR('! file was opened /WRITE')
	ENDIF
C
	RETURN
	END
