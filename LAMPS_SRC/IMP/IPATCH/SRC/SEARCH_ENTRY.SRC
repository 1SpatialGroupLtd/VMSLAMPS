	SUBROUTINE SEARCH_ENTRY( MNEMONIC )
C
***	IDENT	19DE87
***	MODULE	SEARCH_ENTRY
C
C Copyright (C) LaserScan Laboratories Ltd, Cambridge, England
C
C Author TJ Ibbs, 25 July 1986
C
C searches for the entry whose mnemonic is in MNEMONIC
C - if the entry is found, then it is made in hand and printed
C - if the entry is not found, then we move back to where we were before
C   the search
C
C the search may be modified by arguments in the /CMDCOM/INTARG and
C REALAR arrays, and by STARST, as appropriate, but this is handled
C at the next level down the call tree
C
	IMPLICIT NONE
C
C argument
C
	CHARACTER*2	MNEMONIC	! what to search for
C
C **********************************************************************
C parameter files
C
	INCLUDE	'HERE:IPATCHMSG.PAR'		! error numbers
C
C common files
C
	INCLUDE	'LSL$CMNLSL:CMDCOM.CMN'		! for INTARG,etc
	INCLUDE	'LSL$CMNIFF:IFFHAN.CMN'		! for LPOSH
	INCLUDE	'HERE:ENTRY.CMN'		! for IECODE
C
C functions
C
	LOGICAL		SEARCH_SIMPLE
	LOGICAL		SEARCH_TEXT
	LOGICAL		SEARCH_INTARG
	LOGICAL		SEARCH_REALAR
	LOGICAL		SEARCH_FS
	LOGICAL		SEARCH_TS
	LOGICAL		SEARCH_AC
	LOGICAL		SEARCH_NO
	LOGICAL		SEARCH_STRING
	LOGICAL		SEARCH_CB
	LOGICAL		SEARCH_NF
	LOGICAL		SEARCH_CS
	LOGICAL		CHECK_EOL	! check end of line for rubbish
C
C workspace
C
 	LOGICAL		FAIL		! did the search work?
	INTEGER*4   	POSN		! old entry's position
	INTEGER*2	ENTCOD		! copy of IECODE
	INTEGER		I		! for a DO loop
C
C **********************************************************************
C is there any file left to search?
C
	IF ( LPOSH.EQ.LPOSE ) THEN
	   CALL LSL_PUTMSG( IPATCH__SEARCHEOF )
	   GOTO 9000
	ENDIF
C
C remember where we are now
C
	POSN   = LPOSH
	ENTCOD = IECODE
C
C decide what to do according to the entry mnemonic
C
	IF ( MNEMONIC.EQ.'RA' .OR. MNEMONIC.EQ.'HI' .OR.
     &	     MNEMONIC.EQ.'MH' .OR. MNEMONIC.EQ.'MD' .OR.
     &	     MNEMONIC.EQ.'CC' .OR. MNEMONIC.EQ.'CP' .OR.
     &	     MNEMONIC.EQ.'EF' .OR. MNEMONIC.EQ.'EO' .OR.
     &	     MNEMONIC.EQ.'EM' .OR. MNEMONIC.EQ.'EJ'     ) THEN
C
	   IF ( CHECK_EOL() ) GOTO 9000
C
	   FAIL = SEARCH_SIMPLE( %REF(MNEMONIC) )
	   IF ( FAIL ) CALL WRITEF(
     &			'%%IPATCH-W-SEARCH, cannot find %S',MNEMONIC)
C
	ELSEIF ( MNEMONIC.EQ.'NS' .OR. MNEMONIC.EQ.'TX' .OR.
     &		 MNEMONIC.EQ.'TC' .OR. MNEMONIC.EQ.'CH' ) THEN
C
	   IF ( CHECK_EOL() ) GOTO 9000
C
	   FAIL = SEARCH_TEXT( %REF(MNEMONIC), STARLE, STARST )
	   IF ( FAIL ) THEN
	      CALL EXPAND('%%IPATCH-W-SEARCH, cannot find %S',MNEMONIC)
	      IF (STARLE.GT.0) CALL APPEND(' "%S"',STARST)
	      CALL TTWLIN
	   ENDIF
C
	ELSEIF ( MNEMONIC.EQ.'TH' .OR.
     &		 MNEMONIC.EQ.'SS' .OR. MNEMONIC.EQ.'SL' .OR.
     &		 MNEMONIC.EQ.'VO' ) THEN
C
	   IF ( CHECK_EOL() ) GOTO 9000
C
	   FAIL = SEARCH_INTARG( %REF(MNEMONIC), CMDICT, INTARG )
	   IF ( FAIL ) THEN
	      CALL EXPAND('%%IPATCH-W-SEARCH, cannot find %S',MNEMONIC)
	      DO 1000 I = 1,CMDICT
		 CALL APPEND(' %N',INTARG(I))
1000	      CONTINUE
	      CALL TTWLIN
	   ENDIF
C
	ELSEIF ( MNEMONIC.EQ.'RO' ) THEN
C
	   IF ( CHECK_EOL() ) GOTO 9000
C
	   FAIL = SEARCH_REALAR( %REF(MNEMONIC), CMDRCT, REALAR )
	   IF ( FAIL ) THEN
	      CALL EXPAND('%%IPATCH-W-SEARCH, cannot find %S',MNEMONIC)
	      DO 2000 I = 1,CMDRCT
		 CALL APPEND(' %F',REALAR(I))
2000	      CONTINUE
	      CALL TTWLIN
	   ENDIF
C
	ELSEIF ( MNEMONIC.EQ.'FS' ) THEN
C
	   FAIL = SEARCH_FS()
C
	ELSEIF ( MNEMONIC.EQ.'TS' ) THEN
C
	   FAIL = SEARCH_TS()
C
	ELSEIF ( MNEMONIC.EQ.'AC' ) THEN
C
	   FAIL = SEARCH_AC()
C
	ELSEIF ( MNEMONIC.EQ.'NO' ) THEN
C
	   FAIL = SEARCH_NO()
C
	ELSEIF ( MNEMONIC.EQ.'ST' .OR. MNEMONIC.EQ.'ZS' ) THEN
C
	   FAIL = SEARCH_STRING( %REF(MNEMONIC) )
C
	ELSEIF ( MNEMONIC.EQ.'CB' ) THEN
C
	   FAIL = SEARCH_CB()
C
	ELSEIF ( MNEMONIC.EQ.'NF' ) THEN
C
	   FAIL = SEARCH_NF()
C
	ELSEIF ( MNEMONIC.EQ.'CS' ) THEN
C
	   FAIL = SEARCH_CS()
C
	ELSEIF ( MNEMONIC.EQ.'JB' .OR. MNEMONIC.EQ.'JP' .OR.
     &		 MNEMONIC.EQ.'SH' ) THEN
C
	   IF ( CHECK_EOL() ) GOTO 9000
C
 	   FAIL = SEARCH_SIMPLE( %REF(MNEMONIC) )
	   IF ( FAIL ) CALL WRITEF(
     &			'%%IPATCH-W-SEARCH, cannot find %S',MNEMONIC)
C
	ELSE
C
	   CALL LSL_PUTMSG( IPATCH__UNKSEARCH, %REF(MNEMONIC) )
	   GOTO 9000
C
	ENDIF
C
C **********************************************************************
C if the search failed, we must return to the entry that was current before
C
	IF ( FAIL ) CALL MOVE_TO_ADDRESS( POSN, ENTCOD,
     &					  IPATCH__NOSEARCH, .FALSE. )
C
C regardless, ensure that we have the entry in its correct relationship
C to the current feature, and display it to the user
C
	CALL GET_FEATURE
9000	CALL DISPLAY_ENTRY(.FALSE.)
C
C **********************************************************************
C and return
C
	RETURN
	END
