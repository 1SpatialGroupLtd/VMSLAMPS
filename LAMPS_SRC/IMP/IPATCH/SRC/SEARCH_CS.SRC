C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1986-08-11 11:28:12.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL FUNCTION SEARCH_CS
C
***	IDENT	11AU86
***	MODULE	SEARCH_CS
C
C Copyright (C) LaserScan Laboratories Ltd, Cambridge, England
C
C Author TJ Ibbs, 7 August 1986
C
C to look for the next CS entry
C - returns FALSE if we find one, TRUE if we don't
C
C - note allows wildcards in the arguments
C
	IMPLICIT NONE
C
C **********************************************************************
C common files
C
	INCLUDE	'HERE:ENTRY.CMN'		! for entry data
C
C functions
C
	LOGICAL	       	READ_WILD_INT2		! read a number
	LOGICAL		SEARCH_SIMPLE		! do our search
	LOGICAL		CHECK_EOL		! check end of line
C
C workspace
C
	INTEGER		CS_WANTED(2)		! values required
	LOGICAL		CS_WILD(2)		! are they wild?
	INTEGER		COUNT			! number of args
C
	INTEGER		I			! count for DO loop
C
C **********************************************************************
C assume the search works
C
	SEARCH_CS = .FALSE.
C
C no arguments yet
C
	COUNT = 0
C
C try to read the numbers
C
	DO 1000 I = 1,2
	   IF ( READ_WILD_INT2( CS_WANTED(1),CS_WILD(1),.FALSE. ) ) GOTO 1900
	   COUNT = I
1000	CONTINUE
C
C and check the end of the line
C
1900	IF ( CHECK_EOL() ) GOTO 9000
C
C **********************************************************************
C so find the next NO entry
C
2000	IF ( SEARCH_SIMPLE( %REF('CS') ) ) GOTO 8000
C
C if we have no arguments to match, then this is success
C
	IF ( COUNT.EQ.0 ) GOTO 9000
C
C so read the entry in
C
	CALL READ_ENTRY
C
C otherwise, check the values of the arguments
C
	DO 3000 I = 1,COUNT
	   IF ( CS_WILD(I) ) GOTO 3000		! don't care about value
	   IF ( I.EQ.1 .AND. CS_WANTED(I).NE.MISC_INT2 ) GOTO 2000
	   IF ( I.EQ.2 .AND. CS_WANTED(I).NE.OTHR_INT2 ) GOTO 2000
3000	CONTINUE
C
C so we have matched - return with success
C
	GOTO 9000
C
C **********************************************************************
C tell the user if we can't find it
C
8000	SEARCH_CS = .TRUE.
	CALL EXPAND('%%IPATCH-W-SEARCH, cannot find CS')
C
	DO 81000 I = 1,COUNT
	   IF ( CS_WILD(I) ) THEN
	      CALL APPEND(' *')
	   ELSE
	      CALL APPEND(' %N',CS_WANTED(I))
	   ENDIF
81000	CONTINUE
C
	CALL TTWLIN
C
C **********************************************************************
C and return
C
9000	RETURN
	END
