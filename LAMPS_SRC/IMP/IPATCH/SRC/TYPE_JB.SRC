	SUBROUTINE TYPE_JB
C
***	IDENT	05NO86
***	MODULE	TYPE_JB
C
C Copyright (C) LaserScan Laboratories Ltd, Cambridge, England
C
C Author TJ Ibbs, 17 September 1986
C
C To type the contents of the current JB to the user
C
	IMPLICIT NONE
C
C **********************************************************************
C common files
C
	INCLUDE	'LSL$CMNIFF:IFFHAN.CMN'	! for LPOSH
	INCLUDE	'LSL$CMNIFF:IFFPAR.PAR'	! for JBSECT,JBNEXT
	INCLUDE	'LSL$CMNIFF:IFFJUN.CMN'	! for IFPOSJ
	INCLUDE	'HERE:ENTRY.CMN'	! contains the entry data
C
C workspace
C
	INTEGER*2	ARMS		! number of arms to junction
	REAL		X,Y		! position of junction
	INTEGER*2	SECT		! sector number we're in
	INTEGER*4	NEXT		! address of next JB
	INTEGER*2	I		! DO loop count
	INTEGER*4	ADDR		! address of junction
	INTEGER*2	VERT		! vertex number in ST
C
C **********************************************************************
C so write out the basic description of the entry
C
	CALL PRINT_JB(.TRUE.)
C
C and read in the general junction block data
C
	CALL EIHRI( SECT, 1, JBSECT )
	CALL EIHRL( NEXT, 1, JBNEXT )
	CALL WRITEF('- JB is in sector %^W%I2',SECT)
	CALL WRITEF('- next JB is at address %P0%X8',NEXT)
C
C ensure that we start at the first junction in this JB (even if we've
C already been through it once before)
C - position IFPOSJ 'before' the first junction in the block
C
	CALL IFFUPJ(0)
C
C get the next junction from the JB
C
2000 	CALL IFJNXT( X, Y, ARMS )
C
C if ARMS is -1, then there are no more
C
	IF ( ARMS.EQ.-1 ) GOTO 9000
C
C otherwise, print out the junction
C
	CALL EXPAND('offset %^W%P0%X4:',IFPOSJ)
	CALL WRITAP(' junction with %P %^W%I2 arm%m at %F12.4, %F12.4',
     &		     		    ARMS,	    X, Y )
C
C and list the locations of the arms...
C
	DO 4000 I = 1,ARMS
	   CALL JIHR( I, ADDR, VERT )
	   CALL EXPAND('   - arm %^W%I2:', I )
	   CALL WRITAP(' vertex %^W%I3 of the ST at address %^L%P0%X8',
     &				VERT,			    ADDR )
4000	CONTINUE
C
C and get the next junction from the block
C
	GOTO 2000
C
C that's all we need to do - return
C
9000	RETURN
	END
