C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1986-08-11 12:23:12.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL FUNCTION EDIT_CC_CMD
C
***	IDENT	11AU86
***	MODULE	EDIT_CC_CMD
C
C Copyright (C) LaserScan Laboratories Ltd, Cambridge, England
C
C Author TJ Ibbs, 1 August 1986
C
C to read and obey an edit command for the current CC entry
C - return TRUE on error
C
	IMPLICIT NONE
C
C **********************************************************************
C parameter files
C
	INCLUDE	'HERE:IPATCHMSG.PAR'	! for error numbers
C
C common files
C
	INCLUDE	'LSL$CMNLSL:CMDCOM.CMN'	! for command details
  	INCLUDE	'HERE:ENTRY.CMN'	! for entry details
	INCLUDE	'HERE:SWITCHES.CMN'	! for FATAL_ERROR
C
C command table
C
	EXTERNAL	EDIT_CC_CMD_TABLE
C
C functions
C
	INTEGER		RDCOMM
	LOGICAL		CHECK_EOL
C
C workspace
C
	INTEGER		CMD		! command number
	INTEGER		I,J		! for a DO loop
C
C **********************************************************************
C assume the worst
C
	EDIT_CC_CMD = .TRUE.
C
C so read the command
C
	CMD = RDCOMM( EDIT_CC_CMD_TABLE )
C
C check for an error
C
	IF ( CMD.LE.0 ) GOTO 9999		! give up
C
C check for rubbish at the end of line
C
	IF ( CHECK_EOL() ) GOTO 9999
C
C otherwise, jump according to the command
C
	GOTO (	 100, 200, 300, 400, 500,
     &	 	 600, 700, 800, 900,1000,
     &		1100,1200,1300,1400,1500,
     &		1600,1700,1800,1900,2000,
     &		2100 ), CMD
C
C and if we come here, then complain
C
	CALL LSL_PUTMSG( IPATCH__NOSUCHCMD, CMD )
	CALL LSL_PUTMSG( IPATCH__REPORTLSL )
	FATAL_ERROR = .TRUE.
	GOTO 9999
C
C **********************************************************************
C and replace the appropriate value in CC
C
100	CC(1,1) = REALAR(1)
	GOTO 9000
200	CC(2,1) = REALAR(1)
	GOTO 9000
300	CC(3,1) = REALAR(1)
	GOTO 9000
400	CC(4,1) = REALAR(1)
	GOTO 9000
500	CC(5,1) = REALAR(1)
	GOTO 9000
600	CC(6,1) = REALAR(1)
	GOTO 9000
700	CC(7,1) = REALAR(1)
	GOTO 9000
800	CC(8,1) = REALAR(1)
	GOTO 9000
900	CC(9,1) = REALAR(1)
	GOTO 9000
1000	CC(10,1) = REALAR(1)
	GOTO 9000
1100	CC(1,2) = REALAR(1)
	GOTO 9000
1200	CC(2,2) = REALAR(1)
	GOTO 9000
1300	CC(3,2) = REALAR(1)
	GOTO 9000
1400	CC(4,2) = REALAR(1)
	GOTO 9000
1500	CC(5,2) = REALAR(1)
	GOTO 9000
1600	CC(6,2) = REALAR(1)
	GOTO 9000
1700	CC(7,2) = REALAR(1)
	GOTO 9000
1800	CC(8,2) = REALAR(1)
	GOTO 9000
1900	CC(9,2) = REALAR(1)
	GOTO 9000
2000	CC(10,2) = REALAR(1)
	GOTO 9000
C
C **********************************************************************
C UNIT - set the transformation to the unit matrix
C
2100	DO 2150 J = 1,2
	   DO 2140 I = 1,10
	      CC(I,J) = 0.0
2140	   CONTINUE
2150	CONTINUE
C
C and two values must be set to one
C
	CC(2,1) = 1.0
	CC(3,2) = 1.0
C
	GOTO 9000
C
C **********************************************************************
C and return
C
9000	EDIT_CC_CMD = .FALSE.
9999	RETURN
	END
