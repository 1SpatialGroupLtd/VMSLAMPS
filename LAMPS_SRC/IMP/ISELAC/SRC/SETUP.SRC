C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1986-10-10 17:05:42.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
       LOGICAL FUNCTION SETUP(NUMBER)
C
***    MODULE SETUP
***    IDENT 10OC86
C
C	Copyright Laser-Scan Laboratories Ltd., Cambrdige, England	
C
C	Author: D Catlow
C	Modified: A.T. Timms	for ISELAC	30-Sept-1986
C
C function to set up command dictionaries for SELAC
C
C call with NUMBER=0 to set up ACNAME
C call with NUMBER>0 to set up parameters in
C PARAMS and PARS associated with ACNUMth entry in ACNAME
C also sets up table of associated argument qualifiers
C n.b. ACFTRD must have been previously called
C 
C Returns .TRUE. for SUCCESS, .FALSE. otherwise !!
C 
	IMPLICIT NONE
C
	INCLUDE 'LSL$CMNLSL:TXTC.CMN'
	INCLUDE 'LSL$CMNLSL:CMDCOM.CMN'
	INCLUDE 'LSL$CMNISELAC:ACSKEL.CMN'
	INCLUDE 'LSL$CMNISELAC:DICTS.CMN'
	INCLUDE 'LSL$CMNISELAC:ATTRIB.CMN'
	INCLUDE 'LSL$CMNISELAC:ISELACMSG.PAR'	! ISELAC errors
C
	INTEGER*4     IX
	INTEGER*4     NUMBER 
	INTEGER*4     DESCR(2)
	INTEGER*4     NUMI   	
	INTEGER*4     NUMR
	INTEGER*4     IND
	INTEGER*4     I             ! counter
	INTEGER*2     IARGS
	INTEGER*4     IERR
C
C functions called
	INTEGER*4     ADDNAM
	INTEGER*2     ARGSPC
C
C......................................................................
	SETUP = .FALSE.			! assume faliure
	DESCR(1) = 24
	IF (NUMBER.GT.0) GOTO 300
C
C......................................................................
C transfer SK_NFTS names to command dictionary
C ACNAME from SK_NAME
       CALL INITAB(ACNAME,TABSIZ,BUFAC,BUFSIZ,ARGAC,20)
       IARGS = ARGSPC(0,1,.FALSE.,.FALSE.,.FALSE.,
     &              .FALSE.,.FALSE.,.TRUE.,.FALSE.) 	
C
       DO 100 I = 1,SK_NSKS
         DESCR(2) = %LOC(SK_NAME(1,I))
         IX = ADDNAM(DESCR,24,I,IARGS)
         IF (IX.LE.0) GOTO 500        ! error
100    CONTINUE
C
       GOTO 900                   !return
C
C......................................................................
C transfer SK_NFLDS(NUMBER) parameters to command dictionary PARAMS
300    CALL INITAB(PARAMS,TABSIZ,BUFPAR,BUFSIZ,ARGPAR,20)
C
       DO 400 I = 1,SK_NFDS(NUMBER)
         DESCR(2) = %LOC(SK_FDID(1,I,NUMBER))
         IARGS = ARGSPC(0,1,.FALSE.,.FALSE.,.FALSE.,
     &              .FALSE.,.FALSE.,.TRUE.,.FALSE.)
         IX = ADDNAM(DESCR,24,I,IARGS)
         IF (IX.LE.0) GOTO 500
400    CONTINUE
C
       CALL INITAB(PARS,TABSIZ,BUFAB,BUFSIZ,ARGTAB,20)
C
       DESCR(1) = 4
       DO 450 I = 1,SK_NFDS(ACNUM)
         DESCR(2) = %LOC(SK_ABBR(1,I,ACNUM))
         IND = SK_FDIND(I,NUMBER)
         INTNUM = .NOT.BTEST(IND,0)
         IF (.NOT.INTNUM) THEN
           NUMI = 0
           NUMR = 1
         ELSE
           NUMI = 1
           NUMR = 0
         END IF   
C
         IARGS = ARGSPC(NUMI,NUMR,.FALSE.,.FALSE.,.FALSE.,
     & 		    .TRUE.,.FALSE.,.FALSE.,.FALSE.)   
         IX = ADDNAM(DESCR,4,I,IARGS)
450    CONTINUE
C
       GOTO 900
C
C......................................................................
C error condition
500    SETUP = ISELAC__ADDNAMERR
       CALL LSL_PUTMSG(SETUP)	
       CALL TTWLIN
C
       GOTO 1000
C
C......................................................................
900    SETUP=.TRUE.				! success
C 
C......................................................................
1000   RETURN
       END         
