C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1986-10-24 12:07:12.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL FUNCTION SKELRD
C
***	IDENT	24OC86
***	MODULE	SKELRD
C
C	Copyright : Laser-Scan Laboratories, Cambridge, England
C
C	Created   : 27-August-1985
C
C	Author    : D R Catlow
C	Modified  : A.T. Timms	for IMP ISELAC
C
C	Routine for ISELAC to parse skeleton file name
C
C	returns .TRUE. for SUCCESS, .FALSE. otherwise.
C
	IMPLICIT NONE
C
C Commons
	INCLUDE 'LSL$CMNLSL:TXTC.CMN'
	INCLUDE 'LSL$CMNLSL:EXPC.CMN'
	INCLUDE 'LSL$CMNISELAC:ISELACMSG.PAR'	! ISELAC errors
	INCLUDE '($SSDEF)'			! for SS$_NORMAL
C
C Workspace
	INTEGER*4	PSDSTR(2)	! Pseudo string descriptor
	INTEGER*4	IERR
	INTEGER*4	RET
	INTEGER*4	FAKSTR(2)
	INTEGER*2	LEN
	INTEGER*2	FAKLEN
	INTEGER*4	SUCCESS
	CHARACTER*80	FILNAM
	BYTE		FAKBUF(80)
	BYTE		CH
C
	EQUIVALENCE	(FAKLEN,FAKSTR(1))
C
C Functions
	INTEGER*4	READSTR
	LOGICAL		PARFILN
	LOGICAL		RDCHS
	LOGICAL		ACSKRD
	LOGICAL		SETUP
C
C.......................................................................
	SKELRD = .FALSE.		! initial assumption FALIURE !!
	FAKSTR(2) = %LOC(FAKBUF)	! set up fake string descriptor
C
C.......................................................................
C Check for skeleton filename
	IF (RDCHS(CH)) THEN
	  SKELRD = ISELAC__NOSKFILNAM
	  CALL LSL_PUTMSG(SKELRD)
	  GOTO 500	  
	ELSE
	  FAKLEN = 80
	  IF (CH.EQ.34.OR.CH.EQ.39) THEN
	    FAKLEN = READSTR(FAKSTR,CH)
	  ELSE
	    CALL BSCH
	    FAKLEN = READSTR(FAKSTR,' ')
	  ENDIF
	ENDIF
C
C.......................................................................
C Parse the file name:
	SUCCESS = PARFILN(FILNAM,FAKLEN,FAKSTR,'LSL$LOOKUP:ACSKEL.DAT',
     &	.TRUE.,RET,IERR)
	IF (.NOT.SUCCESS) THEN
	  SKELRD = ISELAC__ERRPARFIL
	  CALL LSL_PUTMSG(SKELRD,FAKSTR(1))
	  GOTO 500
	ENDIF
C
        IF (.NOT.ACSKRD(FILNAM)) GOTO 999	! error with skel. file
C
        IF (.NOT.SETUP(0)) GOTO 999		! error with cmd tables
C
C.......................................................................
500	SKELRD = SS$_NORMAL		! set function return ok
C
C.......................................................................
999	RETURN
	END
