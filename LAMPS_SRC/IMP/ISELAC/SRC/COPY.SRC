	PROGRAM COPY
C
C To copy an iff file
C
	INTEGER*2	IECODE
	INTEGER*2	IELEN
	INTEGER		INLUN
	INTEGER		OUTLUN
C
	REAL   		IRANGE(4)    	! IFF range elements for outfile
	INTEGER*2	NPTS,IENDS	! no. pts pen control for string
	INTEGER		I		! loop var.
	REAL    	TBUF(2,200)     ! IFF string coords. for feature
	REAL    	TBUF3(3,200)   	! 3D string coords. for feature
C
	EQUIVALENCE(TBUF3(1,1),TBUF(1,1))
C
C
C
	INLUN = 1
	OUTLUN = 2
C
C Open files
	CALL IFFOPN (INLUN, 'LSL$IF:OLD.IFF', 0)
	CALL IFFOPN (OUTLUN, 'LSL$IF:OLDISH.IFF', 200*256)
C
C Copy entries
C
5	CALL IFFSEL(INLUN)
	CALL IFFNXT(IECODE, IELEN)
C
	IF (IELEN.EQ.-1) IECODE = 'AA'
C
	IF (IECODE.EQ.'ST') THEN
	  CALL EIHRS(NPTS,IENDS) 		! read the string header
	  CALL EIHRR(TBUF(1,1),NPTS*2,1)	! read the string coords
	  DO 10 I=1,NPTS
	    IRANGE(1)=AMIN1(IRANGE(1),TBUF(1,I))! determine new range
	    IRANGE(2)=AMAX1(IRANGE(2),TBUF(1,I))! entry values for
	    IRANGE(3)=AMIN1(IRANGE(3),TBUF(2,I))! output file
	    IRANGE(4)=AMAX1(IRANGE(4),TBUF(2,I))
10	  CONTINUE
	ENDIF
C
C ZSs are special too - we must determine the new RAnge from these too
C
	IF (IECODE.EQ.'ZS') THEN
	  CALL EIHRS(NPTS,IENDS) 		! read the string header
	  CALL EIHRR(TBUF3(1,1),NPTS*3,1)	! read the string coords
	  DO 20 I=1,NPTS
	    IRANGE(1)=AMIN1(IRANGE(1),TBUF3(1,I))! determine new range
	    IRANGE(2)=AMAX1(IRANGE(2),TBUF3(1,I))! entry values for
	    IRANGE(3)=AMIN1(IRANGE(3),TBUF3(2,I))! output file
	    IRANGE(4)=AMAX1(IRANGE(4),TBUF3(2,I))
20	  CONTINUE
	ENDIF
C
	IF (IELEN.NE.-1) THEN
	   CALL EIHCPY (OUTLUN)
	   GOTO 5
	ENDIF
C
	CALL IFFCLO(OUTLUN)
	CALL IFFCLO(INLUN)
	END
