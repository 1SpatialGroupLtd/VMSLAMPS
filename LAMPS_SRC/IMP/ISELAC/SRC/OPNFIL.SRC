	SUBROUTINE OPNFIL(LUN,STATUS)
C
***	IDENT	18DE86
***	MODULE	OPNFIL
C
C	Copyright: Laser-Scan Laboratories, Cambridge, England
C
CMOD	Made a subroutine			ATT  18-Dec-1986
C
C	Author: D R Catlow			29-May-1985
C
C	Modified: A.T. Timms   (for ISELAC)	30-September-1986
C
C	Routine for ISELAC to open IFF input and output files
C
C	STATUS:		1 Open existing file on LUN	(input)
C			2 Open new      file on LUN	(output)
C	
C	Returns SS$_NORMAL for success or a recoverable situation
C	
C	
	IMPLICIT NONE
C
C Commons: 
	INCLUDE 'LSL$CMNLSL:TXTC.CMN'
	INCLUDE 'LSL$CMNLSL:EXPC.CMN'
	INCLUDE 'LSL$CMNIFF:IFFHAN.CMN'
C
	INCLUDE 'LSL$CMNISELAC:ISELACMSG.PAR'
	INCLUDE 'LSL$CMNISELAC:ATTRIB.CMN'
C
	INTEGER*4 SS$_NORMAL
	EXTERNAL  SS$_NORMAL		! normal successful completion
C
C parameters		
	INTEGER*4	LUN		! LUN number
	INTEGER*4	STATUS		! input or output file
C
C workspace
	INTEGER*4	PSDSTR(2)	! Pseudo string descriptor
	INTEGER*4	IERR
	INTEGER*4	RET
	INTEGER*4	FAKSTR(2)
	INTEGER*2	FAKLEN
	CHARACTER*80	FILNAM
	BYTE		FAKBUF(80)
	BYTE		CH
	LOGICAL		OK		! success or otherwise ?
C
	EQUIVALENCE	(FAKLEN,FAKSTR(1))
C
C Functions
	INTEGER*4	READSTR
	LOGICAL		PARFILN
	LOGICAL		RDCHS
	LOGICAL		IFFOPEN	   	! open existing IFF file read 
	LOGICAL		IFFCREATE  	! to create new IFF file
C
C.......................................................................
C
	FAKSTR(2)=%LOC(FAKBUF)	! set up fake string descriptor
C
C.......................................................................
C
C Check for any characters on the command line
C
	IF (RDCHS(CH)) THEN
	  OK=ISELAC__NOFILNAM
	  CALL LSL_PUTMSG(OK)
	  GOTO 500	  
	ELSE
	  FAKLEN=80
	  IF (CH.EQ.34.OR.CH.EQ.39) THEN
	    FAKLEN=READSTR(FAKSTR,CH)
	  ELSE
	    CALL BSCH
	    FAKLEN=READSTR(FAKSTR,' ')
	  ENDIF
	ENDIF
C
	GOTO (100,200), STATUS
C
C.......................................................................
C
C Close any file that may be open
C
100	IF (HADFROM) THEN
	  CALL IFFCLO(LUN)
	ENDIF
C
C Parse the input file name
C
	OK=PARFILN(FILNAM,FAKLEN,FAKSTR,
     &				'LSL$IF:IFF.IFF;0',.TRUE.,RET,IERR)
	IF (.NOT.OK) THEN
	  HADFROM=.FALSE.
	  INFILOK=.FALSE.
	  OK=ISELAC__ERRPARFIL
	  CALL LSL_PUTMSG(OK,FAKSTR(1))
	  IF (IERR.NE.0) CALL LSL_ADDMSG(IERR)
	  GOTO 500
	ENDIF
C
C Open input file 
C
	OK=IFFOPEN(LUN,FILNAM(1:FAKLEN),,.TRUE.)
C
	IF (OK) THEN			! Successfully
	  INFILOK=.TRUE.
	ELSE
	  HADFROM=.FALSE.
	  INFILOK=.FALSE.
	ENDIF
	GOTO 500
C
C.......................................................................
C
C Close any file that may be open
C
200	IF (HADTO) THEN
	  CALL IFFCLO(LUN)
	  HADTO=.FALSE.
	ENDIF
C
C Parse the output file name
C
	OK=PARFILN(FILNAM,FAKLEN,FAKSTR,
     &			'LSL$IF:ISELAC_DEF.IFF',.TRUE.,RET,IERR)
	IF (.NOT.OK) THEN
	  HADTO=.FALSE.
	  OK=ISELAC__ERRPARFIL
	  CALL LSL_PUTMSG(OK,FAKSTR(1))
	  IF (IERR.NE.0) CALL LSL_ADDMSG(IERR)
	  GOTO 500
	ENDIF
C
C and open output file
C
	OK=IFFCREATE(LUN,FILNAM(1:FAKLEN),,,.TRUE.) 
C
	IF (OK) THEN			! Successfully
	  HADTO=.TRUE.
	  OUTFILOK=.TRUE.
	ELSE					! Unsuccessfully
	  OUTFILOK=.FALSE.
	ENDIF
C
C ......................................................................
C
C All other errors we must ignore... the user may have spent ages
C setting up his AC selection criteria and won't want to give up now 
C
C.......................................................................
C
500	RETURN
	END
