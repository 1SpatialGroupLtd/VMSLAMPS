C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1986-10-07 14:11:32.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL FUNCTION REJECT(COMAND,VALUE)
C
***	IDENT   30SE86
***	MODULE  REJECT
C
C	Copyright LaserScan Laboratories Ltd, Cambridge, England
C
C
C	Author: Clarke Brunt
C	Modified: D Catlow for SELAC operation
C	Modified: A.T. Timms for ISELAC 
C
C Tests whether a feature is to be rejected because of its VALUE
C for the attribute associated with the command COMAND.
C Returns true if to be rejected.
C
C Summary of logic: If no restrictions, then FALSE.
C If outside an 'include' range, and not already in another,
C (INCLUDE TRUE) then mark for exclusion (SKIP TRUE).
C If inside an 'exclude' range, return TRUE immediately
C If inside an 'include' range, mark for inclusion (INCLUDE TRUE &
C							SKIP FALSE)
C If falls out of bottom of loop, return SKIP
C
	IMPLICIT NONE
C
	INCLUDE 'LSL$CMNISELAC:ATTRIB.CMN'
C
C arguments passed
	INTEGER*4	COMAND		! command number
	REAL            VALUE		! value of attribute
C
	INTEGER		I		! loop counter
	LOGICAL*1	SKIP		! marked for rejection?
	LOGICAL*1	INCLUDE		! in an included range?
C
	REJECT = .TRUE.
	SKIP = .FALSE.
	INCLUDE = .FALSE.
C
C....................................................................
C
	DO 10 I = 1,NLIM(COMAND)
	  IF ((HADLOW(I,COMAND).AND.VALUE.LT.LLIM(I,COMAND)) .OR.
     &	       ( HADUP(I,COMAND).AND.VALUE.GT.ULIM(I,COMAND)) ) THEN
	    IF (.NOT.EXCLUDE(I,COMAND).AND..NOT.INCLUDE) SKIP = .TRUE.
	  ELSE
	    IF (EXCLUDE(I,COMAND)) GOTO 999		! RETURN
	    SKIP = .FALSE.
	    INCLUDE = .TRUE.
	  ENDIF
10	CONTINUE
C
C....................................................................
	REJECT = SKIP
C
C....................................................................
999	RETURN
	END

