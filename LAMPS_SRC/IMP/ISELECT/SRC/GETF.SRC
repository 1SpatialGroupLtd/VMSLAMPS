C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1986-11-05 14:53:04.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
        INTEGER*4  FUNCTION GETF()
C
***	MODULE	GETF
***	IDENT	05NO86
C
C 	Copyright Laser-Scan Laboratories Ltd., Cambridge, England
C
CMOD	New IFF open routines				ATT  04-Nov-1986
CMOD	Calls to IFFSEL, IFFRWD and IFFRLA added	TJH  23-Oct-1986
CMOD	LSL_ADDMSG used for secondary error message, FORTRAN
C	INCLUDE statements used consistently.		TJH  25-Jul-1986
C	Author Immanuel Freedman 29-JA-86
C
C       This module obtains IFF files
C
	IMPLICIT NONE
C
	INCLUDE 'LSL$CMNIFF:IFFHAN.CMN'
	INCLUDE 'LSL$CMNISELECT:FILES.CMN'
	INCLUDE 'LSL$CMNISELECT:FLAG.CMN'
	INCLUDE 'LSL$CMNISELECT:ARG.CMN'
	INCLUDE 'LSL$CMNISELECT:IFFOK.CMN'
	INCLUDE 'LSL$CMNISELECT:ISELECTMSG.PAR'
	INCLUDE 'LSL$CMNLSL:STATUS.CMN'
C
	INTEGER*4 SS$_NORMAL
	EXTERNAL  SS$_NORMAL		! normal successful completion
C
C functions called
	LOGICAL		IFFOPEN	   	! open existing file read only
	LOGICAL		IFFCREATE  	! open new IFF file
C
C workspace
	LOGICAL		IFF_OK  	! to test for IFF opening
C
C ......................................................................
C
	GETF=%LOC(SS$_NORMAL)
C
C Attempt to open the input IFF file
C
	IFF_OK = IFFOPEN(INLUN,P1_FIL(1:P1_LEN),,HAD_LOG) 
C
	IF (IFF_OK) THEN			! Successfully
	  IN_OPEN=.TRUE.			! flag "file is open"
	ELSE
	  GETF = IFF_OK				! faliure
	  GOTO 10
	ENDIF
C
C Attempt to open the output IFF file
C
	IFF_OK = IFFCREATE(OUTLUN,P2_FIL(1:P2_LEN),,,HAD_LOG)
C
	IF (IFF_OK) THEN
	  OUT_OPEN=.TRUE.			! flag "file is open"
	ELSE
	  GETF = IFF_OK
	  GOTO 10
	ENDIF

C
C Select and rewind the input IFF file
C
	CALL IFFSEL(INLUN)
C
C Set function return
C
10	IF (GETF) GETF=%LOC(SS$_NORMAL)	        ! normal completion
	RETURN
	END
