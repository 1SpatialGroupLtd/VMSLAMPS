	INTEGER*4 FUNCTION CLOSEF(DELETE)
C
***	MODULE	CLOSEF
***	IDENT	15DE87
C
C	Copyright Laser-Scan Laboratories Ltd.,Cambridge,England
C
CMOD	Altered so that does not produce an error on closing the output
C	file if ACs are lost due to the revision level	JMB  15-Dec-1987
C
CMOD	Rewritten.					TJH  25-JUL-1986
C	Author 	Immanuel Freedman 11-DEC-85
C
C	This modules closes the IFF files. If DELETE is .TRUE. then
C	close and delete the IFF file.
C
	IMPLICIT NONE	
C
	INCLUDE 'LSL$CMNIFF:IFFHAN.CMN'
	INCLUDE 'LSL$CMNISELECT:IFFOK.CMN'
	INCLUDE 'LSL$CMNISELECT:FILES.CMN'
	INCLUDE 'LSL$CMNISELECT:FLAG.CMN'
	INCLUDE 'LSL$CMNISELECT:ARG.CMN'
	INCLUDE 'LSL$CMNISELECT:ISELECTMSG.PAR'
	INCLUDE 'LSL$CMNLSL:LSLLIBMSG.PAR'
	INCLUDE 'LSL$CMNLSL:STATUS.CMN'
C
	INTEGER*4 SS$_NORMAL
	EXTERNAL  SS$_NORMAL		! normal successful completion
C
C Argument:
	LOGICAL		DELETE		! close and delete output file?
C
C Workspace:
	INTEGER		IERR		! for error return
C
C ......................................................................
C
	CLOSEF=%LOC(SS$_NORMAL)		! assume normal completion
C
C Close IFF input file
	IF (IN_OPEN) THEN
	  CALL IFFCLO(INLUN)
          IF ((IERCD.NE.0).AND.(IERCD.NE.'LOST')) THEN	! error?
	    CLOSEF=ISELECT__ERRCLINFL		! error closing file
	    CALL LSL_PUTMSG(CLOSEF,P1_FIL(:P1_LEN))!tell user
	    IF (OK.EQ.%LOC(SS$_NORMAL)) THEN
	      CALL IFFERM(.TRUE.)		! IFF internal error
	      CALL IFFERR(ERRCOD,OK)
	    ELSE
	      CALL LSL_ADDMSG(OK)		! system error
 	    ENDIF
	  ENDIF
	ENDIF
C
C Close IFF output file
	IF (OUT_OPEN) THEN
	  IF (DELETE) THEN
	     CLOSEF=ISELECT__NOSELFND
	     CALL LSL_PUTMSG(CLOSEF)
	     CALL LSL_ADDMSG(ISELECT__DELETE,P2_FIL(:P2_LEN))
             CALL IFFCDL(OUTLUN)
	  ELSE
	     IF (LSL_STATUS) LSL_STATUS=%LOC(SS$_NORMAL)
             CALL IFFCLO(OUTLUN,LSL_STATUS)
	  ENDIF
          IF ((IERCD.NE.0).AND.(IERCD.NE.'LOST')) THEN	! error?
	    CLOSEF=ISELECT__ERRCLOUTFL		! error closing file
	    CALL LSL_PUTMSG(CLOSEF,P2_FIL(:P2_LEN))!tell user
	    IF (OK.EQ.%LOC(SS$_NORMAL)) THEN
	      CALL IFFERM(.TRUE.)		! IFF internal error
	      CALL IFFERR(ERRCOD,OK)
	    ELSE
	      CALL LSL_ADDMSG(OK)		! system error
	    ENDIF
	  ENDIF
	ENDIF
C
C ......................................................................
C
C Ensure correct function return
C
	IF (CLOSEF) CLOSEF=%LOC(SS$_NORMAL)	! normal completion?
	RETURN
	END
