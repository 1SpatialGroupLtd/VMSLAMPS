C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1996-10-09 16:13:06.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE MOVE(IND,BOT)
***	MODULE MOVE
***	IDENT 09OC96
	IMPLICIT NONE	
C
C Copyright Laser-Scan Laboratories Ltd, Cambridge, England.
C
CMOD1555 Main loop changed so that only items in current	MJGW 09-OCT-1996
C	FC table are shifted. SPR 3497.
C
C Author: M. DHILLON
C Written: 23 January 1983
C Last edited: 09 October 1996
C
C 	A simple subroutine to move all entries in a table down one 
C	place starting with the entry indexed by IND.

***	   COMMON /INFCMN/
C Declarations go here
	INTEGER*2 IND
	INTEGER*4 BOT
	INTEGER*4 J
C Code starts here
	DO 10 J=BOT, IND, -1		! Move entries down
	   FCARR(1,J+1) = FCARR(1,J)	! one place starting
	   FCARR(2,J+1) = FCARR(2,J)	! from the bottom to
	   FCARR(3,J+1) = FCARR(3,J)	! the designated
	   FCARR(4,J+1) = FCARR(4,J)	! place.
	   LLARR(1,J+1) = LLARR(1,J)
	   LLARR(2,J+1) = LLARR(2,J)
10	CONTINUE
	RETURN
	END
