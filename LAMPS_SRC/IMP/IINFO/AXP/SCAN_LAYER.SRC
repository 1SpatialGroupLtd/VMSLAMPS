	SUBROUTINE SCAN_LAYER(FTARR,CUROV)
C
***	MODULE	SCAN_LAYER
***	IDENT	13JL93
C
C Copyright Laser-Scan Laboratories Limited, Cambridge, England.
C
C Author : 	L.A.Jones
C
C Created 						LAJ 16-Jun-1986
C
CMOD    Messages giving totals clarified such that the	ST  13-Jul-1993
C       totals don not include duplicate features
C       (Mod 1252).
CMOD	FORMAT statements reformatted 			TJH 03-Dec-1986
C
C***********************************************************************
C***********************************************************************
C
C
C Routine to scan and output details of the layer requested by
C SCAN_OUT.
C
C
C***********************************************************************
C***********************************************************************
C
	IMPLICIT NONE
C
C Common Block
C
	INCLUDE 'LSL$CMNIINFO:INFCMN.CMN'
C
C IFF layout parameter
C
	PARAMETER	LIMFT = (MAXNF + 31)/32
C
C Arguments
C
	INTEGER*4	FTARR(LIMFT)		! Array of NF's for this
						! layer
	INTEGER*2	CUROV			! Layer number
C
C Varibles
C
	INTEGER*4	I,J
	INTEGER*4	MAX,MIN			! Limit of relevant 
						! features
	INTEGER*4	LASTGP			! Start of last gap
	INTEGER*4	LASTF			! Last feature
						! encountered
	INTEGER*4	FIRSTF			! First feature 
						! encountered
	INTEGER*4	FTSINO			! Count of 
						! features/layer
	INTEGER*4	STATE
C
C Our states
C
	PARAMETER	OFF = 0
	PARAMETER	ON = 1
C
C Functions
C
	LOGICAL		EXT1V			! Extract 1-bit field
C
C
C***********************************************************************
C
C 	START OF CODE
C
C***********************************************************************
C
C Space out from previous output
C
	CALL FLWRTF
	CALL FLWRTF
C
C Anything in this layer?
C
	DO 10 I=1,LIMFT
	   IF (FTARR(I) .NE. 0) GOTO 20		! Skip out if we 
						! have anything
10	CONTINUE
C
C Say nothing in this layer
C
	CALL FLWRTF(' Layer Number : %^W%I5',CUROV)
	CALL FLWRTF(' --------------------')
	GOTO 90					! and exit
C
C Data to output - say in which layer
C
20	CALL FLWRTF(' Layer Number : %^W%I5',CUROV)
	CALL FLWRTF(' --------------------')
	CALL FLWRTF
	FTSINO = 0				! Initialise feature
						! count
C
C Find the limits of the features set
C
	MIN = (I-1)*32
	DO 30 J = I,LIMFT
	   IF (FTARR(J) .NE. 0) MAX = J*32-1	! Remember where 
						! features are
30	CONTINUE
C
C Now scan between MIN and MAX
C
	LASTGP = -1				! No last feature output
						! yet
	STATE = OFF				! => 'in gap'
	DO 70 I = MIN,MAX
	   IF (EXT1V(I,FTARR)) GOTO 40		! Feature present
C
C Else in empty section
C
	   IF (STATE .EQ. OFF) GOTO 70		! Were in gap already, 
						! so no action
	   STATE = OFF				! Else remember change 
						! of state
C
C Start of a gap in feature numbers - remember first character of gap
C
	   LASTGP = I
	   GOTO 70
C
C Found a feature
C
40	   FTSINO = FTSINO + 1			! Count the feature
	   LASTF = I				! Remember last feature 
						! present
	   IF (STATE .EQ. ON) GOTO 70		! No change of state - 
						! no action
	   STATE = ON				! Come to end of this 
						! gap
	   IF (LASTGP .GT. 0) GOTO 50		! Not first feature
C
C Output first feature number
C
	   CALL FLWRTF(' First feature number is :    %I5',I)
	   FIRSTF = I
	   GOTO 70
C
C Here we handle a real gap
C
50	   IF (LASTGP .LT. I-1) GOTO 60		! Gap of >1 feature 
						! number
	   CALL FLWRTF(' Feature number missing  :    %I5',
     &			LASTGP)			! Say this feature is 
						! missing
	   GOTO 70
C
C Gap of >1 feature number
C
60	   CALL FLWRTF(' Feature numbers missing :    %I5 to %I5',
     &			LASTGP,I-1)		! Say which features
						! omitted
70	CONTINUE
C
C Report last feature
C
	IF (FIRSTF .EQ. LASTF) GOTO 80		! Only one feature
	CALL FLWRTF(' Highest feature number  :    %I5',LASTF)
	CALL FLWRTF(' Layer contains          :    %I5 features, '//
     &	            'excluding duplicate ones',FTSINO)
	GOTO 90
C
C Only one feature - don't report its number
C
80	CALL FLWRTF(' Only one feature in layer')
C
90	RETURN
	END
