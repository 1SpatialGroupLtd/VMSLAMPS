C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1989-01-17 13:26:38.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE OUT_MD2(PRINTER)
C
***	MODULE	OUT_MD2
***	IDENT	16JA89
C
C Copyright Laser-Scan Laboratories Limited, Cambridge, England.
C
C Author : 	L.A.Jones
C
CMOD	FORTRAN i/o changed to FILEIO			TJH 16-Jan-1989
C 	Created						LAJ 13-Jun-1986
C
C
C***********************************************************************
C***********************************************************************
C
C
C Routine to output type 2 Map Descriptor Information
C
C
C***********************************************************************
C***********************************************************************
C
C
	IMPLICIT NONE
C
C
C Common blocks
C
	INCLUDE 'LSL$CMNIFF:MD2NAM.CMN'
	INCLUDE 'LSL$CMNIFF:MD2DES.CMN'
	INCLUDE 'LSL$CMNIINFO:IINFOMSG.PAR'
C
C
C Argument
C
	LOGICAL   PRINTER
C
C Variables
C
	INTEGER*4 I
	INTEGER*4 PRJIND
	INTEGER*4 SHPIND
	INTEGER*4 UNTIND
	INTEGER*4 PRJCD
	INTEGER*4 SPHCD
	INTEGER*4 UNTCD
C
C
C Functions
C
	INTEGER SIGCHS
C
C
C***********************************************************************
C
C 	START OF CODE
C
C***********************************************************************
C
C Read MD data
C
	CALL EIHR(MD2ARR,MD2LEN,1)
	IF (MATV2 .NE. 2) THEN
	   IF (.NOT. PRINTER) CALL FLWRTF
	   CALL LSL_PUTMSG(IINFO__ERRMD2)		! Say not type 2
	   GOTO 60					! and return
	ENDIF
C
C Output local origin and scale
C
	CALL FLWRTF
	CALL FLWRTF
	CALL FLWRTF(' Type 2 Map Descriptor Information')
	CALL FLWRTF(' ---------------------------------')
	CALL FLWRTF
	CALL FLWRTF(' Local Origin    : %^D%F15.3    %F15.3'
     &			,MD2LOC(1),MD2LOC(2))
	CALL FLWRTF
	CALL FLWRTF(' Scale           : %^D%F15.3',MD2SCL)
	CALL FLWRTF
C
C Now check the projection codes etc
C
	DO 10 PRJCD=1,MD2_NOPRJ
	   IF (MD2PRJ .EQ. MD2_PRJCD(PRJCD)) THEN
	      CALL FLWRTF(' Projection Code : %N  (%S)',
     &	      MD2_PRJCD(PRJCD),MD2_PRJ(PRJCD)(3:SIGCHS(MD2_PRJ(PRJCD))))
	      GOTO 20
	   ENDIF
10	CONTINUE
C
C Unknown projetion code
C
	CALL FLWRTF
	CALL FLWRTF(' %N is an illegal projection code',PRJCD)
	CALL FLWRTF
C
C Same for spheroid
C
20	CONTINUE
	DO 30 SPHCD=1,MD2_NOSPH
	   IF (MD2SPH .EQ. MD2_SPHCD(SPHCD)) THEN
	      CALL FLWRTF(' Spheroid Code   : %N  (%S)',
     &	      MD2_SPHCD(SPHCD),MD2_SPH(SPHCD)(1:SIGCHS(MD2_SPH(SPHCD))))
	      GOTO 40
	   ENDIF
30	CONTINUE
C
C Unknown spheroid code
C
	CALL FLWRTF
	CALL FLWRTF(' %N is an illegal spheroid code',SPHCD)
	CALL FLWRTF
C
C And for units
C
40	CONTINUE
	DO 50 UNTCD=1,MD2_NOUNT
	   IF (MD2UNT .EQ. MD2_UNTCD(UNTCD)) THEN
	      CALL FLWRTF(' Unit code       : %N  (%S)',
     &	      MD2_UNTCD(UNTCD),MD2_UNT(UNTCD)(1:SIGCHS(MD2_UNT(UNTCD))))
	      GOTO 60
	   ENDIF
50	CONTINUE
C
C Unknown unit code
C
	CALL FLWRTF
	CALL FLWRTF(' %N is an illegal unit code',UNTCD)
	CALL FLWRTF
C
60	RETURN
	END
