C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1987-02-16 15:38:52.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL*4 FUNCTION WRTCMD(USRSTR,USRLEN)
C
***	MODULE	WRTCMD
***	IDENT	16FE87
C
C	Copyright Laser-Scan Laboratories Ltd., Cambridge, England
C
CMOD	Get system information synchronously		RWR  16-Feb-1987
C	Author						TJH  23-Jan-1986
C
C Function gets process information which it uses to write out a header
C line to the listing file specified by /OUTPUT. It then writes out the 
C command line to listing file, chopping it up into tidy <80 character 
C records as necessary.
C
	IMPLICIT NONE
C
C Arguments:
	CHARACTER*(*)	USRSTR	! the command line to be printed out
	INTEGER		USRLEN	! length of
C
C Functions:
	INTEGER SYS$GETJPIW	! Get Job/Process Information
C
C Parameters:
	INTEGER   ITMLEN	! size of item list
	PARAMETER (ITMLEN=25)
	INCLUDE '($SSDEF)'
	INCLUDE '($JPIDEF)'
C
C Workspace:
	BYTE	      CH	! one byte of cmd. line
	CHARACTER*23  TIME	! as it suggests
	CHARACTER*128 IMAGNAME	! name of image being executed
	INTEGER	      IMAGELEN	! no. of chars
	CHARACTER*15  PRCNAM	! name of process
	INTEGER       PRCLEN	! no. of chars
	CHARACTER*7   TERMINAL	! terminal name
	INTEGER       TERMLEN	! no. of chars
	CHARACTER*15  USERNAME	! name of user
	INTEGER       USERLEN	! no. of chars
	INTEGER	      III,JJJ	! temporary variables
	INTEGER       IOSB	! status at completion of Sys service
	INTEGER*2     IOSBW(2)	! bottom word is error code
C
	EQUIVALENCE  (IOSB,IOSBW)
C
	INTEGER*4     ITMLST(ITMLEN)
	INTEGER*2     ITMLST2(2*ITMLEN)
C
	EQUIVALENCE  (ITMLST,ITMLST2)
C
	INTEGER		I,ISTART,IEND	! temp. vars.
C
C ......................................................................
C
C Assume the best
	WRTCMD=SS$_NORMAL
C
C Set up the item list ( see SYSTEM SERVICES Reference Manual)
	ITMLST2(1)=128
	ITMLST2(2)=JPI$_IMAGNAME
	ITMLST (3/2+1)=%LOC(IMAGNAME)
	ITMLST (5/2+1)=%LOC(IMAGELEN)
C
	ITMLST2(7)=7
	ITMLST2(8)=JPI$_TERMINAL
	ITMLST(9/2+1)=%LOC(TERMINAL)
	ITMLST(11/2+1)=%LOC(TERMLEN)
C
	ITMLST2(13)=15
	ITMLST2(14)=JPI$_PRCNAM
	ITMLST (15/2+1)=%LOC(PRCNAM)
	ITMLST (17/2+1)=%LOC(PRCLEN)
C
	ITMLST2(19)=15
	ITMLST2(20)=JPI$_USERNAME
	ITMLST (21/2+1)=%LOC(USERNAME)
	ITMLST (23/2+1)=%LOC(USERLEN)
C
	ITMLST (25/2+1) =0		! to terminate it
C
C Queue the request
	WRTCMD=SYS$GETJPIW(,		! efn
     &                  ,		! pid
     &                  ,		! prcnam
     &                  ITMLST,		! itmlst
     &                  IOSB,		! iosb
     &                  ,		! astadr
     &                  ,)		! astprm
C
	IF (WRTCMD.NE.SS$_NORMAL) GOTO 60! branch if failed to queue
C
C Did the request complete OK ? - branch if it failed
	IF (IOSBW(1).NE.SS$_NORMAL) GOTO 50
C
C Tidy things up
	USERLEN=INDEX(USERNAME,' ')-1
	IF (USERLEN.LE.0) USERLEN=12
	IF (TERMLEN.LE.0) THEN
	   TERMLEN=7
	   TERMINAL='UNKNOWN'
	ENDIF
C
C Extract the image name
	IMAGNAME=IMAGNAME(INDEX(IMAGNAME,'][') + 1:)
	III=MAX(INDEX(IMAGNAME,']'),INDEX(IMAGNAME,'>'),
     &		INDEX(IMAGNAME,':')) + 1
	JJJ=III + INDEX(IMAGNAME(III:),'.') - 2
	IF (JJJ.LT.III) JJJ=IMAGELEN
C
C Get the time
	CALL SYS$ASCTIM(,TIME,,)
C
C and write out all the info
	CALL FLWRTF(
     &	'%S invoked by %S using terminal %S at %S'
     &	,IMAGNAME(III:JJJ),USERNAME(:USERLEN),TERMINAL(:TERMLEN),TIME)
C
	CALL FLWRTF(' ')
	CALL FLWRTF('Command line:')
C
C Uppercase the command line
C
	DO 10 I=1,USRLEN
	   CH=ICHAR(USRSTR(I:I))
	   IF (CH.GT.96.AND.CH.LT.123) USRSTR(I:I)=CHAR(CH-32)
10	CONTINUE
 
C
C Now output the command line. Look for suitable breaks if more than
C 80 characters long.
C
	IEND=0
	ISTART=1
20	DO 30 I=MIN(USRLEN,IEND+80)+1,ISTART,-1
	   IF (USRSTR(I:I).EQ.' '
     &	   .OR.USRSTR(I:I).EQ.'/'
     &	   .OR.USRSTR(I:I).EQ.','
     &	   .OR.I.EQ.USRLEN) GOTO 40
30	CONTINUE
C
C And output each chunck
40	IEND=I
	CALL FLWRTF('%S',USRSTR(ISTART:IEND))
	ISTART=IEND+1
C
C and possibly loop back for the rest of the command line
	IF (ISTART.LT.USRLEN) GOTO 20
	CALL FLWRTF(' ')
	RETURN
C
C Only here with bad condition value if GETJPI failed to queue, or
C went wrong
50	WRTCMD = IOSBW(1)
60	RETURN
	END
