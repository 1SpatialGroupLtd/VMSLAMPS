C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1986-11-13 14:45:42.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL*4 FUNCTION CHKQUAL()
C
***	MODULE CHKQUAL
***	IDENT 13NO86
C
C	Copyright Laser Scan Laboratories Ltd., Cambridge, England.
C
CMOD	Now returns IFIX__NOQUALIFIERS (warning) if no fixing
C	qualifiers selected				TJH 13-Nov-1986
C
C	Author  : A.T. Timms
C	Created : 20 August 1986
C
C	Function to check that the qualifiers found by GETCMD are
C	valid.
C
	IMPLICIT NONE
C
C Common blocks
	INCLUDE 'LSL$CMNIFIXAREA:IFIXAREA.CMN'
	INCLUDE 'LSL$CMNIFIXAREA:IFIXMSG.PAR'
	INCLUDE '($SSDEF)'
C
C Workspace 
	INTEGER		I		! loop variable
C
C.......................................................................
C Assume success there isn't much checking to do !
	CHKQUAL = SS$_NORMAL
C
C...................................................................
C See if the user has specified /CLOSE, /DELETE, /NEAR or /REVERSE.
C If not the user is merely copying the input file to the output file.
C Isn't that exciting !!!!
	IF (HAD_CLOSE.OR.HAD_DEL.OR.HAD_NEAR.OR.HAD_REV) GOTO 5
	CHKQUAL = IFIX__NOQUALIFIERS
	CALL LSL_PUTMSG(CHKQUAL)
C
C...................................................................
C Check that any specified feature codes are between 0 and 32767
5	IF (HAD_FC) THEN
	  DO 10 I = 1,FC_NUM
	    IF (FCODE(I).LT.0.OR.FCODE(I).GT.32767) THEN ! Oh dear
	      CHKQUAL = IFIX__INVALFC
	      CALL LSL_PUTMSG(CHKQUAL,FCODE(I))		! Tell user
	      GOTO 999					! and exit
	    ENDIF
10 	  CONTINUE
	ENDIF
C
C...................................................................
C Check that any specified layers are between 0 and 32767
	IF (HAD_LAY) THEN
	  DO 20 I = 1,LAY_NUM
	    IF (LAYNO(I).LT.0.OR.LAYNO(I).GT.32767) THEN ! Oh dear
	      CHKQUAL = IFIX__INVALLAY
	      CALL LSL_PUTMSG(CHKQUAL,LAYNO(I))		! Tell user
	      GOTO 999					! and exit
	    ENDIF
20 	  CONTINUE
	ENDIF
C
C...................................................................
C Return setting GETFIL appropriately if we have no errors.
999	IF (CHKQUAL) CHKQUAL = SS$_NORMAL	   ! normal completion
C
	RETURN
   	END
