C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1987-08-05 16:52:48.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	INTEGER*4 FUNCTION USER_EQUAL(REC1,REC2)
C
***	MODULE	USER_EQUAL
***	IDENT	05AU87
C
C 	Copyright Laser-Scan Laboratories Ltd.,England
C	Created   05-AU-87
C	Author	  D R Catlow
C
C	Routine to decide what to do with features that have
C	duplicate sort keys.
C	If /DUPLICATES is specified, both features are retained
C	in the file, in their existing order. In this case
C	function returns SS$_NORMAL
C	If /NODUPLICATES = FIRST then the first duplicated feature 
C	is always retained in the file.  Function return is 
C	equal to SOR$_DELETE2.
C	If /NODUPLICATES = LAST then the last duplicated feature
C	is retained in the file.  Function return is equal to
C	SOR$_DELETE1.
C
	IMPLICIT NONE
C
C	Arguments
	INTEGER*4	REC1	!address 1
	INTEGER*4	REC2	!address 2
C
C	Command Line Decode Values
	INCLUDE 'LSL$CMNISORT:FLAG.CMN'
C
C	Condition Codes
	EXTERNAL	SS$_NORMAL	!delete neither
	EXTERNAL	SOR$_DELETE1	!delete REC1
	EXTERNAL	SOR$_DELETE2	!delete REC2
C
C-------------------------------------------------------------------
C
	IF      (HAD_DUP)THEN
	  USER_EQUAL = %LOC(SS$_NORMAL)
	ELSE IF (HAD_NODUP.AND.HAD_FIRST)THEN
          USER_EQUAL = %LOC(SOR$_DELETE2)
	ELSE IF (HAD_NODUP.AND.HAD_LAST)THEN
          USER_EQUAL = %LOC(SOR$_DELETE1)
	ENDIF
C
	RETURN
C
	END
