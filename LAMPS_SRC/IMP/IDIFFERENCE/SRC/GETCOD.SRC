	SUBROUTINE GETCOD( FSN, FILE )
C
***	IDENT	10DE86
***	MODULE	GETCOD
C
C	Copyright LaserScan Laboratories Ltd., Cambridge, England
C
C to find the code (line/symbol/text) of a feature - used by DIFFNF
C for those features which occur only in one file
C
C Author TJ Ibbs, 15 June 1982
C
	IMPLICIT NONE
C
C
***	COMMON/HERE:FILES/		! for LUN
***	COMMON/HERE:CMPIFF/		! for NFPOSN
***	COMMON/HERE:FEATUR/		! for FSTATE, CODE
***	COMMON/LSL$CMNIFF:IFFHAN/	! IFF handling
C
C passed
C
	INTEGER*4	FSN		! feature we're looking at
	INTEGER		FILE		! which file we're using
C
C workspace
C
	INTEGER*2	IELEN		! length
	INTEGER*2	IECODE		! char code
C
C select the file, and position to the start of the feature we're
C inspecting for an FS
C
	CALL IFFSEL( LUN(FILE) )
	CALL IFFPKE( IECODE, IELEN, NFPOSN(FSN,FILE) )
	IF (IECODE.NE.'NF'.OR.IELEN.EQ.-1) THEN
	   CALL LOST( FILE, 'GETCOD' )
	ENDIF
C
C do the search for an FS entry
C
10	CALL IFFNXT(IECODE, IELEN)	! get next entry
	IF (IELEN.EQ.-1) THEN
	   CALL FLWRTF
	   CALL FLWRTF(
     &	'**GETCOD** Unexpected end of file while searching for FS')
	   CALL FLWRTF('           feature %^L%N in file %N',FSN,FILE)
	   CODE(1) = -1
	   CODE(2) = -1
	   GOTO 9999
	ENDIF
	IF (IECODE.NE.'FS') GOTO 10	! loop for FS entry
C
C so we have the FS (Feature Status) entry
C
	CALL EIHR( FSTATE(1,FILE), 4, 1 )
C
C so let's see what sort of thing we have:
C (in FSTATE(3), bit 14 set => symbol, bit 15 set => text (-ve),
C		 else it's a line of some sort)
C
C take the top 2 bits of the text position, etc field -
C note it in both CODE fields, just in case (bluff, since don't
C actually have two features to remember it about)
C
	CODE(1) = ISHFT(FSTATE(3,FILE),-14).AND.3
	CODE(2) = CODE(1)
C
9999	RETURN
	END
