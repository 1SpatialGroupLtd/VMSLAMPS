	LOGICAL FUNCTION COMPMD2( LOC_X,LOC_Y,SCALE,PROJN,SPHER,UNITS )
C
***	IDENT	11DE86
***	MODULE	COMPMD2
C
C Copyright (C) LaserScan Laboratories Ltd, Cambridge, England
C Author TJ Ibbs, 9 December 1986
C
C To compare two MD type 2 entries
C
C Returns TRUE if they are different
C
	IMPLICIT NONE
C
C arguments
C
	REAL*8		LOC_X(2),LOC_Y(2)	! local origin coords
	REAL*8		SCALE(2)		! scale of map
	INTEGER		PROJN(2)       		! projection
	INTEGER		SPHER(2)		! spheroid
	INTEGER		UNITS(2)		! units
C
***	COMMON/LSL$CMNIFF:MD2NAM/	! descriptor of type 2 MD
***	COMMON/HERE:PARAM/
***	COMMON/HERE:CMPIFF/
C
C functions
C
	INTEGER		SIGCHS		! 'remove' spaces from end
C
C workspace
C
	LOGICAL		ALREADY		! true if already done header
C
	INTEGER		FILE		! Which file
	INTEGER		I,J		! DO loop counter
	INTEGER		PRJIND		! projection index
	INTEGER		SPHIND		! spheroid index
	INTEGER		UNTIND		! units index
C
C
C *********************************************************************
C assume that they match
C
    	COMPMD2 = .FALSE.
C
C and compare all of the things - if any are different, then
C print the lot out
C
	IF ( ABS(LOC_X(1)-LOC_X(2)).GT.REAL_TOL .OR.
     &	     ABS(LOC_Y(1)-LOC_Y(2)).GT.REAL_TOL .OR.
     &	     ABS(SCALE(1)-SCALE(2)).GT.REAL_TOL .OR.
     &	     PROJN(1).NE.PROJN(2) .OR.
     &	     SPHER(1).NE.SPHER(2) .OR.
     &	     UNITS(1).NE.UNITS(2)
     &	   ) THEN
C
	   COMPMD2 = .TRUE.
	   IF (.NOT.FULL) GOTO 9000
C
	   CALL FLWRTF
	   CALL FLWRTF('Map descriptors - type 2 MDs do not match')
	   DO 1000 I = 1,2
C
	      CALL FLWRTF('File %N:',I)
     	      CALL FLWRTF('- Local origin: %^D%F12.4, %F12.4',
     &				LOC_X(I),LOC_Y(I))
	      CALL FLWRTF('- Map scale:    %^D%F12.4',SCALE(I))
C
C	     and determine which projection we have
C
	      DO 100 J = 1,MD2_NOPRJ
	         IF (PROJN(I).EQ.MD2_PRJCD(J)) THEN
	            PRJIND = J
   	            GOTO 150
	         ENDIF
100	      CONTINUE
	      CALL FLWRTF(
     &		'- Projection code %N not recognised',PROJN(I))
   	      GOTO 200
C
150	      CALL FLWRTF('- Projection:   %I4 (%S)',
     &				MD2_PRJCD(PRJIND),
     &				MD2_PRJ(PRJIND)(3:SIGCHS(MD2_PRJ(PRJIND))))
C
C	     and the spheroid
C
200	      DO 210 J = 1,MD2_NOSPH
	         IF (SPHER(I).EQ.MD2_SPHCD(J)) THEN
	            SPHIND = J
	            GOTO 250
	         ENDIF
210	      CONTINUE
 	      CALL FLWRTF(
     &		'- Spheroid code %N not recognised',SPHER(I))
   	      GOTO 300
C
250	      CALL FLWRTF('- Spheroid:     %I4 (%S)',
     &			  	MD2_SPHCD(SPHIND),
     &				MD2_SPH(SPHIND)(1:SIGCHS(MD2_SPH(SPHIND))))
C
C	     and the units
C
300	      DO 310 J = 1,MD2_NOUNT
	         IF (UNITS(I).EQ.MD2_UNTCD(J)) THEN
	            UNTIND = J
	            GOTO 350
	         ENDIF
310	      CONTINUE
	      CALL FLWRTF(
     &		'- Units code %N not recognised',UNITS(I))
	      GOTO 1000
C
350	      CALL FLWRTF('- Units:        %I4 (%S)',
     &				MD2_UNTCD(UNTIND),
     &				MD2_UNT(UNTIND)(1:SIGCHS(MD2_UNT(UNTIND))))
C
1000	   CONTINUE
	ENDIF
C
9000	RETURN
	END
