C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1987-12-17 18:54:44.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE COMPTS( FSN )
C
***	IDENT	17DE87
***	MODULE	COMPTS
C
C	Copyright LaserScan Laboratories Ltd., Cambridge, England
C
C Author TJ Ibbs, 10 December 1986
C
C compares the fields of the Text Status
C
C - taken from COMPFS
C
	IMPLICIT NONE
C
	INCLUDE	'LSL$CMNIFF:CB.STR'
C
***	COMMON/HERE:FEATUR/
***	COMMON/HERE:PARAM/		! for FULL
C
C passed
C
	INTEGER	  	FSN		! feature serial number
C
C functions
C
	INTEGER*2	EXPAND
C
C workspace
C
	INTEGER		I, TEMP		! workspace
	INTEGER		POSN(2)		! text position
	INTEGER		STYLE(2)	! type style
	INTEGER		CATEG(2)	! name category
C
	CHARACTER*80	OUTLIN		! output string
	INTEGER*2	OUTSIZ		! its length
C
C *********************************************************************
C
	IF (ARM.GT.0) CALL FLWRTF('.COMPARing TSs')
C
C so let's see what sort of things we have:
C (in FSTATE(3), bit 14 set => symbol, bit 15 set => text (-ve),
C		 else it's a line of some sort)
C
	CODE(1) = ISHFT(FSTATE(3,1),-14).AND.3	! top 2 bits
	CODE(2) = ISHFT(FSTATE(3,2),-14).AND.3	! of text posn, etc
C
C *********************************************************************
C if they are not even the same sort of thing...
C
	IF (CODE(1).NE.CODE(2)) THEN
C
C output: 'Feature %N: in file 1 is xxxx, in file 2 is xxxx'
C
	   IF (FULL) THEN
	      CALL FSNHDR(FSN)
	      CALL EXPAND(
     &	'TS entry: redundancy bits in word 3 - in file 1 = ')
	      CALL FSWHAT(CODE(1))
	      CALL APPEND(', in file 2 =')
	      CALL FSWHAT(CODE(2))
	      CALL FLWLIN		! write the line out
	      CALL FLWRTF('    should both be set as "text"')
	   ENDIF
	   FAIL_TS = .TRUE.
	   GOTO 9999
	ENDIF
C
C *********************************************************************
C word 1 - common to all things as Text Component Code
C
	IF (FSTATE(1,1).NE.FSTATE(1,2)) THEN
	   CALL FSNHDR(FSN)
	   CALL FLWRTF(
     &		'TS entry: Text Component Code - ' //
     &		'in file 1 = %^W%N, file 2 = %N',
     &		FSTATE(1,1), FSTATE(1,2))
	   FAIL_TS = .TRUE.
	ENDIF
C
C *********************************************************************
C word 2 - not used
C
	   IF (FSTATE(2,1).NE.FSTATE(2,2)) THEN
	      OUTSIZ=EXPAND('%WSTS entry: word 2' //
     &		' - in file 1 = %P0%X4 , file 2 = %X4 (hex)',
     &		OUTLIN, FSTATE(2,1), FSTATE(2,2))
	      CALL MESSAG(FSN,0,OUTLIN(:OUTSIZ))
	      FAIL_TS = .TRUE.
	   ENDIF
C                       
C *********************************************************************
C word 3 - text description OR process code
C
	IF (FSTATE(3,1).NE.FSTATE(3,2)) THEN
	   FAIL_TS = .TRUE.		! words don't match
	   DO 20 I = 1, 2
	      TEMP = FSTATE(3,I)
	      POSN(I) = TEMP.AND.'F'X	! text position code
	      STYLE(I)= ISHFT(TEMP,-4).AND.3	! type style
	      CATEG(I)= ISHFT(TEMP,-6).AND.'3F'X	! name category
20	   CONTINUE
C
C	 now we can output these fields as needed
C
	   IF (POSN(1).NE.POSN(2)) THEN
	      OUTSIZ=EXPAND('%WSTS entry: word 3, '//
     &		'text position code - in file 1 = %N, file 2 = %N',
     &					OUTLIN, POSN(1), POSN(2))
	      CALL MESSAG(FSN,0,OUTLIN(:OUTSIZ))
	   ENDIF
C
	   IF (STYLE(1).NE.STYLE(2)) THEN
	      OUTSIZ=EXPAND('%WSTS entry: word 3, '//
     &		'text type style    - in file 1 = %N, file 2 = %N',
     &					OUTLIN, STYLE(1), STYLE(2))
	      CALL MESSAG(FSN,0,OUTLIN(:OUTSIZ))
	   ENDIF
C
	   IF (CATEG(1).NE.CATEG(2)) THEN
	      OUTSIZ=EXPAND('%WSTS entry: word 3, '//
     &		'text name category - in file 1 = %N, file 2 = %N',
     &					OUTLIN, CATEG(1), CATEG(2))
	      CALL MESSAG(FSN,0,OUTLIN(:OUTSIZ))
	   ENDIF
C
	ENDIF
C
C *********************************************************************
C word 4 - private use, I assume unused, but check anyway
C
	IF (FSTATE(4,1).NE.FSTATE(4,2)) THEN
	   OUTSIZ=EXPAND('%WSTS entry: word 4' //
     &		' - in file 1 = %P0%X4, file 2 = %X4 (hex)',
     &				OUTLIN, FSTATE(4,1), FSTATE(4,2) )
	   CALL MESSAG(FSN,0,OUTLIN(:OUTSIZ))
	   FAIL_TS = .TRUE.
	ENDIF
C
C *********************************************************************
C
9999	RETURN
	END
