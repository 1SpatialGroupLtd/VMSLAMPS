	SUBROUTINE DIFFNF
C
***	IDENT	11DE87
***	MODULE	DIFFNF
C
C Copyright LaserScan Laboratories Ltd., Cambridge, England
C Author TJ Ibbs, 17 May 1982
C
C to perform the reading in of each feature and the comparison of it
C with its (possible) counterpart - the latter decided by their sharing
C of a common FSN
C
	IMPLICIT NONE
C
	INCLUDE	'LSL$CMNIFF:CB.STR'	! needed for FEATUR
C
***	COMMON/HERE:FILES/
***	COMMON/HERE:CMPIFF/
***	COMMON/HERE:FEATUR/
***	COMMON/HERE:PARAM/
***	COMMON/HERE:COUNT/
***	COMMON/LSL$CMNIFF:IFFHAN/
C
C and call
C
	LOGICAL		GETEF	! reads thro feature to EF
C
C workspace
C
	INTEGER*4	TOPNF	! highest FSN used
	INTEGER*4	BOTNF	! lowest FSN used
	INTEGER*4	I, J	! FSN, file in DO loops 
	INTEGER*2	IELEN
	INTEGER*2	IECODE
C
C work out the limits for working through the FSNs
C
	TOPNF = MAXNF(1)
	IF (MAXNF(2).GT.TOPNF) TOPNF = MAXNF(2)	! work out highest FSN
C
	BOTNF = MINNF(1)
	IF (MINNF(2).LT.BOTNF) BOTNF = MINNF(2)	! and lowest FSN
C
	DO 100 I = BOTNF, TOPNF
C
C	 check for the ignorable case - the FSN didn't occur
C	 in either file
C
	   IF (NFPOSN(I,1).EQ.0.AND.NFPOSN(I,2).EQ.0) GOTO 100
C
C	 and for the simple presence/absence case (present in one file,
C	 absent in the other)
C
	   NEWFSN = .TRUE.	! have not output anything for this
C				! feature (used by FSNHDR)
C
	   IF (NFPOSN(I,1).EQ.0.OR.NFPOSN(I,2).EQ.0) THEN
	      IF (NFPOSN(I,1).EQ.0) THEN
		 CALL GETCOD( I, 2 )
		 IF (FULL) THEN
		    CALL FSNHDR( I )
		    CALL FLWRTF('missing in file 1')
		 ENDIF
	         NFPOSN(I,2)=-NFPOSN(I,2)	! different under
C						! any criterion
		 NFEXTR = NFEXTR + 1
	      ELSE
		 CALL GETCOD( I, 1 )
		 IF (FULL) THEN
		    CALL FSNHDR( I )
	  	    CALL FLWRTF('missing in file 2')
		 ENDIF
	         NFPOSN(I,1)=-NFPOSN(I,1)	! different under
C						! any criterion
		 NFMISS = NFMISS + 1
	      ENDIF
C
	      GOTO 100			! try next FSN
	   ENDIF
C
C	 but here we have something which actually requires comparison,
C	 so count it for my information
C
	   NFCFED = NFCFED+1
C
C	 clear the HADxx things for this feature - we haven't read
C	 any of it in yet
C
	   CALL VIOCLR( HAD(1), HAD_SIZ )
C
C	 clear the AC pointers - haven't had any ACs yet
C
	   ACPTR(1) = 0			! not in file 1
	   ACPTR(2) = 0			! nor in file 2
C
C	 nor have we had any TS entries
C
	   TSCNT(1) = 0
	   TSCNT(2) = 0
C
C	 and now read it in (up to the EF) for each file in turn
C
	   DO 50 J = 1,2
	      CALL IFFSEL( LUN(J) )		! select the file
	      CALL IFFPKE( IECODE, IELEN, NFPOSN(I,J) )	! & the FSN
	      IF (IELEN.EQ.-1.OR.IECODE.NE.'NF') THEN
		 CALL LOST(J,'DIFFNF')
	      ELSE
C
C		we are at position - proceed
C
		 IF (.NOT.GETEF( J, I )) THEN	! read in the feature
C
C		expand on the message output by GETEF on failure
C
		    CALL FLWRTF(
     &			'comparison of feature %N abandoned', I )
C
		    GOTO 100		! try the next feature number
		 ENDIF
	      ENDIF
50	   CONTINUE
C
C	 and now we do the actual comparison of these features
C
	   CALL COMPAR( I )			! check for differences
C
C mark as unequal in NF array, if unequal in an appropriate way
C
	   IF ( (PLOT_GEOM.AND.GEOM_DIFF) .OR.
     &		(PLOT_ATTR.AND.ATTR_DIFF) .OR.
     &		(PLOT_OTHR.AND.OTHR_DIFF) )THEN
	      NFPOSN(I,1)=-NFPOSN(I,1)
	      NFPOSN(I,2)=-NFPOSN(I,2)
	   ENDIF
100	CONTINUE				! end of DO loop
C
	RETURN
	END
