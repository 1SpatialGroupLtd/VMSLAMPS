C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1991-03-19 18:42:54.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL FUNCTION SAMEAC( AC1, AC2 )
C
***	IDENT	19MR91
***	MODULE	SAMEAC
C
C	Copyright LaserScan Laboratories Ltd., Cambridge, England
C
C to compare Ancillary Codes - returns TRUE if the given AC matches in
C map 1 and in map 2
C
C Author TJ Ibbs, 18 May 1982
C
	IMPLICIT NONE
C
	INCLUDE	'LSL$CMNIFF:CB.STR'
C
***	COMMON/HERE:CMPIFF/
***	COMMON/HERE:FEATUR/
***	COMMON/HERE:PARAM/
***	COMMON/LSL$CMNFRT:FRTACD/
C
C passed
C
	INTEGER		AC1, AC2	! AC numbers to compare
C
C workspace
C
	INTEGER		I
	INTEGER		TEMP		! temporary INT*4 variable
	REAL		TOLER		! real tolerance
C
C
	SAMEAC = .FALSE.		! pessimist
C
C same type?
C
        IF (ACTYPE(AC1,1).NE.ACTYPE(AC2,2)) GOTO 9999
C
C work out what datatype we are dealing with
C
	TEMP = ACTYPE(AC1,1)		! arg to ACDFND is integer*4
	CALL ACDFND( TEMP, .FALSE. )
C
C same code?
C - if it is a real datatype, then first find the tolerance, and
C   then compare to that degree of accuracy
C - for all other datatypes, check for an exact match
C
	IF ( ACD_DATA_TYPE.EQ.ACD_DATATYPE_R ) THEN
C
	   IF ( ACD_INTERVAL.EQ.0.0 ) THEN
	      TOLER = DEFAULT_TOLERANCE
	   ELSE
	      TOLER = ACD_INTERVAL * TOLERANCE_FACTOR
	   ENDIF
	   IF ( ABS(ACREAL(AC1,1)-ACREAL(AC2,2)).GT.TOLER ) GOTO 9999
C
	ELSE
C
	   IF ( ACCODE(AC1,1).NE.ACCODE(AC2,2)) GOTO 9999
C
 	ENDIF
C
C text same length?
C
	IF (ACTXP(AC1,1).NE.ACTXP(AC2,2)) GOTO 9999
C
C Equal, both zero?
C
	IF (ACTXP(AC1,1).EQ.0) GOTO 1000
C
C or same characters?
C
	DO 200 I = 1,ACTXP(AC1,1)
	   IF (ACTEXT(I,AC1,1).NE.ACTEXT(I,AC2,2)) GOTO 9999
200	CONTINUE
C
1000	SAMEAC = .TRUE.		! must be if actually got here
C
9999	RETURN
	END
C
