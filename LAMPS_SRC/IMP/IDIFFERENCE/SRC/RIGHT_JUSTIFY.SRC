C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1987-12-08 11:19:32.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE RIGHT_JUSTIFY( IN, OUT )
C
***	IDENT	08DE87
***	MODULE	RIGHT_JUSTIFY
C
C Copyright LaserScan Laboratories Ltd., Cambridge, England
C Author TJ Ibbs, 8 December 1987
C
C This routine right justifys the IN string into OUT
C
C
	IMPLICIT NONE
C
C Arguments
C
	CHARACTER*(*)	IN		!  input string
	CHARACTER*(*)	OUT		! output string
C
C Workspace
C
	INTEGER		INLEN		! length of IN
	INTEGER		OUTLEN		! length of OUT
	INTEGER		OFFSET		! for IN in OUT
C
C **********************************************************************
C determine the lengths of the two strings
C
	INLEN  = LEN(IN)
	OUTLEN = LEN(OUT)
C
C set the output string to all spaces
C
	OUT = ' '
C
C calculate the required offset within the output string
C - for instance
C
C	IN:	input-string		 INLEN = 12
C	OUT:	........input-string	OUTLEN = 20	OFFSET = 8
C
	OFFSET = OUTLEN - INLEN
C
C if the result is negative, we are truncating the string,
C otherwise we are right justifying it
C
	IF ( OFFSET.GE.0 ) THEN
	   OUT(OFFSET+1:) = IN		! right justify
	ELSE
	   OUT = IN			! truncate
	ENDIF
C
C and that's all we have to do
C
	RETURN
	END
