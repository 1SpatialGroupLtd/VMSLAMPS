C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1986-12-10 03:09:56.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE NOSCAN(FILE)
C
***	IDENT	10DE86
***	MODULE	NOSCAN
C
C	Copyright LaserScan Laboratories Ltd., Cambridge, England
C
C read through the requested file, recording overlay numbers
C and NO positions - expects the current position in the files to have
C been set up by LKAHED
C finally set index to increasing overlay number order
C
	IMPLICIT NONE
C
***	PARAMETER/HERE:IDIFFMSG/
C
***	COMMON/LSL$CMNIFF:IFFHAN/
***	COMMON/HERE:FILES/
***	COMMON/HERE:OVRLAY/
C
	INTEGER		FILE 	! number of file to read from
 	INTEGER		CNT	! count of NOs found so far
	INTEGER		I	! for DO loops
	INTEGER		K,N	! for the sorting
	LOGICAL		SWAP	! and again
C
	INTEGER*2	IELEN
	INTEGER*2	IECODE
C
C *********************************************************************
C set up for this file
C
	CALL IFFSEL( LUN(FILE) )
C
C and go back to the start of the file, just in case
C
	CALL IFFRWD
C
C get ready to start at the beginning of the array
C
	CNT = 0
C
C now start reading things from this file
C
20	CALL IFFNXT( IECODE, IELEN )		! next feature
	IF (IELEN.EQ.-1)    GOTO 100		! end of file (^Z)
	IF (IECODE.EQ.'NO') GOTO 50		! check the overlay
	IF (IECODE.EQ.'EM') GOTO 100		! end of this map
	IF (IECODE.EQ.'EJ') GOTO 100		! end of this file
	GOTO 20					! something else
C
C *********************************************************************
C NO - new overlay
C
50	CNT = CNT+1				! count it
C
C if that is too many to fit in the array, then fall over
C
	IF (CNT.GT.MAXNOS) THEN
	   CALL LSL_PUTMSG( IDIFF__MAXNOS, MAXNOS, LPOSH, FILE )
	   CALL FATAL( .FALSE. )
	ENDIF
C
C otherwise, add it into the list
C
	NOPOSN(FILE,CNT) = LPOSH		! remember our position
	CALL EIHR(LAYNUM(FILE,CNT), 1, 1)	! read the layer number
C
 	GOTO 20				! get the next thing
C
C *********************************************************************
C EM, EJ or end of file
C
100	CNTNOS(FILE) = CNT		! final count of NO entries
C
	IF (CNTNOS(FILE).EQ.0) THEN
	   CALL FLWRTF('File %N contains no layers',FILE)
	   GOTO 900
	ENDIF
C
C *********************************************************************
C *  Replace this sort by something more sophisticated at some time.  *
C *********************************************************************
C
	N = CNTNOS(FILE)
C
C sort overlay number & position arrays into number order
C
	DO 200 CNT = 1,N
	   LAYIND(FILE,CNT) = CNT		! probably
200	CONTINUE
C
300	SWAP = .FALSE.
	DO 320 I = 2,N
	   IF ( LAYNUM(FILE,LAYIND(FILE,I))
     &		.LT.
     &		LAYNUM(FILE,LAYIND(FILE,I-1)))
     &	   THEN
	      SWAP = .TRUE.
	      K = LAYIND(FILE,I)
	      LAYIND(FILE,I)  =LAYIND(FILE,I-1)
	      LAYIND(FILE,I-1)=K
	   ENDIF
320	CONTINUE
	IF (SWAP) GOTO 300
C
C *********************************************************************
C
900	RETURN
	END              
