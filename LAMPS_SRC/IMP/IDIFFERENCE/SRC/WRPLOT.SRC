C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1987-12-18 12:12:54.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
  	SUBROUTINE WRPLOT(WHICH)
C
***	IDENT	18DE87
***	MODULE	WRPLOT
C
C	Copyright LaserScan Laboratories Ltd., Cambridge, England
C
C write file according to value of WHICH:
C WHICH = 1	write features in file 1 but not in file 2
C WHICH = 2	write features in file 2 but not in file 1
C WHICH = 3	write features in file 2 which exist but are
C		different in file 1
C
C Note that junction entries are not transferred
C
	IMPLICIT NONE
C
	INTEGER		WHICH
C
***	COMMON/LSL$CMNIFF:IFFHAN/
C
***	COMMON/HERE:CMPIFF/
***	COMMON/HERE:FILES/
***	COMMON/HERE:OVRLAY/
C
C functions
C
	LOGICAL		IFFMODIFY
C
C workspace
C
	LOGICAL		OK
	INTEGER		I		! for DO loop
	INTEGER		N		! ditto
	INTEGER		IN,OUT		! luns
C
	LOGICAL		REQD		! is feature needed?
C
C IFF stuff
C
	INTEGER*2	IELEN
	INTEGER*2	IECODE
	INTEGER*4	NOPOS
	INTEGER*2	LAY
	INTEGER*4	ISEQ
	INTEGER*4	IFSN
C
C *********************************************************************
C select an appropriate input file
C
	IN = MIN(WHICH,2)	! work it out...
C
C and the output file
C
	OUT = PLOT_LUN(WHICH)	! see /FILES/ for why this is...
C
C if input file doesn't contain given overlay, don't do anything!
C
	IF (.NOT.LAYER_PRESENT(IN)) GOTO 9999
C 
C open the plot IFF file
C                             
	OK = IFFMODIFY( OUT,
     &			PLOT_FILE(WHICH)(:PLOT_LEN(WHICH)),,
     &			PLOT_FID(1,WHICH) )
	IF (.NOT.OK) GOTO 9999
C
C select the input file
C
	CALL IFFSEL( IN )
C
C read all NO-EO sections of file for current overlay number LAYER -
C these should have been set up by GETNOV, so that arrays LO_LAY & HI_LAY
C give pointers into index array LAYIND, and from there to actual overlay
C numbers in LAYNUM (for checking, if required) and addresses in NOPOSN
C
	DO 100 N = LO_LAY(IN), HI_LAY(IN)
C
C	 position to NO entry in the input file
C
	   CALL IFFPKE( IECODE, IELEN, NOPOSN(IN,LAYIND(IN,N)))
	   IF (IELEN.EQ.-1.OR.IECODE.NE.'NO') CALL LOST(WHICH,'WRPLOT')
C
C	 write NO to plot file
C
	   CALL IFFSEL(OUT)
	   NOPOS = LPOSE
	   CALL IFFNO(LAYER,0,0)
	   CALL IFFSEL(IN)
C
C	 read through input file, copying to output where required
C
10	   CALL IFFNXT( IECODE, IELEN )		! next feature
	   IF (IELEN.EQ.-1) GOTO 900		! end of file
C
 	   IF (IECODE.EQ.'NF') THEN
C
C	 deal with a new feature
C
	      CALL EIHR(IFSN,1,1)
	      IFSN = IAND(IFSN,65535)	! convert to unsigned longword
	      IF (IFSN.EQ.0) THEN	! ignore feature 0 if present
		 CALL IFFNXC('EF',IELEN)
		 GOTO 10
	      ELSE
		 NFNUM=IFSN
	      ENDIF
C
C	 decide if its required
C
	      REQD = NFPOSN(NFNUM,IN).LT.0
	      IF (WHICH.EQ.3) THEN
		 REQD = REQD.AND.(NFPOSN(NFNUM,3-IN).LT.0)
	      ELSE
		 REQD = REQD.AND.(NFPOSN(NFNUM,3-IN).GE.0)
	      ENDIF
C
	      IF (REQD) THEN
		 CALL IFFSEL(OUT)
		 ISEQ=0
		 CALL IFFNF(NFNUM,ISEQ)
		 CALL IFFSEL(IN)
	      ELSE
		 CALL IFFNXC('EF',IELEN)
	      ENDIF
C
	   ELSEIF (IECODE.EQ.'EF') THEN
C
C	 output EF explicitly, for IFFLIB
C
	      CALL IFFSEL(OUT)
	      CALL IFFEF
	      CALL IFFSEL(IN)
C
	   ELSEIF (IECODE.EQ.'NO') THEN
C
C	 store NO position
C
	      CALL EIHR(LAY,1,1)
	      IF (LAY.NE.LAYER) THEN
		 CALL FLWSTR('***WRPLOT*** Layer mismatch')
	      ENDIF
	      CALL IFFSEL(OUT)
	      NOPOS = LPOSE
	      CALL IFFNO(LAY,0,0)
	      CALL IFFSEL(IN)
C
	   ELSEIF(IECODE.EQ.'EO')THEN
C
C	 set EO pointer in NO
C
	      CALL IFFSEL(OUT)
	      CALL IFFUNO(NOPOS)	! update the NO entry's EO pointer
	      CALL IFFEO		! write the EO itself
	      CALL IFFSEL(IN)
	      GOTO 100			! go on to next NO-EO section
C
	   ELSEIF ( IECODE.NE.'SH' .AND. IECODE.NE.'JB' .AND.
     &		    IECODE.NE.'JP' ) THEN
C
C	 entry in required feature or not in a feature at all,
C	 and is not a junction entry
C
	      CALL EIHCPY(OUT)
C
	   ENDIF
C
	   GOTO 10
C
100	CONTINUE
C
C
900	CALL IFFCLO(OUT)		! close the file
C
9999	RETURN
	END
           
