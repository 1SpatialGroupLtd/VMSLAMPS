C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1987-12-15 14:55:40.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL FUNCTION IFF_FORMAT_ROWHEAD( STRING, STRLEN, NCOLS, COLS )
C
***	IDENT	15DE87
***	MODULE	IFF_FORMAT_ROWHEAD
C
C Copyright LaserScan Laboratories Ltd., Cambridge, England
C Author TJ Ibbs, 8 December 1987
C
C This routine is called to put the headings for rows output with
C IFF_FORMAT_ROW into STRING in a nicely structured form.
C
C It outputs each column name, truncated to 14 characters, in a field
C of 15 characters, right justified.
C This means that STRLEN will always be a multiple of 15.
C
C It returns TRUE if the headers were all fitted into STRING, and FALSE
C if any fields did not fit - in this case, partial fields are NOT output.
C
	IMPLICIT NONE
C
	INCLUDE	'LSL$CMNIFF:CB.STR'
	INCLUDE	'LSL$CMNFRT:FRTACD.CMN'
C
C Arguments
C
	CHARACTER*(*)	STRING		!out - resultant string
	INTEGER*2	STRLEN		!out - length of data in STRING
	INTEGER		NCOLS		! in - number of columns
	INTEGER		COLS(NCOLS)	! in - column headers
C
C Functions
C
	LOGICAL		ACDFND
	INTEGER*2	EXPAND
C
C Workspace
C
	INTEGER		I		! for a DO loop
	LOGICAL		NOT_KNOWN	! true if type can't be found
	CHARACTER*15	HEADSTR		! representation of the column head
	INTEGER*2	HEADLEN		! and its length
	CHARACTER*15	RJUST		! right justified version
	INTEGER		MAXLEN		! length of STRING
C
C **********************************************************************
C note that we haven't added anything to STRING yet
C
	STRLEN = 0
C
C set it to spaces throughout
C
	STRING = ' '
C
C and work out its length
C
	MAXLEN = LEN(STRING)
C
C we loop around for a heading for each column
C
	DO 2000 I = 1,NCOLS
C
C	 ensure that the /FRTACD/ common is set up
C	 - NB don't report any errors
C
	   NOT_KNOWN = ACDFND( COLS(I), .FALSE. )
C
C	 if it isn't known, then create a heading that includes the
C	 relevant column heading number
C	 otherwise, check that the heading is not too long
C
	   IF (NOT_KNOWN) THEN
	      HEADLEN = EXPAND('%WS% ?(%N)',HEADSTR,COLS(I))
	   ELSEIF ( ACD_NAME_LEN.GT.14 ) THEN
	      HEADSTR = ACD_NAME(1:14)
	      HEADLEN = 14
	   ELSE
	      HEADSTR = ACD_NAME(1:ACD_NAME_LEN)
	      HEADLEN = ACD_NAME_LEN
	   ENDIF
C
C	 and right justify the heading in the field
C
	   CALL RIGHT_JUSTIFY( HEADSTR(:HEADLEN), RJUST )
C
C	 and add it to the output string
C
	   IF ( STRLEN+15 .GT. MAXLEN ) THEN
	      IFF_FORMAT_ROWHEAD = .FALSE.	! failed
	      GOTO 9000				! no room - give up
	   ELSE
	      STRING(STRLEN+1:STRLEN+15) = RJUST
	      STRLEN = STRLEN +15
	   ENDIF
C
2000	CONTINUE
C
C and that's all we do
C
	IFF_FORMAT_ROWHEAD = .TRUE.		! success
C
9000	RETURN
	END
