C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1987-12-04 11:36:34.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE GET_RANGE( RANGE )
C
***	IDENT	04DE87
***	MODULE	GET_RANGE
C
C Copyright LaserScan Laboratories Ltd., Cambridge, England
C Author TJ Ibbs, 9 December 1986
C - abstracted from CMPIFF
C
C to deal with the range of the two input files
C
	IMPLICIT NONE
C
C argument
C
	REAL	RANGE(4,2)		! the ranges
C
C common files
C
***	COMMON/HERE:CMPIFF/		! for TOTAL_RANGE
***	COMMON/HERE:PARAM/		! command line qualifiers
***	COMMON/HERE:FILES/		! filenames, luns, etc
C
C workspace
C
	INTEGER		I		! just for DO loops
	INTEGER*2	IELEN		! length of data read
C
C *********************************************************************
C the range for our plot files must include that of both input files
C
	TOTAL_RANGE(1) = MIN(RANGE(1,1),RANGE(1,2))
	TOTAL_RANGE(2) = MAX(RANGE(2,1),RANGE(2,2))
	TOTAL_RANGE(3) = MIN(RANGE(3,1),RANGE(3,2))
	TOTAL_RANGE(4) = MAX(RANGE(4,1),RANGE(4,2))
C
C if the user has not given us an explicit value, then we will use a
C default tolerance of
C			  max coordinate range
C			  --------------------
C			  	10000
C
	IF (.NOT.HAD_DEFAULT_TOLERANCE) THEN
	   DEFAULT_TOLERANCE = 0.0001 *
     &				MAX( TOTAL_RANGE(2)-TOTAL_RANGE(1),
     &				     TOTAL_RANGE(4)-TOTAL_RANGE(3) )
	   HAD_DEFAULT_TOLERANCE = .TRUE.
	ENDIF
C
C and if we are not doing /SUMMARY, then we must output some information
C about what we are doing
C
	IF (FULL) THEN
	   CALL EXPAND('Comparing with lookahead %N,',TOLGAP)
	   CALL APPEND(' point tolerances: default %F7.5,',
     &			 DEFAULT_TOLERANCE)
	   CALL FLWAPP(' factor %F5.2',TOLERANCE_FACTOR)
	ENDIF
C
	RETURN
	END
