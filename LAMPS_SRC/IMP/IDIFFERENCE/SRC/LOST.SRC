C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1986-12-11 09:30:16.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE LOST( FILE, STRING )
C
***	IDENT	11DE86
***	MODULE	LOST
C
C Copyright LaserScan Laboratories Ltd., Cambridge, England
C Author TJ Ibbs, 19 May 1982
C
C exits tidily - used after calling IFFPKE and not finding what
C		 we expect
C
	IMPLICIT NONE
C
***	PARAMETER/HERE:IDIFFMSG/	! for IDIFF__ABORT
C
***	COMMON/LSL$CMNIFF:IFFHAN/	! for our current posn
***	COMMON/HERE:FILES/		! for filenames
***	COMMON/HERE:PARAM/		! for TOLP
C
C passed
C
	INTEGER		FILE		! lun of our file
	CHARACTER*(*)	STRING		! name of the caller
C
C NOTE that (cunningly!) input files 1 and 2 have luns 1 and 2
C However, files 3 to 5 are our plot output files
C
C if TOLP is true, then FLW... writes to a file to be spooled
C
	CALL FLWRTF
C
	CALL EXPAND('**%S** lost position in ',STRING )
C
	IF ( FILE.EQ.1 .OR. FILE.EQ.2 ) THEN
 	   CALL APPEND('input IFF file %N',FILE )
 	ELSEIF ( FILE.GE.3 .AND. FILE.LE.5 ) THEN
	   CALL APPEND('output IFF file %S',
     &			PLOT_FILE(FILE)(:PLOT_LEN(FILE)) )
	ELSE
	   CALL APPEND('IFF file on lun %N',FILE)
	ENDIF
C
	CALL FLWAPP(' at address %P0%X8',LPOSH)
C
	CALL FLWRTF('    abandoning comparison')
C
C and exit 'neatly' but fatally
C
	CALL FATAL(.TRUE.)		! probably a bug
C
	RETURN				! ha - I don't believe it !
	END
