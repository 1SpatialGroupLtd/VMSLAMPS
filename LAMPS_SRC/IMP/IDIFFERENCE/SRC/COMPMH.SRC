	LOGICAL FUNCTION COMPMH
C
***	IDENT	12DE86
***	MODULE	COMPMH
C
C Copyright LaserScan Laboratories Ltd., Cambridge, England
C Author TJ Ibbs, 17 May 1982
C
C to compare map headers
C (remember the first long word is a descriptor of the array,
C so we ignore it)
C
C returns TRUE if they differ
C
	IMPLICIT NONE
C
***	COMMON/LSL$CMNIFF:MHDMB/	! OS style map header
***	COMMON/HERE:FILES/
***	COMMON/HERE:PARAM/	! for FULL
C
C workspace
C
C
C Local variables:
C
	INTEGER*2	IELEN
	INTEGER		I			! our DO loop variable
	LOGICAL		HAD_MH(2)		! true if have
	INTEGER*4	MH((MHLEN+1)/2,2)	! two copies of the array
	LOGICAL		ALREADY			! already output header?
	BYTE		CUSTOMER(4,2)		! for customer/size word
	INTEGER*4	CUSTLONG(2)
	EQUIVALENCE	(CUSTOMER,CUSTLONG)
	INTEGER*2	TEMP(2)
	BYTE		BTEMP(2,2)
C
C
C assume that they match
C
	COMPMH  = .FALSE.
	ALREADY = .FALSE.
C
C first, read in the MH entries
C
	DO 100 I = 1, 2
 	   CALL IFFSEL(LUN(I))		! select an input file
	   CALL IFFRWD			! go back to its start
	   CALL IFFNXC('MH',IELEN)	! find the CP
	   IF (IELEN.EQ.-1) THEN
	      HAD_MH(I) = .FALSE.	! no such entry
	      IF (FULL) THEN
		 CALL PREHDR(' ',ALREADY)
		 CALL FLWRTF('MH (Map Header)' //
     &			     ' entry missing in file %N',I)
	      ENDIF
	      GOTO 100
	   ELSE
	      HAD_MH(I) = .TRUE.	! found the MH
	   ENDIF
	   CALL EIHRI(MH(1,I),MIN(MHLEN,IELEN),1)	! read the entry
100	CONTINUE
C
C if they don't both have the entry, we're finished
C
	IF ( .NOT.HAD_MH(1) .AND. .NOT.HAD_MH(2) ) GOTO 9000
	IF ( .NOT.HAD_MH(1) .OR.  .NOT.HAD_MH(2) ) THEN
	   COMPMH = .TRUE.
	   GOTO 9000
	ENDIF
C
C see if the entries are different
C
C 1) check if the customer ID and size are the same
C
	CUSTLONG(1) = MH(1,1)
	CUSTLONG(2) = MH(1,2)
	IF ( CUSTOMER(2,1).NE.CUSTOMER(2,2) ) THEN
	   IF (FULL) THEN
	      BTEMP(1,1) = CUSTOMER(2,1)	! transfer so that we can
	      BTEMP(1,2) = CUSTOMER(2,2)	! output these unsigned
	      CALL PREHDR('MH (Map Header) entry',ALREADY)
	      CALL EXPAND('Customer number: ')
	      CALL FLWAPP('file 1 = %^W%N, file 2 = %^W%N',
     &			   TEMP(1),TEMP(2))
	   ENDIF
	   COMPMH = .TRUE.
	ENDIF
	IF ( CUSTOMER(1,1).NE.CUSTOMER(1,2) ) THEN
	   IF (FULL) THEN
	      BTEMP(1,1) = CUSTOMER(1,1)
	      BTEMP(1,2) = CUSTOMER(1,2)
	      CALL PREHDR('MH (Map Header) entry',ALREADY)
	      CALL EXPAND('Size field:      ')
	      CALL FLWAPP('file 1 = %^B%N, file 2 = %^B%N',
     &			   TEMP(1),TEMP(2))
	   ENDIF
	   COMPMH = .TRUE.
	ENDIF
C
C 2) check the first few pieces of data - if we are OS then these
C    have particular meaning
C
	DO 1400 I = 2,5
	   IF (MH(I,1).NE.MH(I,2)) THEN
	      IF (OS.AND.FULL) THEN
		 CALL PREHDR('MH (Map Header) entry',ALREADY)
		 IF (I.EQ.2) CALL EXPAND('job number:       ')
		 IF (I.EQ.3) CALL EXPAND('mapref eastings:  ')
		 IF (I.EQ.4) CALL EXPAND('mapref northings: ')
		 IF (I.EQ.5) CALL EXPAND('source scale:     ')
		 CALL FLWAPP('file 1 = %^L%N, file 2 = %^L%N',
     &					  MH(I,1),MH(I,2))
	      ELSEIF (FULL) THEN
		 CALL PREHDR('MH (Map Header) entry',ALREADY)
		 CALL FLWRTF(
     &		'longword %N in file 1 = %P0%X8, file 2 = %X8  (hex)',
     &		 I, MH(I,1), MH(I,2) )
	      ENDIF
	      COMPMH = .TRUE.
	   ENDIF
1400	CONTINUE
C
C 3) check the rest
C
	DO 1500 I = 6,MHI4SZ
	   IF (MH(I,1).NE.MH(I,2)) THEN
	      IF (FULL) THEN
		 CALL PREHDR('MH (Map Header) entry',ALREADY)
		 CALL FLWRTF(
     &		'longword %N in file 1 = %P0%X8, file 2 = %X8  (hex)',
     &		 I, MH(I,1), MH(I,2) )
	      ENDIF
	      COMPMH = .TRUE.
	   ENDIF
1500	CONTINUE
C
9000	RETURN
	END
