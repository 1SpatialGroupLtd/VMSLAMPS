	LOGICAL FUNCTION SAME( ROW1, ROW2 )
C
***	IDENT	09DE94
***	MODULE	SAME
C
C Copyright Laser-Scan Ltd., Cambridge, England
C Author TJ Ibbs, 19 May 1982
C
CMOD1446 Do not compare coordinates containing IFF_ABSENT as a real
C	 number (==0.0), it breaks the AXP.	JB 09-Dec-1994
C
C compares the two rows, returns TRUE if they're the same
C - note that floating point (real) values are checked to a tolerance
C
	IMPLICIT NONE
C
	INCLUDE	'LSL$CMNIFF:CB.STR'	! for IFF_ABSENT
C
***	COMMON/LSL$CMNFRT:FRTACD/
***	COMMON/HERE:FEATUR/
***	COMMON/HERE:PARAM/
***	COMMON/HERE:CBCMN/
C
C arguments
	RECORD	/IFF_CBITEM/	ROW1(IFF_MAXCBCOL)
	RECORD	/IFF_CBITEM/	ROW2(IFF_MAXCBCOL)
C
C workspace
	INTEGER		I		! loop counter
	INTEGER		NMATCH		! count of matched columns
	LOGICAL		LMATCH		! local match flag
C
	REAL		REAL_EQUIV(2)	! for IFF_ABSENT comparison
	INTEGER		INT_EQUIV(2)
	EQUIVALENCE	(REAL_EQUIV,INT_EQUIV)
C
C **********************************************************************
C
	NMATCH = 0
C
	DO 100 I = 1,NCOLS		! check each column
C
	   IF (DATATYPE(I).EQ.ACD_DATATYPE_R) THEN
	      REAL_EQUIV(1) = ROW1(I).R
	      REAL_EQUIV(2) = ROW2(I).R
C
C If IFF_ABSENT, do not compare as a real, but separately as INT_EQUIV
C
	      IF (INT_EQUIV(1) .EQ. IFF_ABSENT .OR.
     &		  INT_EQUIV(2) .EQ. IFF_ABSENT) THEN
C
		 IF (INT_EQUIV(1) .NE. INT_EQUIV(2) ) THEN
		    LMATCH = .FALSE.
C
		 ELSE
		    LMATCH = .TRUE.
		    NMATCH = NMATCH+1
		 ENDIF
C
		 GOTO 99
	      ENDIF
C
C Normal real comparison:
C
	      IF (ABS(ROW1(I).R - ROW2(I).R) .GT. TOLERANCE(I)) THEN
		 LMATCH = .FALSE.
C
	      ELSE
		 LMATCH = .TRUE.
		 NMATCH = NMATCH+1
	      ENDIF
C
	   ELSE
	      IF (ROW1(I).I .NE. ROW2(I).I) THEN
		 LMATCH = .FALSE.
C
	      ELSE
		 LMATCH = .TRUE.
		 NMATCH = NMATCH+1
	      ENDIF
	   ENDIF
C
99	   CONTINUE
C
	   IF (.NOT.LMATCH) THEN		! if they didn't match
	      IF (COLUMNS(I).EQ.IFF_C_X .OR.
     &		  COLUMNS(I).EQ.IFF_C_Y .OR.
     &		  COLUMNS(I).EQ.IFF_C_Z) THEN
		 FAIL_CB_XYZ = .TRUE.		! x,y,z mismatch
C
	      ELSE
		 FAIL_CB_ATT = .TRUE.		! some other mismatch
	      ENDIF
	   ENDIF
C
100	CONTINUE
C
C and the two rows are the same if they both matched in all columns
C
	SAME = NMATCH.EQ.NCOLS
C
C if we had a row that matched, then remember that there was (at least
C one) row that matched
C
	IF (SAME) HAD_SAME = .TRUE.
C
C and now check if they were both 'visible'
C - note that a visibility mismatch counts as a geometrical difference
C
	IF (ISINVS(1).NE.ISINVS(2)) THEN
	   VISMAT      = .FALSE.
	   FAIL_CB_XYZ = .TRUE.
c
	ELSE
	   VISMAT = .TRUE.
	ENDIF
C
	RETURN
	END
C
