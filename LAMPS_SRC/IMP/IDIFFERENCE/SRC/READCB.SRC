	SUBROUTINE READCB( FILE, RESET )
C
***	IDENT	06JA87
***	MODULE	READCB
C
C Copyright (C) LaserScan Laboratories Ltd, Cambridge, England
C
C Author TJ Ibbs, 9 December 1986
C
C To read a CB into /CBCMN/ from the current file
C
	IMPLICIT NONE
C
C arguments
C
	INTEGER		FILE		! which IFF file it is
	LOGICAL		RESET		! true if called by RESET2
C					! - means don't do all the checks
C common
C
	INCLUDE	'LSL$CMNIFF:CB.STR'
C
***	COMMON/LSL$CMNIFF:IFFHAN/	! for LPOSH
***	COMMON/HERE:CBCMN/
C
C workspace
C
	INTEGER		IELEN		! length of entry
	INTEGER		I		! for a DO loop
C
C *********************************************************************
C so read how many rows (points) there are in this CB
C
	CALL EIHRCB_HEAD( CBHEADER(FILE) )
C
	NROWS(FILE) = CBHEADER(FILE).NROW
C
C check that there aren't too many points - but if RESET, then
C don't complain, as we'll already have been here before
C
	IF ( NROWS(FILE).GT.IFF_MAXCBROW ) THEN
	   IF (.NOT.RESET) THEN
	      CALL EXPAND('**READCB** Too many rows (points) in CB')
	      CALL APPEND(' at %P0%X8 in file %N',    LPOSH, FILE )
	      CALL FLWAPP(' (found %^W%N, max is %N)',NROWS(FILE),
     &						      IFF_MAXCBROW )
	   ENDIF
	   NROWS(FILE) = IFF_MAXCBROW
	   CBHEADER(FILE).NROW = IFF_MAXCBROW
	ENDIF
C
C work out if the thing is invisible or not
C
	ISINVS(FILE) = (CBHEADER(FILE).FLAGS .AND. 1) .EQ. 0
C
C and read the actual rows from the file
C
	CALL EIHRCB_DATA( CBDATA(FILE) )
C
	RETURN
	END
