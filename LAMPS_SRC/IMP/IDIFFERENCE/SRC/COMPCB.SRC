	LOGICAL FUNCTION COMPCB(ROW1, ROW2, FSN)
C
***	IDENT	09DE94
***	MODULE	COMPCB
C
C Copyright Laser-Scan Ltd., Cambridge, England
C Author TJ Ibbs, 18 May 1982
C
C To compare the points in CB's (NOT an easy task)
C
C Returns TRUE if they are identical, FALSE if they are not
C
	IMPLICIT NONE
C
	INCLUDE	'LSL$CMNIFF:CB.STR'
C
***	COMMON/HERE:CBCMN/
***	COMMON/HERE:FEATUR/
***	COMMON/HERE:CMPIFF/
***	COMMON/HERE:PARAM/
C
C passed
	INTEGER			FSN
	RECORD	/IFF_CBITEM/	ROW1(IFF_MAXCBCOL)
	RECORD	/IFF_CBITEM/	ROW2(IFF_MAXCBCOL)
C
C call
	LOGICAL		SAME		! compare 2 points
	LOGICAL		GETARR		! GETNXT & set up ARRAY(,,2)
	LOGICAL		GETNXT		! get next point
	INTEGER		LEFT		! no of points left in feature
C
C workspace
	INTEGER		I, J		! DO loop variables
	INTEGER		LIM2		! top of DO loop
C
C *********************************************************************
C
	IF (SAME(ROW1,ROW2) ) THEN	! if the two rows are the same
	   IF (VISMAT) THEN		! - and visibility matches
	      COMPCB = .TRUE.		!   then they are identical
	      GOTO 9000			!   finished already
c
	   ELSE				! - visibility does not match
	      COMPCB = .FALSE.		!   they don't match
	      SAMEND = .TRUE.		!   but they end on the same XYZ
	   ENDIF
C
	ELSE				! the two rows aren't the same
	   COMPCB    = .FALSE.		! they don't match
	   SAMEND    = .FALSE.		! assume they don't end the same
	   UNMATCHED = .TRUE.		! assume they are --unmatched--
	ENDIF
C
C they were at least partially different - let's do the differencing
C - remember the offset of the previous point (which presumably matched)
C   within this CB
C
	OLDOFF = OFFSET(2)-1
C
C and remember the details of this ROW2
C
	OLDPTR(2) = PTR(2)		! remember its position in the feature
	CALL COPYROW(ROW2,ARRAY(1,1,2))	! copy it into ARRAY(,,2)
C
       	INC(2) 	    = 1			! where it's the first point
	INVARR(1,2) = ISINVS(2)		! is it invisible?
C
C and remember details of the ROW1 as well
C
	OLDPTR(1) = PTR(1)		! remember its position in the feature
	CALL COPYROW(ROW1,ARRAY(1,1,1))	! copy it into ARRAY(,,1)
C
	INC(1) 	    = 1			! it's the first point in ARRAY(,,1)
	INVARR(1,1) = ISINVS(1)		! is it invisible?
C
C if they only mismatched because of a visible/invisible difference,
C then that's all we need to do - we know they match on points
C
	IF (.NOT.UNMATCHED) GOTO 9000
C
C now, if TOLGAP is only 1, then we are only comparing this point with
C the corresponding one, so if they don't match we must return at once
C
	IF (TOLGAP.LE.1) GOTO 9000
C
C FIRST STAGE - check ROW1 against the next TOLGAP ROW2's,
C building up a series of values in ARRAY(,,2) as we go
C
100	CONTINUE
C
C so we get the next point from STBUF2 into POINT2. This routine has
C the side effect of putting the point into ARRAY(,,2) as well.
C
	IF (GETARR(ROW2)) THEN		! no rows left
	   GOTO 1000			! so go off to do it
C
	ELSE
	   IF (SAME(ROW1,ROW2)) THEN
C
C	 we finally have a point that matches the one from FILE 1,
C	 so we shall output the list of FILE 2 points that didn't
C	 match, and the point that did at the bottom
C
	      UNMATCHED = .FALSE.		! they DO match
	      SAMEND    = .TRUE.		! ends with equality
	      GOTO 9000
C
	   ELSE					! here, didn't match
	      IF (INC(2).EQ.TOLGAP) GOTO 1000	! so go to it
	   ENDIF
	ENDIF
C
	GOTO 100				! consider the next row2
C
C SECOND STAGE:
C now we have ARRAY(,,2) set up, and know our ROW1 doesn't match
C anything in it. We must now check the next TOLGAP-1 ROW1's against
C all the ARRAY(,,2) elements, looking for a match.
C
1000	IF (GETNXT(ROW1,1)) THEN
C
C	Failed to get a next ROW1:
C	  if there are TOLGAP or more points difference between
C	  the last ROW1 matched and the last point in the CB for
C	  file 2, then we have a non-match, otherwise it counts
C	  as matching.
C
	   IF (LEFT(2) + INC(2) - INC(1) .LE. TOLGAP) THEN
	      UNMATCHED = .FALSE.		! success
	   ENDIF
C
	   GOTO 9000				! return success/failure
C
	ELSE
	   INC(1) = INC(1)+1			! have the next ROW1
	   CALL COPYROW( ROW1, ARRAY(1,INC(1),1) )
C
	   INVARR(INC(1),1) = ISINVS(1)
	   LIM2 = INC(2)			! set the DO loop limit
C
	   DO 1500 I = 1, LIM2			! check against ARRAY(,,2)
	      ISINVS(2) = INVARR(I,2)		! get the invisibility state
C
	      IF (SAME(ROW1,ARRAY(1,I,2)) ) THEN
		 INC(2) = I
		 SAMEND = .TRUE.		! last point matches
		 UNMATCHED = .FALSE.		! so we can return with
		 GOTO 9000			! success at last
C
	      ELSE
		 IF (ARM.GT.2) CALL FLWRTF(
     &			'.COMPCB - doesn''t match ARRAY(,%N,2)',I)
	      ENDIF
1500	   CONTINUE
	ENDIF
C
C if we get here then they didn't match
C
	IF (INC(1).EQ.TOLGAP) GOTO 9000		! no match - failure
C
C or check the next thing
C
	GOTO 1000
C
9000	RETURN
	END
C
