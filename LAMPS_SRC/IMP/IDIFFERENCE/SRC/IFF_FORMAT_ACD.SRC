	SUBROUTINE IFF_FORMAT_ACD( STRING, STRLEN, TYPE, CODE )
C
***	IDENT	15DE87
***	MODULE	IFF_FORMAT_ACD
C
C Copyright LaserScan Laboratories Ltd., Cambridge, England
C Author TJ Ibbs, 8 December 1987
C
C This routine is called to put the description of an AC or a CB
C attribute into STRING in a nicely structured form. It does not
C attempt to cope with the text part of an AC.
C
C Because of terminology and other inconsistencies, we have to
C widen the TYPE from word to longword - if it is from an AC then
C it will be a word, whereas if from an ACD it is long. There are
C also problems with what things are called.
C
	IMPLICIT NONE
C
	INCLUDE	'LSL$CMNFRT:FRTACD.CMN'
C
C Arguments
C
	CHARACTER*(*)	STRING		!out - resultant string
	INTEGER*2	STRLEN		!out - length of data in STRING
	INTEGER*2	TYPE		! in - AC type or ACD code
	INTEGER		CODE		! in - AC code or ACD value
C
C Functions
C
	LOGICAL		ACDFND
	INTEGER*2	EXPAND
C
C Workspace
C
	INTEGER		WIDE_TYPE	! version of TYPE
	LOGICAL		NOT_KNOWN	! true if type can't be found
	CHARACTER*15	CODESTR		! representation of the AC code
	INTEGER*2	CODELEN		! and its length
	CHARACTER*15	RJUST		! right justified version
C
C **********************************************************************
C widen the type
C
	WIDE_TYPE = TYPE
C
C ensure that the /FRTACD/ common is set up
C - NB don't report any errors
C
	NOT_KNOWN = ACDFND( WIDE_TYPE, .FALSE. )
C
C we must work out the code, using the format in /FRTACD/
C - note that if the code is characters, we surround it with quotes
C
	IF ( ACD_DATA_TYPE.EQ.ACD_DATATYPE_C ) THEN
	   CODELEN = EXPAND('%WS% "'//ACD_FORMAT(:ACD_FORMAT_LEN)//'"',
     &			    CODESTR, CODE )
	ELSE
	   CODELEN = EXPAND('%WS% '//ACD_FORMAT(:ACD_FORMAT_LEN),
     &			    CODESTR, CODE )
	ENDIF
C
C and right justify it in the field
C
	CALL RIGHT_JUSTIFY( CODESTR(:CODELEN), RJUST )
C
C now assemble the string
C - note that we depend upon the ACD_NAME being padded with spaces
C   after the ACD_NAME_LEN'th character
C
	STRLEN = EXPAND('%WS% %S20 (%I5) %S15',
     &			STRING,
     &			ACD_NAME, WIDE_TYPE, RJUST )
C
C and that's all we do
C
	RETURN
	END
