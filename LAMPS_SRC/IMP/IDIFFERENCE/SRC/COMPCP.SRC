C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1986-12-11 14:45:56.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL FUNCTION COMPCP
C
***	IDENT	11DE86
***	MODULE	COMPCP
C
C Copyright LaserScan Laboratories Ltd., Cambridge, England
C Author : J Price Williams
C Date   : 19 september 1986
C Modified by TJ Ibbs for current IDIFFERENCE, 9 December 1986
C
C Reads and compares the CP entries in the input files. If they are
C different then it will output them
C
C Returns TRUE if they are different
C
	IMPLICIT NONE
C
***	PARAMETER/HERE:IDIFFMSG/
C
***	COMMON/HERE:CMPIFF/
***	COMMON/HERE:FILES/
***	COMMON/HERE:PARAM/
C
C Local variables:
C
	INTEGER*2	IELEN
	INTEGER		I,J			! loop counter
	REAL		CP(4,4,2)		! control points array
	LOGICAL		HAD_CP(2)
	LOGICAL		ALREADY
C
	CHARACTER*2	CORNER(4)
	DATA		CORNER/'NW','SW','SE','NE'/
C
C
C assume that they match
C
	COMPCP = .FALSE.
C
	ALREADY = .FALSE.
C
C first, read in the CP entries
C
	DO 10 I = 1, 2
 	   CALL IFFSEL(LUN(I))		! select an input file
	   CALL IFFRWD			! go back to its start
	   CALL IFFNXC('CP',IELEN)	! find the CP
	   IF (IELEN.EQ.-1) THEN
	      HAD_CP(I) = .FALSE.	! no such entry
	      IF (FULL) THEN
		 CALL PREHDR(' ',ALREADY)
		 CALL FLWRTF('CP (Control Points)' //
     &			     ' entry missing in file %N',I)
	      ENDIF
	      GOTO 10
	   ELSE
	      HAD_CP(I) = .TRUE.	! found the CP
	   ENDIF
	   CALL EIHRR(CP(1,1,I),16,1)	! read the entry
10	CONTINUE
C
C if they don't both have the entry, we're finished
C
	IF ( .NOT.HAD_CP(1) .AND. .NOT.HAD_CP(2) ) GOTO 60
	IF ( .NOT.HAD_CP(1) .OR.  .NOT.HAD_CP(2) ) THEN
	   COMPCP = .TRUE.
	   GOTO 60
	ENDIF
C
C see if the entries are different
C
	DO 20 I = 1,4
	   IF  ( ABS(CP(I,1,1) - CP(I,1,2)).GT.REAL_TOL .OR.
     &	         ABS(CP(I,2,1) - CP(I,2,2)).GT.REAL_TOL .OR.
     &		 ABS(CP(I,3,1) - CP(I,3,2)).GT.REAL_TOL .OR.
     &	       	 ABS(CP(I,4,1) - CP(I,4,2)).GT.REAL_TOL
     &	       ) GOTO 30	! different
20	CONTINUE
	GOTO 60						! the same
C
C now print out the mismatched CPs
C
30	COMPCP = .TRUE.
	IF (FULL) THEN
	   CALL PREHDR(' ',ALREADY)
	   DO 50 J = 1, 2
	      IF ( HAD_CP(J) ) THEN
	         CALL FLWRTF('CP (Control Point) entry in file %N',J)
	         DO 40 I = 1,4
	            CALL FLWRTF('%S %F12.4 %F12.4 %F12.4 %F12.4',
     &		    CORNER(I),CP(1,I,J),CP(2,I,J),CP(3,I,J),CP(4,I,J))
40	         CONTINUE
	      ENDIF
50	   CONTINUE
	ENDIF
C
60	RETURN
	END
