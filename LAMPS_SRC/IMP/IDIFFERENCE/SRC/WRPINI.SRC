C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1987-12-18 11:12:52.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE WRPINI(FILE)
C
***	IDENT	18DE87
***	MODULE	WRPINI
C
C	Copyright LaserScan Laboratories Ltd., Cambridge, England
C
C Author Simon Hancock
C - modified by TJ Ibbs, 9 December 1986
C
C write the start of a difference file.
C - always use features from file 2.
C
	IMPLICIT NONE
C
	INTEGER		FILE
C
***	COMMON/HERE:FILES/
***	COMMON/HERE:PARAM/
***	COMMON/HERE:CMPIFF/
***	COMMON/HERE:OVRLAY/
***	COMMON/LSL$CMNIFF:IFFHAN/
C
C functions
C
	LOGICAL		IFFCREATE
C
C workspace
C
	INTEGER		ILUN		! current input lun
	LOGICAL		OK		! function return
	INTEGER*2	IELEN
	INTEGER*2	IECODE
C
C *********************************************************************
C make a new plot IFF file
C
	OK = IFFCREATE( PLOT_LUN(FILE),
     &	     		PLOT_FILE(FILE)(:PLOT_LEN(FILE)),,,
     &			LOG )
C
	IF (.NOT.OK) GOTO 9999
C
C and remember its FID for later use
C
	CALL IFFID( PLOT_FID(1,FILE) )
C
C select the appropriate input file
C
	ILUN = 2		! choose a lun
	CALL IFFSEL(ILUN)	! select it
	CALL IFFRWD		! rewind for safety
C
C now start reading things from this file
C - we only output things that occur before the first layer
C
10	CALL IFFNXT( IECODE, IELEN )		! next feature
	IF (IELEN.EQ.-1)GOTO 900		! end of file
C
	IF (IECODE.EQ.'RA') GOTO 100		! output explicitly
	IF (IECODE.EQ.'NO') GOTO 900		! ends this copying
C
C ignore any junction entries we might find
	IF (IECODE.EQ.'SH' .OR. IECODE.EQ.'JB' ) GOTO 10
C
	CALL EIHCPY(PLOT_LUN(FILE))		! copy anything else
	GOTO 10
C
C RA - range entry
C
100	CALL IFFSEL(PLOT_LUN(FILE))		! select the output file
	CALL IFFRA(TOTAL_RANGE)			! output maximum range
	CALL IFFSEL(ILUN)                       ! and reselect old file
	GOTO 10
C
900	CALL IFFCLO(PLOT_LUN(FILE))		! close the file
C
9999	RETURN
	END
