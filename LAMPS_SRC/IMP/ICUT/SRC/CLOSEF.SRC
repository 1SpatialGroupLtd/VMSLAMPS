C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1991-05-15 17:33:40.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	INTEGER*4 FUNCTION CLOSEF(DELETE)
C
***	MODULE	CLOSEF
***	IDENT	15MY91
C
C	Copyright Laser-Scan Laboratories Ltd.,Cambridge,England
C
C	adapted from IMP.ISELECT.CLOSEF		by SG  15-may-1991
C
C	This modules closes the open files
C	If DELETE is .TRUE. then
C	close and delete the IFF file.
C
	IMPLICIT NONE	
C
	INCLUDE 'LSL$CMNIFF:IFFHAN.CMN'
	INCLUDE 'LSL$CMNICUT:IFFOK.CMN'
	INCLUDE 'LSL$CMNICUT:FILES.CMN'
	INCLUDE 'LSL$CMNICUT:FLAG.CMN'
	INCLUDE 'LSL$CMNICUT:ARG.CMN'
	INCLUDE 'LSL$CMNICUT:ICUTMSG.PAR'
	INCLUDE 'LSL$CMNLSL:LSLLIBMSG.PAR'
	INCLUDE 'LSL$CMNLSL:STATUS.CMN'
C
	INTEGER*4 SS$_NORMAL
	EXTERNAL  SS$_NORMAL		! normal successful completion
C
C Argument:
	LOGICAL		DELETE		! close and delete output file?
C
C functions:
	INTEGER *4 	FLRCLO
C Workspace:
	INTEGER		IERR		! for error return
C
C ......................................................................
C
	CLOSEF=%LOC(SS$_NORMAL)		! assume normal completion
C
C Close IFF input file
	IF (IN_OPEN) THEN
	  CALL IFFCLO(INLUN)
          IF ((IERCD.NE.0).AND.(IERCD.NE.'LOST')) THEN	! error?
	    CLOSEF=ICUT__ERRCLINFL		! error closing file
	    CALL LSL_PUTMSG(CLOSEF,P1_FIL(:P1_LEN))!tell user
	    IF (OK.EQ.%LOC(SS$_NORMAL)) THEN
	      CALL IFFERM(.TRUE.)		! IFF internal error
	      CALL IFFERR(ERRCOD,OK)
	    ELSE
	      CALL LSL_ADDMSG(OK)		! system error
 	    ENDIF
	  ENDIF
	ENDIF

C Close pair-file
	IF (PAIR_OPEN) THEN
	  CLOSEF = FLRCLO(PAIRLUN,)
	  IF (CLOSEF.NE.LSL__NORMAL) THEN
	    CALL LSL_PUTMSG(ICUT__ERRCLINFL,PAIR_FIL(:PAIR_LEN))
	  ENDIF
	ENDIF
C
C Close IFF output file
	IF (OUT_OPEN) THEN
	  IF (DELETE) THEN
	     CLOSEF=ICUT__NOSELFND
	     CALL LSL_PUTMSG(CLOSEF)
	     CALL LSL_ADDMSG(ICUT__DELETE,P2_FIL(:P2_LEN))
             CALL IFFCDL(OUTLUN)
	  ELSE
	     IF (LSL_STATUS) LSL_STATUS=%LOC(SS$_NORMAL)
             CALL IFFCLO(OUTLUN,LSL_STATUS)
	  ENDIF
          IF ((IERCD.NE.0).AND.(IERCD.NE.'LOST')) THEN	! error?
	    CLOSEF=ICUT__ERRCLOUTFL		! error closing file
	    CALL LSL_PUTMSG(CLOSEF,P2_FIL(:P2_LEN))!tell user
	    IF (OK.EQ.%LOC(SS$_NORMAL)) THEN
	      CALL IFFERM(.TRUE.)		! IFF internal error
	      CALL IFFERR(ERRCOD,OK)
	    ELSE
	      CALL LSL_ADDMSG(OK)		! system error
	    ENDIF
	  ENDIF
	ENDIF
C
C ......................................................................
C
C Ensure correct function return
C
	IF (CLOSEF) CLOSEF=%LOC(SS$_NORMAL)	! normal completion?
	RETURN
	END
