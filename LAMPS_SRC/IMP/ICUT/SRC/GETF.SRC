C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1991-05-30 16:47:38.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
        INTEGER*4  FUNCTION GETF()
C
***	MODULE	GETF
***	IDENT	30MY91
C
C 	Copyright Laser-Scan Laboratories Ltd., Cambridge, England
C
C       This module obtains IFF files
C	Author Immanuel Freedman 29-JA-86
C
C	module now deals with all file opens
C
CMOD	code adapted and optimised for IMP.ICUT		SG 15-may-1991
C
CMOD	now if input file opened successfuly, revision set to 1
C	i.e. allsubsequent coordinates will be CBs	SG 30-May-1991
C
	IMPLICIT NONE
C
	INCLUDE 'LSL$CMNIFF:IFFHAN.CMN'
	INCLUDE 'LSL$CMNICUT:FILES.CMN'
	INCLUDE 'LSL$CMNICUT:FLAG.CMN'
	INCLUDE 'LSL$CMNICUT:ARG.CMN'
	INCLUDE 'LSL$CMNICUT:IFFOK.CMN'
	INCLUDE 'LSL$CMNICUT:ICUTMSG.PAR'
	INCLUDE 'LSL$CMNLSL:STATUS.CMN'
	INCLUDE 'LSL$CMNLSL:LSLLIBMSG.PAR'

C
	INTEGER*4 SS$_NORMAL
	EXTERNAL  SS$_NORMAL		! normal successful completion
C
C functions called
	LOGICAL		IFFOPEN	   	! open existing file read only
	LOGICAL		IFFCREATE  	! open new IFF file
	LOGICAL		FLROPN		! open ordinary file
C
C workspace
	LOGICAL		FILE_OK  	! to test for IFF opening
C
C ......................................................................
	IN_OPEN = .FALSE.
	OUT_OPEN = .FALSE.
	PAIR_OPEN = .FALSE.
C
C ......................................................................
C open input file. If success open output file, if sucess open pair-file
C
	IF (HAD_LOG) CALL WRITEF()
	IN_OPEN = IFFOPEN(INLUN,P1_FIL(1:P1_LEN),,HAD_LOG)
	IF (IN_OPEN)  THEN
	   CALL IFFIRV(1)			! set input revision level 
	   OUT_OPEN = IFFCREATE(OUTLUN,P2_FIL(1:P2_LEN),,,HAD_LOG)
	   IF (OUT_OPEN.AND.HAD_FCP) THEN
	     PAIR_OPEN= FLROPN(PAIRLUN,PAIR_FIL(1:PAIR_LEN),,)
	     IF (PAIR_OPEN.AND.HAD_LOG)
     &		 CALL WRITEF ('opened %S for reading pairs',PAIR_FIL(:PAIR_LEN))
	     IF (.NOT.PAIR_OPEN) 
     &		 CALL LSL_PUTMSG(ICUT__ERROPN,PAIR_FIL(:PAIR_LEN))
	   ENDIF
	ENDIF
C
C ......................................................................
C set return value
C
	FILE_OK = IN_OPEN.AND.OUT_OPEN		! success if IFF files opened
	IF (HAD_FCP) FILE_OK = FILE_OK.AND.PAIR_OPEN
	IF (FILE_OK) THEN 			! if all files opened ok
	  GETF=%LOC(SS$_NORMAL)			! normal completion
	ELSE
	  GETF=FILE_OK				! otherwise not
	ENDIF	   
	RETURN					! finish
	END
