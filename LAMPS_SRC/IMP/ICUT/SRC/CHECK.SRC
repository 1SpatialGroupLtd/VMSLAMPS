	INTEGER*4 FUNCTION CHECK()
C
***	MODULE	CHECK
***	IDENT	15MY91
C
C 	Copyright Laser-Scan Laboratories,Cambridge,England
C
C	Module to check qualifier arguments and range of numbers
C	On command line.
C	  Adapted from lsl$source_root::[imp.iselect]check.src
C
C	Author	S Gupta		14-may-1991
C
	IMPLICIT NONE
C
C
	INCLUDE 'LSL$CMNICUT:ARG.CMN'
	INCLUDE 'LSL$CMNICUT:FLAG.CMN'
	INCLUDE 'LSL$CMNICUT:ICUTMSG.PAR'
	INCLUDE 'LSL$CMNLSL:STATUS.CMN'
	INCLUDE '($SSDEF)'
C
C workspace
	INTEGER*4	LOOP		! loop index
	INTEGER*4	LOOP2		! loop index
	INTEGER*4	TMP
C
C ......................................................................
C
	CHECK = SS$_NORMAL			! normal completion
C
C ......................................................................
C check arguments for /FC
C 
 	IF (HAD_FC.OR.HAD_FCP) THEN
	  TMP=1
	  IF (HAD_FCP) TMP=2
          DO 20 LOOP=1,NUM_FC
	    DO 15 LOOP2=1,TMP
	      IF ((FC(LOOP,LOOP2).LT.0) .OR. (FC(LOOP,LOOP2).GT.32767)) THEN
	        CHECK = ICUT__INVALFC		! invalid FC
	        CALL LSL_PUTMSG(CHECK,AC(LOOP))
	        GOTO 60
	      ENDIF
15	    CONTINUE	  
20	  CONTINUE
	ENDIF
C
C ......................................................................
C check argument for /NEWFC
C
	IF (HAD_NEWFC) THEN
	    IF (( OUT_FC.LT.0 ).OR.( OUT_FC.GT.32767)) THEN
	      CHECK = ICUT__INVALFC		! invalid FC
	      CALL LSL_PUTMSG(CHECK,OUT_FC)
	      GOTO 60
	    ENDIF
	ENDIF
C
C ......................................................................
C check arguments for /LAYER
C
 	IF (HAD_LAYER) THEN
          DO 30 LOOP=1,NUM_LAY
	    IF (LAYER(LOOP).LT.0.OR.LAYER(LOOP).GT.32767) THEN
	      CHECK = ICUT__INVALLAY		! invalid LAYER
	      CALL LSL_PUTMSG(CHECK,LAYER(LOOP))
	      GOTO 60
	    ENDIF
30	  CONTINUE
	ENDIF
C
C ......................................................................
C
C check argument for /POINTS
	IF (HAD_POINTS) THEN
	  IF (MAX_POINTS.LT.1) THEN 
	    CHECK = ICUT__INVALPT
	    CALL LSL_PUTMSG(CHECK,MAX_POINTS)
	    GOTO 60
	  ENDIF
	ENDIF
C
C ......................................................................
C
C check arguments for /LENGTH
	IF (HAD_LENGTH) THEN
	  IF (MAX_LENGTH.LE.0.0) THEN
	    CHECK = ICUT__INVALLEN
	    CALL LSL_PUTMSG(CHECK,MAX_LENGTH)
	    GOTO 60
	  ENDIF
	ENDIF	
C
C ......................................................................
C
60	RETURN
	END
