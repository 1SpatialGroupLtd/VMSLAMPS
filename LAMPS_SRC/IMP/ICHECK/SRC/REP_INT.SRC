C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1997-12-03 16:28:22.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE REP_INT(CROSSINGS)
C
***	MODULE REP_INT
***	IDENT 03DE97
C
C	Copyright Laser Scan Laboratories Ltd., Cambridge, England.
C
C
CMOD 1584
C	Support for /PARALLEL added (SPR 3857)	       MJGW 03-Dec-1997
CMOD 2/477
C	CROSSINGS argument added and called once for
C	crossing and one for touching segments 		
C							TJH 17-Jun-1987
C	Author  : A.T. Timms 				22 January 1987
C
C	Subroutine to report any intersections or touching segments
C	found by ICHECK to wherever has been specified.
C
C	TOUCH errors are only found by SEGCHK if /TOUCH has been 
C	specified whereas CROSSing errors are found whatever but 
C	may not need to be reported.
C
C	TOUCH errors should only be reported if they are not within 
C	TOUCH*2 from other errors as touch errors can be voluminous
C	and we don't want to report the same error several times. This
C	could cause operator suicide !!
C
C.......................................................................
C
	IMPLICIT NONE
C
C Argument:
	LOGICAL		CROSSINGS		! report crossings?
C
C Common blocks
	INCLUDE 'LSL$CMNICHECK:ICHKCMD.CMN'	! ICHECK commands
	INCLUDE 'LSL$CMNICHECK:ICHKFT.CMN'	! ICHECK features
	INCLUDE 'LSL$CMNICHECK:ICHKINT.CMN'	! ICHECK intersections
C
C Workspace
	INTEGER		I			! loop counters
	LOGICAL		OK			! near another touch 
C						! error ?
	REAL		CHECK_TOL		! touch tol for cross
C
C Functions
	LOGICAL		CHECK_TCH		! near another error ?
C
C.......................................................................
C If we are checking for crossing segments we do not want to output
C several errors near each other. The TOUCH tolerance is zero so 
C calculate a relevant tolerance for nearness of errors.
C Relevant tolerance is 1/1000 th of RAnge
C
	IF (HAD_CROSS) CHECK_TOL = (MAX(RA(2)-RA(1),RA(4)-RA(3)))/1000
C
C.......................................................................
C Go through the errors
C
	DO 100 I = 1,NINTS
C
	  IF (CROSSINGS) THEN			! segments cross
	     OK = CHECK_TCH(I,CHECK_TOL)	! Check nearness
	     IF (OK) THEN			! we do report it
	        CROSS_ERR = CROSS_ERR + 1
	        CALL WRITE_ERR(RINTS(I,1),RINTS(I,2),1) 
	        IF (HAD_LITES) CALL LITES_ERR(RINTS(I,1),RINTS(I,2),1)
	        IF (HAD_MARK) CALL MARK_ERR(RINTS(I,1),RINTS(I,2),1)
	     END IF
	  ELSE
	    IF (INTS(I,3).EQ.0.OR.
     X	        INTS(I,3).EQ.2) THEN		! segments touch 
C						! but near another ?
	      OK = CHECK_TCH(I,TOUCH)	    	! Check nearness
	      IF (OK) THEN
	        TOUCH_ERR = TOUCH_ERR + 1
	        CALL WRITE_ERR(RINTS(I,1),RINTS(I,2),2)
	        IF (HAD_LITES) CALL LITES_ERR(RINTS(I,1),RINTS(I,2),2)
	        IF (HAD_MARK) CALL MARK_ERR(RINTS(I,1),RINTS(I,2),2)
	      ENDIF
	    ENDIF
C
	  END IF
C
100	CONTINUE
C
C...................................................................
C
	RETURN
   	END
