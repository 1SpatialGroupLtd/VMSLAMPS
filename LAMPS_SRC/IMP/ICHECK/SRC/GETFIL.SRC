C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1987-02-03 17:35:52.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL*4 FUNCTION GETFIL()
C
***	MODULE GETFIL
***	IDENT 03FE87
C
C	Copyright Laser Scan Laboratories Ltd., Cambridge, England.
C
C	Author  : A.T. Timms				13 January 1987
C
C 	File opening function for IMP utility ICHECK.
C
C...................................................................
C
C	Files to be opened are:
C
C	Input IFF file for read
C
C	FRT file for read		if /FRT specified
C	LITES2 command file for write	if /LITES2 specified
C	MARKER IFF file for write	if /MARKERS specified
C	OUTPUT listing file for write	if /OUTPUT specified
C
C	Function will return SS$NORMAL if all is well and a relevant
C	error code if not.
C...................................................................
C
	IMPLICIT NONE
C
C Common blocks
	INCLUDE 'LSL$CMNIFF:IFFHAN.CMN'
	INCLUDE 'LSL$CMNFRT:FRTCOM.CMN'
	INCLUDE 'LSL$CMNLSL:STATUS.CMN'
	INCLUDE 'LSL$CMNICHECK:ICHKFIL.CMN'
	INCLUDE 'LSL$CMNICHECK:ICHKCMD.CMN'
C
C Parameters
	INTEGER  SS$_NORMAL
	EXTERNAL SS$_NORMAL		! normal successful completion
	INCLUDE 'LSL$CMNICHECK:ICHECKMSG.PAR'
C
C Functions
	INTEGER*4	FLWOPN	   	! opens file for write
	INTEGER*4	WRTOHDR		! to write header to output file
	LOGICAL		IFFOPEN	   	! open existing file read only
	LOGICAL		IFFCREATE	! open new IFF file
	LOGICAL		FRTINI		! open and read FRT file
C
C Workspace:
	INTEGER*4	IERR		! for error return	
	LOGICAL		FAIL		! to test for FRT opening
C
C...................................................................
C we have not opened any files successfully yet so....
C
	INOPN_OK  = .FALSE.
	FRTOPN_OK = .FALSE.
	LITOPN_OK = .FALSE.
	MRKOPN_OK = .FALSE.
	OUTOPN_OK = .FALSE.
C
	GETFIL = %LOC(SS$_NORMAL)	! assume success
C
C...................................................................
C First open the input IFF file (read-only)
C
	GETFIL = IFFOPEN(INLUN,INFILE(1:FILEN),,HAD_LOG)
C
	IF (.NOT.GETFIL) GOTO 100		! Faliure 
	INOPN_OK = GETFIL			! Remember we are open
C...................................................................
C Now a MARKERS IFF file to contain box markers around erroneous 
C features if we have had /MARKERS
C
	IF (HAD_MARK) THEN
	  GETFIL = IFFCREATE(MRKLUN,MRKFILE(1:MRKLEN),,,HAD_LOG)
C
	  IF (.NOT.GETFIL) GOTO 100		! Faliure 
	  MRKOPN_OK = GETFIL			! Remember we are open
	ENDIF
C
C Select input file for IFFINQ in WRTOHDR
	CALL IFFSEL(INLUN)			! Select input file
C
C...................................................................
C Open listing file, if required and give it the required header.
C
	IF (HAD_OUT.OR.HAD_PRINT) THEN 
	   GETFIL = FLWOPN(OUTLUN,OUTFILE(:OUTLEN),IERR)
           IF (GETFIL) THEN			! did it open ok?
             IF (HAD_LOG.AND.HAD_OUT) THEN	! yes, tell user?
	       GETFIL = ICHECK__LSTOPNOUT		! yes
	       CALL LSL_PUTMSG(GETFIL,OUTFILE(:OUTLEN))
	     ENDIF
	     OUTOPN_OK = GETFIL			! Remember we are open
	   ELSE					! file open error
	     GETFIL = ICHECK__ERROPLST		! tell user
	     CALL LSL_PUTMSG(GETFIL,OUTFILE(:OUTLEN))
	     CALL LSL_ADDMSG(IERR)		! give any 2ndary error
	     GOTO 100				! error so exit
           ENDIF
C
C write the required header to output file
	   GETFIL = WRTOHDR()
	ENDIF
C
C...................................................................
C If we have had the /FRT qualifier then try to open the specified file
C
	IF (HAD_FRT) THEN
	  IF (FRTINI(FRTFILE(1:FRTLEN))) THEN
	    GETFIL = ICHECK__ERROPFRT		! and say so
	    CALL LSL_PUTMSG(GETFIL,FRTFILE(:FRTLEN))
	    GOTO 100
	  ELSE
	    FRTOPN_OK = .TRUE.			! Remember we are open
	    IF (HAD_LOG) THEN
	      GETFIL = ICHECK__FRTOPN		! and say so
	      CALL LSL_PUTMSG(GETFIL,FRTFILE(:FRTLEN))
	    ENDIF
	  ENDIF
	ENDIF
C
C...................................................................
C Open LITES2 command file if we have had /LITES2 qualifier.
C
	IF (HAD_LITES) THEN
	  GETFIL = FLWOPN(LITLUN,LITFILE(:LITLEN),IERR)
          IF (GETFIL) THEN			! did it open ok?
            IF (HAD_LOG) THEN			! yes, tell user?
	      GETFIL = ICHECK__LITOPNOUT		! yes
	      CALL LSL_PUTMSG(GETFIL,LITFILE(:LITLEN))
	    ENDIF
	    LITOPN_OK = GETFIL			! Remember we are open
	  ELSE					! file open error
	    GETFIL = ICHECK__ERROPLIT		! tell user
	    CALL LSL_PUTMSG(GETFIL,LITFILE(:LITLEN))
	    CALL LSL_ADDMSG(IERR)		! give any 2ndary error
	    GOTO 100				! error so exit
	  ENDIF
	ENDIF
C...................................................................
C Return setting GETFIL appropriately if we have no errors.
C
100	RETURN
   	END
