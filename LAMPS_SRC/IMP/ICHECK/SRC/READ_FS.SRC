	LOGICAL*4 FUNCTION READ_FS()
C
***	MODULE READ_FS
***	IDENT 23JA87
C
C	Copyright Laser Scan Laboratories Ltd., Cambridge, England.
C
C	Author  : A.T. Timms 				15 January 1987
C
C	Function to read FS entry of IFF file. If we have had the 
C	/FC qualifier then we may want to ignore this feature in which 
C	case find the next EF. If we are not ignoring the feature and
C	/FRT has been specified then decode the status and pc/text 
C	fields.
C.......................................................................
C
	IMPLICIT NONE
C
C Common blocks
	INCLUDE 'LSL$CMNICHECK:ICHKCMD.CMN'	! ICHECK commands
	INCLUDE 'LSL$CMNICHECK:ICHKFT.CMN'	! ICHECK features
	INCLUDE 'LSL$CMNICHECK:ICHECKMSG.PAR'	! ICHECK messages
C
	INTEGER  SS$_NORMAL
	EXTERNAL SS$_NORMAL		! normal successful completion
C
C Function
C
	INTEGER		LIB$EXTZV	! extract bit field
C
C Workspace 
C
	INTEGER		TEXTSYM		! text/symbol value
	INTEGER		I		! loop variable
	INTEGER*2	IELEN		! length of entry in hand
	INTEGER*2	ISTAT(4)	! word length FS entry 
C
C.......................................................................
C Assume success
C
	READ_FS = %LOC(SS$_NORMAL)
C
C.......................................................................
C Read the FS entry
C
	ISTAT(3) = 0
	ISTAT(4) = 0
C
	CALL EIHR(ISTAT,4,1)
C
C convert to longword
C
	DO 10 I = 1,4
	  FS(I) = ISTAT(I)
10	CONTINUE
C
	HAD_FS = .TRUE.
C
C If we have had /FC let's see if we are supposed to check this one.
C
	IF (HAD_FC) THEN			! yes /FC
	  DO 20 I=1,FC_NUM
	    IF (FS(1).EQ.FC(I)) GOTO 999	! yes check so skip rest
20	  CONTINUE
C
C If we have passed through the loop then this FC is not one of the 
C specified ones so jump to next EF.
C
	  CALL IFFNXC('EF',IELEN)
	  IF (IELEN.EQ.-1) THEN 	! Unexpected end of file
	    READ_FS = ICHECK__UNEXPEOF	! say so
	    CALL LSL_PUTMSG(READ_FS)
	  ENDIF
	  CALL RESET_FT			! reset flags
	  GOTO 999
	ENDIF
C
C.......................................................................
C Check for symbol and text bits in the third word of FS entry
C
	TEXTSYM = LIB$EXTZV(14, 2, ISTAT(3))
C
	IF (TEXTSYM.EQ.1) THEN
	  FS_SYMB = .TRUE.
	ELSEIF (TEXTSYM.EQ.2) THEN
	  FS_TEXT = .TRUE.
	ELSEIF (TEXTSYM.NE.0) THEN
	   CALL LSL_PUTMSG(ICHECK__INVFSENT,FSN,ISN)
	ENDIF
C
C...................................................................
C
999	RETURN
   	END
