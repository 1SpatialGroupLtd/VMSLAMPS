C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1988-12-07 13:45:44.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE READ_EJ
C
***	MODULE READ_EJ
***	IDENT 07DE88
C
C	Copyright Laser Scan Laboratories Ltd., Cambridge, England.
C
C	Author  : A.T. Timms 				16 January 1987
C
CMOD	Stopped writing lines to out file twice		07-Dec-1988
C
C	Subroutine to close everything down as we have reached the end 
C	of file.
C
C.......................................................................
C
	IMPLICIT NONE
C
C Common blocks
	INCLUDE 'LSL$CMNICHECK:ICHKCMD.CMN'	! ICHECK commands
	INCLUDE 'LSL$CMNICHECK:ICHKFT.CMN'	! ICHECK features
	INCLUDE 'LSL$CMNICHECK:ICHKFIL.CMN'	! ICHECK files
C
C Workspace
	INTEGER		NUM_ERR 		! Total no. of LITES
C						! and MARKER errors
C.......................................................................
C If we have had a marker file then put correct EO, EM, EJ on it.
C
	IF (HAD_MARK) THEN
	  CALL IFFSEL(MRKLUN)		! select Marker file
	  CALL IFFUNO(NOPOS) 		! update NO entry
	  CALL IFFEO			! output EO (End Overlay)
	  CALL IFFEM			! output EM (End Map)
	  CALL IFFEJ			! output EJ (End Job)
	  CALL IFFSEL(INLUN)
	ENDIF
C
C...................................................................
C Output error totals. First a blank line.
C
	CALL EXPAND
	CALL TTWLIN()				! write to screen
C
	IF (HAD_OUT.OR.HAD_PRINT) THEN	! and file if necessary
	  CALL FLWSEL(OUTLUN)
	  CALL FLWLIN()
	ENDIF
C
C Now neatline errors.
C
	IF (HAD_NEAT) THEN
	  CALL EXPAND('A total of %N feature%m',BORD_ERR)
C
	  IF (BORD_ERR.EQ.1) THEN		! A little manipulation 
	    CALL APPEND(' ends in border zone')	! to make the output 
	  ELSE					! correct.
	    CALL APPEND(' end in border zone')
	  ENDIF
C
	  CALL TTWLIN()				! write to screen
C
	  IF (HAD_OUT.OR.HAD_PRINT) THEN	! and file if necessary
	    CALL FLWSEL(OUTLUN)
	    CALL FLWLIN()
	  ENDIF
C
	  CALL EXPAND('A total of %N feature%m',NEAT_ERR)
C
	  IF (NEAT_ERR.EQ.1) THEN
	    CALL APPEND(' ends outside neatline')
	  ELSE
	    CALL APPEND(' end outside neatline')
	  ENDIF

C
	  CALL TTWLIN()				! write to screen
C
	  IF (HAD_OUT.OR.HAD_PRINT) THEN	! and file if necessary
	    CALL FLWSEL(OUTLUN)
	    CALL FLWLIN()
	  ENDIF
	ENDIF
C
C...................................................................
C Touching errors
C
	IF (HAD_TOUCH) THEN
	  CALL EXPAND
     &    ('A total of %N touching segment%m found',TOUCH_ERR)
C
	  CALL TTWLIN()				! write to screen
C
	  IF (HAD_OUT.OR.HAD_PRINT) THEN	! and file if necessary
	    CALL FLWSEL(OUTLUN)
	    CALL FLWLIN()
	  ENDIF
	ENDIF
C
C...................................................................
C Crossing errors
C
	IF (HAD_CROSS) THEN
	  CALL EXPAND
     &    ('A total of %N crossing segment%m found',CROSS_ERR)
C
	  CALL TTWLIN()				! write to screen
C
	  IF (HAD_OUT.OR.HAD_PRINT) THEN	! and file if necessary
	    CALL FLWSEL(OUTLUN)
	    CALL FLWLIN()
	  ENDIF
	ENDIF
C
C...................................................................
C FRT errors
C
	IF (HAD_FRT) THEN
	  CALL EXPAND
     &    ('A total of %N FRT error%m found',FRT_ERR)
C
	  CALL TTWLIN()				! write to screen
C
	  IF (HAD_OUT.OR.HAD_PRINT) THEN	! and file if necessary
	    CALL FLWSEL(OUTLUN)
	    CALL FLWLIN()
	  ENDIF
	ENDIF
C
C...................................................................
C Duplicate errors
C
	IF (HAD_DUPL) THEN
	  CALL EXPAND
     &    ('A total of %N duplicate point%m found',DUPL_ERR)
C
	  CALL TTWLIN()				! write to screen
C
	  IF (HAD_OUT.OR.HAD_PRINT) THEN	! and file if necessary
	    CALL FLWSEL(OUTLUN)
	    CALL FLWLIN()
	  ENDIF
	ENDIF
C
C...................................................................
C Do we want to keep the MARKER and or LITES2 command file ?
C
	NUM_ERR = BORD_ERR+NEAT_ERR+CROSS_ERR+TOUCH_ERR+DUPL_ERR
C
	IF (NUM_ERR.LT.1) KEEP = .FALSE.	! no relevant errors 
C						! so delete file
C...................................................................
C
	RETURN
   	END
