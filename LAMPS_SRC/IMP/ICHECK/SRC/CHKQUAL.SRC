C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1987-01-30 16:46:30.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL*4 FUNCTION CHKQUAL()
C
***	MODULE CHKQUAL
***	IDENT 30JA87
C
C	Copyright Laser Scan Laboratories Ltd., Cambridge, England.
C
C	Author  : A.T. Timms 				13 January 1987
C
C	Function to check that the qualifiers found by GETCMD are
C	valid.
C
C	Note neatline definition qualifiers cannot be checked until
C	IFF file is open and the RA and CP entries are read.
C
C.......................................................................
C
C	Valid returns are:
C
C	SS$NORMAL		normal successful completion
C
C	ICHECK__INVALBASE	invalid base specified
C	ICHECK__INVALFC		invalid feature code specified
C	ICHECK__INVALLAY	invalid layer specified
C	ICHECK__WSTGTEST	western neatline .gt. eastern
C	ICHECK__STHGTNTH	southern neatline .gt. north
C
C.......................................................................
C
	IMPLICIT NONE
C
C Common blocks
	INCLUDE 'LSL$CMNICHECK:ICHKCMD.CMN'
	INCLUDE 'LSL$CMNICHECK:ICHECKMSG.PAR'
C
	INTEGER  SS$_NORMAL
	EXTERNAL SS$_NORMAL		! normal successful completion
C
C Workspace 
	INTEGER		I		! loop variable
C
C.......................................................................
C Assume success there isn't much checking to do ! 
C Errors will unset CHKQUAL
C
	CHKQUAL = %LOC(SS$_NORMAL)	! normal completion
C
C...................................................................
C Check that any specified base feature code is between 0 and 32762
C (32767 - 5) 5 being the number of marker codes
C
	IF (HAD_BASE) THEN
	  IF (BASE_FC.LT.0.OR.BASE_FC.GT.32762) THEN ! Oh dear
	    CHKQUAL = ICHECK__INVBASE
	    CALL LSL_PUTMSG(CHKQUAL,BASE_FC)		! Tell user
	    GOTO 999					! and exit
	  ENDIF
	ENDIF
C
C...................................................................
C Check that any specified layers are between 0 and 32767
C
	IF (HAD_LAY) THEN
	  DO 20 I = 1,LAY_NUM
	    IF (LAYNO(I).LT.0.OR.LAYNO(I).GT.32767) THEN ! Oh dear
	      CHKQUAL = ICHECK__INVALLAY
	      CALL LSL_PUTMSG(CHKQUAL,LAYNO(I))		! Tell user
	      GOTO 999					! and exit
	    ENDIF
20 	  CONTINUE
	ENDIF
C
C...................................................................
C Check that any specified feature codes are between 0 and 32767
C
	IF (HAD_FC) THEN
	  DO 30 I = 1,FC_NUM
	    IF (FC(I).LT.0.OR.FC(I).GT.32767) THEN ! Oh dear
	      CHKQUAL = ICHECK__INVALFC
	      CALL LSL_PUTMSG(CHKQUAL,FC(I))		! Tell user
	      GOTO 999					! and exit
	    ENDIF
30 	  CONTINUE
	ENDIF
C
C...................................................................
C Check that the eastern neatline is not less than the western one 
C and similarly for the northern and southern neatlines
C
	IF (HAD_N.AND.HAD_S) THEN
	  IF (SOUTH.GT.NORTH) THEN
	    CHKQUAL = ICHECK__STHGTNTH
	    CALL LSL_PUTMSG(CHKQUAL)
	    GOTO 999
	  ENDIF
	ENDIF
C
	IF (HAD_E.AND.HAD_W) THEN
	  IF (WEST.GT.EAST) THEN
	    CHKQUAL = ICHECK__WSTGTEST
	    CALL LSL_PUTMSG(CHKQUAL)
	    GOTO 999
	  ENDIF
	ENDIF
C
C...................................................................
C
999	RETURN
   	END
