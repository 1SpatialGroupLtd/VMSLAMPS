C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1987-01-27 16:36:10.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE READ_RA
C
***	MODULE READ_RA
***	IDENT 27JA87
C
C	Copyright Laser Scan Laboratories Ltd., Cambridge, England.
C
C	Author  : A.T. Timms 				15 January 1987
C
C	Subroutine to read RAnge entry of IFF file and if required
C	calculate the default BORDER checking tolerance which is 2%
C	of the maximum range. Also calculates appropriate size for
C	MARKER boxes ( +/- 2.5% of the range in X and Y ).
C
C.......................................................................
C
	IMPLICIT NONE
C
C Common blocks
	INCLUDE 'LSL$CMNICHECK:ICHKCMD.CMN'	! ICHECK commands
	INCLUDE 'LSL$CMNICHECK:ICHKFT.CMN'	! ICHECK features
C
C Workspace 
	REAL	XX				! temporary variable
C
C.......................................................................
C Read the RAnge entry
C
	CALL EIHRR(RA,4,1)
C
C...................................................................
C If we have had /BORDER qualifier without a value then calculate
C 2% of the maximum range.
C
	IF (HAD_NEAT.AND..NOT.BORD_TOL) THEN
	  XX =  MAX(RA(2)-RA(1),RA(4)-RA(3)) 
	  BORDER = 2 * XX / 100
	ENDIF
C
C...................................................................
C Get an appropriate size for the marker boxes.
C 2.5% of the range in X and Y respectively around erroneous point
C
	IF (HAD_MARK) THEN
	  XX =  MAX(RA(2)-RA(1),RA(4)-RA(3)) 
	  SID = 1.0 * XX / 100
	ENDIF
C
C...................................................................
C
	RETURN
   	END
