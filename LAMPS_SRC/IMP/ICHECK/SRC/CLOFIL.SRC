C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1987-01-29 16:49:04.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	INTEGER*4 FUNCTION CLOFIL()
C
***	MODULE	CLOFIL
***	IDENT	29JA87
C
C	Copyright Laser-Scan Laboratories Ltd.,Cambridge,England
C
C	Author  : A.T. Timms				13 January 1987
C
C 	Function to close input IFF and any of the other files that 
C	may be open (LITES2 command file, MARKERS IFF file, OUTPUT 
C	listing file). 
C
C	NB. The FRT file does not have to be closed.
C
C	Function returns SS$_NORMAL for success and an appropriate
C	error otherwise.
C
	IMPLICIT NONE	
C
C Commons
	INCLUDE 'LSL$CMNIFF:IFFHAN.CMN'
	INCLUDE 'LSL$CMNICHECK:ICHKFIL.CMN'
	INCLUDE 'LSL$CMNICHECK:ICHKCMD.CMN'
	INCLUDE 'LSL$CMNICHECK:ICHKFT.CMN'
C
C Parameters
	INTEGER  SS$_NORMAL
	EXTERNAL SS$_NORMAL		! normal successful completion
C
	INCLUDE '($STSDEF)'
	INCLUDE 'LSL$CMNLSL:LSLLIBMSG.PAR'
	INCLUDE 'LSL$CMNICHECK:ICHECKMSG.PAR'
C
C Workspace:
	INTEGER		IERR		! for error return
C
C Functions:
	INTEGER*4	FLWCLO		! close file
	INTEGER*4	FLWDEL		! close and delete file
	INTEGER*4	FLWPRT		! spool file
	INTEGER*4	FLWSPL  	! spool and delete file
C
C......................................................................
C
	CLOFIL = %LOC(SS$_NORMAL)	! assume normal completion
C
C......................................................................
C Close input IFF file ..... if it is open of course !
C
	IF (INOPN_OK) THEN 
	  CALL IFFCLO(INLUN)
C
          IF (IERCD.NE.0) THEN			! error?
	    CLOFIL=ICHECK__ERRCLOINP		! error closing file
	    CALL LSL_PUTMSG(CLOFIL,INFILE(:FILEN)//';0') ! tell user
	  ENDIF
	ENDIF
C
C......................................................................
C Close MARKERS IFF file if it has been opened successfully, there
C has not been an error during program execution and there is something
C in it !!
C
	IF (MRKOPN_OK) THEN 			! if it is open
	   IF (.NOT.KEEP) THEN
	     CALL IFFCDL(MRKLUN) 		! delete MARKER file
	   ELSE
	      CALL IFFCLO(MRKLUN,KEEP) 		! close MARKER file
	   ENDIF
C
          IF (IERCD.NE.0) THEN			! error?
	    CLOFIL=ICHECK__ERRCLOMRK		! error closing file
	    CALL LSL_PUTMSG(CLOFIL,MRKFILE(:MRKLEN)) ! tell user
	  ENDIF
	ENDIF
C
C......................................................................
C
C If we have /PRINT and not /OUTPUT close the listing file and 
C print/delete it. (if it is open of course !)
C
        IF (HAD_PRINT.AND..NOT.HAD_OUT.AND.OUTOPN_OK) THEN
          CLOFIL=FLWSPL(OUTLUN,IERR)
	  IF (CLOFIL.NE.LSL__NORMAL) THEN	! error?
	    CLOFIL=ICHECK__LSTNSPLDEL		! list file not spooled
	    CALL LSL_PUTMSG(CLOFIL)		! tell user
C Give any secondary error message
	    IF (IERR.NE.0) CALL LSL_ADDMSG(IERR)
          ENDIF
	ENDIF
C
C......................................................................
C If we have had /OUTPUT and /PRINT close the listing file and print it.
C (If it is open of course !)
C
	IF (HAD_PRINT.AND.HAD_OUT.AND.OUTOPN_OK) THEN
	  CLOFIL=FLWPRT(OUTLUN,IERR)
	  IF (CLOFIL.NE.LSL__NORMAL) THEN	! error?
	    CLOFIL=ICHECK__LSTNSPL   		! list file not spooled
	    CALL LSL_PUTMSG(CLOFIL)		! tell user
C Give any secondary error message
	    IF (IERR.NE.0) CALL LSL_ADDMSG(IERR)
	  ENDIF
	ENDIF	
C......................................................................
C Close LITES2 command file if it is open
C
        IF (LITOPN_OK) THEN
	  CALL WRTLEND				! write a happy ending
	  IF (.NOT.KEEP) THEN
            CLOFIL=FLWDEL(LITLUN,IERR)		! close and delete file
	  ELSE	  
            CLOFIL=FLWCLO(LITLUN,IERR)
	  ENDIF
C
	  IF (CLOFIL.NE.LSL__NORMAL) THEN	! error?
	    CLOFIL=ICHECK__ERRCLOLIT		! LITES2 file closed
	    CALL LSL_PUTMSG(CLOFIL)		! tell user
C Give any secondary error message
	    IF (IERR.NE.0) CALL LSL_ADDMSG(IERR)
          ENDIF
	ENDIF

C......................................................................
C Return
	IF (CLOFIL) CLOFIL = %LOC(SS$_NORMAL)	! normal completion?
C
	RETURN
	END
