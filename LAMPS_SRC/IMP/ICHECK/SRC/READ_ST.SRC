C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1989-10-30 18:19:38.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL*4 FUNCTION READ_ST()
C
***	MODULE	READ_ST
***	IDENT	30OC89
C
C	Copyright Laser Scan Laboratories Ltd., Cambridge, England.
C
CMOD 820
C	Duplicate point check functionality now split
C	off into LOAD_STBUFF routine which is shared
C	by READ_ZS					JMC 30-Oct-1989
CMOD 4/477
C	Now checks for duplication between last/first
C	points in multiple STs within feature		TJH 17-Jun-1987
C
C	Author  : A.T. Timms 				16 January 1987
C
C	Function to read ST entry of IFF file and set relevant flags.
C
C	Duplicate points are removed as they cause QUADSCAN problems.
C	IF /DUPLICATE has been specified then report duplicates.
C
C.......................................................................
C
	IMPLICIT NONE
C
C Common blocks
	INCLUDE 'LSL$CMNICHECK:ICHKCMD.CMN'	! ICHECK commands
	INCLUDE 'LSL$CMNICHECK:ICHKFT.CMN'	! ICHECK features
	INCLUDE 'LSL$CMNICHECK:ICHECKMSG.PAR'	! ICHECK features
C
C Parameters
	INTEGER  SS$_NORMAL
	EXTERNAL SS$_NORMAL		! normal successful completion
C
C.......................................................................
C Assume success
C
	READ_ST = %LOC(SS$_NORMAL)
C
C.......................................................................
C Read the ST entry
C
	HAD_ST = .TRUE.
C
	CALL EIHRS(NPTS,IENDS)			! read number of coords
C
C.......................................................................
C check not too many coords in this feature
C
	IF (TOT_NPTS + NPTS.GT.MAXPTS) THEN
	  READ_ST = ICHECK__TOOMNPTS
	  CALL LSL_PUTMSG(READ_ST,FSN,ISN)
	  GOTO 20
	END IF
C
C.......................................................................
C read real coords into ST(2,1:NPTS)
C
	CALL EIHRR(ST,NPTS*2,1)
C
        CALL LOAD_STBUF
C
20	RETURN
   	END
