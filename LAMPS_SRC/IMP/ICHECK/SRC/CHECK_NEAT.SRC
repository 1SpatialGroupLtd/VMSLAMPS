	SUBROUTINE CHECK_NEAT
C
***	MODULE CHECK_NEAT
***	IDENT 30JA87
C
C	Copyright Laser Scan Laboratories Ltd., Cambridge, England.
C
C	Author  : A.T. Timms 				23 January 1987
C
C	Subroutine to check for features reaching a specified neatline
C	within a tolerance set either by the /BORDER command or by
C	default 2% of the RANGE (set in READ_RA).
C
C	Features are in error if the end points of the feature lie
C	within the border zone OR outside the neatline.
C
C.......................................................................
C
	IMPLICIT NONE
C
C Common blocks
	INCLUDE 'LSL$CMNICHECK:ICHKFT.CMN'	! ICHECK features
	INCLUDE 'LSL$CMNICHECK:ICHKCMD.CMN'	! ICHECK commands
C
C
	INTEGER		I			! Loop variable
	INTEGER		STEP			! loop variable	
C
C.......................................................................
C First the EASTern neatline
C
	IF (TOT_NPTS.GT.1) THEN
	  STEP = TOT_NPTS - 1 
	ELSE
	  STEP = 1
	ENDIF
C
	IF (HAD_E) THEN
	  DO 10 I = 1,TOT_NPTS,STEP
C
C Check for features within border zone.
	    IF (ST_CLOS) GOTO 5			! Ignore closed features
	    IF (STBUF(1,I).GT.(EAST-BORDER).AND.STBUF(1,I).LT.EAST) THEN
	      BORD_ERR = BORD_ERR + 1
	      CALL WRITE_ERR(STBUF(1,I),STBUF(2,I),4)
	      IF (HAD_MARK) CALL MARK_ERR(STBUF(1,I),STBUF(2,I),4)
	      IF (HAD_LITES) CALL LITES_ERR(STBUF(1,I),STBUF(2,I),4)
	      GOTO 100
	    ENDIF
C
C and outside neatline.
5	    IF (STBUF(1,I).GT.(EAST)) THEN
	      NEAT_ERR = NEAT_ERR + 1
	      CALL WRITE_ERR(STBUF(1,I),STBUF(2,I),5)
	      IF (HAD_MARK) CALL MARK_ERR(STBUF(1,I),STBUF(2,I),5)
	      IF (HAD_LITES) CALL LITES_ERR(STBUF(1,I),STBUF(2,I),5)
	      GOTO 100
	    ENDIF
C
10 	  CONTINUE	
	ENDIF
C
C.......................................................................
C Now the WESTern neatline
C
	IF (HAD_W) THEN
	  DO 20 I = 1,TOT_NPTS,STEP
C
C Check for features within border zone.
	    IF (ST_CLOS) GOTO 15		! Ignore closed features
	    IF (STBUF(1,I).GT.WEST.AND.STBUF(1,I).LT.(WEST+BORDER)) THEN
	      BORD_ERR = BORD_ERR + 1
	      CALL WRITE_ERR(STBUF(1,I),STBUF(2,I),4)
	      IF (HAD_MARK) CALL MARK_ERR(STBUF(1,I),STBUF(2,I),4)
	      IF (HAD_LITES) CALL LITES_ERR(STBUF(1,I),STBUF(2,I),4)
	      GOTO 100
	    ENDIF
C
C and outside neatline.
15	    IF (STBUF(1,I).LT.(WEST)) THEN
	      NEAT_ERR = NEAT_ERR + 1
	      CALL WRITE_ERR(STBUF(1,I),STBUF(2,I),5)
	      IF (HAD_MARK) CALL MARK_ERR(STBUF(1,I),STBUF(2,I),5)
	      IF (HAD_LITES) CALL LITES_ERR(STBUF(1,I),STBUF(2,I),5)
	      GOTO 100
	    ENDIF
C
20 	  CONTINUE	
	ENDIF
C
C.......................................................................
C Now the NORTHern neatline
C
	IF (HAD_N) THEN
	  DO 30 I = 1,TOT_NPTS,STEP
C
C Check for features within border zone.
	    IF (ST_CLOS) GOTO 25		! Ignore closed features
	    IF (STBUF(2,I).GT.(NORTH-BORDER).AND.STBUF(2,I).LT.NORTH) 
     &	    THEN
	      BORD_ERR = BORD_ERR + 1
	      CALL WRITE_ERR(STBUF(1,I),STBUF(2,I),4)
	      IF (HAD_MARK) CALL MARK_ERR(STBUF(1,I),STBUF(2,I),4)
	      IF (HAD_LITES) CALL LITES_ERR(STBUF(1,I),STBUF(2,I),4)
	      GOTO 100
	    ENDIF
C
C and outside neatline.
25	    IF (STBUF(2,I).GT.(NORTH)) THEN
	      NEAT_ERR = NEAT_ERR + 1
	      CALL WRITE_ERR(STBUF(1,I),STBUF(2,I),5)
	      IF (HAD_MARK) CALL MARK_ERR(STBUF(1,I),STBUF(2,I),5)
	      IF (HAD_LITES) CALL LITES_ERR(STBUF(1,I),STBUF(2,I),5)
	      GOTO 100
	    ENDIF
C
30 	  CONTINUE	
	ENDIF
C
C.......................................................................
C and finally the SOUTHern neatline
C
	IF (HAD_S) THEN
	  DO 40 I = 1,TOT_NPTS,STEP
C
C Check for features within border zone.
	    IF (ST_CLOS) GOTO 35		! Ignore closed features
	    IF (STBUF(2,I).LT.(SOUTH+BORDER).AND.STBUF(2,I).GT.SOUTH) 
     &	    THEN
	      BORD_ERR = BORD_ERR + 1
	      CALL WRITE_ERR(STBUF(1,I),STBUF(2,I),4) 
	      IF (HAD_MARK) CALL MARK_ERR(STBUF(1,I),STBUF(2,I),4)
	      IF (HAD_LITES) CALL LITES_ERR(STBUF(1,I),STBUF(2,I),4)
	      GOTO 100
	    ENDIF
C
C and outside neatline.
35	    IF (STBUF(2,I).LT.(SOUTH)) THEN
	      NEAT_ERR = NEAT_ERR + 1
	      CALL WRITE_ERR(STBUF(1,I),STBUF(2,I),5) 
	      IF (HAD_MARK) CALL MARK_ERR(STBUF(1,I),STBUF(2,I),5)
	      IF (HAD_LITES) CALL LITES_ERR(STBUF(1,I),STBUF(2,I),5)
	      GOTO 100
	    ENDIF
C
40 	  CONTINUE	
	ENDIF
C
C...................................................................
C
100	RETURN
   	END
