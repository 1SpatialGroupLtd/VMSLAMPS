C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1987-04-10 10:25:14.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE LITES_ERR(X,Y,ERROR)
C
***	MODULE LITES_ERR
***	IDENT 10AP87
C
C	Copyright Laser Scan Laboratories Ltd., Cambridge, England.
C
CMOD	Mod M2/454 Test for cursor in window added	TJH 10-Apr-1987
C	Author  : A.T. Timms 				    19-Jan-1987
C
C	Subroutine to write ICHECK errors to the LITES2 command file.
C
C	X and Y are the position of the error and error is one of the
C	following:
C
C	1 = Crossing segments
C	2 = Touching segments
C	3 = Conflicting graphical type	(not actually output now !)
C	4 = End in border zone
C	5 = Points outside neatline
C	6 = Duplicate point in string
C
C.......................................................................
C
	IMPLICIT NONE
C
C Common blocks
	INCLUDE 'LSL$CMNICHECK:ICHKFIL.CMN'	! ICHECK files
	INCLUDE 'LSL$CMNICHECK:ICHKFT.CMN'	! ICHECK features
C
C Workspace
	REAL		X,Y			! error position
	INTEGER		ERROR			! error type (see above)
C
C.......................................................................
C Select LITES file LUN
C
	CALL FLWSEL(LITLUN)
C
C.......................................................................
C Write relevant error message
C
	IF (ERROR.EQ.1) THEN
	  CALL EXPAND 
     &    ('%%MESSAGE Crossing segments in FSN %N (%N)',FSN,ISN)
	  CALL FLWLIN()
	  GOTO 10
	ENDIF
C
	IF (ERROR.EQ.2) THEN
	  CALL EXPAND 
     &    ('%%MESSAGE Touching segments in FSN %N (%N)',FSN,ISN)
	  CALL FLWLIN()
	  GOTO 10
	ENDIF
C
	IF (ERROR.EQ.3) THEN
	  CALL EXPAND 
     &   ('%%MESSAGE Conflicting graphical type in FSN %N (%N)',FSN,ISN)
	  CALL FLWLIN()
	  GOTO 10
	ENDIF
C
	IF (ERROR.EQ.4) THEN
	  CALL EXPAND 
     &    ('%%MESSAGE End in border zone in FSN %N (%N)',FSN,ISN)
	  CALL FLWLIN()
	  GOTO 10
	ENDIF
C
	IF (ERROR.EQ.5) THEN
	  CALL EXPAND 
     &    ('%%MESSAGE Point outside neatline in FSN %N (%N)',FSN,ISN)
	  CALL FLWLIN()
	  GOTO 10
	ENDIF
C
	IF (ERROR.EQ.6) THEN
	  CALL EXPAND 
     &    ('%%MESSAGE Duplicate point in FSN %N (%N)',FSN,ISN)
	  CALL FLWLIN()
	  GOTO 10
	ENDIF
C	      
C.......................................................................
C 
C	      
10	CALL EXPAND('%%POSITION %F %F',X,Y)
	CALL FLWLIN()
C
	CALL EXPAND('%%TEST $CURSINWIN')
	CALL FLWLIN()
C
	CALL EXPAND('%%ELSE %%ZOOM 1')
	CALL FLWLIN()

	CALL EXPAND('%%PING')
	CALL FLWLIN()
C
	CALL EXPAND('%%RESPOND')
	CALL FLWLIN()
C
	CALL EXPAND('%%ABANDON')
	CALL FLWLIN()
C
	CALL EXPAND('%%ABANDON')
	CALL FLWLIN()
C
C...................................................................
C
	RETURN
   	END
