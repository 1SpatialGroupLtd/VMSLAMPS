	SUBROUTINE WRITE_ERR(X,Y,ERROR)
C
***	MODULE WRITE_ERR
***	IDENT 07DE88
C
C	Copyright Laser Scan Laboratories Ltd., Cambridge, England.
C
C	Author  : A.T. Timms 				19 January 1987
C
CMOD	Stopped writing lines to out file twice		07-Dec-1988
C
C	Subroutine to write ICHECK errors to the relevant output: 
C	terminal or file.
C
C	ERROR is one of the following
C
C	1 = Crossing segments
C	2 = Touching segments
C	3 = Conflicting graphical type	
C	4 = End in border zone
C	5 = End outside neatline
C	6 = Duplicate point in string
C	7 = Fill area not closed
C	8 = No text entry for text graphical type
C       9 = Symbol bit not set in FS entry
C      10 = Text bit not set in FS entry
C      11 = Feature Code not found in FRT
C
C.......................................................................
C
	IMPLICIT NONE
C
C Common blocks
	INCLUDE 'LSL$CMNFRT:FRTCOM.CMN'		! FRT common
	INCLUDE 'LSL$CMNICHECK:ICHKCMD.CMN'	! ICHECK commands
	INCLUDE 'LSL$CMNICHECK:ICHKFIL.CMN'	! ICHECK files
	INCLUDE 'LSL$CMNICHECK:ICHKFT.CMN'	! ICHECK features
C
C Input parameters
	INTEGER			ERROR		! error number
	REAL			X,Y		! position of error
C
C.......................................................................
C Write out the error message to EXPBUF then write to appropriate file
C or device
C
	CALL EXPAND ('Feature FSN %N (%N) - ',FSN,ISN)
C
	IF (ERROR.EQ.1) THEN
	  CALL APPEND ('contains crossing segments at %F %F',X,Y)
	ELSE IF (ERROR.EQ.2) THEN
	  CALL APPEND ('contains touching segments near %F %F',X,Y)
	ELSE IF (ERROR.EQ.3) THEN
	  CALL APPEND 
     &    ('number of coordinates conflicts with GT of FC %^W%N',FS(1))
	ELSE IF (ERROR.EQ.4) THEN
	  CALL APPEND ('ends in border zone at %F %F',X,Y)
	ELSE IF (ERROR.EQ.5) THEN
	  CALL APPEND ('ends outside neatline at %F %F',X,Y)
	ELSE IF (ERROR.EQ.6) THEN
	  CALL APPEND ('contains duplicate points')
	ELSE IF (ERROR.EQ.7) THEN
	  CALL APPEND 
     &	  ('string not closed for fill area GT of FC %^W%N',FS(1))
	ELSE IF (ERROR.EQ.8) THEN
	  CALL APPEND 
     &    ('contains no text entry for text GT of FC %^W%N',FS(1))
	ELSE IF (ERROR.EQ.9) THEN
	  CALL APPEND ('symbol bit not set in FS entry')
	ELSE IF (ERROR.EQ.10) THEN
	  CALL APPEND ('text bit not set in FS entry')
	ELSE IF (ERROR.EQ.11) THEN
	  CALL APPEND ('feature code %^W%N not found in FRT',FS(1))
	ENDIF
C
	IF (HAD_LOG) CALL TTWLIN()		! tell the world ?
C
	IF (HAD_OUT.OR.HAD_PRINT) THEN
	  CALL FLWSEL(OUTLUN)
	  CALL FLWLIN()
	ENDIF
C
C...................................................................
C
	RETURN
   	END
