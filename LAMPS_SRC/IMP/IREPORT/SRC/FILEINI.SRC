	INTEGER FUNCTION FILEINI(OPEN)
C
***	MODULE  FILEINI
***	IDENT	10JN87
C	
C	Copyright Laser-scan laboratories Ltd, Cambridge, England.
C
CMOD	LITES2 command file now opened with LCM_OPEN	TJH  10-Jun-1987
CMOD	IFFINQ added					TJH  02-Dec-1986
CMOD	IFF file opened using new IFFOPEN function,
C	converted to fileio.				TJH  01-Dec-1986
C
C	Author	J M Price Williams	 from M.S. Reid
C	created 20 OCTOBER 1986
C
	IMPLICIT NONE
C
C Arguments:
	LOGICAL		OPEN		!if true open files/false close 
C
C Common blocks:
	INCLUDE 'IREPORTMSG.PAR'
	INCLUDE 'LSL$CMNIFF:IFFHAN.CMN'
	INCLUDE 'IREPORT.CMN'
	INCLUDE '($SSDEF)/NOLIST'
C
C Workspace:
	INTEGER*4	CREATED(2)	! dummy quadword for IFFINQ
	INTEGER*4 	IERR		! error return
	INTEGER*4	REVISED(2)	! dummy quadword for IFFINQ
	INTEGER*2	NREV		! dummy word for IFFINQ
	INTEGER*2	PLEN		! tmp file-spec length
	REAL		RANGE(4)	! iff range
C
C Function:
	LOGICAL	  	FLWSPL		! close and spool file
	LOGICAL	  	FLWCLO		! close file
	LOGICAL	  	FLWOPN		! open file
	LOGICAL	  	IFFOPEN		! open IFF file for readonly
	LOGICAL		LCM_OPEN	! open LCM file
C
C
C ......................................................................
C
	FILEINI=SS$_NORMAL	! assume success
C
	IF (OPEN) THEN
C
C Open is true so we wish to open files
C
	   FILEINI=IFFOPEN(5,INFIL(:INLEN),,LOG)
C
C Did the IFF file open OK?
	   IF (.NOT.FILEINI) GOTO 10
C
C Get the full input file-spec as actually opened
C
	   CALL IFFINQ(INFIL,PLEN,CREATED,REVISED,NREV)
	   INLEN=PLEN
C
C Open LITES2 Command file?
C
	   IF (LITES2) THEN
C
C Read the range from the IFF file 
	      CALL IFFSEL(5)
	      CALL IFFNXC('RA',IELEN)
	      IF (IELEN.LT.0) THEN
	         FILEINI=IREPORT__UNEXPEOF
	         CALL LSL_PUTMSG(FILEINI)
	      ELSE
	         CALL EIHRR(RANGE,4,1)
	         FILEINI=LCM_OPEN(7,LIFIL(:LILEN),RANGE,LOG)
	      ENDIF
	   ENDIF
C
	   IF (.NOT.FILEINI) GOTO 10
C
C Open output file?
	   IF (PRINTER.OR.OUTPUT) THEN
	      FILEINI=FLWOPN(4,OPFIL(:OPLEN),IERR)
	      IF (FILEINI) THEN
	         IF (LOG) THEN
	            CALL LSL_PUTMSG(IREPORT__OPOUT,OPFIL(:OPLEN))
	         ENDIF
	      ELSE
	         CALL LSL_PUTMSG(IREPORT__ERROPOUT,OPFIL(:OPLEN))
	         CALL LSL_ADDMSG(FILEINI)
	         CALL LSL_ADDMSG(IERR)
	      ENDIF
	   ELSE
C
C Simply open SYS$OUTPUT: on channel 4
C
	      FILEINI=FLWOPN(4,OPFIL(:OPLEN),IERR)
	      IF (FILEINI) THEN
	         IF (LOG) THEN
	            CALL LSL_PUTMSG(IREPORT__OPOUT,OPFIL(:OPLEN))
	         ENDIF
	      ELSE
	         CALL LSL_PUTMSG(IREPORT__ERROPOUT,OPFIL(:OPLEN))
	         CALL LSL_ADDMSG(FILEINI)
	         CALL LSL_ADDMSG(IERR)
	      ENDIF
	   ENDIF
C
C Our default output channel will be to the output file OPFIL. We
C only select the LITES2 file when needed and then reselect the main
C output file as soon as we have finished with LITES2 output. 
	   CALL FLWSEL(4)
C
C ......................................................................
C
	ELSE			! OPEN is false so close the files
C
C First the IFF input file
	   CALL IFFCLO(5)
	   IF (IERCD .NE. 0) THEN
	      CALL LSL_PUTMSG(IREPORT__ERRCLOIFF,INFIL(:INLEN))
	      IF (IERNM .EQ. SS$_NORMAL) THEN
	         CALL LSL_ADDMSG(IREPORT__IFFERR,IERCD)
	      ELSE
	         CALL LSL_ADDMSG(IERNM)		! system error
	      ENDIF
	   ENDIF
C
C Then depending upon whether we are to print and delete or just close
C close the output file
	   IF (PRINTER) THEN
	      FILEINI=FLWSPL(4,IERR)	      
	      IF (.NOT.FILEINI) THEN
	         CALL LSL_PUTMSG(IREPORT__ERRCLOOUT,OPFIL(:OPLEN))
	         CALL LSL_ADDMSG(FILEINI)
	         CALL LSL_ADDMSG(IERR)
	      ENDIF
	   ELSE
	      FILEINI=FLWCLO(4,IERR)	      
	      IF (.NOT.FILEINI) THEN
	         CALL LSL_PUTMSG(IREPORT__ERRCLOOUT,OPFIL(:OPLEN))
	         CALL LSL_ADDMSG(FILEINI)
	         CALL LSL_ADDMSG(IERR)
	      ENDIF
	   ENDIF
C
C Close LITES2 file
	   IF (LITES2) THEN
	      FILEINI=FLWCLO(7,IERR)	      
	      IF (.NOT.FILEINI) THEN
	         CALL LSL_PUTMSG(IREPORT__ERRCLOOUT,LIFIL(:LILEN))
	         CALL LSL_ADDMSG(FILEINI)
	         CALL LSL_ADDMSG(IERR)
	      ENDIF
	   ENDIF
	ENDIF
C
C ......................................................................
C
10	RETURN
	END
