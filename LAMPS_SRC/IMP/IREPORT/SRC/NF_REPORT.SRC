	LOGICAL FUNCTION NF_REPORT()
C
***	MODULE  NF_REPORT
***	IDENT	16MY88
C	
C	Copyright Laser-scan laboratories Ltd, Cambridge, England.
C
C	Author	J M Price Williams from M.S Reid
C	created 20 OCTOBER 1986
C
C Description
C	to deal with the FSN new feature entry in the iff file
C
CMOD	To deal properly with LITES2 command sequence generation
C	for feature with ST, ZS or CB entries. Using necessary
C	input revision level changes to convert CB to ST or ZS and
C	allowing for /REVISION_LEVEL qualifier.		JMB 18-Nov-1987 
CMOD	To allow CB entries.				JMB 17-Nov-1987
CMOD	Code for operation of /TS with /ABSENT added.
C	Re-labelled.					TJH 04-Nov-1986
CMOD	Output addresses as 8 digits, padded on left with
C	0s						TJI 03-Nov-1986
C
	IMPLICIT NONE
C
C Parameters:
	INTEGER  SS$_NORMAL
	EXTERNAL SS$_NORMAL
	INCLUDE 'HERE:IREPORTMSG.PAR'
C
C Common blocks:
	INCLUDE 'LSL$CMNLSL:EXPC.CMN'
	INCLUDE 'LSL$CMNIFF:IFFHAN.CMN'
	INCLUDE 'HERE:IREPORT.CMN'
C
C Function:
	INTEGER	EXPAND
C
C Word:
	INTEGER*2	IENDS	! string pen control
C
C Longword:
	INTEGER		CURPOS	! current position
	INTEGER		I,K	! loop variables
C
C ......................................................................
C
	NF_REPORT = %LOC(SS$_NORMAL)	! assume success
C 
C   zero longword version of longword    

        NFS(1) = 0
        NFS(2) = 0
C
	CALL EIHRI (NFS(1) ,1,1)    	! read FSN as unsigned word
C
	CALL EIHRI (NFS(2) ,1,2)        ! read ISQ as unsigned word
C
	HADNF=.TRUE.			! NF found
	NFADDR=LPOSH			! store FSN address 
	STSET=.FALSE.			! set 'had string' flag
	ZSSET=.FALSE.			!  "    "   ZS      "
	TCTEST=.FALSE.			!  "    "   TC      "

C
C Gather string information for LITES2 command file output
C
	IF ((LITES2) .AND. (NFS(1) .NE. 0)) THEN
	   CALL IFFIRV(0)			!Treat CB as ST or ZS
	   CALL EIHMK(1) 	  		!Marks current position
C
5	   CALL IFFNXT(IECODE, IELEN)		!Find ST,ZS,EF or EOF
	   IF ((IECODE.NE.'ST').AND.
     &	       (IECODE.NE.'ZS').AND.
     &	       (IECODE.NE.'EF').AND.
     &	       (IELEN .NE.-1  ))     GOTO 5
C
	   IF (IELEN .EQ.-1) THEN		!Premature EOF
	      NF_REPORT = IREPORT__UNEXPEOF
	      CALL LSL_PUTMSG(NF_REPORT)
	      GOTO 20
	   ENDIF
C
	   IF (IECODE.EQ.'EF') THEN
	      NP = 0			!No ST or ZS found
	      XYBUF(1) = 0		!Set up null values
	      XYBUF(2) = 0
	   ELSE
	     CALL EIHRS(NP,IENDS)	!Read point-string details
	     CALL EIHRR(XYBUF,2,1)	!Get string coords of 1st point 
	   ENDIF
C
	   CALL IFFRWM			!Go back to original position
C
	   IF (IELEN .LT. 0) THEN	!Check for premature EOF
	      NF_REPORT = IREPORT__UNEXPEOF
	      CALL LSL_PUTMSG(NF_REPORT)
	      GOTO 20
	   ENDIF
	   CALL EIHMK(0)                !Cancel marked position
	   CALL IFFIRV(LEVEL)		!Restore normal input
	ENDIF
C
C Report TC entry if outside a feature                       
C
	IF (HADTCO) THEN
	   IF ((TC) .AND.(.NOT. ABSENT))THEN
C
C Store our current address (the current NF entry) as we will now jump
C back to the TCs which lie outside the current feature.
C
	      CURPOS=LPOSH
C
C Report on each of those TCs
C
	      DO 10 I=1,TCINDEX
	        CALL EXPAND('TC found before feature with FSN %N (%N)'
     &							,NFS(1),NFS(2))
	        IF (ADDRESS) THEN
	           CALL APPEND(' at address %^L%P0%X8',TCADDR(I))
	        ENDIF
	        CALL FLWLIN
C
C Jump to the addresses of the TCs founds outside (and before!) the 
C current feature
C
		CALL IFFPKE(IECODE,IELEN,TCADDR(I))
		IF (IELEN .LT. 0) THEN
		  NF_REPORT = IREPORT__UNEXPEOF
		  CALL LSL_PUTMSG(NF_REPORT)
		  GOTO 20
		ENDIF
C
C Clear TC text array
C
		CALL VIOCLR(TDATA,256,0)
C
C Read the whole TC string
C
		CALL EIHR(TDATA,IELEN,1)
	        K=EXPAND('%WS"%AZ255"',MESS,TDATA)
	        CALL FLWSTR(MESS(:K))
	        IF (LITES2) THEN
	          CALL LITES2M(XYBUF(1),XYBUF(2),EXPDSC,EXPLEN)
	        ENDIF
10	      CONTINUE
C
C Return to the real entry in hand (the current NF) 
C
	      CALL IFFPKE(IECODE,IELEN,CURPOS)
	      IF (IELEN .LT. 0) THEN
	        NF_REPORT = IREPORT__UNEXPEOF
	        CALL LSL_PUTMSG(NF_REPORT)
	        GOTO 20
	      ENDIF
           ENDIF
	ENDIF
C
C Set feature logicals
C
	HADTS=.FALSE.
	HADST=.FALSE.
	HADZS=.FALSE.
	HADRO=.FALSE.
	HADTH=.FALSE.
	HADTX=.FALSE.
	HADTC=.FALSE.
	HADAC=.FALSE.
	HADFC=.FALSE.
	HADCB=.FALSE.
C
C Initialise counting variables
C
	TCINDEX=0
	NUMTSH=0
	NUMACH=0
	NPTS=0
	NST=0
	NZS=0
C
C Clear TC text array
C
	CALL VIOCLR(TDATA,256,0)
C
20	RETURN
	END
