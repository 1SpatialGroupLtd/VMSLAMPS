	LOGICAL FUNCTION FC_REPORT()
C
***	MODULE  FC_REPORT
***	IDENT	04JL88
C	
C	Copyright Laser-scan laboratories Ltd, Cambridge, England.
C
C	Author	J M Price Williams from M.S. Reid
C	created 20 OCTOBER 1986
C
C	Description:	to deal with the contents of the IFF FS entry
C                       notably	the feature code or FC as it is known.
C
CMOD	"Infeature" changed to "in feature"		TJH 04-Jul-1988
CMOD	Correct LITES2 output produced			TJH 10-Jun-1987
CMOD	FRL'ed and overlong statements continued. Now
C	returns SS$_NORMAL or IREPORT__UNEXPEOF instead
C	of .T. and .F.					TJH 05-Nov-1986
CMOD	Output addresses as 8 digits, left padded with	TJI 31-Oct-1986
C
	IMPLICIT NONE
C
C Parameters:
	INTEGER  SS$_NORMAL
	EXTERNAL SS$_NORMAL
	INCLUDE 'IREPORTMSG.PAR'
C
C Common blocks:
	INCLUDE 'LSL$CMNLSL:EXPC.CMN'
	INCLUDE 'LSL$CMNIFF:IFFHAN.CMN'
	INCLUDE 'IREPORT.CMN'
C
C
C Longword:
	INTEGER		I		! loop variable
C
C ......................................................................
C
	FC_REPORT = %LOC(SS$_NORMAL)		! assume the best
C
	CALL EIHRI(FCODE,1,1)
	HADFC=.TRUE.
	IF (WITH_FC) THEN
	   MATCHF=.FALSE.
	   DO 10 I=1,NUMWFC
	      IF (FCODE .EQ. WFCS(I)) THEN	
	        MATCHF=.TRUE.			!Feature found
	      ENDIF
10	   CONTINUE
	   IF (.NOT. MATCHF) THEN		!Skip rest of feature
20	      CALL IFFNXT(IECODE,IELEN)  
	      IF (IELEN .EQ.-1) THEN
	         FC_REPORT = IREPORT__UNEXPEOF
	         CALL LSL_PUTMSG(FC_REPORT)
	         GOTO 40
	      ENDIF
	      IF (IECODE .NE. 'EF') THEN
	          GOTO 20
	      ELSE 
	          GOTO 40
	      ENDIF
	   ENDIF  
	ENDIF
C
C Report FSN entry here because feature code required
C
	IF ((NF) .AND. (.NOT. ABSENT)) THEN
	   CALL EXPAND(
     &	    'Feature with FSN %N (%N), feature code %^W%N found',
     &			  NFS(1),NFS(2),	   FCODE)
	   IF (ADDRESS) THEN
	      CALL APPEND(' at address %^L%P0%X8',NFADDR)
	   ENDIF	      
	   CALL FLWLIN
	   IF (LITES2) THEN
	      CALL LITES2M(XYBUF(1),XYBUF(2),EXPDSC,EXPLEN)
	   ENDIF
	ENDIF
C
C Report FC entry
C
	IF ((FC).AND. (.NOT. ABSENT)) THEN
	  IF (NUM_FC .EQ. 0) THEN		!Report all FCs
	     CALL EXPAND('Feature code %^W%N found in feature ',FCODE)
	     CALL APPEND('with FSN %N (%N)',NFS(1),NFS(2))
	     IF (ADDRESS) THEN
	        CALL APPEND(' at address %^L%P0%X8',LPOSH)
	     ENDIF
	     CALL FLWLIN
	     IF (LITES2) THEN
	        CALL LITES2M(XYBUF(1),XYBUF(2),EXPDSC,EXPLEN)
	     ENDIF
	  ELSE
	    DO 30 I=1,NUM_FC
	      IF (FCODE.EQ.FCS(I)) THEN 	!Report specified FCs
	         CALL EXPAND('Feature code %^W%N found in',FCODE)
	         CALL APPEND(' feature with FSN %N (%N)',NFS(1),NFS(2))
	         IF (ADDRESS) THEN
	           CALL APPEND(' at address %^L%P0%X8',LPOSH)
	         ENDIF
	         CALL FLWLIN
	         IF (LITES2) THEN
	            CALL LITES2M(XYBUF(1),XYBUF(2),EXPDSC,EXPLEN)
	         ENDIF
	      ENDIF	
30	    CONTINUE	      
	  ENDIF
	ENDIF
40	RETURN
	END
