C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1987-06-10 11:26:08.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL FUNCTION TS_REPORT()
C
***	MODULE  TS_REPORT
***	IDENT	10JN87
C	
C	Copyright Laser-scan laboratories Ltd, Cambridge, England.
C
C	Author	J M Price Williams from m.s. reid
C	created 20 OCTOBER 1986
C
C	Description	to deal with the contents of the IFF TS entry
C                       notably the text feature code.
C
C
CMOD	Correct LITES2 output produced			TJH 10-Jun-1987
CMOD	FRL'ed and overlong statements continued, /TS
C	made to work with /ABSENT as documented		TJH 04-Nov-1986
CMOD	Output addresses as 8 digits, left padded with	TJI 31-Oct-1986
C
	IMPLICIT NONE
C
C Parameters:
	INCLUDE 'HERE:IREPORTMSG.PAR'
	INTEGER	 SS$_NORMAL
	EXTERNAL SS$_NORMAL
C
C Common blocks
	INCLUDE 'LSL$CMNLSL:EXPC.CMN'
	INCLUDE 'LSL$CMNIFF:IFFHAN.CMN'
	INCLUDE 'IREPORT.CMN'
C
C Longword:
	INTEGER		I		! loop variable
C
C ......................................................................
C
	TS_REPORT = %LOC(SS$_NORMAL)
C
	CALL EIHRI(TCODE,1,1)
	HADTS=.TRUE.
C
C Report TS entry presence ...
C
	IF ((TS).AND. (.NOT. ABSENT)) THEN
C
C for all TSs ...
C
	  IF (NUM_TS .EQ. 0) THEN		!Report all TSs
	     CALL EXPAND('Text status entry, TCC value %^W%N, found '
     &							,TCODE)
	     CALL APPEND('in feature with FSN %N (%N)',NFS(1),NFS(2))
	     IF (ADDRESS) THEN
	        CALL APPEND(' at address %^L%P0%X8',LPOSH)
	     ENDIF
	     CALL FLWLIN
	     IF (LITES2) THEN
	        CALL LITES2M(XYBUF(1),XYBUF(2),EXPDSC,EXPLEN)
	     ENDIF
	  ELSE
C
C or just selected TSs
C
	    DO 10 I=1,NUM_TS
	      IF (TCODE.EQ.TSS(I)) THEN 	!Report specified TSs
	         CALL EXPAND('Text status entry, TCC value %^W%N, '
     &							  ,TCODE)
	         CALL APPEND('found in feature with FSN %N (%N)'
     &						   ,NFS(1),NFS(2))
	         IF (ADDRESS) THEN
	           CALL APPEND(' at address %^L%P0%X8',LPOSH)
	         ENDIF
	         CALL FLWLIN
	         IF (LITES2) THEN
	            CALL LITES2M(XYBUF(1),XYBUF(2),EXPDSC,EXPLEN)
	         ENDIF
	      ENDIF	
10	    CONTINUE	      
	  ENDIF
C
C Or are we to gather information on absence of TS within this feature?
C
	ELSEIF (TS.AND.ABSENT) THEN
	  DO 20 I=1,NUM_TS
	     IF (TCODE.EQ.TSS(I))THEN
	         IF (NUMTSH.EQ.MAX_TS) THEN
		    TS_REPORT=IREPORT__TOOMNYTS
		    CALL LSL_PUTMSG(TS_REPORT,MAX_TS)
	            GOTO 30
		 ENDIF
	         NUMTSH=NUMTSH+1
	         TSSHAD(NUMTSH)=TCODE		!Record TSs encountered
	      ENDIF
20	   CONTINUE
	ENDIF
30	RETURN
	END
