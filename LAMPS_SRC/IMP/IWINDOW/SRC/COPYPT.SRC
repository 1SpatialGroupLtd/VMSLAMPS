	LOGICAL FUNCTION COPYPT(XVAL, YVAL, ZVAL, ATTVAL, ATTCOD, NUMATT)
C
***	IDENT	16FE90
***	MODULE	COPYPT
C
C	Copyright LaserScan Laboratories Ltd., Cambridge, England
C
C author TJ Ibbs, 27-Jan-82 & sqq
C
C copied from old OSCLIP and amended for IMP IWINDOW 
C by R J Hulme, 11-Jul-1986
C
C To copy a point from STBUF into OUTBUF, check the RAnge values, and
C if OUTBUF seems too full, then to output an ST to the output file.
C
	IMPLICIT NONE
C
C common blocks, etc
C
***	PARAMETER/LSL$CMNIWIN:MAX/	! maximum things
***	COMMON/LSL$CMNIWIN:COPY/	! transfer for output
***	COMMON/LSL$CMNIWIN:PARAMS/	! control parameters
C
	INCLUDE		'($SSDEF)/NOLIST'
C
C functions
	LOGICAL		STOUT
C
	REAL	XVAL, YVAL, ZVAL	! coordinates of point
	INTEGER	NUMATT			! number of attributes
	INTEGER	ATTVAL(IFF_MAXCBATT)	! attributes of point
	INTEGER	ATTCOD(IFF_MAXCBATT)	! attribute codes
C
	LOGICAL	DIFF_ATT		! different attribtes ?
C
	REAL	XNEW, YNEW, ZNEW	! co-ords relative to new origin
	INTEGER	I			! counter
C
	COPYPT = SS$_NORMAL
C
C if ORIGIN set, co-ordinates must be relative to clipping rectangle:
C
	XNEW = XVAL - XORIG
	YNEW = YVAL - YORIG
	ZNEW = ZVAL
C
C first check if this point is the first, and if not if it is the same
C as the last one - we don't want to duplicate points
C
	IF (DONOUT.OR.(CURRNT.GT.0)) THEN
	   IF (XNEW.EQ.OUTBUF(X,CURRNT).AND.YNEW.EQ.OUTBUF(Y,CURRNT)) 
     &		GO TO 999
	ENDIF
C
C now check that the attributes of this point are the same as those for 
C the points in the output buffer - if different, flush what we already 
C have and set up the new attributes
C
	IF (DIFF_ATT(ATTCOD,NUMATT,OUTATTC,OUTNATT)) THEN
	   IF (CURRNT .GT. 0) THEN
	      COPYPT = STOUT()
	      IF (.NOT.COPYPT) GOTO 900
	   ENDIF
C
	   OUTNATT = NUMATT
	   DO 10 I=1,OUTNATT
	      OUTATTC(I) = ATTCOD(I)
10	   CONTINUE
	ENDIF
C
C add the point to the output buffer
C
	CURRNT = CURRNT+1		! next place in OUTBUF
	OUTBUF(X,CURRNT) = XNEW
	OUTBUF(Y,CURRNT) = YNEW
	HTBUF(CURRNT) = ZNEW
	DO 20 I=1,OUTNATT
	   OUTATT(I,CURRNT) = ATTVAL(I)
20	CONTINUE
C
	IF (DEBUG) CALL WRITEF('.accepted point ')
C
C and check our RANGE entries
C
	CALL CHEKRA
C
C and check if we have enough points to force us to output a CB
C
	IF (CURRNT.GE.STLIM) THEN
	   COPYPT = STOUT()
	   IF (.NOT.COPYPT) GOTO 900
	ENDIF
C
	GOTO 999
C
900	COPYPT = SS$_ABORT
C
999	RETURN
	END
C
