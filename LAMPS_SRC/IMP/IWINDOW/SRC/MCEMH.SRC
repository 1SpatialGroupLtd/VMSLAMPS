C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1990-02-15 16:29:28.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL FUNCTION MCEMH(IELEN)
C
***	MODULE	MCEMH
***	IDENT	15FE90
C
C Copyright Laser Scan Laboratories Limited, Cambridge, England.
C
C Author R. Daly, 16-Jan-1984
C
C Copied from old ICLIP and amended for IMP IWINDOW 
C by R J Hulme, 22-May-1986
C 
C
C This routine extracts the map extent of an MCE map from the common
C block.
C
	IMPLICIT NONE
C
C Included Parameter Files
C
	INCLUDE '($SSDEF)/NOLIST'
C
***	PARAMETER/LSL$CMNIWIN:IWINMSG/	! message definitions
***	PARAMETER/LSL$CMNIWIN:MAX/	! maximum things
C
C Arguments
C
	INTEGER*2 	IELEN		! length of MH entry (words).
C
C Common Blocks
C
***	COMMON/LSL$CMNIWIN:CLIP/	! contains boundaries
***	COMMON/LSL$CMNIWIN:PARAMS/	! control parameters
***	COMMON/LSL$CMNIFF:MHMCE/	! MCE map header
C
	MCEMH = SS$_NORMAL
C
C Read the map header
C
	CALL EIHRI(MHARR,MIN0(IELEN,MHLEN),1)
	IF (DEBUG) CALL WRITEF('.MH entry read')
C
C Set the map boundaries
C
	CLIPLO(S)=MHLASW-MHLAMO		! SW limit - map origin
	CLIPLO(W)=MHLOSW-MHLOMO		!  "   "      "    "
	CLIPHI(N)=MHLANE-MHLAMO		! NE limit - map origin
	CLIPHI(E)=MHLONE-MHLOMO		!  "   "      "    "
C
C Check the consistency of the map header
C
	IF ((NINT(CLIPHI(N)-CLIPLO(S)).NE.MHLAEX).OR.
     &	    (NINT(CLIPHI(E)-CLIPLO(W)).NE.MHLOEX)) THEN
     	   CALL LSL_PUTMSG(IWIN__BADMHMCE)
	   MCEMH = SS$_ABORT
	   GOTO 999
	ENDIF
C
C Check that the values in the map header are valid
C
	IF ((CLIPHI(E).LE.CLIPLO(W)).OR.
     &      (CLIPHI(N).LE.CLIPLO(S))) THEN
           CALL LSL_PUTMSG(IWIN__ILLEGLMH)
	   MCEMH = SS$_ABORT
	   GOTO 999
	ENDIF
C
C Return
C
999	RETURN
	END
C
