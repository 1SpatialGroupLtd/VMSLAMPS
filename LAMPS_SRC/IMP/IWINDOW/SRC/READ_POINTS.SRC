C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1990-02-26 18:14:44.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL FUNCTION READ_POINTS(XY,Z,ATT,ATTC,NATT,NPTS,FSN,ISN)
C
***	IDENT	26FE90
***	MODULE	READ_POINTS
C
C	Copyright LaserScan Laboratories Ltd., Cambridge, England
C
C	Created					RJH	23-May-1988
C
C	IMP IWINDOW Program - Read in some points
C
C Description
C
C	Reads in points from the current ST entry
C	Returns true if it succeeds
C
	IMPLICIT NONE
C
C Included Parameter Files
C
***	PARAMETER/LSL$CMNIWIN:IWINMSG/	! message definitions
***	PARAMETER/LSL$CMNIWIN:MAX/	! maximum things
C
	INCLUDE		'($SSDEF)/NOLIST'
C
C Common Blocks
C
***	COMMON/LSL$CMNIWIN:COPY/	! transfer for output
***	COMMON/LSL$CMNIFF:IFFSTR/	! for SIMPLE_xxx
C
C Arguments to return
C
	REAL		XY(2,MAXST)		! the points
	REAL		Z(MAXST)		! the heights
	INTEGER		ATT(MAXATT,MAXST)	! other attributes
	INTEGER		ATTC(MAXATT) 		! attribute codes
	INTEGER		NATT	  		! no. of attributes
	INTEGER		NPTS			! no. of points
C
C Arguments passed (for error messages)
C
	INTEGER		FSN		! feature serial number
	INTEGER		ISN		! internal sequence number
C
C Local Variables
C
	RECORD	/IFF_CBH/ CBH_IN	! CB header as read in
	RECORD	/IFF_CBD/ CBD_IN	! CB data as read in
C
	INTEGER		I		! counter
C
C Assume we will succeed
C
	READ_POINTS = SS$_NORMAL
C
C Read in the CB header and data
C
	CALL EIHRCB_HEAD(CBH_IN)	! header
	CALL EIHRCB_DATA(CBD_IN)	! data
C
C Set some things up
C
	NPTS  = CBH_IN.NROW
	IENDS = CBH_IN.FLAGS
	GTYPE = CBH_IN.GTYPE
C
C Check we don't have too many points
C
	IF (NPTS .GT. MAXST) THEN
	   CALL LSL_PUTMSG(IWIN__TOOMANYPTS,NPTS,FSN,ISN)
	   GOTO 900
	ENDIF
C
C Copy over the X and Y coordinates
C
	ATTC(1) = IFF_C_X
	ATTC(2) = IFF_C_Y
	CALL IFS_CB_READ(CBH_IN,CBD_IN,XY,2,ATTC,1,NPTS)
C
C Copy over the Z coordinates - if we don't actually have them, pretend 
C we do with all values unset
C
	ATTC(3) = IFF_C_Z
	CALL IFS_CB_READ(CBH_IN,CBD_IN,Z,1,ATTC(3),1,NPTS)
C
C Set up column headers for any point attributes other than 
C coordinates, which we keep separate
C
	NATT = 0
	IF (.NOT. (SIMPLE_XY .OR. SIMPLE_XYZ)) THEN
	   DO 10 I=1,CBH_IN.NCOL
	      IF ((CBH_IN.COLH(I) .NE. IFF_C_X) .AND.
     &	          (CBH_IN.COLH(I) .NE. IFF_C_Y) .AND.
     &	          (CBH_IN.COLH(I) .NE. IFF_C_Z)) THEN
	         NATT = NATT + 1
	         ATTC(NATT) = CBH_IN.COLH(I)
	      ENDIF
10	   CONTINUE
C
C and include fixed attributes
C
	   DO 20 I=1,CBH_IN.NATT
	      IF ((CBH_IN.ATT(I).ATTC .NE. IFF_C_X) .AND.
     &	          (CBH_IN.ATT(I).ATTC .NE. IFF_C_Y) .AND.
     &	          (CBH_IN.ATT(I).ATTC .NE. IFF_C_Z)) THEN
	         NATT = NATT + 1
	         ATTC(NATT) = CBH_IN.ATT(I).ATTC
	      ENDIF
20	   CONTINUE
C
C Now copy them all over so we can treat them all as point attributes
C
	   IF (NATT .GT. 0) THEN
	      DO 30 I=1,NPTS
	         CALL IFS_CB_READ(CBH_IN,CBD_IN,ATT(1,I),NATT,ATTC,I,I)
30	      CONTINUE
	   ENDIF
	ENDIF
C
	GOTO 999
C
C Assign function value
C
900	READ_POINTS = SS$_ABORT
C
C Return
C
999	RETURN
	END
C
