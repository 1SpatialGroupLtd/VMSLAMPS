	LOGICAL FUNCTION LCM_CLOSE
C
***	IDENT	05JN90
***	MODULE	LCM_CLOSE
C
C	Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C	Created					RJH	29-Mar-1988
C
C	IMP IWINDOW Program - Close LITES2 guidance file
C
C Description
C
C	Expects the LITES2 guidance file to be open
C
	IMPLICIT NONE
C
C Included Parameter Files
C
	INCLUDE '($STSDEF)/NOLIST'
C
***	PARAMETER/LSL$CMNIWIN:LUN/	! unit numbers
***	PARAMETER/LSL$CMNIWIN:MAX/	! unit numbers
***	PARAMETER/LSL$CMNIWIN:IWINMSG/	! message definitions
***	PARAMETER/LSL$CMNLSL:LSLLIBMSG/	! LSLLIB message definitions
C
C Common Blocks
C
***	COMMON/LSL$CMNIWIN:PARAMS/	! Parameters
***	COMMON/LSL$CMNIWIN:COPY/	! 
***	COMMON/LSL$CMNLSL:STATUS/	! LSLLIB status flag
C
C Functions called
C
	INTEGER*4	FLWCLO		! closes a file for writing
	INTEGER*4	FLWDEL		! deletes a file open for write
C
C Local Variables
C
	INTEGER*4	ERRCOD		! LSLLIB error code
	INTEGER*4	RETCOD		! system error code
C
C *******************************************************************
C If we are aborting, delete the LITES2 guidance file
C
	IF ((IBITS(LSL_STATUS,0,3) .EQ. STS$K_ERROR) .OR.
     &	    (IBITS(LSL_STATUS,0,3) .EQ. STS$K_SEVERE)) THEN
	   ERRCOD = FLWDEL(LCMLUN,RETCOD)
C
C If unsuccessful output message
C
	   IF (.NOT. ERRCOD) THEN
	      CALL LSL_ADDMSG(IWIN__ERRDELLCM,LCMLUN)
	      CALL LSL_ADDMSG(ERRCOD)
	      IF (ERRCOD .EQ. LSL__SYSCLOSE) CALL LSL_ADDMSG(RETCOD)
C
C Otherwise, warn that it has been deleted
C
	   ELSE
	      CALL LSL_ADDMSG(IWIN__DELLCMFIL)
	   ENDIF
C
C If everything has been successful, first add a final message 
C
	ELSE
C
	   IF (CRECNT.GT.0 .OR. HAD_LCM_OUT) THEN
	      CALL FLWSEL(LCMLUN)
	      CALL FLWRTF('%%MESSAGE "No more reentrant features"')
	      CALL FLWRTF('%%MESSAGE')
C
C Reselect the log file (the default)
C
	      CALL FLWSEL(LOGLUN)
	   ENDIF
C
C Close the LITES2 guidance file
C
	   ERRCOD = FLWCLO(LCMLUN,RETCOD)
C
C If unsuccessful output message
C
	   IF (.NOT. ERRCOD) THEN
	      CALL LSL_PUTMSG(IWIN__ERRCLOLCM,LCMLUN)
	      CALL LSL_ADDMSG(ERRCOD)
	      IF (ERRCOD .EQ. LSL__SYSCLOSE) CALL LSL_ADDMSG(RETCOD)
	   ENDIF
	ENDIF
C
C Assign function value
C
	LCM_CLOSE = ERRCOD
C
C Return
C
	RETURN
	END
C
