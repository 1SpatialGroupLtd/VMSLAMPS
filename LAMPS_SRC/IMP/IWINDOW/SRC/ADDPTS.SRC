	LOGICAL FUNCTION ADDPTS(ADD_XY,ADD_Z,ADD_ATT,ADD_ATTC,ADD_NATT,
     &	                  ADD_PTS,ADD_FLAGS,NEW_FEAT)
C
***	IDENT	15FE90
***	MODULE	ADDPTS
C
C	Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C	Created					RJH	25-Jun-1988
C
C	IMP IWINDOW Program - Add points to output feature
C
C Description
C
C
	IMPLICIT NONE
C
C Included Parameter Files
C
***	PARAMETER/LSL$CMNIWIN:LUN/	! unit numbers
***	PARAMETER/LSL$CMNIWIN:MAX/	! maximum things
C
	INCLUDE		'($SSDEF)/NOLIST'
C
C Arguments
C
	INTEGER*4	ADD_PTS			! no. of points
	REAL		ADD_XY(2,ADD_PTS)	! X and Y coordinates
	REAL		ADD_Z(ADD_PTS)		! Z coordinates
	INTEGER		ADD_ATT(MAXATT,ADD_PTS)	! point attributes 
	INTEGER		ADD_ATTC(MAXATT,ADD_PTS)! attribute codes
	INTEGER		ADD_NATT(ADD_PTS)	! number of attributes
	INTEGER*2	ADD_FLAGS(ADD_PTS)	! flags for point
	LOGICAL		NEW_FEAT		! start new feature ?
C
C Common Blocks
C
***	COMMON/LSL$CMNIWIN:COPY/	! transfer for output
C
C Functions
	LOGICAL		STOUT
	LOGICAL		COPYPT
C
C Local Variables
C
	INTEGER*4	I		! counter
C
	ADDPTS = SS$_NORMAL
C
C Go through each point in turn
C
	DO 100 I=1,ADD_PTS
C
C If this segment is invisible, flush the output buffer
C
	   IF ((CURRNT .NE. 0) .AND. (ADD_FLAGS(I) .EQ. PENUP)) THEN
C
	      ADDPTS = STOUT()		! force the last CB out
	      IF (.NOT.ADDPTS) GOTO 999
C
	      TENDS = PENUP		! want a penup to be set
	   ENDIF
C
C If we are starting a new feature, terminate the current one
C
	   IF (NEW_FEAT) THEN
	      CALL IFFSEL(OUTLUN)	! select for writing
	      CALL IFFEF		! end the feature
	      CALL IFFSEL(INLUN)	! and back to reading
	      NONF = .TRUE.		! no longer in a feature
	   ENDIF
C
C Copy the point over for output
C
	   ADDPTS = COPYPT(ADD_XY(X,I),ADD_XY(Y,I),ADD_Z(I),
     &	               ADD_ATT(1,I),ADD_ATTC(1,I),ADD_NATT(I))
	   IF (.NOT.ADDPTS) GOTO 999
C
100	CONTINUE
C
	GOTO 1000
C
999	ADDPTS = SS$_ABORT
C
C Return
C
1000	RETURN
	END
C
