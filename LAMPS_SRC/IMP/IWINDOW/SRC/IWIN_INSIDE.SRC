	LOGICAL FUNCTION IWIN_INSIDE(
     &                     XPOINT,
     &                     YPOINT,
     &                     XCOORDS,
     &                     YCOORDS,
     &                     NUMBER_COORDS,
     &			   PNT_POL)
C
***	MODULE IWIN_INSIDE
***	IDENT  25NO94
C
	IMPLICIT NONE
C
C 	Copyright Laser-Scan Ltd., Cambridge, England
C
C 	Author  : 	J Barber
C 	Created :	May 1990
C
C	Based on POLYGONS package service routine PNTPOL
C	via VISA_INSIDE in Visualisation VISALIB
C
CMOD1370 Change variable PNTPOL to PNT_POL to avoid confusion with 
C	 function PNTPOL			JB 25-Nov-1994
C
C	Function:
C	To test whether the point XPOINT,YPOINT lies inside
C	the area defined by the NUMBER_COORDS vertices held in
C	XCOORDS,YCOORDS.
C	Function returns true if the point is inside.
C
C	Original returns of PNT_POL:
C
C		-1 point outside polygon
C		 0 point on an edge or vertex
C		 1 point inside polygon
C
C-----------------------------------------------------------------------
C Arguments	
	REAL*4		XPOINT
	REAL*4		YPOINT
	INTEGER*4	NUMBER_COORDS		! no. of coords
	REAL*4		XCOORDS(NUMBER_COORDS)	! x coordinates
	REAL*4		YCOORDS(NUMBER_COORDS)  ! y coordinates
	INTEGER*4	PNT_POL			! original return
C
C Local
	REAL*4		XI,YI,XJ,YJ		! dist bet pt and verts
C
	INTEGER*4	I,J			! counters
C
	LOGICAL		IX,IY,JX,JY		! flags
C
C----------------------------------------------------------------------
C Assume initially the pt. is outside
C
	IWIN_INSIDE = .FALSE.
	PNT_POL     = -1
C
	DO 100 I = 1,NUMBER_COORDS
C
105	   XI = XCOORDS(I) - XPOINT
106	   YI = YCOORDS(I) - YPOINT
C
C Check whether the point lies on the vertex
C
	   IF (XI.EQ.0.0.AND.YI.EQ.0.0) GOTO 200
C
C ------------------------------------------------------------------
	   J = 1 + MOD(I,NUMBER_COORDS)
	   XJ = XCOORDS(J) - XPOINT
	   YJ = YCOORDS(J) - YPOINT
C
C Check for a zero length line
C
	   IF (XI.EQ.XJ.AND.YI.EQ.YJ) GOTO 100
C
	   IX = XI.GE.0.0
	   IY = YI.GE.0.0
 	   JX = XJ.GE.0.0
	   JY = YJ.GE.0.0
C
C ------------------------------------------------------------------
C Check whether the point is on the vertical side of the polygon
C
	   IF (XI.EQ.0.0.AND.XJ.EQ.0.0.AND.(IY.XOR.JY)) GOTO 200
C
C ------------------------------------------------------------------
C Check whether the point is on the horizontal side of the polygon
C
	   IF (YI.EQ.0.0.AND.YJ.EQ.0.0.AND.(IX.XOR.JX)) GOTO 200
C
C ------------------------------------------------------------------
C Check whether both ends of this side are completely:
C	a) to the right of,
C	b) to the left of, or,
C	c) below the point
C
	   IF (.NOT.((IY.OR.JY).AND.(IX.XOR.JX))) GOTO 100
C
C Does this side obviously cross line arising vertically from the 
C point
C
	   IF(.NOT.((IY.AND.JY).AND.(IX.XOR.JX))) GOTO 50
C
C Point must be inside
C
	   PNT_POL = -PNT_POL
	   GOTO 100
C
50	   IF ((YI*XJ - XI*YJ)/(XJ-XI)) 100,200,300
C
C Point lies on boundary 
C
200	   PNT_POL = 0
	   GOTO 999
C
300	   PNT_POL = -PNT_POL
C
100	CONTINUE
C
C-----------------------------------------------------------------------
C
999	IF (PNT_POL.EQ.1) THEN
	   IWIN_INSIDE = .TRUE.
	ELSE
	   IWIN_INSIDE = .FALSE.
	ENDIF
C
C-----------------------------------------------------------------------
	RETURN
	END
C
