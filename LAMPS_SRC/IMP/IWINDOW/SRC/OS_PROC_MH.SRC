C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1991-09-30 14:33:46.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL FUNCTION OS_PROC_MH(IELEN)
C
***	IDENT	18OC90
***	MODULE	OS_PROC_MH
C
C	Copyright LaserScan Laboratories Ltd., Cambridge, England
C
C	Created					JB 17-Jul-1990
C
C	IMP IWINDOW Program - read MH for OS map
C
	IMPLICIT NONE
C
C Included Parameter Files
C
***	PARAMETER/LSL$CMNIWIN:LUN/	! unit numbers
***	PARAMETER/LSL$CMNIWIN:MAX/	! 
C
C Common Blocks
C
***	COMMON/LSL$CMNIWIN:COPY/	! transfer for output
***	COMMON/LSL$CMNIWIN:PARAMS/	! 
***	COMMON/LSL$CMNIFF:MHDMB/	! OS Map Header
C
C include files to cope with new OS map header
C
	INCLUDE 'LSL$CMNIFF:MHOSGB.CMN'		! New OS map header
	INCLUDE 'LSL$CMNOSMH:OSMH_NEW_MH.CMN'	! New map header variables
	INCLUDE 'LSL$CMNOSMH:OSMH_NEW.PAR'	! Header field definitions
C
C Arguments
C
	INTEGER*2	IELEN			! Actual size of MH in words
C
C functions
C
	LOGICAL		OSMH_NEW_GETFLD		! Extract field from new header
	LOGICAL		OSMH_NEW_PUTINT		! Insert integer into new header
C
C********************** h a d    a n   M H **************************
C
C Assume all will work
C
	OS_PROC_MH = .TRUE.
C
C map header - if ORIGIN set, add it to 'world co-ords' of SW of map
C
	IF (MH_TYPE.EQ.2) THEN
	   CALL EIHR(MHARR,MIN0(IELEN,MHLEN),1)      ! read it into MHARR array
	ELSEIF (MH_TYPE.GE.3) THEN
	   CALL EIHR(MH2ARR,MIN0(IELEN,MH2LEN),1)    ! read it into MH2ARR array
C
C Get Easting from MH2ARR
	   IF ( .NOT.OSMH_NEW_GETFLD( MD_X_ORIG )) GOTO 900
	   MHMRCE = MH_I_VALUE
C
C Get Northing
	   IF ( .NOT.OSMH_NEW_GETFLD( MD_Y_ORIG )) GOTO 900
	   MHMRCN = MH_I_VALUE
	ENDIF
C
	IF (ORIGIN .AND. HAD_OSMH) THEN
	   PCMRCE = PCMRCE + XORIG	! add new origin... 
	   PCMRCN = PCMRCN + YORIG	! to 'external' origin
	   MHMRCE = MHMRCE + XORIG	! (at both...
	   MHMRCN = MHMRCN + YORIG	! occurrences)
	ENDIF
C
	CALL IFFSEL(OUTLUN)		! select the output file
C
	IF (MH_TYPE.EQ.2) THEN
	   CALL IFFMH(MHARR,MHLEN)	! write out, changed or not
	ELSEIF (MH_TYPE.GE.3) THEN
C
C Put Easting
	   IF ( .NOT.OSMH_NEW_PUTINT( MD_X_ORIG,MHMRCE )) GOTO 900
C
C Put Northing
	   IF ( .NOT.OSMH_NEW_PUTINT( MD_Y_ORIG,MHMRCN )) GOTO 900
C
	   CALL IFFMH(MH2ARR,MIN0(IELEN,MH2LEN))	! write out, changed or not
	ENDIF
C
	CALL IFFSEL(INLUN)		! back to the input file
C
C Everything OK
C
	GOTO 999
C -------------------------------------------------------------
C
C Error occured
C
900	OS_PROC_MH = .FALSE.
C
999	RETURN
	END
C
