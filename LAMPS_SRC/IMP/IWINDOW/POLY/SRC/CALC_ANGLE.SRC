C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1991-05-07 18:20:34.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	REAL*4 FUNCTION CALC_ANGLE(SEG_XY,WHICH_CNR,GOING_IN)
C
***	IDENT	07MY91
***	MODULE	CALC_ANGLE
C
C	Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C	Created					RJH	28-Jun-1988
C
C	Polygon Clipping - Calculate angle of segment with polygon side
C
C Description
C
C
	IMPLICIT NONE
C
C Arguments
C
	REAL*8		SEG_XY(2,2)	! line segment
	INTEGER*4	WHICH_CNR	! 1st corner of polygon side
	LOGICAL*1	GOING_IN	! going in to clipping polygon ?
C
C Common Blocks
C
	INCLUDE 'HERE:INTERSECT.CMN'	! linked list of intersections
C
C Local Variables
C
	REAL*8		DXU,DYU,DXV,DYV	! X and Y for vectors
	REAL*8		NUM		! numerator
	REAL*8		DEN		! denominator
C
C Compute the vectors
C
	IF (GOING_IN) THEN
	   DXU = SEG_XY(1,1) - SEG_XY(1,2)
	   DYU = SEG_XY(2,1) - SEG_XY(2,2)
	ELSE
	   DXU = SEG_XY(1,2) - SEG_XY(1,1)
	   DYU = SEG_XY(2,2) - SEG_XY(2,1)
	ENDIF
	DXV = DBLE(CNR_XY(1,WHICH_CNR+1)) - DBLE(CNR_XY(1,WHICH_CNR))
	DYV = DBLE(CNR_XY(2,WHICH_CNR+1)) - DBLE(CNR_XY(2,WHICH_CNR))
C
C and the numerator and denominator
C
	NUM = DXU*DXV + DYU*DYV
	DEN = SQRT(DXU**2+DYU**2) * SQRT(DXV**2+DYV**2)
C
C Assign function value
C
	CALC_ANGLE = ACOS(NUM/DEN)
C
C Return
C
	RETURN
	END
