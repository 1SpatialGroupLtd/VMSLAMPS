	SUBROUTINE PNTPOL(PNTXY,POLXY,NPTS,PNTPOS,POLVRT)
C
***	MODULE	PNTPOL
***	IDENT	07MY91
C
C	Copyright (C) 1987, Laser-Scan Laboratories Ltd.,
C	Cambridge, England
C
C	Pinched from POLYGONS library and amended	RJH  21-Jun-1988
C	Created						TJH  11-Feb-1987
C
C Subroutine to determine whether a point PNTXY(x,y) lies inside
C polygon POLXY(x,y).
C
C Returns one of 3 values in PNTPOS:
C
C		-1 = point outside polygon
C		 0 = point on an edge or vertex
C		 1 = point in polygon
C
C If the point is on an edge (PNTPOS=0), POLVRT contains the previous
C vertex. If the point is on a vertex (PNTPOS=0), POLVRT contains that 
C vertex.
C
C The vertices in POLXY may be in clockwise or anticlockwise order.
C The point PNTXT is considered inside the polygon if it is located
C in the enclosed area defined by the line forming the polygon.
C The input polygon may be a compound polygon consisting of several
C separate subpolygons. If so the first vertex of each subpolygon
C should be repeated, and when calculating NPTS must be counted twice.
C PNTPOL can handle any number of vertices defining the polygon.
C
	IMPLICIT NONE
C
C Arguments:
	INTEGER	NPTS		! no. of vertices defining the polygon
	REAL*8	PNTXY(2)	! the point
	REAL	POLXY(2,NPTS)	! the polygon
	INTEGER	PNTPOS		! resulting position of point
	INTEGER	POLVRT		! previous vertex no.
C
C Local workspace:
	REAL*8	XPNT,YPNT	! copy of the point
	REAL	XI,YI,XJ,YJ	! distances between point and vertices
	INTEGER	I,J		! loop variable, counter
	LOGICAL IX,IY,JX,JY	! flags
C
C ......................................................................
C
C Assume that the point is outside
	PNTPOS=-1
C
	XPNT=PNTXY(1)
	YPNT=PNTXY(2)
	DO 40 I=1,NPTS
	   XI=POLXY(1,I)-XPNT
	   YI=POLXY(2,I)-YPNT
	   POLVRT=I
C
C Check whether the point lies on this vertex
	   IF (XI.EQ.0.0.AND.YI.EQ.0.0) GOTO 20
C
C J is the next vertex number of the polygon
	   J=1+MOD(I,NPTS)
	   XJ=POLXY(1,J)-XPNT
	   YJ=POLXY(2,J)-YPNT
C
C Is this line of zero length?
	   IF (XI.EQ.XJ.AND.YI.EQ.YJ) GOTO 40
	   IX=XI.GE.0.0
	   IY=YI.GE.0.0
	   JX=XJ.GE.0.0
	   JY=YJ.GE.0.0
C
C Check whether our point PNTXY(x,y) is on vertical side of polygon
	   IF (XI.EQ.0.0.AND.XJ.EQ.0.0.AND.(IY.XOR.JY)) GOTO 20
C
C Check whether our point PNTXY(x,y) is on horizontal side of polygon
	   IF (YI.EQ.0.0.AND.YJ.EQ.0.0.AND.(IX.XOR.JX)) GOTO 20
C
C Check whether both ends of this side are completely:
C		1) to the right of,
C		2) to the left of, or,
C		3) below our point PNTXY(x,y)
C
	   IF (.NOT.((IY.OR.JY).AND.(IX.XOR.JX))) GOTO 40
C
C Does this side obviously cross line rising vertically from our point
C PNTXY(x,y)?
	   IF (.NOT.((IY.AND.JY).AND.(IX.XOR.JX))) GOTO 10
C
C Yes, our point is inside the polygon
	   PNTPOS=-PNTPOS
	   GOTO 40
C
10	   IF ((YI*XJ-XI*YJ)/(XJ-XI)) 40,20,30
C
C Our point lies on the polygon boundary
20	   PNTPOS=0	   
	   GOTO 50
C
C Our point is inside the polygon
30	   PNTPOS=-PNTPOS
40	CONTINUE
C
50	RETURN
	END
