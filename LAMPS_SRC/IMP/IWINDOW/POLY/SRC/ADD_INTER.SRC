C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1988-06-21 16:15:48.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE ADD_INTER(NEW_LINK,FORWARD_PTR)
C
***	IDENT	21JN88
***	MODULE	ADD_INTER
C
C	Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C	Created					RJH	20-Jun-1988
C
C	Polygon Clipping - Add a new intersection to the linked list
C
C Description
C
C
	IMPLICIT NONE
C
C Common Blocks
C
	INCLUDE 'HERE:INTERSECT.CMN'	! linked list of intersections
C
C Arguments
C
	BYTE		NEW_LINK(LINK_LEN)	! the link to put in
	INTEGER*4	FORWARD_PTR		! pointer to next link
C
C Included file for local variables
C
	INCLUDE 'HERE:CURR_LINK.INC'		! current link
C
C Local Variables
C
	INTEGER*4	BACKWARD_PTR		! pointer to last link
C
C Free a new link in the list
C
	NUM_INTER = NUM_INTER + 1
C
C Get the next link and reset the backward pointer
C
	CALL GET_LINK(CURR_LINK,FORWARD_PTR)
	BACKWARD_PTR  = PREV_PTR
	PREV_PTR = NUM_INTER
	CALL PUT_LINK(CURR_LINK,FORWARD_PTR)
C
C Get the previous link and reset the forward pointer
C
	CALL GET_LINK(CURR_LINK,BACKWARD_PTR)
	NEXT_PTR = NUM_INTER
	CALL PUT_LINK(CURR_LINK,BACKWARD_PTR)
C
C Now set the pointers in the current link
C
	CALL SET_PTR(BACKWARD_PTR,NEW_LINK(PREPTR))
	CALL SET_PTR(FORWARD_PTR,NEW_LINK(NXTPTR))
C
C and put it into the list
C
	CALL PUT_LINK(NEW_LINK,NUM_INTER)
C
C Return
C
	RETURN
	END
