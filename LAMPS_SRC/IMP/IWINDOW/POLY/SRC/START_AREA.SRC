C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1988-06-24 17:49:20.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE START_AREA
C
***	IDENT	22JN88
***	MODULE	START_AREA
C
C	Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C	Created					RJH	20-Jun-1988
C
C	Polygon Clipping - Start a new area feature
C
C Description
C
C
	IMPLICIT NONE
C
C Common Blocks
C
	INCLUDE 'HERE:INTERSECT.CMN'	! linked list of intersections
	INCLUDE 'HERE:INTERFACE.CMN'	! interface for routines
C
C Included file for local variables
C
	INCLUDE 'HERE:CURR_LINK.INC'	! current link
C
C Local Variables
C
	INTEGER*4	I		! counter
C
C Initialise flags
C
	HAD_SAV   = .FALSE.
	START_RET = .FALSE.
C
C If this is the first area, or nothing has been clipped yet, the list 
C will still be initialised
C
	IF (NUM_INTER .NE. NUM_CORNER) THEN
C
C Initialise the linked list
C
	   NUM_INTER  = NUM_CORNER
C
C Reset all the pointers
C
	   DO 100 I=1,NUM_CORNER
	      CALL GET_LINK(CURR_LINK,I)
	      IF (I .EQ. 1) THEN
	         PREV_PTR = NUM_CORNER
	      ELSE
	         PREV_PTR = I - 1
	      ENDIF
	      IF (I .EQ. NUM_CORNER) THEN
	         NEXT_PTR = 1
	      ELSE
	         NEXT_PTR = I + 1
	      ENDIF
	      DONE = .FALSE.
	      CALL PUT_LINK(CURR_LINK,I)
100	   CONTINUE
	ENDIF
C
C Return
C
	RETURN
	END
