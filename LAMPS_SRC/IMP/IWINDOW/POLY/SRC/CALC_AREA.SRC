C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1991-05-07 18:35:18.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE CALC_AREA(X,Y,VRTX)
C
***	IDENT 07MY91
***	MODULE CALC_AREA
C
C	Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C	Loosely based on POLYGONS library AREA	RJH	20-Jun-1988
C
C	Polygon Clipping - Calculate polygon area
C
C Description
C
C	Calculates the signed area of a polygon, through repeated calls
C
C	Final area is calculated by repeating the call with the last 
C	point as argument. 
C
C	Area is +ve if the string coords. are in anticlockwise order, 
C	-ve if clockwise.
C 
	IMPLICIT NONE
C
C Arguments
C
	REAL*8		X		! current X
	REAL*8		Y		! current Y
	INTEGER*4	VRTX		! current vertex number
C
C Common Blocks
C
	INCLUDE 'HERE:AREA_CALC.CMN'	! area calculation
C
C Local Variables
C
	REAL		XOFF		! X offset from local origin
	REAL		YOFF		! Y offset from local origin
C
C First point
C
	IF (VRTX .EQ. 1) THEN
	   XORIG = X
	   YORIG = Y
	   CUM_AREA = 0.0
C
C Second point
C
	ELSEIF (VRTX .EQ. 2) THEN
	   LAST_XOFF = X - XORIG
	   LAST_YOFF = Y - YORIG
	   LAST_VRTX = VRTX
C
C Third point
C
	ELSEIF (VRTX .NE. LAST_VRTX) THEN
	   XOFF = X - XORIG
	   YOFF = Y - YORIG
	   CUM_AREA = CUM_AREA + XOFF * YOFF +
     &	              (LAST_XOFF - XOFF) * (LAST_YOFF + YOFF) +
     &	              (-LAST_XOFF) * LAST_YOFF
	   LAST_XOFF = XOFF
	   LAST_YOFF = YOFF
	   LAST_VRTX = VRTX
C
C Calculate area
C
	ELSE
	   CUM_AREA = CUM_AREA / 2.0
	ENDIF
C
C Return
C
	RETURN
	END
