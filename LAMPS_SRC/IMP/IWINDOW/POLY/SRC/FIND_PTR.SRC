	SUBROUTINE FIND_PTR(WHICH_CNR,WHICH_XY,WHICH_ANGLE,
     &	                    NEW_DIST,NEW_PTR)
C
***	IDENT	07MY91
***	MODULE	FIND_PTR
C
C	Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C	Created					RJH	23-Jun-1988
C
C	Polygon Clipping - Find pointer for new link
C
C Description
C
C
	IMPLICIT NONE
C
C Arguments
C
	INTEGER*4	WHICH_CNR	! corner to start at
	REAL*4		WHICH_XY(2)	! coordinates of boundary pt.
	REAL*4		WHICH_ANGLE	! distance from corner
	REAL*4		NEW_DIST	! distance from corner
	INTEGER*4	NEW_PTR		! pointer to next link
C
C Common Blocks
C
	INCLUDE 'HERE:INTERSECT.CMN'	! linked list of intersections
C
C Included file for local variables
C
	INCLUDE 'HERE:CURR_LINK.INC'	! current link
C
C Local Variables
C
	INTEGER*4	CURR_PTR	! current pointer
C
C Get the corner and calculate the distance the new point is from it
C
	CALL GET_LINK(CURR_LINK,WHICH_CNR)
	NEW_DIST = SQRT( (WHICH_XY(1)-THIS_X)*(WHICH_XY(1)-THIS_X) +
     &	                 (WHICH_XY(2)-THIS_Y)*(WHICH_XY(2)-THIS_Y) )
C
C Find the position on the basis of distance in the linked list
C
10	CURR_PTR = NEXT_PTR
	CALL GET_LINK(CURR_LINK,CURR_PTR)
	IF (NEW_DIST .GT. THIS_DIST) GOTO 10
C
C If necessary, find the position on the basis of angle in the linked 
C list
C
20	IF ((NEW_DIST .NE. THIS_DIST) .OR. 
     &	    (WHICH_ANGLE .LE. THIS_ANGLE)) GOTO 30
	CURR_PTR = NEXT_PTR
	CALL GET_LINK(CURR_LINK,CURR_PTR)
	GOTO 20
C
C Set the pointer
C
30	NEW_PTR = CURR_PTR
C
C Return
C
	RETURN
	END
