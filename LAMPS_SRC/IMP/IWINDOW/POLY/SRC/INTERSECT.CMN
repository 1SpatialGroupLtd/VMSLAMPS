C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1990-05-30 21:03:14.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
C
C	Polygon Clipping - Intersections on clipping polygon boundary
C
C Description
C
C	This is a circular buffer containing the intersections of the
C	current area feature with the clipping polygon, ordered along 
C	the clipping polygon boundary
C
C Parameters for the links
C
	INTEGER*4	MAX_INTER		! max. no. intersections
	PARAMETER	(MAX_INTER = 5000)
	INTEGER*4	LINK_LEN		! length of a link
	PARAMETER	(LINK_LEN = 38)
C
	INTEGER*4	PREPTR			! pointer backwards
	PARAMETER	(PREPTR = 1)
	INTEGER*4	NXTPTR			! pointer forwards
	PARAMETER	(NXTPTR = 5)
	INTEGER*4	X			! X coordinate
	PARAMETER	(X = 9)
	INTEGER*4	Y			! Y coordinate
	PARAMETER	(Y = 13)
	INTEGER*4	DIST			! distance from corner
	PARAMETER	(DIST = 17)
	INTEGER*4	ANGLE			! angle with side
	PARAMETER	(ANGLE = 21)
	INTEGER*4	LNK			! link number 
	PARAMETER	(LNK = 25)
	INTEGER*4	PREIND			! previous point index
	PARAMETER	(PREIND = 29)
	INTEGER*4	NXTIND			! next point index
	PARAMETER	(NXTIND = 33)
	INTEGER*4	TRAN			! transition (in/out)
	PARAMETER	(TRAN = 37)
	INTEGER*4	FLG			! flag this bit done
	PARAMETER	(FLG = 38)
C
C Variables
C
	REAL*4		CNR_XY(2,MAX_INTER)	! corner points
	INTEGER*4	CNR_PTS		! number of corners
	INTEGER*4	NUM_INTER	! no. of intersections
	INTEGER*4	NUM_CORNER	! no. of corners
	LOGICAL		CLOCKWISE	! clockwise direction ?
	BYTE		INTER_LIST(LINK_LEN,MAX_INTER)
C					! all the intersections
	REAL*8		LIMIT		! limit of accuracy for PNTPOL
C
C Common block
C
	COMMON/INTERSECT/CNR_XY,CNR_PTS,NUM_INTER,NUM_CORNER,CLOCKWISE,
     &	INTER_LIST,LIMIT
C
