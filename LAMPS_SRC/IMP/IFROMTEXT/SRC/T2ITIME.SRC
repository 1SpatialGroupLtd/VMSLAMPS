C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1987-11-02 19:16:30.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL FUNCTION T2ITIME(N,CHECK_SEP)
C
***	IDENT	02NO87
***	MODULE	T2ITIME
C
C	Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C	Created					MWSR	29-OCT-1987
C
C Description
C
C Reads the next time string in the input file. If not found on
C the current line, a time string is expected on the next non-blank 
C line.
C
C The function takes the value false if successful, and true if:
C   i) the time string was corrupted,
C  ii) the time was not found before the
C      next IFF code,
C iii) an illegal separator was encountered, or
C  iv) an input file read error occurred.
C
C If the function was successful, the argument returned is the
C real read. If unsuccessful, the argument will be unchanged unless
C an attempt was made to read a real, in which case it will be zero.
C Communication with other routines is via the common block T2IPAR.
C
	IMPLICIT NONE
C
C Arguments
C
	INTEGER*4	N			!  time to be read
	LOGICAL	CHECK_SEP		! IN - true if to check for
C					! valid separator
C
C Common blocks
C
***     COMMON/LSL$CMNIFROMTEXT:IFROMMSG.PAR/
***	COMMON/LSL$CMNIFROMTEXT:T2IPAR/		! global variables
***     COMMON/LSL$CMNLSL:READSTR.PAR/
C
C Functions called
C
	INTEGER*4	T2ICON		! converts IFF code to seq. no
	LOGICAL		T2ISEP		! skips separators
	LOGICAL		RDCHS		! raeds char
	LOGICAL		READSTR		! reads a string
	INTEGER*4	CVT_DATE	! converts time string tointeger
C
C Local variables
C
	INTEGER*2	REAPTR		! pointer to start of time
	LOGICAL		RET		! got a real ?
	LOGICAL		EOLN		! end of line ?
	BYTE		NXTCH		! next character
	INTEGER		LEN		! length of string
	CHARACTER*30    TIMSTR		! time string
	INTEGER         DUMMY		! dummy arg
C
C Start of function
C
	RET = .FALSE.			! assume no real found
C
C Check separator is valid
C
	IF (CHECK_SEP) THEN
	   IF (T2ISEP()) GOTO 20
	ENDIF
C
C Get ready to read real
C
	EOLN = RDCHS(NXTCH)		! get next non-blank character
	IF (EOLN) THEN		! check if end of line
	   CALL T2ILIN(.TRUE.)	! read in next input line
	   CALL T2ITST		! test it
	   IF (GOTNXT .AND. (ECDNUM .NE. T2ICON('ST').AND. ECDNUM
     &     .NE. T2ICON('ZS').AND. (ECDNUM .NE.'CB'))) 
     &	   CALL LSL_PUTMSG(IFROM__UNEXPEOE,CURLIN-1)
	ELSE
	   CALL BSCH			! back to start of time string
	ENDIF	! (EOLN)
C
C Read the time string
C
	IF (.NOT. (DONE .OR. GOTNXT)) THEN		! check can read
	   CALL DCPSAV(REAPTR)			! save pointer
	   LEN= READSTR(TIMSTR,,ON_SPACE,,RET)	! read time
C
	   IF (RET) THEN 
C
C need to add on -- to make it a valid date string
	       RET = 	CVT_DATE('-- '//TIMSTR(:LEN),DUMMY,N)
	   ENDIF
	   IF (.NOT.RET) CALL T2ICOR(REAPTR,'Time')	! message if not
	ENDIF
C
C Assign function value
C
20	IF (RET) THEN
	   T2ITIME= .FALSE.
	ELSE
	   T2ITIME= .TRUE.
	ENDIF
C
C Return
C
	RETURN
	END
