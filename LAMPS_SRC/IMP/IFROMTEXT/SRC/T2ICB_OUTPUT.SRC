	SUBROUTINE T2ICB_OUTPUT(CBH,CBD,MOAN,CBLIN)
C
***	MODULE	T2ICB_OUTPUT
***	IDENT	30NO87
C
C Copyright Laser-Scan Laboratories Ltd., Cambridge, England
C
C Author M.W.S. Reid
C
C 	Created					MWSR    30-Oct-1987
C
C outputs a CB entry to IFF file after sorting out various defaults
C
	IMPLICIT NONE
C
C Parameters
***     COMMON/LSL$CMNIFROMTEXT:IFROMMSG.PAR/
C
C Common Blocks
***	COMMON/LSL$CMNIFF:CB.STR/		! CB structure
***     COMMON/LSL$CMNIFROMTEXT:CBCMN.CMN/      ! local CB stuff
***     COMMON/LSL$CMNIFROMTEXT:T2IPAR.CMN/      ! local CB stuff
C
C arguments
	RECORD /IFF_CBH/ CBH		! header record
	RECORD /IFF_CBD/ CBD		! data record
	LOGICAL	 MOAN			! report defaulting
	INTEGER  CBLIN			! line number of CB
C
C Local Variables
C
C warn about defaulting 
	IF (.NOT. MOAN) GOTO 10
	IF (.NOT.HADFL) THEN
	   CALL LSL_PUTMSG(IFROM__FLAGSDEFAULT)
	ENDIF
	IF (.NOT. HADGT) THEN
	    CALL LSL_PUTMSG(IFROM__GTYPEDEFAULT)
	ENDIF
	IF (.NOT. HADNR) THEN
	   CALL LSL_PUTMSG(IFROM__NROWDEFAULT)
	ENDIF
	IF (.NOT. HADNC) THEN
	   CALL LSL_PUTMSG(IFROM__NCOLDEFAULT)
	ENDIF
	IF (.NOT. HADHC) THEN
	   CALL LSL_PUTMSG(IFROM__HCDDEFAULT)
	ENDIF
	IF (.NOT. HADNA) THEN
	   CALL LSL_PUTMSG(IFROM__NATTDEFAULT)
	ENDIF
	IF (.NOT. HADDA)THEN
	   CALL LSL_PUTMSG(IFROM__CBDATADEF)
	ENDIF	
C
10	IF (HADNR)THEN
	   IF (ROWNO .NE. CBH.NROW .AND. MOAN ) THEN
	      CALL LSL_PUTMSG(IFROM__WRNGNROW,CURLIN)
	      CALL LSL_ADDMSG(IFROM__AMENDED)
           ENDIF
	ENDIF
	CBH.NROW  = ROWNO
	IF (HADNA) THEN
	   IF (ATTNO .NE. CBH.NATT .AND. MOAN) THEN	  
	      CALL LSL_PUTMSG(IFROM__WRNGNATT,CURLIN)
	      CALL LSL_ADDMSG(IFROM__AMENDED)
	   ENDIF
	ENDIF
	CBH.NATT = ATTNO
	IF (HCNO .LT. CBH.NCOL .AND. HADHC .AND. MOAN) THEN
	   CALL LSL_PUTMSG(IFROM__MISSHC,CURLIN)
	   CALL LSL_ADDMSG(IFROM__REMHCDEF)
	ENDIF
	IF (HCNO .GT. CBH.NCOL .AND. HADHC .AND. MOAN) THEN
	   CALL LSL_PUTMSG(IFROM__TOOMNYHC,CURLIN)
	   CALL LSL_ADDMSG(IFROM__EXTRAIGN)
	ENDIF
C
C compress the CB
	CALL IFS_CB_COMPRESS(CBH,CBD)
C
C output the CB
	CALL IFFCB(CBH,CBD)
C
	RETURN
	END
