	LOGICAL FUNCTION T2IINF(N,RDERR)
C
***	IDENT	02JL90
***	MODULE	T2IINF
C
C	Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
CMOD	Documentation completed			RJH	15-MAY-1984
C	Created					RJH	27-APR-1984
C
C Description
C
C This function is designed for use by the IFROMTEXT program, and its
C purpose is to read an integer expected on the current input line.
C The function takes the value false if successful, and true if
C i) the number was corrupted, ii) nothing was found on the line, or
C iii) an illegal separator was encountered.
C
C If the function was successful, the first argument returned is the
C integer read. If unsuccessful, this argument will be unchanged unless
C an attempt was made to read an integer, in which case it will be zero.
C The second argument is a logical variable which takes the value true
C if the function failed due to a read error, false if it failed because
C nothing was found on the line.
C Communication with other routines is via the common block T2IPAR.
C
	IMPLICIT NONE
C
C Arguments
C
	INTEGER*2	N		! integer to be read
	LOGICAL		RDERR		! error occurred when reading ?
C
C Common blocks
C
***	COMMON/LSL$CMNIFROMTEXT:T2IPAR/		! global variables
C
C Functions called
C
	LOGICAL		T2ISEP		! skips separators- TRUE for fail
	LOGICAL		RDCHS		! VIOLIB - reads a character
	LOGICAL		RDINT		! VIOLIB - reads an integer
C
C Local variables
C
	INTEGER*2	INTPTR		! pointer to start of integer
	LOGICAL		NODIG		! got an integer ?
	LOGICAL		EOLN		! end of line ?
	BYTE		NXTCH		! next character
C
C Start of function
C
	RDERR = T2ISEP()		! rd. error if separator invalid
	NODIG = .TRUE.			! assume no integer found
C
C Read the integer
C
	IF (.NOT. RDERR) THEN		! check no read error
	   EOLN = RDCHS(NXTCH)		! find next non-blank character
	   IF (.NOT. EOLN) THEN		! check not end of line
	      CALL BSCH			! back to start of integer
	      CALL DCPSAV(INTPTR)	! save pointer
	      NODIG = RDINT(N)		! read integer
	      RDERR = NODIG		! read error if unsuccessful
	      IF (NODIG) CALL T2ICOR(INTPTR,'Integer')
	   ENDIF	! (.NOT. EOLN)
	ENDIF	! (.NOT.RDERR)
C
C Assign function value
C
	T2IINF = NODIG
C
C Return
C
	RETURN
	END
C
