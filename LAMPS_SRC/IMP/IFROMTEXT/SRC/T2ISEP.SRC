	LOGICAL FUNCTION T2ISEP
C
***	IDENT	01OC86
***	MODULE	T2ISEP
C
C	Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
CMOD	Documentation completed			RJH	15-MAY-1984
CMOD	   added TAB as valid separator
C	Created					RJH	27-APR-1984
C
C Description
C
C    This function is designed for use by the IFROMTEXT program, and its
C purpose is to read and skip data separators; blanks, tabs or commas
C are valid. It is expected that the next character on the current input
C line will be either a separator or end of line.
C    The function fails and takes the value true if the first character
C read is other than a separator or end of line. Further separators
C which might appear after the first character read can be commas, or
C blanks and tabs only if they appear before a comma; these are skipped
C if encountered. The input line decoding pointer is set immediately
C after the last valid separator; alternatively, it remains unchanged if
C an end of line was detected on the first character read, or if the
C function failed.
C    Communication with other routines is via the common block T2IPAR.
C
	IMPLICIT NONE
C
C Local Parameters
C
	BYTE		TAB		! tab character
	PARAMETER	(TAB = '11'O)	! ascii octal code
C
C Common blocks
C
***	COMMON/LSL$CMNIFROMTEXT:IFROMMSG.PAR/
***	COMMON/LSL$CMNIFROMTEXT:T2IPAR/		! global variables
C
C Functions called
C
	LOGICAL		RDCHS		! VIOLIB - reads a character
	LOGICAL		RDCH		! VIOLIB - reads a character
C
C Local variables
C
	INTEGER*2	PTR		! pointer to start of data
	LOGICAL		FAIL		! illegal separator ?
	LOGICAL		EOLN		! end of line ?
	BYTE		NXTCH		! next character
C
C Start of Function
C
	FAIL = .FALSE.			! assume function fails
	CALL DCPSAV(PTR)		! save input line pointer
C
C Prepare to deal with next character
C
	EOLN = RDCH(NXTCH)		! read next character
	IF (.NOT. EOLN) THEN		! check not end of line
	   IF ((NXTCH .NE. ' ') .AND. (NXTCH .NE. ',') .AND.
     &	      (NXTCH .NE. TAB)) THEN	! check invalid separator
C
C Illegal separator found
C
	      CALL LSL_PUTMSG(IFROM__ILLEGSEP,NXTCH,CURLIN)
	      FAIL = .TRUE.
	   ELSE
C
C Skip any further valid separators
C
100	      CALL DCPSAV(PTR)		! save input line pointer
	      EOLN = RDCHS(NXTCH)	! get next non-blank/no-tab char
	      IF ((.NOT. EOLN) .AND. (NXTCH .EQ. ',')) GO TO 100
	   ENDIF	! ((NXTCH .NE. ' ') ...)
	ENDIF	! (.NOT. EOLN)
C
C Set pointer after last valid separator or to position on entry
C
	CALL DCPSET(PTR)
C
C Assign function value
C
	T2ISEP = FAIL
C
C Return
C
	RETURN
	END
