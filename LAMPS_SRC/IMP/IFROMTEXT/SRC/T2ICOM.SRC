	INTEGER*4 FUNCTION T2ICOM
C
***	MODULE	T2ICOM
***	IDENT	04AU94
C
C Copyright Laser-Scan Ltd., Cambridge, England
C
C Author M.W.S. Reid
C
CMOD1387 Add /ORIGIN				  JB 03-Aug-1994
CMOD     New /FRT qualifier			MWSR 04-Nov-1987
C
C 	 Created				MWSR 28-Apr-1986
C
	IMPLICIT NONE
C
C Gets command line 
C Returns SS$_NORMAL if all is well	
C  
C Common blocks
	INCLUDE 'LSL$CMNLSL:CLD.CMN'
	INCLUDE 'LSL$CMNLSL:TXTC.CMN'
	INCLUDE 'LSL$CMNIFF:IFFHAN.CMN'
	INCLUDE 'LSL$CMNLSL:EXPC.CMN'
	INCLUDE 'LSL$CMNLSL:STATUS.CMN'
	INCLUDE 'LSL$CMNLSL:LSLLIBMSG.PAR'
	INCLUDE 'LSL$CMNLSL:FILENAME.CMN'
C
	INCLUDE 'LSL$CMNIFROMTEXT:T2ICOM.CMN'
	INCLUDE 'LSL$CMNIFROMTEXT:T2IPAR.CMN'
	INCLUDE 'LSL$CMNIFROMTEXT:IFROMMSG.PAR'
C
	INCLUDE '($SSDEF)'
C
C Command language definitions   
	EXTERNAL	IFROMTEXT_CLD
	INTEGER		IFROMTEXT_CLD
C
C Functions
	INTEGER*4	DCL_STARTUP	! gets and parses the DCL command line	
	INTEGER*4	DCL_QUAL	! looks for specified qualifier
	INTEGER*4	DCL_FILE	! reads and parses file title
C					! from DCL command line
	INTEGER*4	DCL_DBL		! reads and parses /ORIGIN R*8 values
C					! from DCL command line
	INTEGER*4	EXPFLN
C
C Local variables
	LOGICAL		LOCAL		! .T. if qual is local
	LOGICAL		LOCNEG		! set .T. if qual is locally negated
	LOGICAL	        NOFILE
	INTEGER*2	I		! counting variable
	CHARACTER*128   DEFOUT		! default out
	INTEGER*4	DEFLEN		! length of default outfilespec
C
C ......................................................................
C Initialise logicals
C
	LOG  	   = .FALSE.
	ECHO       = .FALSE.
	HAD_FRT	   = .FALSE.
	HAD_ORIGIN = .FALSE.
	ORIGIN(1)  = 0.0
	ORIGIN(2)  = 0.0
C
C Get command line for our command verb IFROMTEXT. DCL_STARTUP will
C return set to SS$_NORMAL if all is well. 
C
	T2ICOM=DCL_STARTUP('IFROMTEXT',.FALSE.,IFROMTEXT_CLD,.TRUE.)
	IF (.NOT.T2ICOM) GOTO 1000
C
C Check for /ECHO
	T2ICOM=DCL_QUAL('ECHO',ECHO,LOCAL,LOCNEG,.TRUE.)
	IF (.NOT.T2ICOM) GOTO 1000
C
C Check for /LOG
	T2ICOM=DCL_QUAL('LOG',LOG,LOCAL,LOCNEG,.TRUE.)
	IF (.NOT.T2ICOM) GOTO 1000
C
C Check for /FRT
	T2ICOM=DCL_QUAL('FRT',HAD_FRT ,LOCAL,LOCNEG,.TRUE.)
	IF (.NOT.T2ICOM) GOTO 1000
C
	IF (HAD_FRT) THEN
	    T2ICOM=DCL_FILE('FRT','LSL$FRT:FRT.FRT',NOFILE,.FALSE.,.TRUE.)
	    IF (.NOT.T2ICOM) GOTO 1000
C
	    T2ICOM=EXPFLN(FRT_FILE,FRT_LEN)
	    IF(.NOT.T2ICOM) CALL LSL_PUTMSG(T2ICOM)
	ENDIF
C
C Check for /ORIGIN
	T2ICOM=DCL_QUAL('ORIGIN',HAD_ORIGIN,LOCAL,LOCNEG,.TRUE.)
	IF (.NOT.T2ICOM) GOTO 1000
C
	IF (HAD_ORIGIN) THEN
	    T2ICOM = DCL_DBL('ORIGIN',.TRUE.)
	    IF (.NOT.T2ICOM) GOTO 1000
C
	    IF (NUMDBL.NE.2) THEN
		CALL LSL_PUTMSG(IFROM__ERRORIGIN)
		T2ICOM = IFROM__ERRORIGIN
		GOTO 1000
	    ENDIF
C
	    ORIGIN(1) = DBLRAY(1)
	    ORIGIN(2) = DBLRAY(2)
	ENDIF
C
C Now get the command parameters, in our case they are the input 
C file and the output file. First the input file, and copy it to
C the input file variables.
C
	   T2ICOM=DCL_FILE('IN_FILESPEC','SYS$DISK:IFROMTEXT.TXT;0',
     &					NOFILE,.FALSE.,.TRUE.)
C
C Transfer the file-spec to our local variable
C
	IF (T2ICOM) THEN
	   INPFIL = FILARY(1)(:FIL_LEN(1))	   	    	   
	   INPLEN = FIL_LEN(1)
	   TERMIN = (INPFIL(:10).EQ.'SYS$INPUT:'.OR.INPFIL(:3).EQ.'TT:')
	   IF (TERMIN) INPLEN = 10
C
C and work out default out file spec
C
	   STR_DEV = 'LSL$IF'		! force IF:
	   LEN_DEV = 6
	   HAD_DEV = .TRUE.
	   HAD_DIR = .FALSE.		! no directory
	   STR_EXT = 'IFF'
	   HAD_EXT = .TRUE.
	   LEN_EXT = 3
	   HAD_VER = .FALSE.		! no version number
	   CALL EXPFLN(DEFOUT,DEFLEN)
	ELSE
	   GOTO 1000
        ENDIF
C
	T2ICOM=DCL_FILE('OUT_FILESPEC'	! parameter or qualifier label
     &	   	   ,DEFOUT(1:DEFLEN)	! default filename
     &	   	   ,NOFILE		! .T. if no filename found
     &		   ,.FALSE.		! don't expect list of filenames
     &		   ,.TRUE.)		! .T. - local error reporting
C
C Transfer the file-spec to our local variable
C
	IF (T2ICOM) THEN
	   IF (NOFILE) THEN
	      OUTPFIL = DEFOUT(1:DEFLEN)
	      OUTPLEN = DEFLEN
	   ELSE
	      OUTPFIL=FILARY(1)(:FIL_LEN(1))	   	    	   
	      OUTPLEN=FIL_LEN(1)
	   ENDIF
	ELSE		
	   GOTO 1000                   
        ENDIF
C
1000	IF(T2ICOM.EQ.LSL__NORMAL) T2ICOM = SS$_NORMAL
C
	RETURN
	END
C
