C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1986-11-07 12:22:28.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE T2IIGN
C
***	IDENT	01OC86
***	MODULE	T2IIGN
C
C	Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
CMOD	Documentation completed			RJH	15-MAY-1984
C	Created					RJH	03-APR-1984
C
C Description
C
C    This subroutine is designed for use by the IFROMTEXT program, and its
C purpose is to deal with junction and void entries in the input text
C file.
C    On entry to this subroutine, the next entry code in the text file
C is expected to have been read in. A message is output to the terminal
C warning the operator that the entry is to be ignored.
C    Communication with other routines is via the common block T2IPAR.
C
	IMPLICIT NONE
C
C Common blocks
C
***	COMMON/LSL$CMNIFROMTEXT:T2IPAR/		! global variables
***	COMMON/LSL$CMNIFROMTEXT:IFROMMSG.PAR/
C
C Variable
	CHARACTER*2	OUTSTR
C Start of subroutine
C
	GO TO (10,20,30,40,50), ECDNUM
C
C VO entry
C
10	OUTSTR =  'VO'
	GO TO 100
C
C JP entry
C
20	OUTSTR = 'JP'
	GO TO 100
C
C JB entry
C
30	OUTSTR = 'JB'
	GO TO 100
C
C SH entry
C
40	OUTSTR = 'SH'
	GO TO 100
C
C HI entry
C
50	HADHI = .TRUE. 
	GOTO 1000
C
C Append rest of message to buffer, and output
C
100	CALL LSL_PUTMSG(IFROM__ENTIGN,OUTSTR,CURLIN)
C
C Skip to next entry in text file
C
1000	CALL T2ISKP
C
C Return
C
	RETURN
	END
