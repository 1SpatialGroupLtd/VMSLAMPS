	LOGICAL FUNCTION T2IMHT(MHTEXT)
C
***	IDENT	01OC86
***	MODULE	T2IMHT
C
C	Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
CMOD	Documentation completed			RJH	15-MAY-1984
C	Created					RJH	02-MAY-1984
C
C Description
C
C    This function is designed for use by the IFROMTEXT program, and its
C purpose is to skip the map header (MH) entry in the input file, if
C this entry is in the readable format.
C    The function takes the value false if successful, and true if
C i) an illegal separator was encountered on the first line of the
C entry, or ii) an input file read error occurred.
C    The argument returned will be true if the MH entry was in the
C readable format, false otherwise.
C    Communication with other routines is via the common block T2IPAR.
C
	IMPLICIT NONE
C
C Arguments
C
	LOGICAL		MHTEXT		! true if MH in text format
C
C Common blocks
C
***	COMMON/LSL$CMNIFROMTEXT:T2IPAR/		! global variables
***     COMMON/LSL$CMNIFROMTEXT:IFROMMSG.PAR/
C
C Functions called
C
	LOGICAL		T2ISEP		! skips separators
	LOGICAL		RDCHS		! VIOLIB - reads a character
C
C Local variables
C
	INTEGER*2	TEMPTR		! decode pointer value on entry
	LOGICAL		FAIL		! true if separator is illegal
	LOGICAL		EOLN		! end of line ?
	BYTE		NXTCH		! next character
C
C Start of function
C
	CALL DCPSAV(TEMPTR)		! save input line pointer
	MHTEXT = .FALSE.		! assume MH not readable format
	FAIL = T2ISEP()			! fail if separator illegal
	IF (.NOT. FAIL) THEN		! check if not failed yet
C
C Find map header data
C
	   EOLN = RDCHS(NXTCH)		! get next non-blank character
	   IF (.NOT. EOLN) THEN		! check not end of line
	      IF (NXTCH .EQ. '*') THEN	! check if readable MH entry
100		 MHTEXT = .TRUE.	! have readable MH entry
		 CALL T2ILIN		! read in next line
		 IF ((FIRST .NE. '*') .AND. (.NOT. DONE)) GO TO 100
C					! repeat if not reached end of
C					! entry and not finished
	      ELSE
		 CALL DCPSET(TEMPTR)	! reset pointer to posn on entry
	      ENDIF	! (NXTCH .EQ. '*')
	   ENDIF	! (.NOT. EOLN)
	ENDIF	! (.NOT. FAIL)
C
C Assign function value
C
	T2IMHT = (FAIL .OR. DONE)
C
C Return
C
	RETURN
	END
