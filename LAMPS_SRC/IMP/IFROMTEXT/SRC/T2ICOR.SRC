	SUBROUTINE T2ICOR(BEGPTR,TYPSTR)
C
***	IDENT	01OC86
***	MODULE	T2ICOR
C
C	Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
CMOD	Documentation completed			RJH	15-MAY-1984
C	Created					RJH	25-APR-1984
C
C Description
C
C    This subroutine is designed for use by the IFROMTEXT program, and its
C purpose is to output a message when corrupted data has been found on
C the current input line.
C    Arguments expected are a copy of the input line decoding pointer
C before the data was read, and a character string describing the data.
C    If the pointer passed has the same value as the current decoding
C pointer, it is assumed that an illegal character was found before the
C data could be read. Otherwise, it is assumed that several characters
C have been read and the data corrupted in some way. In either case the
C characters are echoed in the message output.
C    Communication with other routines is via the common block T2IPAR.
C
	IMPLICIT NONE
C
C Arguments
C
	INTEGER*2	BEGPTR		! pointer to start of number
	CHARACTER*(*)	TYPSTR		! string describing number type
C
C Common blocks
C
***	COMMON/LSL$CMNIFROMTEXT:T2IPAR/		! global variables
***     COMMON/LSL$CMNIFROMTEXT:IFROMMSG.PAR/
***     COMMON/LSL$CMNLSL:LSLLIBMSG.PAR/
C
C Functions called
C
	LOGICAL		RDCH		! VIOLIB - reads a character
C
C Local variables
C
	INTEGER*2	ENDPTR		! pointer to end of number
	INTEGER*2	TEMPTR		! pointer to current character
	LOGICAL		EOLN		! end of line ?
	BYTE		NXTCH		! next character
C
C Start of function
C
	CALL DCPSAV(ENDPTR)		! save current pointer
C
C Output appropriate message
C
	IF (BEGPTR .EQ. ENDPTR) THEN	! check pointers equal
	   EOLN = RDCH(NXTCH)		! get next character
	   CALL LSL_PUTMSG(IFROM__ILLEGCHAR,TYPSTR,CURLIN,NXTCH)
	   CALL DCPSET(ENDPTR)		! reset pointer
	ELSE
	   CALL DCPSET(BEGPTR)		! pointer to start of data
100	   EOLN = RDCH(NXTCH)		! get next character
	   CALL DCPSAV(TEMPTR)		! save current pointer
	   IF (TEMPTR .LT. ENDPTR) GO TO 100	! repeat if not end data
	   CALL LSL_PUTMSG(IFROM__CORRUPT,TYPSTR,NXTCH,CURLIN)
	ENDIF	! (BEGPTR .EQ. ENDPTR)
C
C Return
C
	STATUS = LSL__NORMAL
	RETURN
	END
