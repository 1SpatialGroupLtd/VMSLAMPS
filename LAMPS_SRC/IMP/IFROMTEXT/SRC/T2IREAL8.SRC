C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1994-08-09 16:50:48.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL FUNCTION T2IREAL8(REAL8,CHECK_SEP)
C
***	IDENT	09AU94
***	MODULE	T2IREAL8
C
C	Copyright Laser-Scan Ltd., Cambridge, England.
C
C	Created					MWSR 01-Dec-1986
C	based on T2IREA				 RJH
C
CMOD1387Add T2ISEP for /ORIGIN			  JB 08-Aug-1994
C
C Description
C
C This function is designed for use by the IFROMTEXT program, and its
C purpose is to read the next real*8 in the input file. If not found on
C the current line, a real is expected on the next non-blank line.
C
C The function takes the value false if successful, and true if:
C   i) the number was corrupted,
C  ii) the number was not found before the
C      next IFF code,
C iii) an illegal separator was encountered, or
C  iv) an input file read error occurred.
C
C If the function was successful, the argument returned is the
C real read. If unsuccessful, the argument will be unchanged unless
C an attempt was made to read a real, in which case it will be zero.
C Communication with other routines is via the common block T2IPAR.
C
	IMPLICIT NONE
C
C Arguments
	REAL*8	REAL8				! real to be read
	LOGICAL	CHECK_SEP			! .T. if to check valid
C
C Common blocks
***     COMMON/LSL$CMNIFROMTEXT:IFROMMSG.PAR/	! messages
***	COMMON/LSL$CMNIFROMTEXT:T2IPAR/		! global variables
C
C Functions called
	INTEGER*4	T2ICON			! converts IFF code to seq. no
	LOGICAL		T2ISEP			! skips separators
	LOGICAL		RDCHS			! - reads a character
	LOGICAL		RREAL8			! - reads a real
C
C Local variables
	INTEGER*2	REAPTR			! pointer to start of real
	LOGICAL		NODIG			! got a real ?
	LOGICAL		EOLN			! end of line ?
	BYTE		NXTCH			! next character
C
c ----------------------------------------------------------------------
C Start of function
C
	NODIG = .TRUE.				! assume no real found
C
C Check separator is valid
C
	IF (CHECK_SEP) THEN
	  IF (T2ISEP()) GOTO 20
	ENDIF
C
C Get ready to read real
C
	EOLN = RDCHS(NXTCH)			! get next non-blank character
	IF (EOLN) THEN				! check if end of line
	   CALL T2ILIN(.TRUE.)			! read in next input line
	   CALL T2ITST				! test it
C
	   IF (GOTNXT .AND. (ECDNUM .NE. T2ICON('ST') .AND.
     &			     ECDNUM .NE. T2ICON('ZS') .AND.
     &			     ECDNUM .NE. T2ICON('CB')))
     &	     CALL LSL_PUTMSG(IFROM__UNEXPEOE,CURLIN-1)
C
	ELSE
	   CALL BSCH					! back to start of real
	ENDIF	! (eoln)
C
C Read the real*8
C
	IF (.NOT. (DONE.OR.GOTNXT)) THEN		! check can read
	   CALL DCPSAV(REAPTR)				! save pointer
	   NODIG = RREAL8(REAL8)			! read real*8
	   IF (NODIG) CALL T2ICOR(REAPTR,'Real')	! message if not
	ENDIF	! (.not. (done .or. gotnxt))
C
C Assign function value
C
20	T2IREAL8 = NODIG
C
C Return
	RETURN
	END
C
