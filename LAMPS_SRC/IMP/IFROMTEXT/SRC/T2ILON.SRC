	LOGICAL FUNCTION T2ILON(N,CHECK_SEP)
C
***	IDENT	05NO87
***	MODULE	T2ILON
C
C	Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
CMOD    Extra argument and cope with CB        MWSR     02-NOV-1987
CMOD	Documentation completed			RJH	15-MAY-1984
C	Created					RJH	03-APR-1984
C
C Description
C
C    This function is designed for use by the IFROMTEXT program, and its
C purpose is to read the next long integer in the input file. If not
C found on the current line, a long integer is expected on the next
C non-blank line.
C    The function takes the value false if successful, and true if
C i) the number was corrupted, ii) the number was not found before the
C next IFF code, iii) an illegal separator was encountered, or
C iv) an input file read error occurred.
C    If the function was successful, the argument returned is the
C long integer read. If unsuccessful, the argument will be unchanged
C unless an attempt was made to read a long integer, in which case it
C will be zero.
C    Communication with other routines is via the common block T2IPAR.
C
	IMPLICIT NONE
C
C Arguments
C
	INTEGER*4	N		! integer to be read
	LOGICAL	CHECK_SEP		! IN - true if to check for
C					! valid separator
C
C Common blocks
C
***     COMMON/LSL$CMNIFROMTEXT:IFROMMSG.PAR/
***	COMMON/LSL$CMNIFROMTEXT:T2IPAR/		! global variables
C
C Functions called
C
	LOGICAL		T2ISEP		! skips separators
	LOGICAL		RDCHS		! VIOLIB - reads a character
	LOGICAL		RDLONG		! VIOLIB - reads a long integer
	LOGICAL		T2ICON
C
C Local variables
C
	INTEGER*2	LONPTR		! pointer to start of integer
	LOGICAL		NODIG		! got an integer ?
	LOGICAL		EOLN		! end of line ?
	BYTE		NXTCH		! next character
C
C Start of function
C
	NODIG = .TRUE.			! assume no long integer found
C
C Check separator is valid
C
	IF (CHECK_SEP) THEN
	  IF (T2ISEP()) GOTO 20
	ENDIF
C
C Get ready to read long integer
C
	EOLN = RDCHS(NXTCH)		! get next non-blank character
	IF (EOLN) THEN		! check if end of line
	   CALL T2ILIN(.TRUE.)	! read in next input line
	   CALL T2ITST		! test it
	   IF (GOTNXT .AND. (ECDNUM .NE. T2ICON('ST').AND. ECDNUM
     &     .NE. T2ICON('ZS').AND. ECDNUM .NE. T2ICON('CB'))) 
     &	   CALL LSL_PUTMSG(IFROM__UNEXPEOE,CURLIN-1)
	ELSE
	   CALL BSCH			! back to start of long integer
	ENDIF	! (EOLN)
C
C Read the long integer
C
	IF (.NOT. (DONE .OR. GOTNXT)) THEN		! check can read
	   CALL DCPSAV(LONPTR)			! save pointer
	   NODIG = RDLONG(N)				! read integer
	   IF (NODIG) CALL T2ICOR(LONPTR,'Integer')	! message if not
	ENDIF	! (.NOT. (DONE .OR. GOTNXT))
C
C Assign function value
C
20	T2ILON = NODIG
C
C Return
C
	RETURN
	END
