	INTEGER*4 FUNCTION I2TCOM
C
***	MODULE	I2TCOM
***	IDENT	15MY95
C
C 	Copyright Laser-Scan Ltd., Cambridge, England
C
C 	Author M.W.S. Reid
C
CMOD1491 Add /QUOTED_TEXT.	  			  JB 15-May-1995
C
CMOD1387 Add /ABSOLUTE,WIDTH,DECIMAL_PLACES etc.	  JB 22-Jul-1994
C
CMOD	REVISION_LEVEL switch added		        MWSR    Nov-1987
CMOD	Default output file spec now defaults to HERE:
C	(SYS$DISK:)					 TJH 11-Nov-1986
CMOD	References to I2TEXT changed to ITOTEXT!	 TJH 01-Oct-1986
C
C 	Created						MWSR 23-Apr-1985
C
	IMPLICIT NONE
C
C Gets command line 
C Returns SS$NORMAL if all is well	
C
C Common blocks
	INCLUDE 'LSL$CMNLSL:CLD.CMN'
	INCLUDE 'LSL$CMNLSL:TXTC.CMN'
	INCLUDE 'LSL$CMNIFF:IFFHAN.CMN'
	INCLUDE 'LSL$CMNLSL:EXPC.CMN'
	INCLUDE 'LSL$CMNLSL:STATUS.CMN'
	INCLUDE 'LSL$CMNLSL:LSLLIBMSG.PAR'
	INCLUDE 'LSL$CMNITOTEXT:ITOTEXTMSG.PAR'
	INCLUDE 'LSL$CMNLSL:FILENAME.CMN'
	INCLUDE 'LSL$CMNITOTEXT:I2TCOM.CMN'
	INCLUDE '($SSDEF)'
C
C Command language definitions:
	EXTERNAL	ITOTEXT_CLD
	INTEGER		ITOTEXT_CLD
C
C Functions:
	INTEGER*4	DCL_FILE	! reads and parses file title
C					! from DCL command line
	INTEGER*4	DCL_QUAL	! looks for specified qualifier
	INTEGER*4	DCL_STARTUP	! gets and parses the DCL 
	INTEGER*4	DCL_INT		! gets an integer
	INTEGER*4	EXPFLN
C
C Local variables:
	INTEGER*2	I		! counting variable
	LOGICAL		LOCNEG		! qualifier locally negated?
	LOGICAL		LOCAL		! qualifier local to parameter
	LOGICAL		NOFILE		! .T. if no filename found
	CHARACTER*255   DEFOUT		! default out
	INTEGER*4	DEFLEN		! length of default outfilespec
C
C ......................................................................
C Initialise logicals
	ADDRESS		= .FALSE.
	CUSTOMER 	= .FALSE.
	KEEP 		= .FALSE.
	LOG 		= .FALSE.
	PRINTER 	= .FALSE.
	MH 		= .FALSE.
	BRIEF 		= .FALSE.
	FIRST 		= .FALSE.
	HAD_FRT 	= .FALSE.
	HAD_ABS		= .FALSE.	! had no absolute qual
	HAD_WID		= .FALSE.	! had no width qual
	HAD_DP		= .FALSE.	! had no decimal_places qual
	HAD_QUOTED	= .TRUE.	! ON by default
C
C Get command line for our command verb ITOTEXT. DCL_STARTUP will return
C set to LSL__NORMAL if all is well. 
C
	I2TCOM=DCL_STARTUP('ITOTEXT',.FALSE.,ITOTEXT_CLD,.TRUE.)
	IF (.NOT.I2TCOM) GOTO 1000
C
C Check for /LOG
	I2TCOM = DCL_QUAL('LOG',LOG,LOCAL,LOCNEG,.TRUE.)
	IF (.NOT.I2TCOM) GOTO 1000
C
C----------------------------------------------------------------
C now search for the qualifier 'QUOTED_TEXT'
C
	I2TCOM = DCL_QUAL('QUOTED_TEXT',! qual name
     &			HAD_QUOTED,	! returned .T. if qual found
     &			LOCAL,		! set if qual local to parameter
     &			LOCNEG,		! set if qual negated locally
     &			.TRUE.)		! set-local error reporting
C
	IF (.NOT.I2TCOM) GOTO 1000
C
C----------------------------------------------------------------
C now search for the qualifier 'ABSOLUTE'
C
	I2TCOM = DCL_QUAL('ABSOLUTE',	! qual name
     &			HAD_ABS,	! returned .T. if qual found
     &			LOCAL,		! set if qual local to parameter
     &			LOCNEG,		! set if qual negated locally
     &			.TRUE.)		! set-local error reporting
C
	IF (.NOT.I2TCOM) GOTO 1000
C
C----------------------------------------------------------------
C now search for the qualifier 'WIDTH' for decimal places in
C absolute coordinate output
C
	I2TCOM = DCL_QUAL('WIDTH',	 	! qual name
     &        		HAD_WID,		! returned .T. if qual found
     &			LOCAL,			! set if qual local to parameter
     &			LOCNEG,			! set if qual negated locally
     &			.TRUE.)			! set-local error reporting
C
	IF (.NOT.I2TCOM) GOTO 1000
C
	IF (HAD_WID) THEN
C
C If the qualifier was given, get the value 
C
	   I2TCOM = DCL_INT('WIDTH',.TRUE.)
	   IF (.NOT.I2TCOM) GOTO 1000
C
	   WIDTH = IARRAY(1)
	   IF (WIDTH.GT.20 .OR. WIDTH.LT.0) THEN
	      CALL LSL_PUTMSG(ITOTEXT__BADWIDTH, WIDTH)
	      I2TCOM = ITOTEXT__BADWIDTH
	      GOTO 1000
	   ENDIF
	ENDIF
C
C Now search for the qualifier 'DECIMAL_PLACES' for decimal places in
C absolute coordinate output
C
	I2TCOM = DCL_QUAL('DECIMAL_PLACES', 	! qual name
     &        		HAD_DP,			! returned .T. if qual found
     &			LOCAL,			! set if qual local to parameter
     &			LOCNEG,			! set if qual negated locally
     &			.TRUE.)			! set-local error reporting
C
	IF (.NOT.I2TCOM) GOTO 1000
C
	IF (HAD_DP) THEN
C
C If the qualifier was given, get the value 
C
	   I2TCOM = DCL_INT('DECIMAL_PLACES',.TRUE.)
	   IF (.NOT.I2TCOM) GOTO 1000
C
	   NUM_DP = IARRAY(1)
	   IF (NUM_DP.GT.16 .OR. NUM_DP.LT.0) THEN
	      CALL LSL_PUTMSG(ITOTEXT__BADNUMDP, NUM_DP)
	      I2TCOM = ITOTEXT__BADNUMDP
	      GOTO 1000
	   ENDIF
	ENDIF
C
C Check if the supplied width is less than the supplied number of 
C decimal places
C
	IF (HAD_DP .AND. HAD_WID) THEN
	   IF (WIDTH.LT.NUM_DP) THEN
	      CALL LSL_PUTMSG(ITOTEXT__BADWIDTH, WIDTH)
	      I2TCOM = ITOTEXT__BADWIDTH
	      GOTO 1000
	   ENDIF
	ENDIF
C
C----------------------------------------------------------------
C Check for /ADDRESS
	I2TCOM=DCL_QUAL('ADDRESS',ADDRESS,LOCAL,LOCNEG,.TRUE.)
	IF (.NOT.I2TCOM) GOTO 1000
C
C Check for /CUSTOMER
	I2TCOM=DCL_QUAL('CUSTOMER',CUSTOMER,LOCAL,LOCNEG,.TRUE.)
	IF (.NOT.I2TCOM) GOTO 1000
C
C Check for /KEEP
	I2TCOM=DCL_QUAL('KEEP',KEEP,LOCAL,LOCNEG,.TRUE.)
	IF (.NOT.I2TCOM) GOTO 1000
C
C Check for /PRINTER
	I2TCOM=DCL_QUAL('PRINTER',PRINTER,LOCAL,LOCNEG,.TRUE.)
	IF (.NOT.I2TCOM) GOTO 1000
C
C Check for /MH
	I2TCOM=DCL_QUAL('MH',MH,LOCAL,LOCNEG,.TRUE.)
	IF (.NOT.I2TCOM) GOTO 1000
C
C Check for /BRIEF
	I2TCOM=DCL_QUAL('BRIEF',BRIEF,LOCAL,LOCNEG,.TRUE.)
	IF (.NOT.I2TCOM) GOTO 1000
C
C Check for /FRT
	I2TCOM=DCL_QUAL('FRT',HAD_FRT,LOCAL,LOCNEG,.TRUE.)
	IF (.NOT.I2TCOM) GOTO 1000
c
	IF (HAD_FRT) THEN
	    I2TCOM=DCL_FILE('FRT','LSL$FRT:FRT.FRT',
     &					NOFILE,.FALSE.,.TRUE.)
	    IF (.NOT. I2TCOM) GOTO 1000
	    I2TCOM=EXPFLN(FRT_FILE,FRT_LEN)
	    IF(.NOT.I2TCOM) CALL LSL_PUTMSG(I2TCOM)
	ENDIF
C
C Check for /REVISION_LEVEL
	I2TCOM=DCL_QUAL('REVISION_LEVEL', HAD_REVISION,
     &					  LOCAL,LOCNEG,.TRUE.)
C
	IF (HAD_REVISION) THEN
	   I2TCOM=DCL_INT('REVISION_LEVEL',.TRUE.)
	   IF (.NOT. I2TCOM) GOTO 1000
	   IF (IARRAY(1).LT.-1 .OR. IARRAY(1).GT.1) THEN
	      I2TCOM=ITOTEXT__INVALREV
	      CALL LSL_PUTMSG(I2TCOM,IARRAY(1))
	      GOTO 1000
	   ENDIF
	   REV_LEVEL = IARRAY(1)
	ENDIF
C
C Now get the command parameters, in our case they are the input 
C file and the output file. First the input file, and copy it to
C the input file variables.
C
	 I2TCOM=DCL_FILE('IN_FILESPEC','LSL$IF:IFF.IFF;0',NOFILE,
     &				.FALSE.,.TRUE.)
C
C Transfer the file-spec to our local variable
C
	IF (I2TCOM) THEN
	   INPFIL=FILARY(1)(:FIL_LEN(1))
	   INPLEN=FIL_LEN(1)
C
C and work out default out-file spec
C
	   STR_EXT = 'TXT'
	   HAD_EXT = .TRUE.
	   LEN_EXT = 3
	   HAD_VER = .FALSE.
	   LEN_DEV = 8
	   STR_DEV = 'SYS$DISK'
	   HAD_DIR = .FALSE.
	   CALL EXPFLN(DEFOUT,DEFLEN)
	ELSE		
	   GOTO 1000
        ENDIF
C
	I2TCOM=DCL_FILE('OUT_FILESPEC',DEFOUT(:DEFLEN),NOFILE,.FALSE.
     &					,.TRUE.)
C
C Transfer the file-spec to our local variable
C
	IF (I2TCOM) THEN
	   IF (NOFILE) THEN
	       OUTPFIL = DEFOUT(:DEFLEN)
	       OUTPLEN = DEFLEN
	   ELSE
	      OUTPFIL = FILARY(1)(:FIL_LEN(1))	   	    	   
	      OUTPLEN = FIL_LEN(1)
	   ENDIF
	ELSE		
	   GOTO 1000
        ENDIF
C
C ......................................................................
C
1000	IF(I2TCOM.EQ.LSL__NORMAL) I2TCOM=SS$_NORMAL
C
	RETURN
	END
C
