C	Intended to replace EXPFLT
C
	SUBROUTINE FLTEXP(X,BUF)
C
***	IDENT	10NO86
***	MODULE	FLTEXP
C
C	Copyright : Laser-Scan Laboratories Ltd., Cambridge, England
C	Created   : ACM					Mar 1985
C
CMOD	RETURN statement added				TJH 11-Nov-1986
C
	IMPLICIT NONE
C
C parameters in
	REAL*4		X		! real*4 to be converted
	BYTE		BUF(18)		! buffer to return conversion
C
C workspace
	INTEGER		I,J,K		! buffer indices
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
C	Converts REAL*4 X into a  BYTE array of character codes
C	representing X as a decimal number with the '.' in BUF(11),
C	and up to 9 digits before, and 7 digits after the '.'
C
C	Because a REAL*4 cannot have more than 7 significant digits
C	in its mantissa, providing X does not overflow this buffer
C	due to too large an exponent, both the exponent and the
C	complete mantissa can be retrieved from this representation
C	without any loss of information (as with E notation).
C
C	If X overflows field it is written in E format.
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
	IF (ABS(X).GT.1E10.OR.ABS(X).LT.1E-7) THEN
	  IF (X.EQ.0) THEN		! special case X = "0.0"
	    CALL EXPAND('%W         0.0      ',BUF)
	  ELSE				! overflow
	    CALL EXPAND('%W%E7     ',BUF,X)
	  END IF
	  GOTO 80			! return
	END IF
C 
	X = X+SIGN(X*1.0E-7,X)		! assist correct rounding (???)
	CALL EXPAND('%W%F18.7',BUF,X)	! set up crude representation
	BUF(11) = '.'			! EXPAND is a bit odd here
C 
	I = 0
20	I = I+1
	IF (BUF(I).EQ.' ') GOTO 20	! find 1st non space
	IF (BUF(I).EQ.'-') I = I+1	! I is pos of 1st digit
C 
	IF (BUF(I).EQ.'0') THEN		! 1st digit '0'
	  I = I+1			! skip '.'
30	  I = I+1
	  IF (BUF(I).EQ.'0') GOTO 30	! find 1st significant digit
	END IF
C 
	J = I+6				! approx pos of last sig digit
C 
	IF (J.GT.11) THEN		! lst sig fig past '.'
	  IF (I.LE.10) J = J+1		! true pos of last sig digit
	  K = MIN(J+1,19)		! wipe from next place
	ELSE
	  K = 13			! wipe from 2nd dec place
	  IF (J.LT.11) THEN		! clear non-sig figs
	    DO 40 I = J+1,10
40	    BUF(I) = '0'
	    BUF(12) = '0'
	  END IF
	END IF
C 
	DO 50 I = K-1,13,-1		! clear any trailing '0's
	IF (BUF(I).NE.'0') GOTO 60
50	BUF(I) = ' '
C 
60	DO 70 I = K,18			! clear other trailing digits
70	BUF(I) = ' '
C 
80	RETURN
	END
