C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1986-11-05 15:08:22.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	INTEGER*4 FUNCTION EXPFL8(FLT,BUFFER,BUFSIZ)
C
***	IDENT	30OC86
***	MODULE	EXPFL8
C
C Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C Adapted from code written by DM		RJH	07-MAR-1984
C
C Description
C
C    This function converts a real number into a byte string with seven
C significant digits. Arguments passed from the calling routine are the
C real number, a buffer into which the byte string is to be placed, and
C the length of the buffer. The function returns the byte string, and 
C takes the value of the number of characters in the string.
C    Note that the accuracy of the last digit is not guaranteed.
C
	IMPLICIT NONE
C
C Arguments
C
	REAL*8		FLT		! real number
	INTEGER*4	BUFSIZ		! buffer length
	BYTE		BUFFER(BUFSIZ)	! buffer
C
C Functions called
C
	INTEGER*4	EXPAND		! VIOLIB - places text in buffer
C
C Local variables
C
	INTEGER*2	I,J		! counters
	INTEGER*4	ALL		! error code
	BYTE		ICH		! current character
C
C Start of routine
C
	   ALL=EXPAND('%W%F0.15',
     &		    BUFFER,FLT + SIGN(FLT*1.0E-15,FLT))
C
C ... don't display more than is necessary/justified.
	   I=0
	   J=0
260	   I=I + 1			! I is position in BUFFER
	      ICH=BUFFER(I)
	      IF (ICH.EQ.'-') GO TO 260	! ignore sign
	      IF (ICH.EQ.'.') GO TO 270
	      J=J + 1			! J is number of sig. figs
	      IF (J.LE.15) GO TO 260	! (max is 7 for real*4)
	      BUFFER(I)='0'		! don't output random gunk
	   GO TO 260
C
C ... found decimal point - deal with decimals.
270	   I=I + 1
	      J=J + 1
	      IF (J.GT.15) GO TO 280	! check we're still significant
	      IF (I.EQ.ALL) GO TO 290	! got to last character ?
	   GO TO 270
280	   BUFFER(I)='0'		! don't output random gunk
C
C ... now lose trailing zeros (I points to last character).
290	   I=I - 1
	   IF (BUFFER(I+1).EQ.'0'.AND.BUFFER(I).NE.'.') GO TO 290
	   BUFFER(I+2)=0			! zero terminate string
C
C Finish up
C
	   EXPFL8 = I+1			! number of chars in string
C
C Return
C
	   RETURN
	   END
