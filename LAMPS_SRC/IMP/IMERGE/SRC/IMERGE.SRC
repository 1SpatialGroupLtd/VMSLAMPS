	PROGRAM IMERGE
C
***	MODULE	IMERGE
***	IDENT	17SE86
C
C
C	Copyright Laser-Scan Laboratories Ltd., Cambridge, England
C
C	Author						TJH  13-Jan-1986
C
C IMERGE takes up to 7 input IFF files and concatentates them into a
C single IFF output file. Optionally, two output IFF files may be
C produced. The first contains all data which lay within IFF layers
C specified on the IMERGE command line with the /LAYER qualifier. The
C second output file contains all data that were not selected for the
C first output file. The two output file mode of IMERGE is invoked with
C the /SPLIT qualifier. For details of IMERGE command syntax see the
C comment block at the head of CMDLIN.SRC. 
C
C IMERGE is by necessity a complex program, consolidating layer
C fragments from the input files and sending the results to possibly two
C output files on the basis of user layer selection. To aid fault
C diagnosis the  /DEBUG qualifier is recommended for Laser-Scan Software
C use. 
C
C ......................................................................
C
	IMPLICIT NONE
C
	INCLUDE 	'($SSDEF)'
	INCLUDE 	'($STSDEF)'
	INCLUDE		'LSL$CMNIMERGE:PARAMS.PAR'
	INCLUDE		'LSL$CMNIMERGE:IMERGEMSG.PAR'
	INCLUDE		'LSL$CMNIMERGE:COMMAND.CMN'
	INCLUDE		'LSL$CMNIMERGE:OVLST.CMN'
	INCLUDE		'LSL$CMNIMERGE:OVRS.CMN'
	INCLUDE 	'LSL$CMNLSL:STATUS.CMN'
C
	CHARACTER*256	CMDSTR	! cmd. string altered for parsing
	CHARACTER*256	USRSTR	! cmd. string as typed
	INTEGER		LINLEN	! length of cmd. string
	INTEGER		USRLEN	! length of cmd. string (as typed)
C
C Functions:
	LOGICAL		CMDLIN	! gets/does parse on cmd line
	LOGICAL		DESCHK	! checks input file MD data
	LOGICAL		DUPFIL	! checks for duplicate filenames
	LOGICAL		IFFLYR	! scans and collects all layers
	LOGICAL		IFFMER	! actually does the merge
	LOGICAL		PARSE2	! gets values from cmd line
C
	INTEGER*4	I,J	! tmp. vars.
C ......................................................................
C
C Initialise things.
C
	CALL LSL_INIT(.TRUE.)	! start collecting timing statistics
C
C Get and perform 1st stage of parse on command line. Only results
C returned are via argument list. All error message output is done
C within CMDLIN().
C
	LSL_STATUS=CMDLIN(CMDSTR,LINLEN,USRSTR,USRLEN)
C
	IF (LSL_STATUS) THEN
C 
C Perform second stage parse on command line. All flags, arguments
C and filenames are returned in /COMMAND/, /OVRS/ and /OVLST/. All 
C error message output is done within PARSE2().
C
	   LSL_STATUS=PARSE2(CMDSTR,LINLEN,USRSTR,USRLEN)
	   IF (LSL_STATUS) THEN
C
C Check for duplicate filenames, and the special case of infile
C equal to outfile. Returns set to SS$_NORMAL if all is well. All 
C error message output is done within DUPFIL().
C
	      LSL_STATUS=DUPFIL()
	      IF (LSL_STATUS) THEN
C
C Scan through all the input IFF files and determine what layers
C there are.  Returns set to SS$_NORMAL if all is well. All 
C error message output is done within IFFLYR().
C
	         LSL_STATUS=IFFLYR()
	         IF (LSL_STATUS) THEN
C
C Check and warn the user if the input files have conflicting 
C characteristics in their map descriptors
C
	 	    LSL_STATUS=DESCHK()
C
C At last get on and attempt the file merging. All error message output
C is done within IFFMER().
C
	            LSL_STATUS=IFFMER()
	         ENDIF
	      ENDIF
	   ENDIF
	ENDIF
C
C Close any files which are open: input IFF, 2 output IFF and list file
C Any error of severity worse than warning will result in the output
C files being deleted.
C
	IF (INIFO) CALL IFFCLO(INLUN)		! current input file
	IF (OUTIFO) THEN
	   IF (.NOT.LSL_STATUS) THEN
	      IF (IBITS(LSL_STATUS,0,3).NE.STS$K_WARNING) THEN
	         CALL IFFCDL(OUTLUN) 		! delete output file
	      ELSE
	         CALL IFFCLO(OUTLUN,SS$_ABORT) ! close output file
	      ENDIF
	   ELSE
	      CALL IFFCLO(OUTLUN,SS$_NORMAL) 	! close output file
	   ENDIF
	ENDIF
C
	IF (SPLIFO) THEN
	   IF (.NOT.LSL_STATUS) THEN
	      IF (IBITS(LSL_STATUS,0,3).NE.STS$K_WARNING) THEN
	         CALL IFFCDL(RESTLUN) 		! delete rest file
	      ELSE
	         CALL IFFCLO(RESTLUN,SS$_ABORT)! close rest file
	      ENDIF
	   ELSE
	      CALL IFFCLO(RESTLUN,SS$_NORMAL) 	! close rest file
	   ENDIF
	ENDIF
	IF (LSTFLO) THEN			! the listing file
	   IF (.NOT.LSL_STATUS) THEN		! on error:
	      IF (IBITS(LSL_STATUS,0,3).NE.STS$K_WARNING) THEN
	         CALL FLWDEL(LSTLUN)		! 	  close & delete
	      ELSE
	         CALL FLWCLO(LSTLUN)		! 	  just close
	      ENDIF
	   ELSE					! on success:
	      CALL FLWCLO(LSTLUN)		! 	  just close
	   ENDIF
	ENDIF
C
C Now exit setting $STATUS as we go
	CALL LSL_EXIT
	END
