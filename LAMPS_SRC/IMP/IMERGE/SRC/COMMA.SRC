C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1986-01-23 16:49:38.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE COMMA(CMD_LINE, LENGTH)
C
***	MODULE	COMMA
***	IDENT	23JA86
C
C	Copyright Laser-Scan Laboratories Ltd., Cambridge, England
C
C	Ripped off from DCL_COMMA			TJH  23-Jan-1986
C
C Removes any commas found between parameters in CMD_LINE
C so that the user may specify a parameter list, (probably with
C qualifiers between the parameters). The advantage of this is that each
C of the parameters will then have a unique "parameter environment"
C for the purposes of interpreting the status of "placement=positional"
C & "placement=local" command qualifiers. The commas are replaced with 
C spaces so that it appears to the command line parser that the user has
C supplied a number of separate parameters. The CLD module of course
C should reflect the structure implied by the commaless contents of
C CMD_LINE, not the original CMD_LINE. 
C
C
	IMPLICIT NONE
C
	INTEGER*2	I	 ! loop var.
	LOGICAL 	IN_BRA	 ! .T. when inside brackets 
	CHARACTER*(*)	CMD_LINE ! cmd. line as supplied by the user
	INTEGER		LENGTH	 ! length of command line
	CHARACTER*1	COMA, OPNBRA, CLOBRA, SPACE
C
	DATA	OPNBRA, CLOBRA ,COMA, SPACE /'(',')',',',' '/
C
C ......................................................................
C
	IN_BRA=.FALSE.
	DO 100 I=1,LENGTH
	   IF (CMD_LINE(I:I).EQ.OPNBRA) IN_BRA=.TRUE.
	   IF (CMD_LINE(I:I).EQ.CLOBRA) IN_BRA=.FALSE.
	   IF (CMD_LINE(I:I).EQ.COMA
     &			    .AND..NOT.IN_BRA) CMD_LINE(I:I)=SPACE
100	CONTINUE
	RETURN	
	END
