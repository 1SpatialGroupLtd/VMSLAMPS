C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1986-11-20 14:16:10.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL FUNCTION XFER_QUAL(NIN)
C
***	MODULE	XFER_QUAL
***	IDENT	20NO86
C
C	Copyright Laser-Scan Laboratories Ltd., Cambridge, England
C
CMOD	Now calls LSL_PUTMSG				TJH 20-Nov-1986
C 	From old DAMP MERs XFERSW()			TJH 27-Jan-1986
C
C Function to transfer /LAYER qualifier arguments into OVRS, the
C IMERGE central array of overlay numbers. After each /LAYER qualifier
C selection we add a terminator of -1 to OVRS. 
C
C See LSL$CMNIMERGE:OVRS.CMN for a diagram explaining the layout of 
C IMERGE internal storage.
C
C
C Function returns one of 2 condition codes:
C
C	SS$_NORMAL		-   all is well
C	IMERGE__ILEGLAY		-   illegal layer number
C
	IMPLICIT NONE
C
	INTEGER		NIN	! file number
	INTEGER		I	! loop var.
C
	INCLUDE '($SSDEF)'
	INCLUDE 'LSL$CMNLSL:CLD.CMN'
	INCLUDE 'LSL$CMNIMERGE:IMERGEMSG.PAR'
	INCLUDE 'LSL$CMNIMERGE:PARAMS.PAR'
	INCLUDE 'LSL$CMNIMERGE:COMMAND.CMN'
	INCLUDE 'LSL$CMNIMERGE:OVLST.CMN'
	INCLUDE 'LSL$CMNIMERGE:OVRS.CMN'
C
C ......................................................................
C
C Assume the best
	XFER_QUAL=SS$_NORMAL
C
C If NIN is explicitly 0 then this is a global layer selection from 
C all the input files
	IF(NIN.EQ.0) GLBLAY=NOVR+1
	IF(NIN.NE.0) INOVR(NIN)=NOVR+1
C
C Transfer the qualifier layer numbers 
	DO 10 I=1,NUMINT
C
C Checking as we go that they are all valid IFF layer values
	   IF(IARRAY(I).LT.0.OR.IARRAY(I).GT.32767) GOTO 20
	   NOVR=NOVR+1
	   OVRS(NOVR)=IARRAY(I)
10	CONTINUE
	NOVR=NOVR+1
C
C Add end of file selections terminator	
	OVRS(NOVR)=-1
	GOTO 30
C
C ......................................................................
C
20	XFER_QUAL=IMERGE__ILEGLAY	
	CALL LSL_PUTMSG(XFER_QUAL,IARRAY(I))
30	RETURN
	END
