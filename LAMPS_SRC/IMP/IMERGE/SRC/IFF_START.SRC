	INTEGER*4 FUNCTION IFF_START(LUN,MDTYPE)
C
***	MODULE	IFF_START
***	IDENT	08JN93
C
C
C	Copyright Laser-Scan Laboratories Ltd., Cambridge, England
C
C	Created						TJH  15-Aug-1986
CMOD	Made a function. HI entry copied from input file
C	only one input file				TJH  09-Dec-1986
CMOD	Origin offset only written into type 2 MD	TJH  19-Sep-1987
CMOD	Includes MH,MD,CC & CP entries in split file    IDJ  11-Aug-1988
CMOD    Mod 1235. Use MH2ARR in MHOSGB common to hold the map header in
C	case it is an MH 4 which could be 10000 long.	ST   08-Jun-1993
C
C
C Function to write standard IFF header entries to the outfile(s)
C
C Function returns one of 2 condition codes:
C
C	SS$_NORMAL		-   all is well
C	IMERGE__UNEXPEOF	-   unexpected end of IFF file.
C
	IMPLICIT NONE
C
C Parameters:
	INTEGER		SS$_NORMAL
	EXTERNAL	SS$_NORMAL
	INCLUDE		'LSL$CMNIMERGE:PARAMS.PAR'
	INCLUDE		'LSL$CMNIMERGE:IMERGEMSG.PAR'
C
C Common:
	INCLUDE   'LSL$CMNIFF:COEFFS.CMN'
	INCLUDE   'LSL$CMNIFF:IFFHAN.CMN'
	INCLUDE   'LSL$CMNIFF:MAPDES.CMN'
	INCLUDE   'LSL$CMNIFF:MD2DES.CMN'
	INCLUDE   'LSL$CMNIFF:MHDEF.CMN'
	INCLUDE   'LSL$CMNIFF:MHOSGB.CMN'
	INCLUDE	  'LSL$CMNIMERGE:COMMAND.CMN'
	INCLUDE	  'LSL$CMNIMERGE:MERGE.CMN'
C
C Integer*2:
	INTEGER*2 IECODE,IELEN	! entry found & its length
C
C Integer*4:
	INTEGER   CURPOS	! current infile position
	INTEGER	  I,J		! loop variable
	INTEGER	  LUN		! IFF output file LUN
	INTEGER	  MDTYPE	! 1 = type 1 IFF MD, 2 = type 2 IFF MD
C
C Real:
	REAL	  UNITCC(10,2)	! unity CC entry
	DATA 	  UNITCC/0.0,1.0,10*0.0,1.0,7*0.0/
C
C ......................................................................
C
	IFF_START=%LOC(SS$_NORMAL)	! assume success!
C
C Select the appropriate output file
	CALL IFFSEL(LUN)
	RAPOS=LPOSE
	CALL IFFRA(RANGE)
C
C History entry, (only if one of the input files had one)
	IF (HISTRY) THEN
C
C If we have the case of "$ IMERGE infile outfile" we can afford the
C luxury of retaining the input file HI contents.
	   IF (NUMPAR.EQ.1) THEN
C
C NB. We still have the 1st input file open from IFFMER
C
	      CALL IFFSEL(INLUN)		! select input file
	      CURPOS=LPOSH			! remember where we are
	      CALL IFFRWD			! rewind file
	      CALL IFFNXC('HI',IELEN)		! find HI entry
	      IF (IELEN.EQ.-1) GOTO 60		! did we find it?
	      CALL EIHCPY(LUN)			! yes, copy it to output
	      CALL IFFPKE(IECODE,IELEN,CURPOS)	! return to old posn.
	      IF (IELEN.EQ.-1) GOTO 60		! did we find that ok?
	      CALL IFFSEL(LUN)			! re-select output file
	   ELSE
	      CALL IFFHI			! create new HI entry
	   ENDIF
	ENDIF
C
C Have we had a Map Header?
C If not, write a default MH 0
C
	IF (.NOT.HADMH) THEN
	   MHACTL=MHLEN		! only use the first 350 bytes of MH2ARR
	   DO 10 I=1,MHLEN	! no, initialise Map Header
	      MH2ARR(I)=0
10	   CONTINUE
	ENDIF
C
C Write Map Header out
	CALL IFFMH(MH2ARR,MHACTL)
C
C Set the origin offset and write Map Descriptor. Have we had a Map
C Header?
	IF (.NOT.HADMH) THEN
	   MDTYPE=2
	   MD2ARR(1)=-1		! flag MD unset
	   DO 20 I=2,MD2LEN	! no, initialise type 2 Map Descriptor
	      MD2ARR(I)=0
20	   CONTINUE
	ENDIF
	IF (MDTYPE.EQ.1) THEN
	   CALL IFFMD(MD2ARR,MDLEN,1)
	ELSE
	   MD2LOC(1)=OUTXOF
	   MD2LOC(2)=OUTYOF
	   CALL IFFMD(MD2ARR,MD2LEN,1)
	ENDIF
C
C ... and New Section. Have we had a New Section?
	IF (HADNS) THEN
	   CALL IFFNS(IDATA)
	ELSE
	   CALL IFFNS('IMERGE - NS missing from input file(s)')
	ENDIF
C
C Cubic coefficients
	IF (.NOT.HADCC) THEN
	   DO 50 I=1,2
	      DO 40 J=1,10
		CFT(J,I)=UNITCC(J,I)
40	      CONTINUE
50	   CONTINUE	
	ENDIF
	CALL IFFCC(CFT)
C
C Control Points
	CALL IFFCP(CPTS)
C
C List them out? Do this once only as they are the same for both the 
C /SPLIT and the normal output IFF file
	IF (HAD_LST.AND.LUN.EQ.1) THEN
	    CALL PRINCP(CPTS)
	    CALL FLWRTF(' ')
	    CALL FLWRTF('Origin offset:')
	    CALL FLWRTF('X = %^D%F  Y = %F '
     &			   ,OUTXOF	,OUTYOF)
	ENDIF
	GOTO 70
C
C ......................................................................
C
C Error - unexpected end of input IFF file
60	IFF_START=IMERGE__UNEXPEOF
	CALL LSL_PUTMSG(IFF_START,CINFIL(:CINLEN))
C
70	RETURN
	END
