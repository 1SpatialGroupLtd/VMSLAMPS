C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1986-09-15 18:07:44.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL FUNCTION ADDOV_SEL(IFIL,POSN,NOVR)
C
***	MODULE	ADDOV_SEL
***	IDENT	12MR86
C
C Based on old DAMP MERs ADDOV routine			TJH 24-Jan-1986
C
C Scans list of layers and appends any new ones found, or parts of
C new ones found, to the "selected" rather than the "rest" tables.
C
C Function returns one of 2 condition codes:
C
C	SS$_NORMAL		-   all is well
C	IMERGE__TOMNYLAY	-   too many layers found in file
C
C
	IMPLICIT NONE
C
	INCLUDE '($SSDEF)'
	INCLUDE 'LSL$CMNIMERGE:PARAMS.PAR'
	INCLUDE 'LSL$CMNIMERGE:IMERGEMSG.PAR'
	INCLUDE 'LSL$CMNIMERGE:COMMAND.CMN'
	INCLUDE 'LSL$CMNIMERGE:OVLST.CMN'
C
	INTEGER*4	NOVR	! overlay  number
	INTEGER*4	I,IOLD	! tmp. variables
	INTEGER*4	IFIL	! input file number
C
	INTEGER*4 POSN		! IFF address of NO
C
C ......................................................................
C
C Assume all will be ok
	ADDOV_SEL=SS$_NORMAL
C
	I=0
	IOLD=0
	IF (OVROOT.EQ.0) GOTO 20	! new overlay (first one)
	I=OVROOT
C
C Look down list of overlays
10	IF (I.EQ.0) GOTO 20  		! new overlay (at end of list)
	IF (OVLST(1,I).EQ.NOVR) GOTO 30 ! existing overlay
	IF (OVLST(1,I).GT.NOVR) GOTO 20 ! new overlay
	IOLD=I				
	I=OVADDR(I)			! address of new overlay
	GOTO 10
C
C Add new overlay to list
20	NOVL=NOVL+1
	IF (NOVL.GT.MAXSWV) GOTO 50
	OVLST(1,NOVL)=NOVR  		! overlay number
	OVLST(2,NOVL)=0  		! no parts yet
	OVADDR(NOVL)=I  		! point it at rest of the chain
	IF (IOLD.NE.0) OVADDR(IOLD)=NOVL ! point first chain at it
	IF (IOLD.EQ.0) OVROOT=NOVL	! or point root at it
	I=NOVL
C
C Add new part to overlay
30	IF(OVLST(2,I).EQ.0) GOTO 40	! at end of list of parts
	I=OVLST(2,I)
	GOTO 30
C
C Tag it on the end
40	NOVL=NOVL+1
	IF(NOVL.GT.MAXSWV) GOTO 50
	OVLST(2,I)=NOVL			! link it in
	OVLST(1,NOVL)=IFIL		! file number
	OVLST(2,NOVL)=0			! no more parts
	OVADDR(NOVL)=POSN		! position in file
	RETURN
C
C ......................................................................
C
C Error - too many overlay parts
50	ADDOV_SEL=IMERGE__TOMNYLAY
	CALL LSL_PUTMSG(IMERGE__TOMNYLAY,MAXSWV)
	RETURN
	END
