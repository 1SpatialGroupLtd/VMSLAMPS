C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1995-03-21 17:11:50.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE MERCPX(CPTS,TEMPCP)
C
***	MODULE	MERCPX
***	IDENT	21MR95
C
C	Copyright Laser-Scan Laboratories Ltd., Cambridge, England
C
CMOD    Correct bug in South East control point code	ST  21-Mar-1995
C	(.AND. not .OR. needed). Mod 1481.
CMOD	ATAN2 no longer passed 2 zero arguments!	TJH 29-Sep-1987
CMOD	Duplicate assignment code now placed in a loop  TJH 20-Nov-1986
C	Author 						TJH 28-Jan-1986
C
C Routine to test whether CPs are to be expanded for IMERGE
C /CP_EXPANSION qualifier on the basis of the current contents of TEMPCP
C and the most recently read CP entry held in CPTS. Results of
C expansion are returned in the modified TEMPCP array. 
C
	IMPLICIT NONE
C
	INCLUDE		'LSL$CMNIMERGE:PARAMS.PAR'
C
C Arguments:
	REAL	  CPTS(4,4)	! buffer for Control Points
	REAL	  TEMPCP(4,4)	! actual Control Points for outfile

C
C Real:
	REAL	  CPVECX	! temp var.
	REAL	  CPVECY	!  "    "
	REAL	  VECANG	!  "    "
C	
C Longword:
	INTEGER	  I,J		! loop variables
C
C Logical:
	LOGICAL*4 LHSSET	! .T. if even one LHS of CP set
C
C ......................................................................
C
	LHSSET=.FALSE.		! nothing has changed... yet
C
C NW corner
C
	IF (CPTS(2,1).GE.TEMPCP(2,1) .OR.
     &	   CPTS(1,1).LE.TEMPCP(1,1)) THEN
	   CPVECX=CPTS(1,1)-TEMPCP(1,1)
	   CPVECY=CPTS(2,1)-TEMPCP(2,1)
	   IF (CPVECX.NE.0.0.OR.CPVECY.NE.0.0) THEN
	      VECANG=ATAN2(CPVECY,CPVECX)
	      IF (.NOT.
     &	         (VECANG.LE.PI/4.0.AND.VECANG.GE.-PI*3.0/4.0)) THEN
	         TEMPCP(1,1)=CPTS(1,1)
	         TEMPCP(2,1)=CPTS(2,1)
	         LHSSET=.TRUE.
	      ENDIF
	   ENDIF
	ENDIF
C
C SW corner
C
	IF (CPTS(1,2).LE.TEMPCP(1,2).OR.
     &	   CPTS(2,2).LE.TEMPCP(2,2)) THEN
	   CPVECX=CPTS(1,2)-TEMPCP(1,2)
	   CPVECY=CPTS(2,2)-TEMPCP(2,2)
	   IF (CPVECX.NE.0.0.OR.CPVECY.NE.0.0) THEN
	      VECANG = ATAN2(CPVECY,CPVECX)
	      IF (.NOT.
     &	         (VECANG.LE.PI*3.0/4.0.AND.VECANG.GE.-PI/4.0)) THEN
	         TEMPCP(1,2)=CPTS(1,2)
	         TEMPCP(2,2)=CPTS(2,2)
	         LHSSET=.TRUE.
	      ENDIF
	   ENDIF
	ENDIF
C
C SE corner
C
	IF (CPTS(1,3).GE.TEMPCP(1,3) .OR.
     &	   CPTS(2,3).LE.TEMPCP(2,3)) THEN
	   CPVECX=CPTS(1,3)-TEMPCP(1,3)
	   CPVECY=CPTS(2,3)-TEMPCP(2,3)
	   IF (CPVECX.NE.0.0.OR.CPVECY.NE.0.0) THEN
	      VECANG=ATAN2(CPVECY,CPVECX)
C Bug!!!      IF (VECANG.LT.PI/4.0.OR.VECANG.GT.-PI*3.0/4.0) THEN
	      IF (VECANG.LT.PI/4.0.AND.VECANG.GT.-PI*3.0/4.0) THEN
	         TEMPCP(1,3)=CPTS(1,3)
	         TEMPCP(2,3)=CPTS(2,3)
	         LHSSET=.TRUE.
	      ENDIF
	   ENDIF
	ENDIF
C
C NE corner
C
	IF (CPTS(1,4).GE.TEMPCP(1,4) .OR.
     &	   CPTS(2,4).GE.TEMPCP(2,4)) THEN
	   CPVECX=CPTS(1,4)-TEMPCP(1,4)
	   CPVECY=CPTS(2,4)-TEMPCP(2,4)
	   IF (CPVECX.NE.0.0.OR.CPVECY.NE.0.0) THEN
	      VECANG=ATAN2(CPVECY,CPVECX)
	      IF (VECANG.LT.PI*3.0/4.0.AND.VECANG.GT.-PI/4.0) THEN
	         TEMPCP(1,4)=CPTS(1,4)
	         TEMPCP(2,4)=CPTS(2,4)
	         LHSSET=.TRUE.
	      ENDIF
	   ENDIF
	ENDIF
C
C Copy LHS CP values to RHS for output file CPs
C
	IF (LHSSET) THEN
	   DO 20 I=1,2
	      DO 10 J=1,4
	         TEMPCP(I+2,J)=TEMPCP(I,J)
10	      CONTINUE
20	   CONTINUE
	ENDIF
	RETURN
	END
