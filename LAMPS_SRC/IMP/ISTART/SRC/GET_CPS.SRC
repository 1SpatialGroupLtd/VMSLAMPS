C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1986-10-22 16:47:18.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
 	INTEGER*4 FUNCTION GET_CPS
C
***	MODULE	GET_CPS
***	IDENT	09OC86
C
C Copyright (C) LaserScan Laboratories Ltd, Cambridge, England
C
C Author						TJH 19-Sep-1986
C
C Function to get coordinates for each control point for the IFF CP
C entry. Coordinate come from TT:, MUART driven digitising table or
C from TABLE_MONITOR driven digitising table.
C
C Function returns set to SS$_NORMAL if all is well.
C
	IMPLICIT NONE
C
C Parameters:
C
	INCLUDE	'LSL$CMNLSL:LSLLIBMSG.PAR'
	INCLUDE	'LSL$CMNISTART:ISTARTMSG.PAR'
	INTEGER*4 SS$_NORMAL
	EXTERNAL  SS$_NORMAL		! normal successful completion
C
C Common:
C
	INCLUDE	'LSL$CMNISTART:COMMAND.CMN'
C
C Functions
C
	INTEGER		CALC_CENT	! calc. CP centre of gravity
	INTEGER		MUART_CPS	! to digitise CP values (MUART)
	INTEGER		TABMON_CPS	! to digitise CP values 
C					! (TABLE_MONITOR))
	INTEGER		TT_INPUT	! to read input from TT:
	INTEGER		RESCALE		! to rescale CPs to mm or "
	INTEGER		ROTATE		! to rotate CPs 
C
C ......................................................................
C
C Assume the best
	GET_CPS=%LOC(SS$_NORMAL)
C
C User selected to digitise CP positions using MUART driven table?
C
	IF (HAD_MUART) THEN
	  GET_CPS=MUART_CPS()
C
C User selected to digitise CP positions using TABLE_MONITOR driven
C table? 
C
	ELSEIF (HAD_TABMON) THEN
	  GET_CPS=TABMON_CPS()
C
C User selected to type CP positions, and possibly OS stuff from the 
C keyboard? (default)
C
	ELSE
	  GET_CPS=TT_INPUT()
	ENDIF
C
C If we are using a table based option and all is well so far...
	IF (HAD_TABMON.OR.HAD_MUART) THEN	
	  IF (GET_CPS) THEN
C
C Correct for rotation (/ROTATE qualifier)
C
	     GET_CPS=ROTATE()
	     IF (GET_CPS) THEN
C
C Centre CP coordinates about centre of gravity (/CENTRE qualifier)
C
	        GET_CPS=CALC_CENT()
	        IF (GET_CPS) THEN
C
C Rescale mesurements into millimtres (default action), thousanths of an
C inch (/THOU) or leave in table counts (/COUNTS)
C
	 	  GET_CPS=RESCALE()
	        ENDIF
	     ENDIF
	  ENDIF
	ENDIF

C
C Ensure that we return with SS$_NORMAL if all was well
C
	IF (GET_CPS) GET_CPS=%LOC(SS$_NORMAL)
C
	RETURN
	END
