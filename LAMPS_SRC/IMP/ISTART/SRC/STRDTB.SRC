C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1986-11-27 18:36:58.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL FUNCTION STRDTB(EFN,CHAN,IOSB,BUFFL,BUFF)
C
***	IDENT	27NO86
***	MODULE	STRDTB
C
CMOD	Ripped off from LITES2 for ISTART	TJH	27-Nov-1986
C	Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C	Created					RWR	20-Aug-1985
C
C Description
C
C Function to put up a table read for direct table
C Returns SS$_NORMAL if successful, SS$_ABORT otherwise (error in QIOW)
C
	IMPLICIT NONE
C
	INCLUDE 'LSL$CMNISTART:ISTARTMSG.PAR'
C
C Arguments
C input
	INTEGER*4	EFN		! event flag to wait for
	INTEGER*2	CHAN		! channel
	INTEGER*2	IOSB(4)
	INTEGER*4	BUFFL		! size of BUFF
	BYTE		BUFF(BUFFL)	! buffer for output	
C
C system parameters
	INCLUDE		'($SSDEF)'
	INCLUDE		'($IODEF)'
C
C functions called
	INTEGER*4	SYS$QIO
C
C workspace
	INTEGER*4	IERR
C
	STRDTB=SS$_ABORT				! assume failure
C
C get data from typeahead buffer
	IERR=SYS$QIO(%VAL(EFN),			! efn
     &	             %VAL(CHAN),		! channel
     &	             %VAL(IO$_READVBLK.OR.IO$M_NOECHO),! function
     &	             IOSB,			! iosb
     &	             ,				! astadr
     &	             ,				! astprm
     &	             BUFF,			! buffer for output
     &	             %VAL(BUFFL),		! length of buffer
     &	             ,				! p3
     &	             ,				! p4
     &	             ,				! p5
     &	              )				! p6
C
	IF (.NOT.IERR) THEN
	   CALL LSL_PUTMSG(ISTART__DUFFQIO)
	   CALL LSL_ADDMSG(IERR)
	ELSE	   
	   STRDTB=SS$_NORMAL
	ENDIF
C
	RETURN
	END
