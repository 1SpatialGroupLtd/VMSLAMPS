	INTEGER*4 FUNCTION ROTATE
C
***	IDENT	19SE86
***	MODULE	ROTATE
C
C Copyright (C) LaserScan Laboratories Ltd, Cambridge, England
C
C Author						TJH 19-Sep-1986
C
C ROTATE corrects the CP values held in /IFF_ENT/CPARRY for rotation
C relative to the Cartesian X-axis of the digitising table.
C
C Function returns set to SS$_NORMAL if all is well.
C
	IMPLICIT NONE
C
C Parameters:
C
	INCLUDE	'LSL$CMNLSL:LSLLIBMSG.PAR'
	INCLUDE	'LSL$CMNISTART:ISTARTMSG.PAR'
C
	INTEGER*4 X,Y		! coordinate array indices
	PARAMETER (X=3)
	PARAMETER (Y=4)
C
	INTEGER*4 SS$_NORMAL
	EXTERNAL  SS$_NORMAL	! normal successful completion
C
C Longword:
	INTEGER	  I		! loop variable
C
C Real:
	REAL	  TCOS,TSIN	! for removal of rotation
	REAL	  TANG		! angle of rotation
	REAL	  TMP		! temp. variable
	REAL	  DX,DY		! for removal of rotation
C
C Common:
C
	INCLUDE	'LSL$CMNISTART:COMMAND.CMN'
	INCLUDE	'LSL$CMNISTART:IFF_ENT.CMN'
C
C ......................................................................
C
	ROTATE=%LOC(SS$_NORMAL)
C
C Are we to correct for rotation?
	IF (HAD_ROT) THEN
	   DX=CPARRY(X,3)-CPARRY(X,2)
	   DY=CPARRY(Y,3)-CPARRY(Y,2)
C
C Ensure that we have a baseline to rotate relative to!
C
	   IF (ABS(DX).LT.1.0E-6) THEN
	      ROTATE=ISTART__ZEROBASE
	      CALL LSL_PUTMSG(ROTATE)
	   ELSE
	      TANG=ATAN2(DY,DX)
	      TSIN=SIN(TANG)
	      TCOS=COS(TANG)
	      DO 10 I=1,4
	         TMP=CPARRY(X,I)
	         CPARRY(X,I)=(CPARRY(X,I)*TCOS+CPARRY(Y,I)*TSIN)
	         CPARRY(Y,I)=(-TMP*TSIN+CPARRY(Y,I)*TCOS)
10 	      CONTINUE
	   ENDIF
	ENDIF
	RETURN
 	END 
