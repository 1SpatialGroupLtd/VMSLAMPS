C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1986-10-21 16:30:02.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	INTEGER*4 FUNCTION ROTATE
C
***	IDENT	19SE86
***	MODULE	ROTATE
C
C Copyright (C) LaserScan Laboratories Ltd, Cambridge, England
C
C Author						TJH 19-Sep-1986
C
C ROTATE corrects the CP values held in /IFF_ENT/CPARRY for rotation
C relative to the Cartesian X-axis of the digitising table.
C
C Function returns set to SS$_NORMAL if all is well.
C
	IMPLICIT NONE
C
C Parameters:
C
	INCLUDE	'LSL$CMNLSL:LSLLIBMSG.PAR'
	INCLUDE	'LSL$CMNISTART:ISTARTMSG.PAR'
C
	INTEGER*4 X,Y		! coordinate array indices
	PARAMETER (X=3)
	PARAMETER (Y=4)
C
	INTEGER*4 SS$_NORMAL
	EXTERNAL  SS$_NORMAL	! normal successful completion
C
C Longword:
	INTEGER	  I		! loop variable
C
C Real:
	REAL	  TCOS,TSIN	! for removal of rotation
	REAL	  TANG		! angle of rotation
	REAL	  TMP		! temp. variable
	REAL	  DX,DY		! for removal of rotation
C
C Common:
C
	INCLUDE	'LSL$CMNISTART:COMMAND.CMN'
	INCLUDE	'LSL$CMNISTART:IFF_ENT.CMN'
C
C ......................................................................
C
	ROTATE=%LOC(SS$_NORMAL)
C
C Are we to correct for rotation?
	IF (HAD_ROT) THEN
	   DX=CPARRY(X,3)-CPARRY(X,2)
	   DY=CPARRY(Y,3)-CPARRY(Y,2)
C
C Ensure that we have a baseline to rotate relative to!
C
	   IF (ABS(DX).LT.1.0E-6) THEN
	      ROTATE=ISTART__ZEROBASE
	      CALL LSL_PUTMSG(ROTATE)
	   ELSE
	      TANG=ATAN2(DY,DX)
	      TSIN=SIN(TANG)
	      TCOS=COS(TANG)
	      DO 10 I=1,4
	         TMP=CPARRY(X,I)
	         CPARRY(X,I)=(CPARRY(X,I)*TCOS+CPARRY(Y,I)*TSIN)
	         CPARRY(Y,I)=(-TMP*TSIN+CPARRY(Y,I)*TCOS)
10 	      CONTINUE
	   ENDIF
	ENDIF
	RETURN
 	END 
