C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1986-12-08 16:15:10.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL FUNCTION TABINIT(ON)
C
***	IDENT	01DE86
***	MODULE	TABINIT
C
C	Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
CMOD	Ripped off from LITES2 for ISTART	TJH	27-Nov-1986
C	Created					RWR	21-Nov-1984
C
C Description
C
C	Hardware dependant version of table initialisation
C	   ----   Table monitor/direct table version   ----
C
	IMPLICIT NONE
C
C Parameters:
	INCLUDE '($SSDEF)'
	INCLUDE 'LSL$CMNISTART:ISTARTMSG.PAR'
C
C Common:
	INCLUDE 'LSL$CMNISTART:TABLE.CMN'
C
C arguments
	LOGICAL		ON		! turn on, or off
C
C Functions called
	LOGICAL		INIT_TAB,CLOSE_TAB
	LOGICAL		GETABL		! initialise direct table
	INTEGER		TRNALL
C
C Local Variables
	INTEGER*4	NO		! space for this no of points
	PARAMETER	(NO=4)		! left in type ahead buffer
C
	CHARACTER*(*)	LOG
	PARAMETER	(LOG='LSL$MONITOR_TABLE')
C
	CHARACTER*(40)	TEMPNAME
	INTEGER*4	IERR,IER
	INTEGER*4	FREE,LAST
	LOGICAL		NOTYPAHD	! was line no-typeahead?
	LOGICAL		NOBRDCST	! was line no brdcast?
C
C ......................................................................
C
	TABINIT = SS$_ABORT			! assume splat!
C
C Always try first for table monitor. If we fail try to set up direct
C terminal reads.
C
	IF (ON) THEN				! turn on
C
C ......................................................................
C
C		****** T U R N   O N  ******
C
	   IF (.NOT.INIT_TAB(,IERR)) THEN	! on ok?
	      RMON=.TRUE.
	      GOTO 990				! yes, set flag & return
	   ENDIF
C
C So try for direct table read
C
	   CALL LSL_PUTMSG(ISTART__MONNOTAV)	! try for direct table
C
C Set value for direct table read event flag
C
	   DTBFLG=4
C
C Try to translate logical name for table line
C
	   IER=TRNALL(LOG,TEMPNAME)
	   IF (IER.NE.SS$_NORMAL) THEN
	      IF (IERR.GT.0) CALL LSL_PUTMSG(IERR)
	      CALL LSL_ADDMSG(ISTART__FLDTOTRANS,LOG)
	      GOTO 999
	   ENDIF
	   IF (GETABL(LOG,DTBCHN,NOTYPAHD,NOBRDCST,MXTYPC))THEN
C
C max typeahead count allows upto NO less than max possible table
C strings
	      MXTYPC=(MXTYPC/15-NO)*15
	      DTRON=.TRUE.
	      CALL LSL_PUTMSG(ISTART__DTABUSED)
	      GOTO 990			! now on
	   ENDIF
	   GOTO 999
C
C ......................................................................
C
C		******  T U R N   O F F  ******
C
	ELSE				! turn off
C
	   IF (DTRON) THEN		! direct table
	      CALL SYS$DALLOC(LOG,)
	      CALL SYS$DASSGN(DTBCHN)
	      DTRON = .FALSE.
	   ELSE
	      IF (CLOSE_TAB(IERR)) THEN
	         TABINIT=ISTART__STOPMON
	         CALL LSL_PUTMSG(TABINIT)
	         IF (IERR.GT.0) CALL LSL_ADDMSG(IERR)
	         GOTO 999
	      ENDIF
	   ENDIF
	ENDIF
C
990	TABINIT = SS$_NORMAL			! now on
C
999	RETURN
	END
