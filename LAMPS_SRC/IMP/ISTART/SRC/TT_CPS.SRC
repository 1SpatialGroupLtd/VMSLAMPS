	INTEGER*4 FUNCTION TT_CPS
C
***	MODULE	TT_CPS
***	IDENT	01DE86
C
C Copyright (C) LaserScan Laboratories Ltd, Cambridge, England
C
C Author						TJH 07-Sep-1986
C
C
C Function prompts for 4 control points which define a map and reads
C their coordinate values (via TT_CPS). The results are returned
C via /IFF_ENT/RAW_CPS. 
C
C
C Function returns one of 3 possible values:
C
C	SS$_NORMAL		- all is well
C	LSL__EOF		- end of file detected	
C	ISTART__CMD		- error reading command
C
	IMPLICIT NONE
C
C Parameters:
	INCLUDE 'LSL$CMNLSL:LSLLIBMSG.PAR'
	INCLUDE 'LSL$CMNISTART:ISTARTMSG.PAR'
	INTEGER*4 SS$_NORMAL
	EXTERNAL  SS$_NORMAL		! normal successful completion
C
C Common:
	INCLUDE 'LSL$CMNISTART:COMMAND.CMN'
	INCLUDE 'LSL$CMNISTART:IFF_ENT.CMN'
	INCLUDE 'LSL$CMNLSL:EXCEPTION.CMN'
	INCLUDE 'LSL$CMNLSL:STATUS.CMN'
	INCLUDE 'LSL$CMNLSL:TXTC.CMN'

C
C Longword:
	INTEGER		BADNUM		! function return, .T. if err.
	INTEGER		CORNER		! loop variable
	INTEGER		CPTLEN(4)	! length of CP text
	INTEGER		I		! loop variable
	INTEGER		IERR		! for error return
C
C Integer:
	INTEGER*2	PROLEN		! length of complete prompt
C
C
C Character:
	CHARACTER*100	PROMPT		! complete prompt for CP
	CHARACTER*12	CPTEXT(4)	! individual text CP
C
C Function:
	INTEGER*2	EXPAND		
	INTEGER		TTRLIN
	INTEGER		RDDBLE
C
C Data:
	DATA CPTEXT/'top left','bottom left','bottom right','top right'/
	DATA CPTLEN/8,11,12,9/
C
C ......................................................................
C
	TT_CPS=%LOC(SS$_NORMAL)
C
C Prompt user for each control point in turn:
C
	DO 30 CORNER=1,4
10	  CALL WRITEF
	  PROLEN=EXPAND(
     &	  '%WSSpecify coordinates for '//
     &				'the %S control point (X then Y) : '
     &	     ,PROMPT		,CPTEXT(CORNER)(:CPTLEN(CORNER)))
	  TT_CPS=TTRLIN(,,,PROMPT(:PROLEN),IERR)
C
C Did we get a good command line?
C
	  IF (TT_CPS) THEN
	    IF (TXTPTR.EQ.0) GOTO 10
	    CALL BSLN
C
C
C We expect two numbers, X then Y ordinates...
C
	    DO 20 I=1,2
	      BADNUM=RDDBLE(RAW_CPS(I,CORNER))
C
C Could we read a number?
	      IF (BADNUM) THEN
C
C Report error if it occurred while reading the first number
C
		IF (I.EQ.1) THEN
	          TT_CPS=ISTART__CMD
	          CALL LSL_PUTMSG(TT_CPS)
	          CALL LSL_ADDMSG(ERRNUM)
C
C If however it occurred while reading the second number ...
C
	        ELSE
C
C ... because the second number wasn't there at all,
C
	          IF (ERRNUM.EQ.LSL__UNEXPEOL) THEN
		    PROLEN=EXPAND(
     &	  		'%WSSpecify Y ordinate for '//
     &				'the %S control point : ',PROMPT
     &	     			,CPTEXT(CORNER)(:CPTLEN(CORNER)))
C
C prompt for the second number explicitly
C
15	  	    TT_CPS=TTRLIN(,,,PROMPT(:PROLEN),IERR)
	            IF (TT_CPS) THEN
	              IF (TXTPTR.EQ.0) GOTO 15
	              CALL BSLN
C
C Attempt to read the number
C
	              BADNUM=RDDBLE(RAW_CPS(I,CORNER))
C
C Did it read OK this time?
C
	              IF (BADNUM) THEN
	                TT_CPS=ISTART__CMD
	                CALL LSL_PUTMSG(TT_CPS)
	                CALL LSL_ADDMSG(ERRNUM)
		        GOTO 15			! prompt again
		      ENDIF
C
C Error getting the command line for the second number prompt.
C Unexpected end of file (probably caused by user typing ^Z) falls 
C through
C
		    ELSE
		      IF (TT_CPS.EQ.LSL__SYSERR) THEN
	                 CALL LSL_PUTMSG(ISTART__CMD)
	                 CALL LSL_ADDMSG(TT_CPS)
	                 TT_CPS=ISTART__CMD
	                 IF (IERR.NE.%LOC(SS$_NORMAL))
     &						CALL LSL_ADDMSG(IERR)
		         ENDIF
		    ENDIF
		  ELSE
	            TT_CPS=ISTART__CMD
	            CALL LSL_PUTMSG(TT_CPS)
	            CALL LSL_ADDMSG(ERRNUM)
		  ENDIF
	        ENDIF
	      ENDIF
20	    CONTINUE
	    IF (.NOT.TT_CPS) GOTO 10
	  ELSE
C
C Error getting the command line for the first prompt
C Unexpected end of file (probably caused by user typing ^Z) falls 
C through
C
	    IF (TT_CPS.EQ.LSL__SYSERR) THEN
	      CALL LSL_PUTMSG(ISTART__CMD)
	      CALL LSL_ADDMSG(TT_CPS)
	      TT_CPS=ISTART__CMD
	      IF (IERR.NE.%LOC(SS$_NORMAL)) CALL LSL_ADDMSG(IERR)
	    ENDIF	  
	    GOTO 60
	  ENDIF
30	CONTINUE
C
C Ensure that any form of success results in a return of SS$_NORMAL
C
	IF (TT_CPS) TT_CPS=%LOC(SS$_NORMAL)
C
60	RETURN
	END
