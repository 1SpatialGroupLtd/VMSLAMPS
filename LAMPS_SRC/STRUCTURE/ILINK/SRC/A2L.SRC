C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1992-10-15 15:14:08.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE A2L(PT,NXT,PRV,FTR_PTS,MAXPTS,MAXOUTFTRS)

***	IDENT	12OC92
***	MODULE	A2L

C	Copyright : Laser-Scan Ltd., Cambridge, England
C	Created   : ACM					Month 1986

	IMPLICIT NONE

	INCLUDE		'LSL$CMNILINK:ILINK.CMN'

C Data in
	INTEGER*4	MAXPTS,MAXOUTFTRS
	INTEGER*4	NXT(MAXPTS)
	INTEGER*4	PRV(MAXPTS)
	INTEGER*4	FTR_PTS(2,MAXOUTFTRS)

	REAL*4		PT(2,MAXPTS)

C Workspace
	INTEGER*4	I,I_PR_FTR		! processed-ftr index
	INTEGER*4	IPTSTA,IPTFIN		! end pt PT indices
	LOGICAL  	CLOSED			! closed loop?
	REAL*4		DX,DY
	REAL*4		SQTOL,SQLEN

CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
C	Converts from contiguous-array to linked-list representation
C	for FTR_PTS
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC

	SQTOL = COORD_TOL*COORD_TOL

	DO 10 I_PR_FTR = 1,N_PR_FTRS

	  IPTSTA = FTR_PTS(1,I_PR_FTR)
	  IPTFIN = FTR_PTS(2,I_PR_FTR)

	  IF (IPTSTA.EQ.IPTFIN) GOTO 10		! pt ftr

	  DX = PT(1,IPTSTA)-PT(1,IPTFIN)
	  DY = PT(2,IPTSTA)-PT(2,IPTFIN)
	  SQLEN = DX*DX+DY*DY
	  CLOSED = SQLEN.LT.SQTOL

	  IF (CLOSED) THEN
	    I = PRV(IPTFIN)
	    PRV(IPTFIN) = -1			! mark as deleted
	    IPTFIN = I
	    FTR_PTS(2,I_PR_FTR) = IPTFIN
	    IF (IPTSTA.NE.IPTFIN) THEN
	      NXT(IPTFIN) = IPTSTA
	      PRV(IPTSTA) = IPTFIN
	    ELSE				! become pt ftr
	      NXT(IPTSTA) = NIL
	    END IF
	  END IF

10	CONTINUE

	END

