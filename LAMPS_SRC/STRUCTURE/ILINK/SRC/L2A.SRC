C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1991-03-12 16:46:42.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL*4 FUNCTION L2A(
     &		PT,CC,NXT,PRV,PT_PR_FTR,PDAT,FTR_PTS,
     &		MAXPTS,MAXOUTFTRS)

***	MODULE	L2A
***	IDENT	12MR91

C	Copyright : Laser-Scan Laboratories Ltd., Cambridge, England

CMOD	Made a function					TJH 28-May-1987
C	Created   : ACM					       Dec 1986

	IMPLICIT NONE

C Data in/out
	INTEGER*4	MAXPTS,MAXOUTFTRS
	INTEGER*4	NXT(MAXPTS),PRV(MAXPTS)
	INTEGER*4	PT_PR_FTR(MAXPTS)
	INTEGER*4	FTR_PTS(2,MAXOUTFTRS)
	REAL*4		PT(2,MAXPTS)
	LOGICAL*1	PDAT(MAXPTS)
	INTEGER*4	CC(MAXPTS)

C Parameters
	INCLUDE		'($SSDEF)'

	INCLUDE		'LSL$CMNILINK:ILINKMSG.PAR'

C Commons
	INCLUDE		'LSL$CMNILINK:ILINK.CMN'
	INCLUDE		'LSL$CMNILINK:ILINKCHAR.CMN'

C Workspace
	INTEGER*4	I_PR_FTR		! processed-ftr index
	INTEGER*4	IPT,IPTSTA,IPTFIN	! end pt PT indices
	LOGICAL*4	CLOSED			! closed loop?

C Functions
	LOGICAL*4	CREATE_PT		! create new point

CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
C	Converts from circular linked-list to open linked-list
C	representation for FTR_PTS
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC

	L2A = SS$_NORMAL			! assume success

	DO 10 I_PR_FTR = 1,N_PR_FTRS
	  IPTSTA = FTR_PTS(1,I_PR_FTR)
	  IPTFIN = FTR_PTS(2,I_PR_FTR)
	  IF (IPTSTA.EQ.NIL.OR.IPTFIN.EQ.NIL) GOTO 10	! ftr deleted
	  IF (IPTSTA.EQ.IPTFIN) THEN		! pt ftr
	    NXT(IPTSTA) = NIL			! check no looped pt ftr
	    GOTO 10
	  END IF

	  CLOSED = NXT(IPTFIN).EQ.IPTSTA

	  IF (CLOSED) THEN
	    L2A = CREATE_PT(	PT(1,IPTSTA),PT(2,IPTSTA),CC(IPTSTA),
     &				I_PR_FTR,PT,CC,PT_PR_FTR,MAXPTS)
	    IF (.NOT.L2A) GOTO 999

	    PDAT(N_PTS) = .TRUE.
	    FTR_PTS(2,I_PR_FTR) = N_PTS
	    NXT(IPTFIN) = N_PTS
	    PRV(N_PTS) = IPTFIN
	    NXT(N_PTS) = NIL
	    PRV(IPTSTA) = NIL
	  END IF
10	CONTINUE

999	IF (L2A) L2A = SS$_NORMAL
	RETURN
	END

