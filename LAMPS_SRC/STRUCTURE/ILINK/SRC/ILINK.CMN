C
C **********************************************************************
C
C	STRUCTURE - definition block for ILINK
C
C **********************************************************************
C
CMOD1585 Add /KEEP=COLINEAR flag			  MJGW 23-Dec-1997
CMOD1466 Increase no of feature pairs from 300 to 500	    JB 09-Feb-1995
CMOD1319 Increase no of points per feature from
C	 15000 to 60000					    JB 10-Dec-1993
CMOD1304 Add /KEEP=PARENT flag				    JB 12-Oct-1993
CMOD1293 Add /SYMBOL flag				    JB 14-Aug-1993
CMOD1232 Add /WARNING flag				    JB 25-May-1993
CMOD	 Add /KEEP=FSN flag				    JB 07-Aug-1992
CMOD	 Add /ABSOLUTE flag				    JB 06-Nov-1991
CMOD	 Add MAXAPJ=10 for maximum arms per IFF junction   WJJ 02-Feb-1990
C	 and increase MAXAPN to 20 for internal purposes
C
C this first part is ILINK's copy of lsl$cmniff:cb.str
C define some parameters for now

	INTEGER*4	IFF_MAXCBCOL		! max number of columns
	PARAMETER	(IFF_MAXCBCOL=20)

	INTEGER*4	IFF_MAXCBROW		! max number of rows
	PARAMETER	(IFF_MAXCBROW=200)

	INTEGER*4	IFF_MAXCBDATA		! max longwords of data
	PARAMETER	(IFF_MAXCBDATA=IFF_MAXCBCOL*IFF_MAXCBROW)

	INTEGER*4	IFF_MAXCBATT		! max fixed attributes
	PARAMETER	(IFF_MAXCBATT=20)

	INTEGER*4	IFF_ABSENT		! absent value
	PARAMETER	(IFF_ABSENT='80000000'X) 

C Parameters defining column headers for x,y,z for convenience
C These must agree with those in the default ACDs

	INTEGER		IFF_C_X,IFF_C_Y,IFF_C_Z
	PARAMETER	(IFF_C_X=91)
	PARAMETER	(IFF_C_Y=92)
	PARAMETER	(IFF_C_Z=93)

C Attribute structure
	STRUCTURE	/IFF_CBATT/
	  INTEGER*4	ATTC		! attribute code
	  UNION
	    MAP
	      INTEGER*4	IATTV		! attribute value (integer)
	    END MAP
	    MAP
	      REAL	RATTV		! attribute value (real)
	    END MAP
	    MAP
	      CHARACTER*4 CATTV		! attribute value (char*4)
	    END MAP
	  END UNION
	END STRUCTURE

C Define the record structure to hold Coordinate Block (CB) header

	STRUCTURE	/IFF_CBH/
	  INTEGER*4	FLAGS			! flags (from IENDS now)
	  INTEGER*4	GTYPE			! graphical type
	  INTEGER*4	NROW			! number of rows
	  INTEGER*4	NCOL			! number of data columns
	  INTEGER*4	COLH(IFF_MAXCBCOL)	! column headers
	  INTEGER*4	NATT			! number of attributes
	  RECORD	/IFF_CBATT/ATT(IFF_MAXCBATT)	! attributes
	END STRUCTURE

C and a record structure to hold Coordinate Block (CB) data
C - treats the whole thing as a 1-dimensional array

	STRUCTURE	/IFF_CBD/
	  UNION
	    MAP
	      INTEGER*4		I(IFF_MAXCBDATA)	! integer value
	    END MAP
	    MAP
	      REAL		R(IFF_MAXCBDATA)	! real value
	    END MAP
	    MAP
	      CHARACTER*4	C(IFF_MAXCBDATA)	! char value
	    END MAP
	  END UNION
	END STRUCTURE

C and a structure for use in declaring CB row arrays
C - for instance: RECORD /IFF_CBITEM/	ROW(IFF_MAXCBATT)

	STRUCTURE	/IFF_CBITEM/
	  UNION
	    MAP
	      INTEGER*4		I	! integer value
	    END MAP
	    MAP
	      REAL		R	! real value
	    END MAP
	    MAP
	      CHARACTER*4	C	! char value
	    END MAP
	  END UNION
	END STRUCTURE

C this next part defines an extended CBD structure for whole features
C  for workspace records to insert/take data to/from STR_ILINK_CBD in
C  ILINK.STR

	INTEGER*4	ILINK_MAXCBROW		! max number of rows
	PARAMETER	(ILINK_MAXCBROW = 60000)

	INTEGER*4	ILINK_MAXCBDATA		! max longwords of data
	PARAMETER	(ILINK_MAXCBDATA = IFF_MAXCBCOL*ILINK_MAXCBROW)

	STRUCTURE	/ILINK_CBD/
	  UNION
	    MAP
	      INTEGER*4		I(ILINK_MAXCBDATA)	! integer value
	    END MAP
	    MAP
	      REAL		R(ILINK_MAXCBDATA)	! real value
	    END MAP
	    MAP
	      CHARACTER*4	C(ILINK_MAXCBDATA)	! char value
	    END MAP
	  END UNION
	END STRUCTURE

C **********************************************************************

C COMMON block for ILINK

C **********************************************************************
C Real constants

	REAL*4		ZEROPLUS
	REAL*4		ONEPLUS
	REAL*4		ONEMINUS
	REAL*4		PI,TWOPI

	PARAMETER(	PI		= 3.141592654)
	PARAMETER(	TWOPI		=    2*PI)
	PARAMETER(	ZEROPLUS	=    1E-4)
	PARAMETER(	ONEPLUS		= 1+ZEROPLUS)
	PARAMETER(	ONEMINUS	= 1-ZEROPLUS)

C Array dimensions

	INTEGER*4	MAXAPN			! max arms per node
	PARAMETER(	MAXAPN		=      20)

	INTEGER*4	MAXAPJ			! max arms per IFF junction
	PARAMETER(	MAXAPJ		=      10)

	INTEGER*4	MAXLAYERS		! max input layers
	PARAMETER(	MAXLAYERS	=     500)

	INTEGER*4	MAXFCS			! max different FCs
	PARAMETER(	MAXFCS		=     MAXLAYERS)

	INTEGER*4	MAXFCPRS		! max different FC pairs
	PARAMETER(	MAXFCPRS	=     MAXFCS*(MAXFCS-1)/2 )

	INTEGER*4	MAXACPRS		! max different AC pairs
	PARAMETER(	MAXACPRS	=     100)

	INTEGER*4	MAXFCPFCC		! max FCs/FC-combination
	PARAMETER(	MAXFCPFCC	=     100)

	INTEGER*4	MAXFCCS			! max FC combinations
	PARAMETER(	MAXFCCS		=     200)

	INTEGER*4	MAXPACS			! max point att. codes
	PARAMETER(	MAXPACS		=     100)

	INTEGER*4	PAC_RANGE		! Max PAC range
	PARAMETER(	PAC_RANGE	=    2000)

	INTEGER*4	MAXLAYERPRS		! max layer pairs
	PARAMETER(	MAXLAYERPRS	= MAXLAYERS*(MAXLAYERS-1)/2 )

	INTEGER*4	MAXSHR			! max ftrs sharing
	PARAMETER(	MAXSHR		=     100)

	INTEGER*4	NDIVS			! No. of ver range divs
	PARAMETER(	NDIVS		=      10)

	INTEGER*4	MAXSECDIM		! max sector array dim
	PARAMETER(	MAXSECDIM	=      20)

	INTEGER*4	MAXNDSINSCT		! max nodes per sector
	PARAMETER(	MAXNDSINSCT	=     100)

	INTEGER*4	FIXED_SIZE		! fixed ILINK memory
	PARAMETER(	FIXED_SIZE	=
     &				160*4
     &			      + MAXPACS*16 + PAC_RANGE*4
     &			      + MAXFCS*(20 + 4*MAXFCPFCC + MAXFCS)
     &			      + MAXLAYERS*12
     &			      + NDIVS*4
     &			      + ILINK_MAXCBROW*38
     &			      + IFF_MAXCBATT*8 + 6*4
     &			      + IFF_MAXCBDATA*4
     &			      + ILINK_MAXCBDATA*4)

C Other

	INTEGER*4	TOP,MID,BOT		! 3 priority values
	PARAMETER(	TOP = 3, MID = 2, BOT = 1)

	INTEGER*4	NIL
	PARAMETER(	NIL		=       0)

	INTEGER*4	ARM_FTR,ARM_NXT		! ARM field identifiers
	PARAMETER(	ARM_FTR	= 1,	ARM_NXT	= 2)

	INTEGER*4	SHR_FTR,SHR_NXT		! SHR field identifiers
	PARAMETER(	SHR_FTR	= 1,	SHR_NXT = 2)

	INTEGER*4	NOD_JB,NOD_JO		! NOD_ADDR " "
	PARAMETER(	NOD_JB	= 1,	NOD_JO	= 2)

	INTEGER*4	FTR_ST,FTR_NP		! FTR_DAT  " "
	PARAMETER(	FTR_ST	= 1,	FTR_NP	= 2)

	INTEGER*2	INLUN,OUTLUN		! IFF LUNs
	INTEGER*2	LITES2LUN		! LITES2 LUN
	INTEGER*2	LISTLUN			! LIST LUN

	PARAMETER(	INLUN		=       1)
	PARAMETER(	OUTLUN		=       2)
	PARAMETER(	LITES2LUN	=       3)
	PARAMETER(	LISTLUN		=       4)

C input ftr status

	BYTE		TRANSFER,REJECT,PROCESS,BROKEN,SYMBOL_STRING
	PARAMETER(	TRANSFER= -1,	REJECT	= 0)
	PARAMETER(	PROCESS	= 1,	BROKEN	= 3)
	PARAMETER(	SYMBOL_STRING		= 5)

C **********************************************************************

C Variables

C **********************************************************************

C Dynamically allocated array dimensions

	INTEGER*4	MAXPTS_CMN	! max # points
	INTEGER*4	MAXINFTRS_CMN	! max # ftrs in input
	INTEGER*4	MAXOUTFTRS_CMN	! max # ftrs in output
	INTEGER*4	MAXNODES_CMN	! max # nodes
	INTEGER*4	MAXARMS_CMN	! max # node arms
	INTEGER*4	MAXSHRS_CMN	! max # sharing ftrs

C Start-addresses for each array to use dynamically allocated memory

	INTEGER*4	PT_START
	INTEGER*4	CC_START
	INTEGER*4	PT_DST_START
	INTEGER*4	PT_PR_FTR_START
	INTEGER*4	MINSQDIST_START
	INTEGER*4	NEAREST_START
	INTEGER*4	NEAREST_INV_START
	INTEGER*4	NXT_START
	INTEGER*4	PRV_START
	INTEGER*4	PDAT_START
	INTEGER*4	QDAT_START
	INTEGER*4	PT_SEEN_START
	INTEGER*4	IN_FTR_ADDR_START
	INTEGER*4	IN_FTR_STATUS_START
	INTEGER*4	FTR_PTS_START
	INTEGER*4	FTR_START_START
	INTEGER*4	FTR_NDS_START
	INTEGER*4	FTR_DAT_START
	INTEGER*4	FTR_ORIG_PR_FTR_START
	INTEGER*4	FTR_INFTR_START
	INTEGER*4	HEADSHR_START
	INTEGER*4	SHR_START
	INTEGER*4	FTR_IFC2_START
	INTEGER*4	FTR_LAYER_START
	INTEGER*4	PNT_FTR_START
	INTEGER*4	WORKSPACE_START
	INTEGER*4	NPT_START
	INTEGER*4	NWT_START
	INTEGER*4	NHT_START
	INTEGER*4	BASE_NODE_START
	INTEGER*4	NOD_ADDR_START
	INTEGER*4	HEADARM_START
	INTEGER*4	ARM_START
C
C Point index of last old point salvaged for re-use
	INTEGER*4	LAST_OLD_PT

C Feature index of last continuation-feature output
	INTEGER*4	LAST_PR_FTR

C Sectors in X and Y
	REAL*4		XSECSIZ,YSECSIZ		! node-sector size
	INTEGER*2	NXSECTORS,NYSECTORS

C X and Y coordinate ranges in IFF output
	REAL*4		OUT_RANGE(4)

C Feature codes for processing
	INTEGER*4	FCS4(MAXFCS)

C Feature codes for rejection from processing

	INTEGER*4	REJFCS(MAXFCS)

C Column header array for reading X, Y and Capture method, from CB

	INTEGER*4	COLH_XY(2),CAP_CODE

C Legal Point Attribute Code range
	INTEGER*4	MIN_PAC,MAX_PAC

C Feature codes for processing as symbol-strings
	INTEGER*4	STRFCS(MAXFCS)

C Feature-code combinations for special feature-codes
	INTEGER*4	FCC4(MAXFCPFCC,MAXFCCS)

C AC pairs
	INTEGER*2	ACPAIR(2,MAXACPRS)

C Capture-method tolerance data
	CHARACTER*20	CAP_NAM		! capt method att name
	INTEGER*4	CAP_LEN		! length of capt methd att name
	INTEGER*4	N_PACS			! num of cap-method tols
	INTEGER*4	PACODE(0:MAXPACS)	! point attribute codes
	INTEGER*4	NEWPAC(0:MAXPACS)	! new PACs
	INTEGER*4	PAC_LIN(0:PAC_RANGE)	! PAC line in file
	REAL*4		PAC_JNTOL(0:MAXPACS)	! PAC join tolerances
	REAL*4		PAC_EXTOL(0:MAXPACS)	! PAC extension tol.

C No. of feature-codes per feature-code-combination
	INTEGER*4	N_FCPFCC(MAXFCCS)

C Special feature-code for each FC-combination
	INTEGER*4	SHFC4(MAXFCCS)

C Special feature-code for shared-features
	INTEGER*2	SHRFC2

C FCS-index pairs corresponding to feature-code pairs for processing
	LOGICAL*1	FCPAIR(MAXFCS,MAXFCS)	! process FC-pair?

C Layers for processing
	INTEGER*4	LAYER(MAXLAYERS)

C Free-ends feature code and layer number
	INTEGER*4	FREE_ENDS_FC, FREE_ENDS_LAYER
C
C Keep FSN,PARENT
	INTEGER*2	KEEP_FSN,KEEP_PARENT

C Qualifier values
	LOGICAL*4	HAD_TOL			! had TOL qualifier?
	LOGICAL*4	HAD_PAC			! had PAC qualifier?
	LOGICAL*4	HAD_ACP			! had ACP qualifier?
	LOGICAL*4	HAD_FCP			! had FCP qualifier?
	LOGICAL*4	HAD_LCP			! had LCP qualifier?
	LOGICAL*4	HAD_FCC			! had FCC qualifier?
	LOGICAL*4	HAD_FRT			! had FRT qualifier?
C
	LOGICAL*4	HAD_FREE_ENDS		! had FREE_ENDS qual?
	LOGICAL*4	HAD_FREE_ENDS_LAYER	! had FREE_ENDS.FC or .LAYER?
	LOGICAL*4	HAD_KEEP		! had KEEP qual?
	LOGICAL*4	HAD_KEEP_COLINEAR	! had KEEP.COLINEAR qual?
	LOGICAL*4	HAD_KEEP_FSN		! had KEEP.FSN?
	LOGICAL*4	HAD_KEEP_PARENT		! had KEEP.PARENT?
C
	LOGICAL*4	HAD_ABS			! had ABSOLUTE qualifier?
	LOGICAL*4	HAD_LITES2		! had LITES2 qualifier?
	LOGICAL*4	HAD_STRUCTURE		! had STRUCTURE switch
	LOGICAL*4	HAD_BREAK		! had BREAK switch
	LOGICAL*4	HAD_MERGE		! ...
	LOGICAL*4	HAD_LAYERS
	LOGICAL*4	HAD_LLJOIN
	LOGICAL*4	HAD_PPJOIN
	LOGICAL*4	HAD_LPJOIN
	LOGICAL*4	HAD_JNTOL
	LOGICAL*4	HAD_EXTOL
	LOGICAL*4	HAD_BPF
	LOGICAL*4	HAD_VRTOL
	LOGICAL*4	HAD_MINLEN
	LOGICAL*4	HAD_MINTOL
	LOGICAL*4	HAD_SHRFC
	LOGICAL*4	HAD_PROJECT
	LOGICAL*4	HAD_PARENT
	LOGICAL*4	HAD_SYMBOL
	LOGICAL*4	HAD_VERTEX
	LOGICAL*4	HAD_SORTARMS
	LOGICAL*4	HAD_MONITOR
	LOGICAL*4	HAD_WARNING
	LOGICAL*4	HAD_PME
	LOGICAL*4	HAD_DEBUG
	LOGICAL*4	HAD_REJFCS		! had FCs to be rejectd?
	LOGICAL*4	HAD_STRFCS		! had sym-string FCs?
	LOGICAL*4	HAD_SYMBOL_STRING	! had symbol-string?
	LOGICAL*4	HAD_VERIFY
	LOGICAL*4	HAD_LIST

	LOGICAL*4	PROCESS_ALL_LAYERS
	LOGICAL*4	NEED_DATA_PER_POINT
	LOGICAL*4	NEED_DATA_PER_FEATURE
	LOGICAL*4	NEED_NODATA
	LOGICAL*4	SHOW_TIME
	LOGICAL*4	NO_BETWEEN_CHECK	! do not call BETWEEN

	LOGICAL*4	IN_OPEN			! input file open?
	LOGICAL*4	OUT_OPEN		! output file open?
	LOGICAL*4	LITES2_OPEN		! LITES2 file open?

C Range data
	REAL*4		XMIN,YMIN,XMAX,YMAX
	REAL*4		XRANGE			! xmax-xmin
	REAL*4		YRANGE			! ymax-ymin

C For each input layer
	INTEGER*4	LAYER_NUMBER(MAXLAYERS)
	INTEGER*4	LAST_INFTR_IN_LAYER(MAXLAYERS)

C Tolerances
	REAL*4		NSTOL,NSTOL_SQ,NSTOL_ROOT2
	REAL*4		JNTOL,JNTOL_PLUS
	REAL*4		JNTOL_SQ
	REAL*4		EXTOL,EXTOL_SQ
	REAL*4		EXJNTOL,EXJNTOL_SQ
	REAL*4		VRTOL,VRTOL_SQ,VER_RANGE
	REAL*4		THIN_TOL,COORD_TOL
	REAL*4		MINTOL,MINLEN
	REAL*4		BPF			! av. # breaks per ftr
C
C Counts
	INTEGER*4	TOT_PTS			! # pts in output file
	INTEGER*4	N_ACPRS			! AC-pair count
	INTEGER*4	N_FCS			! FC count
	INTEGER*4	N_FCCS			! FC-combination count
	INTEGER*4	N_REJFCS		! unsuitable FCs
	INTEGER*4	N_STRFCS		! sym-string FCs
	INTEGER*4	N_JPS			! JP count
	INTEGER*4	NLPTS			! No. of pts in ftr
	INTEGER*4	N_OUT_PTS		! No. pts in output ftr
	INTEGER*4	N_LAYERS		! layers to prcs
	INTEGER*4	N_IN_LAYERS		! layers in IFF input
	INTEGER*4	N_PTS			! pts in ftrs
	INTEGER*4	N_ORIG_PTS		! pts before extra pts

	INTEGER*4	N_ORIG_PR_FTRS		! orig ftrs to process
	INTEGER*4	N_ORIG_PR_PFTRS		! point-ftrs to process
	INTEGER*4	N_ORIG_PR_OFTRS		! open-ftrs to process
	INTEGER*4	N_ORIG_PR_CFTRS		! closed-ftrs to process

	INTEGER*4	N_PR_FTRS		! ftrs processed
	INTEGER*4	N_PR_PFTRS		! pr'd point-ftrs output
	INTEGER*4	N_PR_OFTRS		! pr'd open-ftrs output
	INTEGER*4	N_PR_CFTRS		! pr'd closed-ftrs outpt

	INTEGER*4	N_IN_FTRS		! ftrs in input
	INTEGER*4	N_IN_PFTRS		! point-ftrs in input
	INTEGER*4	N_IN_OFTRS		! open-ftrs in input
	INTEGER*4	N_IN_CFTRS		! closed-ftrs in input

	INTEGER*4	N_TR_FTRS		! ftrs transfered
	INTEGER*4	N_TR_PFTRS		! point-ftrs transfered
	INTEGER*4	N_TR_OFTRS		! open-ftrs transfered
	INTEGER*4	N_TR_CFTRS		! closed-ftrs transfered

	INTEGER*4	N_OT_FTRS		! ftrs output
	INTEGER*4	N_RJ_FTRS		! ftrs rejected
	INTEGER*4	N_LO_FTRS		! lost ftrs 

	INTEGER*4	N_NODES			! nodes found
	INTEGER*4	N_NODES_OUTPUT		! nodes output
	INTEGER*4	N_PROPER_ARMS_OUTPUT	! proper-arms output
	INTEGER*4	N_0_NODES		! deg 0 nodes found
	INTEGER*4	N_1_NODES		! deg 1 nodes found
	INTEGER*4	N_2_NODES		! deg 2 nodes found
	INTEGER*4	N_3_NODES		! deg 3 nodes found
	INTEGER*4	N_4_NODES		! deg 4 nodes found
	INTEGER*4	N_5PLUS_NODES		! deg 5+nodes found
	INTEGER*4	N_ARMS			! node arms
	INTEGER*4	N_SHRS			! sharing ftrs
	INTEGER*4	PROJ_PRI,VRTX_PRI,PERP_PRI
	INTEGER*4	JOIN_COUNT(NDIVS)	! join count
	INTEGER*4	PT_COUNT_ARRAY(ILINK_MAXCBROW)
	INTEGER*4	IWK(ILINK_MAXCBROW)	! per ftr workspace
	INTEGER*4	JWK(ILINK_MAXCBROW)	! per ftr workspace
	INTEGER*4	BASE_IPT(ILINK_MAXCBROW)
	INTEGER*4	ORIG_IPT(ILINK_MAXCBROW)
	INTEGER*4	CWK(ILINK_MAXCBROW)	! per ftr workspace
	INTEGER*4	LINKCCS(ILINK_MAXCBROW)	! per ftr workspace

	REAL*4		LINKPTS(2,ILINK_MAXCBROW)! per ftr workspace
	REAL*4		PWK(2,ILINK_MAXCBROW)	! per ftr workspace

	RECORD /IFF_CBH/	CBH	! CB header
	RECORD /IFF_CBD/	CBD	! CB data
	RECORD /ILINK_CBD/	BIG_CBD	! CB data for a whole feature

C **********************************************************************

	COMMON/ILINK/

     &  CBH,CBD,BIG_CBD,

     &	NSTOL,NSTOL_SQ,NSTOL_ROOT2,JNTOL,JNTOL_PLUS,JNTOL_SQ,
     &	EXTOL,EXTOL_SQ,EXJNTOL,EXJNTOL_SQ,VRTOL,VRTOL_SQ,VER_RANGE,

     &	N_ACPRS,N_FCS,N_FCCS,N_REJFCS,N_STRFCS,
     &	N_PTS,N_ORIG_PTS,N_LAYERS,
     &	N_NODES,N_NODES_OUTPUT,N_0_NODES,N_1_NODES,
     &	N_2_NODES,N_3_NODES,N_4_NODES,N_5PLUS_NODES,
     &	N_ARMS,N_PROPER_ARMS_OUTPUT,N_SHRS,NLPTS,N_JPS,

     &	N_PR_FTRS,N_PR_PFTRS,N_PR_OFTRS,N_PR_CFTRS,
     &	N_ORIG_PR_FTRS,N_ORIG_PR_PFTRS,N_ORIG_PR_OFTRS,N_ORIG_PR_CFTRS,
     &	N_IN_FTRS,N_IN_PFTRS,N_IN_OFTRS,N_IN_CFTRS,
     &	N_TR_FTRS,N_TR_PFTRS,N_TR_OFTRS,N_TR_CFTRS,
     &	N_OT_FTRS,N_RJ_FTRS,N_LO_FTRS,N_IN_LAYERS,

     &	XMIN,YMIN,XMAX,YMAX,XRANGE,YRANGE,

     &	FCC4,N_FCPFCC,SHFC4,SHRFC2,FCS4,REJFCS,STRFCS,
     &	FCPAIR,ACPAIR,LAYER,LAYER_NUMBER,LAST_INFTR_IN_LAYER,

     &	HAD_ACP,HAD_FCP,HAD_LCP,HAD_FCC,HAD_FRT,HAD_LITES2,
     &	HAD_REJFCS,HAD_STRFCS,HAD_ABS,
     &	HAD_SYMBOL_STRING,HAD_LAYERS,PROCESS_ALL_LAYERS,
     &	HAD_JNTOL,HAD_EXTOL,HAD_VRTOL,HAD_MINTOL,HAD_MINLEN,
     &	HAD_BPF,HAD_SHRFC,HAD_TOL,HAD_PAC,
     &	HAD_LLJOIN,HAD_PPJOIN,HAD_LPJOIN,
     &	HAD_PROJECT,HAD_BREAK,HAD_MERGE,HAD_STRUCTURE,
     &	HAD_PME,HAD_DEBUG,HAD_SORTARMS,HAD_MONITOR,HAD_WARNING,
     &	HAD_PARENT,HAD_SYMBOL,HAD_VERTEX,HAD_VERIFY,HAD_LIST,
     &	HAD_FREE_ENDS,HAD_FREE_ENDS_LAYER,
     &	HAD_KEEP,HAD_KEEP_COLINEAR,HAD_KEEP_FSN,HAD_KEEP_PARENT,
     &	FREE_ENDS_FC,FREE_ENDS_LAYER,KEEP_FSN,KEEP_PARENT,

     &	SHOW_TIME,XSECSIZ,YSECSIZ,NXSECTORS,NYSECTORS,

     &	LAST_OLD_PT,LAST_PR_FTR,
     &	PT_START,CC_START,PT_DST_START,PT_PR_FTR_START,
     &	MINSQDIST_START,
     &	NEAREST_START,NEAREST_INV_START,NXT_START,PRV_START,
     &	PDAT_START,QDAT_START,PT_SEEN_START,IN_FTR_ADDR_START,
     &	IN_FTR_STATUS_START,FTR_PTS_START,FTR_START_START,FTR_NDS_START,
     &	FTR_DAT_START,FTR_ORIG_PR_FTR_START,FTR_INFTR_START,
     &	FTR_IFC2_START,FTR_LAYER_START,PNT_FTR_START,WORKSPACE_START,
     &	NPT_START,HEADSHR_START,SHR_START,
     &	BASE_NODE_START,NOD_ADDR_START,HEADARM_START,ARM_START,
     &	NWT_START,NHT_START,

     &	MAXPTS_CMN,MAXINFTRS_CMN,MAXOUTFTRS_CMN,MAXNODES_CMN,
     &	MAXARMS_CMN,MAXSHRS_CMN,

     &	NEED_DATA_PER_POINT,NEED_DATA_PER_FEATURE,NEED_NODATA,
     &	NO_BETWEEN_CHECK,BPF,THIN_TOL,COORD_TOL,MINTOL,MINLEN,

     &	PROJ_PRI,VRTX_PRI,PERP_PRI,IN_OPEN,OUT_OPEN,TOT_PTS,LITES2_OPEN,
     &	JOIN_COUNT,OUT_RANGE,BASE_IPT,ORIG_IPT,
     &	N_OUT_PTS,IWK,PWK,CWK,LINKPTS,LINKCCS,PT_COUNT_ARRAY,JWK,

     &	CAP_LEN,CAP_NAM,N_PACS,CAP_CODE,PACODE,NEWPAC,
     &	PAC_LIN,PAC_JNTOL,PAC_EXTOL,COLH_XY,MIN_PAC,MAX_PAC

