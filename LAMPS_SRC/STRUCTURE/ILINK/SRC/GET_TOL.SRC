C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1993-05-28 13:58:44.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL*4 FUNCTION GET_TOL()
 
***	IDENT	28MY93
***	MODULE	GET_TOL
 
C	Copyright : Laser-Scan, Cambridge, England
C	Author	  : Andrew Morris			    30-Nov-1988

CMOD	 Reset NEWPAC(0), PACODE(0) to MIN_PAC-1	WJJ  2-Feb-1990
CMOD1232 Fix access violation in ACDFND_NAME when ACD name is not found 
C							 JB 28-May-1993
	IMPLICIT	NONE

C Parameters
	INCLUDE		'($SSDEF)'
	INCLUDE		'LSL$CMNLSL:READSTR.PAR'
	INCLUDE		'LSL$CMNILINK:ILINKMSG.PAR'
	INCLUDE		'LSL$CMNLSL:LSLLIBMSG.PAR'

C Commons
	INCLUDE		'LSL$CMNFRT:FRTACD.CMN'
	INCLUDE		'LSL$CMNLSL:EXPC.CMN'
	INCLUDE		'LSL$CMNLSL:EXCEPTION.CMN'
	INCLUDE		'LSL$CMNILINK:ILINK.CMN'
	INCLUDE		'LSL$CMNILINK:ILINKCHAR.CMN'

C Workspace
	INTEGER*4	IERR			! error return
	INTEGER*4	I
	INTEGER*4	OK			! ret code
	INTEGER*4	LINE_NUM		! TOL-file line No.
	INTEGER*4	CODE
	REAL*4		JTOL,ETOL,DEFTOL
	REAL*4		MAX_PAC_JNTOL,MAX_PAC_EXTOL
	BYTE		CH			! a character
 
C Functions
	LOGICAL*4	ACDFND_NAME
	LOGICAL*4	RDCHS
	LOGICAL*4	RDLONG,RDREAL
	INTEGER*4	FLROPN,FLRLIN,FLRCLO
	INTEGER*4	READSTR

CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
C	Reads join and extension tolerances from TOLFILE to be used
C	with each different point capture method.
C
C	Text from '!' to end of line is ignored.
C
C	First non comment line holds the attribute name which is to be
C	used for point capture method, as follows:
C
C	  capture-method-attribute-name
C	    up to 20 characters
C
C	All other non comment lines have free-format as follows:
C
C	  capture-method-code  join-tolerance  extension-tolerance
C	  integer              integer         integer
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC

	GET_TOL = SS$_NORMAL

C Open /TOL file 

	OK = FLROPN(1,TOLFILE(:TOL_LEN),IERR)
	IF (.NOT.OK) THEN
	  GET_TOL = ILINK__OPNTOL
	  CALL LSL_PUTMSG(GET_TOL,TOLFILE(:TOL_LEN))
	  CALL LSL_ADDMSG(OK)
	  CALL LSL_ADDMSG(IERR)
	  GOTO 999
	END IF

	N_PACS = 0
	LINE_NUM = 0

C Get capture method attribute name

10	OK = FLRLIN(,,,IERR)
	LINE_NUM = LINE_NUM+1
	IF (OK.EQ.LSL__EOF) THEN	! end of file read
	  GET_TOL = ILINK__NOATTNAM
	  CALL LSL_PUTMSG(GET_TOL,TOLFILE(:TOL_LEN))
	  GOTO 30
	END IF
	IF (.NOT.OK) THEN
	  GET_TOL = ILINK__BADTOLLIN
	  CALL LSL_PUTMSG(GET_TOL,LINE_NUM,TOLFILE(:TOL_LEN))
	  CALL LSL_ADDMSG(OK)
	  CALL LSL_ADDMSG(IERR)
	  GOTO 30
	END IF

	CALL BSLN
	IF (RDCHS(CH)) GOTO 10		! empty line?
	IF (CH.EQ.'!') GOTO 10		! comment
	CALL BSCH			! backspace

	CAP_LEN = READSTR(CAP_NAM,,ON_SPACE,,IERR)
	IF (.NOT.IERR) THEN
	  GET_TOL = ILINK__BADTOLLIN
	  CALL LSL_PUTMSG(GET_TOL,LINE_NUM)
	  GOTO 30
	END IF

	CALL STR$UPCASE(CAP_NAM(:CAP_LEN),CAP_NAM(:CAP_LEN))

C Look up corresponding attribute code in the FRT file (FRTINI has
C already been called in GET_FRT)

	OK = .NOT.ACDFND_NAME(CAP_NAM(:CAP_LEN))
	IF (.NOT.OK) THEN
	  GET_TOL = ILINK__NOATTCOD
	  CALL LSL_PUTMSG(GET_TOL,CAP_NAM(:CAP_LEN))
	  GOTO 30
	END IF

	CAP_CODE = ACD_CODE
	MIN_PAC = ACD_MIN_MAX_I(1)
	MAX_PAC = ACD_MIN_MAX_I(2)
C
C Reset default/missing code values
	PACODE(0) = MIN_PAC-1	! I don't think this is used - WJJ
	NEWPAC(0) = MIN_PAC-1

	IF (MAX_PAC-MIN_PAC+1.GT.PAC_RANGE) THEN
	  GET_TOL = ILINK__BADPACRANGE
	  CALL LSL_PUTMSG(GET_TOL,PAC_RANGE)
	  GOTO 30
	END IF

C Get capture-method codes and associated tolerances

	IF (HAD_JNTOL) THEN
	  DEFTOL = JNTOL
	ELSE
	  DEFTOL = -1
	END IF

	MAX_PAC_JNTOL = 0
	MAX_PAC_EXTOL = 0

20	OK = FLRLIN(,,,IERR)
	LINE_NUM = LINE_NUM+1
	IF (OK.EQ.LSL__EOF) GOTO 30	! end of file read
	IF (.NOT.OK) THEN
	  GET_TOL = ILINK__BADTOLLIN
	  CALL LSL_PUTMSG(GET_TOL,LINE_NUM,TOLFILE(:TOL_LEN))
	  CALL LSL_ADDMSG(OK)
	  CALL LSL_ADDMSG(IERR)
	  GOTO 30
	END IF

	CALL BSLN
	IF (RDCHS(CH)) GOTO 20		! enpty line?
	IF (CH.EQ.'!') GOTO 20		! comment
	CALL BSCH			! backspace

	IF (RDLONG(CODE)) THEN
	  GET_TOL = ILINK__BADTOLLIN
	  CALL LSL_PUTMSG(GET_TOL,LINE_NUM,TOLFILE(:TOL_LEN))
	  IF (ERRNUM.NE.LSL__UNEXPEOL) THEN
	    CALL LSL_ADDMSG(ERRNUM)
	    IF (ERRNUM.EQ.LSL__HADEXCP) CALL LSL_ADDMSG(LSL_EXCP)
	  END IF
	  GOTO 30
	END IF
	IF (CODE.LT.MIN_PAC.OR.CODE.GT.MAX_PAC) THEN
	  GET_TOL = ILINK__BADPAC
	  CALL LSL_PUTMSG(GET_TOL,LINE_NUM,MIN_PAC,MAX_PAC)
	  GOTO 30
	END IF

	IF (RDREAL(JTOL)) THEN		! read join tolerance
	  IF (ERRNUM.EQ.LSL__UNEXPEOL) THEN
	    JTOL = DEFTOL
	  ELSE
	    GET_TOL = ILINK__BADTOLLIN
	    CALL LSL_PUTMSG(GET_TOL,LINE_NUM,TOLFILE(:TOL_LEN))
	    IF (ERRNUM.NE.LSL__UNEXPEOL) THEN
	      CALL LSL_ADDMSG(ERRNUM)
	      IF (ERRNUM.EQ.LSL__HADEXCP) CALL LSL_ADDMSG(LSL_EXCP)
	    END IF
	    GOTO 30
	  END IF
	END IF

	IF (RDREAL(ETOL)) THEN		! read extension tolerance
	  IF (ERRNUM.EQ.LSL__UNEXPEOL) THEN
	    ETOL = JTOL			! default is JTOL
	  ELSE
	    GET_TOL = ILINK__BADTOLLIN
	    CALL LSL_PUTMSG(GET_TOL,LINE_NUM,TOLFILE(:TOL_LEN))
	    IF (ERRNUM.NE.LSL__UNEXPEOL) THEN
	      CALL LSL_ADDMSG(ERRNUM)
	      IF (ERRNUM.EQ.LSL__HADEXCP) CALL LSL_ADDMSG(LSL_EXCP)
	    END IF
	    GOTO 30
	  END IF
	END IF

	IF (N_PACS.EQ.MAXPACS) THEN
	  CALL LSL_PUTMSG(ILINK__TOOMNYPACS,MAXPACS)
	  GET_TOL = ILINK__TOOMNYPACS
	  GOTO 30
	END IF
	N_PACS = N_PACS+1
	PACODE(N_PACS) = CODE
	PAC_JNTOL(N_PACS) = JTOL
	PAC_EXTOL(N_PACS) = ETOL
	PAC_LIN(CODE-MIN_PAC+1) = N_PACS
	MAX_PAC_JNTOL = MAX(MAX_PAC_JNTOL,PAC_JNTOL(N_PACS))
	MAX_PAC_EXTOL = MAX(MAX_PAC_EXTOL,PAC_EXTOL(N_PACS))

	GOTO 20				! read next line from TOL file

30	CALL FLRCLO(1)

	IF (.NOT.HAD_JNTOL) THEN
	  JNTOL = MAX_PAC_JNTOL
	  DO 40 I = 1,N_PACS
	    IF (PAC_JNTOL(I).EQ.DEFTOL) PAC_JNTOL(I) = MAX_PAC_JNTOL
40	  CONTINUE
	END IF

	IF (.NOT.HAD_EXTOL) THEN
	  EXTOL = MAX_PAC_EXTOL
	  DO 50 I = 1,N_PACS
	    IF (PAC_EXTOL(I).EQ.DEFTOL) PAC_EXTOL(I) = MAX_PAC_EXTOL
50	  CONTINUE
	END IF

	EXJNTOL = MAX(MAX_PAC_EXTOL,MAX_PAC_JNTOL)
	EXJNTOL_SQ = EXJNTOL**2

999	RETURN
	END

