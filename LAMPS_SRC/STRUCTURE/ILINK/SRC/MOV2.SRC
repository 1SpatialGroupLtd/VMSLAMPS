	SUBROUTINE MOV2(PT,NXT,NEAREST,PDAT,FTR_PTS,
     &			MAXPTS,MAXOUTFTRS)
 
***	MODULE	MOV2
***	IDENT	08AP88
C
C	Copyright : Laser-Scan Laboratories Ltd., Cambridge, England
C	Created   : ACM					Month 1986
 
	IMPLICIT NONE
 
C Data in
	INTEGER*4	MAXPTS,MAXOUTFTRS
	INTEGER*4	NXT(MAXPTS)
	INTEGER*4	NEAREST(MAXPTS)
	INTEGER*4	FTR_PTS(2,MAXOUTFTRS)

	REAL*4		PT(2,MAXPTS)

	LOGICAL*1	PDAT(MAXPTS)

C Commons
	INCLUDE		'LSL$CMNILINK:ILINK.CMN'
 
C Workspace
	INTEGER*4	IPTSTA,IPTFIN		! start/fin pt indices
	INTEGER*4	IPT,JPT			! point indices
	INTEGER*4	I_PR_FTR		! pr-ftr index
	INTEGER*4	ISN
	INTEGER*4	MAP_COUNT

	INTEGER*2	ISTAT(4)

	REAL*4		MAP(2,2)
	REAL*4		TIC
 
	LOGICAL  	ATNODE

	DATA ISTAT/777,3*0/

CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
C	Moves connected but non-paired pts to final position,
C
C	ie. points P which are connected but not paired are moved
C	to the position of the paired-point to which P is directly
C	connected.
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
 
	MAP_COUNT = 0
	TIC = (XMAX-XMIN)/500.0

	DO 40 I_PR_FTR = 1,N_PR_FTRS
	  IPTSTA = FTR_PTS(1,I_PR_FTR)
	  IPTFIN = FTR_PTS(2,I_PR_FTR)
	  IPT = IPTSTA
	  GOTO 20
 
10	  IPT = NXT(IPT)
20	  JPT = NEAREST(IPT)
	  IF (JPT.EQ.NIL) GOTO 30		! IPT not connected
C	  IF (NEAREST(JPT).EQ.IPT) GOTO 30	! IPT paired
 
C Debug aid
	  IF (HAD_DEBUG) THEN
	    ISN = 0
	    MAP_COUNT = MAP_COUNT+1
	    CALL IFFNF(MAP_COUNT,ISN)
	    CALL IFFFS(ISTAT)
	    MAP(1,1) = PT(1,IPT)
	    MAP(2,1) = PT(2,IPT)
	    MAP(1,2) = PT(1,JPT)
	    MAP(2,2) = PT(2,JPT)
	    CALL WRTSTR(MAP,2,0)

C	    IF (PDAT(IPT)) THEN
C	      MAP(1,1) = PT(1,IPT)-TIC
C	      MAP(2,1) = PT(2,IPT)
C	      MAP(1,2) = PT(1,IPT)+TIC
C	      MAP(2,2) = PT(2,IPT)
C	      CALL WRTSTR(MAP,2,0)
C	      MAP(1,1) = PT(1,IPT)
C	      MAP(2,1) = PT(2,IPT)-TIC
C	      MAP(1,2) = PT(1,IPT)
C	      MAP(2,2) = PT(2,IPT)+TIC
C	      CALL WRTSTR(MAP,2,0)
C	    END IF

C	    IF (PDAT(JPT)) THEN
C	      MAP(1,1) = PT(1,JPT)-TIC
C	      MAP(2,1) = PT(2,JPT)
C	      MAP(1,2) = PT(1,JPT)+TIC
C	      MAP(2,2) = PT(2,JPT)
C	      CALL WRTSTR(MAP,2,0)
C	      MAP(1,1) = PT(1,JPT)
C	      MAP(2,1) = PT(2,JPT)-TIC
C	      MAP(1,2) = PT(1,JPT)
C	      MAP(2,2) = PT(2,JPT)+TIC
C	      CALL WRTSTR(MAP,2,0)
C	    END IF
	    CALL IFFEF
	  END IF

	  PT(1,IPT) = PT(1,JPT)			! IPT onto JPT
	  PT(2,IPT) = PT(2,JPT)
 
30	  IF (IPT.NE.IPTFIN) GOTO 10
40	CONTINUE
 
	RETURN
	END
