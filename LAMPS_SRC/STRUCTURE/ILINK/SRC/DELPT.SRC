	SUBROUTINE DELPT(	IPT,
     &				NXT,PRV,PT_PR_FTR,
     &				FTR_PTS,PNT_FTR,
     &				MAXPTS,MAXOUTFTRS)

***	IDENT	29MY87
***	MODULE	DELPT

C	Copyright : Laser-Scan Laboratories Ltd., Cambridge, England
C	Created   : ACM					July 1986

	IMPLICIT NONE

	INCLUDE		'LSL$CMNILINK:ILINKMSG.PAR'

	INCLUDE		'LSL$CMNILINK:ILINK.CMN'

C Data in
	INTEGER*4	IPT		! PT index of pt to be deleted
	INTEGER*4	MAXPTS,MAXOUTFTRS
	INTEGER*4	NXT(MAXPTS),PRV(MAXPTS)
	INTEGER*4	PT_PR_FTR(MAXPTS)
	INTEGER*4	FTR_PTS(2,MAXOUTFTRS)

	LOGICAL*1	PNT_FTR(MAXOUTFTRS)

C Workspace
	INTEGER*4	IPTPRV,IPTNXT	! prev/next pts
	INTEGER*4	IPTSTA,IPTFIN	! start/fin pt indices
	INTEGER*4	I_PR_FTR	! ftr index
	LOGICAL  	CLOSED		! is ftr closed closed loop?
	LOGICAL  	STA,FIN		! is pt start/fin pt?

CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
C	Delete point IPT from linked list
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC

C Do not try to delete if already deleted

	IF (PRV(IPT).LT.0) RETURN

C Find neighbouring pt indices

	IPTPRV = PRV(IPT)
	IPTNXT = NXT(IPT)

C Find whether ftr start or end pt

	I_PR_FTR = PT_PR_FTR(IPT)
	IF (PNT_FTR(I_PR_FTR)) RETURN		! don't delete pt-ftrs
	IPTSTA = FTR_PTS(1,I_PR_FTR)
	IPTFIN = FTR_PTS(2,I_PR_FTR)

	IF (IPTSTA.EQ.IPTFIN) THEN		! pt ftr being lost
	  IF (I_PR_FTR.GT.N_ORIG_PR_FTRS) THEN
	    FTR_PTS(1,I_PR_FTR) = NIL
	    FTR_PTS(2,I_PR_FTR) = NIL
	  END IF
	  RETURN
	END IF

	STA = IPT.EQ.IPTSTA
	FIN = IPT.EQ.IPTFIN

C Special attention must be taken if deleting a ftr start or end pt

	CLOSED = NXT(IPTFIN).EQ.IPTSTA

	IF (STA) FTR_PTS(1,I_PR_FTR) = IPTNXT
	IF (CLOSED.OR..NOT.STA) NXT(IPTPRV) = IPTNXT

	IF (FIN) FTR_PTS(2,I_PR_FTR) = IPTPRV
	IF (CLOSED.OR..NOT.FIN) PRV(IPTNXT) = IPTPRV

	PRV(IPT) = -1			! mark as deleted
	END

