C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1987-09-10 17:48:46.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE ASSIGN_VAL(A,B,NBYTES)

***	MODULE ASSIGN_VAL
***	IDENT  12AU87

C	Copyright : Laser-Scan Laboratories Ltd., Cambridge, England
C	Author	: ACM					18th Nov 1986

	IMPLICIT NONE

C Data in
	BYTE		NBYTES			! # bytes to transfer
	BYTE		A(NBYTES)		! array to transfer from

C Data out
	BYTE		B(NBYTES)		! array to transfer to

CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
C	Sets B(1..NBYTES) = A(1..NBYTES), where NBYTES must be 1,2,4 or8
C
C	eg. Transfer *2 value in I-th element of *2 array with start
C	address ARRAY_START, to *2 vavariable X :
C
C	INTEGER*2	X
C
C	CALL ASSIGN_VAL(%VAL(ARRAY_START+2*(I-1)),X,2)
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC

C	       1   2   3   4   5   6   7   8
	GOTO (20, 30, 10, 40, 10, 10, 10, 50) NBYTES

10	TYPE*,'*** Illegal No. of bytes in routine ASSIGN_VAL'
	RETURN

20	B(1) = A(1)
	RETURN

30	B(1) = A(1)
	B(2) = A(2)
	RETURN

40	B(1) = A(1)
	B(2) = A(2)
	B(3) = A(3)
	B(4) = A(4)
	RETURN

50	B(1) = A(1)
	B(2) = A(2)
	B(3) = A(3)
	B(4) = A(4)
	B(5) = A(5)
	B(6) = A(6)
	B(7) = A(7)
	B(8) = A(8)

	END
