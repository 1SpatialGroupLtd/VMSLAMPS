C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1991-03-12 17:21:04.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL*4 FUNCTION CHKVEX3(PFTR,QFTR,IP,IQ)

***	MODULE	CHKVEX3
***	IDENT	12MR91

C	Copyright : Laser-Scan Laboratories Ltd., Cambridge, England

CMOD	Converted to use Point Accuracy Codes		ACM 05-Dec-1988
CMOD	Made a function					ACM 10-Sep-1987
CMOD	STATUS common block added			TJH 29-May-1987

C	Created   : ACM					       Sep 1986

	IMPLICIT NONE

	INCLUDE		'LSL$CMNILINK:ILINKMSG.PAR'

C Data in
	INTEGER*4	PFTR,QFTR		! line indices
	INTEGER*4	IP			! pt at start of P vectr
	INTEGER*4	IQ			! pt at start of Q vectr

C Commons
	INCLUDE		'LSL$CMNILINK:ILINK.CMN'
	INCLUDE		'LSL$CMNLSL:STATUS.CMN'

C Functions
	LOGICAL*4	LPJSUB

CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
C	Vector-pair processing routine for LPJOIN - passes call through
C	to LPJSUB so that this can refer to dynamically allocated
C	arrays directly, which this routine cannot since its argument
C	list must be of the standard form required by QUADSCAN
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC

	CHKVEX3 = LPJSUB(
     &			PFTR,QFTR,IP,IQ,
     &			%VAL(PT_START),
     &			%VAL(CC_START),
     &			%VAL(PRV_START),
     &			%VAL(NXT_START),
     &			%VAL(PNT_FTR_START),
     &			%VAL(FTR_PTS_START),
     &			%VAL(FTR_INFTR_START),
     &			%VAL(IN_FTR_STATUS_START),
     &			MAXPTS_CMN,MAXINFTRS_CMN,MAXOUTFTRS_CMN)

	IF (.NOT.CHKVEX3) THEN
	  CHKVEX3 = ILINK__INTRNLERR
	  CALL LSL_PUTMSG(CHKVEX3,1,'LPJSUB')
	END IF

	RETURN	
	END

