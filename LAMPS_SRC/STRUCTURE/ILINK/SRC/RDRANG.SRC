C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1993-12-06 19:10:40.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL*4 FUNCTION RDRANG(I1,I2,END)
C
***	MODULE	RDRANG
***	IDENT	06DE93
C
C	Copyright : Laser-Scan Limited, Cambridge, England
C
CMOD1319 Set flag at '!' to signify end of reading	 JB  26-Nov-1993
CMOD	 Comment '!' now supported at beginning of line	TJH  02-Jun-1987
C
C	Author    : Andrew Morris				Sep 1986

	IMPLICIT NONE

C Data out
	INTEGER*4	I1,I2		! integer range
	LOGICAL		END		! comment, stop reading

C Commons
	INCLUDE		'LSL$CMNLSL:TXTC.CMN'

C Workspace
	BYTE		CH
	LOGICAL*4	ERR,EOLN

C Functions
	LOGICAL*4	RDCHS,RDLONG

CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
C	Function returns the next range pair from a list of numbers.
C
C	Single values return I1=I2
C
C	Spaces and TABs may be used as delimiters instead of commas.
C
C	Function returns TRUE if a range is found.
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC

	RDRANG = .FALSE.			! assume failure
	END    = .FALSE.

10	EOLN = RDCHS(CH)
	IF (EOLN) GOTO 60			! end of line
	IF (CH.EQ.',') GOTO 10			! read past ','
	IF (CH.EQ.'!') THEN
	  END = .TRUE.
	  GOTO 50				! comment - return
	ENDIF

	CALL BSCH
	IF (CH.GE.'0'.AND.CH.LE.'9') GOTO 20	! integer
	IF (CH.EQ.'-') GOTO 20
	GOTO 60					! no integer here

C Read integer (either single value or lower limit of a range)

20	ERR = RDLONG(I1)
	IF (ERR) GOTO 60
	I2 = I1

C Read delimiter
	EOLN = RDCHS(CH)
	IF (EOLN) GOTO 50			! return successful
	IF (CH.EQ.':') GOTO 30			! upper limit may follow
	IF (CH.EQ.'!') THEN
	  END = .TRUE.
	  GOTO 50				! comment - return
	ENDIF

	CALL BSCH
	GOTO 50					! return successful

C Read in upper limit of a range

30	EOLN = RDCHS(CH)
	IF (EOLN) GOTO 60

	IF (CH.GE.'0'.AND.CH.LE.'9') GOTO 40
	IF (CH.EQ.'-') GOTO 40
	IF (CH.EQ.'!') THEN
	  END = .TRUE.
	  GOTO 50			! comment - return
	ENDIF

	GOTO 60

40	CALL BSCH
	ERR = RDLONG(I2)
	IF (ERR) GOTO 60

	IF (I1.GT.I2) GOTO 60

50	RDRANG = .TRUE.

60	RETURN
	END

