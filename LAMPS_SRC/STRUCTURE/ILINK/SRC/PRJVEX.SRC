C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1988-12-02 14:55:14.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL*4 FUNCTION PRJVEX(ENDP,NXTP,ETOL,XNODE,YNODE)

***	IDENT	29MY87
***	MODULE	PRJVEX

C	Copyright : Laser-Scan Laboratories Ltd., Cambridge, England
C	Created   : ACM					Month 1986
CMOD	Converted to use Point Accuracy Codes		ACM 02-Dec-1988

	IMPLICIT NONE

	INCLUDE		'LSL$CMNILINK:ILINK.CMN'

C Data in
	REAL*4	ENDP(2,2)			! first/last pt in ftrs
	REAL*4	NXTP(2,2)			! pt next to these pts
	REAL*4	ETOL(2)				! externsion tolerance

C Data out
	REAL*4		XNODE,YNODE		! node position

C Workspace
	REAL*4		P1X,P1Y,P2X,P2Y		! coords for IPT1 & JPT1
	REAL*4		Q1X,Q1Y,Q2X,Q2Y		! coords for IPT2 & JPT2
	REAL*4		P1P2X,P1P2Y		! vec1 into node
	REAL*4		Q1Q2X,Q1Q2Y		! vec2 into node
	REAL*4		P2Q2X,P2Q2Y		! vec from P2 to Q2
	REAL*4		DXP,DYP			! vec from P2 to node
	REAL*4		DXQ,DYQ			! vec from Q2 to node
	REAL*4		D2P			! dist of P2 from Q12
	REAL*4		D2Q			! dist of Q2 from P12
	REAL*4		PF,QF			! scale factors
	REAL*4		DET			! a determinant

CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
C	Finds position for node when only arms are two non-point ftrs
C	by projecting ftr end vectors to meet.
C
C	If intersection point is further than EXTOL for either end,
C	PRJVEX does nothing and returns FALSE.
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC

	PRJVEX = .FALSE.

	P1X = NXTP(1,1)
	P1Y = NXTP(2,1)
	P2X = ENDP(1,1)
	P2Y = ENDP(2,1)

	Q1X = NXTP(1,2)
	Q1Y = NXTP(2,2)
	Q2X = ENDP(1,2)
	Q2Y = ENDP(2,2)

	P1P2X = P2X-P1X				! vector P1P2 into node
	P1P2Y = P2Y-P1Y

	Q1Q2X = Q2X-Q1X				! vector Q1Q2 into node
	Q1Q2Y = Q2Y-Q1Y

	DET = Q1Q2X*P1P2Y-Q1Q2Y*P1P2X
	IF (ABS(DET).LT.COORD_TOL) GOTO 999	! if parallel then fail

	P2Q2X = Q2X-P2X				! vector P2Q2
	P2Q2Y = Q2Y-P2Y

	D2P = P2Q2Y*Q1Q2X - P2Q2X*Q1Q2Y		! P2Q2.NQ
	D2Q = P2Q2Y*P1P2X - P2Q2X*P1P2Y		! P2Q2.NP

	PF = D2P/DET
	QF = D2Q/DET

	DXP = PF*P1P2X
	DYP = PF*P1P2Y

	IF (DXP**2+DYP**2.GT.ETOL(1)**2) GOTO 999

	DXQ = QF*Q1Q2X
	DYQ = QF*Q1Q2Y

	IF (DXQ**2+DYQ**2.GT.ETOL(2)**2) GOTO 999

	XNODE = P2X+DXP
	YNODE = P2Y+DYP

	PRJVEX = .TRUE.
999	END

