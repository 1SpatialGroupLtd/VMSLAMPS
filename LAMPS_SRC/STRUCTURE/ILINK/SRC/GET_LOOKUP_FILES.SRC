	LOGICAL*4 FUNCTION GET_LOOKUP_FILES()
 
***	IDENT	07MR91
***	MODULE	GET_LOOKUP_FILES
 
C	Copyright : Laser-Scan Laboratories, Cambridge, England

CMOD	Use new dynamic FRTLIB				 JB  05-Mar-1991
CMOD	Added TOL and PAC file facilities		ACM  30-Nov-1988
CMOD	Added ACP file facility				ACM  21-Jun-1988
CMOD	Introduced NOCYCLES check			ACM  24-Mar-1988

C	Created   					TJH  29-May-1987

	IMPLICIT NONE

C Parameters
	INCLUDE		'($SSDEF)'
	INCLUDE		'LSL$CMNILINK:ILINKMSG.PAR'

C Commons
	INCLUDE		'LSL$CMNILINK:ILINK.CMN' 
	INCLUDE		'LSL$CMNILINK:ILINKCHAR.CMN' 
	INCLUDE		'LSL$CMNFRT:FRTCOM.CMN' 

C Workspace
	INTEGER*4	NCYCLES		! num of implicit cycles
	LOGICAL*4	OK		! logical-function ret status

C Functions
	LOGICAL*4	GET_TOL		! open and read TOL file
	LOGICAL*4	GET_PAC		! open and read PAC file
	LOGICAL*4	GET_FCC		! open and read FCC file
	LOGICAL*4	GET_ACP		! open and read ACP file
	LOGICAL*4	GET_FCP		! open and read FCP file
	LOGICAL*4	GET_LCP		! open and read LCP file
	LOGICAL*4	GET_FRT		! open and read FRT file
	LOGICAL*4	FRTINI
	LOGICAL*4	NOCYCLES	! no cycles in FCPAIR matrix?

CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
C	Function to control opening of selected lookup files
C
C	Returns SS$_NORMAL if successful or one of a variety of LSLLIB 
C	or ILINK condition codes if fails.
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC

	GET_LOOKUP_FILES = SS$_NORMAL	! assume success

C /FRT file

	IF (HAD_FRT) THEN
	   OK = FRTINI(FRTFILE(1:FRT_LEN))
	   IF (OK) THEN				! error
	     GET_LOOKUP_FILES = ILINK__OPNFRT
	     CALL LSL_PUTMSG(GET_LOOKUP_FILES, FRTFILE(1:FRT_LEN))
	     GOTO 10
	   ENDIF
C
	   GET_LOOKUP_FILES = GET_FRT(%VAL(FRTINT_LOC))
	   IF (.NOT.GET_LOOKUP_FILES) GOTO 10
	END IF

C /TOL file

	IF (HAD_TOL) THEN
	  GET_LOOKUP_FILES = GET_TOL()
	  IF (.NOT.GET_LOOKUP_FILES) GOTO 10
	END IF

C /PAC file

	IF (HAD_PAC) THEN
	  GET_LOOKUP_FILES = GET_PAC()
	  IF (.NOT.GET_LOOKUP_FILES) GOTO 10
	END IF

C /FCC file

	IF (HAD_FCC) THEN
	  GET_LOOKUP_FILES = GET_FCC()
	  IF (.NOT.GET_LOOKUP_FILES) GOTO 10
	END IF

C /ACP file

	IF (HAD_ACP) THEN
	  GET_LOOKUP_FILES = GET_ACP()
	  IF (.NOT.GET_LOOKUP_FILES) GOTO 10
	END IF

C /FCP file

	IF (HAD_FCP) THEN
	  GET_LOOKUP_FILES = GET_FCP()
	  IF (.NOT.GET_LOOKUP_FILES) GOTO 10
	END IF

C /LCP file

	IF (HAD_LCP) THEN
	  GET_LOOKUP_FILES = GET_LCP()
	  IF (.NOT.GET_LOOKUP_FILES) GOTO 10
	END IF

C Check for possible cycles within the FCPAIR connection-matrix, as
C ILINK would go into an infinite loop if a point A moved onto a point
C B which in turn (eventually) moved back onto A 

	OK = .TRUE.
	IF (HAD_FCP) THEN
	  OK = NOCYCLES(N_FCS,NCYCLES)
	ELSE IF (HAD_LCP) THEN
	  OK = NOCYCLES(N_LAYERS,NCYCLES)
	END IF
	IF (.NOT.OK) THEN
	  GET_LOOKUP_FILES = ILINK__ILLEGALCYCLE
	  CALL LSL_PUTMSG(GET_LOOKUP_FILES,NCYCLES)
	  GOTO 10
	END IF

10	RETURN
	END
