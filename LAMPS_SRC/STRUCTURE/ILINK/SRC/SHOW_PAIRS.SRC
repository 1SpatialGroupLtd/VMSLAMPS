	SUBROUTINE SHOW_PAIRS(N,MAXN,LIST,PAIR)

***	MODULE	SHOW_PAIRS
***	IDENT	27MY88

C	Copyright : Laser-Scan Laboratories Ltd., Cambridge, England
C	Created   : ACM					23-May-1988

	IMPLICIT NONE

C Data in
	INTEGER*4	N,MAXN
	INTEGER*4	LIST(MAXN)
	LOGICAL*1	PAIR(MAXN,MAXN)

C Workspace
	INTEGER*4	ROW,COL
	INTEGER*4	FIRST_VAL,LAST_VAL,VAL
	LOGICAL*4	START_OF_RUN
	LOGICAL*4	END_OF_RUN
	LOGICAL*4	RUN_OPEN
	LOGICAL*4	HAD_RUN
	LOGICAL*4	GOT_VAL

CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
C	Show pairs in PAIR, in a compact form, i.e. contiguous
C	sequences of values like 3,4,5,6,7 are written "3:7". 
C
C	PAIR = 1 if LIST(ROW) is left-side of pair PAIR(ROW,COL) with
C	LIST(COL).
C
C	Values in LIST must be increasing.
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC

	DO 20 ROW = 1,N		! for each row in PAIR do

	  HAD_RUN = .FALSE.	! buffer is empty
	  RUN_OPEN = .FALSE.	! no run yet open

	  DO 10 COL = 1,N
	    VAL = LIST(COL)
	    GOT_VAL = PAIR(ROW,COL).EQ.1

C Decide whether start of run - run starts when run is not open and:
C - you have got a new value

	    IF (RUN_OPEN) THEN
	      START_OF_RUN = .FALSE.
	    ELSE
	      START_OF_RUN = GOT_VAL
	    ENDIF

C If start of run then initialise run

	    IF (START_OF_RUN) THEN
	      RUN_OPEN = .TRUE.
	      IF (.NOT.HAD_RUN)
     &	        CALL EXPAND('          %I  with  ',LIST(ROW))
	      FIRST_VAL = VAL
	    END IF

C Decide whether end of run - run ends when run is open and:
C - a run is open and you are at the end of a row, or
C - current val is > 1 larger than previous val in open run

	    IF (.NOT.RUN_OPEN) THEN
	      END_OF_RUN = .FALSE.
	    ELSE IF (COL.EQ.N) THEN
	      END_OF_RUN = RUN_OPEN
	      IF (END_OF_RUN.AND.GOT_VAL) LAST_VAL = VAL
	    ELSE IF (GOT_VAL.AND..NOT.START_OF_RUN) THEN
	      END_OF_RUN = VAL.GT.LAST_VAL+1
	    ELSE
	      END_OF_RUN = .FALSE.
	    ENDIF

C If end of run then append it to output buffer

	    IF (END_OF_RUN) THEN
	      IF (HAD_RUN) CALL APPEND(', ')
	      IF (FIRST_VAL.EQ.LAST_VAL) THEN
	        CALL APPEND('%N',FIRST_VAL)
	      ELSE
	        CALL APPEND('%N:%N',FIRST_VAL,LAST_VAL)
	      END IF
	      HAD_RUN = .TRUE.		! buffer no longer empty
	      RUN_OPEN = GOT_VAL	! new run open?
	      IF (RUN_OPEN) FIRST_VAL = VAL
	    END IF

	    IF (GOT_VAL) LAST_VAL = VAL	! note last value

10	  CONTINUE

C Write output buffer if there is anything in it for this row

	  IF (HAD_RUN) CALL TTWLIN()
20	CONTINUE

	END

