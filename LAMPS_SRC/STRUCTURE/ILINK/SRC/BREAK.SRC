	LOGICAL*4 FUNCTION BREAK(
     &		PT,CC,NXT,PRV,NEAREST,PT_PR_FTR,PDAT,FTR_PTS,FTR_START,
     &		FTR_INFTR,FTR_ORIG_PR_FTR,FTR_IFC2,FTR_LAYER,
     &		IN_FTR_STATUS,WORKSPACE,
     &		MAXPTS,MAXINFTRS,MAXOUTFTRS,MAXNODES)

***	MODULE	BREAK
***	IDENT	09MR93

C	Copyright: Laser-Scan Ltd., Cambridge, England

CMOD	Calls QUADSCAN with FTR_LAYER instead of FTR_IFC2
C	when /LCP is used				ACM 21-Mar-1988
CMOD	Made to use new standard QUADSCAN		ACM 10-Sep-1987
CMOD	Made a function					TJH 29-May-1987
C	Created   : ACM					      July 1986

	IMPLICIT NONE

C Parameters
	INCLUDE		'($SSDEF)'

C Commons
	INCLUDE		'LSL$CMNILINK:ILINK.CMN'
	INCLUDE		'LSL$CMNLSL:STATUS.CMN'

C Data in/out
	INTEGER*4	MAXPTS,MAXINFTRS,MAXOUTFTRS,MAXNODES
	INTEGER*4	NXT(MAXPTS)
	INTEGER*4	PRV(MAXPTS)
	INTEGER*4	NEAREST(MAXPTS)
	INTEGER*4	FTR_PTS(2,MAXOUTFTRS)
	INTEGER*4	FTR_START(MAXOUTFTRS)
	INTEGER*4	FTR_INFTR(MAXOUTFTRS)
	INTEGER*4	PT_PR_FTR(MAXPTS)
	INTEGER*4	FTR_ORIG_PR_FTR(MAXOUTFTRS)
	INTEGER*4	WORKSPACE(12,MAXNODES)
	INTEGER*4	CC(MAXPTS)

	INTEGER*2	FTR_IFC2(MAXOUTFTRS)
	INTEGER*2	FTR_LAYER(MAXOUTFTRS)

	BYTE		IN_FTR_STATUS(MAXINFTRS)

	LOGICAL*1	PDAT(MAXPTS)

	REAL*4		PT(2,MAXPTS)

	REAL		TOL

C Externals
	LOGICAL*4	CHKVEX2
	EXTERNAL	CHKVEX2

C Functions
	LOGICAL*4	BREAK_FTRS
	LOGICAL*4	QUADSCAN

CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
C	Breaks features into separate parts wherever they touch or cross
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC

	BREAK = SS$_NORMAL

C Use a quadtree scan over all lines to insert points into each vector
C wherever it touches or crosses another

	CALL WRITEF('	Inserting intersection points')

	TOL = COORD_TOL
C	COORD_TOL = 0

	IF (HAD_LCP) THEN
	  BREAK = QUADSCAN(
     &		CHKVEX2,	! vector-pair processing routine
     &		MAXPTS,		! PT dimension
     &		PT,		! coords of all points in image
     &		N_PTS,		! num of pts in PT
     &		XMIN,XMAX,YMIN,YMAX,! point coord ranges
     &		.FALSE.,	! treat PT as contig array, not lnkd lst
     &		1,		! not using linked-list pointers
     &		NXT,		! linked-list ptrs for PT
     &		COORD_TOL,	! finite touch tolerance
     &		N_PR_FTRS,	! num of ftrs
     &		FTR_PTS,	! list of lin start/end PT inds
     &		FTR_LAYER,	! ftr layer index
     &		.FALSE.,	! treat as lines of vectors, not points
     &		.TRUE.,		! use layer-pair check
     &		FCPAIR,		! which layer-pairs to check?
     &		MAXLAYERS,	! FCPAIR dimension (must = MAXFCS)
     &		.TRUE.,		! do check features with themselves
     &		MAXNODES,	! WORKSPACE dimension
     &		WORKSPACE,	! workspace
     &		HAD_MONITOR)	! show running % completion?
	ELSE
	  BREAK = QUADSCAN(
     &		CHKVEX2,	! vector-pair processing routine
     &		MAXPTS,		! PT dimension
     &		PT,		! coords of all points in image
     &		N_PTS,		! num of pts in PT
     &		XMIN,XMAX,YMIN,YMAX,! point coord ranges
     &		.FALSE.,	! treat PT as contig array, not lnkd lst
     &		1,		! not using linked-list pointers
     &		NXT,		! linked-list ptrs for PT
     &		COORD_TOL,	! finite touch tolerance
     &		N_PR_FTRS,	! num of ftrs
     &		FTR_PTS,	! list of lin start/end PT inds
     &		FTR_IFC2,	! ftr feature code
     &		.FALSE.,	! treat as lines of vectors, not points
     &		HAD_FCP,	! use FC-pair check if had FCPfile only
     &		FCPAIR,		! which FC pairs to check?
     &		MAXFCS,		! FCPAIR dimension
     &		.TRUE.,		! do check features with themselves
     &		MAXNODES,	! WORKSPACE dimension
     &		WORKSPACE,	! workspace
     &		HAD_MONITOR)	! show running % completion?
	END IF

	IF (.NOT.BREAK) GOTO 10

C	COORD_TOL = TOL

C Break ftrs into separate links where they cross

	CALL WRITEF('	Breaking features at intersection points')

	BREAK = BREAK_FTRS(
     &		PT,CC,NXT,PRV,NEAREST,PT_PR_FTR,PDAT,FTR_PTS,FTR_START,
     &		FTR_INFTR,FTR_IFC2,FTR_LAYER,FTR_ORIG_PR_FTR,
     &		IN_FTR_STATUS,MAXPTS,MAXINFTRS,MAXOUTFTRS)

10	IF (BREAK) BREAK = SS$_NORMAL
	RETURN
	END

