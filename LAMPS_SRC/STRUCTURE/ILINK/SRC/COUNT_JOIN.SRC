C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1992-07-13 17:47:06.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE COUNT_JOIN(P1X,P1Y,P2X,P2Y)

***	IDENT	13JL92
***	MODULE	COUNT_JOIN

C	Copyright : Laser-Scan Ltd., Cambridge, England

CMOD1060 Use absolute coords if requested		JB 07-Nov-1991

C	Created   : ACM					Sep 1986

	IMPLICIT NONE

	INCLUDE		'LSL$CMNILINK:ILINK.CMN'
	INCLUDE		'LSL$CMNIFF:MD2DES.CMN'

C Data in
	REAL*4		P1X,P1Y			! pos moved to
	REAL*4		P2X,P2Y			! pos moved from

C Workspace
	REAL*4		DX,DY			! vec from p1 to p2
	REAL*4		DIST			! dist from pt
	REAL*4		SQDIST			! sq dist from pt
	INTEGER*4	IDIV			! range division index

CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
C	Notes distribution of join distances over 10 subdivisions
C	of the verification range.
C
C	If /VERIFY has been specified, then writes a message to
C	LITES2 command file for each join counted.
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC

	DX = P2X-P1X
	DY = P2Y-P1Y
	SQDIST = DX*DX+DY*DY
	IF (SQDIST.LT.VRTOL_SQ.OR.SQDIST.GT.EXJNTOL_SQ) GOTO 999
	DIST = SQRT(SQDIST)
	IF (VER_RANGE.LT.ZEROPLUS) THEN
	  IDIV = 1
	ELSE
	  IDIV = INT((NDIVS*(DIST-VRTOL))/VER_RANGE)+1
	ENDIF

	IF (IDIV.GE.1.AND.IDIV.LE.NDIVS) THEN
	  JOIN_COUNT(IDIV) = JOIN_COUNT(IDIV)+1
	  IF (HAD_VERIFY) THEN
	    CALL FLWSEL(LITES2LUN)

	    IF (HAD_ABS) THEN
	      CALL FLWRTF(
     &		'%%MESSAGE Point moved to (%^D%F10.3, %^D%F10.3)',
     &					     P1X+MD2LOC(1),P1Y+MD2LOC(2))
	      CALL FLWRTF('%%ABSOLUTE %^D%F %^D%F',
     &					     P2X+MD2LOC(1),P2Y+MD2LOC(2))
	    ELSE
	      CALL FLWRTF(
     &		'%%MESSAGE Point moved to (%F10.3, %F10.3)',P1X,P1Y)
	      CALL FLWRTF('%%POSITION %F %F',		    P2X,P2Y)
	    ENDIF

	    CALL FLWRTF('%%TEST $CURSINWIN')
	    CALL FLWRTF('%%ELSE %%ZOOM 1')
	    CALL FLWRTF('%%PING')
	    CALL FLWRTF('%%RESPOND')
	    CALL FLWRTF('%%ABANDON')
	    CALL FLWRTF('%%ABANDON')
	  END IF
	END IF

999	END
