C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1993-09-15 14:03:30.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE MOVE_ENDS_TO_LINES(
     &		PT,NEAREST,NXT,PRV,
     &		FTR_PTS,PNT_FTR,
     &		MAXPTS,MAXOUTFTRS)
C
***	IDENT	15SE93
***	MODULE	MOVE_ENDS_TO_LINES
C
C	Copyright : Laser-Scan Ltd., Cambridge, England
C	Created   : ACM					      Sep 1986
C
CMOD1293 Use /SYMBOL qualifier to enable the movement of symbol
C	(point) features onto linework, ie. don't keep them fixed
C							JB 14-Sep-1993
C
	IMPLICIT NONE
C
	INCLUDE		'LSL$CMNILINK:ILINK.CMN'
C
C Data in
	INTEGER*4	MAXPTS,MAXOUTFTRS
	INTEGER*4	NEAREST(MAXPTS)
	INTEGER*4	NXT(MAXPTS)
	INTEGER*4	PRV(MAXPTS)
	INTEGER*4	FTR_PTS(2,MAXOUTFTRS)
C
	REAL*4		PT(2,MAXPTS)
C
	LOGICAL*1	PNT_FTR(MAXOUTFTRS)
C
C Workspace
	INTEGER*4	IPTSTA,IPTFIN		! start/fin pt indices
	INTEGER*4	IPT			! pt index
	INTEGER*4	IFTR			! ftr index
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
C	Move end-points onto lines for LPJOIN
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C		
	DO 20 IFTR = 1,N_PR_FTRS
	  IPTSTA = FTR_PTS(1,IFTR)
	  IPTFIN = FTR_PTS(2,IFTR)
	  IF (IPTFIN.EQ.NIL) GOTO 20		! ftr deleted
C
	  IPT = NEAREST(IPTSTA)
	  IF (IPT.LE.NIL) GOTO 10		! IPT not mapped
C
	  CALL COUNT_JOIN(			! check join distance
     &	  	PT(1,IPT),PT(2,IPT),PT(1,IPTSTA),PT(2,IPTSTA))
C
C If SYMBOL qualifier (TRUE by default), do not treat point symbols as
C a special case, but as a zero length vector with same start and points
C
	  IF (HAD_SYMBOL) THEN
	    PT(1,IPTSTA) = PT(1,IPT)		! move line end to nearest
	    PT(2,IPTSTA) = PT(2,IPT)
C
	  ELSE					! original functionality:
	    IF (PNT_FTR(IFTR)) THEN		! single-pt ftr
	      PT(1,IPT) = PT(1,IPTSTA)		! pt-ftr is fixed (why??)
	      PT(2,IPT) = PT(2,IPTSTA)
	      GOTO 20
C
	    ELSE
	      PT(1,IPTSTA) = PT(1,IPT)		! move line end to nearest
	      PT(2,IPTSTA) = PT(2,IPT)
	    ENDIF
	  ENDIF
C
10	  IPT = NEAREST(IPTFIN)
	  IF (IPT.LE.NIL) GOTO 20
C
	  CALL COUNT_JOIN(			! check join distance
     &		PT(1,IPT),PT(2,IPT),PT(1,IPTFIN),PT(2,IPTFIN))
C
	  PT(1,IPTFIN) = PT(1,IPT)		! move line end to nearest
	  PT(2,IPTFIN) = PT(2,IPT)
20	CONTINUE
C
	END
C
