C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1991-12-05 13:32:40.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE GROUND(
     &		PT,NXT,NEAREST,QDAT,MINSQDIST,
     &		FTR_PTS,MAXPTS,MAXOUTFTRS)

***	IDENT	05DE91
***	MODULE	GROUND

C	Copyright : Laser-Scan Ltd., Cambridge, England
C	Created   : ACM					Month 1986

	IMPLICIT NONE

	INCLUDE		'LSL$CMNILINK:ILINK.CMN'

C Data in
	INTEGER*4	MAXPTS,MAXOUTFTRS
	INTEGER*4	NXT(MAXPTS)
	INTEGER*4	NEAREST(MAXPTS)
	INTEGER*4	FTR_PTS(2,MAXOUTFTRS)

	LOGICAL*1	QDAT(MAXPTS)

	REAL*4		PT(2,MAXPTS)
	REAL*4		MINSQDIST(MAXPTS)
 
C Workspace
	INTEGER*4	IPTSTA,IPTFIN		! start/fin pt indices
	INTEGER*4	IPT,JPT,KPT		! pt indices
	INTEGER*4	IFTR			! ftr indices

	REAL*4		DX,DY			! vec betw pts

CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
C	Points all points through to highest priority point which
C	points no further and is marked by QDAT as being on a section
C	of feature that is to be aligned (as some points pointing and
C	being pointed to now could be along feature sections which
C	are considered too short to be aligned).
C
C	Then unjoins all joins to and from pts not marked by QDAT for
C	aligning.
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
 
C Point all pts through to highest (ie. furthest through) pt in chain
C which is marked by QDAT for alignment

	DO 20 IPT = 1,N_PTS
	  JPT = NEAREST(IPT)
	  IF (JPT.EQ.NIL) GOTO 20		! IPT not pointing
	  KPT = JPT

10	  IF (QDAT(JPT)) KPT = JPT
	  IF (NEAREST(JPT).NE.NIL) THEN
	    JPT = NEAREST(JPT)
	    GOTO 10
	  END IF

	  IF (KPT.EQ.NEAREST(IPT)) GOTO 20	! IPT already grounded
	  NEAREST(IPT) = KPT

	  DX = PT(1,IPT)-PT(1,KPT)
	  DY = PT(2,IPT)-PT(2,KPT)
	  MINSQDIST(IPT) = DX*DX+DY*DY		! reset MINSQDIST

20	CONTINUE	    
 
C Unjoin all pointing pts which are not marked for alignment, or now
C point to pts not marked for alignment 

	DO 50 IPT = 1,N_PTS
	  JPT = NEAREST(IPT)
	  IF (JPT.NE.NIL) THEN			! IPT is pointing
	    IF (.NOT. (QDAT(IPT).AND.QDAT(JPT))) NEAREST(IPT) = NIL
	  END IF
50	CONTINUE

	END

