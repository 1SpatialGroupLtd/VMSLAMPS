C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1993-05-25 18:47:14.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE DEL3(	NXT,PRV,NEAREST,PT_PR_FTR,
     &				FTR_PTS,PNT_FTR,PT,
     &				MAXPTS,MAXOUTFTRS)

***	IDENT	25MY93
***	MODULE	DEL3

C	Copyright : Laser-Scan Ltd., Cambridge, England
C	Created   : ACM					Month 1986

CMOD1232 						JB 25-May-1993
C	Give warning message if deleting an original point

	IMPLICIT NONE

	INCLUDE		'LSL$CMNILINK:ILINKMSG.PAR'
	INCLUDE		'LSL$CMNILINK:ILINK.CMN'
 
C Data in
	INTEGER*4	MAXPTS,MAXOUTFTRS
	INTEGER*4	NXT(MAXPTS),PRV(MAXPTS)
	INTEGER*4	NEAREST(MAXPTS)
	INTEGER*4	PT_PR_FTR(MAXPTS)
	INTEGER*4	FTR_PTS(2,MAXOUTFTRS)
	REAL*4		PT(2,MAXPTS)

	LOGICAL*1	PNT_FTR(MAXOUTFTRS)

C Workspace
	INTEGER*4	IPTSTA,IPTFIN		! start/fin pt indices
	INTEGER*4	IPT,IPTPRV		! pt indices
	INTEGER*4	JPT,JPTPRV		! pt indices
	INTEGER*4	IFTR			! pr-ftr index

CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
C	Deletes all consecutive one-way connected points which map to
C	the same point
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
 
	DO 40 IFTR = 1,N_PR_FTRS
	  IPTSTA = FTR_PTS(1,IFTR)
	  IPTFIN = FTR_PTS(2,IFTR)
 
	  IF (IPTSTA.EQ.NIL) GOTO 40
	  IF (NXT(IPTSTA).EQ.IPTFIN.OR.NXT(IPTSTA).EQ.NIL) GOTO 40

	  IPT = IPTSTA
	  JPT = NEAREST(IPT)

10	  IPTPRV = IPT
	  JPTPRV = JPT

20	  IPT = NXT(IPT)
	  JPT = NEAREST(IPT)

	  IF (JPTPRV.EQ.JPT.AND.JPT.NE.NIL) THEN
	    IF (HAD_WARNING .AND. IPT.GT.N_ORIG_PTS)
     &		CALL LSL_PUTMSG(ILINK__ORIGPNTDEL,PT(1,IPT),PT(2,IPT))

	    CALL DELPT(	IPT,
     &			NXT,PRV,PT_PR_FTR,
     &			FTR_PTS,PNT_FTR,MAXPTS,MAXOUTFTRS)
	    IF (IPT.NE.IPTFIN) GOTO 20
	  END IF
 
30	  IF (IPT.NE.IPTFIN) GOTO 10
40	CONTINUE	    
 
	END
 
