	SUBROUTINE REMOVE_REV(OPTR)
C
***	MODULE REMOVE_REV
***	IDENT 26AU86
C
	IMPLICIT NONE
C
C Copyright Laser Scan Laboratories Ltd., Cambridge, England
C Author S. Hancock
C
***	COMMON/LSL$CMNIOFFSET:IOFFSET/
C
	INTEGER*4	OPTR	! pointer to end of output array
C
	INTEGER*4	I,J,K,L,M
	INTEGER*4	INT
	INTEGER*4	START
	LOGICAL		REDUCE
	REAL*4		ZINT(2)
C
C first remove any reversed segments at the beginning
C
	REDUCE=.FALSE.
	DO 100 I=1,OPTR-1
	IF(ZOFC(I).LT.0)THEN
	   REDUCE=.TRUE.
	ELSE
C first non-reversed segment found
	   IF(REDUCE)THEN
	      DO 60 J=I,OPTR
	      ZOUT(1,J-I+1)=ZOUT(1,J)
	      ZOUT(2,J-I+1)=ZOUT(2,J)
	      ZOFC(J-I+1)=ZOFC(J)
60	      CONTINUE
	      OPTR=OPTR-(I-1)
	   ENDIF
	   GOTO 120
	ENDIF
100	CONTINUE
C
C now remove any reversed segments at the end
C
120	REDUCE=.FALSE.
	DO 200 I=OPTR-1,1,-1
	IF(ZOFC(I).LT.0)THEN
	   REDUCE=.TRUE.
	ELSE
C first non-reversed segment found
	   IF(REDUCE)OPTR=I+1
	   GOTO 220
	ENDIF
200	CONTINUE
C
C look for a reversed segment following a forward segment
C
220	START=1
C segment START is forward
230	DO 300 I=START+1,OPTR-1
	IF(ZOFC(I).LT.0)THEN
	   DO 240 J=I+1,OPTR-1
	   IF(ZOFC(J).GE.0)THEN
C segment J is forward - find intersection of segment I-1 and segment J
	      CALL INTSCT(ZOUT(1,I-1),ZOUT(1,J),ZINT,INT)
C replace end of segment I-1 with intersection point
	      ZOUT(1,I)=ZINT(1)
	      ZOUT(2,I)=ZINT(2)
	      ZOFC(I)=ZOFC(J)
C and take out intervening segments
	      DO 260 L=I+1,I+OPTR-J
	      ZOUT(1,L)=ZOUT(1,L+J-I)
	      ZOUT(2,L)=ZOUT(2,L+J-I)
	      ZOFC(L)=ZOFC(L+J-I)
260	      CONTINUE
	      OPTR=OPTR+I-J
C and carry on from I
	      START=I
	      GOTO 230
	   ENDIF
240	   CONTINUE
	ENDIF
300	CONTINUE
900	RETURN
	END
