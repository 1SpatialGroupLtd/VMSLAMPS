C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1986-09-05 14:54:00.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL FUNCTION CLOSE_LCM
C
***	IDENT	05SE86
***	MODULE	CLOSE_LCM
C
C	Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C	Created					RJH	04-Sep-1986
C
C	OS RELHT Program - Close LITES2 guidance file
C
C Description
C
C	Expects the LITES2 guidance file to be open
C
	IMPLICIT NONE
C
C Included Parameter Files
C
***	PARAMETER/HERE:LUN/		! logical unit numbers
***	PARAMETER/HERE:RELHTMSG/	! message definitions
***	PARAMETER/LSL$CMNLSL:LSLLIBMSG/	! LSLLIB message definitions
C
C Common Blocks
C
***	COMMON/HERE:CONTROL/		! control variables
***	COMMON/LSL$CMNLSL:STATUS/	! LSLLIB status flag
C
C Functions called
C
	INTEGER*4	FLWCLO		! closes a file for writing
	INTEGER*4	FLWDEL		! deletes a file open for write
	INTEGER*4	FLWSEL		! selects file for writing
C
C Local Variables
C
	INTEGER*4	ERRCOD		! LSLLIB error code
	INTEGER*4	RETCOD		! system error code
C
C If node positions have been written to the file, add a final message 
C and close it - first select the file for writing
C
	IF (LCM_WRITTEN) THEN
	   ERRCOD = FLWSEL(LCM_LUN)
	   IF (.NOT. ERRCOD) THEN
	      CALL LSL_PUTMSG(RELHT__ERRSELLCM,LCM_LUN)
	      CALL LSL_ADDMSG(ERRCOD)
C
C Write the message and close the file
C
	   ELSE
	      CALL FLWRTF('%%MESSAGE "No more node positions"')
	      ERRCOD = FLWCLO(LCM_LUN,RETCOD)
C
C If unsuccessful output message
C
	      IF (.NOT. ERRCOD) THEN
	         CALL LSL_PUTMSG(RELHT__ERRCLOLCM,LCM_LUN)
	         CALL LSL_ADDMSG(ERRCOD)
	         IF (ERRCOD .EQ. LSL__SYSCLOSE) CALL LSL_ADDMSG(RETCOD)
C
C Otherwise output a message with the filename if we are logging
C
	      ELSE IF (HAD_LOG) THEN
	         IF (LSL_STATUS) THEN
	            CALL LSL_PUTMSG(RELHT__CREATELCM,
     &	               LCM_FILE(1:LCM_LEN))
	         ELSE
	            CALL LSL_ADDMSG(RELHT__CREATELCM,
     &	               LCM_FILE(1:LCM_LEN))
	         ENDIF
	      ENDIF
	   ENDIF
C
C If no node positions have been written to the file, delete it 
C
	ELSE 
	   ERRCOD = FLWDEL(LCM_LUN,RETCOD)
C
C If unsuccessful output message
C
	   IF (.NOT. ERRCOD) THEN
	      CALL LSL_PUTMSG(RELHT__ERRDELLCM,LCM_LUN)
	      CALL LSL_ADDMSG(ERRCOD)
	      IF (ERRCOD .EQ. LSL__SYSCLOSE) CALL LSL_ADDMSG(RETCOD)
C
C Otherwise output a message if we are logging, saying there is no 
C guidance file
C
	   ELSE IF (HAD_LOG) THEN
	      IF (LSL_STATUS) THEN
	         CALL LSL_PUTMSG(RELHT__NOLCM)
	      ELSE
	         CALL LSL_ADDMSG(RELHT__NOLCM)
	      ENDIF
	   ENDIF
	ENDIF
C
C Assign function value
C
	CLOSE_LCM = ERRCOD
C
C Return
C
	RETURN
	END
