C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1986-11-04 17:10:46.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL FUNCTION ADD_RANGE(LINE,PRIORITY,DOUBT)
C
***	IDENT	04NO86
***	MODULE	ADD_RANGE
C
C	Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C	Created					RJH	08-Sept-1986
C
C	OS RELHT Program - Adds FC range to priority table
C
C Description
C
C
	IMPLICIT NONE
C
C Included Parameter Files
C
***	PARAMETER/HERE:RELHTMSG/	! message definitions
C
C Arguments
C
	INTEGER*4	LINE		! current line in file
	INTEGER*4	PRIORITY	! priority for these FC's
	INTEGER*4	DOUBT		! doubt index
C
C Common Blocks
C
***	COMMON/HERE:PRIO_TABLE/		! feature code priority table
C
C Functions called
C
	LOGICAL		RDCHS		! read character
	LOGICAL		RDINT		! read integer
C
C Local Variables
C
	INTEGER*4	FIRST		! first in range
	INTEGER*4	SECOND		! second in range	
	INTEGER*4	I		! counter
	LOGICAL		OK		! everything OK ?
	BYTE		NXTCH		! next character
C
C Initialisation
C
	OK = .TRUE.
C
C Read the first integer
C
	IF (RDINT(FIRST)) THEN
	   CALL LSL_PUTMSG(RELHT__SOFTERR)
	   OK = .FALSE.
C
C Check for '-' and read the second if we have a range
C
	ELSE
	   SECOND = FIRST
	   IF (.NOT. RDCHS(NXTCH)) THEN
	      IF (NXTCH .EQ. '-') THEN
	         IF (RDINT(SECOND)) THEN
	            CALL LSL_PUTMSG(RELHT__MISSINT)
	            OK = .FALSE.
	         ENDIF
	      ELSE
	         CALL BSCH
	      ENDIF
	   ENDIF
C
C Check the range is valid
C
	   IF (OK) THEN
	      IF (FIRST .GT. SECOND) THEN
	         CALL LSL_PUTMSG(RELHT__INVALRANGE)
	         OK = .FALSE.
	      ELSE IF (FIRST .GT. MAXFC) THEN
	         CALL LSL_PUTMSG(RELHT__FIRSTTOOBIG)
	         OK = .FALSE.
	      ELSE IF ((SECOND .GT. MAXFC) .AND. 
     &	         (FIRST .NE. SECOND)) THEN
	         CALL LSL_PUTMSG(RELHT__SECONDTOOBIG)
	         OK = .FALSE.
	      ELSE IF ((FIRST .LT. 0) .OR. (SECOND .LE. 0)) THEN
	         CALL LSL_PUTMSG(RELHT__INVALFC)
	         OK = .FALSE.
	      ENDIF
C
C Set up the range in the priority table
C
	      IF (OK) THEN
	         I = FIRST - 1
10	         I = I + 1
	         FC_PRIO(1,I) = PRIORITY
	         FC_PRIO(2,I) = DOUBT
	         IF (I .LT. SECOND) GO TO 10
	      ENDIF
	   ENDIF
	ENDIF
C
C Assign function value
C
	ADD_RANGE = OK
C
C Return
C
	RETURN
	END
