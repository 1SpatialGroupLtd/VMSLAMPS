C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1986-09-05 12:51:24.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL FUNCTION WRITE_LCM(XPOS,YPOS)
C
***	IDENT	05SE86
***	MODULE	WRITE_LCM
C
C	Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C	Created					RJH	04-Sep-1986
C
C	OS RELHT Program - Log node with doubtful relative heights in 
C			   LITES2 guidance file
C
C Description
C
C	Expects the LITES2 guidance file to be open
C
	IMPLICIT NONE
C
C Included Parameter Files
C
***	PARAMETER/HERE:LUN/		! logical unit numbers
***	PARAMETER/HERE:RELHTMSG/	! message definitions
C
C Arguments
C
	REAL*4		XPOS		! start point X coordinate
	REAL*4		YPOS		! start point Y coordinate 
C
C Common Blocks
C
***	COMMON/HERE:CONTROL/		! control variables
C
C Functions called
C
	INTEGER*4	FLWSEL		! select file for writing
C
C Local Variables
C
	INTEGER*4	ERRCOD		! LSLLIB error code
C
C Set flag for having written to the file
C
	IF (.NOT. LCM_WRITTEN) LCM_WRITTEN = .TRUE.
C
C Select the file
C
	ERRCOD = FLWSEL(LCM_LUN)
	IF (.NOT. ERRCOD) THEN
	   CALL LSL_PUTMSG(RELHT__ERRSELLCM,LCM_LUN)
	   CALL LSL_ADDMSG(ERRCOD)
C
C Make it output a blank line followed by a description of the node
C
	ELSE
	   CALL FLWRTF('%%MESSAGE')
	   CALL FLWRTF('%%MESSAGE "Doubtful relative heights for node"')
C
C Position the cursor on the node and redraw a window around the node 
C if necessary. Then do a RESPOND so they can FIND the node if they 
C wish. Finally ABANDON to make sure they haven't left a feature in 
C hand.
C
	   CALL FLWRTF('%%POSITION %E8 %E8',XPOS,YPOS)
	   CALL FLWRTF('%%TEST $CURSINWIN')
	   CALL FLWRTF('%%ELSE %%ZOOM 1')
	   CALL FLWRTF('%%RESPOND')
	   CALL FLWRTF('%%ABANDON')
	ENDIF
C
C Assign function value
C
	WRITE_LCM = ERRCOD
C
C Return
C
	RETURN
	END
