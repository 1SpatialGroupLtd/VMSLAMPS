C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1986-09-10 18:47:14.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL FUNCTION OPEN_IFF
C
***     IDENT   10SE86
***     MODULE  OPEN_IFF
C
C	Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C	Created					RJH	04-Sep-1986
C
C	OS RELHT Program - Open IFF files
C
C Description
C
C
        IMPLICIT NONE
C
C Included Parameter Files
C
***	PARAMETER/HERE:LUN/		! logical unit numbers
***	PARAMETER/HERE:RELHTMSG/	! message definitions
C
C Common Blocks
C
***	COMMON/HERE:CONTROL/		! control variables
***	COMMON/LSL$CMNIFF:IFFHAN/	! current position in IFF file
C
C Open the input file as read only
C
	CALL IFFOPN(IN_LUN,IN_FILE,0)
C
C If unsuccessful output message
C
	IF ((IERCD .NE. 0) .OR. (IERNM .NE. 1)) THEN
	   CALL LSL_PUTMSG(RELHT__ERROPNIN,IN_FILE(1:IN_LEN))
C
C Otherwise output confirmation message if appropriate and open the 
C output file
C
	ELSE
	   IF (HAD_LOG) CALL LSL_PUTMSG(RELHT__IFFINOPN,
     &	      IN_FILE(1:IN_LEN))
	   CALL IFFOPN(OUT_LUN,OUT_FILE)
C
C If unsuccessful output message
C
	   IF ((IERCD .NE. 0) .OR. (IERNM .NE. 1)) THEN
	      CALL LSL_PUTMSG(RELHT__ERROPNOUT,OUT_FILE(1:OUT_LEN))
C
C Otherwise just output confirmation message if appropriate 
C
	   ELSE IF (HAD_LOG) THEN
	      CALL LSL_PUTMSG(RELHT__IFFOUTOPN,OUT_FILE(1:OUT_LEN))
	   ENDIF
	ENDIF
C
C Assign function value
C
	OPEN_IFF = ((IERCD .EQ. 0) .AND. (IERNM .EQ. 1))
C
C Return
C
	RETURN
        END
