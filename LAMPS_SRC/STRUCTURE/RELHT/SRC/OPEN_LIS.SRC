C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1986-09-19 09:31:36.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
        LOGICAL FUNCTION OPEN_LIS
C
***     IDENT   19SE86
***     MODULE  OPEN_LIS
C
C	Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C	Created					RJH	04-Sep-1986
C
C	OS RELHT Program - Open node list file
C
C Description
C
C	Expects the /NODE_LIST qualifier to have been specified
C
        IMPLICIT NONE
C
C Included Parameter Files
C
***	PARAMETER/HERE:LUN/		! logical unit numbers
***	PARAMETER/HERE:RELHTMSG/	! message definitions
***	PARAMETER/LSL$CMNLSL:LSLLIBMSG/	! LSLLIB message definitions
C
C Common Blocks
C
***	COMMON/HERE:CONTROL/		! control variables
C
C Functions called
C
	INTEGER*4	FLWOPN		! open file for writing
C
C Local Variables
C
	INTEGER*4	ERRCOD		! LSLLIB error code
	INTEGER*4	RETCOD		! system error code
	BYTE		TIMBUF(8)	! current time buffer
	BYTE		DATBUF(9)	! current date buffer
C
C Open the file
C
	ERRCOD = FLWOPN(LIS_LUN,LIS_FILE,RETCOD)
C
C If unsuccessful output message
C
	IF (.NOT. ERRCOD) THEN
	   CALL LSL_PUTMSG(RELHT__ERROPNLIS,LIS_FILE(1:LIS_LEN),LIS_LUN)
	   CALL LSL_ADDMSG(ERRCOD)
	   IF (ERRCOD .EQ. LSL__SYSOPEN) CALL LSL_ADDMSG(RETCOD)
C
C Write the first couple of lines to it
C
	ELSE
	   CALL TIME(TIMBUF)			! get time
	   CALL DATE(DATBUF)			! get date
	   CALL FLWRTF
     &	      ('List of nodes for %S created by RELHT at %A8 on %A9',
     &	      OUT_FILE(1:OUT_LEN),TIMBUF,DATBUF)
	   CALL FLWRTF
	   CALL FLWRTF('   E         N      Arms')
	   CALL FLWRTF
	ENDIF
C
C Assign function value
C
	OPEN_LIS = ERRCOD
C
C Return
C
	RETURN
        END
