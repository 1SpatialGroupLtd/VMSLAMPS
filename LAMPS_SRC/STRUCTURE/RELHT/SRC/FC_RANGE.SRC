C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1986-09-09 16:49:18.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL FUNCTION FC_RANGE(LINE,PRIORITY,DOUBT)
C
***	IDENT	09SE86
***	MODULE	FC_RANGE
C
C	Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C	Created					RJH	08-Sept-1986
C
C	OS RELHT Program - Reads a range of feature codes
C
C Description
C
C	Reads from the current line, and expects the range to be the 
C	last thing on it.
C
	IMPLICIT NONE
C
C Included Parameter Files
C
***	PARAMETER/HERE:RELHTMSG/	! message definitions
C
C Arguments
C
	INTEGER*4	LINE		! current line in file
	INTEGER*4	PRIORITY	! priority for these FC's
	INTEGER*4	DOUBT		! doubt index
C
C Functions called
C
	LOGICAL		RDCHS		! read character
	LOGICAL		ADD_RANGE	! add range to priority table
C
C Local Variables
C
	LOGICAL		EOLN		! end of line ?
	LOGICAL		OK		! everything OK ?
	BYTE		NXTCH		! next character
C
C Initialisation
C
	OK = .TRUE.
C
C Read the first character in the range
C
	EOLN = RDCHS(NXTCH)
C
C Check that we have something
C
	IF (EOLN) THEN
	   CALL LSL_PUTMSG(RELHT__EXPFCRANGE)
	   OK = .FALSE.
	ENDIF
C
C While no errors and not yet reached end of line, continue decoding
C
10	IF ((.NOT. OK) .OR. EOLN) GO TO 30
C
C Decode the range
C
	IF ((NXTCH .GE. '0') .AND. (NXTCH .LE. '9')) THEN
	   CALL BSCH
	   OK = ADD_RANGE(LINE,PRIORITY,DOUBT)
	ELSE
	   CALL LSL_PUTMSG(RELHT__EXPDIGIT)
	   OK = .FALSE.
	ENDIF
C
C Read the next presumed digit
C
	IF (OK) THEN
20	   EOLN = RDCHS(NXTCH)
	   IF ((.NOT. EOLN) .AND. (NXTCH .EQ. ',')) GO TO 20
	ENDIF
C
C Go back for test
C
	GO TO 10
C
C Assign function value
C
30	FC_RANGE = OK
C
C Return
C
	RETURN
	END
