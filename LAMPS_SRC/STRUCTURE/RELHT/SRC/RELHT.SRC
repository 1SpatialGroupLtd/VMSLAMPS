C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1991-03-15 13:50:58.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	PROGRAM RELHT
C
***	IDENT	15MR91
***	MODULE	RELHT
C
C	Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C	Created					RJH	03-Sep-1986
C
CMOD	Set LSL_STATUS for all routines
C
C	OS RELHT Program - Assigns relative heights to the ends of links
C
C Description
C
C	Given a junction structured IFF file and a table of feature 
C	code priorities, RELHT assigns relative heights to the ends of 
C	all the links. The junction structure is not preserved in the 
C	output file. Options allow the user to specify output of a 
C	LITES2 guidance file to point to all nodes with doubtful 
C	heights, and output of a text file containing a list of all 
C	junction (node) coordinates.
C
	IMPLICIT NONE
C
C VMS status codes
C
	INCLUDE	'($SSDEF)/NOLIST'
C
C Common Blocks
C
***	COMMON/LSL$CMNLSL:STATUS/	! LSLLIB status flag
C
C Functions called
C
	LOGICAL		GET_COMMAND	! get and decode command line
	LOGICAL		READ_PRIO	! read FC priorities
	LOGICAL		PROCESS		! do the work
C
C Initialise the library and other things
C
	CALL LSL_INIT(.TRUE.)
	CALL INIT
C
C Get and decode the command line
C
	LSL_STATUS = GET_COMMAND()
C
	IF (.NOT.LSL_STATUS) GOTO 999
C
C Read feature code priorities
C
	IF (.NOT.READ_PRIO()) THEN
	   LSL_STATUS = SS$_ABORT
	   GOTO 1000
	ENDIF
C
C Process the input file and produce the output file
C
	IF (.NOT.PROCESS()) THEN
	   LSL_STATUS = SS$_ABORT
	   GOTO 1000
	ENDIF
C
C Set the return status
C
1000	IF (LSL_STATUS) LSL_STATUS = SS$_NORMAL
C
C Finish up
C
999	CALL EXIT(LSL_STATUS)		! close files and tidy up
	END
C
