C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1987-08-12 16:37:36.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	INTEGER*4 FUNCTION REMOVE_DOUBLE_SPACES (IN_STRING, OUT_STRING)
C
***	MODULE REMOVE_DOUBLE_SPACES
***	IDENT 11AU87
C
C	Copyright Laser-Scan Laboratories Ltd., Cambridge, England
C
C	Coded					DRC 	11-Aug-1987
C
C	Function:
C	To search input string for multiple consecutive spaces,
C	and convert to a single space.
C	eg. "DAVE   CATLOW"  becomes "DAVE CATLOW" 
C	The function returns the length of the destination string
C	
	IMPLICIT NONE
C
C	Arguments:
	CHARACTER*(*)   IN_STRING	  !source string
	CHARACTER*(*)   OUT_STRING	  !destination string
C
C	Local
	INTEGER*4	LENGTH_IN_STRING  !length of input string
	INTEGER*4	I,J,K		  !counters
	LOGICAL		HAD_ONE_SPACE	  !had a space character
C
C-------------------------------------------------------------------------
C
C	Get length of source and destination strings
	LENGTH_IN_STRING = LEN(IN_STRING)
C
C	Deal with leading spaces (these are totally removed)
	DO 100 I=1,LENGTH_IN_STRING
	   IF(IN_STRING(I:I).NE.' ')GOTO 200
100	CONTINUE
	REMOVE_DOUBLE_SPACES=0	!output string length
	RETURN
C
200	HAD_ONE_SPACE=.FALSE.
	K = 1
	DO 300 J=I,LENGTH_IN_STRING
           IF(IN_STRING(J:J).NE.' ')THEN	   
              OUT_STRING(K:K)=IN_STRING(J:J)
	      HAD_ONE_SPACE=.FALSE.
	   ELSE
	      IF(HAD_ONE_SPACE)GOTO 300
              OUT_STRING(K:K)=IN_STRING(J:J)
	      HAD_ONE_SPACE=.TRUE.              
	   ENDIF
	   K=K+1
300	CONTINUE
C
	REMOVE_DOUBLE_SPACES=K-1
C
	RETURN
C
	END
