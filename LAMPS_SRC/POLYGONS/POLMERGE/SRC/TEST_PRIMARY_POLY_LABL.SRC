C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1992-05-18 19:48:24.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
C
C-------------------------------------------------------------------------------
C				THE WRAPPER
C-------------------------------------------------------------------------------
C
C
C
C
	INTEGER*4	FUNCTION TEST_PRIMARY_POLY_LABEL(POLY_INDX)
C
***	MODULE	TEST_PRIMARY_POLY_LABEL
***	IDENT	12MY92
C
	IMPLICIT NONE
C
C	Copyright Laser Scan Ltd, Cambridge, England
C
C	Author		Sunil Gupta			30-april-1992
C
C
C	........................................................................
C
	INCLUDE 'LSL$CMNPOLYGONS:ARRAY_PTRS.CMN'
C ARGUMENTS
	INTEGER		POLY_INDX
C
	INTEGER*4	A_T_P_POLY_LABEL
C
C	........................................................................
C
	TEST_PRIMARY_POLY_LABEL = A_T_P_POLY_LABEL(POLY_INDX,
     &			POLMAX,TABMAX,POLNEST_MAX, PARTS_MAX,
     &			%VAL(PTR$_POLY_START)
     &		  )
C
C	........................................................................
C
	RETURN
	END
C
C-------------------------------------------------------------------------------
C			    THE PROPER FUNCTION
C-------------------------------------------------------------------------------
C
C
C
	INTEGER*4 FUNCTION A_T_P_POLY_LABEL(POLY_INDX,
     &		POLMAX,TABMAX,POLNEST_MAX,PARTS_MAX,
     &		POLY_START
     &	)
C
C
***	MODULE A_T_P_POLY_LABEL
***	IDENT 11SE87
C
C	Copyright Laser-Scan Laboratories Ltd., Cambridge, England
C
C	Coded					DRC 	12-Aug-1987
C
C	Function:
C	To test whether the label of a 'primary polygon' 
C	matches any of the entries in the primary polygon label list
C	created from the lookup file.
C
C	The function uses the passed polygon index value and the
C	function GET_ACTXT to retrieve the AC for this polygon.
C	It then compares the AC with the primary polygon list using
C	STR$COMPARE_EQL.
C	The funtion either returns 0 if no match is found, or the 
C	primary polygon index into the polygon code bitmap.
C	
	IMPLICIT NONE
C
C Parameters:
	INCLUDE 'LSL$CMNPOLYGONS:PARAMS.PAR'
C Commons:
	INCLUDE	'LSL$CMNPOLMERGE:POLMERGE_LOOKUP.CMN'
	INCLUDE 'LSL$CMNPOLYGONS:POLYGONS.CMN'
C
C Argumnent
	INTEGER*4	POLY_INDX	!polygon index
C 
	INTEGER*4	POLMAX
	INTEGER*4	TABMAX
	INTEGER*4	POLNEST_MAX
	INTEGER*4	PARTS_MAX
C
	INTEGER		POLY_START(3,POLMAX)
C
C Locals:
	INTEGER*4	SEGPTR		!segment pointer
	INTEGER*4	IERR		!function return
	INTEGER*4	I		!counter
C
	INTEGER*4	STRING_DESCR1(2)!string
	INTEGER*4	STRING_DESCR2(2)!descriptors
	INTEGER*4	STRLEN		!number of chs. in STRBUF
	BYTE		STRBUF1(255)	!buffer to hold AC label
	BYTE		STRBUF2(255)	!buffer to hold modified AC label
C
C Functions:
	INTEGER*4	GET_ACTXT	!gets label of this polygon
	INTEGER*4	REMOVE_DOUBLE_SPACES	!to remove surplus
C					!spaces from char string
	INTEGER*4	STR$COMPARE_EQL	!test 2 strings for equality
C
C--------------------------------------------------------------------------
C
C	Assume no match is found
	A_T_P_POLY_LABEL=0
C
C	Get segment pointer
	SEGPTR=IABS(POLY_START(1,POLY_INDX))
C
C	Use GET_ACTEXT to retrieve the label for this polygon
	IERR = GET_ACTXT(SEGPTR,POLY_INDX,.TRUE.,STRBUF1,STRLEN,.FALSE.)
C
C	Set up string descriptors
	STRING_DESCR1(1)=STRLEN
	STRING_DESCR1(2)=%LOC(STRBUF1)
	STRING_DESCR2(1)=STRLEN
	STRING_DESCR2(2)=%LOC(STRBUF2)
C	  	  
C	Remove any surplus spaces prior to comparison
	STRLEN = REMOVE_DOUBLE_SPACES(STRING_DESCR1,STRING_DESCR2)
C
C	Modify string descriptor length
	STRING_DESCR2(1)=STRLEN
C
C	Search for match between modified string and primary polygon
C	labels
	DO 100 I=1,NUMBER_PRIMARY_LABELS
C
C	STR$COMPARE_EQL returns 0 if an exact match has been found
C	or 1 if the two strings are unequal
	   IERR = STR$COMPARE_EQL(STRING_DESCR2,PPL_DESCR(1,I))
C
	   IF(IERR.EQ.0)THEN	!equal, so return index in primary 
C				!polygon list
	     A_T_P_POLY_LABEL=I
	     GOTO 999
	   ENDIF
C
100	CONTINUE		!continue search for a match
C
	A_T_P_POLY_LABEL=0	!signal no match
C
999	RETURN
C
	END

