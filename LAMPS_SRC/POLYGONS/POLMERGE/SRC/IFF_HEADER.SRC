C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1987-09-21 17:42:44.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL FUNCTION IFF_HEADER(LUN)
C
***	MODULE	IFF_HEADER
***	IDENT	21SE87
C
C
C	Copyright Laser-Scan Laboratories Ltd., Cambridge, England
C
C	Created						TJH  13-Mar-1987
C 	MOD    STP(1),STP(2) increased so that the sector value exceeds
C	the file range.
C
C
C Function to write standard IFF header entries to the outfile(s)
C
C Function returns one of 2 condition codes:
C
C	SS$_NORMAL		-   all is well
C	POLMERGE__UNEXPEOF	-   unexpected end of IFF file.
C
	IMPLICIT NONE
C
C Parameters:
	INTEGER		SS$_NORMAL
	EXTERNAL	SS$_NORMAL
	INCLUDE		'LSL$CMNPOLYGONS:PARAMS.PAR'
	INCLUDE		'LSL$CMNPOLYGONS:POLYGONSMSG.PAR'
	INCLUDE		'LSL$CMNPOLMERGE:POLMERGEMSG.PAR'
C
C Common:
	INCLUDE   'LSL$CMNIFF:IFFHAN.CMN'
	INCLUDE   'LSL$CMNIFF:IFFJUN.CMN'
	INCLUDE	  'LSL$CMNPOLMERGE:COMMAND.CMN'
	INCLUDE	  'LSL$CMNPOLYGONS:FILE.CMN'
	INCLUDE	  'LSL$CMNPOLYGONS:TABLES.CMN'
	INCLUDE	  'LSL$CMNPOLYGONS:SECTOR.CMN'
C
C Integer*2:
	INTEGER*2 IFSN,ISQ	! feature serial number/ internal no.
	INTEGER*2 IECODE,IELEN	! entry found & its length
	INTEGER*2 LAYER		! layer number
C
C Integer*4:
	INTEGER	  I,J		! loop variable
	INTEGER	  LUN		! IFF output file LUN
	INTEGER	  LPOSNO	! position of NO entry
	INTEGER	  NXTLAY	! position of next EO entry
	INTEGER*2 NUM(2)	! temp for SH
	REAL      STP(2),ORI(2)	! "     "   "
C
C
C ......................................................................
C
	IFF_HEADER=%LOC(SS$_NORMAL)
C
	CALL IFFSEL(INLUN)
	CALL IFFRWD
C
10	CALL IFFSEL(INLUN)
20	CALL IFFNXT(IECODE,IELEN)
	IF (IELEN.LT.0) GOTO 80
	IF (IECODE.EQ.'NF') GOTO 30
	IF (IECODE.EQ.'EF') GOTO 40
	IF (IECODE.EQ.'JP') GOTO 20
	IF (IECODE.EQ.'JB') GOTO 20
	IF (IECODE.EQ.'VO') GOTO 20
	IF (IECODE.EQ.'NO') GOTO 50
	IF (IECODE.EQ.'EO') GOTO 55
	IF (IECODE.EQ.'RA') GOTO 60
	IF (IECODE.EQ.'NS') GOTO 70
	IF (IECODE.EQ.'EM') GOTO 999
	IF (IECODE.EQ.'SH') GOTO 80
	CALL EIHCPY(LUN)
	GOTO 20
C
C NF entry
30	CALL EIHRI(IFSN,1,1)
	CALL IFFSEL(LUN)
	ISQ=0
	CALL IFFNF(IFSN,ISQ)
	GOTO 10
C
C EF entry
40	CALL IFFSEL(LUN)
	CALL IFFEF
	GOTO 10
C
C NO entry
50	CALL EIHRI(LAYER,1,1)
	IF (LAYER.EQ.0) THEN
	   CALL IFFSEL(LUN)
	   LPOSNO=LPOSE
	   CALL IFFNO(0,0,0)
	ELSE
	   IF (IELEN.EQ.4) THEN
	      CALL EIHRL(NXTLAY,1,3)
	      CALL IFFPKE(IECODE,IELEN,NXTLAY)
	   ELSE
	      CALL IFFNXC('EO',IELEN)
	   ENDIF
	   IF (IELEN.LT.0) GOTO 90
	ENDIF
	GOTO 10
C
C EF - end layer
55	CALL IFFSEL(LUN)
	CALL IFFUNO(LPOSNO)
	CALL IFFEO
	GOTO 10
C
C RA entry
60	CALL IFFSEL(LUN)
	CALL IFFRA(IN_FIL_RANGE)
	GOTO 10
C
C NS entry
70	CALL IFFSEL(LUN)
	  CALL IFFNS('Created by POLMERGE')
	GOTO 10
C
C SH entry
C
C create sector header
80	STP(1) = (IN_FIL_RANGE(2)-IN_FIL_RANGE(1))/(NUMBOX*2)+0.002
	STP(2) = (IN_FIL_RANGE(4)-IN_FIL_RANGE(3))/(NUMBOY*2)+0.002
	NUM(1) = NUMBOX*2
	NUM(2) = NUMBOY*2
	ORI(1) = IN_FIL_RANGE(1)-0.001
	ORI(2) = IN_FIL_RANGE(3)-0.001
	CALL IFFSEL(LUN)
	CALL IFFSH(ORI(1),ORI(2),
     &	             STP(1),STP(2),NUM(1),NUM(2))
	GOTO 10
C ......................................................................
C
90	IFF_HEADER=PMERGE__UNEXPEOF
	CALL LSL_PUTMSG(IFF_HEADER,IN_FILE(:IN_LEN))
C
999	RETURN
	END
