C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1992-05-19 10:11:32.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
C
C-------------------------------------------------------------------------------
C				THE WRAPPER
C-------------------------------------------------------------------------------
C
C
C
C
	INTEGER*4 FUNCTION FIND_OTHERS(POLY_INDX,EXTRAS,NUM_EXTRA)
C
***	MODULE	FIND_OTHERS
***	IDENT	12MY92
C
	IMPLICIT NONE
C
C	Copyright Laser Scan Ltd, Cambridge, England
C
C	Author		Sunil Gupta			30-april-1992
C
C
C	........................................................................
C
	INCLUDE 'LSL$CMNPOLYGONS:ARRAY_PTRS.CMN'
	INCLUDE 'LSL$CMNPOLYGONS:PARAMS.PAR'
C
C Arguments
	INTEGER  POLY_INDX		!polygon index
	INTEGER  EXTRAS(POLY_SEG_MAX)	!array of pointers into neigh_buf
	INTEGER  NUM_EXTRA		!number of extra polygons found
C
	INTEGER*4 	ACTUAL_FIND_OTHERS
C
C	........................................................................
C
	FIND_OTHERS = ACTUAL_FIND_OTHERS(POLY_INDX,EXTRAS,NUM_EXTRA,
     &			POLMAX,TABMAX,POLNEST_MAX, PARTS_MAX,
     &			%VAL(PTR$_POLY_START)
     &		  )
C
C	........................................................................
C
	RETURN
	END
C
C-------------------------------------------------------------------------------
C			    THE PROPER FUNCTION
C-------------------------------------------------------------------------------
C
C
C
	INTEGER*4 FUNCTION ACTUAL_FIND_OTHERS(POLY_INDX,EXTRAS,NUM_EXTRA,
     &		POLMAX,TABMAX,POLNEST_MAX,PARTS_MAX,
     &		POLY_START
     &	)
C
***	MODULE	ACTUAL_FIND_OTHERS
***	IDENT	08OC87
C
C Copyright Laser-Scan Laboratories Ltd., Cambridge, England
C
C Author M.W.S. Reid
C
C 	Created					MWSR    03-Oct-1987
C
C 
C
	IMPLICIT NONE
C
C Parameters
	INCLUDE 	'LSL$CMNPOLYGONS:PARAMS.PAR'
	INCLUDE 	'LSL$CMNPOLMERGE:POLMERGEMSG.PAR'
	INTEGER		SS$_NORMAL
	EXTERNAL	SS$_NORMAL	! normal successful completion
C
C Common:
	INCLUDE		'LSL$CMNPOLMERGE:MERGE.CMN'
	INCLUDE		'LSL$CMNPOLYGONS:POLYGONS.CMN'
C
C
C Arguments
	INTEGER  POLY_INDX	!polygon index
	INTEGER  EXTRAS(POLY_SEG_MAX) !array of pointers into neigh_buf
	INTEGER  NUM_EXTRA	!number of extra polygons found
C
	INTEGER*4	POLMAX
	INTEGER*4	TABMAX
	INTEGER*4	POLNEST_MAX
	INTEGER*4	PARTS_MAX
C
	INTEGER		POLY_START(3,POLMAX)

C
C Functions
	INTEGER   GET_ACTXT      !gets the AC text of the poly
	INTEGER   CHECK_AC       ! checks for string equality
C
C Local Varaiables
	BYTE	  STRBUF1(255)	 !to hold AC text
	BYTE	  STRBUF2(255)   !to hold AC 5 text
	INTEGER*4 STRLEN1	 !number of characters 
	INTEGER*4 STRLEN2	 !number of characters 
	INTEGER*4 SEGPTR         !pointer
	INTEGER*4 I,J,IERR
C
C initialise
	ACTUAL_FIND_OTHERS = %LOC(SS$_NORMAL)
	NUM_EXTRA = 0
C
C find the code of the selected poly
C	Use GET_ACTEXT to retrieve the label for this polygon
C
	SEGPTR=IABS(POLY_START(1,POLY_INDX))
	ACTUAL_FIND_OTHERS= GET_ACTXT(SEGPTR,POLY_INDX,
     &	              .TRUE.,STRBUF1,STRLEN1,.FALSE.)
	IF (.NOT. ACTUAL_FIND_OTHERS) GOTO 999
C
	DO 10 I = 1,NUM_NEIGH

C ignore selected poly
	   IF (NEIGH_BUF(1,I) .EQ. POLY_INDX)  GOTO 10
	   DO 5 J = 1,NUM_EXTRA
C
C ignore extras already encountered
	      IF(NEIGH_BUF(1,I).EQ. EXTRAS(J)) GOTO 10
5	   CONTINUE
C
	   SEGPTR=IABS(POLY_START(1,ABS(NEIGH_BUF(1,I))))
	   ACTUAL_FIND_OTHERS= GET_ACTXT(SEGPTR,ABS(NEIGH_BUF(1,I)),
     &	              .TRUE.,STRBUF2,STRLEN2,.FALSE.)
	   IF (.NOT. ACTUAL_FIND_OTHERS) GOTO 999
	   IERR = CHECK_AC(STRBUF1,STRLEN1,STRBUF2,STRLEN2)
	   IF (IERR .EQ. 0) THEN
C
C strings are equal - so add to list
	      NUM_EXTRA = NUM_EXTRA +1
	      EXTRAS(NUM_EXTRA) = I
	   ENDIF
10      CONTINUE	   
999	RETURN
	END
