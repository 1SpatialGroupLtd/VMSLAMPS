	LOGICAL*4 FUNCTION FORM_BOXES()
C
***	MODULE	FORM_BOXES
***	IDENT	21SE87
C
C	Copyright Laser-Scan Laboratories Ltd., Cambridge, England
C
C	Author						TJH  20-Feb-1987
C	Modified for POLMERGE				MWSR 22-Jun-1987
C
C
C Function to select the sectored spatial indices needed for seed point
C and nested polygon determination.
C
C Function returns SS$_NORMAL if all is well or one of a variety of
C POLMERGE error codes on failure.
C
C ......................................................................
C
	IMPLICIT NONE
C
C Parameters:
	INCLUDE 	'LSL$CMNPOLYGONS:PARAMS.PAR'
	INTEGER		SS$_NORMAL
	EXTERNAL	SS$_NORMAL	! normal successful completion
C
C Common:
	INCLUDE		'LSL$CMNPOLMERGE:COMMAND.CMN'
	INCLUDE		'LSL$CMNPOLYGONS:FILE.CMN'
	INCLUDE		'LSL$CMNPOLYGONS:POLYGONS.CMN'
	INCLUDE		'LSL$CMNPOLYGONS:SECTOR.CMN'
	INCLUDE		'LSL$CMNPOLYGONS:TABLES.CMN'
C
C W/s:
	REAL		MEAN		! pretty average variable really
C
C Functions:
	INTEGER		BOX_POLY	! sets up polygon box structure
C
C ......................................................................
C
C        S E T    U P   T H E   P O L Y G O N   B O X  S T R U C T U R E
C 
	CALL FRAMED_MES(1)
C
C Calculate how many boxes will be required to ensure that there are
C at most 5 polygons in a box
	CALL CALC_BOXES()
C
	FORM_BOXES=BOX_POLY()
C
	IF (FORM_BOXES) THEN
	   IF (HAD_LOG) THEN
	     CALL EXPAND(
     &	     'Number of boxes in X direction....................... %N',
     &							NUMBOX)
	     IF (HAD_LIS) THEN
	        CALL FLWLIN
	     ELSE
                CALL TTWLIN
	     ENDIF
	     CALL EXPAND(
     &	     'Number of boxes in Y direction....................... %N',
     &							NUMBOY)
	     IF (HAD_LIS) THEN
	        CALL FLWLIN
	     ELSE
                CALL TTWLIN
	     ENDIF
	     MEAN=FLOAT((NUMBOX*NUMBOY))/FLOAT(NUM_POLY)
	     CALL EXPAND(
     &	     'Mean number of boxes per polygon .................... %F',
     &								MEAN)
	     IF (HAD_LIS) THEN
	        CALL FLWLIN
	     ELSE
                CALL TTWLIN
	     ENDIF
	     MEAN=FLOAT(NUM_POLY)/FLOAT((NUMBOX*NUMBOY))
	     CALL EXPAND(
     &	     'Mean number of polygons per box ..................... %F',
     &								MEAN)
	     IF (HAD_LIS) THEN
	        CALL FLWLIN
	     ELSE
                CALL TTWLIN
	     ENDIF
	  ENDIF
	ELSE
	   GOTO 10
	ENDIF
C
C ......................................................................
C
C If all is well so be it. If we have had to warn the user (but
C continued processing) upgrade to severity ERROR now to stop further
C processing.
10      IF (FORM_BOXES) THEN
	   FORM_BOXES=%LOC(SS$_NORMAL)
	ELSE
	   DELETE=.TRUE.
	ENDIF
	RETURN
	END
