C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1992-05-18 14:42:36.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
C
C-------------------------------------------------------------------------------
C				THE WRAPPER
C-------------------------------------------------------------------------------
C
C
C
C
	LOGICAL*4 FUNCTION ABORT_POLY()
C
***	MODULE	ABORT_POLY
***	IDENT	30AP92
C
C	Copyright Laser Scan Ltd, Cambridge, England
C
C	Author		Sunil Gupta			30-april-1992
C
C
C	........................................................................
C
	INCLUDE 'LSL$CMNPOLYGONS:ARRAY_PTRS.CMN'
C
	LOGICAL*4	ACTUAL_ABORT_POLY
C
C	........................................................................
C
	ABORT_POLY = ACTUAL_ABORT_POLY(
     &			POLMAX,TABMAX,PARTS_MAX,
     &			%VAL( PTR$_POLY_STACK),
     &			%VAL( PTR$_SIDE_STACK),
     &			%VAL( PTR$_POLY_PARTS),
     &			%VAL( PTR$_SEGTAB),
     &		  )
C
C	........................................................................
C
	RETURN
	END
C
C-------------------------------------------------------------------------------
C			    THE PROPER FUNCTION
C-------------------------------------------------------------------------------
C
C
C
	LOGICAL*4 FUNCTION ACTUAL_ABORT_POLY(
     &		POLMAX, TABMAX,PARTS_MAX,
     &		 POLY_STACK, SIDE_STACK, POLY_PARTS, SEGTAB)
C
***	MODULE	ACTUAL_ABORT_POLY
***	IDENT	12AU88
C
C	Copyright Laser-Scan Laboratories Ltd., Cambridge, England
C
CMOD	Extra level of indirection needed for BBSC	AC   10-Aug-1988
C	Author						TJH  20-Feb-1987
C
C Function to abort a polygon and to erase all evidence of that polygon
C from /LRUSED/LRUSED and /STACKS/*
C ......................................................................
C
	IMPLICIT NONE
C
C Parameters:
	INCLUDE 	'LSL$CMNPOLYGONS:PARAMS.PAR'
	INCLUDE 	'LSL$CMNPOLYGONS:POLYGONSMSG.PAR'
	INTEGER		SS$_NORMAL
	EXTERNAL	SS$_NORMAL	! normal successful completion
C
C Common:
	INCLUDE		'LSL$CMNPOLYGONS:POLYGONS.CMN'
	INCLUDE		'LSL$CMNPOLYGONS:TABLES.CMN'
	INCLUDE		'LSL$CMNPOLYGONS:STACKS.CMN'
C
C	Arguments
		INTEGER*4	POLMAX
		INTEGER*4	TABMAX
		INTEGER*4	PARTS_MAX
C
		INTEGER*4 POLY_PARTS(2,PARTS_MAX)
		INTEGER*4 POLY_STACK(TABMAX)
		INTEGER*4 SEGTAB(2,TABMAX)
		BYTE	  SIDE_STACK(TABMAX)
C
C W/s
	INTEGER		I 	! loop variable
	LOGICAL		OK	! function return
C
C Function:
	INTEGER BBSC		! clear one bit
C
C ......................................................................
C
	ACTUAL_ABORT_POLY=%LOC(SS$_NORMAL)
C
C Unset all the "segment used" flags for the segments in the polygon
	IF (STACK_PTR.GT.0) THEN
	   DO 10 I=1,STACK_PTR
	     IF (POLY_STACK(I).EQ.0) GOTO 20	! end of set elements?
	     OK=BBSC(SEGTAB(1,IABS(POLY_STACK(I))),LRUSED(1,SIDE_STACK(I)))
	     IF (.NOT.OK) THEN
	        ACTUAL_ABORT_POLY=POLY__BADFLAG
	        CALL LSL_PUTMSG(ACTUAL_ABORT_POLY)
	        GOTO 20
	     ENDIF
10	   CONTINUE
	ENDIF
C
20	RETURN
	END
