	SUBROUTINE HALF_TRANS(FIRST,CUR_TRANS,CUR_COORD)
C
***	MODULE	HALF_TRANS
***	IDENT	12AU88
C
C	Copyright Laser-Scan Laboratories Ltd., Cambridge, England
C
C	Created 						AC 17-May-1988
C
C Routine that is called twice (FIRST = .T. then .F.) and with a pair of 
C transitions (type given by CUR_TRANS, locn given by CUR_COORD). When called
C with FIRST = .F. the routine determines whether the transitions need to be 
C stored (if any) and does so.
C
C ......................................................................
C
	IMPLICIT NONE
C
C Arguments:
	LOGICAL		FIRST		! .T. if first of a pair of transitions
	LOGICAL		CUR_TRANS	! .T. an IN  transition
C					! .F. an OUT transition
	REAL		CUR_COORD	! ordering coordinate of current trans
C
C Commons:
	INCLUDE 'LSL$CMNPOLYGONS:TRANSITIONS.CMN'	
C					! common block containing transition 
C					! information
C
C ......................................................................
C
C If first call then just store parameters for later
	IF (FIRST) THEN
		PRV_TRANS = CUR_TRANS
		PRV_COORD = CUR_COORD
C
C otherwise decide which transitions to store
	ELSE
C
C if both transitions were IN type then use the larger coordinate
		IF (PRV_TRANS.AND.CUR_TRANS) THEN
			CALL STORE_TRANS(.TRUE.,MAX(PRV_COORD,CUR_COORD))
			GOTO 2000
		ENDIF
C
C if both transitions were OUT type then use the smaller coordinate
		IF (.NOT.PRV_TRANS.AND..NOT.CUR_TRANS) THEN
			CALL STORE_TRANS(.FALSE.,MIN(PRV_COORD,CUR_COORD))
			GOTO 2000
		ENDIF
C
C if there was one transition of each type then use them both if the coordinate
C of the IN transition is greater than or equal to the coordinate of the OUT 
C transition - otherwise do nothing. This may result in an IN-OUT transition 
C at the same coordinate indicating a cusp.  
C
		IF (PRV_COORD.GT.CUR_COORD) THEN
C
C PREVIOUS COORDINATE is larger
C if previous transition was IN then use both transitions
			IF (PRV_TRANS) THEN
				CALL STORE_TRANS(.FALSE.,CUR_COORD)
				CALL STORE_TRANS(.TRUE., PRV_COORD)
			ENDIF
		ELSE
C
C CURRENT COORDINATE is larger
C if current transition is IN then use both transitions
			IF (CUR_TRANS) THEN
				CALL STORE_TRANS(.FALSE.,PRV_COORD)
				CALL STORE_TRANS(.TRUE., CUR_COORD)
			ENDIF
		ENDIF
	ENDIF

2000	RETURN
	END

