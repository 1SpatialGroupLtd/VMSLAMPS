C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1992-05-05 11:44:16.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE FORMATION_SUMMARY(MINSEG,MAXSEG,CLOCK,ONE_USE)
C
***	MODULE	FORMATION_SUMMARY
**	IDENT	30OC91
C
C	Copyright (C), Laser-Scan Laboratories Ltd., Cambridge, England
C
CMOD	Modified to mention TREES - thus ONE_USE arg.   AC  13-Jul-1988 
C	Created						TJH 03-Sep-1987
C
C
	IMPLICIT NONE
C
C Arguments:
	INTEGER   MINSEG	! min number of segments in a polygon
	INTEGER   MAXSEG	! max number of segments in a polygon
	LOGICAL   CLOCK		! /OPTIONS=CLOCKWISE specified?
	LOGICAL	  ONE_USE	! /ONEARM=USE specified?
C
C Parameters:
	INCLUDE 	'LSL$CMNPOLYGONS:PARAMS.PAR'
C
C Common:
	INCLUDE		'LSL$CMNPOLYGONS:POLYGONS.CMN'
	INCLUDE		'LSL$CMNPOLYGONS:TREES.CMN'
	INCLUDE		'LSL$CMNPOLYGONS:TABLES.CMN'
C
C ......................................................................
C
	CALL EXPAND(
     &	     'Number of polygons formed (including isolations) ... %N',
     &							NUM_POLY)
	IF (HAD_LIS) THEN
	   CALL FLWLIN
	ELSE
	   CALL TTWLIN
	ENDIF
	IF (ONE_USE) THEN 
	   CALL EXPAND(
     &	     'Number of trees formed ............................. %N',
     &							NUM_TREE)
	   IF (HAD_LIS) THEN
	      CALL FLWLIN
	   ELSE
	      CALL TTWLIN
	   ENDIF
	ENDIF
	CALL EXPAND(
     &	     'Number of segments used to form polygons ........... %N',
     &								NUM_SEG)
	IF (HAD_LIS) THEN
	   CALL FLWLIN
	ELSE
	   CALL TTWLIN
	ENDIF
	CALL EXPAND(
     &	     'Minimum number of segments used to form a polygon .. %N',
     &								MINSEG)
	IF (HAD_LIS) THEN
	   CALL FLWLIN
	ELSE
	   CALL TTWLIN
	ENDIF
	CALL EXPAND(
     &	     'Maximum number of segments used to form a polygon .. %N',
     &								MAXSEG)
	IF (HAD_LIS) THEN
	   CALL FLWLIN
	ELSE
	   CALL TTWLIN
	ENDIF
	CALL EXPAND('Direction of polygon formation')
	IF (CLOCK) THEN
	   CALL APPEND(' ..................... CLOCKWISE')
	ELSE
	   CALL APPEND(' ..................... ANTICLOCKWISE')
	ENDIF
	IF (HAD_LIS) THEN
	   CALL FLWLIN
	ELSE
	   CALL TTWLIN
	ENDIF
	RETURN
	END
