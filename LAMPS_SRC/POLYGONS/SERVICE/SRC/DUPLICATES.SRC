C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1992-05-01 12:36:36.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE DUPLICATES
C
***	MODULE	DUPLICATES
***	IDENT	06MR87
C
C	Copyright Laser-Scan Laboratories Ltd., Cambridge, England
C
C	Author					TJH 	06-Mar-1987
C
C Cleans duplicate coords. from POLY_BUF, updating POLY_PTS as
C necessary
C
C	IMPLICIT NONE
C
C Parameters:
	REAL		EPS
	PARAMETER       (EPS = 0.0001)
C
C Parameters:
	INTEGER		X,Y
	PARAMETER 	(X=1, Y=2)
	INCLUDE 	'LSL$CMNPOLYGONS:PARAMS.PAR'
	INCLUDE 	'LSL$CMNPOLYGONS:POLYGONSMSG.PAR'
C
C Common:
	INCLUDE 	'LSL$CMNPOLYGONS:POLYGONS.CMN'
C
C W/s
	INTEGER       	I,NM,J  ! loop vars.
C
C ......................................................................
C
C Check for DUPLICATES
	NM=POLY_PTS-1
	DO 10 I=1,NM
	   IF (ABS(POLY_BUF(X,I+1)-POLY_BUF(X,I)).LT.EPS.AND.
     &      ABS(POLY_BUF(Y,I+1)-POLY_BUF(Y,I)).LT.EPS) GOTO 20
10	CONTINUE
	GOTO 50			! just return  - none found
C
C Remove DUPLICATES
20	J=I-1
30	I=I+1
	IF (I.GT.NM) GOTO 40
	IF (ABS(POLY_BUF(X,I+1)-POLY_BUF(X,I)).LT.EPS.AND.
     &      ABS(POLY_BUF(Y,I+1)-POLY_BUF(Y,I)).LT.EPS) GOTO 30
	J=J+1
	POLY_BUF(X,J)=POLY_BUF(X,I)
	POLY_BUF(Y,J)=POLY_BUF(Y,I)
	GOTO 30
40	J=J+1
	POLY_BUF(X,J)=POLY_BUF(X,I)
	POLY_BUF(Y,J)=POLY_BUF(Y,I)
	POLY_PTS=J
50	RETURN
	END
