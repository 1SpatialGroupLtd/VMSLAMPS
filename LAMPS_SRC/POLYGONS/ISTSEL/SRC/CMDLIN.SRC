C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1987-10-19 12:21:28.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	INTEGER*4 FUNCTION CMDLIN()
C
***	MODULE	CMDLIN
***	IDENT	19OC87
C
C Copyright Laser-Scan Laboratories Ltd, Cambridge, England
C
CMOD	No longer uses an explicit SYS$DISK:[] in
C	the /DEF_FILE default, as can cause file
C	parse problems					TJH 19-Oct-1987
C	SYS$DISK:[]CODE_DEF.DAT;0 not LSL$LOOKUP	TJH 19-Jun-1987
C
C Created                        		 G.S.Tobiss 26-Jan-1987
C
C Command line decoder for ISTSEL
C
	IMPLICIT NONE
C
C Parameters...
	INTEGER  SS$_NORMAL
	EXTERNAL SS$_NORMAL
	INCLUDE 'LSL$CMNLSL:LSLLIBMSG.PAR'
	INCLUDE 'ISTSELMSG.PAR'
	INCLUDE 'PARAMS.PAR'
C
C Common
	INCLUDE 'LSL$CMNLSL:CLD.CMN'
	INCLUDE 'COMMAND.CMN'
	INCLUDE 'LSL$CMNLSL:FILENAME.CMN'
C
C Command language definitions...
	EXTERNAL	ISTSEL_CLD
C
C Logical*4
	LOGICAL		ABSENT		!.T. if file param not found
	LOGICAL		REPORT		!local error reporting
	LOGICAL		HAD_DEF		!/DEF_FILE qualifier
	LOGICAL		LOCAL		!.T. if qualifier detected
	LOGICAL		LOCNEG		!.T. if qualifier negated
C
C Functions called
	INTEGER		DCL_STARTUP	!Looks for command line
	INTEGER		DCL_FILE	!Reads file
	INTEGER		DCL_QUAL	!Detects qualifier
C
C---------------------------------------------------------------------
C
	CMDLIN=%LOC(SS$_NORMAL)
	REPORT=.TRUE.
C
C Get the command line
C
	CMDLIN=DCL_STARTUP('ISTSEL',.FALSE.,ISTSEL_CLD,REPORT)
C
C DCL_STARTUP will return set to SS$_NORMAL if all is well
C
	IF (.NOT.CMDLIN) GOTO 10             !Return
C
C-----------------------------------------------------------------------
C
C Get input data file
C
	CMDLIN=DCL_FILE('P1','LSL$IF:IFF.IFF;0',ABSENT,.FALSE.,REPORT)
	IF (.NOT.CMDLIN) THEN
	   CALL LSL_PUTMSG(CMDLIN)
	   GOTO 10
	ENDIF
	INFILE=FILARY(1)(1:FIL_LEN(1))
	IN_LEN=FIL_LEN(1)
C
C Get output IFF file
C
	CMDLIN=DCL_FILE('P2',INFILE(1:INDEX(INFILE,';')-1),ABSENT,
     &							.FALSE.,REPORT)
	IF (.NOT.CMDLIN) GOTO 10
	IF (.NOT.ABSENT) THEN
	   OUTFILE=FILARY(1)(1:FIL_LEN(1))
	   OUT_LEN=FIL_LEN(1)
	ENDIF
C
C See if /LOG has been given
C
	CMDLIN=DCL_QUAL('LOG',HAD_LOG,LOCAL,LOCNEG,REPORT)
	IF (.NOT.CMDLIN) GOTO 10
C
C Now get the segment code selection definition file
C
C
	CMDLIN=DCL_QUAL('DEF_FILE',HAD_DEF,LOCAL,LOCNEG,REPORT)
	IF (.NOT.CMDLIN) GOTO 10

	IF (HAD_DEF) THEN
	   CMDLIN=DCL_FILE('DEF_FILE','CODE_DEF.DAT;0'
     &					,ABSENT,.FALSE.,REPORT)
	   IF (.NOT.CMDLIN) GOTO 10
	   DEFFIL=FILARY(1)(1:FIL_LEN(1))
	   DEF_LEN=FIL_LEN(1)
	ELSE
	   DEFFIL='SYS$DISK:[]CODE_DEF.DAT;0'
	   DEF_LEN=25
	ENDIF
C
C Back to ISTSEL setting SS$_NORMAL if all is OK
C
10	IF (CMDLIN) CMDLIN=%LOC(SS$_NORMAL)
	RETURN
	END
