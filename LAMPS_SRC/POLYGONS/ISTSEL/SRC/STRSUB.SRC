C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1987-06-22 12:59:44.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE STRSUB(TEXT,LENGTH,SWAP)
C
***	MODULE	STRSUB
***	IDENT	19JN87
C
C Copyright Laser-Scan Laboratories Ltd, Cambridge, England
C
CMOD	Tidied						TJH 19-Jun-1987
C
C Created                         G.S.Tobiss 27-January-1987
C
C Subroutine called from SEGSEL to compare the text string from
C either an AC or a TX entry passed to it against the list of
C codes to be amalgamated into the new groupings. If a match
C is found then replace the string and then ensure that the
C new entry is padded to the nearest word boundary with a null
C 
	IMPLICIT NONE
C
C parameter
C
	INCLUDE 'HERE:PARAMS.PAR'
C
C common
C
	INCLUDE 'HERE:COMMAND.CMN'
C
C workspace
C
	CHARACTER*1	CNULL		!null character
	CHARACTER*256	TEXT		!text for entry
C
	LOGICAL		SWAP		!.T. if code changed
C
	INTEGER*4	LENGTH		!text entry length
	INTEGER*4	Y,X		!counters for array 
C
	DATA CNULL/0/
C
C-----------------------------------------------------------------------
C
C First compare the codes to see if there's a match
C
	DO 20 Y=1,NEWNUM
	   DO 10 X=1,OLDLEN(Y)
	      IF (TEXT(1:LENGTH).EQ.OLDC(Y,X)(1:OLDCLEN(Y,X))) THEN
	         TEXT=NEWC(Y)(1:NEWLEN(Y))
	         LENGTH=NEWLEN(Y)
	         SWAP=.TRUE.
	         GOTO 30
	      ENDIF
10	   CONTINUE
20	CONTINUE
	GOTO 40			!no match so return
C
C ......................................................................
C
C now pad out the string with null byte (if needed)
C
30	IF (MOD(LENGTH,2).EQ.0.AND.LENGTH.LT.255) THEN
	   LENGTH=LENGTH+1
	   TEXT(LENGTH:LENGTH)=CNULL
	ENDIF
40	RETURN
	END
