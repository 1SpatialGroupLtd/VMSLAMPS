	SUBROUTINE ACSORT(IELEN,CHACODE,CODLEN,TXENT)
C
***	MODULE	ACSORT
***	IDENT	19JN87
C
C Copyright Laser-Scan Laboratories Ltd, Cambridge, England
C
CMOD	Now TXTDSC for efficient conversion of BYTE to
C	CHARACTER, uses VIOCLR to clear TXTBUF		TJH 19-Jun-1987
C	Created                        		 G.S.Tobiss 27-Jan-1987
C
C Subroutine called from SEGSEL to read AC's from either LITES or
C CODSEG generated AC's. After that convert from byte to character
C so that we can compare characters in the arrays for selection or
C rejection. Then get the length of each entry ignoring leading 
C spaces or trailing spaces/nulls. Alternatively if we have a TX
C entry then just use the code that gets the entry length
C
	IMPLICIT NONE
C
C Common:
	INCLUDE 'LSL$CMNLSL:TXTC.CMN'
C
	CHARACTER*1	NULL		!check for null
	CHARACTER*1	SPACE		!check for space
	CHARACTER*1	TAB		!check for horizontal tab
	CHARACTER*256	CHACODE		!character variable for code
	INTEGER*4	I		!counter for DO loops etc
	INTEGER*2	IELEN		!IFF entry length
	INTEGER*4	CODLEN		!length of code
	LOGICAL		TXENT		!so we know it's a TX entry
C
	DATA NULL/0/
	DATA SPACE/32/
	DATA TAB/9/
C
C-----------------------------------------------------------------------
C
C If it's a TX entry then skip the AC decode bit - we only need the 
C entry length
C
	IF (.NOT.TXENT) THEN
	   CALL VIOCLR(TXTBUF,256,0)	! clear TXTBUF
C
C Read l/r code and convert from byte to character using fake descriptor
C TXTDSC
	   CALL EIHR(TXTBUF,IELEN-3,4)		!read code
	   TXTPTR=IELEN*2
	   CALL COPY_STRING(TXTDSC,CHACODE)	! convert to character
	ENDIF
C
C now check for and omit tabs and spaces before the code
C
10	IF (CHACODE(1:1).EQ.SPACE.OR.CHACODE(1:1).EQ.TAB) THEN
	   DO 20 I=1,255
	      CHACODE(I:I)=CHACODE(I+1:I+1)
20	   CONTINUE
	   CHACODE(256:256)=SPACE
	   GOTO 10
	ENDIF
C
C and now get the code length ignoring trailing nulls and spaces
C
	DO 30 I=256,1,-1
	   IF (CHACODE(I:I).NE.NULL.AND.CHACODE(I:I).NE.SPACE) THEN
	      CODLEN=I
	      GOTO 40
	   ENDIF
30	CONTINUE
C
40	RETURN
	END
