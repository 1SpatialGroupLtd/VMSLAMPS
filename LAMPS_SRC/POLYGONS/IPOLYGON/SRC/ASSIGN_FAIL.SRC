C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1991-11-01 15:13:32.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL FUNCTION ASSIGN_FAIL(POLY_INDX,SEED_FAIL)
C
***	MODULE	ASSIGN_FAIL
***	IDENT	01NO91
C
C	Copyright Laser-Scan Ltd., Cambridge, England
C
CMOD1056 Send abs coords to LITES2 if requested		 JB  01-Nov-1991
C
C	Author						TJH  22-May-1987
C
C Function to warn the use of seed point assignment failure.
C
C Function returns SS$_NORMAL if all is well or one of a variety of
C IPOLYGON error codes on failure.
C
C
	IMPLICIT NONE
C
C Arguments:
	INTEGER	  	POLY_INDX	! current polygon
	INTEGER   	SEED_FAIL	! number of polys without seeds
C
C Parameters:
	INCLUDE 	'LSL$CMNPOLYGONS:PARAMS.PAR'
	INTEGER		SS$_NORMAL
	EXTERNAL	SS$_NORMAL	! normal successful completion
C
C Common:
	INCLUDE		'LSL$CMNIPOLYGON:COMMAND.CMN'
	INCLUDE		'LSL$CMNPOLYGONS:FILE.CMN'
	INCLUDE		'LSL$CMNPOLYGONS:POLYGONS.CMN'
	INCLUDE		'LSL$CMNIFF:MD2DES.CMN'
C
C W/s
	CHARACTER*256	MESTXT	! message text
	INTEGER*2	MESLEN	! and its length
C
	REAL	  APOINT(2)	! a coordinate
C
C Functions:
	INTEGER*2 EXPAND	! old friend
	INTEGER   GET_POLPNT	! gets a single polygon coordinate
C
C ......................................................................
C
	ASSIGN_FAIL=%LOC(SS$_NORMAL)
C
	SEED_FAIL=SEED_FAIL+1		    
C
C Warn user, get a point from the polygon
	ASSIGN_FAIL=GET_POLPNT(APOINT,POLY_INDX)
	IF (.NOT.ASSIGN_FAIL) GOTO 10
	IF (HAD_LITES) THEN
	   CALL FLWSEL(LITESLUN)
	   CALL FLWRTF('%%MESSAGE Seed point assignment error:')
	ENDIF
C
	IF (HAD_ABS) THEN
	   MESLEN=EXPAND(
     &		    '%WSSeed point assignment failed in polygon near'
     &		    //' (%F, %F)',MESTXT,APOINT(1)+MD2LOC(1),
     &					 APOINT(2)+MD2LOC(2))
	ELSE
	   MESLEN=EXPAND(
     &		    '%WSSeed point assignment failed in polygon near'
     &		    //' (%F, %F)',MESTXT,APOINT(1),APOINT(2))
	ENDIF
C
	CALL MES_OUT(APOINT,MESTXT,MESLEN)
C
10	RETURN
	END
C
