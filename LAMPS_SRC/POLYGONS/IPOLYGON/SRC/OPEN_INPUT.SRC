C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1987-09-22 16:56:30.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	INTEGER*4  FUNCTION OPEN_INPUT()
C
***	MODULE	OPEN_INPUT
***	IDENT	11FE87
C
C	Copyright Laser-Scan Laboratories Ltd., Cambridge, England
C
C	Author						TJH  11-Feb-1987
C
C Function to open the segment (and possibly an optional seed point)
C IFF file for input to IPOLYGON.
C
C Function returns one of 2 condition codes:
C
C	SS$_NORMAL	- success
C	SS$_ABORT	- something went wrong
C
C All file-specs and their lengths are taken from /FILCHS/ common.
C
C OPEN_INPUT modifies the file-spec held in common to match the full
C file specification of the file acutally opened on disk. OPEN_INPUT
C also sets the file-open flags in /FILE/ common as appropriate
C
C All error reporting is done locally.
C
	IMPLICIT NONE
C
C Parameters:
	INTEGER*4 	SS$_ABORT
	EXTERNAL  	SS$_ABORT	! bad luck!
	INTEGER*4 	SS$_NORMAL
	EXTERNAL  	SS$_NORMAL	! normal successful completion
	INCLUDE 	'LSL$CMNPOLYGONS:PARAMS.PAR'
C
C Function:
	LOGICAL		IFFOPEN		! open existing IFF file to read
C
C Workspace:
	INTEGER*4	IERR		! for error return	
	INTEGER*4	CREATED(2)	! dummy quadword for IFFINQ
	INTEGER*4	REVISED(2)	! dummy quadword for IFFINQ
	INTEGER*2	NREV		! dummy word for IFFINQ
	INTEGER*2	PLEN		! tmp file-spec length

C
C Common:
	INCLUDE 'LSL$CMNIFF:IFFHAN.CMN'
	INCLUDE 'LSL$CMNIPOLYGON:COMMAND.CMN'
	INCLUDE 'LSL$CMNPOLYGONS:FILE.CMN'
C
C.......................................................................
C
	OPEN_INPUT = %LOC(SS$_NORMAL)   ! normal completion
	INFLO = .FALSE.			! .T. if segment IFF file open
	SEEDFLO = .FALSE.		! .T. if seed IFF file open
C
C.......................................................................
C
C Open segment IFF input file
C
	CALL IFFMAP(.TRUE.)		! use mapped IFF for input file
	OPEN_INPUT = IFFOPEN(INLUN,IN_FILE(:IN_LEN),,HAD_LOG)
C
	CALL IFFMAP(.FALSE.)
	IF (OPEN_INPUT) THEN			
	   INFLO=.TRUE.
C
C Get the full input file-spec as actually opened
C
	   CALL IFFINQ(IN_FILE,IN_LEN,CREATED,REVISED,NREV)
	ELSE
	   OPEN_INPUT = %LOC(SS$_ABORT)
	   GOTO 10				! file didn't open OK
	ENDIF
C	
C.......................................................................
C
C Open optional /SEED IFF input file
C
	IF (HAD_SEED_FILE) THEN
	   OPEN_INPUT = IFFOPEN(SEEDLUN,SEED_FILE(:SEED_LEN),,HAD_LOG)
C
	   IF (OPEN_INPUT) THEN			
	      SEEDFLO=.TRUE.
C
C Get the full input file-spec as actually opened
C
	      CALL IFFINQ(SEED_FILE,SEED_LEN,CREATED,REVISED,NREV)
	   ELSE
	      OPEN_INPUT = %LOC(SS$_ABORT)
	   ENDIF
	ENDIF
C
C.......................................................................
C
10	IF (OPEN_INPUT) OPEN_INPUT = %LOC(SS$_NORMAL) ! normal completion?
C
	RETURN
	END
