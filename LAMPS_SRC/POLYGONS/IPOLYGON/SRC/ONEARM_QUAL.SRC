C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1988-09-15 19:15:58.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	INTEGER FUNCTION ONEARM_QUAL()
C
***	MODULE	ONEARM_QUAL
**	IDENT	15SE88
C
C	Copyright (C), Laser-Scan Laboratories Ltd., Cambridge, England
C
CMOD	Modified to include /ONEARM=CONTAIN		AC  23-May-1988
CMOD	If only /ONEARM=WARN specified, ONE_DEL set .T. TJH 01-Nov-1987
C	Created						TJH 27-Aug-1987
C
C Function to decode IPOLYGONS /ONEARM=['keywords'] qualifier
C
C All results are returned via /COMMAND/ 
C
C Function returns SS$_NORMAL if all is well or one of a variety of
C CLI errors on failure.
C
C ...................................................................
C
	IMPLICIT NONE
C
C Parameters:
	INTEGER		SS$_NORMAL
	EXTERNAL	SS$_NORMAL
	INCLUDE 	'LSL$CMNPOLYGONS:PARAMS.PAR'
C
C Common:
	INCLUDE 	'LSL$CMNIPOLYGON:COMMAND.CMN'
	INCLUDE 	'LSL$CMNLSL:CLD.CMN'
C
C
C W/s:
	LOGICAL		LOCAL      	! tmp var
	LOGICAL		LOCNEG     	! tmp var
	LOGICAL		HAD_QUAL	! Had /ONEARM qualifier
	LOGICAL		HAD_KEY		! Had keyword from
C					! {USE,DELETE,CONTAIN,[NO]WARN}
C
C Function:
	INTEGER		DCL_QUAL	! looks for specified qualifier
C
C ......................................................................
C
	ONEARM_QUAL=%LOC(SS$_NORMAL)
C
C Setup default
	ONE_WARN = .FALSE.	! no warnings of onearm junctions
	ONE_CTN = .FALSE.
	ONE_USE = .FALSE.
	ONE_DEL = .TRUE.	! segments conected to onearm junctions to
C				! be deleted
C
C is the /ONEARM qualifier present?	
	ONEARM_QUAL=DCL_QUAL('ONEARM',HAD_QUAL,LOCAL,LOCNEG,.TRUE.)
	IF (.NOT.ONEARM_QUAL) GOTO 10
	IF (.NOT.HAD_QUAL) GOTO 10
C
C the .CLD construction means /ONEARM=DELETE, /ONEARM=USE, /ONAERM=CONTAIN
C are mutually exclusive - thus set var by looking for each
C
	ONEARM_QUAL=DCL_QUAL('ONEARM.DELETE',HAD_KEY,LOCAL,LOCNEG,.TRUE.)
	IF (.NOT.ONEARM_QUAL) GOTO 10
	ONE_DEL = HAD_KEY
C
	ONEARM_QUAL=DCL_QUAL('ONEARM.USE',HAD_KEY,LOCAL,LOCNEG,.TRUE.)
	IF (.NOT.ONEARM_QUAL) GOTO 10
	ONE_USE = HAD_KEY
C
	ONEARM_QUAL=DCL_QUAL('ONEARM.CONTAIN',HAD_KEY,LOCAL,LOCNEG,.TRUE.)
	IF (.NOT.ONEARM_QUAL) GOTO 10
	ONE_CTN = HAD_KEY
C
C By default /ONEARM=NOWARM so check if to be overridden
	ONEARM_QUAL=DCL_QUAL('ONEARM.WARN',HAD_KEY,LOCAL,LOCNEG,.TRUE.)
	IF (.NOT.ONEARM_QUAL) GOTO 10
	ONE_WARN = HAD_KEY
C
	IF (.NOT.ONE_DEL.AND..NOT.ONE_CTN.AND..NOT.ONE_USE) ONE_DEL=.TRUE.
C
C finished....
10	RETURN
	END
