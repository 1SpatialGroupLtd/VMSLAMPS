C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1988-08-15 12:28:00.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	INTEGER FUNCTION READ_PAIR_FILE()
C
***	MODULE	READ_PAIR_FILE
***	IDENT	15AU88
C
C	Copyright (C), Laser-Scan Laboratories Ltd., Cambridge, England
C
C	Created						AC  11-Aug-1988
C
C Function to read in the FC pairs (seed point FC -> poly boundary FC)
C from the specified FC pair file
C
C .......................................................................
C
	IMPLICIT NONE
C
C Parameters:
	INTEGER		SS$_NORMAL
	EXTERNAL	SS$_NORMAL	! normal successful completion
	INCLUDE 	'LSL$CMNLSL:LSLLIBMSG.PAR'
	INCLUDE 	'LSL$CMNPOLYGONS:PARAMS.PAR'
	INCLUDE 	'LSL$CMNIPOLYGON:IPOLYGONMSG.PAR'
C
C Common:
	INCLUDE		'LSL$CMNLSL:TXTC.CMN'
	INCLUDE		'LSL$CMNLSL:EXPC.CMN'
	INCLUDE		'LSL$CMNLSL:EXCEPTION.CMN'
	INCLUDE		'LSL$CMNPOLYGONS:FILE.CMN'
	INCLUDE		'LSL$CMNIPOLYGON:COMMAND.CMN'
C
C W/s:
	INTEGER		IERR		! return error code
	LOGICAL*4	STATUS		! return status code
	INTEGER		LINE		! current line being read
	INTEGER*2	LAST_FC		! the last FC read in
	INTEGER*2	SEED_FC		! seed point FC
	INTEGER*2	BOUND_FC	! poly boundary FC
	BYTE		CH		! single character
C
C Functions:
	LOGICAL*4	RDCHS		! reads a character from file
	LOGICAL*4	RDINT		! reads a word from file
	INTEGER*4	FLROPN		! open a text file for reading
	INTEGER*4	FLRLIN		! read a line from a text file
	INTEGER*4	FLRCLO		! close a text file
C
C ......................................................................
C
	READ_PAIR_FILE = %LOC(SS$_NORMAL)
C
C Note how many pairs have been read in 
	NUM_FC_PAIR = 0
C
C ........................................................................
C		O P E N   P A I R   F I L E
C
	STATUS=FLROPN(PAIRLUN,PAIR_FILE(1:PAIR_LEN),IERR)
	IF (.NOT.STATUS) THEN
	   READ_PAIR_FILE= IPOL__OPPAIR
	   CALL LSL_PUTMSG(READ_PAIR_FILE,PAIR_FILE(1:PAIR_LEN))
	   CALL LSL_ADDMSG(STATUS)
	   CALL LSL_ADDMSG(IERR)
	   GOTO 999
	ENDIF
C
C ........................................................................
C
C Keep a count of which line we are on
	LINE = 0
C
C Read in the next line 
10	STATUS=FLRLIN(,,,IERR)
	LINE=LINE+1
	IF (STATUS.EQ.LSL__EOF) GOTO 20
	IF (.NOT.STATUS) THEN
	   READ_PAIR_FILE=IPOL__BADPAIR
	   CALL LSL_PUTMSG(READ_PAIR_FILE,LINE,PAIR_FILE(1:PAIR_LEN))
	   CALL LSL_ADDMSG(STATUS)
	   CALL LSL_ADDMSG(IERR)
	   GOTO 999
	ENDIF
C
C Check if valid line to read - loop back if not
	CALL BSLN
	IF (RDCHS(CH)) GOTO 10		! ignore empty lines
	IF (CH.EQ.'!') GOTO 10		! ignore comment lines
	CALL BSCH			! backspace
C
C Read in two FCs from this line....
	IF (RDINT(SEED_FC)) GOTO 30
	IF (RDINT(BOUND_FC)) GOTO 30

	IF (.NOT.HAD_FC_PAIR) THEN
	   HAD_FC_PAIR=.TRUE.
	ELSE
C Check that any new seed FC is greater than the last one read in
	   IF (SEED_FC.LE.LAST_FC) THEN
	      CALL LSL_PUTMSG(IPOL__BADORDER,LINE,PAIR_FILE(1:PAIR_LEN))
	      GOTO 10
	   ENDIF
	ENDIF
C
C We have a valid FC pair - check there is space to save it, if not fail
	IF (NUM_FC_PAIR.EQ.FC_PAIR_MAX) THEN
	   READ_PAIR_FILE = IPOL__TOOMNYPAIR
	   CALL LSL_PUTMSG(READ_PAIR_FILE,FC_PAIR_MAX,PAIR_FILE(1:PAIR_LEN))
	   GOTO 20
	ENDIF
C
C Save this FC pair (noting last seed FC read) and loop back
	NUM_FC_PAIR = NUM_FC_PAIR+1
	LAST_FC = SEED_FC
	FC_PAIR(1,NUM_FC_PAIR) = SEED_FC
	FC_PAIR(2,NUM_FC_PAIR) = BOUND_FC
	GOTO 10
C
C ........................................................................
C		E R R O R   R E A D I N G   F C
C
30	READ_PAIR_FILE=IPOL__BADPAIR
	CALL LSL_PUTMSG(READ_PAIR_FILE,LINE,PAIR_FILE(1:PAIR_LEN))
	IF (ERRNUM.NE.LSL__UNEXPEOL) THEN
	   CALL LSL_ADDMSG(ERRNUM)
	   IF (ERRNUM.EQ.LSL__HADEXCP) CALL LSL_ADDMSG(LSL_EXCP)
	ENDIF
C
C ........................................................................
C		C L O S E   P A I R   F I L E
C
20	STATUS=FLRCLO(PAIRLUN,IERR)
	IF (.NOT.STATUS) THEN
	   READ_PAIR_FILE= IPOL__CLPAIR
	   CALL LSL_PUTMSG(READ_PAIR_FILE,PAIR_FILE(1:PAIR_LEN))
	   CALL LSL_ADDMSG(STATUS)
	   CALL LSL_ADDMSG(IERR)
	ENDIF
C
C Finished.....
999	RETURN
	END

