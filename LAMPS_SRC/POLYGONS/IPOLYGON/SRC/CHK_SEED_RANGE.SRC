C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1991-11-01 16:30:00.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL*4 FUNCTION CHK_SEED_RANGE(COORD,FSN,ISQ)
C
***	MODULE	CHK_SEED_RANGE
***	IDENT	01NO91
C
C	Copyright Laser-Scan Ltd., Cambridge, England
C
CMOD1056 Send abs coords if requested			 JB  01-Nov-1991
C
C	Author						TJH  20-Feb-1987
C
C Function to check that the seed point coordinate held in COORD lies
C inside the segment file range. If it doesn't, error messages are
C generated.
C
C Function returns SS$_NORMAL if all is well, or SS$_ABORT if not.
C
C ......................................................................
C
	IMPLICIT NONE
C
C Parameters:
	INTEGER		SS$_ABORT
	EXTERNAL	SS$_ABORT	! error
	INTEGER		SS$_NORMAL
	EXTERNAL	SS$_NORMAL	! normal successful completion
	INTEGER		X
	PARAMETER	(X=1)
	INTEGER		Y
	PARAMETER	(Y=2)
C
	INCLUDE		'LSL$CMNIPOLYGON:IPOLYGONMSG.PAR'
	INCLUDE		'LSL$CMNPOLYGONS:PARAMS.PAR'
C
C Common:
	INCLUDE		'LSL$CMNIPOLYGON:COMMAND.CMN'
	INCLUDE		'LSL$CMNPOLYGONS:TABLES.CMN'
	INCLUDE		'LSL$CMNIFF:MD2DES.CMN'
C
C Argument:
	REAL		COORD(2)	! see point position
	INTEGER		ISQ		! internal sequence number
	INTEGER		FSN		! feature serial number
C
C W/s
	INTEGER*2	MESLEN		! length of message
	CHARACTER*256	MESTXT		! message
C
C Function
	INTEGER*2	EXPAND
C
C ......................................................................
C
	CHK_SEED_RANGE=%LOC(SS$_NORMAL)
C
	IF (COORD(X).LT.IN_FIL_RANGE(1)) CHK_SEED_RANGE=%LOC(SS$_ABORT)
	IF (COORD(X).GT.IN_FIL_RANGE(2)) CHK_SEED_RANGE=%LOC(SS$_ABORT)
	IF (COORD(Y).LT.IN_FIL_RANGE(3)) CHK_SEED_RANGE=%LOC(SS$_ABORT)
	IF (COORD(Y).GT.IN_FIL_RANGE(4)) CHK_SEED_RANGE=%LOC(SS$_ABORT)
C
	IF (.NOT.CHK_SEED_RANGE) THEN
C
	   IF (HAD_ABS) THEN
	      MESLEN=EXPAND(
     &		'%WSSeed point coordinate '//
     &		'(%F,%F) out of range in feature with FSN %N (%N)',
     &		MESTXT,COORD(X)+MD2LOC(X),COORD(Y)+MD2LOC(Y),FSN,ISQ)
	   ELSE
	      MESLEN=EXPAND(
     &		'%WSSeed point coordinate '//
     &		'(%F,%F) out of range in feature with FSN %N (%N)',
     &		MESTXT,COORD(X),COORD(Y)		    ,FSN,ISQ)
	   ENDIF
C
	   IF (HAD_LIS) THEN
	      CALL FLWSTR(MESTXT,MESLEN)
	   ELSE
	      CALL TTWSTR(MESTXT,MESLEN)
	   ENDIF
	ENDIF
C
	RETURN
	END
C
