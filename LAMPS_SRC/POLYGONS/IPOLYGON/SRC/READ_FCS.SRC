	LOGICAL FUNCTION READ_FCS(STRING,LENGTH)
C
***	MODULE	READ_FCS
***	IDENT	29NO89
C
C	Copyright (C), Laser-Scan Laboratories Ltd., Cambridge, England
C
C	Created						SGH  29-Nov-1989
C
C Function read a selection of feature codes from the given string
C
C .......................................................................
C
	IMPLICIT NONE
C
C Arguments:
	CHARACTER*(*)	STRING
	INTEGER*2	LENGTH
C
C Parameters:
	INTEGER		SS$_NORMAL
	EXTERNAL	SS$_NORMAL	! normal successful completion
	INCLUDE 	'LSL$CMNPOLYGONS:PARAMS.PAR'
	INCLUDE 	'LSL$CMNIPOLYGON:IPOLYGONMSG.PAR'
C
C Common:
	INCLUDE		'LSL$CMNLSL:TXTC.CMN'
	INCLUDE		'LSL$CMNPOLYGONS:COVERAGES.CMN'
	INCLUDE		'LSL$CMNIPOLYGON:COMMAND.CMN'
C
C W/s:
	INTEGER*2	I,J
	INTEGER*4	LI
	BYTE		CH
C
C Functions:
	LOGICAL*4	RDINT		! reads an integer
	LOGICAL*4	RDCHS		! reads a character
C
C ......................................................................
C
	READ_FCS = %LOC(SS$_NORMAL)
C
	IF(LENGTH.EQ.0)THEN
C	   READ_FCS=IPOL__BADFCSTR
	   READ_FCS=IPOL__BADPAIR
	   GOTO 90
	ENDIF
C put the string into TXTBUF
	TXTPTR=LENGTH
	CALL COPY_STRING(STRING,TXTDSC)
	CALL BSLN
C
C read the next character - it should be - or a digit
10	IF(RDCHS(CH))THEN		! unexpected end of line
C	   READ_FCS=IPOL__BADFCSTR
	   READ_FCS=IPOL__BADPAIR
	   GOTO 90
	ENDIF
	IF(CH.EQ.'-')THEN
	   IF (RDINT(I)) THEN
C	      READ_FCS=IPOL__BADFCSTR
	      READ_FCS=IPOL__BADPAIR
	      GOTO 90
	   ENDIF
	   DO 20 LI=1,I
	   CALL LIB$INSV(1,LI,1,FCMAP)
20	   CONTINUE
C now read a comma, or end of line
	   IF(RDCHS(CH))GOTO 90		! legitimate end of line
	   IF(CH.NE.',')THEN
C	      READ_FCS=IPOL__BADFCSTR
	      READ_FCS=IPOL__BADPAIR
	      GOTO 90
	   ENDIF
	   GOTO 10			! loop back for another range
	ELSE IF(CH.GE.'0'.AND.CH.LE.'9')THEN
	   CALL BSCH
	   IF (RDINT(I)) THEN		! unlikely, but never mind
C	      READ_FCS=IPOL__BADFCSTR
	      READ_FCS=IPOL__BADPAIR
	      GOTO 90
	   ENDIF
	   IF(RDCHS(CH))THEN	! end of line, so just a single integer
	      LI=I
	      CALL LIB$INSV(1,LI,1,FCMAP)
	      GOTO 90		! legitimate end of line
	   ENDIF
	   IF(CH.EQ.',')THEN	! single integer
	      LI=I
	      CALL LIB$INSV(1,LI,1,FCMAP)
	      GOTO 10		! loop back
	   ELSE IF(CH.EQ.'-')THEN
	      IF (RDINT(J)) THEN
C	         READ_FCS=IPOL__BADFCSTR
	         READ_FCS=IPOL__BADPAIR
	         GOTO 90
	      ENDIF
	      DO 30 LI=I,J
	      CALL LIB$INSV(1,LI,1,FCMAP)
30	      CONTINUE
C now read a comma, or end of line
	      IF(RDCHS(CH))GOTO 90		! legitimate end of line
	      IF(CH.NE.',')THEN
C	         READ_FCS=IPOL__BADFCSTR
	         READ_FCS=IPOL__BADPAIR
	         GOTO 90
	      ENDIF
	      GOTO 10			! loop back for another range
	   ELSE
C	      READ_FCS=IPOL__BADFCSTR
	      READ_FCS=IPOL__BADPAIR
	      GOTO 90
	   ENDIF
	ELSE
C	   READ_FCS=IPOL__BADFCSTR
	   READ_FCS=IPOL__BADPAIR
	   GOTO 90
	ENDIF
C
C
90	RETURN
	END
