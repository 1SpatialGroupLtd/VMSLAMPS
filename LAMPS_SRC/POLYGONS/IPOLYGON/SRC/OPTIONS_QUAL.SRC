	INTEGER FUNCTION OPTIONS_QUAL()
C
***	MODULE	OPTIONS_QUAL
**	IDENT	17AU88
C
C	Copyright (C), Laser-Scan Laboratories Ltd., Cambridge, England
C
CMOD	Much functionality has been placed into SEGMENTS_QUAL and
C	POLYGONS_QUAL					AC  23-May-1988
C	Created						TJH 27-Aug-1987
C
C Function to decode IPOLYGONS /OPTIONS='keywords' qualifier:
C
C /OPTIONS=([[NO]AREA]
C	    [,ANTICLOCKWISE]
C	    [,CLOCKWISE]
C           [,[NO]LIST]
C	    [,IDENT_TEXT:'text-string'])
C
C All results are returned via /COMMAND/ 
C
C Function returns SS$_NORMAL if all is well or one of a variety of
C CLI errors on failure.
C
	IMPLICIT NONE
C
C Parameters:
	INTEGER		SS$_NORMAL
	EXTERNAL	SS$_NORMAL
	INCLUDE 	'LSL$CMNIPOLYGON:IPOLYGONMSG.PAR'
	INCLUDE 	'LSL$CMNPOLYGONS:PARAMS.PAR'
C
C Common:
	INCLUDE 	'LSL$CMNIPOLYGON:COMMAND.CMN'
	INCLUDE 	'LSL$CMNLSL:CLD.CMN'
	INCLUDE 	'LSL$CMNLSL:FILENAME.CMN'
C
C W/s
	LOGICAL		LOCAL      	! tmp var
	LOGICAL		LOCNEG     	! tmp var
	LOGICAL		HAD_QUAL	! is specified qualifier present
	LOGICAL		HAD_KEY		! is specified keyword present
C
C Functions:
	INTEGER		DCL_QUAL	! looks for specified qualifier
	INTEGER		DCL_STR		! gets qualifier args. (string)
C
C ......................................................................
C
	OPTIONS_QUAL=%LOC(SS$_NORMAL)
C
C Default options
	HAD_NEST = .TRUE.	! nesting taken into account
	HAD_AREA = .FALSE.	! areas are not to be calculated
	OPT_KEEP = .TRUE.	! unlabelled polygons are kept
	CLOCK = .FALSE.		! polygons formed in anticlockwise dirn
	ID_TXT='Polygon '	! identifiers of the form 'Polygon xxx'
	ID_LEN=8		!
C
C were and options specified?
	OPTIONS_QUAL=DCL_QUAL('OPTIONS',HAD_QUAL,LOCAL,LOCNEG,.TRUE.)
	IF (.NOT.OPTIONS_QUAL) GOTO 10
	IF (.NOT.HAD_QUAL) GOTO 10
C
C default NOAREA - are areas to be calculated?
	OPTIONS_QUAL=DCL_QUAL('OPTIONS.AREA',HAD_KEY,LOCAL,LOCNEG,.TRUE.)
	IF (.NOT.OPTIONS_QUAL) GOTO 10
	IF (HAD_KEY) HAD_AREA = .TRUE.
C
C default ANTICLOCKWISE - should polygons be formed clockwise?
	OPTIONS_QUAL=DCL_QUAL('OPTIONS.CLOCKWISE',HAD_KEY,LOCAL,
     &								LOCNEG,.TRUE.)
	IF (.NOT.OPTIONS_QUAL) GOTO 10
	IF (HAD_KEY) CLOCK = .TRUE.
C
	OPTIONS_QUAL=DCL_QUAL('OPTIONS.ANTICLOCKWISE',HAD_KEY,LOCAL,
     &								LOCNEG,.TRUE.)
	IF (.NOT.OPTIONS_QUAL) GOTO 10
	IF (HAD_KEY) CLOCK = .FALSE.
C
C default NEST - should nested polygons be ignored?
	OPTIONS_QUAL=DCL_QUAL('OPTIONS.NEST',HAD_KEY,LOCAL,LOCNEG,.TRUE.)	
	IF (.NOT.OPTIONS_QUAL) GOTO 10
	IF (HAD_KEY) HAD_NEST = .TRUE.
C
	OPTIONS_QUAL=DCL_QUAL('OPTIONS.NONEST',HAD_KEY,LOCAL,LOCNEG,.TRUE.)	
	IF (.NOT.OPTIONS_QUAL) GOTO 10
	IF (HAD_KEY) HAD_NEST = .FALSE.
C
C default /OPTIONS=UNDEFINED:KEEP - should unlabeled polygons be lost?
	OPTIONS_QUAL=DCL_QUAL('OPTIONS.UNDEFINED.KEEP',HAD_KEY,LOCAL,
     &								LOCNEG,.TRUE.)
	IF (.NOT.OPTIONS_QUAL) GOTO 10
	IF (HAD_KEY) OPT_KEEP = .TRUE.
C
	OPTIONS_QUAL=DCL_QUAL('OPTIONS.UNDEFINED.DELETE',HAD_KEY,LOCAL,
     &								LOCNEG,.TRUE.)
	IF (.NOT.OPTIONS_QUAL) GOTO 10
	IF (HAD_KEY) OPT_KEEP = .FALSE.
C
C default /OPTIONS=IDENT_TEXT:"Polygon " - use a different identifier string
	OPTIONS_QUAL=DCL_QUAL('OPTIONS.IDENT_TEXT',HAD_KEY,LOCAL,
     &								LOCNEG,.TRUE.)
	IF (.NOT.OPTIONS_QUAL) GOTO 10
C
	IF (HAD_KEY) THEN
		OPTIONS_QUAL=DCL_STR('OPTIONS.IDENT_TEXT',.TRUE.)
		IF (.NOT.OPTIONS_QUAL) GOTO 10
C
C 		remove quotes if used
		IF (CARRAY(1)(1:1).EQ.'"') THEN
			ID_LEN=STR_LEN(1)-2
		        ID_TXT=CARRAY(1)(2:STR_LEN(1)-1)
		ELSE
C
C 		otherwise use it all
			ID_LEN=STR_LEN(1)
			ID_TXT=CARRAY(1)(:STR_LEN(1))
		ENDIF
	ENDIF
C
C finished...
10	RETURN
	END

