	LOGICAL*4 FUNCTION CMDLIN()
C
***	MODULE	CMDLIN
***	IDENT	31OC91
C
C	Copyright Laser-Scan Ltd., Cambridge, England
C
CMOD1056Add /ABSOLUTE to output abs. coords to LITES2 guidance files
C	if requested					JB  28-Oct-1991
C
CMOD	Something of a rewrite - got rid of a lot of nesting
C							AC   2-Jun-1988
CMOD 	Completely reorganised for future devt. and
C	qualifiers added for polygon labelling from
C	left right AC coded segments			TJH 27-Aug-1987
CMOD 2/470
C	Default seed point layer changed from 1 to -1	TJH 26-May-1987
C
C	Author						TJH 11-Feb-1987
C
C Get, parse and decode IPOLYGON command line. All results returned via
C /COMMAND.CMN/ or /PARAMS.PAR/ common blocks. All error message output
C is done within CMDLIN().
C
C All files which need to be opened are opened at this stage via
C calls to OPEN_INPUT(), OPEN_OUTPUT() and CHECK_IFF_OUTPUT(). When
C control is returned from CMDLIN all the groundwork will have been
C done and the input file(s) are ready for processing. 
C
C Function returns SS$_NORMAL if all is well or one of a variety
C of LSLLIB and CLI errors if things go wrong.
C
C ......................................................................
C
	IMPLICIT NONE
C
C Parameters:
	INCLUDE 	'LSL$CMNPOLYGONS:PARAMS.PAR'
	INCLUDE 	'LSL$CMNIPOLYGON:IPOLYGONMSG.PAR'
	INTEGER		SS$_NORMAL
	EXTERNAL	SS$_NORMAL	! normal successful completion
C
C Common:
	INCLUDE		'LSL$CMNIPOLYGON:COMMAND.CMN'
	INCLUDE		'LSL$CMNPOLYGONS:FILE.CMN'
	INCLUDE 	'LSL$CMNLSL:CLD.CMN'
	INCLUDE 	'LSL$CMNLSL:FILENAME.CMN'
C
C Command Language Definitions
	EXTERNAL        IPOLYGON_CLD
C
C W/s:
	INTEGER		I		! loop variable
	LOGICAL		ABSENT		! is file-spec absent?
	LOGICAL		HAD_LISFIL	! file-spec given for /LIST?
	LOGICAL		LOCAL      	! is qualifier local?
	LOGICAL		LOCNEG     	! qualifier locally negated?
	CHARACTER*1024	USRSTR		! complete parsed command line
	INTEGER		USRLEN		! its length
C
C Functions:
	INTEGER		DCL_CML		! gets whole command line
	INTEGER		DCL_FILE	! reads and parses file title 
C					! from DCL command line
	INTEGER    	DCL_STARTUP	! gets parsed command line
	INTEGER		EXPFLN		! gets file-spec from /FILENAME/
	INTEGER		OPEN_INPUT	! opens input file(s)
	INTEGER		OPEN_OUTPUT	! opens output file(s)
	INTEGER		OP_SPECS	! makes output file specs
	INTEGER		CHECK_IFF_OUT	! checks ability to open IFF output 
C					! files	
C Qualifier decoding functions:
	INTEGER		ASCII_QUAL	! decodes /ASCII
	INTEGER		LIST_QUAL	! decodes /LIST
	INTEGER		LITES2_QUAL	! decodes /LITES2
	INTEGER		LOG_QUAL	! decodes /LOG
	INTEGER		ABS_QUAL	! decodes /ABSOLUTE
	INTEGER		PME_QUAL	! decodes /PME
	INTEGER		PRINTER_QUAL	! decodes /PRINTER
	INTEGER		ONEARM_QUAL	! decodes /ONEARM=('keywords')
	INTEGER		OPTIONS_QUAL	! decodes /OPTIONS=('keywords')
	INTEGER		SEED_QUAL	! decodes /SEED=('keywords')
	INTEGER		LRCODE_QUAL	! decodes /LRCODE=('keywords')
	INTEGER		PROPAGATE_QUAL	! decodes /PROPAGATE=('keywords')
	INTEGER		SEGMENTS_QUAL	! decodes /SEGMENTS=('keywords')
	INTEGER		POLYGONS_QUAL	! decodes /POLYGONS=('keywords')
	INTEGER		PIP_QUAL	! decodes /PIP=('keywords')
C
C ......................................................................
C Get command line for verb IPOLYGON. DCL_STARTUP will return set to
C SS$_NORMAL if all well.
C
	CMDLIN=DCL_STARTUP('IPOLYGON',.FALSE.,IPOLYGON_CLD,.TRUE.)
C
C Check for /PME   -  performance monitor
	IF (CMDLIN) CMDLIN=PME_QUAL()
C
C Check for /LOG
	IF (CMDLIN) CMDLIN=LOG_QUAL()
C
C Get and open the input segments file, as this is likely to fail we
C will do this first 
C
	IF (CMDLIN) THEN
	   CMDLIN=DCL_FILE('P1','LSL$IF:IFF.IFJ',ABSENT,.FALSE.,.TRUE.)
	   IF (CMDLIN) THEN
	      CMDLIN = EXPFLN(IN_FILE,IN_LEN)
	      CALL STR$UPCASE(IN_FILE,IN_FILE) ! uppercase string
C
C Another likely failure will be our attempt to open the optional seed
C point IFF file for input. This is selected with the qualifier
C /SEED=(FILE:file-spec). Decode this qualifier...
C
	      IF (CMDLIN) CMDLIN=SEED_QUAL()
	      IF (CMDLIN) CMDLIN=LRCODE_QUAL()
	      IF (CMDLIN) CMDLIN=PROPAGATE_QUAL()
	   ENDIF
	ENDIF
C
C ......................................................................
C Check for /OPTIONS=('keywords')
	IF (CMDLIN) CMDLIN=OPTIONS_QUAL()
C
C ......................................................................
C Check for /ASCII=('keywords')
	IF (CMDLIN) CMDLIN=ASCII_QUAL()
C
C ......................................................................
C Check for /LIST=file-spec and then check for /PRINTER
	IF (CMDLIN) CMDLIN=LIST_QUAL(HAD_LISFIL)
	IF (CMDLIN) CMDLIN=PRINTER_QUAL(HAD_LISFIL)
C
C ......................................................................
C Check for /LITES2=file-spec
	IF (CMDLIN) CMDLIN=LITES2_QUAL()
C
C Check for /ABSOLUTE - used in MES_OUT/LITES_ERR SERVICE routines 
C only if HAD_LITES set, so no warning necessary if /LITES not given
C
	IF (CMDLIN) CMDLIN=ABS_QUAL()
C
C...................................................................
C Check for /ONEARM=(keywords)
	IF (CMDLIN) CMDLIN=ONEARM_QUAL()
C
C ......................................................................
C Check all the output options
	IF (CMDLIN) CMDLIN=SEGMENTS_QUAL()
	IF (CMDLIN) CMDLIN=POLYGONS_QUAL()
	IF (CMDLIN) CMDLIN=PIP_QUAL()
C
C ......................................................................
C Get the whole command line and then open files:
	IF (CMDLIN) THEN
	   CMDLIN=DCL_CML(USRSTR,USRLEN,.TRUE.)
	   IF (CMDLIN) THEN
	      USRSTR='$ '//USRSTR(:USRLEN)
	      USRLEN=USRLEN+2
	      IF (CMDLIN) CMDLIN=OPEN_INPUT()
	      IF (CMDLIN) CMDLIN=CHECK_IFF_OUT()
	      IF (CMDLIN) CMDLIN=OPEN_OUTPUT(USRSTR,USRLEN)
	   ENDIF
	ENDIF
C
C ......................................................................
C
	IF (CMDLIN) CMDLIN=%LOC(SS$_NORMAL)
C
	RETURN
	END
C
