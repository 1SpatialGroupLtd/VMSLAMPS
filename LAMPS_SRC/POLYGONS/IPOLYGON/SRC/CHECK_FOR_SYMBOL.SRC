	INTEGER FUNCTION CHECK_FOR_SYMBOL(SYMBOL,APOINT,FC)
C
***	MODULE	CHECK_FOR_SYMBOL
***	IDENT	06MR90
C
C	Copyright Laser-Scan Laboratories Ltd., Cambridge, England
C
CMOD	Max pts in feature now longword			TJH 06-Mar-1990
CMOD	Now caters for single point ST in multi-ST ftr. TJH 31-Mar-1989
C 	Author						AC  20-Jul-1988
C
C 	Routine to test if the feature currently found on the input IFF file
C	is a symbol or not - determined by the number of points in its ST entry.
C	A point on the feature is also returned - either the symbol location
C	itself or the midpoint of the first vector in the ST entry.
C
C ...........................................................................
C
	IMPLICIT NONE
C
C Parameters:
	INCLUDE 	'LSL$CMNPOLYGONS:PARAMS.PAR'
	INCLUDE 	'LSL$CMNIPOLYGON:IPOLYGONMSG.PAR'
	INTEGER		SS$_NORMAL
	EXTERNAL	SS$_NORMAL	! normal successful completion
	INTEGER		SS$_ABORT
	EXTERNAL	SS$_ABORT	! failure
C
C Common:
	INCLUDE		'LSL$CMNPOLYGONS:FILE.CMN'
	INCLUDE		'LSL$CMNIFF:IFFHAN.CMN'
C
C Arguments:
	LOGICAL		SYMBOL		! is this a symbol ?
	REAL		APOINT(2)	! a point on the segment/symbol
	INTEGER*2	FC		! the feature code
C
C W/s:
	INTEGER*2 	NPTS		! number of coord pairs in ST
	INTEGER		TOTPTS		!   "     "   "     "    " ftr
	INTEGER*2	IENDS		! line state (coded bitwise)
	REAL		VECTOR(2,2)	! first 2 pts in ST
	INTEGER*4	TMP_MARK	! mark IFF file so can undo damage
	INTEGER*2	IECODE,IELEN	! IFF entry code and length
C
C .........................................................................
C
	CHECK_FOR_SYMBOL = %LOC(SS$_NORMAL)
C
C Remember where we were in the input IFF file
	CALL IFFSEL(INLUN)
	TMP_MARK = LPOSH
	TOTPTS=0
C
C Read through entries from current position looking for the ST entry 
10	CALL IFFNXT(IECODE,IELEN)
C
C Check we haven't unexpectedly reached the end of the file
	IF (IELEN.EQ.-1) THEN
	   CHECK_FOR_SYMBOL=IPOL__UNEXPEOF
	   CALL LSL_PUTMSG(CHECK_FOR_SYMBOL,IN_FILE(:IN_LEN))
	   CHECK_FOR_SYMBOL=%LOC(SS$_ABORT)
	   GOTO 20
	ENDIF
C
C Find out how many coordinates are in the ST
	IF (IECODE.EQ.'ST') THEN
	   CALL EIHRS(NPTS,IENDS)
C
C single point - use it
	   IF (TOTPTS.EQ.0) THEN
	      IF (NPTS.EQ.1) THEN
	         CALL EIHRR(APOINT(1),2,1)
	      ELSE
C take the mid-point of the first vector in the segment...
	         CALL EIHRR(VECTOR(1,1),4,1)
	         APOINT(1)=(VECTOR(1,1)+VECTOR(1,2))*0.5
	         APOINT(2)=(VECTOR(2,1)+VECTOR(2,2))*0.5
	      ENDIF
	   ENDIF
	   TOTPTS=TOTPTS+NPTS
	ELSE IF(IECODE.EQ.'FS')THEN
	   CALL EIHR(FC,1,1)
	ENDIF
C
C Loop back until the EF entry is found...
	IF (IECODE.NE.'EF') GOTO 10
C
C if feature has a single coordinate then...	
	IF (TOTPTS.EQ.1) THEN
C 
C note that this must be a symbol feature, otherwise...
	   SYMBOL = .TRUE.
	ELSE
C
C note we are not dealing with a symbol.
	   SYMBOL = .FALSE.
	ENDIF
C
C move back to where we were in the file when started
20	CALL IFFSEL(INLUN)
	CALL IFFPKE(IECODE,IELEN,TMP_MARK)
C
C finished....
	RETURN
	END
