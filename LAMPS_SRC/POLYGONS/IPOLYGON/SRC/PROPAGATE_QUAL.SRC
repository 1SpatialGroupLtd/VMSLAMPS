C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1990-03-26 13:25:42.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	INTEGER FUNCTION PROPAGATE_QUAL()
C
***	MODULE	PROPAGATE_QUAL
***	IDENT	28NO89
C
C	Copyright (C), Laser-Scan Laboratories Ltd., Cambridge, England
C
C	Created						SGH  23-Nov-1989
C
C Function to decode IPOLYGONS /PROPAGATE='keywords' qualifier
C
C All results are returned via /COMMAND/ 
C
C Function returns SS$_NORMAL if all is well or one of a variety of
C CLI errors on failure.
C
C .....................................................................
C

	IMPLICIT NONE
C
C Parameters:
	INTEGER		SS$_NORMAL
	EXTERNAL	SS$_NORMAL
	INCLUDE 	'LSL$CMNIPOLYGON:IPOLYGONMSG.PAR'
	INCLUDE 	'LSL$CMNPOLYGONS:PARAMS.PAR'
C
C Common:
	INCLUDE 	'LSL$CMNPOLYGONS:FILE.CMN'
	INCLUDE 	'LSL$CMNPOLYGONS:COVERAGES.CMN'
	INCLUDE 	'LSL$CMNIPOLYGON:COMMAND.CMN'
	INCLUDE 	'LSL$CMNLSL:CLD.CMN'
	INCLUDE 	'LSL$CMNLSL:FILENAME.CMN'
C
C W/s:
	LOGICAL		ABSENT		! is file-spec absent?
	LOGICAL		LOCAL      	! tmp var
	LOGICAL		LOCNEG     	! tmp var
	LOGICAL		HAD_QUAL	! Had /PROPAGATE qualifier
	LOGICAL		HAD_KEY		! Had keyword from
C					! {LEFT_AC,RIGHT_AC}
C Functions:
	INTEGER		DCL_QUAL	! looks for specified qualifier
	INTEGER		DCL_FILE	! gets qualifier args. (file)
	INTEGER		DCL_INT		! gets qualifier args. (integer)
	INTEGER		DCL_STR		! gets qualifier args. (string)
	INTEGER		EXPFLN		! gets file-spec from /FILENAME/
	INTEGER		STR$COMPARE	! compare strings
	INTEGER		READ_COV_FILE	! read coverage ACs from ASCII file
C
C ......................................................................
C
	PROPAGATE_QUAL=%LOC(SS$_NORMAL)
C
C By default propagation is not to be used
	HAD_PROP = .FALSE.
C
C is the /PROPAGATE qualifier present?
	PROPAGATE_QUAL=DCL_QUAL('PROPAGATE',HAD_QUAL,LOCAL,LOCNEG,.TRUE.)
	IF (.NOT.PROPAGATE_QUAL) GOTO 90
	IF (.NOT.HAD_QUAL) GOTO 90
C
C Note that L/R coding is to be used
	HAD_PROP = .TRUE.
C
C Setup defaults
	NUM_COVER=1
	HAD_CVR_FILE=.FALSE.
	NUM_TXT(1)=1
	IN_CVR_LEN(1,1)=0
	OUT_CVR_LEN(1,1)=0
	HAD_PROP_FULL=.FALSE.
	HAD_CONCAT=.FALSE.
	LFT_CVR_CODE(1) = 4	! AC giving input left code
	RGT_CVR_CODE(1) = 5	! AC giving input right code
	LFT_CVR_AC(1) = 4	! AC giving output left code
	RGT_CVR_AC(1) = 5	! AC giving output right code
	CTN_CVR_AC(1) = 12	! AC giving output contained segment code
	PIP_CVR_AC(1) = 82	! AC giving output seed point code
	POL_CVR_AC(1) = 82	! AC giving output polygon code
C
C default PARTIAL - has FULL been given
	PROPAGATE_QUAL=DCL_QUAL('PROPAGATE.FULL',HAD_KEY,LOCAL,LOCNEG,.TRUE.)
	IF (.NOT.PROPAGATE_QUAL) GOTO 90
	IF (HAD_KEY) HAD_PROP_FULL = .TRUE.
C
C default NOCONCATENATE - has CONCATENATE been given
	PROPAGATE_QUAL=DCL_QUAL('PROPAGATE.CONCATENATE',
     &		HAD_KEY,LOCAL,LOCNEG,.TRUE.)
	IF (.NOT.PROPAGATE_QUAL) GOTO 90
	IF (HAD_KEY) HAD_CONCAT = .TRUE.
C
C Has the user specified a different left code?
	PROPAGATE_QUAL=
     &		DCL_QUAL('PROPAGATE.LEFT_AC',HAD_KEY,LOCAL,LOCNEG,.TRUE.)
	IF (.NOT.PROPAGATE_QUAL) GOTO 90
C
C If so then get it...
	IF (HAD_KEY) THEN
		PROPAGATE_QUAL=DCL_INT('PROPAGATE.LEFT_AC',.TRUE.)
		IF (.NOT.PROPAGATE_QUAL) GOTO 90
C
C and if it lies in the correct range ...
		IF (IARRAY(1).LT.0.OR.IARRAY(1).GT.32767) THEN
			PROPAGATE_QUAL=IPOL__INVALAC
			CALL LSL_PUTMSG(PROPAGATE_QUAL,IARRAY(1))
			GOTO 90
		ENDIF
C
C then use it
		LFT_CVR_CODE(1)=IARRAY(1)
	ENDIF
C
C Has the user specified a different right code?
	PROPAGATE_QUAL=
     &		DCL_QUAL('PROPAGATE.RIGHT_AC',HAD_KEY,LOCAL,LOCNEG,.TRUE.)
	IF (.NOT.PROPAGATE_QUAL) GOTO 90
C
C If so then get it...
	IF (HAD_KEY) THEN
		PROPAGATE_QUAL=DCL_INT('PROPAGATE.RIGHT_AC',.TRUE.)
		IF (.NOT.PROPAGATE_QUAL) GOTO 90
C
C and if it lies in the correct range ...
		IF (IARRAY(1).LT.0.OR.IARRAY(1).GT.32767) THEN
			PROPAGATE_QUAL=IPOL__INVALAC
			CALL LSL_PUTMSG(PROPAGATE_QUAL,IARRAY(1))
			GOTO 90
		ENDIF
C
C then use it
		RGT_CVR_CODE(1)=IARRAY(1)
	ENDIF
C
C
C Has the user specified a coverage file?
	PROPAGATE_QUAL=DCL_QUAL
     &		('PROPAGATE.COVERAGE_FILE',HAD_KEY,LOCAL,LOCNEG,.TRUE.) 
	IF (.NOT.PROPAGATE_QUAL) GOTO 90
	HAD_CVR_FILE= HAD_KEY
C
C If so get the filename parsed against LSL$IF:IFF.FCP
	IF (HAD_CVR_FILE) THEN
		PROPAGATE_QUAL=DCL_FILE
     &			('PROPAGATE.COVERAGE_FILE','LSL$IF:IFF.COV',
     &			ABSENT,.FALSE.,.TRUE.)
	        IF (.NOT.PROPAGATE_QUAL) GOTO 90
	        PROPAGATE_QUAL=EXPFLN(COV_FILE,COV_LEN)
	        IF (.NOT.PROPAGATE_QUAL) GOTO 90
C
C and read its contents into an array
		CALL STR$UPCASE(COV_FILE,COV_FILE)
		PROPAGATE_QUAL=READ_COV_FILE()
		IF (.NOT.PROPAGATE_QUAL) GOTO 90
	ENDIF
C
C finished
90	RETURN
	END
