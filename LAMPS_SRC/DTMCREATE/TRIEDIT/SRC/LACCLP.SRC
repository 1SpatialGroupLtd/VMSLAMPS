C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1989-01-26 12:51:10.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE LACCLP(IX,IY,JFIRST)
C
***	MODULE	LACCLP
***	IDENT	07DE87
C
C Copyright Laser-Scan Laboratories Limited, Cambridge, England.
C
CMOD	Converted for TRIEDIT			TJH	07-Dec-1987
CMOD	Tidied					 DM	06-Jun-1984
C	Standardised				TJH 	25-May-1984
C
C LACCLP clips output to the window. IX,IY is the input contour location
C in integer scaled coordinates, and JFIRST is the point condition
C (start of line = +1, middle = 0, end of line = -1).  It attempts to
C clip as speedily as possible by:
C a) checking the value of JFIRST, and
C b) performing point in window checks rather than line checks wherever
C    possible.
C
C The output from the clipper is sent to PLOTQ after screen scaling.
C
	INCLUDE 'LSL$CMNTRIEDIT:CLPBUF.CMN'
C
C ......................................................................
C
C......Check condition code for not being start of line (middle and end
C......are treated the same).
	IF (JFIRST.NE.1) GOTO 10
C
C************************ FIRST POINT ON LINE **************************
C
C......First point on contour is coming in. Clear clipper storage
C......of previous points, and then determine whether this point is
C......inside the window.
	IXCLPO=-1
	CALL LACWIN(IX,IY,INSIDE)
C......If the point is inside the window, go and draw it immediately
	IF(INSIDE.EQ.1)GOTO 50
C......Point IX,IY is outside the window. Save the coordinates of the
C......point, and then return.
	GOTO 40
C
C********************* MIDDLE OR END POINT ON LINE *********************
C
C......Point is a middle or end point on the line. Is it inside the
C......window?
10	CALL LACWIN(IX,IY,INSIDE)
	IF(INSIDE.EQ.0)GOTO 20
C
C......Middle or end point inside.
C
C......Is there a previous outside point waiting? If not output this
C......point as normal.
	IF(IXCLPO.EQ.-1)GOTO 50
C......Point waiting. pick it up, mark the point storage empty (-1),
C......pick up present point, and clip them (only IXA,IYA is outside
C......the area).
	IXA=IXCLPO
	IYA=IYCLPO
	IXCLPO=-1
	CALL CLIP(IXA,IYA,IX,IY,ISIG)
C......Start new line at clipped window margin IXA,IYA, draw to
C......present IX,IY.
C......Convert to screen coordinates
	CALL POSCON(IXX,IYY,IXA,IYA)
	CALL PLOTQ(IXX,IYY,+1)
	GOTO 50
C
C......Middle or end point on line is outside the window.
C
C......Was last point outside as well?
20	IF(IXCLPO.EQ.-1)GOTO 30
C......Yes, it was outside. Need to check whether the line joining
C......last point and this point lies across the window
	IXA=IX
	IYA=IY
	CALL CLIP(IXCLPO,IYCLPO,IXA,IYA,ISIG)
C......Check ISIG to determine whether line crosses window (-1). If
C......it does not, we can simply save the outside window point
C......and return to lace.
	IF(ISIG.NE.-1)GOTO 40
C......Line crosses window. plot line as start and stop, unless the
C......two clipped points are the same. if they are then just skip
	IF(IXCLPO.EQ.IXA.AND.IYCLPO.EQ.IYA)GOTO 40
C......Convert to screen and plot
	CALL POSCON(IXX,IYY,IXCLPO,IYCLPO)
	CALL PLOTQ(IXX,IYY,1)
	CALL POSCON(IXX,IYY,IXA,IYA)
	CALL PLOTQ(IXX,IYY,-1)
C......Save location of present (outside window) point.
	GOTO 40
C......Previous point was inside the map area (either a first point
C......(+1) or a middle one (0)). Clip the line from last inside point
C......to present point. nb: only the IX,IY pair will be altered. Plot
C......a last point on line to the intersected boundary position.
30	IXA=IX
	IYA=IY
	CALL CLIP(IXCLPI,IYCLPI,IXA,IYA,ISIG)
	CALL POSCON(IXX,IYY,IXA,IYA)
	CALL PLOTQ(IXX,IYY,-1)
C......Save the location of the point outside the window (IX,IY).
40	IXCLPO=IX
	IYCLPO=IY
	GOTO 60
C......Point is inside the window. Save its coordinates for use if
C......the next point is outside the window.
50	IXCLPI=IX
	IYCLPI=IY
	CALL POSCON(IXX,IYY,IX,IY)
	CALL PLOTQ(IXX,IYY,JFIRST)
60	RETURN
	END
