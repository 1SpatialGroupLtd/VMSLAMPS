	SUBROUTINE RPLWND(NOLD,NEWN)
C
***	MODULE	RPLWND
***	IDENT	07DE87
C
C Copyright Laser-Scan Laboratories Limited, Cambridge, England.
C
CMOD	Converted for TRIEDIT			TJH	07-Dec-1987
CMOD	Tidied					 DM	20-Jul-1984
CMOD	Messages standardised			 DM	29-May-1984
C	Standardised				TJH 	25-May-1984
C
C Replace a window node (NOLD) with a new one (NEWN)
C if it is in the window list. If NEWN is 0 then do not
C put it in the list (this is effectively a delete node from
C window list command). If NOLD is 0 then no node is removed
C from the list, but NEWN will be added (this effectively performs
C an insert node in window list command).
C
	IMPLICIT NONE
C
C Arguments:
	INTEGER	NOLD	! the node in window to be replaced
	INTEGER	NEWN	! by this one
C
C Parameters:
	INCLUDE 'LSL$CMNTRIEDIT:TRIEDITMSG.PAR'
C
C Common:
	INCLUDE 'LSL$CMNTRIEDIT:DATQ.CMN'
	INCLUDE 'LSL$DTMCREATESYS:MESSAGE.CMN'
C
C W/s
	INTEGER	I,J	! temp vars
	INTEGER	INSIDE	! node inside window flag
C
C ......................................................................
C
C Check whether we are interactive mode (NPINW ge 0), and if there
C are any points in the window anyway (NPINW ge 0)
	IF (NPINW) 60,50,10
C
C Check whether we are doing insertion only
10	IF (NOLD.EQ.0) GOTO 50
C
C Go through the points
	DO 20 I=1,NPINW
	   IF (NOLD.EQ.INWNPT(I)) GOTO 30
20	CONTINUE
C
C Not in window - nothing to do
	GOTO 50
C
C Found in window. remove it by moving the rest down, and reduce
C the point count
30	DO 40 J=I,NPINW
	   INWNPT(J)=INWNPT(J+1)
40	CONTINUE
	NPINW=NPINW-1
C
C Check whether we are not to do an insertion
50	IF (NEWN.EQ.0) GOTO 60
C
C Insert the in-window-point (if actually inside present window)
	CALL LACWIN(MAC(1,NEWN),MAC(2,NEWN),INSIDE)
	IF (INSIDE.EQ.0) GOTO 60
C
C The new node is inside
	IF (NPINW.LT.NMAX) THEN
	   NPINW=NPINW+1
	ELSE
	   CALL LSL_GETMSG(TRIEDIT__TOOMNYNODW,MESSAGE,MESLEN)
	   CALL ALARMS(1,0,MESSAGE(1:MESLEN))
	ENDIF
	INWNPT(NPINW)=NEWN
60	RETURN
	END
