	SUBROUTINE SHOW_WINDOW(XMIN,XMAX,YMIN,YMAX,UNITS,COVERAGE)
C
***	MODULE	SHOW_WINDOW
***	IDENT	19JA89
C
C	Copyright : Laser-Scan Laboratories, Cambridge, England
C
C Created						TJH 19-Jan-1989
C
C Routine to display triangulation window taking account of UNITS
C
	IMPLICIT NONE
C
C Arguments:
	REAL	XMIN,XMAX,YMIN,YMAX	! the window limits
	LOGICAL	UNITS			! current units
	LOGICAL	COVERAGE		! show whole triangulation
C					! coverage if .T.
C
C W/s
	LOGICAL		IS_LATITUDE	! true if latitude
	CHARACTER*1	HEMIS		! hemisphere letter N,S,E and W
	INTEGER*4	DEGS		! degrees result
	INTEGER*4	MINS		! minutes result
	INTEGER*4	SECS		! second result
C
C Common:
	INCLUDE 'LSL$CMNLSL:EXPC.CMN'
C
C ......................................................................
C
	IF (COVERAGE) THEN
	   CALL EXPAND('Window units are ')
	   IF (UNITS.EQ.2) THEN
	      CALL APPEND('metres')
	   ELSEIF (UNITS.EQ.3) THEN
	      CALL APPEND('seconds of arc')
	   ELSEIF (UNITS.EQ.4) THEN
	      CALL APPEND('latlong (degrees, minutes and seconds)')
	   ELSEIF (UNITS.EQ.5) THEN
	      CALL APPEND('projection units')
	   ENDIF
	   CALL OUTOPT(EXPDSC)
	ENDIF
C
C Show coverage or window
	IF (UNITS.EQ.2.OR.UNITS.EQ.5) THEN	! metres or projection
	   CALL OUTOPT(' ')
	   CALL EXPAND('Triangulation ')
	   IF (COVERAGE) THEN
	      CALL APPEND('coverage')
	   ELSE
	      CALL APPEND('window  ')
	   ENDIF
	   CALL APPEND(' SW: %F10.2 %F10.2    '//
     &	      'NE: %F10.2 %F10.2',XMIN,YMIN,XMAX,YMAX)
	   CALL OUTOPT(EXPDSC)
	ELSEIF (UNITS.EQ.3) THEN		! seconds of arc
	   CALL OUTOPT(' ')
	   CALL EXPAND('Triangulation ')
	   IF (COVERAGE) THEN
	      CALL APPEND('coverage')
	   ELSE
	      CALL APPEND('window  ')
	   ENDIF
	   CALL APPEND(' SW: %F10.2 %F10.2    NE: %F10.2 %F10.2',
     &	      XMIN/10.0,YMIN/10.0,XMAX/10.0,YMAX/10.0)
	   CALL OUTOPT(EXPDSC)
	ELSEIF (UNITS.EQ.4) THEN		! latlong 
	   IS_LATITUDE=.TRUE.
	   CALL CVTANG( YMIN, IS_LATITUDE, HEMIS, DEGS, MINS, SECS )
	   CALL OUTOPT(' ')
	   CALL EXPAND('Triangulation ')
	   IF (COVERAGE) THEN
	      CALL APPEND('coverage')
	   ELSE
	      CALL APPEND('window  ')
	   ENDIF
	   CALL APPEND(
     &		' SW: %P %I3 %P0%I2 %P0%I2%S',DEGS,MINS,SECS,HEMIS)
	   IS_LATITUDE=.FALSE.
	   CALL CVTANG( XMIN, IS_LATITUDE, HEMIS, DEGS, MINS, SECS )
	   CALL APPEND('  %P %I3 %P0%I2 %P0%I2%S'
     &				,DEGS,MINS,SECS,HEMIS)
	   IS_LATITUDE=.TRUE.
	   CALL CVTANG( YMAX, IS_LATITUDE, HEMIS, DEGS, MINS, SECS )
	   CALL APPEND('   NE: %P %I3 %P0%I2 %P0%I2%S'
     &				,DEGS,MINS,SECS,HEMIS)
	   IS_LATITUDE=.FALSE.
	   CALL CVTANG( XMAX, IS_LATITUDE, HEMIS, DEGS, MINS, SECS )
	   CALL APPEND('  %P %I3 %P0%I2 %P0%I2%S'
     &				,DEGS,MINS,SECS,HEMIS)
	   CALL OUTOPT(EXPDSC)
	   CALL EXPAND(
     &		'                      (SW: %F10.2  '//
     &		'%F10.2   NE:  %F10.2  %F10.2)',XMIN,YMIN,XMAX,YMAX)
	   CALL OUTOPT(EXPDSC)
	ENDIF
10	RETURN
	END
