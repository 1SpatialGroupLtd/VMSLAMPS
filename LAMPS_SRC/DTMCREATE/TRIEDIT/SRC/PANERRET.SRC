	OPTIONS /I4
	INTEGER FUNCTION PAN$ERRET(SIGARGS,MECHARGS)
C
***	MODULE PAN$ERRET
***	IDENT  07DE87
C
C	Copyright Laser-Scan Laboratories Ltd., Cambridge, England
C
CMOD	Converted for TRIEDIT			     TJH  07-Dec-1987
CMOD	Preserve SIGARGS for later use		      DM  05-Dec-1984
CMOD    Stolen and renamed for TRIEDIT               TJH  04-Dec-1984
CMOD	Created for FLF as "FLF$SIG_TO_RET_NOARITH"  AJW  03-May-1983
C
C To be declared as an exception handler.
C Check against integer and floating overflow and divide by zero,
C and floating underflow. If the error is one of these, unwind to the
C subroutine that declared us, pretending that the subroutine that was
C called has returned with an error.
C For DECs explanation see the Run Time Library Users Guide.
C
	IMPLICIT NONE
C
C parameters:
	INCLUDE '($MTHDEF)'
	INCLUDE '($SSDEF)'
C
C arguments:
	INTEGER SIGARGS(*),MECHARGS(*)
C
C common block:
	INCLUDE 'LSL$CMNTRIEDIT:ERRMSG.CMN'
C
C local workspace:
	INTEGER JJJ
C
C functions:
	INTEGER LIB$SIG_TO_RET
	INTEGER LIB$MATCH_COND
C
C ......................................................................
C
	JJJ=LIB$MATCH_COND(SIGARGS(2),SS$_INTOVF,
     &				      SS$_INTDIV,
     &				      SS$_FLTOVF_F,
     &				      SS$_FLTUND_F,
     &				      SS$_FLTDIV_F,
     &				      MTH$_FLOOVEMAT,
     &				      MTH$_FLOUNDMAT)
	IF (JJJ.EQ.0) THEN
C ... no match - re-signal it.
	   PAN$ERRET=SS$_RESIGNAL
	ELSE
C
C ... preserve arguments for external use.
	   DO 10 JJJ=1,MIN((SIGARGS(1).AND.'FFFF'X) + 1,20)
	      ERRARG(JJJ)=SIGARGS(JJJ)
10	   CONTINUE
C
C ... return to whoever established us (unless SIG_TO_RET fails,
C ... when we use that error instead.
	   PAN$ERRET=LIB$SIG_TO_RET(SIGARGS,MECHARGS)
	ENDIF
	RETURN
	END
