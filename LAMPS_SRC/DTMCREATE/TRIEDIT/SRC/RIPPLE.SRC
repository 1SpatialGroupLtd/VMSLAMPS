C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1989-01-26 14:00:08.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE RIPPLE(IX,IY,KLOSE)
C
***	MODULE	RIPPLE
***	IDENT	07DE87
C
C Copyright Laser-Scan Laboratories Limited, Cambridge, England.
C
CMOD	Converted for TRIEDIT			TJH	07-Dec-1987
CMOD	Tidied					 DM	20-Jul-1984
CMOD	Messages standardised			 DM	29-May-1984
C	Standardised				TJH 	25-May-1984
C
C Find the closest node (KLOSE) to IX,IY using an expanding square
C search.
C
C Parameters:
	INCLUDE 'LSL$CMNTRIEDIT:TRIEDITMSG.PAR'
C
C Common:
	INCLUDE 'LSL$CMNTRIEDIT:DATQ.CMN'
	INCLUDE 'LSL$DTMCREATESYS:MESSAGE.CMN'
C
C ......................................................................
C
C Get box location of this point
	IPOS=MIN0(MAX0((IY/MYI)+1,1),NBI)
	JPOS=MIN0(MAX0((IX/MXI)+1,1),NBJ)
C Pick up points in expanding hollow square. Square expands in
C increments of one box width (INC) until distance from centre
C of square to edge is greater than distance to closest point
C to centre within the square
	N=0
	DIST=10.E20
	LIM=MAX0(NBI,NBJ)
	DO 10 INC=1,LIM
	   LINC=INC-1
C Determine limits of hollow square for this expansion cycle
	   IA=IPOS-LINC
	   IB=IPOS+LINC
	   JA=JPOS-LINC
	   JB=JPOS+LINC
C Get increment between edges of square
	   KINC=MAX0(IB-IA,1)
C Get boxes lying on top and bottom edge of hollow square
	   CALL PICSQU(NOD,DIST,IX,IY,IA,IB,1,JA,JB,KINC)
C Get boxes along the left and right sides of hollow square
C there are none if this is the first square size.
	   IF (INC.NE.1)
     &	      CALL PICSQU(NOD,DIST,IX,IY,IA,IB,KINC,JA+1,JB-1,1)
C All boxes checked for this ripple. Are we far enough out not to
C have missed a point that we ought to choose.
	   D=DIST
	   IF (DIST.NE.0.0) D=SQRT(D)
	   IF (D.LT.(FLOAT(INC)-0.5)*FLOAT(MXI)) GOTO 20
10	CONTINUE
C No closest point has been found. Oh dear!
	CALL LSL_GETMSG(TRIEDIT__NOPOINT,MESSAGE,MESLEN)
	CALL ALARMS(1,0,MESSAGE(1:MESLEN))
C Closest point has been found. Hand it back to user
20	KLOSE=NOD
	RETURN
	END
