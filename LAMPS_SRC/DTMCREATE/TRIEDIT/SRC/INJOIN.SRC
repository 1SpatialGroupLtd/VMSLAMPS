	SUBROUTINE INJOIN(NEWN,NODA,NVERT,NODB)
C
***	MODULE	INJOIN
***	IDENT	07DE87
C
C Copyright Laser-Scan Laboratories Limited, Cambridge, England.
C
CMOD	Converted for TRIEDIT			TJH	07-Dec-1987
CMOD    NTEM dimensioned to NTMSIZ via DIMS.PAR  DM     05-Jul-1984
CMOD	Messages standardised			 DM	29-May-1984
C	Standardised				TJH 	25-May-1984
C
C Add the neighbour NEWN to the list of neighbours for NVERT.
C NEWN is to be added between noda and nodb (presently next to
C each other - but we dont know which comes first).
C
C Parameters:
	INCLUDE 'LSL$CMNTRIEDIT:TRIEDITMSG.PAR'
	INCLUDE 'LSL$CMNTRIEDIT:DIMS.PAR'
C
C Common:
	INCLUDE 'LSL$DTMCREATESYS:MESSAGE.CMN'
C
C W/s
	INTEGER	NTEM(NTMSIZ)
C
C ......................................................................
C
C Get neighbours of NVERT
	CALL GETNAY(NVERT,NTEM,NTMSIZ,NUM)
C
C Check there is space to add a neighbour, by setting I to NUM+1
	I=NUM
	IF (I+1.GT.NTMSIZ) THEN
	   CALL LSL_GETMSG(TRIEDIT__TOMNYNEIB,MESSAGE,MESLEN)
	   CALL ALARMS(1,0,MESSAGE(:MESLEN))
	ENDIF
C
C There is space. Go through the list backwards, checking each
C pair of nodes in turn for being the right ones
	DO 10 M=2,NUM
	   I=NUM-M+2
C
C Move each element in turn one higher in the list of neighbours
	   NTEM(I+1)=NTEM(I)
	   IF ((NTEM(I).NE.NODA.OR.NTEM(I-1).NE.NODB).AND.
     1     (NTEM(I).NE.NODB.OR.NTEM(I-1).NE.NODA)) GOTO 10
C
C NODA/NODB pair have been found. Insert node NEWN,
C and then jump out as the rest don't need shifting
	   NTEM(I)=NEWN
	   GOTO 20
10	CONTINUE
C
C If we get to here, node pair NODA/NODB have not been recognised
	CALL LSL_GETMSG(TRIEDIT__NODPAIR,MESSAGE,MESLEN)
	CALL ALARMS(1,0,MESSAGE(:MESLEN)//'- INJOIN')
C
C Increase NUM to allow for the extra node (NEWN)
20	NUM=NUM+1
C
C List has now had NEWN inserted in the correct place (I hope!), so
C write it back to file
	CALL PUTNAY(NVERT,NTEM,NTMSIZ,NUM)
	RETURN
	END
