C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1989-01-26 13:52:28.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE ONEDGE(LIST,LMAX,NP)
C
***	MODULE	ONEDGE
***	IDENT	07DE87
C
C Copyright Laser-Scan Laboratories Limited, Cambridge, England.
C
CMOD	Converted for TRIEDIT			TJH	07-Dec-1987
CMOD	Comments tidied				TJH	06-Sep-1985
CMOD	LIST dimensioned to NTMSIZ via DIMS.PAR  DM     05-Jul-1984
C	Standardised				TJH	25-May-1984
C
C......ONEDGE creates new link structure for point NP that lies
C......on the edge connecting LIST(1) to LIST(2). NPTA to NPTC are
C......the vertices of the triangle concerned.
C
	INCLUDE 'LSL$CMNTRIEDIT:DIMS.PAR'
C
	DIMENSION LIST(NTMSIZ)
C
C ......................................................................
C
	NPTA=LIST(1)
	NPTB=LIST(2)
	NPTC=LIST(3)
C
C......Get the vertex (NPTD) lying in the triangle on the other side of
C......the edge NPTA to NPTB, with NPTC already known.
	CALL GTFRTH(NPTA,NPTB,NPTC,NPTD)
C
C......Reconnect the links from NPTA to NPTB (and vice versa) to be
C......NPTA to NP, and NPTB to NP.
	CALL RECONN(NP,NPTA,NPTB)
	CALL RECONN(NP,NPTB,NPTA)
C
C......Add a connection to the vertices on each side of the edge
	CALL INJOIN(NP,NPTA,NPTC,NPTB)
	CALL INJOIN(NP,NPTA,NPTD,NPTB)
C
C......Now create connection list for NP in rotational (but not
C......necessarily clockwise) order
	LIST(1)=NPTA
	LIST(2)=NPTD
	LIST(3)=NPTB
	LIST(4)=NPTC
	LIST(5)=NPTA
C
C......Write the connections to memory/disk random access file
	CALL PUTNAY(NP,LIST,LMAX,5)
C
C......Insert the point in the window list
	CALL RPLWND(0,NP)
	RETURN
	END
