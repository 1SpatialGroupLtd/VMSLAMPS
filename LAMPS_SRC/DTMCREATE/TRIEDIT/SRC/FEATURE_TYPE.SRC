C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1989-01-26 13:33:18.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL	FUNCTION FEATURE_TYPE(LAYER,FC,ITYP,RIDPTS,RIVPTS)
C
***	MODULE	FEATURE_TYPE
***	IDENT	26JL88
C
C	Copyright Laser-Scan Laboratories Ltd., Cambridge, England
C
C	Created 					TJH 28-Jul-1988
C
C Arguments (in)
	INTEGER*2 LAYER		! layer number
	INTEGER*2 FC		! feature code
C
C Arguments (out)
	INTEGER	  ITYP		! see /COORDS/ comments
	LOGICAL	  RIDPTS	! .T. if ridgeline
	LOGICAL	  RIVPTS	! .T. if river
C
C W/s
	LOGICAL	  HAD_MATCH	! .T. if match found in bitmap
	LOGICAL	  OK		! for error reporting
C
	INCLUDE 'LSL$CMNTRIEDIT:SELECTIONS.CMN'
C
C Functions:
	LOGICAL		BITMATCH	! test for match in bitmap
C
C ......................................................................
C
	FEATURE_TYPE=.FALSE.
C
C Initialise
	RIDPTS=.FALSE.
	RIVPTS=.FALSE.
	ITYP=1
C
C See if the current layer is marked as a breakline
	OK=BITMATCH(BREKOV,LAYER,HAD_MATCH)
	IF (.NOT.OK) GOTO 10
	IF (HAD_MATCH) THEN
	   ITYP=ISIGN(ITYP,-1)
	ENDIF	
C
C and repeat for feature code breakline assignments
	OK=BITMATCH(BREKFC,FC,HAD_MATCH)
	IF (.NOT.OK) GOTO 10
	IF (HAD_MATCH) THEN
	   ITYP=ISIGN(ITYP,-1)
	ENDIF	
C
C Finally test whether we are dealing with a ridge or river string. 
C Points from such a string must be flagged in the byte array TPOLGY()
	RIDPTS=.FALSE.
	RIVPTS=.FALSE.
C
C See if the current layer is marked for ridgeline features
	OK=BITMATCH(OVRID,LAYER,HAD_MATCH)
	IF (.NOT.OK) GOTO 10
	IF (HAD_MATCH) RIDPTS=.TRUE.
C
C and repeat for feature code ridgeline assignments
	OK=BITMATCH(FCRID,FC,HAD_MATCH)
	IF (.NOT.OK) GOTO 10
	IF (HAD_MATCH) RIDPTS=.TRUE.
C
C See if the current layer is marked for river features
	OK=BITMATCH(OVRIV,LAYER,HAD_MATCH)
	IF (.NOT.OK) GOTO 10
	IF (HAD_MATCH) RIVPTS=.TRUE.
C
C and repeat for feature code river assignments
	OK=BITMATCH(FCRIV,FC,HAD_MATCH)
	IF (.NOT.OK) GOTO 10
	IF (HAD_MATCH) RIVPTS=.TRUE.
	FEATURE_TYPE=.TRUE.
C
10	RETURN
	END
