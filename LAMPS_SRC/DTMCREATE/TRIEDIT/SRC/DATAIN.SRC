C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1989-01-26 13:27:00.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE DATAIN(IZOOM,NUM)
C
***	MODULE	DATAIN
***	IDENT	07DE87
C
C Copyright Laser-Scan Laboratories Limited, Cambridge, England.
C
C	Created					TJH  23-Dec-1984
C
C Reads data from an IFF file and inserts every point found into 
C the triangulation held in memory, maintaining links between 
C each point in the same string but allowing breaks between
C strings.
C
	IMPLICIT NONE
C
C Arguments:
	INTEGER		IZOOM		! zoom level
	INTEGER		NUM		! number of points read in
C
C W/s
	INTEGER		NF(2)		! FSN and internal seq. #
	INTEGER		I		! temp var
	LOGICAL		OK		! function return
	LOGICAL		FINISHED	! .T. when IFF file read
	LOGICAL	  	NEW_FEATURE	! started new ftr or within one?
C
C Functions:
	LOGICAL		IFFBDY		! get input from IFF file
	LOGICAL		INSERT_STRING	! inserts str. into triang
C
C Parameters:
	INCLUDE 'LSL$DTMCREATESYS:MESPAR.PAR'
C
C Common:
	INCLUDE 'LSL$CMNTRIEDIT:COORDS.CMN'
	INCLUDE 'LSL$CMNTRIEDIT:COMMAND.CMN'
	INCLUDE 'LSL$CMNTRIEDIT:DATQ.CMN'
	INCLUDE 'LSL$DTMCREATESYS:IOLUNS.CMN'
	INCLUDE 'LSL$CMNTRIEDIT:TPOLGY.CMN'
	INCLUDE 'LSL$CMNTRIEDIT:TTTYPE.CMN'
C
C
C ......................................................................
C
C Remember how many points there were when we started
	NUM=NP
C Set up input for a maximum of 100000 strings
	DO 10 I=1,100000
	   OK=IFFBDY(FINISHED,NF,NEW_FEATURE)
	   IF (.NOT.OK) GOTO 20
C
C If we have finished, print summary and close input file. Otherwise
C process the string, inserting its data points into the box structure
	   IF (FINISHED) GOTO 30
C
C Insert points into triangulation. Function returns .F. if we try to
C insert across a zero width triangle - most probably a cliffline!
	   OK=INSERT_STRING(NF,NEW_FEATURE)
	   IF (.NOT.OK) GOTO 30
C Look for any more strings from file/keyboard
10	CONTINUE
	GOTO 30
C
C ......................................................................
C Error when reading data
20	CALL OUTOPT(WARNING//'Terminating input from IFF file')
C
C Calculate increase in number of points in memory after
C all the string additions have been made.
30	NUM=NP-NUM
	CALL IFFCLO(LGC1)
	RETURN
	END
