C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1989-01-26 14:03:40.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE TRICLP(NODEX,NODEY,IX,IY)
C
***	MODULE	TRICLP
***	IDENT	07DE87
C
C Copyright Laser-Scan Laboratories Limited, Cambridge, England.
C
CMOD	Converted for TRIEDIT				TJH 07-Dec-1987
C	Reworked from old TRICLP 			TJH 22-May-1986
C
C TRICLP clips output to the window. IX,IY is the input point location
C in integer scaled coordinates, XYBUF the clipped (real world) coords 
C for plotting.
C It attempts to clip as speedily as possible by performing point in 
C window checks rather than line checks wherever possible. We assume
C that the node point is always inside the window. 
C
C The output from the clipper is buffered in XYBUF after real world 
C scaling.
C
C
	REAL		XYBUF(2,2)	! buffer for plot points
C
	INCLUDE 'LSL$CMNTRIEDIT:CLPBUF.CMN'
C
C ......................................................................
C
C determine whether this neighbour point is inside the window.
	IXCLPO=-1
	CALL LACWIN(IX,IY,INSIDE)
C If the point is inside the window, go and draw it immediately
	IF (INSIDE.EQ.1) GOTO 10
C
C Point IX,IY is outside the window. We will have to calc. the 
C intersection of the line NODEX,NODEY - IX,IY with the window clipping 
C boundary. 
	ISIG=-1
	CALL CLIP(NODEX,NODEY,IX,IY,ISIG)
10	CALL IFF_VALUE(XYBUF(1,1),NODEX,1)
	CALL IFF_VALUE(XYBUF(2,1),NODEY,2)
	CALL IFF_VALUE(XYBUF(1,2),IX,1)
	CALL IFF_VALUE(XYBUF(2,2),IY,2)
	IF (XYBUF(1,1).NE.XYBUF(1,2).OR.XYBUF(2,1).NE.XYBUF(2,2))
     &					CALL IFFST(XYBUF(1,1),2,0)
	RETURN
	END
