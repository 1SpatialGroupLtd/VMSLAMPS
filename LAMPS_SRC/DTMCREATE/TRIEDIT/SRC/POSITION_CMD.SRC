C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1989-01-26 12:56:14.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE POSITION_CMD(IX,IY,UNITS)
C
***	MODULE	POSITION_CMD
***	IDENT	22AP88
C
CMOD	Position now output using UNITS			TJH 19-Jan-1989
CMOD	WORD now *38 not *30				TJH 22-Apr-1988
C
C Copyright Laser-Scan Laboratories Limited, Cambridge, England.
C
C Allows user to determine the location of any point in the plot
C window, for whatever purposes he may desire.
C
	IMPLICIT NONE
C
C Arguments (in):
	INTEGER	IX,IY			! POSITION (screen units)
	INTEGER	UNITS			! current units
C
C W/s:
	REAL		X,Y
	INTEGER		IXA,IYA		! POSITION limits (screen units)
	CHARACTER*1  	HEMIS		! hemisphere text
	INTEGER*4	DEGS		! degrees result
	INTEGER*4	MINS		! minutes result
	INTEGER*4	SECS		! second result
	INTEGER		NCHS		! number of characters in WORD
	CHARACTER*60 	WORD		! text
C
C Function:
	INTEGER*4	SIGCHS
	INTEGER		EXPAND
C
C ......................................................................
C
C Plot a small square at the position 
	CALL PLSYMB(IX,IY,7)
	CALL OUTBUF(' ')
C
C Convert screen coordinates to internal coordinates, then to
C external real coordinates.
	CALL CONPOS(IXA,IYA,IX,IY)
	CALL VALUE(X,IXA,1)
	CALL VALUE(Y,IYA,2)
	IF (UNITS.EQ.2.OR.UNITS.EQ.5) THEN	! metres or projection
	   CALL EXPAND('%WSX =%F14.4   Y = %F14.3',WORD,X,Y)
	ELSEIF (UNITS.EQ.3) THEN		! seconds of arc
	   CALL EXPAND('%WSX =%F14.4   Y = %F14.3',WORD,X/10.0,Y/10.0)
	ELSEIF (UNITS.EQ.4) THEN		! latlong 
	   CALL CVTANG( Y, .TRUE., HEMIS, DEGS, MINS, SECS )
	   NCHS=EXPAND(
     &		'%WS%P %I3 %P0%I2 %P0%I2%S'
     &				,WORD,DEGS,MINS,SECS,HEMIS)
	   CALL CVTANG( X, .FALSE., HEMIS, DEGS, MINS, SECS )
	   CALL APPEND('%WS  %P %I3 %P0%I2 %P0%I2%S'
     &				,WORD(NCHS+1:60),DEGS,MINS,SECS,HEMIS)
	ENDIF
	CALL OUTOPT(WORD(1:SIGCHS(WORD)))
	RETURN
	END
