C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1989-01-26 12:37:34.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL FUNCTION GET_LAYER(PROMPT,RESULT)
C
***	MODULE	GET_LAYER
**	IDENT	06NO87
C
C	Copyright (C), Laser-Scan Laboratories Ltd., Cambridge, England
C
C	Created						TJH 14-Oct-1987
C
C Function to get a layer number for the SET command. If argument is
C missing the user is prompted with PROMPT. Answer is returned in 
C RESULT. The user response is checked that the LAYER is >=0 and <=32767
C If not a warning message is issued.
C
C Function returns .TRUE. if all is well.
C
	IMPLICIT NONE
C
C Arguments:
	CHARACTER*(*)	PROMPT
	INTEGER*2	RESULT
C
C Parameters:
	INCLUDE	'LSL$DTMCREATESYS:MESPAR.PAR'
C
C Common:
	INCLUDE	'LSL$CMNLSL:CMDCOM.CMN'
	INCLUDE	'LSL$CMNLSL:EXPC.CMN'
	INCLUDE	'LSL$CMNTRIEDIT:COMMAND.CMN'
C
C W/s
	REAL	AREAL		! dummy for RITVAL
C
C ......................................................................
C
	GET_LAYER=.TRUE.		! assume success
	IF (CMDICT.LE.0) THEN
	   IF (TTIN) THEN 		! input from indirect file
10	      CALL RITVAL(
     &			'Layer number for '//PROMPT//': ', ! prompt
     &			AREAL,		! a dummy real*4 answer
     &			INTARG(1),	! the integer answer
     &			1)		! get the integer argument
	      CMDICT=1			! integer arg counter
	   ELSE
	      CALL OUTOPT(ERROR//'Missing layer number argument')
	      GET_LAYER=.FALSE.
	   ENDIF
	ENDIF
	IF (GET_LAYER) THEN
	   IF (CMDICT.GT.1) THEN
	      CALL OUTOPT(' ')
	      CALL OUTOPT('Only one value please !')
	      CALL EXPAND('Taking first value only (%N)',INTARG(1))
	      CALL OUTOPT(EXPDSC)
	      CALL OUTOPT(' ')
	   ENDIF
	   IF (INTARG(1).LT.0.OR.INTARG(1).GT.32767) THEN
	      IF (TTIN) THEN	    
	         CALL EXPAND('%S Illegal layer number %^L%N',WARNING,
     &					INTARG(1))
	      ELSE
	         CALL EXPAND('%S Illegal layer number %^L%N',ERROR,
     &					INTARG(1))
	      ENDIF
	      CALL OUTOPT(EXPDSC)
	   ELSE
	      RESULT=INTARG(1)
	   ENDIF
	ENDIF
	RETURN
	END
