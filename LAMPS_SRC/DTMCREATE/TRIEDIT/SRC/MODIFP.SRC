C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1989-01-26 12:51:34.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE MODIFP(KLOSE,WORD,IH,IOPT,IOBJ,ICHANG,IFCODE)
C
***	MODULE	MODIFP
***	IDENT	07DE87
C
C Copyright Laser-Scan Laboratories Limited, Cambridge, England.
C
CMOD	Converted for TRIEDIT			TJH	07-Dec-1987
CMOD	Feature codes introduced		TJH	25-Mar-1986
CMOD	Use ABS on point before applying IH for
C       sign dependent type change              TJH	04-Sep-1985
CMOD	Only modify KLOSE once !		 DM	28-Jun-1985
CMOD    Arrow-head symbol used for TYPE change  TJH     20-Jul-1984
CMOD	Tidied; call to OUTBUF added		 DM	06-Jun-1984
CMOD	INDB and NAYB now in MAC		 DM	29-May-1984
C	Standardised				TJH 	25-May-1984
C
C......Modify a point or a string. The point is KLOSE, and word is 'Y'
C......or 'N' depending whether string is to be modified, height is IH
C......(not necessarily relevant), and IOPT is the symbol number to use
C......on the screen to show the result. IOBJ is the object number to
C......use for line style and colour choice. Feature code (normal,
C......river or ridgeline) is denoted by IFCODE.
C
	CHARACTER*(*) WORD
	INTEGER		ICHANG	! change qualifier - 
C				! 1 = feature
C				! 2 = height
C				! 3 = type
	BYTE		IFCODE	! "feature code" for change
C				! 0 = normal
C				! 1 = river
C				! 2 = ridgeline
C
	INCLUDE 'LSL$CMNTRIEDIT:DATQ.CMN'
	INCLUDE 'LSL$CMNTRIEDIT:TPOLGY.CMN'
C
C ......................................................................
C
C......Set colour/style
	CALL NEWOBJ(IOBJ)
C......Get string sign marker
	KSIGN=ISIGN(1,MAC(4,KLOSE))
C......Pick up search limits for up data set direction
	JA=KLOSE
	KA=NMAX
C......Ensure that point NP+1 (does not yet exist) has a fake sequence
C......number set to the opposite sign of that of point NP.
	IF (NP.NE.NMAX) MAC(4,NP+1)=-MAC(4,NP)
	IF (WORD(1:1).EQ.'N') KA=KLOSE
C......Two loops - (first forward, second backwards) - from KLOSE point
	DO 30 J=1,2
	   DO 10 I=JA,KA
C......Pick up node depending on direction of travel through data set
	      L=I
	      IF (J.EQ.2) L=KA-I+JA
C......Check still in the same string as KLOSE point, and that this is
C......not a duff point
	      IF (ISIGN(1,MAC(4,L)).NE.KSIGN.OR.IABS(MAC(5,L)).EQ.1)
     &		 GOTO 20
C......Delete point, and reconnect the triangulation
	      IF (IOPT.EQ.5) CALL DELPNT(L)
C......Change feature code of point - normal, river, or ridge
	      IF (IOPT.EQ.6.AND.ICHANG.EQ.1) TPOLGY(L) = IFCODE
C......Replace point z-value with IH (already checked for discont etc)
	      IF (IOPT.EQ.6.AND.ICHANG.EQ.2) MAC(3,L)=IH
C......Only type of string is to be changed
	      IF (IOPT.EQ.6.AND.ICHANG.EQ.3) THEN
	         IF (IH.EQ.-1) MAC(3,L)=ABS(MAC(3,L))*IH
	         IF (IH.EQ.1)  MAC(3,L)=ABS(MAC(3,L))
	      ENDIF
C......Check that we are running interactively with a window
	      IF (NPINW.EQ.-1) GOTO 10
C......Check for being inside window. If it is, then display deletion
	      CALL LACWIN(MAC(1,L),MAC(2,L),INSIDE)
	      IF (INSIDE.EQ.0) GOTO 10
	      CALL POSCON(IX,IY,MAC(1,L),MAC(2,L))
	      IF (ICHANG.EQ.3) THEN
	         CALL PLSYMB(IX,IY,4)
	      ELSE
	         CALL PLSYMB(IX,IY,IOPT)
	      ENDIF
	      CALL OUTBUF
10	   CONTINUE
C......Pick up limits for the backward loop through data set (if any)
20	   IF (WORD(1:1).EQ.'N'.OR.KLOSE.EQ.1) GO TO 40
	   JA=1
	   KA=KLOSE-1
30	CONTINUE
40	RETURN
	END
