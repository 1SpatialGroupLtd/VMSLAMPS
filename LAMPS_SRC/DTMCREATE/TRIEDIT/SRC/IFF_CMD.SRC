C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1989-01-26 13:44:28.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE IFF_CMD(IZOOM)
C
***	MODULE	IFF_CMD
***	IDENT	29FE88
C
C Copyright Laser-Scan Laboratories Limited, Cambridge, England.
C
C 	Created						TJH 22-Dec-1987
C
C Routine write data structure back to IFF format.
C
	IMPLICIT NONE
C
C Arguments:
	INTEGER		IZOOM	! zoom flag
C
C Parameters:
	INCLUDE 	'LSL$DTMCREATESYS:MESPAR.PAR'
C
C Common:
	INCLUDE 	'LSL$CMNTRIEDIT:FILNMS.CMN'
	INCLUDE 	'LSL$DTMCREATESYS:MESSAGE.CMN'
	INCLUDE 	'LSL$CMNLSL:TXTC.CMN'
C
C W/s
	INTEGER		I	! temp var
	LOGICAL		OK	! function return
	BYTE		CH	! a character
C
C Functions:
	LOGICAL	RDCHS		! read character from line
	INTEGER	GETFILNAM	! reads file-spec
C
C ......................................................................
C
	IF (RDCHS(CH)) THEN     ! was a filename supplied as an arg.?
	   NEWIFF=.FALSE.       ! (reset only if good filename supplied)
	ELSE			! filename supplied, don't use default
	   CALL BSCH
	   OK=GETFILNAM(IFITLE,IFTLEN,'LSL$IF:IFF.IFF',.TRUE.,' ')
	   IF (.NOT.OK.OR.ITLEN.LT.0) THEN
	      CALL OUTOPT('%S reading IFF file-spec',ERROR)
	      CALL LSL_GETMSG(OK,MESSAGE,I)
	      CALL OUTOPT(MESSAGE(:I))
	      GOTO 10
	   ENDIF
	   CALL STR$UPCASE(IFITLE,IFITLE)
	   NEWIFF=.TRUE.	  ! tells WINDUP to use supplied name
	ENDIF
C
	CALL WINDUP(.TRUE.)
C
C Get the screen back
	CALL UPDATE(2,IZOOM)
C
C Set interactive storage still full
10	RETURN
	END
