C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1992-03-31 15:17:32.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL FUNCTION RDCPFL(X,Y)
C
***	MODULE	RDCPFL
***	IDENT	07DE87
C
C	Copyright Laser-Scan Laboratories Ltd., Cambridge, England
C
CMOD	To LSLLIB, tidied				TJH  07-Dec-1987
C	Created						TJH  06-Jul-1984
C
C To read a control points lookup file for INIDIG.  Function returns .F.
C if CPs found .T. if failure
C
	IMPLICIT NONE
C
C Arguments:
	REAL            X,Y     ! CP coords.
C
C Parameters:
	INTEGER*2       CPLUN ! terminal lookup file LUN
	PARAMETER      (CPLUN=77)
	INCLUDE 	'LSL$CMNLSL:LSLLIBMSG.PAR'
	INCLUDE 	'LSL$DTMCREATESYS:MESPAR.PAR'
C
C W/s
	INTEGER		OK      ! error status return
	INTEGER		LINO	! to record file line number
	BYTE		CHR	! for use with RDCHS
C
C Functions:
	INTEGER*4 	FLRLIN	! to read a line from it
	LOGICAL		RDCHS	! read character from line
	LOGICAL         RDREAL  ! read real
C
C Common blocks:
	INCLUDE 'LSL$CMNLSL:EXPC.CMN'
	INCLUDE 'LSL$CMNLSL:TXTC.CMN'
	INCLUDE 'LSL$DTMCREATESYS:MESSAGE.CMN'
C
C ......................................................................
C
	RDCPFL=.FALSE.    		! assume well
C
C read the lookup file line by line 
	LINO = 0
10	OK=FLRLIN()
	IF (.NOT.OK) THEN
	   IF (OK.EQ.LSL__EOF) GOTO 30
	   CALL EXPAND(
     &		ERROR//'reading CP file. Returning to main loop.')
	   CALL OUTOPT(EXPDSC)
	   CALL LSL_GETMSG(OK,MESSAGE,MESLEN)
	   CALL OUTOPT(MESSAGE(:MESLEN))
	   RDCPFL=.TRUE.
	   GOTO 40
	ELSE
	   CALL BSLN
	   LINO = LINO+1
	   IF (RDCHS(CHR)) GOTO 10		! end of line
	   IF (CHR.EQ.'!') GOTO 10		! comment  - ignore
	ENDIF
C
	CALL BSCH
	IF (RDREAL(X)) GOTO 20  ! error or ^z
	IF (RDREAL(Y)) GOTO 20
	GOTO 40
C
C ......................................................................
C error on read
C
20	CALL EXPAND('Error reading CP file at line %N',LINO)
	CALL OUTOPT(EXPDSC)
	RDCPFL=.TRUE.				! error
	GOTO 40
C
30	CALL OUTOPT(WARNING//'Unexpected end of CP '//
     &			'file. Returning to main loop.')
	RDCPFL=.TRUE.				! error
C
40	RETURN
	END
