	SUBROUTINE POINTS(IOPT)
C
***	MODULE	POINTS
***	IDENT	25MR93
C
C Copyright Laser-Scan Laboratories Limited, Cambridge, England.
C
CMOD	Prevent output conversion error	when	 ST	17-Mar-1993
C       outputting ZGAP, INSERT_HT and INDEX_ZGAP
CMOD	Converted for TRIEDIT			TJH	07-Dec-1987
CMOD	RIDGELINES and RIVERS added to tell-back
C	area.					TJH	25-Mar-1986
CMOD	VECTOR added to the tell-back area	TJH	11-Oct-1985
CMOD	NAYCON call now takes args.		TJH	02-Oct-1985
CMOD	New device types supported		 DM	04-Apr-1985
CMOD	Another error in status area corrected	 DM	25-Mar-1985
CMOD	Error in status area corrected		 DM	12-Sep-1984
CMOD	Status area rehashed, CONTUR called here DM	04-Jul-1984
CMOD	IOPT=2 ==> refresh status area only	 DM	03-Jul-1984
CMOD	Use VT100 if available			 DM	02-Jul-1984
CMOD    LSL commands substituted for MJM's      TJH     22-Jun-1984
CMOD	Messages standardised			 DM	06-Jun-1984
C	Standardised				TJH 	29-May-1984
C
C Routine to plot data points and status area.
C NPDISP is +1 if a data set resides in memory, and -1 if none is 
C present.
C
	IMPLICIT NONE
C
C Argument:
	INTEGER		IOPT	! If IOPT=-1 then only a posting is done
C				! and if IOP=1 the postion symbols only 
C				! are drawn but with a map frame and a
C				! new banner. If IOPT=0 symbols and
C				! posting and frame are drawn. 
C				! If IOPT=2 just the banner is redrawn
C
C
C W/s
	INTEGER	I,TMP1,TMP2	! temp var
	INTEGER	IX,IY		! position in integer scaled units
C
	CHARACTER*80 TEXT,TEXTB,WORD
	CHARACTER*20 TXTOPT
C
C Common:
	INCLUDE 'LSL$CMNTRIEDIT:ANNOT.CMN'
	INCLUDE 'LSL$CMNTRIEDIT:COMMAND.CMN'
	INCLUDE 'LSL$CMNTRIEDIT:CONTR.CMN'
	INCLUDE 'LSL$CMNTRIEDIT:DATQ.CMN'
	INCLUDE 'LSL$CMNTRIEDIT:INPARM.CMN'
	INCLUDE 'LSL$CMNTRIEDIT:TTTYPE.CMN'
C
C ......................................................................
C
	CALL OUTOPT(' ')
	IF (IOPT.EQ.2) GOTO 30
	IF (IOPT.EQ.-1) GOTO 10
C
C******************** PLOT NEIGHBOUR CONNECTIONS ***********************
C
C Plot neighbour connections (if required), clipped to the window
	IF (ITRYDP.NE.-1) CALL NAYCON(' ',.FALSE.)
C Plot contours (if required)
	IF (KONTBL.EQ.-1) CALL CONTUR
C
C********************* PLOT LABELS FOR DATA POINTS *********************
	IF (LABDIS.EQ.1) THEN
	   IF (LAB_HT) 	CALL PDISPL(1,-1,6)
	   IF (LAB_SEQ) CALL PDISPL(2,0,6)
	   IF (LAB_STR) CALL PDISPL(4,0,6)
	ENDIF
C****************** PLOT POINT SYMBOLS FOR DATA POINTS *****************
C
C If symbol only is to be plotted, and point display marker is
C negative, then skip all data point updating
	IF (IOPT.EQ.1.AND.NPDISP.EQ.-1) GOTO 20
10	CALL PDISPL(1,IOPT,6)
C Omit all further work if a posting was all that was wanted
	IF (IOPT.EQ.-1) GOTO 40
C
C**************************** PLOT FRAME *****************************
C
C Box around contour area using the frame object.
20	CALL POSCON(IX,IY,JSC+JLC,JSR+JLR)
	CALL FRAME(0,IX,0,IY,3)
C
C*************************** PLOT BANNER *****************************
C
C Show the miserable user the commands 
	CALL NEWOBJ(4)
C
C IOPT=2 joins here.
30	IF (VT100) THEN
	   CALL VTSCRL(12,24)		! establish scroll region
	   CALL VTCLR(1)		! clear to cursor
	   CALL VTPOS(1,10)		! start of status area
	   CALL VTINVD(.TRUE.)		! turn on inverse video
	ENDIF
	I=10
	IF (S6100) THEN
	   CALL WSTXCI(15)		! explicitly set S6100 text col.
	ELSEIF (GPX) THEN
	   CALL GSTXCI(15)		! explicitly set GPX text col.
	ELSEIF (T4010) THEN
	   CALL TRANSP			! put into 'tranparency mode'
	   I=3				! screen is only 72 chars wide
	ENDIF
C
	CALL OUTOPT('LABEL OPTIONS:           '//
     &	  'CONTOUR OPTIONS:           INSERT OPTIONS:             ')
	IF (LAB_HT) THEN
	   TXTOPT='On '
	ELSE
	   TXTOPT='Off'
	ENDIF
	TEXT=                             
     &	'Heights.......... '//TXTOPT(:3)//'    Interval........ '
	IF (ZGAP.NE.0.0) THEN
	   IF (ABS(ZGAP).GT.9999999.0) ZGAP = SIGN(1.0,ZGAP)*9999999.0
	   TMP1 = 1+INT(LOG10(ABS(ZGAP)))
	   TMP2 = MIN(3,9-TMP1-1)
55	   FORMAT (F9.<TMP2>)
	   WRITE (TEXTB,55) ZGAP
	   CALL GTWORD(TEXTB,WORD)
	   CALL CONCAT(TEXT,WORD,1)
	   CALL CONCAT(TEXT,'Height.......',9-TMP1-TMP2)
	ELSE
	   WRITE (TEXTB,50) ZGAP
	   CALL GTWORD(TEXTB,WORD)
	   CALL CONCAT(TEXT,WORD,1)
	   CALL CONCAT(TEXT,'Height.......',3)
	ENDIF
	IF (INSERT_MVAL) THEN
	   CALL CONCAT(TEXT,'Multivalued',1)
	ELSE
	   IF (INSERT_HT.NE.0.0) THEN
	      IF (ABS(INSERT_HT).GT.9999999.0) THEN
		 INSERT_HT = SIGN(1.0,INSERT_HT)*9999999.0
	      ENDIF
	      TMP1 = 1+INT(LOG10(ABS(INSERT_HT)))
	      TMP2 = MIN(3,9-TMP1-1)
56	      FORMAT (F9.<TMP2>)
	      WRITE (TEXTB,56) INSERT_HT
	   ELSE
	      WRITE (TEXTB,50) INSERT_HT
	   ENDIF
	   CALL GTWORD(TEXTB,WORD)
	   CALL CONCAT(TEXT,WORD,1)
	ENDIF
	CALL OUTOPT(TEXT)	
C
	IF (LAB_SEQ) THEN
	   TXTOPT='On '
	ELSE
	   TXTOPT='Off'
	ENDIF
	TEXT=
     &	'Sequence......... '//TXTOPT(:3)//'    Index_interval..'
	IF (INDEX_ZGAP.EQ.0.0) THEN
	   WORD='Unset'
	   CALL CONCAT(TEXT,WORD,1)
	   CALL CONCAT(TEXT,'Feature_flag.',5)
	ELSE
	   IF (ABS(INDEX_ZGAP).GT.9999999.0) THEN
	      INDEX_ZGAP = SIGN(1.0,INDEX_ZGAP)*9999999.0
	   ENDIF
	   TMP1 = 1+INT(LOG10(ABS(INDEX_ZGAP)))
	   TMP2 = MIN(3,9-TMP1-1)
 57	   FORMAT (F9.<TMP2>)
	   WRITE (TEXTB,57) INDEX_ZGAP
	   CALL GTWORD(TEXTB,WORD)
	   CALL CONCAT(TEXT,WORD,1)
	   CALL CONCAT(TEXT,'Feature_flag.',9-TMP1-TMP2)
	ENDIF
	IF (INSERT_FC.EQ.0) THEN
	   WORD='Unflagged'
	ELSEIF (INSERT_FC.EQ.1) THEN
	   WORD='River'
	ELSEIF (INSERT_FC.EQ.2) THEN
	   WORD='Ridgeline'
	ENDIF
	CALL CONCAT(TEXT,WORD,1)
	CALL OUTOPT(TEXT)	
C
	IF (LAB_STR) THEN
	   TXTOPT='On '
	ELSE
	   TXTOPT='Off'
	ENDIF
	TEXT='SIGNS............ '//TXTOPT(:3)//
     &		'                               Type.........'
	IF (INSERT_BRE) THEN
	   CALL CONCAT(TEXT,'Breakline',1)
	ELSE
	   CALL CONCAT(TEXT,'Normal',1)
	ENDIF
	CALL OUTOPT(TEXT)
C
	IF (KMULT.EQ.1) THEN
	   TXTOPT='Small'
	ELSE
	   TXTOPT='Big'
	ENDIF
	TEXT='Label size....... '//TXTOPT
	CALL OUTOPT(TEXT)
C
	IF (NODECP.EQ.1) THEN
	   TXTOPT='Integer'
	ELSE
	   TXTOPT='Floating point'
	ENDIF
	TEXT='Representation... '//TXTOPT
	CALL OUTOPT(TEXT)
	TEXT=' '
	CALL OUTOPT(TEXT)
C
C Add total number of points
	IF (T4010) THEN
	   TEXT='Total pnts..'
	ELSE
	   TEXT='Total points..... '
	ENDIF
	WRITE (TEXTB,60) NP
	CALL GTWORD(TEXTB,WORD)
	CALL CONCAT(TEXT,WORD,1)
C
C Add the number of points in the present window
	IF (T4010) THEN
	   CALL CONCAT(TEXT,'Pnts in window.. ',2)
	ELSE
	   CALL CONCAT(TEXT,'Points in window... ',2)
	ENDIF
	WRITE (TEXTB,60) NPINW
	CALL GTWORD(TEXTB,WORD)
	CALL CONCAT(TEXT,WORD,1)
C
C Show triangle accuracy level
	IF (T4010) THEN
	   CALL CONCAT(TEXT,'Triangle acc.. ',2)
	ELSE
	   CALL CONCAT(TEXT,'Triangle accuracy level.. ',2)
	ENDIF
	WRITE (TEXTB,70) LEVEL
	CALL GTWORD(TEXTB,WORD)
	CALL CONCAT(TEXT,WORD,1)
	CALL OUTOPT(TEXT)
C
C Indicate start of options-on data
	TEXT='Update status:'
	IF (         LABDIS.EQ.-1
     &		.AND.KONTBL.NE.-1
     &		.AND.NPDISP.NE.1
     &		.AND.ITRYDP.NE.1) THEN
	   CALL CONCAT(TEXT,'No options selected',2)
	ELSE
C
C If contours are on say so (NB: KONTBL stands for contour
C blanking, and hence +1 means contours off, and -1 means contours
C are to be plotted).
	   IF (KONTBL.EQ.-1) THEN
	      CALL CONCAT(TEXT,'DCUPDATE',2)
	   ENDIF
C
C Add to text if the point locations are to be plotted
	   IF (NPDISP.EQ.1) THEN
	      CALL CONCAT(TEXT,'DNUPDATE',2)
	   ENDIF
C
C Add to text if the triangle display is on
	   IF (ITRYDP.EQ.1) THEN
	      CALL CONCAT(TEXT,'DTUPDATE',2)
	   ENDIF
C
C Add to text if the triangle display is on
	   IF (LABDIS.EQ.1) THEN
	      CALL CONCAT(TEXT,'DLUPDATE',2)
	   ENDIF
	ENDIF
	CALL OUTOPT(TEXT)
	IF (VT100) THEN
	   CALL VTINVD(.FALSE.)		! turn off inverse video
	   CALL VTPOS(1,12)		! bottom of scroll region
	ENDIF
C
C Updating now finished.
40	RETURN
C
50	FORMAT (F9.4)
60	FORMAT (I6)
70	FORMAT(I2)
	END
