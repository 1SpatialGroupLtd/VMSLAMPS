C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1989-01-26 13:49:38.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE INTRYG(LIST,LMAX,NP)
C
***	MODULE	INTRYG
***	IDENT	07DE87
C
C Copyright Laser-Scan Laboratories Limited, Cambridge, England.
C
CMOD	Converted for TRIEDIT			TJH	07-Dec-1987
CMOD    LIST dimensioned to NTMSIZ via DIMS.PAR  DM     05-Jul-1984
C	Standardised				TJH	25-May-1984
C
C......Join a point lying inside a triangle onto the vertices of the
C......triangle. update the lists for the three nodes, and create the
C......list for the new node. List contains the three nodes making up
C......the vertices, and np is the number of the new node.
C
	INCLUDE 'LSL$CMNTRIEDIT:DIMS.PAR'
C
	DIMENSION LIST(NTMSIZ)
C
C ......................................................................
C
C......Extract the nodes from list
	NPTA=LIST(1)
	NPTB=LIST(2)
	NPTC=LIST(3)
C......Add the connection to np for each vertex of the triangle.
	CALL INJOIN(NP,NPTA,NPTB,NPTC)
	CALL INJOIN(NP,NPTB,NPTC,NPTA)
	CALL INJOIN(NP,NPTC,NPTA,NPTB)
C......Store neighbour list for the new point
	LIST(4)=NPTA
	CALL PUTNAY(NP,LIST,LMAX,4)
C......Update point in window list to include new point
	CALL RPLWND(0,NP)
	RETURN
	END
