	SUBROUTINE DELTRA(NTEM,NN,NUM,I,CIRC)
C
***	MODULE	DELTRA
***	IDENT	07DE87
C
C	Copyright Laser-Scan Laboratories Ltd., Cambridge, England
C
CMOD	Converted for TRIEDIT			TJH	07-Dec-1987
C	Standardised				TJH	21-Apr-1987
C
	DIMENSION NTEM(NN)
	DIMENSION LIST(150)
	INCLUDE 'LSL$CMNTRIEDIT:DATQ.CMN'
C
C ......................................................................
C
C......Calculate circumscribing circle radius (squared) for nodes
C......pointed to by NTEM(I), NTEM(I+1), and NTEM(I+2).
	NODI=NTEM(I)
	J=MOD(I,NUM)+1
	NODJ=NTEM(J)
	K=MOD(J,NUM)+1
	NODK=NTEM(K)
	MAX=MAC(1,NODI)
	MAY=MAC(2,NODI)
	MBX=MAC(1,NODJ)
	MBY=MAC(2,NODJ)
	MCX=MAC(1,NODK)
	MCY=MAC(2,NODK)
C......Copy neighbours into LIST from NTEM, omitting the node under
C......consideration (I), as though this were a chosen result
	DO 10 J=1,I
	   LIST(J)=NTEM(J)
10	CONTINUE
	K=MOD(I,NUM)+1
	DO 20 J=K,NUM
	   LIST(J)=NTEM(J+1)
20	CONTINUE
C......Ensure the list of nodes in LIST is closed
	LIST(NUM)=LIST(1)
C......Check for center node of the triangle falling within the
C......polygon defined by list
	MX=MAC(1,NODJ)
	MY=MAC(2,NODJ)
	CALL PTINP(MAC,5,NMAX,LIST,NUM,MX,MY,1.0E-5,ICOND,IVERT)
	IF (ICOND.NE.0) THEN
C......This triangle is not pukka - lies outside the polygon, ensure
C......it cannot be found as a potential triangle
	   CIRC=10.E26
	ELSE
C......Get the circumscribing circle radius (squared for speed)
	   CALL CIRCUM(A,MAX,MAY,MBX,MBY,MCX,MCY)
C......This triangle is ok so pass the radius (squared) back to the
C......calling routine.
	   CIRC=A
	ENDIF
	RETURN
	END
