C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1992-10-06 11:20:16.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE PLTRYC(ITRY,INDEX_ZG,ZG,DO_INDEX,OFLOW)
C
***	MODULE	PLTRYC
***	IDENT	07DE87
C
C Copyright Laser-Scan Laboratories Limited, Cambridge, England.
C
CMOD	Converted for TRIEDIT			TJH	07-Dec-1987
CMOD	OFLOW argument added for IFF use	 AS	25-Jun-1985 
CMOD	Optimized a bit; call to OUTBUF added	 DM	06-Jun-1984
C	Standardised				TJH 	25-May-1984
C
C......Plot contours across the planar facet of a triangle
C......where MAC hold the data points, and ITRY the triangle nodes
C......ZG is the contour interval to be used (in real world units)
C
C
C Arguments:
	INTEGER	ITRY(3)		! the triangle nodes
	REAL	INDEX_ZG	! index interval
	REAL	ZG		! contour interval
	LOGICAL	DO_INDEX	! do the index contours this time?
	LOGICAL OFLOW		! out of IFF internal storage	

	INCLUDE 'LSL$CMNTRIEDIT:ANNOT.CMN'
	INCLUDE 'LSL$CMNTRIEDIT:DATQ.CMN'
	INCLUDE 'LSL$CMNTRIEDIT:ICI.CMN'
	INCLUDE 'LSL$DTMCREATESYS:RESOLUTION.CMN'
C
C W/s
	INTEGER*2	LINE	! line type flag for IFF
	INTEGER	IPEN	! line type flag for IFF
C
C ...................................................................
C
C......Find the lowest and highest values for this triangle that are
C......not including points with no value (eg imaginaries/unset)
CCC	LOW=300000
	LOW=MAX_RES_INT
	KI=0
	DO 10 I=1,3
	   J=ITRY(I)
	   IZ=IABS(MAC(3,J))
	   LOW=MIN0(IZ,LOW)
	   KI=MAX0(IZ,KI)
10	CONTINUE
C......Give up altogether if we are on a plateau
	IF (LOW.EQ.KI) GOTO 60
C......Get top and bottom values for this cell in real world units.
C......Allow for a slightly larger range in the conversion to cover any
C......problems with rounding of exact values
20	CALL VALUE(S,LOW-1,3)
	CALL VALUE(T,KI+1,3)
C......Set the Z increment (ZINCR) to index or intermediate contour
C......interval as appropriate
	IF (DO_INDEX) THEN
	   LINE=1
	   ZINCR=INDEX_ZG
	ELSE
	   LINE=0
	   ZINCR=ZG
	ENDIF
C......Get top and bottom contour heights
	S=AINT((S+SIGN(ZINCR,S))/ZINCR)*ZINCR
	T=AINT(T/ZINCR)*ZINCR
C......Get number of contours to cover
	NCONT=(T-S)/ZINCR+1.5
C......Go through the contour set for each side looking for the
C......contour level (D or IH in scaled units) crossing the facet.
	D=S-ZINCR
	DO 50 JC=1,NCONT
	   D=D+ZINCR
C......Are we calculating intermediate contours?
	   IF (.NOT.DO_INDEX.AND.INDEX_ZG.NE.0.0) THEN
C......Yes. Test if this intermediate contour is divisible by index
C......interval
	      IF (AMOD(D,INDEX_ZG).EQ.0.0) GOTO 50
	   ENDIF
	   CALL CONVER(D,IH,3)
	   IPEN=1
C......For each side of the triangle
	   DO 40 I=1,3
	      J=MOD(I,3)+1
	      K=ITRY(I)
	      L=ITRY(J)
C......Check neither of this pair is an imaginary/unset point. If it
C......is we dont want to contour along the edge
	      IF (K.LE.LIMPOL.OR.L.LE.LIMPOL) GOTO 40
	      IZA=IABS(MAC(3,K))
	      IZB=IABS(MAC(3,L))
	      IF (MIN0(IZA,IZB).GT.IH.OR.MAX0(IZA,IZB).LT.IH) GOTO 40
C......Calculate intersection on the side
	      C=0.0
	      IF (IZA.NE.IZB) C=FLOAT(IH-IZA)/FLOAT(IZB-IZA)
	      IX=MAC(1,K)+(MAC(1,L)-MAC(1,K))*C
	      IY=MAC(2,K)+(MAC(2,L)-MAC(2,K))*C
C......Generate an IFF file
30	      IF (CONIFF) THEN
	         CALL GENIFF(IX,IY,IH,IPEN,LINE,OFLOW)
	         IF (OFLOW) GOTO 60		! IFF storage overflow
	      ELSE
C......Or Plot it out using the window clipper
	         CALL LACCLP(IX,IY,IPEN)
	      ENDIF
	      IPEN=-1
40	   CONTINUE
50	CONTINUE
60	RETURN
	END
