C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1989-01-26 12:35:10.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE GENIFF(IX,IY,IH,IPEN,LINE,OFLOW)
C
***	MODULE  GENIFF          	
***	IDENT	07DE87
C	
C Copyright| Laser-Scan Laboratories Ltd. Cambridge CB4 4BH , England
C	   | Author: A. Stevens
C
C History
C
CMOD	Converted for TRIEDIT			TJH	07-Dec-1987
C 	Created					AS.	21-June-1985
C
C Module description
C
C Routine converts the scaled coordinates of a point IX.IY to real
C world values and puts the point into an Intermediate Contour 
C Iff buffer, ICIBUF(), for IFF generation.
C
	IMPLICIT NONE
C
C
C arguments passed
C
	INTEGER*4	IX,IY,IH		! scaled co-ords X,Y,Z
	INTEGER		IPEN			! start of line if = +1
	INTEGER*2	LINE			! Major/Minor contour
	LOGICAL		OFLOW			! buffs out of memory?
C
C common blocks 
C
	INCLUDE	'LSL$CMNTRIEDIT:IFCTRL.CMN'
	INCLUDE	'LSL$CMNTRIEDIT:ANNOT.CMN'
	INCLUDE	'LSL$CMNTRIEDIT:RCONVI.CMN'
	INCLUDE	'LSL$CMNTRIEDIT:ICI.CMN'
C
C workspace
C
	INTEGER*4	HMAX,HMIN,INTERVAL,HX
	INTEGER*2	I,INDEX			! counters
	INTEGER*2	ICICNT
	REAL*4		X,Y
	REAL*4		NUL			! null marker
	REAL*4		ZVAL			! contour height
C
	DATA NUL/1.0E-30/			! unlikely value!
C
C ......................................................................
C
C..... see if its the first time here- if so set up some things
C
	IF (FIRSTCALL) THEN
	   FTNUM=0				! for NF entry
C
C..... set the ICI store to null
	   DO 20 ICICNT = 1,MAXCNT
	      DO 10 INDEX = 1,MAXSTR
	         ICIBUF(ICICNT,1,INDEX) = NUL
10	      CONTINUE
20	   CONTINUE
C 	    
	   NWFCNT = 1			! start a feature counter
	   FIRSTCALL = .FALSE.
	ENDIF
C
C.....first convert IX,IY,IH to the real world.
	CALL IFF_VALUE(X,IX,1)
	CALL IFF_VALUE(Y,IY,2)
	CALL VALUE(ZVAL,IH,3)
	ZVAL = NINT(ZVAL)			!round the height 
C
C.....calculate the ICIBUF contour index from scaled contour height.
	CALL CONVER(ZGAP,INTERVAL,3)		!scales contour intval
	CALL CONVER(VMIN(3),HMIN,3)		!scales min contour ht
C
	HX = IH					!initialise height
	DO 30 ICICNT = 1,MAXCNT			!MAXCNT possible hts
	   HX = HX-INTERVAL
	   IF (HX.LT.HMIN) GOTO 40
30	CONTINUE
	ICICNT = MAXCNT				! if fall out of loop
C
40	CONTINUE
C
C.Strategy: If first ICIBUF location is null, this XY is the first
C	If this XY = last XY in buffer, ignore XY since we have 
C  	coincident points on adjacent triangles.
C	If different, see if this point is the start or end of a line
C	If start, then 'New Feature' out all previous points 		
C	If end,   then add XY to buffer (since previous XY was the 
C	beginning of the line).
C
C....increment INDEX to first available location in ICIBUF
	INDEX = 1  	
	DO 50 INDEX = 1,MAXSTR
	   IF (ICIBUF(ICICNT,1,INDEX).EQ.NUL) GOTO 60
50	CONTINUE
	OFLOW =.TRUE.				!error full buffer
C
60	CONTINUE
C
C.....if first location is empty, this XY is first point to put in
	IF (INDEX.EQ.1) THEN
	   ICIBUF(ICICNT,1,1) = X
	   ICIBUF(ICICNT,2,1) = Y
	   LNTHICK(ICICNT)    = LINE		! set major/minor
	   GOTO 90				! done
	ENDIF

C..... see if new point is coincident with last ( adjacent triangles)
	IF( (ICIBUF(ICICNT,1,INDEX-1).EQ.X).AND.
     &      (ICIBUF(ICICNT,2,INDEX-1).EQ.Y) ) GOTO 90     !skip pt
C
C..... If IPEN indicates that the line 
C..... between the triangle vertices is starting, flush old string 
C..... as long as it contains at least two points. (Occasionally a
C..... single point is generated on an imaginary triangle). 
C
	IF (IPEN.EQ.1) THEN			!is start of line
	   IF (INDEX.GT.2)  CALL ICINWFT(ICICNT,INDEX-1,ZVAL,OFLOW)
	   IF (OFLOW) GOTO 90			! run out of space
	   DO 70 I = 1,INDEX			! NUL out the buffer
	      ICIBUF(ICICNT,1,I) = NUL
70	   CONTINUE
	   ICIBUF(ICICNT,1,1) = X		!put at buffer start
	   ICIBUF(ICICNT,2,1) = Y
	   LNTHICK(ICICNT)    = LINE		!install contour type
C	
	ELSE					! end of line
	   ICIBUF(ICICNT,1,INDEX) = X		! add xy to Buffer
	   ICIBUF(ICICNT,2,INDEX) = Y
	   IF (INDEX.EQ.MAXSTR) THEN
	      CALL ICINWFT(ICICNT,INDEX,OFLOW) 	!flush full buffer
	      IF (OFLOW) GOTO 90		!run out of space 
	      DO 80 I = 1,MAXSTR		!NUL out the buffer
	         ICIBUF(ICICNT,1,I) = NUL			
80	      CONTINUE
	   ENDIF
	ENDIF
90	RETURN
	END
