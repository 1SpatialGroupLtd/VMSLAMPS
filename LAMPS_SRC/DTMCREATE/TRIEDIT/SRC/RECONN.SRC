C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1989-01-26 13:58:58.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE RECONN(NEWN,NAY,NOLD)
C
***	MODULE	RECONN
***	IDENT	07DE87
C
C Copyright Laser-Scan Laboratories Limited, Cambridge, England.
C
CMOD	Converted for TRIEDIT			TJH	07-Dec-1987
CMOD	NTEM dimensioned to NTMSIZ via DIMS.PAR	 DM	05-Jul-1984
CMOD	Messages standardised			 DM	29-May-1984
C	Standardised				TJH 	25-May-1984
C
C Disconnect node NOLD from its fellow neighbours list (NAY), and
C reconnect the list to node NEWN.
C
	INCLUDE 'LSL$DTMCREATESYS:MESPAR.PAR'
	INCLUDE 'LSL$DTMCREATESYS:MESSAGE.CMN'
	INCLUDE 'LSL$CMNTRIEDIT:TRIEDITMSG.PAR'
	INCLUDE 'LSL$CMNTRIEDIT:DIMS.PAR'
C
	DIMENSION LIST(NTMSIZ)
C
C ......................................................................
C
C Get fellow neighbours list
	CALL GETNAY(NAY,LIST,NTMSIZ,NUM)
C
C Find NOLD in the list and substitute NEWN. It may occur twice if
C it is in the first position and this is not an imaginary node
	MARK=0
	DO 10 I=1,NUM
	   IF (LIST(I).NE.NOLD) GOTO 10
	   LIST(I)=NEWN
	   MARK=1
C
C Can give up now if this change was not the first neighbour
C in list
	   IF (I.NE.1) GOTO 20
10	CONTINUE
C
C Check for at least one change having been made
C 'NOLD has not been found' case is not possible (?)
	IF (MARK.NE.1) THEN
	   CALL LSL_GETMSG(TRIEDIT__NOLD,MESSAGE,MESLEN)
	   CALL ALARMS(MESSAGE(:MESLEN))
	ENDIF
C
C Put list for NAY back in storage in its altered form
20	CALL PUTNAY(NAY,LIST,NTMSIZ,NUM)
	RETURN
	END
