C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1989-01-26 14:03:48.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE TRKBAL(XL,YL,X,Y,KEY)
C
***	MODULE	TRKBAL
***	IDENT	07DE87
C
C Copyright Laser-Scan Laboratories Limited, Cambridge, England.
C
CMOD	Converted for TRIEDIT			TJH	07-Dec-1987
CMOD	Turn off alpha plane when cursor is up	 DM	04-Jul-1984
CMOD	Concept of a master point 'M' added	 DM	18-Jul-1984
CMOD	Returns the 'key' pressed as 'P' or 'E'	 DM	09-Jul-1984
C	Standardised 				 DM	25-May-1984
C
	INTEGER	  KEY
	REAL	  XL,YL,X,Y
C
	INCLUDE 'LSL$CMNTRIEDIT:IDXPAR.CMN'
	INCLUDE '($SSDEF)'
C
	INTEGER	  BITS		! bitwise-encoded flags for FBs
	INTEGER	  FBEFN		! function button event flag number
	INTEGER	  MASK    	! event flag mask
	INTEGER	  TBEFN   	! tracker ball event flag number
C
C functions:
	INTEGER	  SYS$CLREF
	INTEGER	  SYS$WFLOR
C
C ......................................................................
C
C ... enable the tracker ball and function buttons, and find out what he
C ... he wants to do now.
	CALL VSTBON
	FBEFN=IDFBEF			! get the event flags
	TBEFN=IDTBEF
	MASK=IBSET(0,MOD(FBEFN,32)).OR.IBSET(0,MOD(TBEFN,32))
	CALL VSCURS(1)			! put up the cursor
	CALL VSALFC			! turn off the alpha plane
	CALL VSCSWT(XL,YL)  		! go to last position
	CALL SYS$CLREF(%VAL(FBEFN))	! clear FB event flag
	X=XL
	Y=YL
	CALL VSFBW4(14)			! light FBs 2, 3 and 4
C
C ... service the tracker ball, waiting for a function button press.
10	CALL SYS$CLREF(%VAL(TBEFN))	! clear TB event flag
	CALL SYS$WFLOR(%VAL(FBEFN),%VAL(MASK)) ! wait ...
	IF (SYS$CLREF(%VAL(FBEFN)).EQ.SS$_WASSET) GO TO 20
	CALL VSTBRD(XA,YA) 		! no FB - get TB shift
	X=X+XA
	Y=Y+YA
	CALL VSCSWT(X,Y)
	GO TO 10			! keep looking for an FB
C
C ... function button pressed - is it a valid one ?
20	CALL VSFBR4(BITS)
	IF ((BITS.AND.2).EQ.2) THEN
	   KEY='P'			! FB 2 ==> 'point'
	ELSEIF ((BITS.AND.4).EQ.4) THEN
	   KEY='M'			! FB 3 ==> 'master point'
	ELSEIF ((BITS.AND.8).EQ.8) THEN
	   KEY='E'			! FB 4 ==> 'end point'
	ELSE
	   GO TO 10			! FB 1 is ignored
	ENDIF
	CALL VSCURS(0)			! turn off cursor ...
	CALL VSALOF			! and alpha plane (again !!)
	CALL VSFBW4(0)			! extinguish the FBs
	CALL VSTBOF			! turn off tracker ball
	RETURN
	END	
