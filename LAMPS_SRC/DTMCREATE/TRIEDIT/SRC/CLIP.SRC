C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1989-01-26 12:23:34.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE CLIP(IX1,IY1,IX2,IY2,ISIG)
C
***	MODULE	CLIP
***	IDENT 07DE87
C
C	Copyright Laser-Scan Laboratories Ltd., Cambridge, England
C
CMOD	Converted for TRIEDIT			TJH	07-Dec-1987
C	Standardised				TJH 	25-May-1984
C
C......Clip routine to clip a line inside the present window boundary.
C......the incoming line extends from IX1,IY1 to IX2,IY2, and the
C......window boundary is defined by the X and Y corner limits
C......JSC to JFC and JSR to JFR (these values are stored in /CONTR/.
C......ISIG indicates the result of the clipping operation. ISIG=+1
C......indicates whole line is inside the area, ISIG=0 indicates whole
C......line lies outside the area, and ISIG=-1 indicates partly in and
C......partly out of the area. On exit, for the ISIG=-1 case IX1,IY1
C......and/or IX2,IY2 are given their clipped values.
C
	INCLUDE 'LSL$CMNTRIEDIT:CONTR.CMN'
C
C ......................................................................
C
	ISIG=1
	IPERM=0
	J=0
	ID2=ICODE(IX2,IY2)
	GOTO 80
10	IF(ID1+ID2.EQ.20000)GOTO 100
	CALL IAND(ID1,ID2,IPOS)
	IF(IPOS.NE.0)GOTO 90
	ISIG=-1
	IF(ID1.NE.10000)GOTO 30
20	IPERM=IPERM+1
	I=IX1
	IX1=IX2
	IX2=I
	I=IY1
	IY1=IY2
	IY2=I
	I=ID1
	ID1=ID2
	ID2=I
	IF(J.EQ.1)RETURN
30	CALL IAND(ID1,1111,IPOS)
	GOTO(70,60,50,40),IPOS
40	IY1=IY1-FLOAT(IX1-JFC)*FLOAT(IY2-IY1)/FLOAT(IX2-IX1)
	IX1=JFC
	GOTO 80
50	IY1=IY1-FLOAT(IX1-JSC)*FLOAT(IY2-IY1)/FLOAT(IX2-IX1)
	IX1=JSC
	GOTO 80
60	IX1=IX1-FLOAT(IY1-JFR)*FLOAT(IX2-IX1)/FLOAT(IY2-IY1)
	IY1=JFR
	GOTO 80
70	IX1=IX1-FLOAT(IY1-JSR)*FLOAT(IX2-IX1)/FLOAT(IY2-IY1)
	IY1=JSR
80	ID1=ICODE(IX1,IY1)
	GOTO 10
90	ISIG=0
100	J=1
	IF(MOD(IPERM,2).EQ.1)GOTO 20
	RETURN
	END

