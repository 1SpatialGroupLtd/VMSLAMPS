C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1989-01-26 13:40:32.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE HEIGHT_CMD(IX,IY)
C
***	MODULE	HEIGHT_CMD
***	IDENT	21DE87
C
C Copyright Laser-Scan Laboratories Limited, Cambridge, England.
C
C Allows user to determine the location of any point in the plot
C window, for whatever purposes he may desire.
C
	IMPLICIT NONE
C
C Arguments (in):
	INTEGER	IX,IY			! HEIGHT (screen units)
C
C W/s:
	INTEGER	I,J			! temp vars
	INTEGER	IZ			! height - integer units
	INTEGER	KOINC			! posn relative to tri. geometry
	REAL	X,Y			! point posn
	INTEGER	IXA,IYA			! HEIGHT limits (screen units)
	INTEGER	LIST(3)			! IDs of triangle vertices
	REAL	A			! temp var
C
C Parameters:
	INCLUDE 'LSL$DTMCREATESYS:MESPAR.PAR'
C
C Common blocks:
	INCLUDE 'LSL$CMNTRIEDIT:DATQ.CMN'
C
C ......................................................................
C
C First plot a small square to indicate the HEIGHT on the map has
C been recognised
	CALL NEWOBJ(6)
	CALL PLSYMB(IX,IY,7)
	CALL OUTBUF
C
C Change from screen coordinates to integer scaled coordinates
	CALL CONPOS(IXA,IYA,IX,IY)
C
C Find the triangle it is inside
	CALL GETTRY(IXA,IYA,LIST,4,KOINC)
	J=3
C Check for HEIGHT in triangle
	IF(KOINC)20,30,10
C
C Lying on an edge. Only check first two nodes for being imaginary
10	J=2
	GOTO 30
C
C Lying on a vertex. Pick up value directly
20	J=LIST(1)
	IZ=IABS(MAC(3,J))
	GOTO 50
C
C Lying inside the triangle. Check the triangle does not have
C imaginary vertices (between nodes 1 and J).
30	DO 40 I=1,J
	   IF (LIST(I).GT.LIMPOL) GOTO 40
	   CALL OUTOPT(WARNING//
     &		'Tried to calculate height in a perimeter triangle')
	   GOTO 60
40	CONTINUE
C
C Calculate a linear facet interpolation
	CALL FACET(IXA,IYA,IZ,LIST)
C
C Post the interpolation at window scaled xy
50	CALL POST(IX+10,IY,IZ,A,0)
60	RETURN
	END
