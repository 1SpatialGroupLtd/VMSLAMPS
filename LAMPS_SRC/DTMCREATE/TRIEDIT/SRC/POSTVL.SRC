	SUBROUTINE POSTVL(FIG)
C
***	MODULE	POSTVL
***	IDENT	07DE87
C
C Copyright Laser-Scan Laboratories Limited, Cambridge, England.
C
CMOD	Converted for TRIEDIT			TJH	07-Dec-1987
CMOD	Marginal cases handled better		 DM	17-Apr-1984
C	Standardised				TJH	25-May-1984
C
C POSTVL retrieves the Z value (FIG) that corresponds to contour
C (scaled) height IH, calculates an appropriate format that will
C maintain at least NSIGNF significant figures, then decomposes the
C real number obtained into the digits that need to be plotted and
C stores them in an array for use by NOTE. There are NSIG significant
C figures put into NDIG for plotting, except that any decimal point
C and trailing zeroes will be omitted. NSIGNF is number of significant
C figures to be plotted, and NODECP indicates (if NODECP is 1) that
C no decimal places are to be given. the order of characters is that
C given in FIGPLT
C
	INCLUDE 'LSL$CMNTRIEDIT:ANNOT.CMN'
C
C ......................................................................
C
C......Calculate total number field width (NTOT), number of places
C......after the decimal point (NAFT), number of digits before
C......the decimal point to be displayed (NT), and the total (NTA).
	TIG=ABS(FIG)
	IF (TIG.GT.0.0) THEN
	   IF (NODECP.EQ.1) THEN
	      TIG=ALOG10(TIG+0.5)
	   ELSE
	      TIG=ALOG10(TIG*(1.00001))
	   ENDIF
	ENDIF
	NT=1
	IF(TIG.GT.0.0)NT=TIG+1
C......How many decimal places must be displayed (NAFT)?
	NAFT=NSIGNF-NT
C......Check value of INTEG to determine whether this number of decimals
C......is to be allowed.
	IF(NODECP.EQ.1)NAFT=0
C......Check for having sufficient places available before the decimal
C......point to represent the figure properly. Set NAFT to zero if
C......more than NSIGNF are required.
	NAFT=MAX0(NAFT,0)
	NTA=NT+NAFT
	NTOT=NTA
	IF(NAFT.NE.0)NTOT=NTOT+1
	IF(FIG.LT.0.0)NTOT=NTOT+1
C......Determine size of labelling and format length parameters
	IWID=KMULT*7
	IHYT=KMULT*8
	IHT=IHYT/2
	IF(NTOT.LT.10)GOTO 10
C......Too many digits for the storage and precision available
	NTOT=9
	GOTO 20
C......Round FIG up to the format specified by NTOT/NAFT combination
10	TIG=FIG+0.1**(NAFT+1)*5.*SIGN(1.0,FIG)
C......Put error symbols into NDIG if number too large to fit space
	XPQ=10.0**NT
	IF(ABS(TIG).LT.XPQ)GOTO 40
20	DO 30 I=1,NTOT
30	NDIG(I)=3
	K=NTOT
	GOTO 100
C......Decompose the figure into its digits (including sign and decimal
C......point) - the most significant digit first
40	XFIG=ABS(TIG)
	XB=0.0
	MARK=0
	SIG=XFIG
	K=0
	DO 70 I=1,NTA
	   XPQ=XPQ*0.1
	   J=XFIG/XPQ
	   XB=J*XPQ+XB
	   XFIG=SIG-XB
	   IF(SIG.LT.1.0.AND.I.GE.NT)GOTO 50
	   IF(J.EQ.0.AND.MARK.EQ.0)GOTO 70
50	   IF(MARK.EQ.1.OR.FIG.GE.0.0)GOTO 60
C......Put minus sign into NDIG
	   K=K+1
	   NDIG(K)=1
60	   K=K+1
	   NDIG(K)=J+4
	   MARK=1
	   IF(I.NE.NT)GOTO 70
	   IF(NAFT.EQ.0)GOTO 100
C......Put in decimal point
	   K=K+1
	   NDIG(K)=2
70	CONTINUE
C......Figure now assembled in ndig, so check whether we have trailing
C......zeroes after the decimal point. If we do, they, and the point,
C......can be removed - and hence the format shortened.
	DO 80 I=1,K
	   J=K-I+1
C......Check for decimal point
	   IF(NDIG(J).EQ.2)GOTO 90
C......Check for number other than a zero
	   IF(NDIG(J).NE.4)GOTO 100
80	CONTINUE
C......Only gets here when a zero value is encountered
	J=K+1
C......Decimal point has been found, so modify K to value of J.
90	K=J-1
C......Store the number of characters to be displayed, and the format
C......length (ITEN).
100	NDIG(10)=K
	ITEN=IHYT*(K+K/4+2)
	RETURN
	END	
