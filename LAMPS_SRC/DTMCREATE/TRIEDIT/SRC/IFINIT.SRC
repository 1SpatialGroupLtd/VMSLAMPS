C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1992-03-27 12:59:54.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL FUNCTION IFINIT(TITLE,LUN)
C
***	MODULE	IFINIT
***	IDENT	27MR92
C
C Copyright Laser Scan Laboratories Ltd., Cambridge, England
C
CMOD	Converted for TRIEDIT, made a function		TJH  07-Dec-1987
CMOD	End overlay address added 			TJH  26-Feb-1986
C 	Modified for Panacea from R. Fairbairns MCE dtm 
C	stuff.						TJH  29-May-1984
C
C Function to start up an IFF output file. Returns LSL__NORMAL if all
C is well.

	IMPLICIT NONE
C
C arguments:
	CHARACTER*(*)	TITLE		! the title for the IFF
	INTEGER		LUN
C
C sizes of arrays:
	INTEGER*2	 MHLEN
	PARAMETER	(MHLEN = 350)	! map header length
C
C preset workspace:
	INTEGER*2       I		! tmp. variable
	INTEGER*2	MAPHED(MHLEN)	! map header
	DATA		MAPHED/350*0/
	REAL		CCARR(2,10)	! calib coeffs
C
C presets:
	DATA		CCARR/0.0,1.0,8*0.0,
     &			      2*0.0,1.0,7*0.0/
C
C
C Functions:
	INTEGER		SIGCHS
C
C W/s
	INTEGER*2	ILUN

C
C Parameters:
	INCLUDE 'LSL$DTMCREATESYS:MESPAR.PAR'
	INCLUDE	'LSL$CMNTRIEDIT:TRIEDITMSG.PAR'
	INCLUDE 'LSL$CMNLSL:LSLLIBMSG.PAR'
C
C Common:
	INCLUDE 'LSL$CMNLSL:EXPC.CMN'
	INCLUDE 'LSL$CMNIFF:IFFHAN.CMN'
	INCLUDE 'LSL$CMNIFF:MD2DES.CMN'
	INCLUDE 'LSL$CMNTRIEDIT:COMMAND.CMN'
	INCLUDE 'LSL$CMNTRIEDIT:RCONVI.CMN'
	INCLUDE 'LSL$CMNTRIEDIT:IFCTRL.CMN'
	INCLUDE 'LSL$DTMCREATESYS:MESSAGE.CMN'
	INCLUDE 'LSL$DTMCREATESYS:DTMJPI.CMN'
C
C ......................................................................
C
	IFINIT=.TRUE.
	ILUN=LUN		! cvt long to word
C start the beast up
	CALL IFFERM(.FALSE.) 	! turn IFFLIB error reporting off
	CALL IFFOPN(ILUN,TITLE)
	IF (IERCD.EQ.0) THEN
	   CALL IFFRWD
	   CALL SCNCLR		! clear the screen
	   CALL OUTOPT(' ')
	   CALL EXPAND('IFF file %S opened for write', 
     &		TITLE(1:SIGCHS(TITLE)))
	   CALL OUTOPT(EXPDSC)
	ELSE
	   CALL OUTOPT(ERROR//'opening IFF file')
	   CALL LSL_GETMSG(LSL__IFFCREATE,MESSAGE,MESLEN)
	   CALL EXPAND('%'//MESSAGE(1:MESLEN),TITLE(1:SIGCHS(TITLE)))
	   CALL OUTOPT(EXPDSC)
	   CALL IFFERM(.TRUE.) 	! turn IFFLIB error reporting back on
	   CALL LSL_WAIT(2,2)	! wait for 2 secs.
	   IFINIT=.FALSE.
	   GOTO 10
	ENDIF
C
C put the standard stuff in
	CALL IFFRA(RANGE)
	CALL IFFHI
	CALL IFFMH(MAPHED, MHLEN)
C
C Set the MD flag to say that we have a type 2 Map Descriptor and
C put the origin offset into the OO field of the MD
	MATV2=2
	MD2LOC(1)=VMIN(1)
	MD2LOC(2)=VMIN(2)
	CALL IFFMD(MD2ARR, MD2LEN)
C
C Make a suitable NS entry
	I=INDEX(IMAGNAME,']')
	CALL EXPAND('Created by %S using TRIEDIT',USERNAME(1:USERLEN))
	CALL IFFNS(EXPBUF)
	CALL IFFCC(CCARR)
	CALL IFFCP(CPARR)
C
C Record position of NO
	LPOSNO=LPOSE
	CALL IFFNO(LAYER,0,0)
C
C put markers in DRCTRL
	INFT = .FALSE.		! not in a feature
	FTNUM = 0		! no features yet
	NIFPTS = 0		! no points yet
	VRTPT = 0		! (and none buffered)
10	RETURN
	END
