C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1989-01-26 12:35:56.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE GETNAY(NOD,NTEM,LAX,NUM)
C
***	MODULE	GETNAY
***	IDENT	07DE87
C
C Copyright Laser-Scan Laboratories Limited, Cambridge, England.
C
CMOD	Converted for TRIEDIT			TJH	07-Dec-1987
CMOD	IFREES elements reversed for speed	TJH	08-Oct-1985
CMOD    NTEM dimensioned to NTMSIZ via DIMS.PAR  DM     05-Jul-1984
CMOD	TEXTOT replaced by OUTOPT		 DM	03-Jul-1984
CMOD	More efficient random reads		 DM	11-Jun-1984
CMOD	Inefficient NTEM(LAX) now NTEM(50)	 DM	06-Jun-1984
CMOD    Loops indented, tidied  		TJH     05-Jun-1984
CMOD	NAYB now in MAC				 DM	29-May-1984
C	Standardised				TJH	25-May-1984
C
C Get the neighbours of a node (NOD) from storage, put them in
C NTEM. There are NUM of them, and LAX room for them in NTEM.
C
	IMPLICIT NONE
C
C Parameters:
	INCLUDE 'LSL$CMNTRIEDIT:DIMS.PAR'
	INCLUDE 'LSL$CMNTRIEDIT:TRIEDITMSG.PAR'
C
C Arguments:
	INTEGER	NOD		! current node
	INTEGER NTEM(NTMSIZ)	! list of its neighbours
	INTEGER	LAX		! available space for them in NTEM
	INTEGER	NUM		! number of neighbours found
C
C Common:
	INCLUDE 'LSL$CMNTRIEDIT:DATQ.CMN'
	INCLUDE 'LSL$DTMCREATESYS:IOLUNS.CMN'
	INCLUDE 'LSL$DTMCREATESYS:MESSAGE.CMN'
C
C W/s
	INTEGER I,J,L,M		! temp vars
	INTEGER NTEM2(0:10)	! for efficient reading	
	INTEGER	LREC		! record number
	INTEGER	NBLK		! number of groups of nodes to read
	INTEGER	LOFF		! offset of data in disk file
C
C ......................................................................
C
	LREC=IABS(MAC(5,NOD))
	IF (LREC.LE.1.OR.LREC.GT.NMAX) THEN
	   CALL LSL_GETMSG(TRIEDIT__UNRECREC,MESSAGE,MESLEN)
	   CALL ALARMS(1,0,MESSAGE(:MESLEN))
	ENDIF
C
C Read up to LAX/10 nodes in groups of ten nodes
	NBLK=LAX/10
	J=-9
	DO 30 I=1,NBLK
	   J=J + 10
C
C Check whether this record is stored in memory or in the disk file
	   IF (LREC.LE.NFREES) THEN
C
C In memory file space, so pick it up
	      M=0
	      DO 10 L=J,J+9
	         M=M + 1
	         NTEM(L)=IFREES(M,LREC)
10	      CONTINUE
	      M=IFREES(11,LREC)
	   ELSE
C
C In disk file space, so get offset, and pick it up
	      LOFF=LREC-NFREES
	      READ (LGC2,REC=LOFF,ERR=40) NTEM2
	      DO 20 L=0,9
	         NTEM(J+L)=NTEM2(L)
20	      CONTINUE
	      M=NTEM2(10)
	   ENDIF
C
C For both memory and disk space files, check for next record
	   IF (M.GT.0) THEN
C
C Get number of neighbours
	      NUM=(I-1)*10 + M
	      GO TO 50
	   ELSE
	      LREC=IABS(M)
	   ENDIF
30	CONTINUE
C
C ......................................................................
C			E R R O R S
C Only reach here if more than LAX neighbours in file for node NOD
	CALL LSL_GETMSG(TRIEDIT__TOMNYNEIB,MESSAGE,MESLEN)
	CALL ALARMS(1,0,MESSAGE(:MESLEN)//' - GETNAY')
C
C Error in random file read
40	CALL ERRSNS(,I,J)
	IF (J.EQ.0) J=I
	CALL OUTOPT(' ')
	CALL LSL_GETMSG(TRIEDIT__RANDRD,MESSAGE,MESLEN)
	CALL ALARMS(1,0,MESSAGE(:MESLEN)//' - GETNAY')
	CALL LSL_GETMSG(J,MESSAGE,MESLEN)
	J=INDEX(MESSAGE,'!') - 1		! (ignore any FAO stuff)
	IF (J.LE.0) J=I
	CALL ALARMS(1,0,MESSAGE(:J))		! close down & exit
C
50	RETURN
	END
