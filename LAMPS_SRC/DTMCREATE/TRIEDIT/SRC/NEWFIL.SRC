C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1992-03-27 12:59:48.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL FUNCTION NEWFIL(LUN,ITLE,GOTNAM,IFORM,IREAD,LETOUT)
C
***	MODULE	NEWFIL
***	IDENT	27MR92
C
C Copyright Laser-Scan Laboratories Limited, Cambridge, England.
C
CMOD	Converted for TRIEDIT			TJH	07-Dec-1987
CMOD	TEXTIN returns an EOF argument		TJH	12-Aug-1986
CMOD	TEXT arg. to OUTOPT now has explicit
C	length					TJH	05-Aug-1986
CMOD    Made logical function			TJH	14-Dec-1984
CMOD	When LETOUT not used a 3 sec. wait added to
CMOD	allow user to read the message!		TJH 	07-Dec-1984
CMOD    LETOUT option added to surpress use of
CMOD	ALARMS letout option on startup failure TJH     06-Dec-1984
CMOD	TEXTOT(,1) replaced by OUTOPT		 DM	03-Jul-1984
CMOD	5th arg added				 DM	06-Jun-1984
C	Standardised 				 DM	25-May-1984
C
C Set up new files as necessary, always asking for name and
C extension, unless GOTNAM is 1 in which case ITLE already contains
C the desired file name.
C LUN is logical unit number for the file to be opened, GOTNAM is
C 0 if a file name has not yet been read, and 1 if it has been,
C ITLE a character string holding the file name (up to 40 chars)
C IFORM is 1 for formatted, 0 for unformatted (binary).
C
C Function returns .TRUE. on failure
C
	INTEGER LUN
	CHARACTER*(*) ITLE
	INTEGER GOTNAM			! 1 ==> got file name in ITLE
	INTEGER IFORM			! 1 ==> formatted
	INTEGER IREAD			! 1 ==> open for read
	INTEGER LETOUT			! 1 ==> use ALARMS if failure
C					! 0 ==> call exit on failure
C					!-1 ==> just return on failure
C				
	INCLUDE 'LSL$DTMCREATESYS:MESPAR.PAR'
C
	INCLUDE 'LSL$CMNTRIEDIT:IFOP.CMN'
	INCLUDE 'LSL$DTMCREATESYS:IOLUNS.CMN'
	INCLUDE 'LSL$DTMCREATESYS:MESSAGE.CMN'
C
	CHARACTER*12 TYPE,STAT
	LOGICAL	EOF			! end of file detected?
	INTEGER	I,J,OK
C
C ......................................................................
C
	NEWFIL=.FALSE.			! assume sucess
	IF (IOPEN(LUN).NE.0) CALL ENDIT(LUN)
10	IF (GOTNAM.NE.1) THEN
	   CALL TEXTOT('File-spec? ',0)
	   CALL TEXTIN(ITLE,EOF)
	   CALL LENGTH(ITLE,I)
	   IF (I.EQ.0) GOTO 10
	ENDIF
	IF (IFORM.EQ.1) THEN
	   TYPE='FORMATTED'
	ELSE
	   TYPE='UNFORMATTED'
	ENDIF
C
C check status of file name for being already created
	IF (IREAD.EQ.1) THEN
	   STAT='OLD'
	ELSE
	   STAT='NEW'
	ENDIF
	OPEN (UNIT=LUN,ERR=20,FILE=ITLE,STATUS=STAT,FORM=TYPE)
	IOPEN(LUN)=1
	MESSAGE='+++ File '
	CALL LENGTH(ITLE,ITLEN)
	IF (IREAD.EQ.1) THEN
	   MESSAGE=MESSAGE(:9)//ITLE(:ITLEN)//' opened for read'
	ELSE
	   MESSAGE=MESSAGE(:9)//ITLE(:ITLEN)//' opened for write'
	ENDIF
	CALL LENGTH(MESSAGE,I)
	CALL OUTOPT(MESSAGE(:I))
	RETURN				! successful return
C
C fatal error
20	NEWFIL=.TRUE.			! flag our miserable failure
	IF (ITLEN.EQ.0) GOTO 30	! if null filename return
	CALL ERRSNS(,I,J)
	IF (J.EQ.0) J=I
	CALL OUTOPT(' ')
	MESSAGE=ERROR//'opening file '
	CALL LENGTH(MESSAGE,I)
	IF (IREAD.EQ.1) THEN
	   MESSAGE=MESSAGE(:I+1)//ITLE(:ITLEN)//' for input'
	ELSE
	   MESSAGE=MESSAGE(:I+1)//ITLE(:ITLEN)//' for output'
	ENDIF
	CALL OUTOPT(MESSAGE)
	CALL LSL_GETMSG(J,MESSAGE,I)		! what went wrong
	J=INDEX(MESSAGE,'!') - 1		! (ignore any FAO stuff)
	IF (J.LE.0) J=I
	IF (LETOUT.EQ.1) THEN			! tell him why, 
	   CALL ALARMS(1,0,MESSAGE(:J))	! and offer SAVE option
	ELSE
	   CALL OUTOPT(MESSAGE(:J))		! just tell him why
	   CALL LSL_WAIT(3,2)			! 3 secs. to read msg.
	   IF (LETOUT.NE.-1) CALL LSL_EXIT(OK)	! and exit
	ENDIF
30	RETURN					! LETOUT must be -1
	END
