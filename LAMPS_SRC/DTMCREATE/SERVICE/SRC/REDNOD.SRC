C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1990-12-20 11:56:18.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE REDNOD(LUNA,NAY,N,IERR)
C
***	MODULE	REDNOD
***	IDENT	31MY85
C
C	Copyright Laser-Scan Laboratories Ltd., Cambridge, England
C
C	Standardised				TJH	31-May-1985
C
C Read through the node/neighbour file. If IERR is -1 on entry
C clear the buffer. Set IERR to 0 on exit unless an error has
C occurred. NBUF is unused data position marker for buffer, NSIZE
C is the size of the buffer, and the buffer is NODS. N numbers
C are needed from the buffer, and should be put into NAY.
C
	INCLUDE 'LSL$DTMCREATESYS:GRIDPARAMS.PAR'
	INCLUDE 'LSL$DTMCREATESYS:NODBUF.CMN'
	INCLUDE 'LSL$DTMCREATESYS:IOLUNS.CMN'
	INCLUDE 'LSL$DTMCREATESYS:MESSAGE.CMN'
C
	DIMENSION NAY(NTMSIZ)
C
	INCLUDE '($RMSDEF)/NOLIST'
C
C Workspace:
	LOGICAL 	OK	! function return
C
C Function:
	LOGICAL RDUNF		! efficient unformatted Fortran read
C
C ......................................................................
C
C Check for first time command.
	IF(IERR.EQ.-1)NBUF=1
	NUM=0
C
C Is buffer empty?
  101	IF(NBUF.NE.1)GOTO 103
C
C Yes, get a dollop from the binary record file
	IERR=1
	OK=RDUNF(LUNA,NODS,NSIZE)
	IF (.NOT.OK) THEN
	   IF (OK.EQ.RMS$_EOF) GO TO 104	! EOF ?
	   CALL EXPAND('*** ERROR - Error reading .NOD file')
	   CALL TXTOUT(.TRUE.)
	   CALL LSL_GETMSG(OK,MESSAGE,I)
	   MESLEN=INDEX(MESSAGE,'!') - 1	! (ignore any FAO stuff)
	   IF (MESLEN.LE.0) MESLEN=I
	   CALL EXPAND('%S',MESSAGE(:MESLEN))
	   CALL LSL_WAIT(3,2)			! wait for 3 seconds
	   CALL ALARMS(MESSAGE(:MESLEN))
	ENDIF
C
C Numbers now available, how many numbers are still required?
  103	IERR=0
	K=NBUF+MIN0(N-NUM,NSIZE-NBUF+1)-1
	DO 100 I=NBUF,K
	NUM=NUM+1
  100	NAY(NUM)=NODS(I)
C
C Update NBUF - marking position of first unused number in buffer
	NBUF=K+1
	IF(NBUF.GT.NSIZE)NBUF=1
C Have the n numbers been supplied yet?
	IF(NUM.NE.N)GOTO 101
C
C Yes they have - all finished
C Check no zero is present - used as filler in last record
  104	IF(NAY(N).EQ.0)IERR=1
	RETURN
	END
