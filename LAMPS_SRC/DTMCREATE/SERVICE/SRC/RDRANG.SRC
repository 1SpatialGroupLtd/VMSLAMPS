C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1987-08-06 12:42:54.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL FUNCTION RDRANG(INT1,INT2)
C
***	MODULE	RDRANG
***	IDENT	27JL87
C
C Copyright Laser Scan Laboratories Limited, Cambridge, England
C Author R.Daly
C
CMOD COLON added as optional range delimiter		TJH 27-Jul-1987
C Created.						 RD 27-Jun-1983
C
C This function returns the next range pair from a list of
C numbers. Single values return identical upper/lower limits.
C (eg. LAY 3,10:40,60 100 - 200 is returned as  3,3 / 10,40 /
C 60,60 / 100,200).
C Spaces and TABs may be used as delimiters instead of commas but
C are otherwise ignored.
C The function reads past delimiters following a range.
C
C Function returns FALSE if an error occurs.
C
	IMPLICIT NONE
C
C Arguments:
	INTEGER  INT1,INT2		! integer pairs read in.
C
C Common:
	INCLUDE 'LSL$CMNLSL:TXTC.CMN'
C
C W/s.
	INTEGER  COMMA,MINUS,COLON	! ascii constants.
	INTEGER  TEMPOS			! temporary copy of DCPTR.
	BYTE      CH			! last CHacter read.
C
C Functions.
	LOGICAL RDCHS,RDCH,RDLONG
C
C Presets.
	DATA COMMA,MINUS,COLON/44,45,58/
C
C ......................................................................
C
C Initialise.
	RDRANG=.TRUE.			! assume success
C
C Read in an integer (either single value or lower limit of a range).
	CALL BSCH
	IF (RDCHS(CH)) GOTO 1000
	IF ((CH.LT.48).OR.(CH.GT.57)) GOTO 98   ! is it a digit ?
	CALL BSCH
	IF (RDLONG(INT1)) GOTO 97
	INT2=INT1
C
C Read the delimiter.
	IF (RDCHS(CH)) GOTO 1000
	IF ((CH.GE.48).AND.(CH.LE.57)) GOTO 5
	IF (CH.EQ.COMMA) GOTO 1000
	TEMPOS=DCPTR
	IF (CH.EQ.MINUS.OR.CH.EQ.COLON) GOTO 10
5	CALL BSCH
	GOTO 1000
C
C Read in upper limit of a range.
10	IF (RDCHS(CH)) GOTO 99
	IF ((CH.GE.48).AND.(CH.LE.57)) GOTO 20
	DCPTR=TEMPOS-1		! reposition to the colon/minus sign.
	GOTO 1000
20	CALL BSCH
	IF (RDLONG(INT2)) GOTO 97
	IF (INT1.GT.INT2) GOTO 96
C
C Read the delimiter following a range.
50	IF (RDCHS(CH)) GOTO 1000
	IF (CH.EQ.COMMA) GOTO 50
	CALL BSCH
	GOTO 1000
C
C Errors.
96	CALL WRITEF('Illegal range (%N:%N)',INT1,INT2)
	GOTO 100
97	CALL WRITEF('Error reading integer value')
	GOTO 100
98	CALL WRITEF('Unexpected "%C" character found',CH)
	GOTO 100
99	CALL WRITEF('Unexpected end of line')
C
100	RDRANG=.FALSE.
1000	RETURN
C
	END
