	SUBROUTINE GINIT(XSCRNSZ,YSCRNSZ)
C
***	MODULE	GINIT
***	IDENT	25OC89
C
C Copyright Laser-Scan Laboratories Limited, Cambridge, England.
C
CMOD	WKID used consistently as now used by new
C	GKSUISLIB					TJH 25-Oct-1989
CMOD	COLOUR.DAT now DTMCREATE_COLOUR.DAT		TJH 02-Feb-1989
CMOD	S6000 option now tests logical name WKSPLL
C	and if defined opens graphics using
C	WOPWKP (parallel interface)			TJH 06-Jul-1988
CMOD	GPX option 					TJH 27-Nov-1987
CMOD	SIGMEX 6100 option added			TJH 29-Jul-1986
CMOD	Code added to disable dialog area 		TJH 29-Apr-1985
CMOD	SIGMA 7000 hardware option			TJH 17-Apr-1985
C	TEK 4*** hardware options			TJH 26-Feb-1985
C	Standardised 					 DM 02-Jul-1984
C
C	Initialise graphics device for TRIANG, TRIDER or TRIGRID
C
	IMPLICIT NONE
C
C Arguments:
	REAL XSCRNSZ,YSCRNSZ	! x and y plot size (real world units)
C
C Workspace
C
	INTEGER*4	LNMLST(4)
	INTEGER*2	LNMLSTW(8)
	EQUIVALENCE	(LNMLST,LNMLSTW)
C
	INTEGER	LASF(13)	! aspect source flags
	REAL	SIGSCL		! scaling for ARGS
	REAL	XSIZE,YSIZE	! size of sigma screen (cm)
	LOGICAL	OK		! function return
C
	REAL	XTXT,YTXT
	INTEGER	IXTXT,IYTXT
	COMMON /TXYPOS/ XTXT,YTXT,IXTXT,IYTXT! for GKS/S6100 text posn
	DATA LASF/13*1/		! aspect source flags >> "individual"
	INTEGER		IDUMMY	! dummy for GOPKS
	INTEGER*4	DCUNIT	! Units from GQMDS	
	INTEGER*4	ERRCOD
	INTEGER*2	ICHAN	! channel no.
C
C Parameters:
	INCLUDE 'LSL$DTMCREATESYS:MESPAR.PAR'
	INCLUDE 'LSL$DTMCREATESYS:GKSPAR.PAR'
	INCLUDE '($SSDEF)'
C
C Common:
	INCLUDE 'LSL$DTMCREATESYS:GRAFDEV.CMN'
	INCLUDE 'LSL$DTMCREATESYS:GKS.CMN'
	INCLUDE 'LSL$DTMCREATESYS:GRAFCS.CMN'
	INCLUDE	'($LNMDEF)/NOLIST'
C 
C Function:
C
C Function called
	LOGICAL	SYS$ASSIGN
	INTEGER	SYS$CRELNM
	LOGICAL INITEK
C
C ......................................................................
C
	IF (T4100.OR.T4010.OR.T4014.OR.S6100) THEN
	   OK=INITEK()			! assign LSL$TK
	   IF (.NOT.OK) THEN
		CALL WRITEF('%S Error assigning LSL$TK',ERROR)
		CALL LSL_PUTMSG(OK)
		CALL LSL_EXIT(OK)
	   ENDIF
	ENDIF
C
	IF (T4010.OR.T4014) THEN
	    CALL LSLTEK
	    CALL OUCH(27)			! ESC
	    CALL OUCH(12)			! FF
	    CALL FLUSH
	    CALL LSL_WAIT(1,2)
	    CALL CSIZE(4)
C
C-----------------------------------------------------------------------
C
	ELSEIF (T4100) THEN
	    CALL OUCH(27)			! ESC
	    CALL OUCH(37)			! '%'
	    CALL OUCH(33)			! '!'
	    CALL OUCH(48)			! '0' ==> CODE TEK
	    CALL FLUSH
	    CALL LSL_WAIT(1,2)
  	    CALL OUCH(27)			! ESC
	    CALL OUCH(12)			! FF
	    CALL FLUSH
	    CALL LSL_WAIT(1,2)
	    CALL ERASE
C
C Choose a suitably revolting colour for the graphics
	    CALL OUCH(27)			! ESC
	    CALL OUCH(77)			! 'M'
	    CALL OUCH(76)			! 'L'
	    CALL OUCH(56)
	    CALL FLUSH
C
C Enlarge the DIALOG area to 30 lines to get text at top of screen
	    CALL OUCH(27)			! ESC
	    CALL OUCH(76)			! 'L'
	    CALL OUCH(76)			! 'L'
	    CALL OUCH(65)			! Integer '30' lines
	    CALL OUCH(62)			! Integer '30' lines
	    CALL FLUSH
C
C Put into alpha transparency mode and move the cursor to top left
	    CALL TRANSP				
	    CALL FLUSH
C
C-----------------------------------------------------------------------
C
	ELSEIF (S7000) THEN
	   CALL VSINIT(7)
	   CALL VSALOF			! turn off alpha screen
	   CALL VSSIZE(XSIZE,YSIZE)
C
C Set up screen scaling
	   SIGSCL=MIN(XSIZE/1024.0,YSIZE/780.0)
	   CALL VSORGN(-1023.0*SIGSCL/2.0,-779.0*SIGSCL/2.0)
	   CALL VSUNIT(SIGSCL)
	   CALL VSRDSC('LSL$LOOKUP:DTMCREATE_COLOUR.DAT')
	   CALL ERASE
	   CALL VSGEN
C
C-----------------------------------------------------------------------
C
	ELSEIF (S6100) THEN
C
C Workstation ident (not used)
	  WKID=1
C
C
C Check whether logical name WKSPLL assigns to anything sensible -
C if so then use parallel interface
	IF (SYS$ASSIGN('WKSPLL',ICHAN,,)) THEN	! OK
	   CALL SYS$DASSGN(%VAL(ICHAN))	! deassign again
	   CALL WOPWKP(WKID,-1,1)	! open for parallel
	ELSE
	   CALL WOPWK(WKID,-1,1)	! open for serial
	ENDIF
C
C Set deferral state for picture
	  CALL WSDS(WKID,2,1)
C
C Set aspect source flags (1=individual ie not "bundled")
	  CALL WSASF(LASF)
C
C Switch alpha screen off
	  CALL WSVISA(.FALSE.)
C
C Switch graphics screen on
	  CALL WSVISG(.TRUE.)
C
C Set workstation window
	  CALL WSWKWN(WKID,0,1024,0,780)
C
C Set spacing, colour & size for text
	  CALL WSCHSP(-16)
	  CALL WSTXCI(15)
	  CALL WSCHH(20)
C
C and initial text position
	  IXTXT=20
	  IYTXT=720
C
C-----------------------------------------------------------------------
C
	ELSEIF (GPX) THEN
C
	  LNMLSTW(1) = 1
	  LNMLSTW(2) = LNM$_STRING
	  LNMLST(2) = %LOC('1')
	  LNMLST(3) = 0
	  LNMLST(4) = 0
	  OK = SYS$CRELNM(,'LNM$PROCESS','LSL$DECW_MODE',,LNMLST)
	  IF (.NOT.OK) THEN
	     CALL WRITEF('Error creating logical name LSL$DECW_MODE')
	  ENDIF
C
C Workstation ident (not used)
	  WKID=1
C
C Connection identifier
	  CONID=1001
C
C Workstation type
	  WTYPE=1
C
C Startup GKS
	  CALL GOPKS(IDUMMY)
C
C Open workstation
	  CALL GOPWK(WKID,CONID,WTYPE)	! OPen gKS workstation
	  CALL GACWK(WKID)		! and activate it
C 
C Set aspect source flags (1=individual ie not "bundled")
	  CALL GSASF(LASF)
C
C Set deferral state to output ASTI (used to be ASAP)
C and implicit regeneration SUPPRESSED
	  CALL GSDS(WTYPE,GASTI,GSUPPD)
C
C Obtain screen range
	  CALL GQMDS(WTYPE,ERRCOD,DCUNIT,
     &	             SCRNSZ(1),SCRNSZ(2),RASTSZ(1),RASTSZ(2))
C
C Calculate a screen shaped portion of NDC
 	  NDCX = 1.0
	  NDCY = SCRNSZ(2)/SCRNSZ(1)
	  IF (NDCY.GT.1.0) THEN
	     NDCX = 1.0/NDCY
	     NDCY = 1.0
	  ENDIF
C
C 
C Set window - to number of pixels
	  CALL GSWN(1,-0.5,RASTSZ(1)-0.5,-0.5,RASTSZ(2)-0.5)
C
C Map this onto a screen shaped portion of NDC
	  CALL GSVP(1,0.0,NDCX,0.0,NDCY)
C
C Set workstation window same as world viewport
	  CALL GSWKWN(WKID,0.0,NDCX,0.0,NDCY)
C
C Set workstation viewport to entire screen
	  CALL GSWKVP(WKID,0.0,SCRNSZ(1),0.0,SCRNSZ(2))
C
C Select normalisation transformation
	  CALL GSELNT(1)
C
C Select colour table to be used
	  CALL LSG_SET_LUT(WKID,'LSL$LOOKUP:DTMCREATE_COLOUR.DAT')
C
C Set initial polyline colour index
	  CALL GSPLCI(2)
C
C Set spacing, colour & size for text
	  CALL GSCHSP(-16)
	  CALL GSTXCI(15)
	  CALL GSCHH(30)
C
C and initial text position
	  XTXT=20.0
	  YTXT=720.0
	ENDIF
C
C Use only graphics screen unless GPX  - where we use a vt220 window as
C well so can scale plot to fit whole screen
	IF (GPX) THEN
	   SCALE=AMIN1(RASTSZ(1)*0.95/XSCRNSZ,RASTSZ(2)*0.95/YSCRNSZ)
	ELSE
	   SCALE=AMIN1(1010.0/XSCRNSZ,700.0/YSCRNSZ)
	   CRT=.FALSE.		! disable any CRT based messages
	ENDIF
C
C Flag that graphics device now active
	GONOFF=.TRUE.
	RETURN
	END
C
C=======================================================================
C
	SUBROUTINE FINIT
C
***	MODULE	FINIT
***	IDENT	29JL86
C
C Copyright Laser-Scan Laboratories Limited, Cambridge, England.
C
C	SIGMEX 6100 hardware option		TJH	29-Jul-1986
C	SIGMA 7000 hardware option		TJH	17-Apr-1985
C	TEK 4*** hardware options		TJH	26-Feb-1985
C	Standardised 				 DM	02-Jul-1984
C
C
	INCLUDE 'LSL$DTMCREATESYS:GRAFDEV.CMN'
C
C ......................................................................
C
C
C Wait for 2 seconds so we can see the finished result!
	CALL LSL_WAIT(2,2)
	IF (T4010.OR.T4014) THEN
	    CALL OUTBUF
	    CALL OUCH(31)			! US
	    CALL LSL_WAIT(1,2)
	    CALL LSLWSP
	ELSEIF (T4100) THEN
	    CALL OUTBUF
	    CALL LSL_WAIT(1,2)
C
C Re-ENABLE dialog area 
	    CALL OUCH(27)			! ESC
	    CALL OUCH(75)			! 'K'
	    CALL OUCH(65)			! 'A'
	    CALL OUCH(49)			! '1'
	    CALL FLUSH
C
C and put TEK into EDIT code
	    CALL OUCH(27)			! ESC
	    CALL OUCH(37)			! '%'
	    CALL OUCH(33)			! '!'
	    CALL OUCH(49)			! '2' ==> CODE EDIT
	    CALL FLUSH
	ELSEIF (S7000) THEN
	    CALL VSALON				! restore alpha plane
	    CALL VSINIT(0)			! & switch off graphics
	ELSEIF (S6100) THEN
	    WKID=1				! workstation ident
	    CALL WSVISA(.TRUE.)			! restore alpha screen
	    CALL WCLWK(WKID)			! close workstation
	ELSEIF (GPX) THEN
	    WKID=1				! workstation ident
	    CALL GCLWK(WKID)			! close workstation
	    CALL GCLKS				! close down GKS
	ENDIF
	RETURN
	END
C
C=======================================================================
C
	SUBROUTINE LINTYP(I)
C
***	MODULE	LINTYP
***	IDENT	17AP85
C
C Copyright Laser-Scan Laboratories Limited, Cambridge, England.
C
C	SIGMA 7000 hardware option		TJH	17-Apr-1985
C	Standardised 				 DM	02-Jul-1984
C
	INCLUDE 'LSL$DTMCREATESYS:GRAFDEV.CMN'
C
C ......................................................................
C
	IF (T4010.OR.T4014.OR.T4100) THEN
	    CALL OUCH(27)			! ESC
	    CALL OUCH(96+I)
	ELSEIF (S7000) THEN
	    CALL VSCOL(2)			! pretty red
	ENDIF
	RETURN
	END
C
C=======================================================================
C
	SUBROUTINE ANMODE
C
***	MODULE	ANMODE
***	IDENT	17AP85
C
C Copyright Laser-Scan Laboratories Limited, Cambridge, England.
C
C	Standardised 				 DM	02-Jul-1984
C
C ......................................................................
C
	CALL OUCH(31)			! US
	RETURN
	END
C
C=======================================================================
C
	SUBROUTINE TRANSP
C
***	MODULE	TRANSP
***	IDENT	17AP85
C
C Copyright Laser-Scan Laboratories Limited, Cambridge, England.
C
C	SIGMA 7000 hardware option		TJH	17-Apr-1985
C	Standardised 				 DM	02-Jul-1984
C
C Leave ANMODE cursor at top left of screen for text writing.
C
	INCLUDE 'LSL$DTMCREATESYS:GRAFDEV.CMN'
C
C ......................................................................
C
	IF (T4010.OR.T4014) THEN
	    CALL ANMODE
	ELSEIF (T4100) THEN
	    CALL MOVABS(0,755)
	    CALL ANMODE
	ELSEIF (S7000) THEN
	    CALL VSMTO(0.0,785.0)
	ENDIF
	RETURN
	END
C
C=======================================================================
C
	SUBROUTINE CSIZE(I)
C
***	MODULE	CSIZE
***	IDENT	17AP85
C
C Copyright Laser-Scan Laboratories Limited, Cambridge, England.
C
C	SIGMA 7000 hardware option		TJH	17-Apr-1985
C	Standardised 				 DM	02-Jul-1984
C
C Set 4014 character size (1 to 4)
C
	INCLUDE 'LSL$DTMCREATESYS:GRAFDEV.CMN'

C ......................................................................
C
	IF (T4010.OR.T4014) THEN
	    CALL OUCH(27)			! ESC
	    CALL OUCH(55+I)
	ENDIF
	RETURN
	END
C
C=======================================================================
C
	SUBROUTINE BELL
C
***	MODULE	BELL
***	IDENT	17AP85
C
C Copyright Laser-Scan Laboratories Limited, Cambridge, England.
C
C	Standardised 				 DM	02-Jul-1984
C
C ......................................................................
C
	CALL OUCH(7)
	RETURN
	END
C
C=======================================================================
C
	SUBROUTINE GINPUT(IXL,IYL,ICHAR,IX,IY)
C
***	MODULE	GINPUT
***	IDENT	17AP85
C
C Copyright Laser-Scan Laboratories Limited, Cambridge, England.
C
CMOD	LOSECH added				 DM	03-Apr-1985
C	Standardised 				 DM	02-Jul-1984
C
C Position cursor at location IXL,IYL by sending coordinates in vector
C mode, loading the cross hair location, then send a string to switch
C on cursor and activate cross hair mode.
C
	INTEGER IPOS(5)
C
C ......................................................................
C
	CALL MOVABS(IXL,IYL)
	CALL OUCH(27)			! ESC
	CALL OUCH(26)			! SUB
	CALL OUTBUF
C......look at the keyboard, wait for 5 characters to be sent
C......that are a) the keyboard character, and b) the coordinates
	DO 100 I=1,5
	   CALL INCH(IPOS(I))
  100	CONTINUE
C......throw away any spurious terminating characters.
	CALL LOSECH
C......return the appropriate values.
	ICHAR=IPOS(1)
	IX=(IPOS(2)-32)*32+IPOS(3)-32
	IY=(IPOS(4)-32)*32+IPOS(5)-32
	RETURN
	END
C
C=======================================================================
C
	SUBROUTINE MOVABS(IX,IY)
C
***	MODULE	MOVABS
***	IDENT	30JL86
C
C Copyright Laser-Scan Laboratories Limited, Cambridge, England.
C
C	SIGMEX 6100 hardware option		TJH	30-Jul-1986
C	SIGMA 7000 hardware option		TJH	17-Apr-1985
C	Standardised 				 DM	02-Jul-1984
C
	INCLUDE 'LSL$DTMCREATESYS:GRAFCS.CMN'
	INCLUDE 'LSL$DTMCREATESYS:GRAFDEV.CMN'
C ......................................................................
C
	IF (T4010.OR.T4014.OR.T4100) THEN
	    CALL OUCH(29)			! GS
	    CALL DRWABS(IX,IY)
	ELSEIF (S6100) THEN
	    IXSEG(1)=IX
	    IYSEG(1)=IY
	ELSEIF (GPX) THEN
	    XSEG(1)=IX
	    YSEG(1)=IY
	ELSEIF (S7000) THEN
	    CALL VSMTO(FLOAT(IX),FLOAT(IY))
	ENDIF
	RETURN
	END
C
C=======================================================================
C
	SUBROUTINE DRWABS(IX,IY)
C
***	MODULE	DRWABS
***	IDENT	30JL86
C
C Copyright Laser-Scan Laboratories Limited, Cambridge, England.
C
C	SIGMEX 6100 hardware option		TJH	30-Jul-1986
C	SIGMA 7000 hardware option		TJH	17-Apr-1985
C	Standardised 				 DM	02-Jul-1984
C
	INCLUDE 'LSL$DTMCREATESYS:GRAFCS.CMN'
	INCLUDE 'LSL$DTMCREATESYS:GRAFDEV.CMN'
C ......................................................................
C
C
	IF (T4010.OR.T4014.OR.T4100) THEN
	    CALL OUCH(32+IY/32)		! HIGH Y
	    CALL OUCH(96+MOD(IY,32))	! LOW Y
	    CALL OUCH(32+IX/32)		! HIGH X
	    CALL OUCH(64+MOD(IX,32))	! LOW X
	ELSEIF (S6100) THEN
	    IXSEG(2)=IX
	    IYSEG(2)=IY
	    CALL WPL(2,IXSEG,IYSEG)
	    IXSEG(1)=IX			! reset start posn for next time
	    IYSEG(1)=IY
	ELSEIF (GPX) THEN
	    XSEG(2)=IX
	    YSEG(2)=IY
	    CALL GPL(2,XSEG,YSEG)
	    XSEG(1)=IX			! reset start posn for next time
	    YSEG(1)=IY
	ELSEIF (S7000) THEN
	    CALL VSLTO(FLOAT(IX),FLOAT(IY))
	ENDIF
	RETURN
	END
C
C=======================================================================
C
	SUBROUTINE ERASE
C
***	MODULE	ERASE
***	IDENT	22SE86
C
C Copyright Laser-Scan Laboratories Limited, Cambridge, England.
C
C	Bug fix. VT100 controls emitted for Teks!       TJH 22-Sep-1986
C	SIGMEX 6100 hardware option			TJH 29-Jul-1986
C	SIGMA 7000 hardware option			TJH 17-Apr-1985
C	TEK 4*** hardware options			TJH 26-Feb-1985
C	Standardised 				 	 DM 02-Jul-1984
C
C
	INCLUDE 'LSL$DTMCREATESYS:GRAFDEV.CMN'
	INCLUDE 'LSL$DTMCREATESYS:GRAFCS.CMN'
C
	INTEGER	IFILSW(2),IFILNE(2)	! fill area for text erasure
	DATA    IFILSW/20,705/
	DATA    IFILNE/1024,1024/
	BYTE	CODE(7)		! ESC,[,H,ESC,[,2,J
	INTEGER XBOX(5),YBOX(5) ! for GFA
C
	DATA	CODE/27,91,72,27,91,50,74/
C
C ......................................................................
C
C......move to transparent VT100 mode
	IF (.NOT.VT100) CALL TRANSP
C......If actually on VT100 home the VT100 cursor and then erase the
C......VT100 screen
	IF (VT100) THEN
	    CALL WRITEF('%A7',CODE)
	ELSEIF (T4100) THEN
	    CALL OUCH(27)		! ESC
	    CALL OUCH(76)		! 'L'
	    CALL OUCH(90)		! 'Z'
	    CALL FLUSH
	ELSEIF (S7000) THEN
	    CALL VSCOL(0)			! select black
	    CALL VSFILL(0.0,780.0,1000.0,1000.0) ! blank out text area
	    CALL VSMTO(0.0,785.0)		! and go to text origin
	    CALL VSGEN
	ELSEIF (S6100) THEN
	    WKID=1			! workstation ID (not used)
	    ICOFL=0			! control flags (not used)
	    CALL WSFACI(0)		! set text fill area colour
	    CALL WBFA(IFILSW,IFILNE)
	    CALL WUWK(WKID,IDUMMY)	! flush buffer
	ELSEIF (GPX) THEN
	    WKID=1			! workstation ID (not used)
	    ICOFL=0			! control flags (not used)
	    CALL GSFACI(0)		! set text fill area colour
	    XBOX(1)=0
	    XBOX(2)=0
	    XBOX(3)=1024
	    XBOX(4)=1024
	    XBOX(5)=0
	    YBOX(1)=1024
	    YBOX(2)=890
	    YBOX(3)=890
	    YBOX(4)=1024
	    YBOX(4)=1024
	    CALL GFA(5,XBOX,YBOX)
	    CALL GUWK(WKID,IDUMMY)	! flush buffer
	ENDIF
	RETURN
	END
C
C=======================================================================
C
	SUBROUTINE OUTBUF
C
***	MODULE	OUTBUF
***	IDENT	29JL86
C
C Copyright Laser-Scan Laboratories Limited, Cambridge, England.
C
C	SIGMA 6100 hardware option		TJH	29-Jul-1985
C	SIGMA 7000 hardware option		TJH	17-Apr-1985
C	Standardised 				 DM	02-Jul-1984
C
	INTEGER	IDUMMY		! dummy var.
C
	INCLUDE 'LSL$DTMCREATESYS:GRAFDEV.CMN'
	INCLUDE 'LSL$DTMCREATESYS:GKS.CMN'
C
C ......................................................................
C
	IF (T4010.OR.T4014.OR.T4100) THEN
	    CALL FLUSH
	ELSEIF (S6100) THEN
	    WKID=1			! workstation ID (not used)
	    CALL WUWK(WKID,IDUMMY)
	ELSEIF (GPX) THEN
	    WKID=1			! workstation ID (not used)
	    CALL GUWK(WKID,IDUMMY)
	ELSEIF (S7000) THEN
	    CALL VSGEN
	ENDIF
	RETURN
	END
C
C=======================================================================
C
	SUBROUTINE LSLTEK
C
***	MODULE	LSLTEK
***	IDENT	17AP85
C
C Copyright Laser-Scan Laboratories Limited, Cambridge, England.
C
C	Standardised 				 DM	02-Jul-1984
C
C Send ESC=6 to put WOSP in normal TEK mode.
C
C ......................................................................
C
	CALL OUCH(27)
	CALL OUCH(61)
	CALL OUCH(54)
	RETURN
	END
C
C=======================================================================
C
	SUBROUTINE LSLWSP
C
***	MODULE	LSLWSP
***	IDENT	17AP85
C
C Copyright Laser-Scan Laboratories Limited, Cambridge, England.
C
C	Standardised 				 DM	02-Jul-1984
C
C Send ESC=4 to restore WOSP 'local terminal output' mode.
C
C ......................................................................
C
	CALL OUCH(27)
	CALL OUCH(61)
	CALL OUCH(52)
	CALL FLUSH
	RETURN
	END
C
C=======================================================================
C
	SUBROUTINE LININD(I)
C
***	MODULE	LININD
***	IDENT	25SE86
C
C Copyright Laser-Scan Laboratories Limited, Cambridge, England.
C
CMOD	Used for T4100 only			TJH     25-Sep-1986
CMOD	Colour set with [ESC] M L not L M       TJH	26-Apr-1985
C	Created					 DM	03-Apr-1985
C
C Set line colour index on a Tektronix 41XX
C
	INCLUDE 'LSL$DTMCREATESYS:GRAFDEV.CMN'
C
C ......................................................................
C
	IF (T4100) THEN
	   CALL OUCH(27)			! ESC
	   CALL OUCH(77)			! 'M'
	   CALL OUCH(76)			! 'L'
	   CALL OUCH(48+I)
	ENDIF
	RETURN
	END
C
C=======================================================================
C
	SUBROUTINE COLOUR(I,ITEXT)
C
***	MODULE	COLOUR
***	IDENT	30JL86
C
C Copyright Laser-Scan Laboratories Limited, Cambridge, England.
C
C	Created					TJH	30-Jul-1986
C
C Set colour index 
C
	LOGICAL		ITEXT	! .T. set text colour, .F. line colour
C
	INCLUDE 'LSL$DTMCREATESYS:GRAFDEV.CMN'
C
C ......................................................................
C
	IF (T4100) THEN
	  CALL LININD(I)
	ELSEIF (S6100) THEN
	  IF (ITEXT) THEN
	    CALL WSTXCI(I)
	  ELSE
	    CALL WSPLCI(I)
	  ENDIF
	ELSEIF (GPX) THEN
	  IF (ITEXT) THEN
	    CALL GSTXCI(I)
	  ELSE
	    CALL GSPLCI(I)
	  ENDIF
	ELSEIF (S7000) THEN
	  CALL VSCOL(I)
	ENDIF
	CALL OUTBUF
	RETURN
	END
C
C=======================================================================
C
	SUBROUTINE WIDTH(I)
C
***	MODULE	WIDTH
***	IDENT	30JL86
C
C Copyright Laser-Scan Laboratories Limited, Cambridge, England.
C
C	Created					TJH	30-Jul-1986
C
C Set line width for SIGMEX 6100 series
C
	INCLUDE 'LSL$DTMCREATESYS:GRAFDEV.CMN'
C
C ......................................................................
C
	IF (S6100) THEN
	  CALL WSLWSC(I)
	  CALL OUTBUF
	ELSEIF (GPX) THEN
	  CALL GSLWSC(I)
	  CALL OUTBUF
	ENDIF
	RETURN
	END
