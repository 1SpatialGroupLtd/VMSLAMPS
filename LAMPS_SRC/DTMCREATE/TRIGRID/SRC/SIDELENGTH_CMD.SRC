C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1989-01-31 12:40:04.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL FUNCTION SIDELENGTH_CMD()
C
***	MODULE	SIDELENGTH_CMD
***	IDENT	31JA89
C
C	Copyright (C), Laser-Scan Laboratories Ltd., Cambridge, England
C
CMOD	Now checks that args. are positive, non-zero	TJH 31-Jan-1989
C	Created						TJH 06-Apr-1988
C
C Function to set the DTM X and Y sidelength from the values supplied
C using the SIDELENGTH command. If argument(s) are missing the user is
C prompted
C
C Function returns .TRUE. if all is well.
C
	IMPLICIT NONE
C
C Parameters:
	INCLUDE	'LSL$DTMCREATESYS:MESPAR.PAR'
	INCLUDE	'LSL$CMNDTI:DTIPAR.PAR'
C
C Common:
	INCLUDE	'LSL$CMNLSL:CMDCOM.CMN'
	INCLUDE	'LSL$DTMCREATESYS:TRYVAR.CMN'
	INCLUDE	'LSL$DTMCREATESYS:CONTRL.CMN'
	INCLUDE	'LSL$DTMCREATESYS:DTMDET.CMN'
C
C Function:
	LOGICAL		REALIN		! reads integers from terminal
C
C W/s
	REAL		TEMP_NCOL,TEMP_NROW	! temp storage
C
C ......................................................................
C
	SIDELENGTH_CMD=.TRUE.			! assume success
C
	IF (CMDRCT.LT.1) THEN
	   IF (TTIN) THEN
	      CALL WRITEF('%S You must specify at '//
     &		'least one argument',WARNING)
	   ELSE
	      CALL WRITEF('%S You must specify at '//
     &		'least one argument',ERROR)
	   ENDIF	   
	   CALL WRITEF('For example SIDELENGTH 80.0 90.0 ')
	   IF (TTIN) THEN
	      SIDELENGTH_CMD=REALIN('X-sidelength, Y-sidelength? ')
	      IF (.NOT.SIDELENGTH_CMD) GOTO 10
	   ELSE
	      SIDELENGTH_CMD=.FALSE.
	      GOTO 10
	   ENDIF	   
	ENDIF
C
	IF (CMDRCT.EQ.1) THEN
	   IF (REALAR(1).LE.0.0) THEN
	      CALL WRITEF(ERROR//
     &		'SIDELENGTH arguments must be greater than 0.0')
	      SIDE=.FALSE.
	      SIDELENGTH_CMD=.FALSE.
	      GOTO 10
	   ENDIF
	   REALAR(2) = REALAR(1) 	! assume square DTM
	   CALL WRITEF 
     &     ('X and Y call side lengths assumed equal ( %F9.3 %F9.3 )'
     &                                           ,REALAR(1),REALAR(2))
	   SIDEX = REALAR(1)
	   SIDEY = SIDEX
	ELSE
	   IF (REALAR(1).LE.0.0.OR.REALAR(2).LE.0.0) THEN
	      CALL WRITEF(ERROR//
     &		'SIDELENGTH arguments must be greater than 0.0')
	      SIDE=.FALSE.
	      SIDELENGTH_CMD=.FALSE.
	      GOTO 10
	   ENDIF
	   SIDEX = REALAR(1)
	   SIDEY = REALAR(2)
	ENDIF
	SIDE=.TRUE.
C
C If "SIZE" had been specified then override them
	IF (GRIDEF) THEN
	   CALL WRITEF
	   CALL WRITEF('Over-riding SIZE settings')
	   CALL WRITEF
	ENDIF
C 
C If extent is set calculate number of rows and columns to cover
C  completely (possibly with some overlap) the specified area
	IF (GEOEXT) THEN
	   TEMP_NROW=(TMAX-YMIN)/SIDEY+1.5
	   TEMP_NCOL=(SMAX-XMIN)/SIDEX+1.5
	   IF (TEMP_NCOL.LT.3.OR.TEMP_NROW.LT.3) THEN
	      CALL WRITEF(WARNING//
     &        'You must have at least 3 rows and 3 columns in your DTM')
	      SIDE=.FALSE.
	      SIDELENGTH_CMD=.FALSE.
	   ELSEIF (TEMP_NCOL.GT.DTI_MAX_COLUMNS
     &			.OR.TEMP_NROW.GT.DTI_MAX_ROWS) THEN
	      CALL WRITEF(WARNING//
     &        'Maximum DTM size is %N rows and %N columns',
     &		DTI_MAX_ROWS,DTI_MAX_COLUMNS)
	      CALL WRITEF('                Either re-specify the '//
     &				'WINDOW or change the SIZE or')
	      CALL WRITEF('                SIDELENGTH.')
	      SIDE=.FALSE.
	      SIDELENGTH_CMD=.FALSE.
	   ELSE
	      NROW=TEMP_NROW
	      NCOL=TEMP_NCOL
	      XMAX=XMIN+(NCOL-1)*SIDEX
	      YMAX=YMIN+(NROW-1)*SIDEY
	      CALL WRITEF
C
C Show triangulation coverage
	      CALL SHOW_WINDOW(VMIN(1),VMAX(1),VMIN(2),VMAX(2),
     &			UNITS,GEOEXT,.TRUE.,OPNDTA)
C
C Show window
	      CALL SHOW_WINDOW(XMIN,SMAX,YMIN,TMAX,UNITS,GEOEXT,
     &			.FALSE.,OPNDTA)
	      CALL WRITEF
	      CALL WRITEF
     &        ('Which with a side length of %F9.3 in X and %F9.3 in Y',
     &                                     SIDEX,         SIDEY)
	      CALL WRITEF('gives %N rows and %N columns in the dtm',
     &            		NROW,        NCOL)
	     CALL WRITEF
	   ENDIF
	ENDIF
10	RETURN
	END
