C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1989-01-31 13:01:00.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL FUNCTION SIZE_CMD()
C
***	MODULE	SIZE_CMD
***	IDENT	31JA89
C
C	Copyright (C), Laser-Scan Laboratories Ltd., Cambridge, England
C
CMOD	Now  tests that DTM SIZE will fit DTI header	TJH 31-Jan-1989
C	Created						TJH 23-Jul-1987
C
C Function to set the DTM size from the values supplied using the SIZE
C command. If argument(s) are missing the user is prompted
C Function returns .TRUE. if all is well.
C
	IMPLICIT NONE
C
C Parameters:
	INCLUDE	'LSL$DTMCREATESYS:MESPAR.PAR'
	INCLUDE	'LSL$CMNDTI:DTIPAR.PAR'
C
C Common:
	INCLUDE	'LSL$CMNLSL:CMDCOM.CMN'
	INCLUDE	'LSL$DTMCREATESYS:CONTRL.CMN'
	INCLUDE	'LSL$DTMCREATESYS:DTMDET.CMN'
C
C Function:
	LOGICAL		LONGIN		! reads integers from terminal
C
C ......................................................................
C
	SIZE_CMD=.TRUE.			! assume success
C
	IF (CMDICT.LT.1) THEN
	   IF (TTIN) THEN
	      CALL WRITEF('%S You must specify at'//
     &		' least one argument',WARNING)
	   ELSE
	      CALL WRITEF('%S You must specify at'//
     &		' least one argument',ERROR)
	   ENDIF	   
	   CALL WRITEF('For example SIZE 80 ')
	   IF (TTIN) THEN
	      SIZE_CMD=LONGIN('Number of columns, number of rows?')
	      IF (.NOT.SIZE_CMD) GOTO 10
	   ELSE
	      SIZE_CMD=.FALSE.
	      GOTO 10
	   ENDIF	   
	ENDIF
C
	IF (CMDICT.EQ.1) THEN
	   IF (INTARG(1).LT.3) THEN
	      CALL WRITEF(WARNING//
     &        'You must have at least 3 rows and 3 columns in your DTM')
	      GOTO 10
	   ENDIF
	   INTARG(2) = INTARG(1) 	! assume square DTM
	   CALL WRITEF 
     &     ('Number of columns and rows assumed equal ( %N and %N ).'
     &                                           ,INTARG(1),INTARG(2))
	ENDIF
	IF (INTARG(1).LT.3.OR.INTARG(2).LT.3) THEN
	   CALL WRITEF(WARNING//
     &     'You must have at least 3 rows and 3 columns in your DTM')
	   GOTO 10
	ELSEIF (INTARG(1).GT.DTI_MAX_COLUMNS.OR.
     &			INTARG(2).GT.DTI_MAX_ROWS) THEN
	      CALL WRITEF(WARNING//
     &		'Maximum DTM size is %N rows and %N columns',
     &			DTI_MAX_ROWS,DTI_MAX_COLUMNS)
	      CALL WRITEF('                Please re-specify SIZE')
	   GOTO 10
	ENDIF
	NCOL=INTARG(1)
	NROW=INTARG(2)
	GRIDEF=.TRUE.
C
C If extent is set calculate sidelength
	IF (GEOEXT) THEN
	   SIDEY=(TMAX-YMIN)/(NROW-1)
	   SIDEX=(SMAX-XMIN)/(NCOL-1)
	   XMAX=XMIN+(NCOL-1)*SIDEX
	   YMAX=YMIN+(NROW-1)*SIDEY
	   SIDE = .TRUE.     		! record that side is defined
	   CALL WRITEF
	   CALL WRITEF
     &     ('DTM WINDOW is:')
	   CALL WRITEF
	   CALL WRITEF
     &   ('XMIN = %F9.3  XMAX = %F9.3  YMIN = %F9.3 YMAX = %F9.3',
     &            XMIN,          XMAX,         YMIN,        YMAX)
	   CALL WRITEF
	   CALL WRITEF 
     &	 ('Which with %N rows and %N columns in the DTM',
     &            NROW,        NCOL)
	   CALL WRITEF
     &   ('gives a side length of %F9.3 in X and %F9.3 in Y',
     &                            SIDEX,         SIDEY)
	   CALL WRITEF
	ENDIF
10	RETURN
	END
