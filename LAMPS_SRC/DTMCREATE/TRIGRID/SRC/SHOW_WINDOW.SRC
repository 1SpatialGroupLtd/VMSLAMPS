	SUBROUTINE SHOW_WINDOW(XMIN,XMAX,YMIN,YMAX,UNITS,WINSET,
     &			COVERAGE,HAD_TRI)
C
***	MODULE	SHOW_WINDOW
***	IDENT	17JA89
C
C	Copyright : Laser-Scan Laboratories, Cambridge, England
C
C Created						TJH 17-Jan-1989
C
C Routine to display triangulation window taking account of UNITS
C
	IMPLICIT NONE
C
C Arguments:
	REAL	XMIN,XMAX,YMIN,YMAX	! the window limits
	LOGICAL	UNITS			! current units
	LOGICAL	WINSET			! window set yet?
	LOGICAL	COVERAGE		! show whole triangulation
C					! coverage if .T.
	LOGICAL	HAD_TRI			! had triangulation file?
C
C W/s
	LOGICAL		IS_LATITUDE	! true if latitude
	CHARACTER*1	HEMIS		! hemisphere letter N,S,E and W
	INTEGER*4	DEGS		! degrees result
	INTEGER*4	MINS		! minutes result
	INTEGER*4	SECS		! second result
C
C ......................................................................
C
	IF (COVERAGE) THEN
	   CALL EXPAND('Window units are ')
	   IF (UNITS.EQ.2) THEN
	     CALL WRTAPP('metres')
	   ELSEIF (UNITS.EQ.3) THEN
	     CALL WRTAPP('seconds of arc')
	   ELSEIF (UNITS.EQ.4) THEN
	      CALL WRTAPP('latlong (degrees, minutes and seconds)')
	   ELSEIF (UNITS.EQ.5) THEN
	     CALL WRTAPP('projection units')
	   ENDIF
	 ENDIF
C
C Asking for window - check that the window has been set
	IF (.NOT.COVERAGE.AND..NOT.WINSET) THEN
	   CALL WRITEF('DTM WINDOW currently undefined.')
	   GOTO 999
	ENDIF
C Asking for coverage - check that the coverage has been set
	IF (COVERAGE.AND..NOT.HAD_TRI) THEN
	   CALL WRITEF('Triangulation coverage currently unknown')
	   GOTO 999
	ENDIF
C
C Show coverage or window
	   IF (UNITS.EQ.2.OR.UNITS.EQ.5) THEN	! metres or projection
	      CALL WRITEF
	      CALL EXPAND('Triangulation ')
	      IF (COVERAGE) THEN
	         CALL APPEND('coverage')
	      ELSE
	         CALL APPEND('window  ')
	      ENDIF
	      CALL WRTAPP(' SW: %F10.2 %F10.2    '//
     &	      'NE: %F10.2 %F10.2',XMIN,YMIN,XMAX,YMAX)
	   ELSEIF (UNITS.EQ.3) THEN		! seconds of arc
	      CALL WRITEF
	      CALL EXPAND('Triangulation ')
	      IF (COVERAGE) THEN
	         CALL APPEND('coverage')
	      ELSE
	         CALL APPEND('window  ')
	      ENDIF
	      CALL WRTAPP(' SW: %F10.2 %F10.2    NE: %F10.2 %F10.2',
     &	      XMIN/10.0,YMIN/10.0,XMAX/10.0,YMAX/10.0)
	   ELSEIF (UNITS.EQ.4) THEN		! latlong 
	      IS_LATITUDE=.TRUE.
	      CALL CVTANG( YMIN, IS_LATITUDE, HEMIS, DEGS, MINS, SECS )
	      CALL WRITEF
	      CALL EXPAND('Triangulation ')
	      IF (COVERAGE) THEN
	         CALL APPEND('coverage')
	      ELSE
	         CALL APPEND('window  ')
	      ENDIF
	      CALL APPEND(
     &		' SW: %P %I3 %P0%I2 %P0%I2%S',DEGS,MINS,SECS,HEMIS)
	      IS_LATITUDE=.FALSE.
	      CALL CVTANG( XMIN, IS_LATITUDE, HEMIS, DEGS, MINS, SECS )
	      CALL APPEND('  %P %I3 %P0%I2 %P0%I2%S'
     &				,DEGS,MINS,SECS,HEMIS)
	      IS_LATITUDE=.TRUE.
	      CALL CVTANG( YMAX, IS_LATITUDE, HEMIS, DEGS, MINS, SECS )
	      CALL APPEND('   NE: %P %I3 %P0%I2 %P0%I2%S'
     &				,DEGS,MINS,SECS,HEMIS)
	      IS_LATITUDE=.FALSE.
	      CALL CVTANG( XMAX, IS_LATITUDE, HEMIS, DEGS, MINS, SECS )
	      CALL WRTAPP('  %P %I3 %P0%I2 %P0%I2%S'
     &				,DEGS,MINS,SECS,HEMIS)
	      CALL WRITEF(
     &		'                      (SW: %F10.2  '//
     &		'%F10.2   NE:  %F10.2  %F10.2)',XMIN,YMIN,XMAX,YMAX)
	   ENDIF
999	RETURN
	END
