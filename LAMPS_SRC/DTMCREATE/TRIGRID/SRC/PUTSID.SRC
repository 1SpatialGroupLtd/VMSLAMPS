C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1997-03-12 16:09:26.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE PUTSID(NOD,NTEM,LAXDUM,NUM)
C
***	MODULE	PUTSID
***	IDENT	12MR97
C
C Copyright Laser-Scan Laboratories Limited, Cambridge, England.
C
C	Created from PUTNAY/GETNAY		TJH     02-Jun-1986
C
C Put the up-hill/down-hill data for neighbours of a node (NOD) 
C into storage, get them from NTEM. There are NUM of them, and 
C LAX room for them in NTEM.
C
C Split the list into groups of 10, and store in JFREES or the random
C access file, SIDFIL.TMP. We use the pointer to the start in MD(5,...)
C and all the inter-record pointers of IFREES and PANDORA.TMP for 
C guaranteed compatibility (sic!).
C
C Parameters:
	INCLUDE 'LSL$CMNTRIGRID:TRIGRIDMSG.PAR'
	INCLUDE 'LSL$DTMCREATESYS:GRIDPARAMS.PAR'
C
C Common:
	INCLUDE 'here:trigrid_DATQ.CMN'
	INCLUDE 'LSL$DTMCREATESYS:FINDIT.CMN'
	INCLUDE 'LSL$DTMCREATESYS:MESSAGE.CMN'
	INCLUDE 'LSL$DTMCREATESYS:IOLUNS.CMN'
	INCLUDE 'LSL$DTMCREATESYS:STORIT.CMN'
C
	DIMENSION NTEM(NTMSIZ)
C
	INTEGER	  I,J
	INTEGER	  ITEM2(0:10)		! for efficient reads
	INTEGER	  NTEM2(0:10)		! for efficient writes
C
C ......................................................................
C
	LREC=IABS(MD(5,NOD))
	IF (LREC.LE.1.OR.LREC.GT.NMAX) THEN
	   CALL LSL_GETMSG(TRIDER__UNRECREC,MESSAGE,MESLEN)
	   CALL ALARMS(MESSAGE(1:MESLEN)//' - PUTSID')
	ENDIF
C
C Read up to LAX/10 nodes in groups of ten nodes
	NBLK=LAX/10
	J=-9
	DO 30 I=1,NBLK
	  J=J + 10
C
C Check whether this record is stored in memory or in the disk file
	  IF (LREC.LE.NFREES) THEN
C
C ......................................................................
C		R E C O R D   I N   M E M O R Y
C
C In memory file space, so pick up the record pointers from
C IFREES to save having to manipulate the stack
	    M=IFREES(11,LREC)
C
C In memory file area
	    LA=0
	    DO 10 L=J,J+9
	      LA=LA+1
	      JFREES(LA,LREC)=NTEM(L)
10	    CONTINUE
	    JFREES(11,LREC)=M
	  ELSE
C
C ......................................................................
C		R E C O R D   I N    D I S K    F I L E
C
C If the random access file wasn't opened before, we certainly need
C it now! 
	    IF (.NOT.DISKFL) THEN    
	      OPEN(UNIT=LGC8,FILE='SIDFIL.TMP',STATUS='SCRATCH',
     &	      ACCESS='DIRECT',FORM='UNFORMATTED',RECL=11,ERR=60)
	      CALL WRITEF
     &        ('There are now too many records for memory (%N)'
     &							,LREC)
	      CALL WRITEF('Opening random access disk file.')
	      DISKFL=.TRUE.
	    ENDIF
C
C In disk file space, so get offset, and pick it up
	    LOFF=LREC-NFREES
	    READ (LGC7,REC=LOFF,ERR=40) ITEM2
	    M=ITEM2(10)
C
C Write the record out - ten neighbours, next record (or length
C of present record if +ve)
	    DO 20 L=0,9
	      NTEM2(L)=NTEM(J+L)
20          CONTINUE
	    NTEM2(10)=M
	    LOFF=LREC-NFREES
	    WRITE (LGC8,REC=LOFF,ERR=50) NTEM2
	  ENDIF
C
C For both memory and disk space files, check for next record
	  IF (M.GT.0) THEN
	    GOTO 70
	  ELSE
C
C Update the record number for the next record
	    LREC=IABS(M)
	  ENDIF
30	CONTINUE
C
C ......................................................................
C
C			E R R O R S
C
C Only reach here if more than LAX neighbours in file for node NOD
	CALL LSL_GETMSG(TRIDER__TOMNYNEIGB,MESSAGE,I)
	MESSAGE=MESSAGE(:I)//' - PUTSID'
	I=I+9
	GOTO 80
C
C Error in random file read
40	CALL LSL_GETMSG(TRIDER__RANDRD,MESSAGE,MESLEN)
	CALL EXPAND('%'//MESSAGE(:)//' - PUTSID')
	CALL TXTOUT(.TRUE.)
	GOTO 65
C
C Error during random write
50	CALL LSL_GETMSG(TRIDER__RANDWRT,MESSAGE,MESLEN)
	CALL EXPAND('%'//MESSAGE(:MESLEN)//' - PUTSID')
	CALL TXTOUT(.TRUE.)
	GOTO 65
C
C File handling errors.
60	CALL WRITEF(' ')
	CALL LSL_GETMSG(TRIGRID__OPNSCR,MESSAGE,MESLEN)
	CALL WRITEF(MESSAGE(:MESLEN)//' - SIDFIL.TMP')
65	CALL ERRSNS(,I,J)
	IF (J.EQ.0) J=I
	CALL LSL_GETMSG(J,MESSAGE,MESLEN)	! what went wrong
	I=INDEX(MESSAGE,'!') - 1		! (ignore any FAO stuff)
	IF (MESLEN.LE.0) I=MESLEN
80	CALL ALARMS(MESSAGE(:I))
C
C ......................................................................
C
C Normal termination
70	RETURN
	END
