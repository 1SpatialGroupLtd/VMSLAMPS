	LOGICAL FUNCTION SETUP()
C
***	MODULE	SETUP
***	IDENT	12MR97
C
C Copyright Laser-Scan Laboratories Limited, Cambridge, England.
C
C Ripped off from PANIC's setup			TJH     02-Jun-1986
C
C Get the node/neighbour dataset from PANIC transfer file and
C get data into memory/file.  Put neighbours into random file only
C if memory full.
C
C Returns SS$_NORMAL  if all is well
C 
	IMPLICIT NONE
C
C Parameters:
	INCLUDE 'LSL$CMNTRIGRID:TRIGRIDMSG.PAR'
	INCLUDE 'LSL$DTMCREATESYS:GRIDPARAMS.PAR'
	INCLUDE '($SSDEF)/NOLIST'
C
C Common:
	INCLUDE 'LSL$DTMCREATESYS:CONTRL.CMN'
	INCLUDE 'here:trigrid_DATQ.CMN'
	INCLUDE 'LSL$DTMCREATESYS:IOLUNS.CMN'
	INCLUDE 'LSL$DTMCREATESYS:FINDIT.CMN'
	INCLUDE 'LSL$DTMCREATESYS:MESSAGE.CMN'
	INCLUDE 'LSL$DTMCREATESYS:STORIT.CMN'
	INCLUDE 'LSL$CMNLSL:EXPC.CMN'
C
C W/s
	INTEGER	 NTEM(NTMSIZ)	! neighbour buffer
	INTEGER  I,J		! loop vars
	INTEGER  IPNT		! a node
	INTEGER	 NUMN		! number of neighbours for pt.
	INTEGER	 IERR		! for error return
C
C Functions:
	LOGICAL	SIDFIL		! calculates side of line info
C
C ......................................................................
C
	SETUP=SS$_NORMAL
C
	IF (DIAG) THEN
	   CALL FRAMED_MES(3,0)
	ENDIF
C
C Rewind the node transfer file
	REWIND LGC3
C
C......Open the random scratch file that is to hold the neighbours
C......ready for use as needed. NB: record length needs to be
C......11*(standard integer length in operation, in this one). This
C......gives the length in bytes. NB: if there is enough room in memory
C......for the data set, then the system automatically dispenses with
C......the random file. If there is not enough room im memory then the
C......whole of memory is used, and than whatever disk space is needed.
	IF (NFREES.LE.NP) THEN
	   OPEN(UNIT=LGC7,FILE='TRIGRID.TMP',STATUS='SCRATCH',
     1		ACCESS='DIRECT',FORM='UNFORMATTED',RECL=11,ERR=40)
	   DISKFL=.TRUE.
	ENDIF
C
C......Fill the stack up from 1 to NSTACK
	DO 10 I=1,NSTACK
	   ISTACK(I)=I
10	CONTINUE
C
C......Set the stack pointer to no records being used yet, starting
C......with record 2, as record 1 is used in MD(5,...) to indicate no
C......entry is present.
	IPSTCK=2
C
C......Set entry point into the structure to indicate record 1 (unused)
C......for each node
	DO 20 I=1,NMAX
	   MD(5,I)=1
20	CONTINUE
C
C......Get neighbours in for each point in turn and write a random file.
C......Complete node/neighbour list is stored in NTEM. There are NUMN
C......neighbours for point IPNT.
	IERR=-1
	IF (DIAG) THEN
	   CALL PERCENT('of memory set up',0,NP,10,-1)
	ENDIF
	DO 30 IPNT=1,NP
	   IF (DIAG) THEN
	      CALL PERCENT('of memory set up',IPNT,NP,10,0)
	   ENDIF
	   CALL REDNOD(LGC3,IPNT,1,IERR)
	   CALL REDNOD(LGC3,NUMN,1,IERR)
	   IF (NUMN.GE.NTMSIZ) THEN
	      SETUP=TRIGRID__TOMNYNEIB
	      CALL LSL_PUTMSG(SETUP,NTMSIZ)
	      GOTO 50
	   ENDIF
	   CALL REDNOD(LGC3,NTEM,NUMN,IERR)	! read neighbour record
	   CALL PUTNAY(IPNT,NTEM,NTMSIZ,NUMN)	! store them away
30	CONTINUE
	IF (DIAG) THEN
	   CALL PERCENT('of memory set up',NP,NP,10,1)
	ENDIF
C
C Generate secondary neighbour storage in JFREES/file for up-hill/
C down-hill side of line information
	IF (DIAG) THEN
	   CALL FRAMED_MES(4,0)
	ENDIF
	SETUP=SIDFIL()
	GOTO 50				! all done
C
C ......................................................................
C
C File handling errors.
40	CALL WRITEF
	SETUP=TRIGRID__OPNSCR
	CALL LSL_GETMSG(SETUP,MESSAGE,MESLEN)
	CALL WRITEF(MESSAGE(1:MESLEN)//'SIDFIL.TMP - SETUP')
	CALL ERRSNS(,I,J)		! find out what the problem is
	IF (J.EQ.0) J=I
	CALL LSL_GETMSG(J,MESSAGE,MESLEN)
	J=INDEX(MESSAGE,'!') - 1	! (ignore any FAO stuff)
	IF (J.LT.0) J=MESLEN
	CALL WRITEF('%S',MESSAGE(:J))
50	RETURN
	END
