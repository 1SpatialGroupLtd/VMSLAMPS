C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1999-08-24 13:01:32.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	PROGRAM	TRIGRID
C
***	MODULE	TRIGRID
***	IDENT	24AU99
C
C	Copyright Laser-Scan Laboratories Ltd., Cambridge, England
C
CMOD	Became TRIGRID, changed to LSLLIB & DTILIB	TJH  17-Mar-1988
CMOD	S6100 graphics added				TJH  31-Jul-1986
CMOD	Code for the TRACE command added		TJH  03-Jun-1986
C	Standardised/incorporated into LSL Panacea 	TJH  04-Jun-1985
C
C
C Phase three reads the node/neighbour file, (possibly several times)
C as triangles for mapping onto the DTM grid. Data storage is in array
C MD, but SLP has elements 1 to 5 present to store the
C estimated derivatives at every node. Array NTDM holds one or more
C rows of the dtm (depending on the size of the DTM) stored in
C integer scaled format.
C
C Parameters:
	INCLUDE '($SSDEF)/NOLIST'
C
C Common:
	INCLUDE 'LSL$DTMCREATESYS:CONTRL.CMN'
	INCLUDE 'LSL$DTMCREATESYS:GRAFCS.CMN'
C
C Functions:
	LOGICAL	DTMGRD		! generate grid
	LOGICAL	EXAMINE_TERM	! determine terminal type
	LOGICAL	INITIALISE	! set up workspace etc.
	LOGICAL	GET_CMDS	! get the user's commands
	LOGICAL	OPNDTI		! opens the output DTI file
	LOGICAL	READIN		! get the data
	LOGICAL SETUP		! sets up environment for TRACE option
	LOGICAL	IS_ALPHA_AXP
C
C W/s
	LOGICAL	OK		! function return
C
C ......................................................................
C
C Initialise stuff and set defaults for options
	OK=INITIALISE()
	IF (.NOT.OK) GOTO 999
C
C Check what SYS$OUTPUT is assigned to and if a terminal is it a CRT?
	OK=EXAMINE_TERM()
	IF (.NOT.OK) GOTO 999
C
C Get the resolution size from the logical LSL$DTMCREATE_RESOLUTION
	CALL RESLOG()
C
C Get the user's commands
	OK=GET_CMDS()
	IF (.NOT.OK) GOTO 999
C
C Read in the data
	OK=READIN()
	IF (.NOT.OK) GOTO 999
C
C Open the output DTI file
	OK=OPNDTI()
	IF (.NOT.OK) GOTO 999
C
C If required trace through the contour strings to determine the uphill/
C downhill side of each line
	IF (TRACE) THEN
	   OK=SETUP()
	   IF (.NOT.OK) GOTO 999
	ENDIF
C
C Dump triangles into the dtm grid and write to intermediate file
	OK=DTMGRD()
C
C Close any open files and shutdowm PME, graphics etc
999	CALL FILCLO(OK)
	IF (PMEING.AND..NOT.IS_ALPHA_AXP()) CALL PME_EXIT
	IF (GONOFF) CALL FINIT
C
C Set $STATUS
	IF (OK) THEN
	   CALL LSL_EXIT(SS$_NORMAL)
	ELSE
	   CALL LSL_EXIT(SS$_ABORT)
	ENDIF
	END
