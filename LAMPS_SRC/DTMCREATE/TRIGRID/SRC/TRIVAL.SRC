	SUBROUTINE TRIVAL(IX,IY,IZ,IOP,LIST)
C
***	MODULE	TRIVAL
***	IDENT	30JL86
C
C Copyright Laser-Scan Laboratories Limited, Cambridge, England.
C
C
CMOD Logical argument added to TXTOUT			TJH  30-Jul-1986
CMOD Linear facet calculated if SETCOF fails, rather
C    than applying a patch value			TJH  05-Jun-1986
CMOD SETCOF made a logical function			TJH  23-Dec-1985
CMOD IERR added to SETCOF call to return 1 if a floating 
C    divide by zero would occur				TJH  24-Jun-1985
C    Standardised/incorporated into LSL Panacea 	TJH  04-Jun-1985
C
C Trival interpolates a value in the triangle held in TX etc for a
C value of IX,IY. Slopes at the corners are given in TFX etc. If IOP
C is 1 this is first entry coefficients are set up before a z
C calculation is made. Otherwise if IOP is 0 a z value is calculated
C straight away. LIST(1) (2) and (3) are the locations of the desired
C triangle in the incoming data array MD. 
C
	INTEGER	LIST(3)		! current triangle vertices
C
	LOGICAL	OK		! for error return
C
	INCLUDE 'LSL$DTMCREATESYS:MESPAR.PAR'
C
	INCLUDE 'LSL$DTMCREATESYS:CONTRL.CMN'
	INCLUDE 'LSL$DTMCREATESYS:STORIT.CMN'
	INCLUDE 'LSL$DTMCREATESYS:TRIVIA.CMN'
	INCLUDE 'LSL$DTMCREATESYS:IOLUNS.CMN'
	INCLUDE 'LSL$DTMCREATESYS:GRAFDEV.CMN'
	INCLUDE 'LSL$DTMCREATESYS:RESOLUTION.CMN'
	INCLUDE 'LSL$CMNLSL:EXPC.CMN'
C
C Function:
	LOGICAL*4	SETCOF
C
	SAVE OK
C
C ......................................................................
C
C Check for option
	IF (IOP.EQ.0) GOTO 102
C
C Set up call for a new triangle
C Move data into T
	DO 115 I=1,3
	   K=LIST(I)
C
C Check for point discontinuity (z value negative)
	   IF(MD(3,K).GT.0)GOTO 120
C
C Recalculate derivative for point K. The slopes are modified
C to be the coefficients of the triangular facet plane
	   CALL FACET(IX,IY,IZ,1,LIST)
C
C Estimated first partial derivatives are stored in P.
	   SLP(1,K)=P(1)
	   SLP(2,K)=P(2)
	   DO 118 J=3,5
	      SLP(J,K)=0.0
  118	   CONTINUE
C
C Get various bits.
  120	   TX(I)=MD(1,K)
	   TY(I)=MD(2,K)
	   TZ(I)=IABS(MD(3,K))
	   TFX(I)=SLP(1,K)
	   TFY(I)=SLP(2,K)
	   TFXX(I)=SLP(3,K)
	   TFXY(I)=SLP(4,K)
  	   TFYY(I)=SLP(5,K)
  115	CONTINUE
C
C Calculate quintic coefficients for the triangle.
	OK=SETCOF(TX,TY,TZ,TFX,TFY,TFXX,TFXY,TFYY)
C
C Check that nothing unpleasant happened in SETCOF. If SETCOF .F. then
C a divide by zero would have occurred. Just use the previous points z
C value instead; which hopefully will blend in with the surrounding 
C surface. Use value of IZ SAVEd from last time
102	IF (.NOT.OK) GOTO 111
C
C Perform an interpolation for location x,y. The result is in z.
C Unless of course SETCOF failed on this triangle.
  	X=IX
	Y=IY
	CALL EVALZ(X,Y,Z)
CCC	IZ=AMIN1(AMAX1(Z,1.0),300000.0)
	IZ=AMIN1(AMAX1(Z,1.0),MAX_RES_REAL)
	GOTO 112
C
C Error in SETCOF. Try using linear facet instead. If this is the 
C first time for this triangle tell the user.
111	IF (IOP.EQ.1.AND.DEBUG) THEN
	  CALL EXPAND(WARNING//'coefficient calculation failure'//
     &					' in SETCOF. Linear facet')
	  CALL TXTOUT(.TRUE.)
	  CALL EXPAND('                values will '//
     &		'applied for posts within triangle')
	  CALL TXTOUT(.FALSE.)
	  DO 116 I=1,3
	    CALL VALUE(XPOS,MD(1,LIST(I)),1)
	    CALL VALUE(YPOS,MD(2,LIST(I)),2)
	    IF (I.EQ.1) THEN
	       CALL EXPAND
     &  ('                with vertices: (%N)  X = %F12.3   Y = %F12.3'
     &			 	      ,I 	,XPOS		,YPOS)
	    ELSE
	       CALL EXPAND
     &  ('                               (%N)  X = %F12.3   Y = %F12.3'
     &			 	      ,I 	,XPOS		,YPOS)
	    ENDIF
	    CALL TXTOUT(.FALSE.)
116	  CONTINUE
	ENDIF
	CALL FACET(IX,IY,IZ,1,LIST)
112	RETURN
	END
