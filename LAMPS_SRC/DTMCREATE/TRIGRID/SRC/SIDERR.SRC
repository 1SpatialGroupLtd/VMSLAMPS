C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1988-04-06 12:56:00.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE SIDERR(IBEGIN,IEND,IPNODE)
C
***	MODULE	SIDERR
***	IDENT	26JN86
C
C	Copyright Laser-Scan Laboratories Ltd., Cambridge, England
C
CMOD	Statement labels tidied, some comments added	TJH  08-Jul-1986
CMOD	Error messages made more explicit	    	ATT  26-Jun-1986
C	Created 				    	TJH  02-Jun-1986
C
C Routine to inform the world of misery and woe within SIDFIL when
C neighbours of node IPNODE on the same side of the line IPNODE-1,
C IPNODE, IPNODE+1, display contradictory up-hill/down-hill 
C characteristics. It then sets the whole affected string to "unknown" 
C in the neighbour up-hill/down-hill lookup array/file.
C
	IMPLICIT NONE
C
	INCLUDE 'LSL$DTMCREATESYS:GRIDPARAMS.PAR'
C
	INCLUDE 'LSL$DTMCREATESYS:CONTRL.CMN'
	INCLUDE 'LSL$DTMCREATESYS:FINDIT.CMN'
	INCLUDE 'LSL$DTMCREATESYS:STORIT.CMN'
C
	INTEGER  NTEM(NTMSIZ)
	INTEGER  LINSID(NTMSIZ)
	INTEGER	 IPNODE		! current  node
	INTEGER	 IBEGIN		! start node of string
	INTEGER	 IEND		! end node of string
	INTEGER	 NUMBER		! number of nodes in list
	INTEGER	 NPOS		! node position within NTEM()
	INTEGER	 K		! loop var.
	REAL	 XTEMP,YTEMP	! position of an error 
C
C ......................................................................
C 
	IF (DEBUG) THEN
	  CALL VALUE (XTEMP,MD(1,IBEGIN),1)
	  CALL VALUE (YTEMP,MD(2,IBEGIN),2)
	  CALL WRITEF('*** WARNING *** '//
     &		'inconsistent side of line information in SIDFIL')
	  CALL WRITEF('                '//
     &		'for string starting at node %N, position %F %F'
     &					,IBEGIN		,XTEMP,YTEMP)
C 
C Give some information about where the problem is
	  CALL VALUE (XTEMP,MD(1,IPNODE),1)
	  CALL VALUE (YTEMP,MD(2,IPNODE),2)
	  CALL WRITEF('                '//
     &		'inconsistancy found at node %N, position %F %F'
     &					,IPNODE		,XTEMP,YTEMP)
	ENDIF
C
C ......................................................................
C
C Get the neighbours of each node in the string in turn 
	IPNODE=IBEGIN-1
10	IPNODE=IPNODE+1
	IF (IPNODE.GT.IEND) GOTO 50
	CALL GETNAY(IPNODE,NTEM,NTMSIZ,NUMBER)
C
C ......................................................................
C
C Set the whole of LINSID to "unknown". 
	DO 30 K=1,NUMBER
	  LINSID(K)=2
30	CONTINUE
C
C Determine the position of IPNOD1 in NTEM and flag this a "same height"
	IF (IPNODE.NE.IEND) THEN
	  CALL FINPOS(IPNODE+1,NTEM,NTMSIZ,NUMBER,NPOS)	  
	  CALL LINKCK(IPNODE,IPNODE+1,IEND,NTEM,NUMBER,NPOS)	  
	  IF (NPOS.EQ.0) GOTO 50
	  LINSID(NPOS)=0
	ENDIF
C
C Determine the position of IPPREV in NTEM and flag this a "same height"
	IF (IPNODE.NE.IBEGIN) THEN
	  CALL FINPOS(IPNODE-1,NTEM,NTMSIZ,NUMBER,NPOS)	  
	  CALL LINKCK(IPNODE,IPNODE-1,IEND,NTEM,NUMBER,NPOS)	  
	  IF (NPOS.EQ.0) GOTO 50
	  LINSID(NPOS)=0
	ENDIF
40	CALL PUTSID(IPNODE,LINSID,NTMSIZ,NUMBER)
C
C And repeat for all the other nodes in the string until IEND
	GOTO 10
C
50	RETURN
	END
