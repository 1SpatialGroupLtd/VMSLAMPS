C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1988-04-14 20:19:40.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL FUNCTION WRITE_POST(IX,IY,IZ)
C
***	MODULE	WRITE_POST
***	IDENT	07AP88
C
C Copyright Laser-Scan Laboratories Limited, Cambridge, England.
C
C Created 						TJH 07-Apr-1988
C
C Writes a post into the DTI output file. If DTI file data type is WORD
C WRITE_POST checks as it goes that the post is within the data range of
C the DTI data type. 
C
C The function value is .TRUE. if we succeed.
C
	IMPLICIT NONE
C
C Arguments (in):
	INTEGER	IX,IY,IZ		! post x,y,x (Z=scaled integer)
C
C Parameters
	INCLUDE 'LSL$CMNDTI:DTIPAR.PAR'
	INCLUDE 'LSL$CMNTRIGRID:TRIGRIDMSG.PAR'
C
C Common:
	INCLUDE 'LSL$DTMCREATESYS:CONTRL.CMN'
	INCLUDE 'LSL$DTMCREATESYS:IOLUNS.CMN'
	INCLUDE 'LSL$DTMCREATESYS:TRYVAR.CMN'
C
C W/s
	LOGICAL	 OK			! error returns
	INTEGER*2 WZ			! word length Z
	REAL	 Z			! Z value (world coordinates)
C
C Functions
	LOGICAL	 DTI_WRITE_WORD_DATA	! write data to DTI file
	LOGICAL	 DTI_WRITE_LONG_DATA
	LOGICAL	 DTI_WRITE_REAL_DATA
C
C ......................................................................
C
	WRITE_POST=.TRUE.		! assume success
C
C Convert Z value from scaled integer to real world coordinates
	Z=IZ
	Z=(Z-OFFSET(3))/VSCAL(3)+VMIN(3)
	IF (DTI_DATA_TYPE.NE.DATA_REAL) THEN
	   IF (TRUNCATE) THEN
	      IZ=INT(Z)
	   ELSE
	      IZ=NINT(Z)
	   ENDIF
	ENDIF	      
C
C Use DTILIB data write routines
	IF (DTI_DATA_TYPE.EQ.DATA_WORD) THEN
C
C Check that the data Z value is in range if a WORD DTI is in use.
C If out of range simply warn and return. The affected post in the DTI
C file will be set to -32767 (set up in OPNDTI()). TRIGRID can continue
C processing after such an error.
	      IF (IZ.LT.-32768.OR.Z.GT.32767) THEN
	         CALL LSL_PUTMSG(TRIGRID__WRTDTI,IX,IY,Z)
	         CALL LSL_ADDMSG(TRIGRID__BADRANGE)
	         GOTO 999
	      ENDIF
	      WZ=IZ			! convert long to word
	      OK=DTI_WRITE_WORD_DATA(LGC4,! lun
     &		WZ,			! post value
     &		IX,			! post X position
     &		IY)			! post Y position
	      IF (.NOT.OK) THEN
	         CALL LSL_PUTMSG(TRIGRID__WRTDTI,IX,IY,Z)
	         CALL LSL_ADDMSG(OK)
	         WRITE_POST=.FALSE.
	      ENDIF
	ELSEIF (DTI_DATA_TYPE.EQ.DATA_REAL) THEN
	   OK=DTI_WRITE_REAL_DATA(LGC4,! lun
     &		Z,			! post value
     &		IX,			! post X position
     &		IY)			! post Y position
	   IF (.NOT.OK) THEN
	      CALL LSL_PUTMSG(TRIGRID__WRTDTI,IX,IY,Z)
	      CALL LSL_ADDMSG(OK)
	      WRITE_POST=.FALSE.
	   ENDIF
	ELSEIF (DTI_DATA_TYPE.EQ.DATA_LONG) THEN
	   OK=DTI_WRITE_LONG_DATA(LGC4,! lun
     &		IZ,			! post value
     &		IX,			! post X position
     &		IY)			! post Y position
	   IF (.NOT.OK) THEN
	      CALL LSL_PUTMSG(TRIGRID__WRTDTI,IX,IY,Z)
	      CALL LSL_ADDMSG(OK)
	      WRITE_POST=.FALSE.
	   ENDIF
	ENDIF	      
999	RETURN
	END
