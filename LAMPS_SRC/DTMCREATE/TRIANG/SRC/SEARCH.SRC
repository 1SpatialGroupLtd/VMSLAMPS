	SUBROUTINE SEARCH
C
***	MODULE	SEARCH
***	IDENT	30SE85
C
C	Copyright Laser-Scan Laboratories Ltd., Cambridge, England
C
CMOD	Went IMPLICIT NONE and REAL*8 added	TJH	30-Sep-1985
CMOD	Side of line check upgraded  to MJM's   TJH	17-Jul-1985
C	release listing of May 1984
CMOD	Optimized a bit				 DM	11-Jun-1984
CMOD	INDB replaced by MD(4,...)		 DM	25-May-1984
C	Standardised				TJH 	06-Apr-1984
C
	IMPLICIT NONE
C
	REAL*8		XE,YE		! for inside circle check
	INTEGER		LCOL,LROW,MCOL,MROW	! limits for box search
	INTEGER		I,J,K		! temp. vars.
	INTEGER		MX,MY		! a point found in a box
	INTEGER		INBOX		! becomes 1 if point is OK
C
C Common blocks...
	INCLUDE 'LSL$CMNTRIANG:STORAG.CMN'
	INCLUDE 'LSL$CMNTRIANG:ZONVAR.CMN'
	INCLUDE 'LSL$CMNTRIANG:ANG.CMN'
	INCLUDE 'LSL$CMNTRIANG:CHECKS.CMN'
	INCLUDE 'LSL$CMNTRIANG:FINDIT.CMN'
	INCLUDE 'LSL$DTMCREATESYS:IOLUNS.CMN'
C
C ......................................................................
C
	R2=R*R
C
C......Find limits for boxes to be opened. MX1 and MY1 are always zero
C......as set in READIN, and hence no base subtraction is necessary.
	LCOL=(XC-R-1)/MXI
	LROW=(YC-R-1)/MYI
	MCOL=(XC+R+1)/MXI
	MROW=(YC+R+1)/MYI
C
C......Check search limits for being outside the boxes
	LCOL=MAX0(LCOL+1,1)
	LROW=MAX0(LROW+1,1)
	MCOL=MIN0(MCOL+1,NBJ)
	MROW=MIN0(MROW+1,NBI)
C
C......Boxes to be opened are now defined. Go through them
C......all to see if any useful points exist.
	MARK=0
	NT=0
	K=(LROW-1)*NBJ
	DO 90 I=LROW,MROW
	   DO 80 J=LCOL,MCOL
C
C......Find box(I,J) and check it for any points. If none
C......go to the next box.
	      L=IN(K+J)
	      IF(L.EQ.0)GOTO 80
C
C......Box contains some X ordered points, this one is point L.
C......We don't want to find the base line points again - so check
10	      IF(L.EQ.NP.OR.L.EQ.IP)GOTO 70
	      MX=MD(1,L)
	      MY=MD(2,L)
	      INBOX=0
C
C......Point inside search box. Check for inside circle.
	      XE=DFLOAT(MX)-XC
	      YE=DFLOAT(MY)-YC
	      IF((XE*XE+YE*YE).LE.R2)GOTO 30
C
C......Point in box
	      IF(MAXANG.NE.0)GOTO 70
	      INBOX=1
	      GOTO 30
C
C......Keep track of box point numbers in case no points in circle
20	      MARK=1
	      NT=MIN0(NT+1,KIX)
	      NTEM(NT)=L
	      GOTO 70
C
C......Check first for horizontal or vertical baseline
30	      IF(KSL.EQ.0)GOTO 50
	      IF(KSL.EQ.2)GOTO 40
	      IF(IXD*(MYA-MY).LE.0)GOTO 70
	      GOTO 60
40	      IF(IYD*(MX-MXA).LE.0)GOTO 70
	      GOTO 60
C
C......Side of line check for non horiz. or vertical case
c......this too has now gone to double precision for 32 bit grid
c......(MJM fix)
50	      IF((DFLOAT(MX)-(DFLOAT(MY)-B)*S1)*SLOPE.LE.1.0D-6)GOTO 70
C
C......Check whether a point in circle or box is being considered
60	      IF(INBOX.EQ.1)GOTO 20
C
C......Calculate the angle for vertex X,Y
	      CALL PCHOOS(MX,MY)
C
C......Get next point in the box
70	      L=IABS(MD(4,L))
	      IF(L.NE.NPMAX)GOTO 10
80	   CONTINUE
	   K=K + NBJ
90	CONTINUE
	RETURN
	END
