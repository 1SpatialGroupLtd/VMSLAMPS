	LOGICAL FUNCTION CP_CHECK()
C
***	MODULE	CP_CHECK
***	IDENT	11AU99
C
C	Copyright Laser-Scan Laboratories Ltd., Cambridge, England
C
C	Created 				TJH 27-Jul-1987
C
C If square map space is to be expected (default) make sure that
C the IFF CPs are really square, If not whinge and return with error.
C
C Function returns TRUE if succesful, otherwise FALSE
C 
	IMPLICIT NONE
C
C W/s
	INTEGER		I
	INTEGER*2 	IELEN		! length of current IFF entry
	REAL		CPTS(4,4)	! IFF corner points
	INTEGER*2 	CARDP(4)	! for CP labels
	DATA 		CARDP/'NW','SW','SE','NE'/
C
C Parameters
	INCLUDE 'LSL$DTMCREATESYS:MESPAR.PAR'
	INCLUDE 'LSL$CMNTRIANG:TRIANGMSG.PAR'
C
C Common blocks
	INCLUDE 'LSL$CMNTRIANG:CONTRL.CMN'
	INCLUDE 'LSL$CMNIFF:IFFHAN.CMN'
C
C ......................................................................
C
	CP_CHECK=.TRUE.			! assume success
	IF (CPSQUR) THEN		! is squareness to be checked ?
	   CALL IFFNXC(%REF('CP'),IELEN)! find the corner points
	   IF (IELEN.LE.-1) THEN	! error or eof
	      CALL LSL_PUTMSG(TRIANG__UNEXPEOF)
	      CP_CHECK=.FALSE.
	   ELSE
C
C Got the CP entry,
	      CALL EIHRR(CPTS,16,1)	! now read it
C
C Now test that the cps are truly square to the axes of their 
C coordinate system
	      IF ((ABS(CPTS(1,1)-CPTS(1,2))).GT.1.0E-3
     &           .OR.(ABS(CPTS(2,2)-CPTS(2,3))).GT.1.0E-3) THEN  
	         CP_CHECK=.FALSE.
	         CALL LSL_PUTMSG(TRIANG__SQRCP)
	         CALL WRITEF
	         CALL WRITEF('IFF control points are:')
	         DO 10 I=1,4
	            CALL WRITEF
     &              ('%C %F %F %F %F',CARDP(I),CPTS(1,I),CPTS(2,I),
     &              CPTS(3,I),CPTS(4,I))
10	         CONTINUE	
	      ENDIF
	   ENDIF
	ENDIF
	RETURN
	END
