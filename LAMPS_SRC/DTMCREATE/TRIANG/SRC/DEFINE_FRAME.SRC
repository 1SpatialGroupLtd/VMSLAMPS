	LOGICAL FUNCTION DEFINE_FRAME(NPER,NP,NPBOX)
C
***	MODULE	DEFINE_FRAME
***	IDENT	09AU93
C
C	Copyright Laser-Scan Laboratories Ltd., Cambridge, England
C
C	Created 					TJH 27-Jul-1987
CMOD    Scale factors for X, Y & Z coords should be
C       MAX_RES_REAL/2.0. Mod 1263.			ST  09-Aug-1993
C
C Function to set up the box structure defining the triangulation area,
C into which real data will be placed for triangulation later (within
C function ZONE). X,Y and Z scaling coefficients (between map units and
C internal integer grid) are calculated. The frame of imaginary
C points is set up and placed at the start of MD.
C
C Function returns TRUE if succesful, otherwise FALSE
C 
	IMPLICIT NONE
C
C Arguments:
	INTEGER	  NPER 		! Numb. of  peripheral points
	INTEGER	  NP		! number of pts. in MD
	INTEGER   NPBOX         ! number of pts. in box
C
C W/s
	INTEGER   I,J,K,L	! temporary variables
	INTEGER	  LX,LY		! for positioning imaginary pts.
	REAL	S,A		! workspace
	REAL	XMX,YMY		! x-range and y-range respectively
C
C Parameters
	INCLUDE 'LSL$CMNTRIANG:TRIANGMSG.PAR'
C
C Common blocks
	INCLUDE 'LSL$CMNTRIANG:COORDS.CMN'
	INCLUDE 'LSL$CMNTRIANG:CONTRL.CMN'
	INCLUDE 'LSL$CMNTRIANG:FINDIT.CMN'
	INCLUDE 'LSL$CMNIFF:IFFHAN.CMN'
	INCLUDE 'LSL$CMNTRIANG:STACKA.CMN'
	INCLUDE 'LSL$CMNTRIANG:STORAG.CMN'
	INCLUDE 'LSL$CMNLSL:TXTC.CMN'
	INCLUDE 'LSL$CMNTRIANG:ZONVAR.CMN'
	INCLUDE 'LSL$DTMCREATESYS:RESOLUTION.CMN'
C
C ......................................................................
C
	DEFINE_FRAME=.TRUE.		! assume success
C
CCC Calculate scaling to get to integer representation - presently
CCC set for 1-150000 for x and y.  Note 1-150000 give an x,y resolution 
CCC on a DTM of 1 metre square of 1/150mm. 
C
	XMX=VMAX(1)-VMIN(1)
	YMY=VMAX(2)-VMIN(2)
CCC	VSCAL(1)=AMIN1(150000.0/YMY,150000.0/XMX)
C	VSCAL(1)=AMIN1(MAX_RES_REAL/YMY,MAX_RES_REAL/XMX)
	VSCAL(1)=AMIN1(MAX_RES_REAL/2.0/YMY,MAX_RES_REAL/2.0/XMX)
	VSCAL(2)=VSCAL(1)
CCC	VSCAL(3)=150000.0/(VMAX(3)-VMIN(3))
C	VSCAL(3)=MAX_RES_REAL/(VMAX(3)-VMIN(3))
	VSCAL(3)=MAX_RES_REAL/2.0/(VMAX(3)-VMIN(3))
C
C Using the supplied approximate number of points in the incoming data
C the number of boxes can be determined. The number of data points that
C can be held is reduced from NPMAX to LAX by the number of imaginary
C frame points that are included - one in every box around the periphery
C Number of boxes should be (number of points)/NPBOX if this is not too
C large. Find number round the edge of the area, and apportion them
C according to dtm side length in x and y. 
	S=SQRT(AMIN0(MAXPTS/NPBOX+1,NAX))*2.0
	A=XMX+YMY
	NBJ=S*XMX/A+0.5
	NBI=S*YMY/A
	NBJ=MAX0(NBJ,3)
	NBI=MAX0(NBI,3)
C
C Zero the index to first points in boxes
	J=NBI*NBJ
	CALL VIOCLR(IN(1),J*4,0)
C
C set up offset for imaginary points outside the dtm area
	IOFF=500
C
C NBI and NBJ are the number of boxes in the y and x directions
C MXI and MYI are the box increment sizes in x and y directions
C MX1,MY1 is LL corner of box coverage, and MX2,MY2 is top right
C in scaled units
C
	MX1=0
	MY1=MX1
	MXI=VSCAL(1)*XMX/NBJ+1
	MYI=VSCAL(2)*YMY/NBI+1
	MX2=MXI*NBJ
	MY2=MYI*NBI
C
C Now put in the imaginary points to act as a frame to the area
C in anti clockwise fashion. First side is bottom edge, left to right.
C note that imaginary points are located just outside the box area.
C Note MX1 and MY1 are both zero
	NP=0
C
C Firstly, the bottom edge, left to right
	L=NP+1
	LX=MXI/2
	LY=-IOFF
	K=NBJ-1
	CALL FILLIT(1,1,1,K,1,1,LX,LY,MXI,0,NP)
C
C Adjust bottom left corner location
	MD(1,L)=-IOFF
C
C Now the right edge, bottom to top.
	L=NP+1
	LX=MX2+IOFF
	LY=MYI/2
	K=NBI-1
	CALL FILLIT(1,K,NBJ,NBJ,1,1,LX,LY,0,MYI,NP)
C Adjust bottom right corner location
	MD(2,L)=-IOFF
C
C Now the top edge, right to left.
	L=NP+1
	LX=MX2-MXI/2
	LY=MY2+IOFF
	CALL FILLIT(NBI,NBI,2,NBJ,1,-1,LX,LY,MXI,0,NP)
C
C Adjust top right corner location
	MD(1,L)=MX2+IOFF
C
C Lastly, the left edge top to bottom
	L=NP+1
	LX=-IOFF
	LY=MY2-MYI/2
	CALL FILLIT(2,NBI,1,1,-1,1,LX,LY,0,MYI,NP)
C
C Adjust top left corner point location
	MD(2,L)=MY2+IOFF
C
C There are NPER peripheral points. 
	NPER=NP
C
C Now initialise the cliff RHS height array KLIFFN
	DO 10 J=1,NPMAX
	   KLIFFN(J)=-NPMAX
10	CONTINUE
C
C ......................................................................
C
20	RETURN
	END
