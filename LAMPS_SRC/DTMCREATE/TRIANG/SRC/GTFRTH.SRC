	SUBROUTINE GTFRTH(NODA,NODB,NODC,NODD)
C
***	MODULE	GTFRTH
***	IDENT	31JL87
C
C Copyright Laser-Scan Laboratories Limited, Cambridge, England.
C
CMOD	Converted for LSLLIB message formats	TJH	31-Jul-1987
CMOD	Bug fix (I-1 ==> I+1); tidied		 DM	17-Jul-1984
CMOD    NTEM dimensioned to NAYMAX via DIMS.PAR  DM     05-Jul-1984
CMOD	Messages standardised			 DM	29-May-1984
C	Standardised				TJH 	25-May-1984
C
C Given an edge (NODA to NODB), and a known third point (NODC)
C find the other third point (NODD) on the far side of the edge.
C
	INCLUDE 'LSL$DTMCREATESYS:MESPAR.PAR'
	INCLUDE 'LSL$DTMCREATESYS:MESSAGE.CMN'
	INCLUDE 'LSL$CMNTRIANG:TRIANGMSG.PAR'
	INCLUDE 'LSL$CMNTRIANG:DATQ.CMN'
	INCLUDE 'LSL$CMNTRIANG:DIMS.PAR'
C
	DIMENSION NTEM(NAYMAX)
C
C ......................................................................
C
C......Set NODD to a value it can't possibly have
	NODD=-1
C......Pick up list of neighbours for NODA, and find the points either
C......side of NODB. The one we want is the one that is not NODC.
	CALL GETNAY(NODA,NTEM,NAYMAX,NUM)
C......Check for case that NODA and NODB are imaginary points
	IF (NODA.GT.LIMPOL.OR.NODB.GT.LIMPOL) GOTO 10
C......Yes they are imaginary, are they next to each other?
	IF (IABS(NODA-NODB).GT.1) GOTO 10
C......We are trying to go outside the imaginary frame round the area.
	CALL LSL_GETMSG(TRIANG__LOST,MESSAGE,MESLEN)
	CALL ALARMS(MESSAGE(:MESLEN)//' - GTFRTH')
C......Check for the case where NODB is the first and last node - this
C......complicates the position of the nodes either side
10	IF (NODB.NE.NTEM(1)) GOTO 20
C......NODB is the start/end of rotation node, so the two to check are
C......the second and the penultimate
	IF (NTEM(2).NE.NODC) NODD=NTEM(2)
	IF (NTEM(NUM-1).NE.NODC) NODD=NTEM(NUM-1)
	GOTO 50
C......Normal case of looking either side of NODB in the list. Find
C......NODB in the list
20	DO 30 I=1,NUM
	   IF (NTEM(I).EQ.NODB) GOTO 40
30	CONTINUE
C......KIN not found - not possible?
	CALL LSL_GETMSG(TRIANG__LIST,MESSAGE,MESLEN)
	CALL ALARMS(MESSAGE(:MESLEN)//' - GTFRTH')
C......Get NODD as the node before or after NODB in the list
40	IF (NTEM(I-1).NE.NODC) NODD=NTEM(I-1)
	IF (NTEM(I+1).NE.NODC) NODD=NTEM(I+1)
C......Check for sensible NODD value.
50	IF (NODD.EQ.-1) THEN
	   CALL LSL_GETMSG(TRIANG__LOST4TH,MESSAGE,MESLEN)
	   CALL ALARMS(MESSAGE(:MESLEN)//' - GTFRTH')
	ENDIF
C......Normal termination
	RETURN
	END

