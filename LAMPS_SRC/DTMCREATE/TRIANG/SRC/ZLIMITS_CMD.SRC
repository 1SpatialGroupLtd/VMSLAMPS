C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1989-01-26 14:13:22.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL FUNCTION ZLIMITS_CMD()
C
***	MODULE	ZLIMITS_CMD
***	IDENT	22DE88
C
C	Copyright (C), Laser-Scan Laboratories Ltd., Cambridge, England
C
CMOD	Now tests that zmin is less than zmax		TJH 22-Dec-1988
C	Created						TJH 23-Jul-1987
C
C Function to set the zlimits from the values supplied using the ZLIMITS
C Command. If argument(s) are missing the user is prompted
C Function returns .TRUE. if all is well.
C
	IMPLICIT NONE
C
C Parameters:
	INCLUDE	'LSL$DTMCREATESYS:MESPAR.PAR'
C
C Common:
	INCLUDE	'LSL$CMNLSL:CMDCOM.CMN'
	INCLUDE	'LSL$CMNTRIANG:CONTRL.CMN'
	INCLUDE	'LSL$CMNTRIANG:STACKA.CMN'
C
C Function:
	LOGICAL		REALIN	! reads reals from terminal
C
C ......................................................................
C
	ZLIMITS_CMD=.FALSE.			! assume disaster
C
	IF (CMDRCT.NE.2) THEN
	   IF (TTIN) THEN
	      CALL WRITEF('%S You must specify minimum and '//
     &		'maximum Z value arguments',WARNING)
	   ELSE
	      CALL WRITEF('%S You must specify minimum and '//
     &		'maximum Z value arguments',ERROR)
	   ENDIF	   
	   CALL WRITEF('For example ZLIMITS 80.0 3000.0 ')
	   IF (TTIN) THEN
	      ZLIMITS_CMD=REALIN('Z-min Z-max? ')
	      IF (.NOT.ZLIMITS_CMD) GOTO 10
	   ELSE
	      GOTO 10
	   ENDIF	   
	ENDIF
C
C Test that ZMIN is less THAN ZMAX!
	IF (REALAR(1).GE.REALAR(2)) THEN
	   CALL WRITEF(ERROR//
     &		'The Z-min argument must be less than Z-max!')
	ELSE
	   VMIN(3)=REALAR(1)
	   VMAX(3)=REALAR(2)
	   ZLIMITS_CMD=.TRUE.
	   HADZ=.TRUE.
	ENDIF
10	RETURN
	END
