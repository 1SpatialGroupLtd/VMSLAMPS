C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1989-01-26 14:10:22.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE INTONL(IXY,MAD,NMAX2,IPOS,MARK)
C
***	MODULE	INTONL
***	IDENT	20JN85
C
C Copyright Laser-Scan Laboratories Limited, Cambridge, England.
C
CMOD	Argument NMAX replaced by NMAX2 to avoid
CMOD	conflict with *real* NMAX in DATQ.CMN	 DM	20-Jun-1985
CMOD	DATQ.CMN added for inclusion of LIMDIS,
CMOD	this replaces the locally defined distance 
CMOD	criterion LIMD				TJH	19-Jun-1985
CMOD	Explicitly dimension MAD to (2,2)	 DM	05-Jul-1984
C	Standardised				TJH	25-May-1984
C
C......Intersection on line. Tests to see if the intersection lies
C......between segment end points. IXY stores the intersection point,
C......MAD hold the data array, or NMAX nodes, IPOS is the position
C......of the beginning of the line segment (IPOS+1 is the other end
C......of the segment), and mark is set to 1 if the intersection
C......falls along the line segment, or 2 if coincident with the left
C......hand node (IPOS), or 3 if coincident with the right hand
C......node (IPOS+1), else 0.
C
CCC	DIMENSION MAD(NMAX2,2)
	DIMENSION MAD(2,2)
	DIMENSION IXY(2)
	DIMENSION KA(2),KB(2)
C
	INCLUDE 'LSL$CMNTRIANG:DATQ.CMN'
C
C ......................................................................
C
	MARK=0
	DO 10 I=1,2
	   KA(I)=MAD(IPOS,I)-IXY(I)
	   KB(I)=MAD(IPOS+1,I)-IXY(I)
10	CONTINUE
C......Is the intersection at first node (within LIMDIS units)?
	IF (IABS(KA(1)).LE.LIMDIS.AND.IABS(KA(2)).LE.LIMDIS) GOTO 30
C......Is the intersection at the second node (within LIMDIS units)?
	IF (IABS(KB(1)).LE.LIMDIS.AND.IABS(KB(2)).LE.LIMDIS) GOTO 40
C......Check for intersection being in between first and second node
	DO 20 I=1,2
	   IF (KA(I).EQ.0.OR.KB(I).EQ.0) GOTO 20
	   IF (ISIGN(1,KA(I)).EQ.ISIGN(1,KB(I))) GOTO 50
20	CONTINUE
C......Set mark to 1 to indicate intersection along the line segment.
	MARK=1
	GOTO 50
C......Set mark to 2 to indicate intersection with left hand node.
30	MARK=2
	GOTO 50
C......Set mark to 3 to indicate intersection with right hand node.
40	MARK=3
50	RETURN
	END

