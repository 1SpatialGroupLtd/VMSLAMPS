C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1993-03-01 18:31:54.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE MASSER
C
***	MODULE	MASSER
***	IDENT	01MR93
C
C Copyright Laser-Scan Laboratories Limited, Cambridge, England.
C
CMOD	Now determines cliff open/closed status from
C	neighbour relationships of the end points	TJH 13-Jul-1988
CMOD	Converted for LSLLIB message formats		TJH 31-Jul-1987
CMOD	Messages now output using TXTOUT to accommodate
C	Sigmex 6164 code				TJH 28-Jul-1986
CMOD  	Messages output using graphics calls 		TJH 21-Jul-1986
C 	Author	M.J.McCullagh				        Mar-1986
C
C     Control routine to run cliff expansion
C
	IMPLICIT NONE
C
C Parameters:
	INCLUDE 'LSL$CMNTRIANG:DIMS.PAR'
C
C Common:
	INCLUDE 'LSL$DTMCREATESYS:MESPAR.PAR'
	INCLUDE 'LSL$DTMCREATESYS:MESSAGE.CMN'
	INCLUDE 'LSL$CMNTRIANG:CONTRL.CMN'
	INCLUDE 'LSL$CMNTRIANG:TRIANGMSG.PAR'
	INCLUDE 'LSL$CMNLSL:EXPC.CMN'
	INCLUDE 'LSL$CMNTRIANG:DATQ.CMN'
	INCLUDE 'LSL$CMNTRIANG:RCONVI.CMN'
	INCLUDE 'LSL$DTMCREATESYS:GRAFCS.CMN'
	INCLUDE 'LSL$DTMCREATESYS:GRAFDEV.CMN'
C
	INTEGER	 NEIBUF(NAYMAX)		! neighbour list
	INTEGER	 NUMBER			! number of neighbours
	INTEGER	 I,L
	INTEGER	 LOOP			! open/closed cliff flag
	INTEGER	 NPOLD			! stored value of NP
	INTEGER  ISTRNG			! string counter
	INTEGER  KSTRNG			! string ident of current cliff
	INTEGER	 KSTART			! start point of current cliff
	INTEGER	 KSTOP			! stop point of current cliff
	INTEGER  IFIRST			! sign of 1st non-imag. string
	INTEGER	 IERR			! if 1 error in cliff expansion
C
	REAL	 XTMP,YTMP		! for debug messages
C
C ......................................................................
C
C Store old value of NP. Any patch points inserted into gaps will be
C allocated positions in MAC() beyond the current NP'th element.
C
	NPOLD=NP
C
C Print out node number and coordinates - debug only!
CCC	   CALL WRITEF
CCC	   DO 55 L=1,NP
CCC	      XTMP=(MAC(1,L)-OFFSET(1))/VSCAL(1)+VMIN(1)
CCC	      YTMP=(MAC(2,L)-OFFSET(2))/VSCAL(2)+VMIN(2)
CCC	      CALL WRITEF('Node: %N     X: %F  Y: %F',L,XTMP,YTMP)
CCC55	   CONTINUE
C
C Are there any cliffs?
	IF (KAFFIR.GT.0) THEN
C
	   KSTOP=LIMPOL
C Get sign of first cliff string
10	   DO 20 KSTART=KSTOP+1,NPOLD+1
	      IF (KSTART.GT.NPOLD) GOTO 70		! return
	      IF (KLIFFN(KSTART).NE.-NPMAX) THEN
	         IFIRST=ISIGN(1,MAC(4,KSTART))
	         GOTO 30
	      ENDIF
20	   CONTINUE
C
C Find end of string
30	   DO 40 KSTOP=KSTART,NPOLD
	      IF (IFIRST.NE.ISIGN(1,MAC(4,KSTOP))) GOTO 50
40	   CONTINUE
	   KSTOP=NPOLD+1
50	   KSTOP=KSTOP-1
C
C Determine whether it is an open or closed cliff by checking of the
C first point in the cliff string is in the neighbour list of the
C last point
	   LOOP=0				! assume open cliff
	   CALL GETNAY(KSTOP,NEIBUF,NAYMAX,NUMBER)
	   DO 60 L=1,NUMBER
	      IF (NEIBUF(L).EQ.KSTART) LOOP=1 ! closed cliff?
60	   CONTINUE
	   CALL CLIFLN(KSTART,	! cliff start point
     &			KSTOP,		! cliff stop point
     &			LOOP,		! open/closed
     &			IERR)		! returns 1 if error
	   IF (IERR.EQ.1) THEN
	      CALL LSL_GETMSG(TRIANG__CLIFFINS,MESSAGE,MESLEN)
	      CALL ALARMS(MESSAGE(:MESLEN)//' - MASSER')
	   ENDIF
C
C Get start of next cliff string and the string sign
	   GOTO 10
	ENDIF
70	RETURN
	END
