C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1989-01-26 14:12:44.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE SHOW_WINDOW(XMIN,XMAX,YMIN,YMAX,UNITS,WINSET)
C
***	MODULE	SHOW_WINDOW
***	IDENT	17JA89
C
C	Copyright : Laser-Scan Laboratories, Cambridge, England
C
C Created						TJH 17-Jan-1989
C
C Routine to display triangulation window taking account of UNITS
C
	IMPLICIT NONE
C
C Arguments:
	REAL	XMIN,XMAX,YMIN,YMAX	! the window limits
	INTEGER	UNITS			! current units
	LOGICAL	WINSET			! window set yet?
C
C W/s
	LOGICAL		IS_LATITUDE	! true if latitude
	CHARACTER*1	HEMIS		! hemisphere letter N,S,E and W
	INTEGER*4	DEGS		! degrees result
	INTEGER*4	MINS		! minutes result
	INTEGER*4	SECS		! second result
C
C ......................................................................
C
	CALL EXPAND('Window units are ')
	IF (UNITS.EQ.2) THEN
	   CALL WRTAPP('metres')
	ELSEIF (UNITS.EQ.3) THEN
	   CALL WRTAPP('seconds of arc')
	ELSEIF (UNITS.EQ.4) THEN
	   CALL WRTAPP('latlong (degrees, minutes and seconds)')
	ELSEIF (UNITS.EQ.5) THEN
	   CALL WRTAPP('projection units')
	ENDIF
	IF (WINSET) THEN
	   IF (UNITS.EQ.2.OR.UNITS.EQ.5) THEN	! metres or projection
	      CALL WRITEF
	      CALL WRITEF(
     &        'Triangulation window   SW: %F10.2 %F10.2    '//
     &	      'NE: %F10.2 %F10.2',XMIN,YMIN,XMAX,YMAX)
	   ELSEIF (UNITS.EQ.3) THEN		! seconds of arc
	      CALL WRITEF
	      CALL WRITEF(
     &        'Triangulation window   SW: %F10.2 %F10.2    '//
     &	      'NE: %F10.2 %F10.2',
     &	      XMIN/10.0,YMIN/10.0,XMAX/10.0,YMAX/10.0)
	   ELSEIF (UNITS.EQ.4) THEN		! latlong 
	      IS_LATITUDE=.TRUE.
	      CALL CVTANG( YMIN, IS_LATITUDE, HEMIS, DEGS, MINS, SECS )
	      CALL WRITEF
	      CALL EXPAND(
     &		'Triangulation window  SW: %P %I3 %P0%I2 %P0%I2%S'
     &				,DEGS,MINS,SECS,HEMIS)
	      IS_LATITUDE=.FALSE.
	      CALL CVTANG( XMIN, IS_LATITUDE, HEMIS, DEGS, MINS, SECS )
	      CALL APPEND('  %P %I3 %P0%I2 %P0%I2%S'
     &				,DEGS,MINS,SECS,HEMIS)
	      IS_LATITUDE=.TRUE.
	      CALL CVTANG( YMAX, IS_LATITUDE, HEMIS, DEGS, MINS, SECS )
	      CALL APPEND('   NE: %P %I3 %P0%I2 %P0%I2%S'
     &				,DEGS,MINS,SECS,HEMIS)
	      IS_LATITUDE=.FALSE.
	      CALL CVTANG( XMAX, IS_LATITUDE, HEMIS, DEGS, MINS, SECS )
	      CALL WRTAPP('  %P %I3 %P0%I2 %P0%I2%S'
     &				,DEGS,MINS,SECS,HEMIS)
	      CALL WRITEF(
     &		'                     (SW: %F10.2  '//
     &		'%F10.2   NE:  %F10.2  %F10.2)',XMIN,YMIN,XMAX,YMAX)
	   ENDIF
	ELSE 
	   CALL WRITEF('Triangulation window currently unset')
	ENDIF
	RETURN
	END
