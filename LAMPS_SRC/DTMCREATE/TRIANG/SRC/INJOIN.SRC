	SUBROUTINE INJOIN(NEWN,NODA,NVERT,NODB)
C
***	MODULE	INJOIN
***	IDENT	31JL87
C
C Copyright Laser-Scan Laboratories Limited, Cambridge, England.
C
CMOD	Converted for LSLLIB message formats	TJH	31-Jul-1987
CMOD    NTEM dimensioned to NAYMAX via DIMS.PAR  DM     05-Jul-1984
CMOD	Messages standardised			 DM	29-May-1984
C	Standardised				TJH 	25-May-1984
C
C......Add the neighbour NEWN to the list of neighbours for NVERT.
C......NEWN is to be added between noda and nodb (presently next to
C......each other - but we dont know which comes first).
C
	INCLUDE 'LSL$DTMCREATESYS:MESPAR.PAR'
	INCLUDE 'LSL$DTMCREATESYS:MESSAGE.CMN'
	INCLUDE 'LSL$CMNTRIANG:TRIANGMSG.PAR'
	INCLUDE 'LSL$CMNTRIANG:DIMS.PAR'
C
	DIMENSION NTEM(NAYMAX)
C
C ......................................................................
C
C......Get neighbours of nvert
	CALL GETNAY(NVERT,NTEM,NAYMAX,NUM)
C......Check there is space to add a neighbour, by setting I to NUM+1
	I=NUM
	IF (I+1.GT.NAYMAX) THEN
	   CALL LSL_GETMSG(TRIANG__TOMNYNEIB,MESSAGE,MESLEN)
	   CALL ALARMS(MESSAGE(:MESLEN))
	ENDIF
C......There is space. Go through the list backwards, checking each
C......pair of nodes in turn for being the right ones
	DO 20 M=2,NUM
	   I=NUM-M+2
C......Move each element in turn one higher in the list of neighbours
	   NTEM(I+1)=NTEM(I)
	   IF ((NTEM(I).NE.NODA.OR.NTEM(I-1).NE.NODB).AND.
     1     (NTEM(I).NE.NODB.OR.NTEM(I-1).NE.NODA)) GOTO 20
C......NODA/NODB pair have been found. Insert node NEWN,
C......and then jump out as the rest don't need shifting
10	   NTEM(I)=NEWN
	   GOTO 30
20	CONTINUE
C......If we get to here, node pair NODA/NODB have not been recognised
	CALL LSL_GETMSG(TRIANG__NODPAIR,MESSAGE,MESLEN)
	CALL ALARMS(MESSAGE(:MESLEN)//'- INJOIN')
C......Increase NUM to allow for the extra node (NEWN)
30	NUM=NUM+1
C......List has now had NEWN inserted in the correct place (I hope!), so
C......write it back to file
	CALL PUTNAY(NVERT,NTEM,NAYMAX,NUM)
	RETURN
	END

