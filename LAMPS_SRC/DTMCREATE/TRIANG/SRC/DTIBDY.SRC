	LOGICAL FUNCTION DTIBDY(FINISHED,COLUMN)
C
***	MODULE	DTIBDY
***	IDENT	15FE94
C
C	Copyright Laser-Scan Laboratories Ltd., Cambridge, England
C
C	Created 					TJH 27-Jul-1987
CMOD	DATUM and INVERSION commands accommodated	TJH 21-Dec-1988
CMOD    Read columns starting from the start row held	ST  15-Feb-1994
C	in variable STARTR, rather than 1. Mod 1340
C
C Function to read a column of posts from DTI file as limited by
C the bounds stored in /DTILIM/. No matter what the DTI data type
C heights will always be converted to real and placed in TBUF4(*),
C When no more data left to read function returns with FINISHED
C set .TRUE.
C
C Function returns TRUE if successful
C 
	IMPLICIT NONE
C
C Arguments
	LOGICAL	  FINISHED		! finished input file yet?
	INTEGER	  COLUMN		! current DTI column number
	LOGICAL	  OK,IERR		! for error reporting
C
C W/s
	INTEGER*2	AWORD		! 16 bits
	INTEGER		ALONG		! 32 bits
	INTEGER		I
C
C Parameters
	INCLUDE 'LSL$CMNDTI:DTIPAR.PAR'
C
C Functions
	LOGICAL	DTI_READ_WORD_DATA
	LOGICAL	DTI_READ_LONG_DATA
	LOGICAL	DTI_READ_REAL_DATA
C
C Common blocks...
	INCLUDE 'LSL$CMNTRIANG:COORDS.CMN'
	INCLUDE 'LSL$CMNTRIANG:CONTRL.CMN'
	INCLUDE 'LSL$CMNTRIANG:MATLIM.CMN'
	INCLUDE 'LSL$CMNDTI:DTIHDR.CMN'
C
C ......................................................................
C
	DTIBDY=.TRUE.			! assume success
	COLUMN=COLUMN+1			! next column
	ITYP=2				! set string type
C
C Have we finished reading from this DTI file?
	IF (COLUMN.GT.STOPC) THEN
	   FINISHED=.TRUE.
	   GOTO 40
	ENDIF
C
C Read from the DTI file  by going up each column
	DO 10 NCOORD=1,MIN(TBUFMAX,STOPR+1-STARTR)
C
C Calculate X and Y positions of post
	   TBUF4(1,NCOORD)=FIXMIN-SIDEX+(SIDEX*COLUMN)
	   TBUF4(2,NCOORD)=FIYMIN-SIDEY+(STARTR*SIDEY)+(SIDEY*(NCOORD-1))
C
C Now depending on data type read (and possibly convert to real) the
C post height
	   IF (DATA_TYPE(INLUN).EQ.DATA_WORD) THEN
C	      OK=DTI_READ_WORD_DATA(INLUN,AWORD,COLUMN,NCOORD)
	      OK=DTI_READ_WORD_DATA(INLUN,AWORD,COLUMN,STARTR+NCOORD-1)
	      IF (.NOT.OK) GOTO 30
	      IF (AWORD.EQ.DTI_NULL_WORD) THEN
	         TBUF4(3,NCOORD)=DTI_NULL_REAL
	      ELSE
	         TBUF4(3,NCOORD)=FLOAT(AWORD)
	      ENDIF
	   ELSEIF (DATA_TYPE(INLUN).EQ.DATA_LONG) THEN
C	      OK=DTI_READ_LONG_DATA(INLUN,ALONG,COLUMN,NCOORD)
	      OK=DTI_READ_LONG_DATA(INLUN,ALONG,COLUMN,STARTR+NCOORD-1)
	      IF (.NOT.OK) GOTO 30
	      IF (ALONG.EQ.DTI_NULL_LONG) THEN
	         TBUF4(3,NCOORD)=DTI_NULL_REAL
	      ELSE
	         TBUF4(3,NCOORD)=FLOAT(ALONG)
	      ENDIF
	   ELSEIF (DATA_TYPE(INLUN).EQ.DATA_REAL) THEN
C	      OK=DTI_READ_REAL_DATA(INLUN,TBUF4(3,NCOORD),COLUMN,NCOORD)
	      OK=DTI_READ_REAL_DATA(INLUN,TBUF4(3,NCOORD),COLUMN,
     &		                    STARTR+NCOORD-1)
	      IF (.NOT.OK) GOTO 30
	   ENDIF
10	CONTINUE
	NCOORD=NCOORD-1
C
C If height inversion or a non-zero datum offset has been read...
	IF (DATUM.NE.0.0.OR.INVERSE) THEN
	   DO 20 I=1,NCOORD
	      IF (INVERSE) THEN
	         TBUF4(3,I)=-TBUF4(3,I)
	      ENDIF
	      TBUF4(3,I)=TBUF4(3,I)+DATUM
20	   CONTINUE
	ENDIF
	GOTO 40
C
30	CALL LSL_PUTMSG(OK)
	DTIBDY=.FALSE.
C
C ......................................................................
C
40	RETURN
	END
