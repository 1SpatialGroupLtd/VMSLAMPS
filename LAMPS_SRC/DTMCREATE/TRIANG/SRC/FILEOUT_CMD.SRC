	LOGICAL FUNCTION FILEOUT_CMD()
C
***	MODULE	FILEOUT_CMD
***	IDENT	22DE88
C
C	Copyright (C), Laser-Scan Laboratories Ltd., Cambridge, England
C
CMOD	Now STR$UPCASEs file-spec			TJH 22-Dec-1988
C	Created						TJH 23-Jul-1987
C
C Function to get output file-spec from FILEOUT command. If argument is
C missing the user is prompted. When argument read, output file
C specs are constructed and the files opened.
C
C Function returns .TRUE. if all is well, otherwise .FALSE.
C
	IMPLICIT NONE
C
C Parameters:
	INCLUDE	'LSL$DTMCREATESYS:MESPAR.PAR'
C
C Common:
	INCLUDE	'LSL$CMNLSL:FILENAME.CMN'
	INCLUDE	'LSL$DTMCREATESYS:IOLUNS.CMN'
	INCLUDE	'LSL$CMNLSL:TXTC.CMN'
	INCLUDE	'LSL$CMNTRIANG:CONTRL.CMN'
C
C W/s
	BYTE		CH	! a character
	LOGICAL		OK,IERR	! for error returns
	CHARACTER*100	DEFNAM	! default device/directory for filename
	LOGICAL		AMBIG	! file-spec is ambiguous?
C
C Functions
	LOGICAL		GETFILNAM ! get file-spec
	LOGICAL		RDCHS	! read char. skipping spaces
	LOGICAL		TTRSTR	! read from TT:
	LOGICAL		TRNALL	! translate logical name
	LOGICAL		SIGCHS
C
C ......................................................................
C
	FILEOUT_CMD=.TRUE.		! assume success
C
C ......................................................................
C
C If the silly user hasn't given a file-spec prompt for one
	IF (RDCHS(CH)) THEN			! empty line
	   IF (TTIN) THEN
	      CALL WRITEF('%S You must specify a file-spec argument'//
     &		' to the FILEOUT command',WARNING)
	   ELSE
	      CALL WRITEF('%S You must specify a file-spec argument'//
     &		'to the FILEOUT command',ERROR)
	   ENDIF	   
	   CALL WRITEF('For example FILEOUT DUA3:[MYDIR.DAT]JIM.NOD')
	   IF (TTIN) THEN
	      OK=TTRSTR(,,'Output .NOD file? ',IERR)
	      IF (OK) THEN
	         CALL BSLN
	      ELSE
	         CALL LSL_PUTMSG(OK)
	         CALL LSL_ADDMSG(IERR)
	         GOTO 20
	      ENDIF
	      IF (TXTPTR.EQ.0) GOTO 20		! empty line
	   ELSE
	      GOTO 20  ! someone got their indirect file wrong !!
	   ENDIF
	ENDIF
	CALL BSCH
	IF (.NOT.TRNALL('LSL$DTMCREATE_WORK',DEFNAM)) THEN
	    DEFNAM='SYS$DISK:[]'
	ENDIF
	OK=GETFILNAM(OUTNAM,OUTLEN,
     &		DEFNAM(1:SIGCHS(DEFNAM))//'.NOD;0',.TRUE.,%REF('!'))
	IF (OK) THEN
	   CALL STR$UPCASE(OUTNAM,OUTNAM)
	ELSE
	   CALL WRITEF('%S reading output file-spec',ERROR)
	   CALL LSL_PUTMSG(OK)
	   GOTO 20
	ENDIF
C
C ......................................................................
C
C Make up the DTMCREATE default file extensions and open the files
C
	CALL PUTFLN(OUTNAM)
C
C 1) the data transfer file (.DTA)
	STR_EXT='DTA'
	LEN_EXT=3
	CALL EXPFLN(OUTNAM,OUTLEN)
C
C After all that try to open the file!
	OPEN (UNIT=LGC2,FILE=OUTNAM(:OUTLEN),STATUS='NEW',
     &	      FORM='UNFORMATTED',ERR=10)
	CALL GETSPEC(OUTNAM,OUTLEN,OUTNAM,OUTLEN,'.DTA',' ',AMBIG)
	CALL WRITEF('.DTA file %S opened for write',
     &		    OUTNAM(:OUTLEN))
	OPNDTA=.TRUE.
C
C 2) the node transfer file
	STR_EXT='NOD'
	LEN_EXT=3
	CALL EXPFLN(OUTNAM,OUTLEN)
	OPEN (UNIT=LGC3,FILE=OUTNAM(:OUTLEN),STATUS='NEW',
     &	      FORM='UNFORMATTED',ERR=10)
	CALL GETSPEC(OUTNAM,OUTLEN,OUTNAM,OUTLEN,'.NOD',' ',AMBIG)
	CALL WRITEF('.NOD file %S opened for write',OUTNAM(:OUTLEN))
	OPNNOD=.TRUE.
	GOTO 30
C
C ......................................................................
C
C Error thrown up by FORTRAN OPEN call
10	CALL WRITEF('%S Unable to open output file %S',ERROR,
     &		    OUTNAM(:OUTLEN))
	CALL ERRSNS(,IERR,OK)
	IF (OK.EQ.0) OK=IERR
	CALL WRITEF(' ')
	CALL LSL_PUTMSG(OK)
C
C No good keeping just one output file - close and delete it
	IF (OPNDTA) CLOSE (UNIT=2,DISP='DELETE')
C
C Return with our tail down
20	FILEOUT_CMD=.FALSE.
C
C ......................................................................
C
30	RETURN
	END
