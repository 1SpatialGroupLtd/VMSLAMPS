	LOGICAL FUNCTION RDSEL(SELCMD,HADFRT)
C
***	MODULE	RDSEL
***	IDENT	06MR91
C
C Copyright Laser Scan Laboratories Limited, Cambridge, England
C Author R.Daly.
C
C Function to read in and check a feature code select or
C deselect command. The command line is checked for correct
C syntax and then used to update the bit-map USEFC.
C
C Function returns .FALSE. if error occurs.
C
CMOD	SPR1053 - more FRT group space		PGH	6-Mar-1991
C
	IMPLICIT NONE
C
C Paramaters
	INCLUDE 'LSL$DTMCREATESYS:MESPAR.PAR'
C
C Arguments
	LOGICAL	 	SELCMD	! TRUE is SEL cmd, FALSE if DES cmd.
	LOGICAL		HADFRT	! TRUE if had FRT file for groups
C
C Common
	INCLUDE 'LSL$CMNLSL:CMDCOM.CMN'
	INCLUDE 'LSL$CMNFRT:FRTGRP.CMN'
	INCLUDE 'LSL$CMNTRIANG:SELECTIONS.CMN'
C
C W/s.
	INTEGER	CMD		! command number
	INTEGER I		! loop controls.
	INTEGER GRPNUM		! number of group in group name table.
	INTEGER*4 TMPMAP(BMAX)	! temporary bit-map holding 1's for the
C				! selected/deselected bits for SEL/DES
C				! commands respectively.
	INTEGER*2 STRPOS,ENDPOS ! start/end positions of argument list.
	INTEGER*4 WORD		! word position in bit-map.
	INTEGER*4 OFFSET	! bit offset in WORD.
	INTEGER*4 PAIRS(2,1)	! range pairs read for SEL/DES command
	BYTE COMMA		! ASCII constant
	PARAMETER	(COMMA=44)
	BYTE CH
C
C Functions.
	INTEGER RDCOMM
	LOGICAL RDRANG,RDCHS,RDCH
	INTEGER GRPFCT		! FRTLIB
C
C***********************************************************************
C
	RDSEL=.TRUE.				! assume success
C
C Clear the temporary bit-map.
	CALL VIOCLR(TMPMAP,BMAX*4)
C
C***********************************************************************
C
C Read all the groups and ranges given with this command before
C updating the bit-map (since don't want to change anything if
C there is an error). Set up a temporary bit-map to be OR'd or
C AND NOT'd with the real bit-map when the whole command is decoded
C (depending on whether it is a select or deselect command).
10	IF (RDCHS(CH)) GOTO 60
	IF ((CH.GE.48).AND.(CH.LE.57)) GOTO 20		! 0 - 9
	IF (((CH.GE.65).AND.(CH.LE.90)).OR.		! A - Z
     &	    ((CH.GE.97).AND.(CH.LE.122))) GOTO 40	! a - z
	CALL BSCH	! assume it is the next command.
	GOTO 60
C
C***********************************************************************
C
C Got an explicit ft code or range of ft codes.
20	IF (.NOT.RDRANG(PAIRS(1,1),PAIRS(2,1))) GOTO 140
	IF ((PAIRS(1,1).LT.0).OR.(PAIRS(1,1).GT.32767)) GOTO 110
	IF ((PAIRS(2,1).LT.0).OR.(PAIRS(2,1).GT.32767)) GOTO 120
C Mark up the temporary bit-map.
	DO 30 I=PAIRS(1,1),PAIRS(2,1)
	   WORD=I/32
	   OFFSET=I-WORD*32
	   CALL LIB$INSV(1,OFFSET,1,TMPMAP(WORD+1))
30	CONTINUE
	GOTO 10
C
C***********************************************************************
C
C Got a group name.
40	IF (.NOT.HADFRT) GOTO 90
	CALL BSCH
C Is it a known group name ?
	IF (GRPCNT.LE.0) GOTO 100	! no groups defined for FRT
	GRPNUM=RDCOMM(%VAL(GRPCMT_LOC))
	IF (GRPNUM.LE.0) GOTO 130	! bad group name
	DO 50 I=1,BMAX
	   TMPMAP(I)=TMPMAP(I) .OR. GRPFCT(I,GRPNUM)
50	CONTINUE
	IF (RDCHS(CH)) GOTO 60
	IF (CH.EQ.COMMA) GOTO 10	! check the delimiter.
	CALL BSCH
	GOTO 10
C
C***********************************************************************
C
C We have now finished checking the syntax of the command.
C The updating is done by ORing or AND NOTing the temporary bit-map
C with the real bit-map (depending on whether it is a SEL or DES
C command and whether the real bit-map is in select or deselect mode).
60	IF (SELCMD) THEN			! selecting?
	   IF (FCSMOD) THEN
	      DO 70 I=1,BMAX
	         USEFC(I)=USEFC(I).OR.TMPMAP(I)
70	      CONTINUE
	   ELSE
	      FCSMOD=.TRUE.			! setting to select mode
	      CALL VIOMV3(TMPMAP,BMAX*4,USEFC)
	   ENDIF
	ELSE					! no, deselecting.
	   DO 80 I=1,BMAX
	      USEFC(I)=USEFC(I).AND..NOT.TMPMAP(I)
80	   CONTINUE
	ENDIF
	GOTO 150
C
C***********************************************************************
C
C Errors.
90	CALL WRITEF
     &	('%S You must have read an FRT file to '//
     &		'be able to use group names',WARNING)
	GOTO 140
100	CALL WRITEF('%S No groups have been defined in the FRT',
     &			WARNING)
	GOTO 140
110	CALL WRITEF('%S Illegal feature code %^L%N',WARNING,PAIRS(1,1))
	GOTO 140
120	CALL WRITEF('%S Illegal feature code %^L%N',WARNING,PAIRS(2,1))
	GOTO 140
130	CALL WRITEF('%S Bad group name ''%S''',WARNING,CMDNST)
140	RDSEL=.FALSE.		! reject the rest of the command line.
150	RETURN
C
	END
