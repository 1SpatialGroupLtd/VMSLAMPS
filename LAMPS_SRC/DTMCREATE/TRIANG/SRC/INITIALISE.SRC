C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1993-08-09 14:11:26.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL*4 FUNCTION INITIALISE(REDPTS,LAX,ISTRNG,KAFFIR)
C
***	MODULE	INITIALISE
***	IDENT	09AU93
C
C	Copyright (C), Laser-Scan Laboratories Ltd., Cambridge, England
C
C	Created						TJH 06-Jul-1987
CMOD	Max. number of points now 120000 not 150000	TJH 25-Jul-1988
CMOD    OFFSET(3) should be MAX_RES_REAL/4.0. Mod 1263. ST  09-Aug-1993
C
C
C Function to initialise TRIANG workspace and memory allocation
C
	IMPLICIT NONE
C
C Arguments
	INTEGER REDPTS			! number of points read in
	INTEGER LAX			! number of points read in
	INTEGER I			! loop variable
	INTEGER ISTRNG			! number of strings read in
	INTEGER KAFFIR			! no. cliff lines
C
	INCLUDE 'LSL$CMNTRIANG:CONTRL.CMN'
	INCLUDE 'LSL$DTMCREATESYS:GRAFCS.CMN'
	INCLUDE 'LSL$DTMCREATESYS:GRAFDEV.CMN'
	INCLUDE 'LSL$CMNTRIANG:FINDIT.CMN'
	INCLUDE 'LSL$CMNTRIANG:MARK.CMN'
	INCLUDE 'LSL$CMNTRIANG:NODBUF.CMN'
	INCLUDE 'LSL$CMNTRIANG:STACKA.CMN'
	INCLUDE 'LSL$CMNTRIANG:STACKB.CMN'
	INCLUDE 'LSL$CMNTRIANG:STORAG.CMN'
	INCLUDE 'LSL$DTMCREATESYS:IOLUNS.CMN'
	INCLUDE 'LSL$CMNTRIANG:SELECTIONS.CMN'
	INCLUDE 'LSL$CMNTRIANG:INFILES.CMN'
	INCLUDE 'LSL$DTMCREATESYS:RESOLUTION.CMN'
C
C Functions:
	LOGICAL	DTMJPI		! get process information
	LOGICAL VIOCLR
C
C W/s
	BYTE	ALL_SET		! byte with all bits set (-1)
	DATA	ALL_SET/-1/
C
C ......................................................................
C
C Initialise LSLLIB and DTILIB
	CALL LSL_INIT
	CALL DTI_INIT
C
C Announce
	INITIALISE=DTMJPI()
	IF (.NOT.INITIALISE) GOTO 10
C LUNS
	LGC1=1
	LGC2=2
	LGC3=3
	LGC4=4
	LGC5=5
	LGC6=6
	LGC7=7
	LGC8=8
C
C Set up default TRIANG size parameters:
C
C NPMAX is the maximum number of data points for border and interior.
C
C NAX is box structure size
C
C NIX is neighbour list length including space for extensions.
C
C KIX is the number of nodes that can be handled by NTEM and
C routine COLLEC.
C
C ISTACK is number of extension rows allowed for nodes with more than
C ten neighbours.
C
C NSIZE is the size of the node/neighbour binary output buffer.
C
C MAXPTS is the  expected number of points for processing. 
C N.B. MAXPTS cannot be changed once processing has begun.
C
C LAX is the maximum data point storage available to the user
C
C KAFFIR is the number of cliff points
C
	ISTACK	=	3000
	KIX	=	2000
	MAXPTS	=	0
	NAX	=	75000
	NIX	=	25000
	NPMAX	=	120000
	NSIZE	=	2048
	KAFFIR	=	0
C
C Only provide 2/3rds of MAXPTS for the user to have on input to allow 
C for additional points generated during the optional constraint phase.
C We must also subtract an estimate of the number of imaginary points 
C generated too.
C
	LAX=((NPMAX/3)*2)-SQRT(FLOAT(NPMAX/5))*4.0
C 
C Init. number of strings read in
	ISTRNG=0
C
C and number of pts READIN reads in
	REDPTS=0
C
C and the logical variables for process control:
C 
C 1) IFF allocation of heights:
C
	AC2HT=.FALSE.	! no type 2 (integer) AC's
C
C 2) doing things to heights before triangulation:
C
	M2FEET=.FALSE.  ! don't convert from metres to feet
	FEET2M=.FALSE.  ! don't convert form feet to metres
	MULT=.FALSE.	! don't multiply incoming heights by n	
	DIVIDE=.FALSE.  ! don't divide incoming heights by n	
	MFACTR=1.0      ! multiplication factor for MULT or DIVIDE
C
C 3) presentation stuff:
C
	VT100=.TRUE.
	DIAG=.FALSE.	  ! don't give voluminous daignostics
	GRAPHICS=.FALSE.  ! no graphics
C
C 4) init.  geographical extent....
	GEOEXT=.FALSE.    ! area defined for triangulation ?
	HADZ=.FALSE.      ! and z range ?
	CPSQUR=.TRUE.     ! check that map is square to coord. system
C
C 5) and source of commands:
	TTIN=.TRUE.   ! input is from terminal , to start with
C 
C 6) and TRIANG transfer file control
	FIRFIL=.TRUE.
	OPNDTA=.FALSE.
	OPNNOD=.FALSE.
	IFFILE=.TRUE.
C
C 7) and constrain the triangulation between strings
	CONSTR=.TRUE.
C
C 8) and the "processing started" flag for MAXPTS
	FIXMPT=.FALSE.
C
C 9) and the offsets for scaled integer representation
C
C No offset for x and y, but z is scaled between 7500 and 22500.
C This is done to allow lee way for inaccurate estimating of the
C zvalue input with the ZLIMITS command. Any scaled value between 1 
C and 20000 will be ok, thereby extending the range of z by 50% either
C side of the user stated limits.
	OFFSET(1)=0.0
	OFFSET(2)=0.0
C	OFFSET(3)=75000.0
	OFFSET(3)=MAX_RES_REAL/4.0
C
C 10) String sign indicator in /MARK/
	MARK=1
C
C 11) Ensure that all IFF feature codes and layers are initially
C     selected
	FCSMOD=.FALSE.
	LYSMOD=.FALSE.
	INITIALISE=VIOCLR(USEFC,BMAX*4,ALL_SET)
	IF (.NOT.INITIALISE) GOTO 10
	INITIALISE=VIOCLR(USEOV,BMAX*4,ALL_SET)
C
C 12) Set default window command units, height inversion and datum
	UNITS=2			! metres
	INVERSE=.FALSE.		! don't invert heights
	DATUM=0.0
C
C 13) Number of input files successfully read
	NUM_INFILES=0
10	RETURN
	END
