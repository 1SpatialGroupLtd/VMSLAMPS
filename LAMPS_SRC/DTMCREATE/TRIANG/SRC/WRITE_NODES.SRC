C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1989-01-26 14:13:16.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL FUNCTION WRITE_NODES(REDPTS,LIMPOL)
C
***	MODULE	WRITE_NODES
***	IDENT	22DE88
C
C	Copyright (C), Laser-Scan Laboratories Ltd., Cambridge, England
C
CMOD	Now writes out projection data 			TJH 22-Dec-1988
C	Created						TJH 23-Jul-1987
C
C Function write out node transfer file header and then all node 
C information for the triangulation
C
C Function returns .TRUE. if all is well, otherwise .FALSE.
C
	IMPLICIT NONE
C
C Parameters:
	INCLUDE	'LSL$DTMCREATESYS:MESPAR.PAR'
	INCLUDE	'LSL$CMNTRIANG:TRIANGMSG.PAR'
C
C Common:
	INCLUDE	'LSL$CMNTRIANG:CONTRL.CMN'
	INCLUDE	'LSL$CMNTRIANG:FINDIT.CMN'
	INCLUDE	'LSL$DTMCREATESYS:IOLUNS.CMN'
	INCLUDE	'LSL$CMNTRIANG:STACKA.CMN'
	INCLUDE	'LSL$CMNTRIANG:STORAG.CMN'
	INCLUDE	'LSL$CMNTRIANG:TPOLGY.CMN'
	INCLUDE	'LSL$CMNTRIANG:ZONVAR.CMN'
C
C W/s
	INTEGER		I	! temp var.
	INTEGER		ISHELL  ! set to indicate true TRIANG file
	INTEGER 	LIMPOL  ! number of peripheral points
	INTEGER		LONGWD(37500)	! for efficient writes
	EQUIVALENCE    (LONGWD(1),TPOLGY(1))
	INTEGER		NLONG	! number of TPOLGY() longwords written
	LOGICAL		OK	! error return
	INTEGER		REDPTS  ! total pts. read from IFF files
C
C Function
	LOGICAL		WRTUNF	! efficient unformatted FORTRAN writes
C
C ......................................................................
C
	WRITE_NODES=.TRUE.			! assume success
C
C
C Write file header information
	ISHELL=1   			! 1 = "true TRIANG file"
	WRITE(LGC2)LIMPOL,REDPTS,NPMAX,NBI,NBJ,MX2,MY2,MXI,MYI,ISHELL,
     &             (VMIN(I),VMAX(I),VSCAL(I),OFFSET(I),I=1,3)
C
C Data points x,y,z and then next point in box index
	OK=WRTUNF(LGC2,MD,5*REDPTS)
	IF (.NOT.OK) THEN
	   CALL LSL_PUTMSG(TRIANG__WRTDTA)
	   CALL LSL_PUTMSG(OK)
	   GOTO 10
	ENDIF
C
C First box in point index
	OK=WRTUNF(LGC2,IN,NBI*NBJ)
	IF (.NOT.OK) THEN
	   CALL LSL_PUTMSG(TRIANG__WRTDTA)
	   CALL LSL_PUTMSG(OK)
	   GOTO 10
	ENDIF
C
C Next the number of points in the triangulation, pre-TRIEDIT.
C (REDPTS will be updated by PANDEMON thus preventing identification
C of those points that were added post-triangulation).
	WRITE (LGC2) REDPTS
C
C Next the feature code byte array TPOLGY()
	NLONG=REDPTS/4
	IF (MOD(REDPTS,4).NE.0) NLONG=NLONG+1
	OK=WRTUNF(LGC2,LONGWD,NLONG)
	IF (.NOT.OK) THEN
	   CALL LSL_PUTMSG(TRIANG__WRTDTA)
	   CALL LSL_PUTMSG(OK)
	   GOTO 10
	ENDIF
C
C Finally write out projection information 
	OK=WRTUNF(LGC2,PROJAR,PROJAR_LEN/2)
	IF (.NOT.OK) THEN
	   CALL LSL_PUTMSG(TRIANG__WRTDTA)
	   CALL LSL_PUTMSG(OK)
	   GOTO 10
	ENDIF
	GOTO 20
C
C ......................................................................
C
C Error - close and data file
10	OPNDTA=.FALSE.
	CLOSE (UNIT=LGC2,DISP='DELETE')
	WRITE_NODES=.FALSE.
20	RETURN
	END
