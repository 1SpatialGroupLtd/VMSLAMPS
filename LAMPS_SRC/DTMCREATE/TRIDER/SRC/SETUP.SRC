C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1991-01-03 10:32:48.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE SETUP(LUNA,LUNB)
C
***	MODULE	SETUP
***	IDENT	03JA91
C
C	Copyright Laser-Scan Laboratories Ltd., Cambridge, England
C
CMOD	CAlls to WAIT changed to LSL_WAIT		TJH  03-Jan-1991
CMOD	TRIDER__TOMNYNEIGB changed to TRIDER__TOMNYNEIB TJH  05-Nov-1990
CMOD	Converted to LSLLIB for TRIDER			TJH  19-Nov-1987
CMOD	Graphics added					TJH  30-Jul-1986
C	Standardised/incorporated into LSL DTMCREATE	TJH  30-May-1985
C
C
C Get neighbour set from file, put neighbours into a random file
C LUNB. (On disk or in memory depending on space available,
C and size of data set)
C
C Parameters:
	INCLUDE  'LSL$CMNTRIDER:TRIDERMSG.PAR'
C
C Common:
	INCLUDE  'LSL$DTMCREATESYS:CONTRL.CMN'
	INCLUDE  'LSL$DTMCREATESYS:FINDIT.CMN'
	INCLUDE  'LSL$DTMCREATESYS:MESSAGE.CMN'
	INCLUDE  'LSL$DTMCREATESYS:STACK.CMN'
	INCLUDE  'LSL$DTMCREATESYS:STORAG.CMN'
	INCLUDE  'LSL$DTMCREATESYS:IOLUNS.CMN'
	INCLUDE  'LSL$DTMCREATESYS:GRAFCS.CMN'
	INCLUDE  'LSL$DTMCREATESYS:GRAFDEV.CMN'
C
C ......................................................................
C
C Open the random scratch file that is to hold the neighbours ready for
C use as needed. NB: record length needs to be 11*(standard integer
C length in operation, *4 in this one). this gives the number of bytes
C long. 
C
	OPEN(UNIT=LUNB,STATUS='SCRATCH',ACCESS='DIRECT',
     &					  FORM='UNFORMATTED',RECL=44)
C
C No stack has to be set up, as we are only reading stuff in
C and no changes are going to be made once set up.
C
C Set the stack pointer to no records being used yet, starting
C with record 2, as record 1 is used in NAYB to indicate no entry
C is present.
	IPSTCK=2
C
C Indicate progress
	IF (DIAG) THEN
	   IF (GRAPHICS.AND..NOT.GPX) THEN
	      CALL EXPAND(
     &			'Setting up memory/random file for neighbours')
	      CALL TXTOUT(.TRUE.)
	      CALL LSL_WAIT(2,2)
	   ELSE
	      CALL FRAMED_MES(4,0)
	   ENDIF
	   CALL PERCENT('of node neighbours set up',0,NP,10,-1)
	ENDIF
C
C Set entry point into the structure to indicate record 1 (unused)
C for each node that will be used
	CALL VIOCLR(NAYB(1),4*NP,1)
C
C NB: If there is enough room in memory for the data set, then the
C system automatically dispenses with the random file. If there is not
C enough room im memory then the whole of memory is used, and then uses
C whatever disk space is needed. 
C
C Get neighbours in for each point in turn, and write a random
C file
	IERR=-1
	DO 10 I=1,NP
	   IF (DIAG) THEN
	      CALL PERCENT('of node neighbours set up',I,NP,10,0)
	   ENDIF
	   CALL REDNOD(LUNA,IPNT,1,IERR)
	   IF(IERR.NE.0)GOTO 20
	   CALL REDNOD(LUNA,NUM,1,IERR)
	   IF(IERR.NE.0)GOTO 20
C
C Too many neighbours?
	   IF(NUM.GT.150)THEN
	      CALL LSL_GETMSG(TRIDER__TOMNYNEIB,MESSAGE,MESLEN)
	      CALL EXPAND('%'//MESSAGE(:MESLEN))
	      CALL ALARMS(MESSAGE(:MESLEN))	! close down & exit
	   ENDIF
C
C Read neighbour record
	   CALL REDNOD(LUNA,NTEM,NUM,IERR)
	   IF(IERR.NE.0)GOTO 20
C
C Complete node/neighbour list now stored in NTEM. There are NUM
C neighbours, for point IPNT. Store them away.
	   CALL PUTNAY(IPNT,NTEM,KIX,NUM,LUNB)
10	CONTINUE
	IF (DIAG) THEN
	   CALL PERCENT('of node neighbours set up',I,NP,10,1)
	ENDIF
	RETURN
C
C ......................................................................
C			E R R O R
C Error reading node/neighbours
20	CALL LSL_GETMSG(TRIDER__RDNOD,MESSAGE,MESLEN)
	CALL EXPAND('%'//MESSAGE(:MESLEN))
	CALL ALARMS(MESSAGE(:MESLEN))	! close down & exit
	END
