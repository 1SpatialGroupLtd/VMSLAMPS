	SUBROUTINE GETFIL(IOPT,IZF,LAYER)
C
***	MODULE	GETFIL
***	IDENT	06JL88
C
C	Copyright Laser-Scan Laboratories Ltd., Cambridge, England
C
CMOD	Graphics now initialised in TRIDER		TJH  06-Jul-1988
CMOD	DTMCREATE version with LSLLIB			TJH  23-Nov-1987
CMOD	Graphics added					TJH  30-Jul-1986
C	Standardised/incorporated into LSL DTMCREATE	TJH  31-May-1985
C
C
C Carry out the preliminary sorting out of the imaginary point
C locations and values. Final derivatives for all real points are
C handled by DERIV, called from the main program. If
C IOPT=1 (box interpolation option for imag points), or IOP=2
C (neighbour interpolation for imaginary points) then DERIV will
C estimate all derivatives for all points, as no assumptions
C will have been made for the imaginaries. This is unlike when
C IOPT=0 (trend, and derivatives take trend values), and when
C IOPT=-1 (fixed z-value insertion, derivatives all zero).
C
C
C Parameters:
	INCLUDE  'LSL$CMNTRIDER:TRIDERMSG.PAR'
C
C Common:
	INCLUDE  'LSL$DTMCREATESYS:MESSAGE.CMN'
	INCLUDE  'LSL$DTMCREATESYS:FINDIT.CMN'
	INCLUDE  'LSL$DTMCREATESYS:STORAG.CMN'
	INCLUDE  'LSL$DTMCREATESYS:TRYVAR.CMN'
	INCLUDE  'LSL$DTMCREATESYS:ZONVAR.CMN'
	INCLUDE  'LSL$DTMCREATESYS:IOLUNS.CMN'
	INCLUDE	 'LSL$DTMCREATESYS:GRAFCS.CMN'
	INCLUDE  'LSL$DTMCREATESYS:GRAFDEV.CMN'
C
	DIMENSION MSIZ(2)
C
	LOGICAL		OK	! for error handling
C
C Function
	LOGICAL	WRTUNF		! for efficient unformatted write
C
C ......................................................................
C
C Go through imaginary points (1-LIMPOL), reposition them according
C to the user's wishes.
	MSIZ(1)=MX2
	MSIZ(2)=MY2
	DO 20 I=1,LIMPOL
	   DO 10 J=1,2
	      K=MD(J,I)
	      IF(K.LT.0)K=-KOFF
	      IF(K.GT.MSIZ(J))K=MSIZ(J)+KOFF
	      MD(J,I)=K
10	   CONTINUE
20	CONTINUE
C
C Check for option
	IF(IOPT)30,60,70
C
C Fixed value option. Put scaled value into imaginary points,
C and set partial derivatives to zero
30	DO 50 I=1,LIMPOL
	   IF (GRAPHICS) THEN
	      CALL DOT(MD(1,I),MD(2,I))
	   ENDIF
	   MD(3,I)=IZF
	   DO 40 J=1,5
	      SLP(J,I)=0.0
40	   CONTINUE
50	CONTINUE
	GOTO 80
C
C Calculate trend surface, allocate values to imaginary points
60	CALL TREND
	GOTO 80
C
C Interpolation option for imaginary points
C Check on option to be used for distance weighted interpolation
C 1 = BOX SEARCH, 2 = SHELL/NEIGHBOUR search with checks for
C discontinuity and restricted range values.
70	IF(IOPT.EQ.2)CALL NEIGHB(IOPT)
	IF(IOPT.EQ.1)CALL BOXINT(IOPT)
C
C All complete, so dump the fully determined set of position and
C interpolated surface values for the imaginary points to the
C derivative file
80	OK=WRTUNF(LGC2,MD,5*LIMPOL)
C
C Error during unformatted write?
	IF (.NOT.OK) THEN
	   CALL LSL_GETMSG(TRIDER__WRTDER,MESSAGE,MESLEN)
	   CALL EXPAND('%%%S',MESSAGE(:MESLEN))
	   CALL TXTOUT(.TRUE.)
	   CALL LSL_GETMSG(OK,MESSAGE,MESLEN)
	   J=INDEX(MESSAGE,'!') - 1		! (ignore any FAO stuff)
	   IF (J.GT.0) MESLEN=J
	   CALL EXPAND('%S',MESSAGE(:MESLEN))
	   CALL ALARMS(MESSAGE(:MESLEN))	! close down & exit
	ENDIF
	RETURN
	END
