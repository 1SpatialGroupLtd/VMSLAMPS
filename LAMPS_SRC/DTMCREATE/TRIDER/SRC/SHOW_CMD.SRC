	LOGICAL FUNCTION SHOW_CMD(IOPT)
C
***	MODULE	SHOW_CMD
***	IDENT	26JA89
C
C	Copyright Laser-Scan Laboratories Ltd., Cambridge, England
C
CMOD	SHOW ENABLE command added			TJH  26-Jan-1989
C	Created						TJH  19-Nov-1987
C
C
C SHOW - show things about TRIDER.
C
C Function returns .true. if all is well
C
	IMPLICIT NONE
C
C Argument (in)
	INTEGER         IOPT    ! imaginary point option
C
C W/s
	INTEGER*4       CMD     ! decoded command number
C
C Parameters:
	INCLUDE 'LSL$DTMCREATESYS:MESPAR.PAR'
C
C Common:
	INCLUDE 'LSL$DTMCREATESYS:CONTRL.CMN'
	INCLUDE 'LSL$DTMCREATESYS:STORAG.CMN'
	INCLUDE 'LSL$DTMCREATESYS:FINDIT.CMN'
	INCLUDE 'LSL$DTMCREATESYS:GRAFCS.CMN'
	INCLUDE 'LSL$DTMCREATESYS:GRAFDEV.CMN'
	INCLUDE 'LSL$CMNLSL:CMDCOM.CMN'
	INCLUDE 'LSL$CMNLSL:FILENAME.CMN'
	INCLUDE 'LSL$CMNLSL:EXPC.CMN'
C
C Functions
	LOGICAL		RDCOMM  ! read command from line
	LOGICAL		SIGCHS
C
C Command table
	EXTERNAL	SHOW_CMD_TABLE
	INTEGER*4	SHOW_CMD_TABLE
C
C ......................................................................
C
	SHOW_CMD=.TRUE.			! assume success
	CMD = RDCOMM(SHOW_CMD_TABLE)
C
	GOTO (10,20,25,40,30), CMD+1
C
10	CALL WRITEF 
	CALL WRITEF('%S Specifying command SHOW',ERROR)
	CALL WRITEF
	CALL WRITEF('Available SHOW command qualifiers are:')
	CALL WRITEF
	CALL WRITEF('ENABLE     FILES     IMAGINARY     ZLIMITS')
	CALL WRITEF 
	SHOW_CMD=.FALSE.
	GOTO 150

C
C ......................................................................
C "ENABLE"
20	CALL EXPAND('DIAGNOSTICS ..............'//
     &			'................................. ')
	IF (DIAG) THEN
	   CALL WRTAPP('On')
	ELSE
	   CALL WRTAPP('Off')
	ENDIF
	CALL EXPAND('GRAPHICS .................'//
     &			'................................. ')
	IF (GRAPHICS) THEN
	   CALL WRTAPP('On')
	ELSE
	   CALL WRTAPP('Off')
	ENDIF
	CALL EXPAND
     &      ('PME .....................'//
     &			'.................................. ')
	IF (PMEING) THEN
	   CALL WRTAPP('On')
	ELSE
	   CALL WRTAPP('Off')
	ENDIF
	GOTO 150
C
C ......................................................................
C Files
25	IF (.NOT.OPNDTA) THEN	
	   CALL WRITEF('Input filename not yet specified.')
	ELSE
	   CALL PUTFLN(ITLE,TITLEN)
	   STR_EXT='NOD'
	   LEN_EXT=3
	   CALL EXPFLN(ITLE,TITLEN)
	   CALL WRITEF('.NOD file:  %S',ITLE(1:SIGCHS(ITLE)))
	   STR_EXT='DTA'
	   LEN_EXT=3
	   CALL EXPFLN(ITLE,TITLEN)
	   CALL WRITEF('.DTA file:  %S',ITLE(1:SIGCHS(ITLE)))
	ENDIF
	GOTO 150
C
C ......................................................................
C "LIMITS" - interpolation limits
30	IF (HADLIM) THEN
	   CALL WRITEF(
     &   'Imaginary point height estimation lower z-value limit = %G9.3'
     &                                                       ,BOTTOM)
	   CALL WRITEF(
     &   'Imaginary point height estimation upper z-value limit = %G9.3'
     &                                                       ,UPPER)
	ELSE
	   CALL WRITEF('No Z-limits will '//
     &		'be applied to imaginary point height estimation')
	ENDIF
	GOTO 150
C
C ......................................................................
C "IMAGINARY" - imaginary point estimation
40	CALL EXPAND
     &	('Imaginary point estimation option ......................... ')
	GOTO (50,60,70,80), IOPT+2
50	CALL APPEND('FIXED')
	GOTO 140
60	CALL APPEND('TREND')
	GOTO 140
70	CALL APPEND('BOX')
	GOTO 90
80	CALL APPEND('SHELL/NEIGHBOUR')
C
90	CALL TTWSTR
	CALL EXPAND
     &  ('Weighting function for imaginary point interpolation ...... ')
C
	GOTO (100,110,120,130,130), KWT+1
C
100	CALL APPEND('UNWEIGHTED')
	GOTO 140
110	CALL APPEND('LINEAR')
	GOTO 140
120	CALL APPEND('QUADRATIC')
	GOTO 140
130	CALL APPEND('QUARTIC')
C
140	CALL TTWSTR
	IF (IOPT.EQ.-1) THEN
	   CALL WRITEF('Fixed point value '//
     &		'......................................... %F9.3'
     &							,FIXEDZ)
	ENDIF
	CALL WRITEF
     &  ('Relocation proportion for imaginary points '//
     &			'................ %F4.2',RELOC)
C
150	RETURN
	END
