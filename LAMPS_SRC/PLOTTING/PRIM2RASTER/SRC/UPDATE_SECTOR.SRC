	INTEGER FUNCTION UPDATE_SECTOR( FIRST_PTR, LAST_PTR, WITH )
C
**	MODULE	UPDATE_SECTOR
**	IDENT	17FE90
C
C Copyright Laser-Scan Labs., Ltd., Cambridge, England.
C
C Author J.H.Rees
C
C	Part of the IFF-to-Raster conversion program
C
C	 - updates the sector-list.
C
	IMPLICIT NONE
C
C Common blocks:
C
***	PARAMETER/LSL$CMNLSL:LSLLIBMSG/
***	PARAMETER/CMN:PRIM2RASTERMSG/
***	COMMON/CMN:PRIM2RASTER/
C
C Arguments:
C
	INTEGER*4	FIRST_PTR	! pointer to start of swathe
	INTEGER*4	LAST_PTR	! pointer to end of swathe
	INTEGER*4	WITH(2)		! what to update with.
C
C functions
	INTEGER*4	LIB$GET_VM_PAGE
C
C w/s:
	INTEGER*4	RETADR
C
C Initialise:
C
	UPDATE_SECTOR = LSL__NORMAL		! assume success
C
C Code:
C
C need a new block if no blocks at all, or last block is full
	IF (LAST_PTR.EQ.0.OR.(LAST_PTR.AND.511).EQ.504) THEN
	   UPDATE_SECTOR = LIB$GET_VM_PAGE(1,RETADR)
	   IF (.NOT.UPDATE_SECTOR) THEN
	      CALL WRITEF(
     &	'%F0.3 megabytes memory allocated for sectors',NGETVM/2048.0)
	      CALL LSL_PUTMSG(P2R__NOMEM)
	      GOTO 999
	   ENDIF
	   NGETVM = NGETVM+1
C
C if no last pointer, then this must be the first block of all, otherwise
C chain the next block onto the end of the previous one
	   IF (LAST_PTR.EQ.0) THEN
	      FIRST_PTR = RETADR
	   ELSE
	      CALL PUTLNG(RETADR,%VAL(LAST_PTR))
	   ENDIF
	   LAST_PTR = RETADR
	ENDIF
C
C put the data items into the sector
	CALL PUTLNG(WITH(1),%VAL(LAST_PTR))
	LAST_PTR = LAST_PTR+4
	CALL PUTLNG(WITH(2),%VAL(LAST_PTR))
	LAST_PTR = LAST_PTR+4
C
C end:
C
999	RETURN
	END
