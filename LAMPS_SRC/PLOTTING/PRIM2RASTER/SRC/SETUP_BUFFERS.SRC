 	INTEGER	FUNCTION SETUP_BUFFERS(XPIXELS,YPIXELS)
C
**	MODULE	SETUP_BUFFERS
**	IDENT	27FE92
C
C Copyright Laser-Scan Labs., Ltd., Cambridge, England.
C
C Author C.C.Brunt
C
C	Part of the IFF-to-Raster conversion program
C
C	 - allocates memory for raster buffers etc.
C
	IMPLICIT NONE
C
***	PARAMETER/CMN:PRIM2RASTERMSG/
***	COMMON/CMN:PRIM2RASTER/
***	COMMON/CMN:RASBUF/
C
C Arguments:
C
	INTEGER	XPIXELS,YPIXELS	! required pixels in each direction
C
C Functions:
C
	INTEGER*4	SYS$EXPREG
C
C w/s:
C
	INTEGER*4	RETADR(2)
	INTEGER		NPAGES
C
C need a byte raster buffer, sensibly large, and a multiple of the number
C pixels in X, so it covers a given number of rows
C
C set up in common the number of swathes needed, and the number of lines
C in each (RETADR and NPAGES used as temporaries here)
	CALL LIB$EMUL(XPIXELS,YPIXELS,-1,RETADR)
	CALL LIB$EDIV(BUF_SIZE,RETADR,MAX_SWATHE,NPAGES)
	MAX_SWATHE = MAX_SWATHE+1
	LINES_PER_SWATHE = (YPIXELS-1)/MAX_SWATHE + 1
C
C avoid unlucky possibility of a blank swathe at the top
10	IF ((MAX_SWATHE-1)*LINES_PER_SWATHE.GE.YPIXELS) THEN
	  MAX_SWATHE = MAX_SWATHE-1
	  GOTO 10
	ENDIF
C
C now get space for raster buffer, and arrays of pointers for swathes,
C and the mag tape buffer
C Two 4 byte pointers are required for each swathe
C
	NPAGES = LINES_PER_SWATHE*XPIXELS + MAX_SWATHE*8
	IF (.NOT.CHECK) NPAGES = NPAGES + BLOCKSIZE
	NPAGES = (NPAGES-1)/512 + 1   
	IF (LOGGING) CALL WRITEF(
     &		'Allocating %F0.2 megabytes memory',NPAGES/2048.0)
	SETUP_BUFFERS = SYS$EXPREG(%VAL(NPAGES),RETADR,,)
	IF (.NOT.SETUP_BUFFERS) THEN
	  CALL LSL_PUTMSG(P2R__NOMEM)
	  GOTO 999
	ENDIF
	IF (CHECK) THEN
	  TAPE_BUFF_ADR = 0		! not set yet
	  FIRST_ADR = RETADR(1)
	ELSE
	  TAPE_BUFF_ADR = RETADR(1)
	  FIRST_ADR = TAPE_BUFF_ADR+BLOCKSIZE
	ENDIF
	LAST_ADR = FIRST_ADR + MAX_SWATHE*4
	BUFADR = LAST_ADR + MAX_SWATHE*4
C
C clear the raster buffer out to background colour
C (only if non-zero, since EXPREG memory is demand-zero anyway)
	IF (BACKGROUND.NE.0) CALL VIOCLR(
     &		%VAL(BUFADR), LINES_PER_SWATHE*XPIXELS, BACKGROUND)
C
999	RETURN
	END
