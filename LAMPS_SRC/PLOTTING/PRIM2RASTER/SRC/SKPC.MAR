	.TITLE		SKPC
	.IDENT		/13DE90/
	.LIBRARY	/LSL$LIBRARY:LSLMACLIB/
 
	$SSDEF
 
;	Copyright LaserScan Laboratories Ltd., Cambridge, England
 
; Author CC Brunt, 30 Jan 1990
 
; INTEGER SKPC( CHAR.rb, LENGTH.rl , ARRAY.arb)
 
; return number of first char in ARRAY not equal to CHAR 
 
	CODE_PSECT	PRIM2RASTER
 
	.ENTRY	SKPC, ^M<R6,R7,R8,R9>
 
; R6 - one word full
; R7 - current length
; R8 - array address
; R9 - fill byte
 
	MOVB	@4(AP), R9		; CHAR
	MOVL	@8(AP), R7		; LENGTH
	MOVAB	@12(AP), R8		; ARRAY
 
; now, SKPC takes a WORD length, so we cannot check more than 65535
; bytes at a time. However, we have just taken a longword argument,
; so we must check to see how much we need to clear
 
	MOVZWL	#^XFFFF,R6		; useful number
 
1$:	CMPL	R7,R6			; is length more than one word ?
	BLEQU	5$			; no - we can do it in one go
 
	SKPC	R9,R6,(R8)		; check this section of array
	BNEQ	10$			; found

	SUBL2	R6,R7			; get remainder in R7
	ADDL	R6,R8			; and new start of array
	BRB	1$
 
5$:	SKPC	R9,R7,(R8)		; check the array
	BEQL	20$			; not found

10$:	SUBL3	12(AP),R1,R0
	INCL	R0
 
20$:	RET
 
; and a jiffy to move a longword
	.ENTRY	PUTLNG, ^M<>
	MOVL	@4(AP), @8(AP)
	RET

	.END
