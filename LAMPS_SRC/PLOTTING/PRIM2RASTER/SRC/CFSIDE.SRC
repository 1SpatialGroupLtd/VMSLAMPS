C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1992-08-10 14:43:22.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
 	INTEGER FUNCTION
     &	                 CF_SIDEQ
     &	                         ( SIDE_1, IX_1, IX_2 )
C
***	IDENT	10AU92
***	MODULE	CF_SIDEQ
C
C	Copyright LaserScan Laboratories Ltd., Cambridge, England
C
C Author TJ Ibbs, 2 January 1985
C
CMOD QUICKSORT version for PRIM2RASTER	- Clarke Brunt	10-Aug-1992
CMOD version for PRIM2RASTER		- Clarke Brunt	 4-Feb-1990
C
C ADC conditionals added for symbol fill version,
C    CF_S introduced, replace HERE: with CMN: 	RJH	10-Dec-1986
C
	IMPLICIT NONE
C
C CF_SIDEQ is a longword function to compare two side descriptions
C
C	   eg	CF_SIDEQ( TABLE, index1, index2 )
C
C	returns	-1 if  SIDE 'index1' < SIDE 'index2'
C		 0 if		     =
C		+1 if		     >
C
C Arguments
C
	REAL		SIDE_1(4,*)
	INTEGER		IX_1		! index into SIDE_1
	INTEGER		IX_2		! index into SIDE_1
C
C parameters
C
	PARAMETER	 X = 1		! X coordinate index
	PARAMETER	 Y = 2		! Y coordinate index
	PARAMETER	DX = 3		! delta X index
	PARAMETER	DY = 4		! delta Y index
C
C do the comparison
C
	IF ( SIDE_1(Y,IX_1).GT.SIDE_1(Y,IX_2) ) THEN
	   CF_SIDEQ = +1
	ELSEIF ( SIDE_1(Y,IX_1).LT.SIDE_1(Y,IX_2) ) THEN
	   CF_SIDEQ = -1
	ELSE
	   IF ( SIDE_1(X,IX_1).LT.SIDE_1(X,IX_2) ) THEN
	      CF_SIDEQ = +1
	   ELSEIF ( SIDE_1(X,IX_1).GT.SIDE_1(X,IX_2) ) THEN
	      CF_SIDEQ = -1
	   ELSE
	      IF ( SIDE_1(DX,IX_1).LT.SIDE_1(DX,IX_2) ) THEN
		 CF_SIDEQ = +1
	      ELSEIF ( SIDE_1(DX,IX_1).GT.SIDE_1(DX,IX_2) ) THEN
		 CF_SIDEQ = -1
	      ELSE
		 IF ( SIDE_1(DY,IX_1).GT.SIDE_1(DY,IX_2) ) THEN
		    CF_SIDEQ = +1
		 ELSEIF ( SIDE_1(DY,IX_1).LT.SIDE_1(DY,IX_2) ) THEN
		    CF_SIDEQ = -1
		 ELSE
		    CF_SIDEQ = 0
		 ENDIF
	      ENDIF
	   ENDIF
	ENDIF
C
	RETURN
	END
