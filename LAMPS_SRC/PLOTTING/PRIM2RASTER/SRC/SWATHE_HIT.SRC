C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1990-02-17 13:22:20.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	INTEGER FUNCTION SWATHE_HIT (Y_MIN, Y_MAX, F_POS)
C
**	MODULE	SWATHE_HIT
**	IDENT	17FE90
C
C Copyright Laser-Scan Labs., Ltd., Cambridge, England.
C
C Author J.H.Rees
C
C	Part of the IFF-to-Raster conversion program
C
C	 - the passed feature is examined to see which swathes it intersects;
C	   the sector-list is updated accordingly.
C
	IMPLICIT NONE
C
C Common blocks:
C
***	PARAMETER/LSL$CMNLSL:LSLLIBMSG/
***	PARAMETER/CMN:PRIM2RASTERMSG/
***	COMMON/CMN:PRIM2RASTER/
***	COMMON/CMN:RASBUF/
C
C Arguments:
C
	REAL		Y_MIN,Y_MAX		! extent of feature
	INTEGER*4	F_POS(2)		! position in the IFF-file of
						!  the feature in question.
C
C Functions:
C
	INTEGER*4	UPDATE_SECTOR		! updates the sectors incident
						!  with the current feature.
C
C w/s:
C
	INTEGER*4	I			! DO-loop counter.
	INTEGER*4	TOP,BOTTOM		! top and bottom swathes that
     &						!  the feature intercepts.
C
C Initialise:
C
	SWATHE_HIT = LSL__NORMAL		! assume success.
C
C   see which swathes it is incident with.
C   it is here that we also establish the number of swathes in this picture.
C
C   (NB. Always make sure that the bottom swathe is at least unity, and the
C        top does not exceed maximum)
C
	TOP	= INT( (NINT(Y_MAX/RESOLUTION)-1) /LINES_PER_SWATHE ) + 1
	IF (TOP.GT.MAX_SWATHE) TOP = MAX_SWATHE
	BOTTOM	= INT( NINT(Y_MIN/RESOLUTION) /LINES_PER_SWATHE ) + 1
	IF (BOTTOM.LE.0) BOTTOM = 1
C
	DO 200 I = BOTTOM, TOP
C
C update the sector, passing the pointers to the first block of data,
C and the next free space for the sector
	  SWATHE_HIT = UPDATE_SECTOR(
     &					%VAL(FIRST_ADR+4*(I-1)),
     &					%VAL(LAST_ADR+4*(I-1)),
     &					F_POS)
	  IF ( .NOT. SWATHE_HIT ) GOTO 999		! return if error
200	CONTINUE
C
C end:
C
999	RETURN
	END
