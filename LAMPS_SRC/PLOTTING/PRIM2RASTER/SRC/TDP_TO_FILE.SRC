C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1990-11-12 17:10:10.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	INTEGER FUNCTION TDP_TO_FILE()
C
**	MODULE	TDP_TO_FILE
**	IDENT	12NO90
C
C Copyright Laser-Scan Labs., Ltd., Cambridge, England.
C
C Author C.C.Brunt
C
C	Part of the IFF-to-Raster conversion program
C
C	 - outputs the buffer to disc for TDP format;
C	   after outputting, the buffer is cleared.
C
	IMPLICIT NONE
C
***	PARAMETER/CMN:PRIM2RASTERMSG/
***	PARAMETER/LSL$CMNLSL:LSLLIBMSG/
***	COMMON/CMN:PRIM2RASTER/
***	COMMON/CMN:RASBUF/
C
C Functions:
C
	INTEGER*4	FLWBLK		! writes a block to disc.
C
C workspace
	INTEGER		NRUNS
	BYTE		BRUNS(2)
	EQUIVALENCE	(NRUNS,BRUNS)
	INTEGER		I
	INTEGER		IERR
C
	TDP_TO_FILE = LSL__NORMAL
	IF (CHECK) GOTO 999
C
C fill in the number of runs into the first word of the buffer
C with the bytes reversed
	NRUNS = (TAPE_BUFF_PTR-2)/2
	CALL LIB$INSV(NRUNS,0,16,%VAL(TAPE_BUFF_ADR))
C
C write the buffer to disc
C
	DO 100 I=0,BLOCKSIZE-1,512
	  TDP_TO_FILE = FLWBLK(0,%VAL(TAPE_BUFF_ADR+I),,IERR)
	  IF ( .NOT. TDP_TO_FILE )  THEN
	    CALL LSL_PUTMSG(P2R__ERRWRIT)
	    IF (TDP_TO_FILE.EQ.LSL__SYSWRITE) CALL LSL_ADDMSG(IERR)
	    GOTO 999
	  ENDIF
100	CONTINUE
C
999	IF (CHECK) BLOCKSIZE = ((BLOCKSIZE-1)/512+1)*512
	TAPE_BUFF_PTR = 2			 	! reset pointer
C
	RETURN
	END
