C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1991-09-13 12:35:48.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE GFAIPL(XS,XE,Y)
C
**	MODULE	GFAIPL
**	IDENT	13SE91
C
C Copyright Laser-Scan Labs., Ltd., Cambridge, England.
C
C Author Paul Hardy			PGH	29-Sep-1989
C
C	Part of the IFF-to-Raster conversion program
C
C	 - takes scan lines from area fill routine, and rasterises them
C
C
	IMPLICIT NONE
C
C
C Common blocks:
C
***	COMMON/CMN:CLIP/
***	COMMON/CMN:PRIM2RASTER/
***	COMMON/CMN:RASBUF/
C
C Arguments:
C
	REAL		XS,XE		! arrays of coords
	REAL		Y
C
C w/s:
C
	INTEGER*4	ISX,IEX,IY,ITX	! integer pixel coords
C
C code:
C
C...first check that this line is in the swathe, then convert to pixel units
C
	IY = INT(Y/RESOLUTION)
	IF (IY.LT.CLIPLO) GOTO 999	! below swathe
	IF (IY.GT.CLIPHI) GOTO 999	! above swathe
	IY = IY - CLIPLO
	ISX = NINT(XS/RESOLUTION)
	IEX = NINT(XE/RESOLUTION)
C
C get ends the right way round
	IF (IEX.LT.ISX) THEN
	   ITX = IEX
	   IEX = ISX
	   ISX = ITX
	ENDIF
C
C reduce right end by one so that e.g. a line of width 1.0 does not
C come out 2 pixels wide
	IEX = IEX-1
C
C ensure we get at least something for an intended 1 pixel line
	IF (IEX.LT.ISX) THEN
	   IF (ABS(XE-XS).LE.0.99*RESOLUTION) GOTO 999
	   ISX = NINT((XS+XE)/2.0/RESOLUTION-0.5)
	   IEX = ISX
	ENDIF
C
C mirror it if required
	IF (MIRROR) THEN
	   ITX = IEX
	   IEX = LINE_END-ISX-1
	   ISX = LINE_END-ITX-1
	ENDIF
C
C...Now rasterise it
C
	CALL RASTER_HORZ_LINE(
     &		  %VAL(ISX)			! x start
     &	        , %VAL(IEX)			! x end
     &		, %VAL(IY)			! y
     &		, %VAL(V_VALUE)			! value to set pixel
     &		, %VAL(BUFADR)			! the buffer...
     &		, %VAL(LINE_END)		!...it's width..
     &		, %VAL(LINES_PER_SWATHE))	!...it's height.
C
C End:
C
999	RETURN
	END
