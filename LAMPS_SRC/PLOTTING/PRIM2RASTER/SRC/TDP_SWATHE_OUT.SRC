C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1990-11-12 18:39:44.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	INTEGER FUNCTION TDP_SWATHE_OUT(LINES)
C
**	MODULE	TDP_SWATHE_OUT
**	IDENT	12NO90
C
C Copyright Laser-Scan Labs., Ltd., Cambridge, England.
C
C Author J.H.Rees
C
C	Part of the IFF-to-Raster conversion program
C
C	 - outputs (part of) a swathe of rastered data in HELL MDP
C	   run-length format.
C
C
C
	IMPLICIT NONE
C
C Arguments:
C
	INTEGER		LINES			! lines in this swathe
C
C Common blocks:
C
***	COMMON/CMN:FORMAT/
***	COMMON/CMN:PRIM2RASTER/
***	COMMON/LSL$CMNLSL:FILENAME/
C
C Functions:
C
	INTEGER*4	HELL_MDP_RUN_GEN	! generates a run-length.
	INTEGER*4	TDP_TO_FILE		! writes buffer to file.
C
	INTEGER		I
C
	IF ( .NOT.CHECK.AND..NOT.HEADER_WRITTEN )  THEN
	  IF (LOGGING) CALL WRITEF(
     &	'Each scan line will use %N disc block%m of 512 bytes',
     &					BLOCKSIZE/512)
	  CALL FLWSEL(1)
	  CALL FLWSTR(STR_NAM(:LEN_NAM))
	  CALL FLWSTR('SCAN')
	  CALL FLWSTR('V1')
	  CALL FLWRTF('%N',LINE_END)
	  CALL FLWRTF('%N',COLUMN_END)
	  CALL FLWRTF('%N',NINT(10.0/RESOLUTION))
	  CALL FLWRTF('%N',BLOCKSIZE/512)
	  CALL FLWSTR('104')
	  CALL FLWSTR(STR_NAM(:LEN_NAM)//'.TDP')
	  CALL FLWCLO(1)
	  CALL FLWSEL(2)
	  HEADER_WRITTEN = .TRUE.
	  FILE1_OPEN = .FALSE.
	ENDIF

C all headers/labels/blank-lines are now dealt with - o/p the requested swathe.

	DO 200 I = LINES_PER_SWATHE-LINES+1, LINES_PER_SWATHE
	  TDP_SWATHE_OUT = HELL_MDP_RUN_GEN(I)
	  IF ( .NOT. TDP_SWATHE_OUT ) GOTO 999	! return - error
	  TDP_SWATHE_OUT = TDP_TO_FILE()	! write to file.
	  IF ( .NOT. TDP_SWATHE_OUT ) GOTO 999	! return - error
200	CONTINUE
C
999	RETURN
	END
