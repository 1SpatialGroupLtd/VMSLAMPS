C
C Common block holding coordinate buffers and output drawing control.
C
C
C Control for special drawing routine in shareable image
C
	CHARACTER*(*)	LOG_TEXT	! logical name of image
	PARAMETER	(LOG_TEXT='LSL$TEXT_ROUTINE')
	CHARACTER*(*)	TEXT_ENTRY	! routine name therein
	PARAMETER	(TEXT_ENTRY='DRAW_TEXT')
	CHARACTER*(*)	TEXT_ENTRY_B	! routine name therein
	PARAMETER	(TEXT_ENTRY_B='BLANK_TEXT')
	INTEGER*4	TEXTAD		! address of routine
	INTEGER*4	TEXTAD_B
	CHARACTER*(*)	LOG_SYMBOL	! logical name of image
	PARAMETER	(LOG_symbol='LSL$SYMBOL_ROUTINE')
	CHARACTER*(*)	SYMBOL_ENTRY	! routine name therein
	PARAMETER	(SYMBOL_ENTRY='DRAW_SYMBOL')
	CHARACTER*(*)	SYMBOL_ENTRY_B	! routine name therein
	PARAMETER	(SYMBOL_ENTRY_B='BLANK_SYMBOL')
	INTEGER*4	SYMBAD		! address of routine
	INTEGER*4	SYMBAD_B
	REAL	DEFCT		! default curve tolerance (separation)
	PARAMETER (DEFCT=0.25)
	REAL	DEFCIR		! default circle tolerance
	PARAMETER (DEFCIR=0.6325)! = 2*(2*0.05)**2 (arc to chord 0.05mm)
C
C Output control variables.
	REAL*8	WINDOW(4)	! from window command
	REAL*8	FPPORG(2)	! origin offset from first map
	REAL RANGE(4)		! from RA, or WINDOW command
	REAL OFFX,OFFY		! offset for plot (plotter units).
	REAL ORIX,ORIY		! origin for plot (user units).
	REAL TOTOFX,TOTOFY	! actual offset to be applied to coords.
	REAL NEWOFX,NEWOFY	! offset calculated when new origin
				! selected
	REAL DFSSIZ		! default symbol size.
	REAL DFTSIZ		! default text size (if all else fails).
	REAL INTCT(3)		! curve interpolation tolerances
	REAL CIRCT(3)		! circle interpolation tolerances
	REAL THETA		! rotation required (in radians)
	REAL COSTHETA,SINTHETA	! for computing rotation
	REAL JSTPRP		! TOLERANCE JUSTIFY value
	INTEGER	MHSCL,MHORG(2)	! map header scale/origin
	REAL*8	MDSCL,MDORG(2)	! map descriptor scale/origin
	REAL XRANGE,YRANGE	! range of limits taken from RA entry
	INTEGER	  CURCOL	! overriding colour (set by SETCON)
	LOGICAL	THKLIN		! permit/suppress thick lines.
	LOGICAL	PATLIN		! permit/suppress patterned lines.
	LOGICAL	INTLIN		! permit/suppress interpolation.
	LOGICAL	MCCON		! type of interpolation
				! .TRUE.  for McConalogue
				! .FALSE. for Akima
	LOGICAL	FRSTST		! set until 1st ST has been read.
	LOGICAL	FIRST,LAST	! set when 1st/last ST is passing
				! though STDRAW.
	LOGICAL	TXTOPT		! take height of text from TH entry
	LOGICAL	POIOPT		! TH entry is points (or mm/100)
	LOGICAL	POSOPT		! use 3rd word of FS entry as text
				! positioning code
	LOGICAL	DESOPT		! use type 2 map descriptor
	LOGICAL	ABSOPT		! absolute coords in WINDOW
	LOGICAL	LOGOPT		! log each feature plotted
	LOGICAL	BOXOPT		! draw texts as boxes
	LOGICAL	PRIOPT		! prioritised drawing of features
	INTEGER	LOG_NO		! log after this many features
	INTEGER	PLTPOS		! plotting position 0-8
C
C control for drawing offset linear features (when FRTSIZ .ne. 0.0)
C
	REAL	  LSTOFF(2,2)	! last offset segment
	REAL	  LSTPT(2)	! last point (before it was offset)
	REAL	  OFFDIST	! distance to offset
	LOGICAL	STD		! started offsetting?
	LOGICAL	OFFSETF		! .true. if offsetting feature
	LOGICAL	INVSEG		! invisible segment in feature
C
	COMMON/DRAWIN/
     &		FPPORG,WINDOW,
     &		RANGE,OFFX,OFFY,ORIX,ORIY,
     &		TOTOFX,TOTOFY,NEWOFX,NEWOFY,
     &		DFSSIZ,DFTSIZ,INTCT,CIRCT,THETA,COSTHETA,SINTHETA,
     &		JSTPRP,CURCOL,LSTOFF,LSTPT,OFFDIST,
     &		TEXTAD,SYMBAD,TEXTAD_B,SYMBAD_B,LOG_NO,
     &		THKLIN,PATLIN,INTLIN,MCCON,FRSTST,FIRST,LAST,
     &		TXTOPT,POIOPT,POSOPT,DESOPT,ABSOPT,LOGOPT,BOXOPT,PRIOPT,
     &		PLTPOS,STD,OFFSETF,INVSEG,
     &		MHSCL,MHORG,MDSCL,MDORG,XRANGE,YRANGE
C
C Coordinate arrays used for buffering between IFFBDY and STDRAW.
	INTEGER BLKSIZ		! size of 1st set of coord buffers.
	PARAMETER (BLKSIZ=200)
	INTEGER MAXATT		! maximum no of attributes - xy
	PARAMETER (MAXATT = 18)
C
	REAL BLKBUF(2,BLKSIZ)	! buffer for holding a block of coords
				! read in from ST entry.
	REAL XCOORD(BLKSIZ)	! 2nd buffer for outputting blocks
	REAL YCOORD(BLKSIZ)	! of coords.
	INTEGER BLKPTS		! number of coord pairs in BLKBUF.
	INTEGER INDX		! number of coord pairs in X/YCOORD.
C
C attribute stuff - to go with BLKBUF and X/YCOORD
	INTEGER	BLKATTV(MAXATT,BLKSIZ)
C				! attribute values
	INTEGER BLKATTC(MAXATT)	! column headers
	INTEGER	BLKNATT		! number of attributes
	INTEGER	XYATTV(MAXATT,BLKSIZ)
C				! attribute values
	INTEGER XYATTC(MAXATT)	! column headers
	INTEGER	XYNATT		! number of attributes
	COMMON/DRABUF/BLKPTS,BLKNATT,INDX,XYNATT,
     &		BLKBUF,XCOORD,YCOORD,
     &		BLKATTC,BLKATTV,XYATTC,XYATTV
