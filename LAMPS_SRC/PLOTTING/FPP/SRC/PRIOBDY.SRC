C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1994-12-08 16:56:44.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE PRIOBDY(FINISH)
C
***	MODULE	PRIOBDY
***	IDENT	08DE94
C
C Copyright Laser Scan Laboratories Ltd., Cambridge, England.
C Author:  S Townrow
C
C	Created					 ST	11 March 1992
C
C To read in the body of an IFF file when prioritised plotting.
C
	IMPLICIT NONE
C
***	COMMON/CMN:FPPDAT/
C
C Argument
C
	LOGICAL	  FINISH
C
C Workspace
C
	LOGICAL	  OK				! general success/failure
C
C Functions
C
	LOGICAL		CREATE_PRIO_LIST
	LOGICAL		SORT_PRIO_LIST
	LOGICAL		DRAW_PRIO_LIST
C
C***********************************************************************
C
	IF (PAUSE) PAUSE_COUNT = 0
C
	IF (PAUSE_POS.LT.1) THEN
	   CALL WRITEF('Performing initial pass of IFF file.')
	   OK = CREATE_PRIO_LIST(FINISH)
	   IF (OK) THEN
	      CALL WRITEF('Sorting priority list.')
	      OK = SORT_PRIO_LIST()
	      IF (OK) THEN
	         PAUSE_POS = 1
		 FINISH = .FALSE.
		 CALL WRITEF('Outputting features.')
	         CALL DRAW_PRIO_LIST(FINISH)
	      ENDIF
	   ELSE
	      GOTO 900			! may have CTRL-C'd the input
	   ENDIF
	ELSE
	   OK = DRAW_PRIO_LIST(FINISH)
	ENDIF
C
C If finished, free the memory and add an overlay
C
900	IF (.NOT.PAUSE_NOW .OR. FINISH) THEN
	   CALL WRITEF('Freeing memory')
	   CALL FREE_PRIO_LIST()
	   CALL OVERLAY()
	   PAUSE_POS = 0
	ENDIF
C
1000	RETURN
	END
