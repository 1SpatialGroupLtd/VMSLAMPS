C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1994-12-08 16:49:52.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL FUNCTION GENCIR
C
***	MODULE	GENCIR
***	IDENT	08DE94
C
C Copyright Laser Scan Laboratories Ltd, Cambridge, England.
C Author R.Daly.
C
C Created					RD	26-Aug-1983
C
C Routine to work out the variables used by STCIRC for generating
C points of a circle/arc (centre point, radius etc).
C Returns .FALSE. if successful.
C Which points we have to work from (in X/YCOORD) depends on the
C graphical type (FRTGT):-
C
C   2 - Clockwise circle arc	  > Start pt, Centre pt, End pt.
C   3 - Anticlockwise circle arc  >    "    ,    "     ,   "   .
C   4 - Circumcircle arc	  >    "    , Any edge pt, "   .
C   5 - Full circumcircle	  > Any 3 edge pts.
C
C (Direction is implicit in 4 and 5).
C
C
	IMPLICIT NONE
C
***	COMMON/CMN:DRAWIN/
***	COMMON/LSL$CMNFRT:FRTCOM/
C
C W/s.
	REAL TWOPI		! constant.
	REAL XCENTRE,YCENTRE	! coords of circle/arc centre.
	REAL DXS,DYS,DXE,DYE	! differences between pts on edge.
	REAL TWODEL		! temporary workspace.
	REAL RSSQD,RESQD	!	"	"
	REAL DSDE		!	"	"
	REAL XSDIF,YSDIF,XEDIF,YEDIF  ! differences (edge pts - centre).
	REAL RADIUS		! circle/arc radius. 
	REAL STAANG		! angle at centre of 1st point.
	REAL ENDANG		! angle at centre of end point.
	REAL TOTANG		! total angle of circle/arc.
	LOGICAL CLOCKW	! direction of circle/arc.
C
C Presets.
	DATA TWOPI/6.283185307/
C
	GENCIR = .FALSE.	! assume success
C
C Do we need to work out the centre point?
	IF ((FRTGT.EQ.CLOTYP).OR.(FRTGT.EQ.ANTTYP)) THEN
C
C Circle/arc defined by start pt, centre pt, and end pt.
	   XCENTRE=XCOORD(2)
	   YCENTRE=YCOORD(2)
C Set the direction.
	   CLOCKW=(FRTGT.EQ.CLOTYP)
	ELSE
C
C Evaluate the centre of the circle/arc if we have got 3 points
C on the circumference. Uses fairly obscure method.
	   DXS = XCOORD(1)-XCOORD(2)
	   DYS = YCOORD(1)-YCOORD(2)
	   DXE = XCOORD(3)-XCOORD(2)
	   DYE = YCOORD(3)-YCOORD(2)
	   DSDE = DXS*DYE-DYS*DXE		! cross product DSxDE
	   IF (DSDE.EQ.0.0) GOTO 97		! bad circle
	   CLOCKW = (DSDE.GT.0.0)		! sense of circle
	   TWODEL = 0.5/DSDE
	   RSSQD = DXS*DXS+DYS*DYS
	   RESQD = DXE*DXE+DYE*DYE
C Now evaluate the centre point.
	   XCENTRE=(DYE*RSSQD-DYS*RESQD)*TWODEL+XCOORD(2)
	   YCENTRE=(DXS*RESQD-DXE*RSSQD)*TWODEL+YCOORD(2)
	ENDIF
C
C Now work out the radius. The correct radius is set by the 1st
C point. The 3rd point merely provides an angle rel to the centre.
	XSDIF=XCOORD(1)-XCENTRE
	YSDIF=YCOORD(1)-YCENTRE
	RADIUS=SQRT(XSDIF**2+YSDIF**2)
C
C Work out the start and end angles at the centre
	IF (FRTGT.EQ.FULTYP) THEN	! full circle so...
	   STAANG=0.0
	   TOTANG=TWOPI
	ELSE				! arc
	   STAANG=ATAN2(YSDIF,XSDIF)
	   IF (STAANG.LT.0.0) STAANG=STAANG+TWOPI
	   XEDIF=XCOORD(3)-XCENTRE
	   YEDIF=YCOORD(3)-YCENTRE	
	   ENDANG=ATAN2(YEDIF,XEDIF)
	   IF (ENDANG.LT.0.0) ENDANG=ENDANG+TWOPI
	   TOTANG=ENDANG-STAANG
C
C Now make sure the angles are right, positive for anti-clockwise
	   IF (TOTANG.GE.0.0) THEN
	      IF (CLOCKW) TOTANG=TOTANG-TWOPI
	   ELSE
	      IF (.NOT.CLOCKW) TOTANG=TOTANG+TWOPI
	   ENDIF
C
C If arc is so short that a full circle was probably meant,
C then set the angle explicitly
	   IF((FRTGT.NE.CIRTYP).AND.(ABS(TOTANG).LT.1.0E-5))TOTANG=TWOPI
C
	ENDIF
C
C Now draw the circle/arc.
	CALL STCIRC(XCENTRE,YCENTRE,RADIUS,STAANG,TOTANG)
	GOTO 100
C
C
C Errors.
97	CALL WRITEF('Bad circle arc - points in straight line')
	GENCIR = .TRUE.			! failed
100	RETURN
C
	END
