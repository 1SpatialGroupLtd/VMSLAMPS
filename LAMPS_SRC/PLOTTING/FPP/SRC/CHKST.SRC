C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1987-06-23 11:24:40.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL FUNCTION CHKST()
C
***	MODULE	CHKST
***	IDENT	23JN87
C
C Copyright Laser Scan Laboratories Ltd., Cambridge, England.
C Author  R. Daly.
C
C Created.					RD	13-Oct-1983
C
C Function to check that the number of points in the
C current feature is sensible for the current feature type.
C Function returns TRUE if feature is to be continued
C		   FALSE if feature is to be aborted
C
	IMPLICIT NONE
C
***	COMMON/CMN:CURFT/
***	COMMON/CMN:DRAWIN/
***	COMMON/LSL$CMNFRT:FRTCOM/
C
C
C Initialise
	CHKST=.TRUE.			! assume ft is alright
C
C Empty features are to be ignored whatever the feature type
C Empty features with a feature number of 0 are legal so no error
C message is produced
	IF (TOTPTS.LE.0) THEN		! an empty ft
	   CHKST=.FALSE.
	   IF (FTNUM.EQ.0) GOTO 1000	! no error message
	   CALL WRITEF('Empty feature found.')
	   GOTO 998			! abort feature
	ENDIF
C
C Check the number of points in the feature is not more or less
C than is expected for that particular feature type
	GOTO (10,20,20,20,20,60,70,80,90,100,1000,120), FRTGT
	CALL WRITEF('Unknown feature type %^L%N found',FRTGT)
	GOTO 998			! abort feature
C
C Check line string
10	IF (TOTPTS.NE.1) GOTO 1000
	CALL WRITEF('Line string feature with only 1 point found')
	GOTO 998			! abort feature
C
C Check circle arc
20	IF (TOTPTS.EQ.3) GOTO 1000
	CALL WRITEF('Circle or arc feature with %N points found',TOTPTS)
	IF (TOTPTS.LT.3) GOTO 998	! abort feature
	TOTPTS=3
	GOTO 999			! continue feature
C
C Check interpolated curves
60	IF (TOTPTS.NE.1) GOTO 1000
	CALL WRITEF('Curved feature with only 1 point found')
	GOTO 998			! abort feature
C
C Check unorientated symbol
70	IF (TOTPTS.EQ.1) GOTO 1000
	CALL WRITEF('Unoriented symbol ft with %N points found',TOTPTS)
	TOTPTS=1
	GOTO 999			! continue feature
C
C Check oriented symbol
80	IF (TOTPTS.LE.2) GOTO 1000
	CALL WRITEF('Oriented symbol ft with %N points found',TOTPTS)
	TOTPTS=2
	GOTO 999			! continue feature
C
C Check scaled symbol
90	IF (TOTPTS.EQ.2) GOTO 1000
	CALL WRITEF('Scaled symbol ft with %N points found',TOTPTS)
	IF (TOTPTS.GT.2) TOTPTS=2	! preserve TOTPTS of 2
	GOTO 999			! continue feature
C
C Check text
100	IF (TOTPTS.LE.2) GOTO 1000
	CALL WRITEF('Text feature with %N points found',TOTPTS)
	TOTPTS=2
	GOTO 999			! continue feature
C
C Check areas
120	IF (TOTPTS.GT.2) GOTO 1000
	CALL WRITEF('Area feature with only %N points found',TOTPTS)
	IF (TOTPTS.EQ.2) GOTO 999	! continue with 2
	GOTO 998			! abort feature
C
C Function fails if the feature is to be aborted
998	CHKST=.FALSE.
999	CALL WRITEF('Layer %^W%I6 - Ft No %^L%I6 - ISQ %I6',
     &	 LAYNUM,FTNUM,ISQ)
C
1000	RETURN
	END
