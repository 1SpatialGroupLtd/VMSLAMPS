C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1987-04-30 17:53:42.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
C********************************************************************

	SUBROUTINE USER_TMRAST(MSGLUN, GRAPHCON)
C
***	MODULE	USER_TMRAST
***	IDENT	30AP87
C
C Copyright Laser-Scan Laboratories Ltd., Cambridge, England
C
C Field the timer AST
C Report plot progress etc.
C
	IMPLICIT NONE
C
C arguments
	INTEGER		MSGLUN			! LUN for sending message back
	INTEGER		GRAPHCON		! routine controls graphics
						!  call GRAPHCON(1) for ON
						!  call GRAPHCON(2) for OFF
						!  call GRAPHCON(3) for SIGNAL
						!  NOT USED at present
C
C common
***	COMMON/CMN:TITLE/
C
C w/s
	INTEGER		LAYERLEN		! length of IFF layer
	INTEGER		LAYERPOS		! position in IFF layer
	INTEGER		LAYERFRAC		! percentage of layer done
	CHARACTER*200	PROGBUF			! where to put progress msg
	INTEGER		PROGLEN			! length of progress msg
	INTEGER		I
C
C send back display message
	IF (TITLE_DISPLAYLEN.NE.0) THEN
	  CALL DASHEX_MSG(MSGLUN, 'MSG 1 '//TITLE_DISPLAY(:TITLE_DISPLAYLEN))
	ENDIF
C report any plot progress
	IF (TITLE_LAYERSTART.NE.0 .AND.
     1		TITLE_LAYEREND.GT.TITLE_LAYERSTART .AND.
     2		TITLE_LAYERPOS.GT.TITLE_LAYERSTART .AND.
     3		TITLE_LAYEREND.GT.TITLE_LAYERPOS) THEN
	  LAYERLEN = TITLE_LAYEREND - TITLE_LAYERSTART
	  LAYERPOS = TITLE_LAYERPOS - TITLE_LAYERSTART
	  LAYERFRAC = 100*LAYERPOS/LAYERLEN
	  PROGBUF(1:1) = '|'
	  PROGLEN = 2
	  DO 10 I=1,97,3
	    IF (I.LE.LAYERFRAC) THEN
	      PROGBUF(PROGLEN:PROGLEN) = '>'
	    ELSE
	      PROGBUF(PROGLEN:PROGLEN) = ' '
	    ENDIF
	    PROGLEN = PROGLEN+1
10	  CONTINUE
	  PROGBUF(PROGLEN:PROGLEN) = '|'
	  CALL DASHEX_MSG(MSGLUN, 'MSG -2 '//PROGBUF(:PROGLEN))
	ELSE
	  CALL DASHEX_MSG(MSGLUN, 'MSG -2 ')
	ENDIF
C
C exit
	RETURN
	END
C
C
C********************************************************************

	SUBROUTINE USER_MSGAST(MSGLUN, GRAPHCON, MESSAGE)
C
***	MODULE	USER_MSGAST
***	IDENT	19DE86
C
C Copyright Laser-Scan Laboratories Ltd., Cambridge, England
C
C Field the message AST
C Turn on/off graphics etc.
C
	IMPLICIT NONE
C
C arguments
	INTEGER		MSGLUN			! LUN for sending message back
	INTEGER		GRAPHCON		! routine controls graphics
						!  call GRAPHCON(1) for ON
						!  call GRAPHCON(2) for OFF
						!  call GRAPHCON(3) for SIGNAL
	CHARACTER*(*)	MESSAGE			! message
C
C common
***	COMMON/CMN:TITLE/
C
C
C do something useful sometime
C
CCC	TYPE *, 'MSG received ''',MESSAGE,''''
CCC	CALL DASHEX_MSG(MSGLUN, MESSAGE)		! send it back for test!
	IF (INDEX(MESSAGE,'ON').NE.0) CALL GRAPHCON(1)	! on
	IF (INDEX(MESSAGE,'OFF').NE.0) CALL GRAPHCON(2) ! off
	IF (INDEX(MESSAGE,'SIG').NE.0) CALL GRAPHCON(3)	! signal
C
C
C exit
	RETURN
	END
C
C
C********************************************************************


