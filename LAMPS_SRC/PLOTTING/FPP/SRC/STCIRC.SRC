C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1994-11-15 16:59:02.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE STCIRC(XCENTRE,YCENTRE,RADIUS,STAANG,TOTANG)
C
***	MODULE	STCIRC
***	IDENT	15NO94
C
C Copyright Laser Scan Laboratories Ltd., Cambridge, England.
C Author  R. Daly
C
C amended for FRTLIB SRI plotting		PGH	22-Sep-1983
C Created.					RD	25-Aug-1983.
C
C Routine to generate the intermediate points on a circle/arc.
C Method used is to work out the number of segments which are
C required and then use this to work out the angle subjected
C at the centre by a segment (ANGINC). The position of a point
C to be generated is found using the centre position, the radius
C and the angle at the centre:-
C	X = Xcentre + (Radius * COS(angle))
C	Y = Ycentre + (Radius * SIN(angle))
C
C Given that the starting angle and the angular increment are
C known the angles of each point can be found in turn using:-
C	SIN(a+b) = SIN(a)*COS(b) + COS(a)*SIN(b)
C	COS(a+b) = COS(a)*COS(b) - SIN(a)*SIN(b)
C
	IMPLICIT NONE
C
***	COMMON/LSL$CMNFRT:FRTCOM/
***	COMMON/CMN:CURFT/
***	COMMON/CMN:DRAWIN/
***	COMMON/CMN:FPPDAT/
C
C arguments
	REAL XCENTRE,YCENTRE	! coords of centre pt of arc/circle.
	REAL RADIUS		! radius (from 1st pt to centre).
	REAL STAANG		! initial angle (c'wise from north).
	REAL TOTANG		! total angle of arc/circle.
C
C W/s
	REAL RTEMP		! temporary real.
	REAL SINANG,COSANG	! sin/cos of angle of current point.
	REAL SININC,COSINC	! sin/cos of the angular increment.
	INTEGER	NUMSEG		! no. of segments actually required.
	INTEGER	I
	REAL	PX(3),PY(3)
	REAL	TWOPI
	PARAMETER	(TWOPI=6.283185307)
	INTEGER	ID
C
C plot using hardware circle if required,
C but not if patterned, and pattern cannot be done in hardware
	IF (HWCIR.AND.FRTHWS.AND..NOT.
     &		(PATLIN.AND.FRTSC.NE.0.AND.PATHWL.EQ.0)) THEN
C
	   IF (ABS(ABS(TOTANG)-TWOPI).LT.1E-5) THEN
	      PX(1) = XCENTRE
	      PY(1) = YCENTRE
	      PX(2) = PX(1)+RADIUS
	      PY(2) = PY(1)
	      CALL GGDP(2,PX,PY,1)	! full circle
	   ELSE
	      PX(1) = XCENTRE + RADIUS*COS(STAANG)
	      PY(1) = YCENTRE + RADIUS*SIN(STAANG)
	      PX(2) = XCENTRE + RADIUS*COS(STAANG+TOTANG)
	      PY(2) = YCENTRE + RADIUS*SIN(STAANG+TOTANG)
	      PX(3) = XCENTRE
	      PY(3) = YCENTRE
	      ID = 2			! assume c'wise
	      IF (TOTANG.GE.0) ID = 3	! ac'wise
	      CALL GGDP(3,PX,PY,ID)	! arc
	   ENDIF
	   GOTO 9999
	ENDIF
C
C Work out number of segments required.
	RTEMP=CIRCT(1)
	IF (CIRCT(2).NE.0.0) RTEMP=RTEMP+CIRCT(2)*SQRT(RADIUS)
	IF (CIRCT(3).NE.0.0) RTEMP=RTEMP+CIRCT(3)*RADIUS
C	
	NUMSEG=IFIX(ABS(RADIUS*TOTANG)/RTEMP)+1
C
C Work out the angle subtended at the centre by a single segment.
	RTEMP=TOTANG/FLOAT(NUMSEG)
C
C Initialise variables used in the main loop.
	SININC=SIN(RTEMP)	! for the angular increment.
	COSINC=COS(RTEMP)
	SINANG=SIN(STAANG)	! for the angle of the current (1st) pt
	COSANG=COS(STAANG)
C
C Main loop (for generating position of each point).
	DO 10 I=1,NUMSEG+1
C Work out the position of the next point
	   CALL ADDBLK(1,XCENTRE+RADIUS*COSANG,
     &			 YCENTRE+RADIUS*SINANG)
C Work out the angle (at the centre) of the next point
	   RTEMP=SINANG
	   SINANG=SINANG*COSINC+COSANG*SININC
	   COSANG=COSANG*COSINC- RTEMP*SININC
10	CONTINUE
C
9999	RETURN
	END
