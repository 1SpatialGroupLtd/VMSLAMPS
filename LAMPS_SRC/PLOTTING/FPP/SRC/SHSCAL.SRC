	SUBROUTINE SHSCAL
C
***	MODULE	SHSCAL
***	IDENT	08DE94
C
C Copyright Laser Scan Laboratories Ltd., Cambridge, England
C
C Author					PGH	10AU87
C
C to show the current scale settings
C
	IMPLICIT NONE
C
***	COMMON/CMN:DRAWIN/
***	COMMON/CMN:FPPDAT/
***	COMMON/CMN:SCALES/
C
C workspace
	REAL	TMPSCL
	REAL	DEGRAD
	PARAMETER	(DEGRAD=180.0/3.14159265)
C
	TMPSCL = SCALE
C
	CALL WRITEF
	IF (HADSF) THEN		! use data from SCALE FACTOR
	   CALL WRITEF('Scale %G0.7 from SCALE FACTOR command',SCAFAC)
	   TMPSCL = SCAFAC
	ELSEIF (HADSA) THEN	! use LIMITS and size of screen
	   CALL TTWSTR('Scale from SCALE AUTO command')
	ELSEIF (HADSM.AND.HADSS) THEN
	   CALL EXPAND('Sheet Scale is %G0.7, ',SCASOU)
	   CALL WRITAP('IFF Units are mm*%G0.7 ',SCAMAP)
	   CALL WRITEF('from SCALE SHEET/IFF commands')
	   TMPSCL = SCAMAP/SCASOU
	ELSE
	   IF (HADSM.AND.MAPSCL.GT.0) THEN
	      TMPSCL=SCAMAP/MAPSCL
C
C when no SCALE commands have been given
C use scale of map and assume IFF units are in metres 
C (OS case by default)
C
	   ELSEIF (MAPSCL.GT.0) THEN
	      TMPSCL=1000.0/MAPSCL
	   ELSE
	      TMPSCL=1
	   ENDIF
C
	   CALL EXPAND('Sheet Scale is %G0.7, ',MAPSCL)
	   CALL WRITAP('IFF Units are mm*%G0.7 ',SCAMAP)
	   CALL WRITEF('from IFF header and SCALE IFF command')
	ENDIF
C
	IF (HADSA) THEN
	   IF (SCALED) CALL WRITEF('Overall scale is %G0.7 ',SCALE)
	ELSE
	   CALL EXPAND('Overall scale is %G0.7 ',TMPSCL)
	   IF (ENLARG.NE.1.0) CALL APPEND(
     &			'Enlargement factor is %F0.1',ENLARG)
	   CALL TTWLIN
	ENDIF
C
	CALL EXPAND('Plot position is %N  ',PLTPOS)
	IF (THETA.NE.0.0) CALL APPEND('Rotation %G0.4',THETA*DEGRAD)
	CALL TTWLIN
C
	IF ((HADOFF.OR.HADORI).AND..NOT.HADSA) THEN
	   IF (HADOFF) THEN
	      CALL WRITEF('Plot offset by %G0.7, %G0.7 sheet mm.',
     &							OFFX,OFFY)
	   ELSE
	      CALL WRITEF('Plot offset by %G0.7, %G0.7 IFF units',
     &							ORIX,ORIY)
	   ENDIF
	ENDIF
C
	IF (HADWIN) THEN
	   CALL EXPAND
	   IF (ABSOPT) THEN
	      CALL EXPAND('Absolute w')
	   ELSE
	      CALL EXPAND('W')
	   ENDIF
	   CALL WRITAP('indow%^D SW %G0.15, %G0.15  NE %G0.15, %G0.15',
     &			WINDOW(1),WINDOW(3),WINDOW(2),WINDOW(4))
	ENDIF
C
	IF (.NOT.NEWORG) CALL WRITEF(
     &		'Base  origin is %^D%G0.15, %G0.15',FPPORG(1),FPPORG(2))
C
	RETURN
	END
