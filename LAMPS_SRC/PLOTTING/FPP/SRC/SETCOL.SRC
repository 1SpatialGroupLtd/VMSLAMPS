	SUBROUTINE SETCOL(ICOL,PRIORITY_DRAWING)
C
***	MODULE	SETCOL
***	IDENT	15FE91
C
C Copyright Laser Scan Laboratories Ltd, Cambridge, England.
C Author Clarke Brunt
C
C Extracted from SETLIN				CCB	26-Oct-1983
C
C Routine to set up feature colour
C Attempt to set colour .LE.0 is turned into colour 1 (corrected 14DE87)
C Also sets area hatching width and separation
C 
	IMPLICIT NONE
C
***	COMMON/CMN:CURFT/
***	COMMON/CMN:DRAWIN/
***	COMMON/CMN:FPPDAT/
***	COMMON/LSL$CMNFRT:FRTCOM/
***	COMMON/CMN:SCALES/
C
C argument
	INTEGER*4	ICOL		! colour
	LOGICAL		PRIORITY_DRAWING
C
C workspace
	INTEGER		COL		! local copy
	REAL		TAREA(2)
	INTEGER		HWL
C
	IF (PRIORITY_DRAWING) THEN
	   COL = ICOL
	ELSE
 	   COL = MAX(ICOL,1)		! don't allow 0
	ENDIF
C
C Set the colour
C patterned fill areas are drawn as lines, but if PATTERN is DISABLED,
C then they are drawn as fill areas, and the colour must be set up
	IF (FRTARE) THEN
           IF (FRTSC.GE.-1.OR..NOT.PATLIN) THEN
	      CALL GSFACI(COL)		! fill area colour index
	      CALL LSG_BEGIN_AREA	! begin composite area
	   ELSE
	      CALL GSPLCI(COL)		! polyline colour index
	      CALL FRT_BEGIN_FILL	! begin composite pat area
	   ENDIF
	ELSE
	   IF (.NOT.(FRTTEX.OR.FRTSYM)) THEN
	      CALL GSPLCI(COL)		! polyline colour index
	   ENDIF
	ENDIF
C
C Set hatching line width and separation -
C for fill areas may want values from FRT, for symbols and texts
C set to default, in case values in SCT are not being used
	IF (FRTARE.OR.FRTTEX.OR.FRTSYM) THEN
	   TAREA(1) = NOMLW	! thin lines (device metres)
	   IF (FRTARE.AND.(FRTWID.GT.0.0.OR.FRTSIZ.GT.0.0)
     &				.AND..NOT.HADHAT) THEN
C
C use values from FRT
	      IF (THKLIN) TAREA(1)=FRTWID/ENLARG/1000.0
	      TAREA(2)=FRTSIZ/ENLARG/1000.0
	   ELSE
C
C use default values (or values from HATCH command)
	      IF (THKLIN) TAREA(1)=HATWID/ENLARG/1000.0
	      TAREA(2)=HATSEP/ENLARG/1000.0
C
C set up characteristics for special drawing of texts
	      IF (FRTTEX.AND.BOXOPT) THEN
	         CALL GSPLCI(ICOL)	! draw texts as boxes
	         CALL GSLWSC(1.0)  	! at minimum line width
	      ENDIF
	   ENDIF
	   CALL GESC(3,TAREA)
	ENDIF
C
C set up hardware for lines
	HWL = FRTHWL
	IF (.NOT.HWLIN) HWL = 1		! force solid lines?
	IF (PATHWL.GT.0) HWL = PATHWL	! hardware pattern?
	CALL SRIGSL(HWL,FRTHW+1,0.0)	! angle of tool set to 0.0
C
	RETURN
	END
