	SUBROUTINE STDRAW
C
***	MODULE	STDRAW
***	IDENT	08DE94
C
C Copyright Laser Scan Laboratories Ltd., Cambridge, England.
C Author  R. Daly.
C
C Created					RD	23-Jun-1983
C
C Routine to do the actual plotting of the data by calling the
C appropriate GKS routines in the GKS-lookalike library.
C
	IMPLICIT NONE
C
***	COMMON/CMN:CURFT/
***	COMMON/CMN:DRAWIN/
***	COMMON/LSL$CMNLSL:EXPC/
***	COMMON/CMN:FPPDAT/
***	COMMON/LSL$CMNFRT:FRTACD/
***	COMMON/LSL$CMNFRT:FRTCOM/
***	COMMON/CMN:LABEL/
C
C W/s.
	INTEGER I	     	! loop counter
	REAL X,Y		! origin of text
	REAL XOUT(5),YOUT(5)	! box around text
	INTEGER*4 STRDSC(2)	! text ft character string descriptor.
	INTEGER*2 STRDSW(2)
	EQUIVALENCE (STRDSC,STRDSW)
	REAL	AUX(8)		! LITES2 style auxiliary array
C
C Functions.
	LOGICAL	SRIFND,SRIPLT
	LOGICAL	TRITXT		! plots text string.
	EXTERNAL TRITXT,SRIPLT,TRISCN
	LOGICAL	GENCIR		! plots circle
C
C What graphical type is this feature?
	GOTO (10,20,20,20,20,40,50,50,50,60,70,10),FRTGT
C
C***********************************************************************
C
C Line string or fill area.
C Loops should take care of themselves.
10	CALL ADDBLK(INDX,XCOORD(1),YCOORD(1))
	GOTO 1000
C
C***********************************************************************
C
C C'wise circle arc / antic'wise circle arc.
C Circle/arc defined by centre and 2 points on the circumference.
C Circum-circle arc / full circum-circle.
C Circle/arc defined by 3 points on the circumference.
20	IF (GENCIR()) GOTO 999
	GOTO 1000
C
C***********************************************************************
C
C Interpolated curve 
C HWCUR true if hardware curves allowed
C FRTHWS true if this feature is flagged in the FRT as hardware curve
C Plot using hardware curve if required,
C but not if patterned, and pattern cannot be done in hardware
40	IF (INTLIN.AND..NOT.				! curves allowed
     &	      (HWCUR.AND.FRTHWS.AND..NOT.		! h/w curve
     &	         (PATLIN.AND.FRTSC.NE.0.AND.PATHWL.EQ.0))) THEN
	   CALL INTERP
	ELSE
	   CALL ADDBLK(INDX,XCOORD(1),YCOORD(1))	! straight line
	ENDIF
	GOTO 1000
C
C***********************************************************************
C
C Unoriented/oriented/scaled symbol.
50	IF (SIZE.LE.0.0) GOTO 1000		! safety check.
C
C set up an auxiliary array as in LITES2
	AUX(1) = ANGLE
	AUX(2) = COS(ANGLE)
	AUX(3) = SIN(ANGLE)
	AUX(4) = SIZE
	IF (HWSYM.AND.FRTHWS) THEN	! plot h/w symbol
	   IF (SRIPLT(FRTHW,XCOORD(1),YCOORD(1),SIZE,ANGLE,FRTHWS))
     &	             GOTO 999
	ELSE
C If there is a special symbol drawing routine, then use it
C NB CALLR in COMTBL.MAR - call routine with address in SYMBAD
C passing argument list.
	   IF (SYMBAD .NE. 0) THEN
	      CALL CALLR(
     &        FRTFC,FRTSC,XYNATT,XYATTC,XYATTV(1,1),XCOORD(1),
     &        YCOORD(1),AUX,TRITXT,SRIPLT,TRISCN,%VAL(TEXTAD),ISTAT,
     &        %VAL(SYMBAD))
	   ELSE
	      IF (SRIPLT(FRTSC,XCOORD(1),YCOORD(1),SIZE,ANGLE)) GOTO 999
	   ENDIF
	ENDIF
	GOTO 1000
C
C***********************************************************************
C
C Text.
C TRITXT currently takes a character variable so a string descriptor
C has to be set up.
60	IF (SIZE.LE.0.0) GOTO 1000		! safety check.
	STRDSW(1)=TXPTR				! length.
	STRDSW(2)=0				! class.
	STRDSC(2)=%LOC(TXBUF(1))		! position.
C
C set up an auxiliary array as in LITES2
	AUX(1) = ANGLE
	AUX(2) = COS(ANGLE)
	AUX(3) = SIN(ANGLE)
	AUX(4) = SIZE
	AUX(5) = MINX
	AUX(6) = MAXX
	AUX(7) = MINY
	AUX(8) = MAXY
C
C If there is a special text drawing routine, then use it
C NB CALLR in COMTBL.MAR - call routine with address in TEXTAD
C passing argument list
	IF (TEXTAD.NE.0) THEN
	   CALL CALLR(
     &		STRDSC,FRTFC,FRTSC,XCOORD(1),YCOORD(1),
     &		AUX,TRITXT,SRIPLT,TRISCN,ISTAT,HWTXT.AND.FRTHWS,
     &		%VAL(TEXTAD))
	ELSE
C
C draw text, or a box
	   IF (.NOT.BOXOPT) THEN
C
C calculate position of bottom left of text
	      X = XCOORD(1)+AUX(5)*AUX(2)-AUX(7)*AUX(3)
	      Y = YCOORD(1)+AUX(5)*AUX(3)+AUX(7)*AUX(2)
	      IF (TRITXT(
     &		STRDSC,FRTSC,X,Y,AUX(4),AUX(1),HWTXT.AND.FRTHWS)) GOTO 999
	   ELSE
C
C get box around text
	      CALL BOX_AUX(XCOORD(1),YCOORD(1),AUX,0.0,XOUT,YOUT)
C
C draw box
	      CALL SRIGPL(5,XOUT,YOUT)
	   ENDIF
	ENDIF
	GOTO 1000
C
C***********************************************************************
C
C Symbol string.
70	IF (SIZE.LE.0.0) GOTO 1000		! safety check.
C
C set up an auxiliary array as in LITES2
	AUX(1) = ANGLE
	AUX(2) = COS(ANGLE)
	AUX(3) = SIN(ANGLE)
	AUX(4) = SIZE
	DO 71 I=1,INDX
	   IF (HWSYM.AND.FRTHWS) THEN	! plot h/w symbol
	      IF (SRIPLT(FRTHW,XCOORD(I),YCOORD(I),SIZE,ANGLE,FRTHWS))
     &	             GOTO 999
	   ELSE
C
C If there is a special symbol drawing routine, then use it
C NB CALLR in COMTBL.MAR - call routine with address in SYMBAD
C passing argument list.
	      IF (SYMBAD .NE. 0) THEN
	         CALL CALLR(
     &           FRTFC,FRTSC,XYNATT,XYATTC,XYATTV(1,I),XCOORD(I),
     &           YCOORD(I),AUX,TRITXT,SRIPLT,TRISCN,%VAL(TEXTAD),ISTAT,
     &           %VAL(SYMBAD))
	      ELSE
	         IF (SRIPLT(FRTSC,XCOORD(I),YCOORD(I),SIZE,ANGLE)) 
     &           GOTO 999
	      ENDIF
	   ENDIF
71	CONTINUE
	GOTO 1000
C
C***********************************************************************
C General error information.
999	CALL WRITEF('Layer %^W%I6 - Ft No %^L%I6 - ISQ %I6',
     &	 LAYNUM,FTNUM,ISQ)
C
1000	FIRST=.FALSE.	! 1st block of ft has now been through STDRAW.
C
	RETURN
	END
