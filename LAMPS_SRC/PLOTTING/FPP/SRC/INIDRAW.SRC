C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1992-02-20 12:18:26.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL FUNCTION INIDRAW
C
***	IDENT	20FE92
***	MODULE	INIDRAW
C
C	Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C	Created					RWR	20-Feb-1992
C
C Description
C
C To initialise space for drawing buffers
C Returns .FALSE. if initialised, .TRUE. if there was an error
C
	IMPLICIT NONE
C
***	COMMON/CMN:GRABUF/
***	COMMON/CMN:DRAWIN/
C
	INTEGER*4	LIB$GET_VM
	INTEGER		TRNALL		! LSLLIB, translate logical name
	LOGICAL		RDLONG
	LOGICAL		RDCHS
C
C local variable
	INTEGER		I
	INTEGER		LENGTH
	INTEGER		STATUS
	BYTE		CH
	CHARACTER*20	TMP_STR
C
	INIDRAW = .TRUE.			! assume failure
C
C get the maximum number of variables to be allowed
	BLOSIZ = DEFAULT_BLOSIZ
	IF (TRNALL(GRABUF_LOG_NAME,TMP_STR)) THEN
	   LENGTH = LEN(TMP_STR)
	   CALL SETAUX(%REF(TMP_STR),LENGTH)
	   IF (RDLONG(BLOSIZ)) BLOSIZ = DEFAULT_BLOSIZ
	   IF (.NOT.RDCHS(CH)) BLOSIZ = DEFAULT_BLOSIZ
	ENDIF
C
C don't allow a silly length of arrays
	BLOSIZ = MAX(0,BLOSIZ)
	BLOSIZ = MAX(BLKSIZ,BLOSIZ)		! bigger than internal buffers
C
C get the space for the arrays - make them contiguous
C
C 2 arrays of real*4, each BLOSIZ long
C
	LENGTH = 2 * 4 * BLOSIZ
	STATUS = LIB$GET_VM(LENGTH,XOUT_ADDR)
	IF (.NOT.STATUS) THEN
	   CALL WRITEF('Failed to get virtual memory for drawing buffers')
	   GOTO 999
	ENDIF
C
C now divide this into 2
	YOUT_ADDR = XOUT_ADDR + 4*BLOSIZ
C
	INIDRAW = .FALSE.				! success
C
999	RETURN
	END
