C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1988-06-20 15:39:02.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE SHSELAC
C
***	IDENT	20JN88
***	MODULE	SHSELAC
C
C	Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C	Created					CCB	 3-Jun-1988
C
C	Show AC selections
C
	IMPLICIT NONE
C
***     COMMON/CMN:ACSEL/
***     COMMON/LSL$CMNLSL:EXPC/
***     COMMON/LSL$CMNFRT:FRTACD/
C
C functions
	LOGICAL	ACDFND
	LOGICAL	IS_REAL_AC
C
C workspace
	INTEGER	AC,T
	INTEGER	LASTTYPE
	CHARACTER*(ACD_FORMAT_MAX+2) F
	INTEGER		F_LEN
	LOGICAL		TEXT
C
C wonderful array to turn 3 logical selection flags into an inequality
	CHARACTER*3	INEQ(-1:0,-1:0,-1:0)
	INTEGER		INEL(-1:0,-1:0,-1:0)
	DATA INEQ/' ++',' >=',' <>',' > ',' <=','   ',' < ',' --'/
	DATA INEL/    3,    3,    3,    2,    3,    1,    2,    3/
C
	LASTTYPE = -1
	AC = 1
C
10	IF (ACSEL(AC).TYPE.NE.LASTTYPE) THEN
	   LASTTYPE = ACSEL(AC).TYPE
	   TEXT = .FALSE.
C
C try to get a name for the AC from the ACD table
	   IF (.NOT.ACDFND(ACSEL(AC).TYPE,.FALSE.)) THEN
C
	      IF (ACD_DATA_TYPE.EQ.ACD_DATATYPE_C) THEN
	         F     = '"'//ACD_FORMAT(:ACD_FORMAT_LEN)//'"'
	         F_LEN = ACD_FORMAT_LEN + 2
	      ELSE
	         F     = ACD_FORMAT(:ACD_FORMAT_LEN)
	         F_LEN = ACD_FORMAT_LEN
	      ENDIF
	      CALL EXPAND('AC %S',ACD_NAME(:ACD_NAME_LEN))
	   ELSE
C
C treat as unknown name
	      IF (IS_REAL_AC(ACSEL(AC).TYPE)) THEN
	         F = '%G0.7'
	         F_LEN = 5
	      ELSE
	         F = '%N'
	         F_LEN = 2
	      ENDIF
	      CALL EXPAND('AC %N',ACSEL(AC).TYPE)
	   ENDIF
	ELSE
	   TEXT = .TRUE.
	   IF (ACSEL(AC).TXTL.EQ.0) THEN
	      CALL EXPAND(' Text ""')
	   ELSE
	      CALL EXPAND(' Text "%S"',ACSEL(AC).TXT(:ACSEL(AC).TXTL))
	   ENDIF
	ENDIF
C
	IF (.NOT.ACSEL(AC).PRES) THEN
	   CALL APPEND(' absent')
	ELSEIF (ACSEL(AC).NTOG.EQ.0) THEN
	   IF (ACSEL(AC).SLCT) THEN
	      IF (ACSEL(AC).ALL) THEN
	         CALL APPEND(' All values')
	      ELSE
	         CALL APPEND(' All values deselected')
	      ENDIF
	   ENDIF
	ELSE
C
C deal with toggles
	   DO 20 T=1,ACSEL(AC).NTOG
	      CALL APPEND('%S'//F(:F_LEN)//',',
     &		INEQ(ACSEL(AC).TOG(T).SEL(1),
     &		     ACSEL(AC).TOG(T).SEL(2),
     &		     ACSEL(AC).TOG(T).SEL(3))(:
     &		INEL(ACSEL(AC).TOG(T).SEL(1),
     &		     ACSEL(AC).TOG(T).SEL(2),
     &		     ACSEL(AC).TOG(T).SEL(3))),
     &		ACSEL(AC).TOG(T).VAL)
20	   CONTINUE
	   EXPLEN = EXPLEN-1		! remove trailing ','
	ENDIF
	CALL TTWLIN
	AC = AC+1
	IF (AC.LE.NACSEL) GOTO 10
C
	RETURN
	END
