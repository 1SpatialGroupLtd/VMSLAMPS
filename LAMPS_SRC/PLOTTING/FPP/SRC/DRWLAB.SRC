C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1994-12-08 16:49:32.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE DRWLAB
C
***	MODULE DRWLAB
***	IDENT  08DE94
C
C	Author: D R Catlow
C
C	Subroutine to draw label
C	Sets up label characteristics i.e. size, colour and angle
C
	IMPLICIT NONE
C
***	COMMON/LSL$CMNFRT:FRTACD/
***	COMMON/LSL$CMNFRT:FRTCOM/
***	COMMON/CMN:LABEL/
***	COMMON/CMN:CURFT/
***     COMMON/CMN:DRAWIN/
***	COMMON/CMN:FPPDAT/
***	COMMON/CMN:SCALES/
C
	PARAMETER  TWOPI=6.283185307
	PARAMETER  PI=3.141592654
C
	REAL		ANG
	REAL    	XDIF
	REAL            YDIF
	REAL		PLUSX		! X offset
	REAL		PLUSY		! Y offset
	REAL		TEMPX		! Temporary store
	INTEGER		FCOL		! feature colour
	INTEGER		I
C
C Functions called
	LOGICAL		FRTFND
	LOGICAL		TRIFND
	INTEGER		EXPAND
C
	FCOL = FRTCOL			! save feature colour
C
C Ensure that our labelling font exists
	IF (.NOT.HADFNT) THEN
	   IF (TRIFND(0,LABFNT)) THEN
	      CALL WRITEF('Labelling is disabled - no font %^L%N in TRI')
	      HADLAB = .FALSE.
	      GOTO 999
	   ENDIF
	   HADFNT = .TRUE.
	ENDIF
C
C Build up labelling text
	LABIND = 0
C
C need feature serial number?
C
	IF (LABNF) THEN
	   LABIND = EXPAND('%W%N  ',%REF(LAB_TEXT(LABIND+1:)),FTNUM)
	ENDIF
C
C need feature code?
C
	IF (LABFC) THEN
	   LABIND = LABIND + EXPAND('%W%^W%N  ',
     &	                     %REF(LAB_TEXT(LABIND+1:)),FTCODE)
	ENDIF
C
C need any ACs?
C
	DO 100, I=1,NUM_LAB_AC
	   IF (HAD_LAB_AC(I) ) THEN
C
C output the value if required
C
	      IF (LABACV(I)) THEN
	         LABIND = LABIND + 
     &	               EXPAND('%W'//LABACFORMAT(I)(:LABACF_LEN(I))//' ',
     &	                     %REF(LAB_TEXT(LABIND+1:)),LABACVAL(I))
	      ENDIF
C
C output the text if required
C
	      IF (LABACTXT(I)) THEN
	         LABIND = LABIND + EXPAND('%W%A  ',
     &	                     %REF(LAB_TEXT(LABIND+1:)),LABACBUF(1,I))
	      ENDIF
	   ENDIF
100	CONTINUE
C
C remove any trailing spaces
C
200	IF (LABIND.GT.0) THEN
	   IF (LAB_TEXT(LABIND:LABIND).EQ.' ') THEN
	      LABIND = LABIND - 1
	      GOTO 200
	   ENDIF
	ENDIF
C
	LABX(1)=BLKBUF(1,1)
	LABY(1)=BLKBUF(2,1)
	IF (BLKPTS.GT.1) THEN
	   LABX(2)=BLKBUF(1,2)
	   LABY(2)=BLKBUF(2,2)
	ELSE
	   LABX(2)=LABX(1)		! force angle 0
	   LABY(2)=LABY(1)
	ENDIF
C
C Set up colour
C SETCOL just to set hardware lines (since we have a text GT)
	FRTFLG = 0
	FRTHW  = 0
	FRTHWL = 0
	FRTWID = 0.0
	FRTSIZ = 0.0
	FRTTEX = .TRUE.		! pretend a text FC
	FRTSC = LABFNT		! with this font (get italic to work)
	CALL SRIGSL(FRTHWL,FRTHW+1,0.0)
	IF (HADCOL) THEN
	   CALL SRICOL(LABCOL)			! labelling colour
	ELSEIF (CURCOL.LE.0) THEN
	   CALL SRICOL(MAX(FCOL,1))		! colour of feature
	ELSE
	   CALL SRICOL(CURCOL)			! overriding colour
	ENDIF
	FRTFC = -1			! FRTCOM well and truely nadjered
C
	PLUSX = LABOFF(1)
	PLUSY = LABOFF(2)
	ANG = 0.0				! default
C
	IF (HADANG) THEN		! angle of labelling set by user
	   ANG = LABANG*PI/180.0	! convert to radians
	ELSE
C
C Calculate angle of label using first two data points
	   XDIF = LABX(2)-LABX(1)
	   YDIF = LABY(2)-LABY(1)
	   IF (XDIF.EQ.0.0.AND.YDIF.EQ.0.0) GOTO 300
	   ANG = ATAN2(YDIF,XDIF)
	ENDIF
C
	PLUSX = LABOFF(1)*COS(ANG)-LABOFF(2)*SIN(ANG)
	PLUSY = LABOFF(1)*SIN(ANG)+LABOFF(2)*COS(ANG)
C
C Set up correct labelling position
300	LABX(1) = LABX(1)*SCALE
	LABY(1) = LABY(1)*SCALE
C
C apply any rotation to plot
	TEMPX = LABX(1)*COSTHETA - LABY(1)*SINTHETA + 
     &	         (PLUSX*COSTHETA - PLUSY*SINTHETA) + TOTOFX
	LABY(1) = LABX(1)*SINTHETA + LABY(1)*COSTHETA + 
     *	           (PLUSX*SINTHETA + PLUSY*COSTHETA) + TOTOFY
	LABX(1) = TEMPX
	ANG = ANG+THETA
C
C Label drawing
	CALL TRITXT(LAB_TEXT(:LABIND),
     &		LABFNT,LABX(1),LABY(1),LABSIZ,ANG,HWTXT.AND.LABHWT)
C
998	IF (FRTFND(FTCODE)) CONTINUE	! restore FC
C
999     RETURN
C
	END
