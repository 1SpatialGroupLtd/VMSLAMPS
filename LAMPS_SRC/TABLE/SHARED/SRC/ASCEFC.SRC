C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1985-08-13 14:21:48.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL FUNCTION ASCEFC( IERR, INIT )
C
***	MODULE ASCEFC
***	IDENT 13AU85
C
	IMPLICIT NONE
C
C Copyright Laser Scan Laboratories Ltd., Cambridge, England
C Author R. Fairbairns, Coded November 1981 for DIGSYS
C Stolen by TJ Ibbs, 30 July 1984
C
C Associate common event flag cluster for a particular process
C
C Returns TRUE if it fails, otherwise FALSE
C
C system parameters
C
	INCLUDE	'($SSDEF)'
C
C and our own
C
***	PARAMETER/CMN:TABMON/		! efn cluster name
***	COMMON/CMN:TABNAMES/
C
C we were passed
C
	INTEGER*4	IERR		! error return
	LOGICAL		INIT		! TRUE  => init EFNs
C					! FALSE => simply associate
C function called
C
	LOGICAL*4	SYS$ASCEFC	! associate common ef cluster
C
C workspace
C
	INTEGER*4	EFN		! loop variable
C
C
C assume the worst
C
	ASCEFC = .TRUE.
C
C associate cluster (possibly creates it)
C
	IERR = SYS$ASCEFC(
     &			%VAL(EFC_FIRST),	! define which cluster
     &			EFC_NAME(1:EFCL),	! name it
     &			%VAL(0),
     &			%VAL(0)
     &			 )
C
	IF (IERR.NE.SS$_NORMAL) GOTO 9999
C
C
C initialise event flags ??
C
	IF (INIT) THEN
	   DO 10 EFN = EFC_FIRST,EFC_LAST
	      CALL SYS$CLREF(%VAL(EFN))
10	   CONTINUE
	ENDIF
C
C assume success
C
	ASCEFC = .FALSE.
C
C and failure joins us here
C
9999	RETURN
	END
