C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1989-12-16 12:59:56.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL FUNCTION RELOCK_TABLE( IERR )
C
***	IDENT	16DE89
***	MODULE	RELOCK_TABLE
C
C	Copyright LaserScan Laboratories Ltd., Cambridge, England
C
C Author CC Brunt, 15-December-1989
C
C Re-assert the table lock just to re-prime the blocking AST
C
C We return TRUE if this fails, but FALSE on success
C
	IMPLICIT NONE
C
C lock definitions and system definitions
C
	INCLUDE		'($LCKDEF)'
	INCLUDE		'($SSDEF)'
C
C common
C
***	COMMON/CMN:TABLE/		! for ID of lock, etc
C
C functions used
C
	INTEGER*4	SYS$ENQW	! enqueue a lock request
C					! and wait for result
C arguments
C
	INTEGER*4	IERR		! return from function
C
C start off with pessimism
C
	IF (TABLE_BLKAST.EQ.0) GOTO 9000 ! no AST, so don't bother
	RELOCK_TABLE = .TRUE.
C
C now let us attempt the lock...
C
	IERR = SYS$ENQW(
     &			,			! efn
     &			%VAL(LCK$K_EXMODE),	! exclusive lock
     &			TABLE_STATUS,		! status block
     &			%VAL(LCK$M_NOQUEUE.OR.	! don't queue request
     &			     LCK$M_CONVERT),	! convert lock
     &			,			! resource name
     &			,			! parent lock ID
     &			,			! astadr
     &			,			! astprm
     &			%VAL(TABLE_BLKAST),	! blocking ast
     &			,			! access mode
     &			 )			! final arg reserved
C
C what status do we have for the enqueue?
C
	IF ( IERR.NE.SS$_NORMAL ) GOTO 9999
C
C and what was the final status?
C
	IF ( TABLE_STATUS(1).NE.SS$_NORMAL ) THEN
	   IERR = TABLE_STATUS(1)
	   GOTO 9999
	ENDIF
C
C otherwise, we have success
C
9000	RELOCK_TABLE = .FALSE.
C
9999	RETURN
	END
