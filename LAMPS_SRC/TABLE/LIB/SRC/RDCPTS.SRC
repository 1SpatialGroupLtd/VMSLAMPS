C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1984-09-03 15:45:22.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL FUNCTION READ_CPTS( CPTS, IERR )
C
***	IDENT	03SE84
***	MODULE	READ_CPTS
C
C	Copyright LaserScan Laboratories Ltd., Cambridge, England
C
C Author TJ Ibbs, 3 September 1984
C
C This function reads the (presumed) corner points from the
C global section
C
C we return TRUE if something goes wrong, otherwise FALSE
C
	IMPLICIT NONE
C
C system parameters
C
	INCLUDE	'($SSDEF)'
C
C define our offsets
C
***	PARAMETER/CMN:TABMON/
C
C and common which holds the relevant addresses for the section
C
***	COMMON/CMN:SECTION/
C
C and functions
C
	LOGICAL		READ_LOCK	! establish a protected read
C					! lock on the section
	LOGICAL		UNLOCK		! release the lock again
C
C passed
C
	INTEGER*4	CPTS( MAP_CPTS_SIZ )	! corner point array
	INTEGER*4	IERR			! error return
C
C workspace
C
	INTEGER		I		! for a DO loop
C
C
C assume the worst
C
	READ_CPTS = .TRUE.
C
C first we must ensure that we have the lock
C
	IF ( READ_LOCK(IERR) ) GOTO 9999
C
C and so let us copy things over
C
	DO 100 I = 1, MAP_CPTS_SIZ
	   CALL COPY_LONG( %VAL( SEC_BASE +
     &				 MAP_CPTS +
     &				 (I-1)*LONG_WORD ), CPTS(I) )
100	CONTINUE
C
C and now unlock
C
	IF ( UNLOCK(IERR) ) GOTO 9999
C
C success
C
	READ_CPTS = .FALSE.
C
C and that is all we do
C
9999	RETURN
	END
