C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1988-02-09 14:57:24.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL FUNCTION ASK_TAB( IERR )
C
***	IDENT	09FE88
***	MODULE	ASK_TAB
C
C	Copyright LaserScan Laboratories Ltd., Cambridge, England
C
C Author RW Russell, 8-Feb-1988
C
C This routine asks the table monitor to probe the table (ie get the
C current cursor position). It is completely syncronous - ie tabmon
C will complete either by setting the ERROR event flag (which it
C clears first) or by putting the table coordinates in the global
C section (and setting the WAIT_TABLE event flag) where they can
C be read by READ_TABLE
C
C we return FALSE if it all works, and TRUE if we fail
C
	IMPLICIT NONE
C
C system parameters
C
	INCLUDE	'($SSDEF)'
C
C and our own parameters
C
***	PARAMETER/CMN:TABMON/		! names, offsets, etc
C
C we were passed
C
	INTEGER*4	IERR		! error return
C
C and we call
C
	INTEGER*4	SYS$SETEF
	INTEGER*4	SYS$CLREF
	INTEGER*4	SYS$WFLOR
C
C
C assume that things go badly
C
	ASK_TAB = .TRUE.
C
C clear WAIT_TABLE event flag
	IERR = SYS$CLREF(%VAL(WAIT_TABLE))
	IF (.NOT.IERR) GOTO 9999
C
C set the event flag saying 'I want the table coordinates'
C
	IERR = SYS$SETEF( %VAL( ASK_TABLE) )
	IF ( .NOT.IERR ) GOTO 9999
C
C and wait for the global section to be filled in, or an error
	IERR = SYS$WFLOR( %VAL(EFC_FIRST), %VAL(EFC_ASKERR) )
	IF (.NOT.IERR) GOTO 9999
C
C so we have presumably succeeded
C
	ASK_TAB = .FALSE.
C
C failure joins us here
C
9999	RETURN
	END

