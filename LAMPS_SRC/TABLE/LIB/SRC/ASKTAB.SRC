	LOGICAL FUNCTION ASK_TAB( IERR )
C
***	IDENT	09FE88
***	MODULE	ASK_TAB
C
C	Copyright LaserScan Laboratories Ltd., Cambridge, England
C
C Author RW Russell, 8-Feb-1988
C
C This routine asks the table monitor to probe the table (ie get the
C current cursor position). It is completely syncronous - ie tabmon
C will complete either by setting the ERROR event flag (which it
C clears first) or by putting the table coordinates in the global
C section (and setting the WAIT_TABLE event flag) where they can
C be read by READ_TABLE
C
C we return FALSE if it all works, and TRUE if we fail
C
	IMPLICIT NONE
C
C system parameters
C
	INCLUDE	'($SSDEF)'
C
C and our own parameters
C
***	PARAMETER/CMN:TABMON/		! names, offsets, etc
C
C we were passed
C
	INTEGER*4	IERR		! error return
C
C and we call
C
	INTEGER*4	SYS$SETEF
	INTEGER*4	SYS$CLREF
	INTEGER*4	SYS$WFLOR
C
C
C assume that things go badly
C
	ASK_TAB = .TRUE.
C
C clear WAIT_TABLE event flag
	IERR = SYS$CLREF(%VAL(WAIT_TABLE))
	IF (.NOT.IERR) GOTO 9999
C
C set the event flag saying 'I want the table coordinates'
C
	IERR = SYS$SETEF( %VAL( ASK_TABLE) )
	IF ( .NOT.IERR ) GOTO 9999
C
C and wait for the global section to be filled in, or an error
	IERR = SYS$WFLOR( %VAL(EFC_FIRST), %VAL(EFC_ASKERR) )
	IF (.NOT.IERR) GOTO 9999
C
C so we have presumably succeeded
C
	ASK_TAB = .FALSE.
C
C failure joins us here
C
9999	RETURN
	END

