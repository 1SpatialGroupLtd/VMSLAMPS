C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1986-10-27 13:47:50.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL	FUNCTION HAD_PUCK( IERR )
C
***	IDENT	27OC86
***	MODULE	HAD_PUCK
C
C	Copyright LaserScan Laboratories Ltd., Cambridge, England
C
C Author TJ Ibbs, 13 August 1984
C
C This function returns TRUE if the PUCK event flag was set, and
C FALSE if it was not.
C
C The argument IERR is optional, and if given returns SS$_NORMAL for
C the event flag set or clear, and the error code if an error occurs
C
	IMPLICIT NONE
C
C system parameters
C
	INCLUDE	'($SSDEF)'
C
C our own definitions
C
***	PARAMETER/CMN:TABMON/		! for NEW_BUTTON efn
C
C we are passed
C
	INTEGER*4	IERR		! optional return arg
C
C and we call
C
	LOGICAL		TAB_HAVARG	! checks for IERR
	INTEGER*4	SYS$READEF	! read an event flag
C
C workspace
C
	INTEGER*4	STATE		! current status of efns
	INTEGER*4	ERROR		! return code
C
C
C assume the flag is not set
C
	HAD_PUCK = .FALSE.
C
C now check whether it is or not
C
	ERROR = SYS$READEF( %VAL(NEW_BUTTON), STATE )
C
	IF ( ERROR.EQ.SS$_WASSET ) HAD_PUCK = .TRUE.
C
C if the IERR argument was given, then set it
C - SS$_NORMAL is success, otherwise give the error code we
C   were given above
C
	IF ( TAB_HAVARG(1) ) THEN
	   IF ( ERROR.EQ.SS$_WASSET .OR.
     &		ERROR.EQ.SS$_WASCLR ) ERROR = SS$_NORMAL
	   IERR = ERROR
	ENDIF
C
C and thus we return
C
	RETURN
	END
