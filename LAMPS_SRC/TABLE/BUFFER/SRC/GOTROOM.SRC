C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1984-08-28 15:37:18.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL FUNCTION GOT_ROOM( SIZE )
C
***	IDENT	28AU84
***	MODULE	GOT_ROOM
C
C	Copyright LaserScan Laboratories Ltd., Cambridge, England
C
C Author TJ Ibbs, 24 August 1984
C
C this checks if there is room for SIZE more bytes in the buffer
C
C It returns TRUE if there is, FALSE otherwise
C
	IMPLICIT NONE
C
***	COMMON/HERE:BUFFER/		! define our buffer
C
C we were passed
C
	BYTE		SIZE		! number of bytes wanted
C
C
	IF ( SIZE.GT.MAX_LEN ) THEN
C
C	 it's just plain too big (shouldn't happen, but still)
C
	   GOT_ROOM = .FALSE.
C
	ELSEIF ( EMPTY ) THEN
C
C	 but if the buffer is empty, anything smaller must fit!
C
	   GOT_ROOM = .TRUE.
C
	ELSEIF ( NEXT_PTR.EQ.CH_TO_READ ) THEN
C
C	 since the buffer is not empty, we must have filled it all,
C	 so we can't write more until we've read some
C
	   GOT_ROOM = .FALSE.
C
	ELSEIF ( NEXT_PTR.GT.CH_TO_READ ) THEN
C
C	 we are inserting ABOVE where we have read to, so we must check
C	 that we don't wrap around and end up above our CH_TO_READ
C
	   IF (	((NEXT_PTR+SIZE)-MAX_LEN)
     &		.GT.
     &		CH_TO_READ ) THEN
	      GOT_ROOM = .FALSE.
	   ELSE
	      GOT_ROOM = .TRUE.
	   ENDIF
C
	ELSE
C
C	 or, finally, we are inserting below our CH_TO_READ - this is
C	 the obvious case
C
	   IF ( (NEXT_PTR+SIZE) .GT. CH_TO_READ ) THEN
	      GOT_ROOM = .FALSE.
	   ELSE
	      GOT_ROOM = .TRUE.
	   ENDIF
C
	ENDIF
C
	RETURN
	END
