C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1984-08-28 16:11:20.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL FUNCTION WRITE_BUF( BUF, LEN )
C
***	IDENT	28AU84
***	MODULE	WRITE_BUF
C
C	Copyright LaserScan Laboratories Ltd., Cambridge, England
C
C Author TJ Ibbs, 24 August 1984
C
C write a unit of information to the circular buffer
C
C Return TRUE if this fails, FALSE if it succeeds
C
	IMPLICIT NONE
C
C we were passed
C
	INTEGER		LEN		! length of the unit
	BYTE		BUF(LEN)	! buffer for the unit
C
C functions...
C
	LOGICAL		GOT_ROOM	! space in the buffer?
C
C workspace
C
	INTEGER		I		! loop variable
C
C assume the worst
C
	WRITE_BUF = .TRUE.
C
	IF ( GOT_ROOM(LEN+1) ) THEN
	   CALL PUT_CH( -LEN )		! write the length
	   DO I = 1,LEN
	      CALL PUT_CH( BUF(I) )
	   ENDDO
	   WRITE_BUF = .FALSE.		! success
	ENDIF
C
	RETURN
	END
