================================================================================
23-Oct-1991	Clarke Brunt	- mod 1054
See corresponding mod to TABLIB.
Call POKE_TAB (to provoke AST in TABLIB) while still inside lock brackets.
This is to prevent a loophole which can leave the blocking AST disabled.

================================================================================
16-Dec-1989	Clarke Brunt	- mod 829
See corresponding mod to TABLIB.
TABMON takes out a null lock on TABLIB's 'in-use' lock. Whenever an event
happens (in WRT_PUCK, WRT_STREAM, or WRT_ERROR), it attempts to convert
the lock to exclusive. This does not succeed, but triggers TABLIB's
blocking AST, which is a signal to the user. The request is then dequeued.
If the request succeeds, it indicates that TABLIB is not present (the
image has exited without closing TABMON), so TABMON shuts itself down.
So far as the user is concerned, this provides a way of closing down
TABMON when it still owns the table after the process using it has exited
abnormally - just press a button on the table!

================================================================================
28-Nov-1988	Ron Russell     - mod M722
Make TABMON set the protection of its GLOBAL SECTION to be RWED,RWED,RWED
 - no matter what the current default protection is set to
This is achieved in MAKSEC.MAR by providing an extended attribute buffer
(a XAB) with the appropriate protections set up.
================================================================================
Feb-1987	Ron Russell     - mod M545
Allow TABMON (on an instruction from TABLIB) to probe the table and
put the cursor position into the GLOBAL section. This is achieved
by having two new event flags; one that is set by TABLIB to request the
action. On noticing that this event flag is set TABMON
 1) Clears its buffers, the event flag set by TABLIB, the error event
    flag and the second new event flag
 2) Puts up a read with prompt and a 10 second time out to the table
 3) If the read succeeds, then the coordinates are put in the global
    section and the second new event flag is set, otherwise the error
    event flag is set, and the error written to the global section.
The call from TABLIB waits for either the error event flag and the second
new event flag to be set, thus making the TABLIB call syncronous.

The problem with this was that the two new event flags made the new
version of TABMON incompatible with programs linked with the old version
of TABLIB, as the first free event flag was now actually used by
TABMON. To preserve upwards compatability, a flag was introduced to the
global section, which is set by the new version of TABLIB in INITAB.
This flag is read by TABMON, whenever it is woken up and if it is not set
then the new event flags are not used.
................................................................................
ASKTAB.SRC	- new routine to read table position, and put result
		  in global section
DIGTRN.SRC	- Altered as ALTEK returns button $H, with probed
                  position (also RDCH was reading into an integer, not a
                  byte, which was perhaps the cause of some invalid table
                  strings)
DOTABLE.SRC	- Read flag in global section for new TABLIB
		  Check for request to read table
		  After each wait, read global section to see if timeout
		  has altered (ie INIT_TAB has been called again). If so
		  check flag for new TABLIB again
NEWSEC.SRC	- Clear flag in global section
WAITAB.SRC	- Wait for new event flag to be set by TABLIB, if flag
		  was set in global section
ERROR.SRC/.PAR	- New errors associated with reading table
TABLE.MAR	- New routine CALLR, to call the routine that may be 
		  specified in the DECODE routine to specify the prompt
		  used to probe the table
TABMON.SRC	- set up the prompts to be used to probe the table with.
		  When using the external decode routine, this allows
		  the routine to contain an entry point of a routine
		  that specifies the prompts to be used to probe the
		  table. In case this second entry point is not there
		  an exception handler is required to stop
		  LIB$FIND_IMAGE_SYMBOL from signalling.
================================================================================
13-May-1987	Clarke Brunt
Send a CTRL/Q on initialisation (and after error). Just wanted to send
any character to make terminal server establish connection, and this
seemed a harmless one.
................................................................................
TABLE.MAR	- use CTRL/Q as prompt char in PURTAB
================================================================================
14-Jan-1987	Clarke Brunt
Don't bother to create logical name for LIB$FIND_IMAGE_SYMBOL
................................................................................
TABMON.SRC	- just use decode logical name for LIB$FIND_IMAGE_SYMBOL
================================================================================
18-Dec-1986	Tony J Ibbs	- modification request 2/407
Fix problem due to yesterday's edits
................................................................................
RELTAB.SRC	- call of SYS$DASSGN didn't have enough closing commas,
		  which gave an error every time the table shut down,
		  which was reported when it started up again...
================================================================================
17-Dec-1986	Tony J Ibbs	- modification request 2/407
Modify the table monitor to (1) switch on TYPEAHEAD for the table being read
			    (2) switch on NOBROADCAST
................................................................................
GETTAB.SRC	- save as .OLD_SRC
		  perform required mods...
		  set GOT_TABLE true if we have one, false if we don't
		  (and TABMON should ABANDON if we don't)
RELTAB.SRC	- save as .OLD_SRC
		  deallocate as well as deassigning
TABMON.SRC	- if GETTAB fails, and GOT_TABLE is false, then ABANDON
================================================================================
	Change the format of update notes - see above
================================================================================
13-Nov-1985	TABMON.SRC	- Ron Russell
		mod 2/369 - set up an internal logical name for the 
		external decode	routine, so that LIB$FIND_IMAGE_SYMBOL
		will work under VMS version 4.2
		ABANDN.SRC
		output date and time with each error
28-Jan-1985	WRTSTR.SRC	- Tony J Ibbs
		mod 2/316 - set the "had stream" event flag whenever
		WRTSTR is called, NOT only when the coordinate being
		streamed has changed
