C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1991-10-23 13:01:56.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE WRITE_STREAM( X, Y )
C
***	IDENT	23OC91
***	MODULE	WRITE_STREAM
C
C	Copyright LaserScan Laboratories Ltd., Cambridge, England
C
C Author TJ Ibbs, 27 July 1984
C
C This subroutine writes the coordinates from the stream button
C into the global section
C
	IMPLICIT NONE
C
C define our offsets
C
***	PARAMETER/CMN:TABMON.PAR/
C
C and common which holds the relevant addresses for the section
C
***	COMMON/CMN:SECTION/
C
C and to remember our current position in
C
***	COMMON/HERE:STREAM/		! for OLDX,OLDY
C
C and functions
C
	LOGICAL		WRITE_LOCK	! establish an exclusive
C					! lock on the section
	LOGICAL		UNLOCK		! release the lock again
	LOGICAL		POKE_TABLE	! signal to TABLIB
C
C local workspace
C
	INTEGER*4	X,Y		! streamed coordinate
C
C
C first we must ensure that we have the lock
C
	IF ( WRITE_LOCK() ) GOTO 9999	! give up if can't
C
C and so let us copy things over - but only if the coordinates
C have actually changed
C
	IF ( X.NE.OLDX .OR. Y.NE.OLDY ) THEN
	   CALL COPY_LONG( X,    %VAL( SEC_BASE+STREAM_X ) )
	   CALL COPY_LONG( Y,    %VAL( SEC_BASE+STREAM_Y ) )
	ENDIF
C
C and set the 'streamed' event flag anyway - note we don't check
C its success - we don't care whether it was already set or not
C
	CALL SYS$SETEF( %VAL(STREAMED) )
C
C finally signal to TABLIB that an event has happened
C
	IF ( POKE_TABLE() ) GOTO 9999
C
C and now unlock
C
	IF ( UNLOCK() ) GOTO 9999
C
C update the remembered coordinates
C
	OLDX = X
	OLDY = Y
C
C and that is all we do
C
9999	RETURN
	END
