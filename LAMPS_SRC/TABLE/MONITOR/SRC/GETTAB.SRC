	LOGICAL FUNCTION GETTAB( OK )
C
***	IDENT	17DE86
***	MODULE	GETTAB
C
C	Copyright LaserScan Laboratories Ltd., Cambridge, England
C
C Author TJ Ibbs, 26 July 1984
C
C This function gets the table set up for us to use.
C It assigns a channel for us to listen to the digitising table
C on, allocates the table, sets it up to have TYPEAHEAD enabled
C (this is normally disabled for a digitising table, to stop it
C  attempting to log on!)
C
C We assume that the table is set up with logical name SYS$INPUT
C pointing at it - ie it is the input stream for this program
C
C We return FALSE on success, TRUE otherwise, and we set GOT_TABLE
C true if we have got something to read
C - NB if GOT_TABLE is false when we return, then there is really
C   not much point in going on, as we don't have an input, so the
C   table monitor should ABANDON
C
	IMPLICIT NONE
C
C system parameters
C
	INCLUDE		'($SSDEF)'
	INCLUDE		'($DVIDEF)'
	INCLUDE		'($IODEF)'
	INCLUDE		'($TTDEF)'
C
C common we require
C
***	COMMON/HERE:TABIFC/		! table interface
***	COMMON/HERE:GEN/		! for GOT_OUTPUT
C
C we were passed
C
	INTEGER*4	OK		! error return
	LOGICAL		NOTYPE		! result of enquiry
	LOGICAL		NOBROAD		! ditto
	INTEGER*2     	IOSB(4)		! IO status block
	INTEGER*4	BUFF(2)		! terminal characteristics
C
C and we use the following functions
C
	INTEGER*4	SYS$ASSIGN	! assign a channel
	INTEGER*4	SYS$ALLOC	! allocate it
	INTEGER*4	LIB$GETDVI	! inquire about it
	INTEGER*4	SYS$QIOW	! talk to it
C
C *********************************************************************
C assume the worst
C
	GETTAB = .TRUE.
C
C *********************************************************************
C and try for that channel
C
	OK = SYS$ASSIGN(
     &			'SYS$INPUT:',		! device name
     &			TABCHN,			! channel number
     &			,			! access mode
     &			 )			! no mailbox
C
	IF (.NOT.OK) THEN
	   GOT_TABLE = .FALSE.		! no table
	   GOTO 9999			! so give up now
	ENDIF
C
C *********************************************************************
C we must now allocate the table, so that no one else can use it
C - if we fail to allocate it, then that means that we can't read from
C   the table, as presumably someone else has it, so we would have to
C   give up
C
	OK = SYS$ALLOC( 'SYS$INPUT:',,,, )
C
	IF (.NOT.OK) THEN
	   CALL SYS$DASSGN(TABCHN)	! deassign it, as
	   GOT_TABLE = .FALSE.		! we don't have a table
	   GOTO 9999			! so give up now
	ENDIF
C
C *********************************************************************
C so we have the table - note as much
C
	GOT_TABLE = .TRUE.
C
C regardless, we can now carry on to read the table. The rest of this
C is just to try and improve the way we read the table.
C *********************************************************************
C try to set the line type-ahead - first, check whether it already is
C
	OK = LIB$GETDVI( DVI$_TT_NOTYPEAHD,,'SYS$INPUT:',NOTYPE)
C
	IF ( .NOT.OK ) GOTO 9999	! didn't work
C
C also, is it set no broadcast?
C
	OK = LIB$GETDVI( DVI$_TT_NOBRDCST,,'SYS$INPUT:',NOBROAD)
C
	IF ( .NOT.OK ) GOTO 9999	! didn't work
C
C so, what is the result?
C
	IF ( .NOT.NOTYPE .AND. .NOT.NOBROAD ) GOTO 9000
C
C if it is, then we must change it
C - find out what the current setting is
C
	OK = SYS$QIOW(	,			! event flag
     &			%VAL(TABCHN),		! channel
     &			%VAL(IO$_SENSEMODE),	! function
     &			IOSB,			! iosb
     &			,			! astadr
     &			,			! astprm
     &			BUFF,			! characteristics
     &			%VAL(8),		! length of BUFF
     &			,			! P3
     &			,			! P4
     &			,			! P5
     &			,			! P6
     &		     )
C
	IF (.NOT.OK) GOTO 9999
	IF (.NOT.IOSB(1)) THEN
	   OK = IOSB(1)
	   GOTO 9999
	ENDIF
C
C remove any notypeahead, and any broadcast
C
	IF ( NOTYPE )       BUFF(2) = BUFF(2) .AND. .NOT.TT$M_NOTYPEAHD
	IF ( .NOT.NOBROAD ) BUFF(2) = BUFF(2) .OR.       TT$M_NOBRDCST
C
C and output the status...
C
	OK = SYS$QIOW(	,			! event flag
     &			%VAL(TABCHN),		! channel
     &			%VAL(IO$_SETMODE),	! function
     &			IOSB,			! iosb
     &			,			! astadr
     &			,			! astprm
     &			BUFF,			! characteristics
     &			%VAL(8),		! length of BUFF
     &			,			! P3
     &			,			! P4
     &			,			! P5
     &			,			! P6
     &		     )
C
	IF (.NOT.OK) GOTO 9999
	IF (.NOT.IOSB(1)) THEN
	   OK = IOSB(1)
	   GOTO 9999
	ENDIF
C
C *********************************************************************
C success exit
C
9000	GETTAB = .FALSE.		! success
C
9999	RETURN
	END
