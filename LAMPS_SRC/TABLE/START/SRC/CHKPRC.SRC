	LOGICAL FUNCTION CHKPRC(PRC_PID)
C
***	IDENT	16MR95
***	MODULE	CHKPRC
C
C	Copyright LaserScan Laboratories Ltd., Cambridge, England
C
C Author R.W. Russell			14-Aug-1985
C
C This function checks the table monitor process has been created
C and has run until it has reached  HIBERNATE state.
C
C We return TRUE if something goes wrong, FALSE if all is OK
C
	IMPLICIT NONE
C
C we are passed
C
	INTEGER*4	PRC_PID		! process identification
C
C system parameters
C
	INCLUDE		'($SSDEF)'
	INCLUDE		'($JPIDEF)'
C
C and the ones Fortran doesn't believe in (silly DEC)
C
	INTEGER		SCH$C_HIB
	INTEGER		SCH$C_HIBO
	EXTERNAL	SCH$C_HIB
	EXTERNAL	SCH$C_HIBO
C
C functions we shall need
C
	INTEGER*4	SYS$GETJPIW	! get info about a process
	INTEGER*4	LIB$WAIT	! wait 
C
C workspace
C
	INTEGER*4	IERR		! error return
	LOGICAL		IN_HIB		! whether hibernating or not
	INTEGER*4	ITMLST(4)	! item list
	INTEGER*2	CODLEN(2)	! first longword of item list
	INTEGER*4	RESULT		! results buffer
	INTEGER*4	COUNT		! number of times tried to check
C
	EQUIVALENCE	(ITMLST(1),CODLEN(1))
C
	INTEGER*2	IOSB(4)		! IO status block
C
C be pessimistic
C
	CHKPRC = .TRUE.
	COUNT=0
C
C give the create some time to work
C
	CALL LIB$WAIT(1.0)
C
C set up the item list...
C
  10	CONTINUE
	CODLEN(1) = 4			! RESULT is 4 bytes long
	CODLEN(2) = JPI$_STATE		! we want the state
	ITMLST(2) = %LOC(RESULT)	! address of result buffer
	ITMLST(3) = 0			! assume length returned OK
	ITMLST(4) = 0			! terminate the item list
C
C so let us enquire about the current state of the table monitor
C
	IERR = SYS$GETJPIW(
     &			,			! completion event flag
     &			PRC_PID,		! PID
     &			,			! don't use name
     &			ITMLST,			! item list
     &			IOSB,			! final status block
     &			,			! no AST address
     &			 )			! no AST parameter
C
C check whether that was submitted OK
C
	IF (.NOT.IERR .AND. IERR.NE.SS$_NONEXPR) GOTO 999
	IF (IERR.EQ.SS$_NONEXPR) GOTO 9999
C
C and was the thing hibernating?
C
	IN_HIB = ( RESULT.EQ.%LOC(SCH$C_HIB) .OR.
     &		   RESULT.EQ.%LOC(SCH$C_HIBO))
C
C if process not hibernating yet, wait a bit and try again
C
	IF (.NOT.IN_HIB) THEN
	   CALL TTWSTR('Waiting')
	   CALL WRITEF
	   CALL LIB$WAIT(2.0)
	   COUNT=COUNT+1
	   IF (COUNT.GT.20) THEN
	      CALL TTWSTR('Waited long enough')
	      GOTO 9999
	   ELSE
	      GOTO 10
	   ENDIF
	ELSE
C
C so we have succeeded...
C
	   CHKPRC = .FALSE.
	   GOTO 9999
	ENDIF
C
C error in call of GETJPI
C
999	CONTINUE
	CALL TTWSTR('Error finding out about table monitor')
	CALL LSL_PUTMSG(IERR)
C
9999	RETURN
C
C *********************************************************************
C
	END
