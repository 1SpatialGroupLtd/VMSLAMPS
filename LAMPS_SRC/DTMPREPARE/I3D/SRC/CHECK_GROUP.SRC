C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1989-01-31 16:07:22.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL FUNCTION CHECK_GROUP(FC,GROUP_NUM,SKIP_COPY,
     &			GRP_OK,COPY_DATA)
C
***	MODULE	CHECK_GROUP
***	IDENT	29AP88
C	
C Copyright Laser Scan Laboratories, Cambridge, England.
C 	
C Created by ALB 					15-Apr-1988
C
C The purpose of this routine is to check the group bit map 
C to find out whether it is one of the required FC for the process.
C The function can either skip or copy feature depending of the state
C of the logical COPY_DATA.  Note: the SKIP_COPY switch must be 
C true for this to happen.
C
	IMPLICIT NONE
C
C common blocks
C
        INCLUDE 'LSL$CMNIFF:IFFHAN.CMN'
	INCLUDE 'LSL$CMNI3D:CONTROL.CMN'
	INCLUDE 'LSL$CMNI3D:GROUP.CMN'
C
C arguments
C
	INTEGER*4	FC		! feature code
	INTEGER*4	GROUP_NUM	! number from group definition table 
	LOGICAL		SKIP_COPY	! .TRUE. if feature can be skipped or
					! copied
	LOGICAL		GRP_OK		! .TRUE. if feature found in group
	LOGICAL		COPY_DATA	! .TRUE. if feature is to be copied
C
C Workspace
C
	INTEGER*4	GRP_PTR		! element in FCMAP containing FC to test
	INTEGER*4	GRP_OFFSET	! offset in element to test FC bit
	LOGICAL		BIT		! TRUE if bit set for FSN
C
	INTEGER*2	IECODE		! IFF entry code
	INTEGER*2	IELEN		! IFF entry length
C
C functions
C
	LOGICAL		LIB$EXTZV
C
C*************************************************************************
C
	CHECK_GROUP = .TRUE.		! assume success
C
C*************************************************************************
C
C	and check if this feature is in bit map
C
	GRP_PTR = (FC)/32 + 1			! element in GRPFCT
	GRP_OFFSET = MOD(FC,32)			! offset in GRPFCT element
C
C extract bit from group bit map
C
	BIT = LIB$EXTZV(GRP_OFFSET,1,GRPFCT(GRP_PTR,GROUP_NUM))
	IF (.NOT.BIT) THEN			! feature not in group
	   GRP_OK = .FALSE.
	   IF (SKIP_COPY) THEN			! skip/copy this feature
	      IF (.NOT.COPY_DATA) THEN		! Skip this feature
                 CALL IFFNXC('EF',IELEN)
                 IF (IELEN.EQ.-1) THEN
	            CHECK_GROUP = .FALSE.
	            GOTO 999
	         ENDIF
	      ELSEIF (COPY_DATA) THEN		! Copy this sequence number
	         CALL EIHCPY (FILEOUT_LUN)	! Copy entry in hand
C
C loop to copy all entries until 'EF' found
C

100	         CONTINUE
                 CALL IFFNXT(IECODE,IELEN)
                 IF (IELEN.EQ.-1) THEN		! No 'EF' found
	            CHECK_GROUP = .FALSE.
		    GOTO 999
		 ENDIF
		 IF (IECODE.EQ.'EF') THEN
		    CALL IFFSEL(FILEOUT_LUN)	! select output IFF file	
		    CALL IFFEF
		    CALL IFFSEL(FILEIN_LUN)	! select input IFF file	
		 ELSE
		    CALL EIHCPY (FILEOUT_LUN)	! Copy entry in hand
		    GOTO 100
		 ENDIF
	      ENDIF
	   ENDIF
	ELSE
	   GRP_OK = .TRUE.
	ENDIF
C
999	CONTINUE
C
	RETURN
C
	END
