C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1989-01-11 18:55:34.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL FUNCTION READRANG(INT1,INT2)
C
***	MODULE	READRANG
***	IDENT	03MY88
C
C Copyright Laser Scan Laboratories Limited, Cambridge, England
C
C Modified from RDRANG in module DTIVIEW	by ALB	5-MAY-1988
C
C This function returns the next range pair from a list of
C numbers. Single values return identical upper/lower limits.
C (eg. LAY 3,10-40,60 100 - 200 is returned as  3,3 / 10,40 /
C 60,60 / 100,200).
C Spaces and TABs may be used as delimiters instead of commas but
C are otherwise ignored.
C The function reads past delimiters following a range.
C
C This version renamed to READRANG
C NOTE this function returns FALSE if an error occurs.
C
	IMPLICIT NONE
C
C Parameters
C
	INCLUDE 'LSL$CMNI3D:CONSTANTS.PAR'
C
	INTEGER  INT1,INT2		! integer pairs read in.
C
C Workspace.
	INTEGER*2 TEMPOS		! temporary copy of DCPTR.
	BYTE      CH			! last character read.
C
C Functions.
	LOGICAL*1 RDCHS,RDCH,RDLONG
C
C
C Initialise.
C
C ************************************************
C
	READRANG=.TRUE.			! assume sussess
C
C ************************************************
C
C Read in an integer (either single value or lower limit of a range).
C
	CALL BSCH
	IF (RDCHS(CH)) GOTO 1000
	IF ((CH.LT.48).OR.(CH.GT.57)) THEN   ! not a digit
	   CALL WRITEF('Unexpected "%^B%C" character found.',CH)
	   READRANG=.FALSE.
	   GOTO 999
	ENDIF	
C
	CALL BSCH
	IF (RDLONG(INT1)) THEN
	   CALL WRITEF('Error reading integer value.')
	   READRANG=.FALSE.
	   GOTO 999
	ENDIF	
	INT2=INT1
C
C Read the delimiter.
C
	IF (RDCHS(CH)) GOTO 1000
	IF ((CH.GE.48).AND.(CH.LE.57)) GOTO 5
	IF (CH.EQ.COMMA) GOTO 1000
	CALL DCPSAV(TEMPOS)
	IF (CH.EQ.COLON) GOTO 10
5	CALL BSCH
	GOTO 1000
C
C Read in upper limit of a range.
C
10	CONTINUE
	IF (RDCHS(CH)) THEN
	   CALL WRITEF('Unexpected end of line.')
	   READRANG=.FALSE.
	   GOTO 999
	ENDIF	
	IF ((CH.GE.48).AND.(CH.LE.57)) GOTO 20
	CALL DCPSET(TEMPOS-1)	! reposition to the COLON sign.
	GOTO 1000
20	CALL BSCH
	IF (RDLONG(INT2)) THEN
	   CALL WRITEF('Error reading integer value.')
	   READRANG=.FALSE.
	   GOTO 999
	ENDIF	
	IF (INT1.GT.INT2) THEN
	   CALL WRITEF('Illegal range (%N-%N).',INT1,INT2)
	   READRANG=.FALSE.
	   GOTO 999
	ENDIF	
C
C Read the delimiter following a range.
C
50	CONTINUE
	IF (RDCHS(CH)) GOTO 1000
	IF (CH.EQ.COMMA) GOTO 50
	CALL BSCH
C
999	CONTINUE
1000	CONTINUE
	RETURN
	END
