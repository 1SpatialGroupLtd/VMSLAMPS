C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1989-02-08 19:13:40.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL FUNCTION SHOW_CMD()
C
***	MODULE	SHOW_CMD
***	IDENT	08FE89
C
C	Copyright (C), Laser-Scan Laboratories Ltd., Cambridge, England
C
C Created by						ALB 5-May-1988
C
C Function to show command status.
C Namely, files, group, mode, parameters, selection 
C
C Function returns .TRUE. if all is well, .FALSE. if an error
C
	IMPLICIT NONE
C
C Parameters
	INCLUDE 'LSL$DTMCREATESYS:MESPAR.PAR'
C
C Common blocks
	INCLUDE 'LSL$CMNI3D:CONTROL.CMN'
	INCLUDE 'LSL$CMNI3D:GROUP.CMN'
 	INCLUDE 'LSL$CMNLSL:CMDCOM.CMN'
	INCLUDE 'LSL$CMNLSL:EXPC.CMN'
	INCLUDE 'LSL$CMNLSL:TXTC.CMN'	
C
C Workspace
	INTEGER		CMD     	! decoded command number
	INTEGER		NCOL    	! num of letters in group name
	INTEGER		RET_CODE	! for use with RDCHS
	INTEGER		I		! loop counter
C
C Functions
	INTEGER		RDCOMM
C
C Command tables
	EXTERNAL	SHOW_CMD_TABLE
	INTEGER		SHOW_CMD_TABLE
C
C ......................................................................
C
	SHOW_CMD = .TRUE.		! assume success
C
	CMD = RDCOMM(SHOW_CMD_TABLE)	! get command
	CMD = CMD+1
	GOTO (
     &		100,			! error/nothing	- cmd = 1
     &		200,			! enable	- cmd = 2
     &		300,			! files		- cmd = 3
     &		400,			! groups	- cmd = 4
     &		500,			! parameters	- cmd = 5
     &		600			! selections	- cmd = 7
     &			), CMD
C ----------------------------------------------------------------------
C Command number out of range
	CALL WRITEF('%S Command not yet implemented',ERROR)
	SHOW_CMD = .FALSE.
	GOTO 999
C ----------------------------------------------------------------------
C Error or nothing 
C
100	CONTINUE
	CALL WRITEF('%S Specifying command SHOW',ERROR)
	CALL WRITEF('Available SHOW command qualifiers are:')
	CALL WRITEF
     &  ('ENABLE  FILES  GROUPS  PARAMETERS  SELECTIONS')
	GOTO 1000
C ----------------------------------------------------------------------
C Show enable
C
200	CONTINUE
	CALL WRITEF('ENABLE:')
C
	IF (HAD_DIAG) THEN
	   CALL WRITEF('   ENABLE DIAGNOSTICS specified')
	ELSE
	   CALL WRITEF('   Diagnostics disabled')
	ENDIF
C
	IF (MODE_INTERSECT.OR.MODE_FLOW.OR.MODE_INTERPOLATE) THEN
	   IF (MODE_INTERSECT)
     &	      CALL WRITEF('   ENABLE MODE INTERSECT specified')
	   IF (MODE_FLOW)
     &	      CALL WRITEF('   ENABLE MODE FLOW specified')
	   IF (MODE_INTERPOLATE)
     &	      CALL WRITEF('   ENABLE MODE INTERPOLATE specified')
	ELSE
	   CALL WRITEF('   No mode is enabled')
	ENDIF
C
	IF (HAD_PME) THEN
	   CALL WRITEF('   ENABLE PME specified')
	ELSE
	   CALL WRITEF('   PME disabled')
	ENDIF
C
	GOTO 1000
C ----------------------------------------------------------------------
C Show files
C
300	CALL WRITEF('FILES:')
C
C Input IFF files
C
	IF (HAD_FILEIN) THEN
	   DO 310 I = 1,NUM_FILEIN
	      CALL WRITEF('   river/ridgeline IFF file %S selected for '
     &	      //'input',FILEIN_FNAME(I)(:FILEIN_LEN(I)))
310	   CONTINUE
	ELSE
	   CALL WRITEF('   river/ridgeline IFF input files not yet '//
     &	   'specified')
	ENDIF
C
	IF (HAD_FILEOUT) THEN
	   DO 320 I = 1,NUM_FILEOUT
	      CALL WRITEF('   river/ridgeline IFF file %S selected for '
     &	      //'output',FILEOUT_FNAME(I)(:FILEOUT_LEN(I)))
320	   CONTINUE
	ELSE
	   CALL WRITEF('   river/ridgeline IFF output files not yet '//
     &	   'specified')
	ENDIF
C
	IF (HAD_TERRAIN) THEN
	   DO 330 I = 1,NUM_TERRAIN
	      CALL WRITEF('   Terrain IFF file %S selected for '//
     &	      'input',TERRAIN_FNAME(I)(:TERRAIN_LEN(I)))
330	   CONTINUE
	ELSE
	   CALL WRITEF('   Terrain IFF input files not yet '//
     &	   'specified')
	ENDIF
C
	IF (HAD_LITES2) THEN
	   CALL WRITEF('   LITES2 file %S selected ',
     &			LITES2_FNAME(:LITES2_LEN))
	ELSE
	   CALL WRITEF('   LITES2 file not yet specified')
	ENDIF
C
	IF (HAD_CHECKPLOT) THEN
	   CALL WRITEF('   Checkplot file %S selected ',
     &			CHECKPLOT_FNAME(:CHECKPLOT_LEN))
	ELSE
	   CALL WRITEF('   Checkplot file not yet specified')
	ENDIF
C
	IF (HAD_LOOKUP) THEN
	   CALL WRITEF('   LOOKUP file %S loaded the last group '//
     &		'definition table',LOOKUP_FNAME(:LOOKUP_LEN))
	ELSE
	   CALL WRITEF('   LOOKUP file not yet specified')
	ENDIF
	GOTO 1000
C ----------------------------------------------------------------------
C Show groups
C
400	CALL WRITEF('GROUPS:')
	IF (GRPCNT.GT.0) THEN
	   DO 410 I = 1,GRPMAX
	      IF (GRPDEF(I)) THEN
	         NCOL = INDEX(GRPNAM(I),' ') - 1
		 CALL WRITEF('   %S have been defined',GRPNAM(I)(:NCOL))
		 CALL SHSELE(4,I)	! show features for group
	      ENDIF
410	   CONTINUE
	ELSE
	   CALL WRITEF ('   No group definition tables loaded')
	ENDIF
	GOTO 1000
C ----------------------------------------------------------------------
C Show parameters
C
500	CALL WRITEF('PARAMETERS:')
	CALL WRITEF('   Arrow symbol feature code set to %^W%I0',
     &	   ARROW_FC)
	CALL WRITEF('   Average terrain intersections per river/'
     &	   //'ridgeline link set to %F0.3',AVG_INTS_PER_LNK)
	CALL WRITEF('   Box symbol feature code set to %^W%I0',
     &	   BOX_FC)
	CALL WRITEF('   Check plot layer number set to %^W%I0',
     &	   LAYER_NUM)
	CALL WRITEF('   Clip tolerance set to %F0.3',CLIP_TOL)
	CALL WRITEF('   Maximum height interval set to %F0.3',
     &     MAX_INTERVAL)
	CALL WRITEF('   Node tolerance set to %F0.3',NOD_TOL)
	CALL WRITEF('   Symbol scale factor set to %F0.3',
     &	   SYMBOL_SCALE_FACTOR)
	CALL WRITEF('   Touch tolerance set to %F0.3',TOUCH_TOL)
	GOTO 1000
C ----------------------------------------------------------------------
C Show selection
C
600	CALL WRITEF('SELECTIONS:')
	CALL SHSELE(1)
	IF (HAD_LOOKUP) THEN	
	   CALL SHSELE(2)
	ELSE
	   CALL WRITEF('   LOOKUP file not yet specified')
	ENDIF
	CALL SHSELE(3)
	GOTO 1000
C ----------------------------------------------------------------------
C Exit
C
999	CALL WRITEF
1000	NOMESS = .FALSE.		! restore CMDLIB error reporting
C
	RETURN
	END
