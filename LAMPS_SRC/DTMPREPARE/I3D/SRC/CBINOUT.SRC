C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1990-05-30 12:48:56.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE CBINOUT(DATA_BUFF,WRITE_CB,NCOLS,NROWS,PENDOWN)
C
***	MODULE	CBINOUT
***	IDENT	30MY90
C
C Copyright Laser Scan Laboratories, Cambridge, England
C
CMOD 889 Pen control now passed				TJH 30-May-1990
C Created 						ALB 13-May-1988
C
C Routine to facilitate the moving of CB data between input and
C output IFF files.
C
	IMPLICIT NONE
C	
        INCLUDE 'LSL$CMNIFF:IFFHAN.CMN'
	INCLUDE 'LSL$CMNI3D:CONTROL.CMN'
C
C Structures
	INCLUDE 'LSL$CMNIFF:CB.STR'
C
C Records
	RECORD /IFF_CBH/ CBH
	RECORD /IFF_CBD/ CBD
C
C Arguments
C   in:
	INTEGER		NROWS		! num CB rows
	INTEGER		NCOLS		! num CB cols
	REAL		DATA_BUFF(NCOLS,IFF_MAXCBROW) ! xy vals
	LOGICAL		WRITE_CB	! write or read CB entry?
C
C   in/out:
	LOGICAL		PENDOWN		! start CB with pen down?
C
C Workspace
	INTEGER		IHEAD_BUFF(3)	! buffer for CB headers
C
C***********************************************************************
C
C ...................... initialise ....................................
C
	IHEAD_BUFF(1) = IFF_C_X
	IHEAD_BUFF(2) = IFF_C_Y
	IHEAD_BUFF(3) = IFF_C_Z
C
C ...................... read CB into structure ........................
C
	IF (.NOT.WRITE_CB) THEN
	   CALL EIHRCB_HEAD(CBH)
	   IF (CBH.FLAGS .EQ. 1) THEN
	      PENDOWN = .TRUE.
	   ELSE
	      PENDOWN = .FALSE.
	   ENDIF
	   CALL EIHRCB_DATA(CBD)
C
	   NROWS = CBH.NROW
C	   LAST_COL = CBH.NCOL
	   CALL IFS_CB_READ(CBH,CBD,DATA_BUFF,NCOLS,IHEAD_BUFF,
     &	      1,NROWS)	
C
C ...................... write structure into CB .......................
C
	ELSE
	   IF (PENDOWN) THEN
	      CBH.FLAGS = 1
	   ELSE
	      CBH.FLAGS = 0
	   ENDIF
	   CBH.NROW = NROWS
	   CBH.NCOL = NCOLS
	   CBH.COLH(3) = IFF_C_Z
	   CALL IFS_CB_WRITE(CBH,CBD,DATA_BUFF,NCOLS,IHEAD_BUFF,
     &	      1,NROWS)	
	   CALL IFFCB(CBH,CBD)
	ENDIF
C
	RETURN
	END
