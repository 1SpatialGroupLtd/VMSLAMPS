	LOGICAL FUNCTION CHECK_TERMINAL_DIRECTIONS(
     &		NOD_I,NOD_R,NOD_L,ARM_I,ARM_L,LNK_I,LNK_R,LNK_L,
     &		PUP_I,PDN_I,NET_I,STN_I,STN_R,STL_I,STL_L,MNX_I,
     &		MNX_R,PNT_I,PNT_R,
     &		MAX_PNTS,MAX_NODS,MAX_ARMS,MAX_LNKS,MAX_STNS,MAX_STLS)
C
***	MODULE	CHECK_TERMINAL_DIRECTIONS
***	IDENT	26AU93
C
C	Copyright Laser-Scan, Cambridge, England.
C
C	Created						ACM 15-Feb-1989
C
CMOD1288 Add FSN to LITES_MESS				 JB 25-Aug-1993
C
C ----------------------------------------------------------------------
C TRUE = No undirected river terminal links
C
C Description
C	Checks that all links with a free end are now directed. Where
C	they are not, LITES2 commands will be written to prompt for a
C	height at the unfree end, if there is one.
C
C ----------------------------------------------------------------------
	IMPLICIT NONE
C
C Parameters
	INCLUDE 'LSL$CMNI3D:CONSTANTS.PAR'
	INCLUDE 'LSL$CMNI3D:I3DMSG.PAR'
C
C Common blocks
	INCLUDE 'LSL$CMNI3D:CONTROL.CMN'
	INCLUDE	'LSL$CMNIFF:CB.STR'
C
C Dynamically assigned array argument declarations
	INCLUDE 'LSL$CMNI3D:VM_ARG_DECL.SRC'
C
C Workspace
	INTEGER		INOD,JNOD,IARM,JARM,INET,ILNK ! array indices
	INTEGER		N_UNDIRECTED_TERMINALS		! num undir termnl links
	INTEGER		FSN
	LOGICAL		FREE_END			! end-point node?
	LOGICAL		UNHEIGHTED			! node unheighted?
C
C ----------------------------------------------------------------------
C
	CHECK_TERMINAL_DIRECTIONS = .FALSE.
C
	DO 5 INOD = 1,NUM_NODS
	   NOD_L(NOD_BEF,INOD) = .FALSE.
5	CONTINUE
C
	N_UNDIRECTED_TERMINALS = 0
	DO 20 INET = 1,NUM_NETS
	   IF (NET_I(NET_GRP,INET).NE.RIVER) GOTO 20
	   DO 10 INOD = 1,NUM_NODS
C	      IF (NOD_L(NOD_DEL,INOD)) GOTO 10
	      IF (NOD_I(NOD_NET,INOD).NE.INET) GOTO 10
	      IARM = NOD_I(NOD_ARM,INOD)
	      FREE_END = ARM_I(ARM_NXT,IARM).EQ.NIL
	      IF (FREE_END) THEN
	         ILNK = ARM_I(ARM_LNK,IARM)
	         IF (LNK_I(LNK_FLO,ILNK).EQ.UNDIRECTED) THEN
	            IF (LNK_I(LNK_ND1,ILNK).EQ.INOD) THEN
	               JNOD = LNK_I(LNK_ND2,ILNK)
	            ELSE
	               JNOD = LNK_I(LNK_ND1,ILNK)
                    ENDIF
C
	            JARM = NOD_I(NOD_ARM,JNOD)
	            FREE_END = ARM_I(ARM_NXT,JARM).EQ.NIL
	            UNHEIGHTED = NOD_I(NOD_ZZZ,JNOD).EQ.IFF_ABSENT
	            IF (UNHEIGHTED .AND.
     &			   .NOT.(FREE_END.OR.NOD_L(NOD_BEF,JNOD))) THEN
C
			FSN = NOD_I(NOD_FSN,JNOD)
C
			IF (HAD_LITES2) CALL LITES_MESS(
     &	                  'Undirected river terminal link',
     &		          NOD_R(NOD_XXX,JNOD),NOD_R(NOD_YYY,JNOD),
     &	                  LITES_HEIGHTPOINT,FSN)
C
			N_UNDIRECTED_TERMINALS = N_UNDIRECTED_TERMINALS+1
			NOD_L(NOD_BEF,JNOD) = .TRUE.
	            ENDIF
	         ENDIF
	      ENDIF
10	   CONTINUE
20	CONTINUE
C
C If had error(s) then report error and fail
C
	IF (N_UNDIRECTED_TERMINALS.GT.0) THEN
	   CALL LSL_PUTMSG(I3D__UNDIRTERM,N_UNDIRECTED_TERMINALS)
	   GOTO 999
	ENDIF
C
	CHECK_TERMINAL_DIRECTIONS = .TRUE.
C
999	RETURN
	END
C
