C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1989-01-31 16:08:14.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL FUNCTION READFSN(FSNCMD)
C
***	MODULE	READFSN
***	IDENT	21DE88
C
C Copyright Laser Scan Laboratories Limited, Cambridge, England
C
C Modified from RDFSN in module DTIVIEW		ALB	5-May-1988
C
C Function to read the arguments of a SELECT/DESELECT FSN command.
C
C This version renamed to READFSN
C NOTE this verson returns FALSE if error occurs
C
	IMPLICIT NONE
C
	LOGICAL*1 FSNCMD
C
C Parameters
C
	INCLUDE 'LSL$DTMCREATESYS:MESPAR.PAR'
C	
        INCLUDE 'LSL$CMNIFF:IFFHAN.CMN'
	INCLUDE 'LSL$CMNI3D:CONTROL.CMN'
	INCLUDE 'LSL$CMNI3D:SELECT.CMN'
C
C
C Workspace.
C
	LOGICAL		OK		! return code
	INTEGER 	I,J		! loop controls.
	INTEGER 	COUNT		! number of range pairs read.
	INTEGER 	MASK		! value to be put into bit-map.
	BYTE 		CH
C
C Functions.
C
	LOGICAL*1 	READRANG	
	LOGICAL*1	RDCHS
C
C *****************************************************************
C
	READFSN	=	.TRUE.		! assume success
C
C *****************************************************************
C
C
C Initialise.
C
	COUNT=0
	MASK=0
	IF (FSNCMD) MASK=1
C
C Read all the ranges given with this command before updating
C the bit-map (since don't want to change anything if there is an
C error).
C
10	CONTINUE
	IF (RDCHS(CH)) GOTO 300
C
C If interactive then not expecting any other commands.
C
	IF ((CH.GE.48).AND.(CH.LE.57)) GOTO 200	! end of cmd ?
	CALL BSCH
	GOTO 300
C
200	CONTINUE
	COUNT=COUNT+1
	OK = READRANG(PAIRS(1,COUNT),PAIRS(2,COUNT))
	IF (.NOT.OK)	THEN 
	   READFSN = .FALSE.
	   GOTO 999
	ENDIF
	IF ((PAIRS(1,COUNT).LT.0).OR.(PAIRS(1,COUNT).GT.MAXFSN)) THEN
	   IF (FSNCMD) THEN
	      CALL WRITEF('%S Specifying command SELECT FSN',ERROR)
	   ELSE
	      CALL WRITEF('%S Specifying command DESELECT FSN',ERROR)
	   ENDIF
	   CALL WRITEF('Illegal FSN  number %^L%N.',PAIRS(1,COUNT))
	   READFSN = .FALSE.
	   GOTO 999
	ENDIF
	IF ((PAIRS(2,COUNT).LT.0).OR.(PAIRS(2,COUNT).GT.MAXFSN)) THEN
	   IF (FSNCMD) THEN
	      CALL WRITEF('%S Specifying command SELECT FSN',ERROR)
	   ELSE
	      CALL WRITEF('%S Specifying command DESELECT FSN',ERROR)
	   ENDIF
	   CALL WRITEF('Illegal FSN number %^L%N.',PAIRS(2,COUNT))
	   READFSN = .FALSE.
	   GOTO 999
	ENDIF
	GOTO 10
C
C If 1st FSN selection we've had then put the whole bit-map
C into select mode.
C
300	CONTINUE
	IF (COUNT.EQ.0) GOTO 1000
	IF (.NOT.FSNCMD) GOTO 400 ! is it a SELECT or DESELECT command?
	IF (FSNMOD) GOTO 400	  ! are we in select or deselect mode?
	FSNMOD = .TRUE.
	CALL VIOCLR(FSNMAP,FSNMAX*4)	 ! reset the whole bit-map.
C
C Now set the required bits in the bit-map.
C
400	CONTINUE
	DO 600 I=1,COUNT
	   DO 500 J=PAIRS(1,I),PAIRS(2,I)
	      WORD=J/32		! which word (0-n) the bits in.
	      OFFSET=J-WORD*32	! offset into word.
	      CALL LIB$INSV(MASK,OFFSET,1,FSNMAP(WORD+1))
500	   CONTINUE
600	CONTINUE
C
999	CONTINUE
1000	CONTINUE
C
	RETURN
	END
