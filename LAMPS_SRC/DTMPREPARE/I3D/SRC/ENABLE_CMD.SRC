	LOGICAL FUNCTION ENABLE_CMD()
C
***	MODULE ENABLE_CMD
***	IDENT 22DE88
C
C	Copyright (C), Laser-Scan Laboratories Ltd., Cambridge, England.
C
C	Created						JMB 02-Dec-1987
C Modified from ENABLE_CMD in DTI2TEXT module	by	ALB 28-Apr-1988
C
C Function to set command switch 'on' for diagnostics,
C Function also used to enable a mode.
C To be used in conjunction with DISABLE_CMD.
C
C Function returns .TRUE. if all is well, .FALSE. if there is an error.
C
	IMPLICIT NONE
C
C Parameters
	INCLUDE 'LSL$DTMCREATESYS:MESPAR.PAR'
C
C common blocks
	INCLUDE 'LSL$CMNI3D:CONTROL.CMN'
C
C command table
	EXTERNAL	ENABLE_CMD_TABLE
	INTEGER		ENABLE_CMD_TABLE
C
C Workspace
	INTEGER		CMD	! decoded command number
	LOGICAL		OK	! return code
C
C functions
	LOGICAL		RDCOMM	! find command
	LOGICAL		MODE	! enable mode
C **********************************************************************
C
	ENABLE_CMD = .TRUE.		! success assumed
C
C **********************************************************************
C
	CMD = RDCOMM(ENABLE_CMD_TABLE)	! get command
	GOTO (
     &		10,	! error/nothing
     &		20,	! diagnostics
     &		40,	! mode
     &		50	! pme
     &			), CMD+1
C ----------------------------------------------------------------------
C command number out of range
C
	CALL WRITEF('Command not yet implemented')
	ENABLE_CMD = .FALSE.
	GOTO 1000
C ----------------------------------------------------------------------
C Error or nothing found
C so inform user of avaiable options and exit with error
C
10	CALL WRITEF
	CALL WRITEF('%S Specifying command ENABLE', ERROR)
	CALL WRITEF
	CALL WRITEF('Available ENABLE qualifiers are :')
	CALL WRITEF('DIAGNOSTICS  MODE  PME')
	CALL WRITEF
	ENABLE_CMD = .FALSE.
	GOTO 999		!exit
C ----------------------------------------------------------------------
C Enable diagnostics
C 
20	HAD_DIAG = .TRUE.
	GOTO 1000		! exit
C ----------------------------------------------------------------------
C Enable INTERPOLATE mode
C
40	CONTINUE
	OK = MODE()
	IF (.NOT.OK) THEN
	   ENABLE_CMD = .FALSE.
	   GOTO 999
	ENDIF
	HAD_MODE = .TRUE.
	GOTO 1000		! exit
C ----------------------------------------------------------------------
C Enable PME
C
50	IF (HAD_PME) THEN
	   CALL WRITEF ('%S You are already using PME !', WARNING)
	ELSE
	   CALL PME_INIT	! initialise PME
	   HAD_PME = .TRUE.
	ENDIF
	GOTO 999
C **********************************************************************
C exit 
C
999	CONTINUE
1000	RETURN
	END
