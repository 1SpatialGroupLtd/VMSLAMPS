C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1993-08-26 15:07:38.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE SHOW_DIRFLOWERR(
     &		NOD_I,NOD_R,NOD_L,ARM_I,ARM_L,LNK_I,LNK_R,LNK_L,PUP_I,
     &		PDN_I,NET_I,STN_I,STN_R,STL_I,STL_L,MNX_I,MNX_R,PNT_I,PNT_R,
     &		MAX_PNTS,MAX_NODS,MAX_ARMS,MAX_LNKS,MAX_STNS,MAX_STLS)
C
***	MODULE	SHOW_DIRFLOWERR
***	IDENT	26AU93
C	
C	Copyright Laser-Scan, Cambridge, England.
C
C	Created 					ACM 06-Feb-1989
C
CMOD1288 Pass FSN to LITES_MESS				 JB 25-Aug-1993
C
C Description
C	Writes LITES2 messages to guide user through the process of
C	editing a river/ridgeline file for which I3D could not find a
C	consistent river network flow for some reason.
C
	IMPLICIT NONE
C	
C Parameters
        INCLUDE 'LSL$CMNI3D:I3DMSG.PAR'
        INCLUDE 'LSL$CMNI3D:CONSTANTS.PAR'
C
C Common blocks
	INCLUDE 'LSL$CMNI3D:CONTROL.CMN'
C
C Dynamically assigned array argument declarations
	INCLUDE 'LSL$CMNI3D:VM_ARG_DECL.SRC'
C
C Structures
        INCLUDE 'LSL$CMNIFF:CB.STR'
C
C Workspace
	INTEGER		INET,INOD,FSN
	INTEGER		N_UNHEIGHTED_NODES
	LOGICAL		IS_RIVER
C
C ----------------------------------------------------------------------
C For each network component, point to each unheighted 2+ arm node
C
	DO 20 INET = 1,NUM_NETS
C	   IS_RIVER = NET_I(NET_GRP,INET).EQ.RIVER)
	   DO 10 INOD = 1,NUM_NODS
C	      IF (NOD_L(NOD_DEL,INOD)) GOTO 10
	      IF (NOD_I(NOD_NET,INOD).NE.INET) GOTO 10
	      IF (ARM_I(ARM_NXT,NOD_I(NOD_ARM,INOD)).EQ.NIL) GOTO 10
C
	      FSN = NOD_I(NOD_FSN,INOD)
C
	      IF (NOD_I(NOD_ZZZ,INOD).EQ.IFF_ABSENT) THEN
	         N_UNHEIGHTED_NODES = N_UNHEIGHTED_NODES + 1
	         IF (HAD_LITES2) CALL LITES_MESS(
     &	            'Node could not be successfully heighted',
     &	            NOD_R(NOD_XXX,INOD),NOD_R(NOD_YYY,INOD),
     &	            LITES_HEIGHTPOINT,FSN)
	      ENDIF
10	   CONTINUE
20	CONTINUE
C
	IF (N_UNHEIGHTED_NODES.GT.0)
     &	   CALL LSL_PUTMSG(I3D__UNHEIGHTEDNODES,N_UNHEIGHTED_NODES)
C
	RETURN
	END
C
