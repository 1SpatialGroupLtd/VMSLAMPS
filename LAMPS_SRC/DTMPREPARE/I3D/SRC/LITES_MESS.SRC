	LOGICAL FUNCTION LITES_MESS(MESSAGE,X_POS,Y_POS,MODE,FSN)
C
***	MODULE LITES_MESS
***	IDENT  26AU93
C
C	Copyright Laser-Scan, Cambridge, England
C
C	Created						ALB 27-Apr-1988
C 
CMOD1288 Use search FSN with the FSN passed if unheighted free end
C							 JB 25-Aug-1993
C
C Writes commands to a LITES2 command file. The routine will open the
C LITES2 command file if not already open. There are various modes of
C operation which are controlled by the argument MODE.
C
	IMPLICIT NONE
C
C Parameters
	INCLUDE 'LSL$DTMCREATESYS:MESPAR.PAR'
	INCLUDE 'LSL$CMNLSL:LSLLIBMSG.PAR'
	INCLUDE 'LSL$CMNI3D:CONSTANTS.PAR'
C
C Common blocks	
	INCLUDE 'LSL$CMNI3D:CONTROL.CMN'
C
C Arguements
	CHARACTER*(*)	MESSAGE		! message to output
	REAL		X_POS,Y_POS	! x,y coords
	INTEGER		MODE		! command sequence output
	INTEGER		FSN
C
C Workspace
	INTEGER		RET_CODE	! return code
	INTEGER		IERR		! system error number
C
C Functions
	INTEGER		FLWOPN
	INTEGER		FLWCLO
	INTEGER		LCM_OPEN
C
C **********************************************************************
C
	LITES_MESS	= .FALSE.
	IF (.NOT.HAD_LITES2) GOTO 1000
C
C Open LITES2 command file if not already open
C
	IF (.NOT.OPEN_LITES2) THEN
	   RET_CODE = LCM_OPEN(LITES2_LUN,LITES2_FNAME,RANGE,.FALSE.)
	   IF (RET_CODE.NE.LSL__NORMAL) THEN
	      CALL WRITEF('%S Opening LITES2 command file %S',
     &	         ERROR,LITES2_FNAME(:LITES2_LEN))
	      CALL LSL_PUTMSG(RET_CODE)
	      IF (RET_CODE.EQ.LSL__SYSOPEN) CALL LSL_ADDMSG(IERR)
	      GOTO 999
	   ENDIF
	   OPEN_LITES2 = .TRUE.
	   CALL FLWSEL(LITES2_LUN)
	   CALL FLWRTF('%%ENABLE SUBSTITUTION')
	   CALL FLWRTF('%%ENABLE CONTINUE')
	   CALL FLWRTF('%%DECLARE REAL HT')
	   CALL FLWRTF('%%LABEL NONE')
	   CALL FLWRTF('%%LABEL HEIGHT')
	   CALL FLWRTF('%%DRAW LABEL')
	ENDIF
C
C Show vertex
C
	CALL FLWSEL(LITES2_LUN)
	CALL FLWRTF('%%MESSAGE %S',MESSAGE)
	CALL FLWRTF('%%ABANDON')
	CALL FLWRTF('%%POS %F9.2 %F9.2',X_POS,Y_POS)
	CALL FLWRTF('%%TEST $CURSINWIN')
	CALL FLWRTF('%%ELSE %%ZOOM 1')
	CALL FLWRTF('%%ELSE %%DRAW LABEL')
C
	IF (MODE.EQ.LITES_SHOWPOINT) THEN
	   CALL FLWRTF('%%PING')
	   CALL FLWRTF('%%RESPOND')
C
C Point to given vertex, ask user for a height, then edit this height
C
	ELSEIF (MODE.EQ.LITES_HEIGHTPOINT) THEN
	   CALL FLWRTF('%%MESSAGE >>> Use LITES commands freely to '//
     &	      'examine terrain data.')
	   CALL FLWRTF('%%MESSAGE >>> Issue the CONTINUE command.')
	   CALL FLWRTF('%%MESSAGE >>> Enter height when prompted.')
	   CALL FLWRTF('%%PING')
	   CALL FLWRTF('%%RESPOND')
	   CALL FLWRTF('%%POS %F9.2 %F9.2',X_POS,Y_POS)
	   CALL FLWRTF('%%INQUIRE HT "   Enter height now > "')
	   CALL FLWRTF('%%POS %F9.2 %F9.2',X_POS,Y_POS)
	   CALL FLWRTF('%%SEARCH FSN %N', FSN)
	   CALL FLWRTF('%%EDIT ATTRIBUTE Z ''HT''')
	ENDIF
C
1000	LITES_MESS = .TRUE.
C
999	RETURN
	END

