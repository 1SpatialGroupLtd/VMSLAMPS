C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1986-06-05 12:54:38.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL FUNCTION FINDIP(DOWNST,RIVNUM,XYZ)
C
***	MODULE FINDIP
***	IDENT  05JN86
C
C	Copyright Laser-scan laboratories Ltd, Cambridge, England.
C
C	Author	: J.M. Price Williams
C	Date	: 28 MAY 1986
C
C	D'ption : The routine finds an intersection point along a river
C		  if one is present and returns it in RIVSTA
C
	IMPLICIT NONE
C
C	Arg'mts :
C
	LOGICAL		DOWNST		!If true river flows into node  (in)
	INTEGER		RIVNUM		!river number along which ip is (in)
	REAL		XYZ(3)		!X,Y,Z coords of the ip		(out)
C
C	Params	:
C
***	PARAMETER/HERE:RIV3D/
C
C	Common
C	 blocks	:
C
***	COMMON/HERE:RIV3D/
C
C	Local
C	  variab:
C
	INTEGER		K		!Loop counter
	INTEGER		PNT		!Index pointer into INTP
	INTEGER		RIVSTA		!Start pos index of river RIVNUM in RIVP
	INTEGER		RIVEND		!End pos index of river RIVNUM in RIVP
	INTEGER 	NUMPTS		!Number of points in river RIVNUM
C
C	Set the function to false
C
	FINDIP = .FALSE.
C
C	Get the start and end positions etc of river RIVNUM from RIVP
C
	RIVEND = 0
	DO 20, K = 1, RIVNUM
	   RIVSTA = RIVEND + 2
	   NUMPTS   = RIVP(1,RIVSTA - 1)
	   RIVEND   = RIVSTA + NUMPTS - 1
20	CONTINUE
	   	   
C
C	Find if river going into or outof node and process accordingly
C
	IF  (DOWNST) THEN			!River flows into node
	   DO 40, K = RIVEND, RIVSTA, -1
	      PNT = HEAD(K)
	      IF (PNT. EQ. 0) GOTO 40		!no isect in this seg
	      FINDIP = .TRUE.			!Must be ip to get here
30	      IF (INTP(4,PNT) .EQ. 0) GOTO 70	!at end of link list
	      PNT = INTP(4,PNT)			!next entry in link list
	      GOTO 30
40	   CONTINUE
	ELSE					!River flows out of node
	   DO 60, K = RIVSTA, RIVEND
	      PNT = HEAD(K)
	      IF (PNT .EQ. 0) GOTO 60		!no isect in this seg
	      FINDIP = .TRUE.			!Must have ip to get here
	      GOTO 70				!1st entry in link list; want it
60	   CONTINUE
	ENDIF
70	IF (FINDIP) THEN
	   DO 80, K = 1,3
	      XYZ(K) = INTP(K,PNT)
80	   CONTINUE
	ENDIF
C
	RETURN
	END

