C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1986-09-25 12:07:10.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE CHKBOX(I_RIV_STA,I_RIV_FIN,I_CON_STA,I_CON_FIN)
C
***	IDENT	25SE86
***	MODULE	CHKBOX
C
C	Copyright : Laser-Scan Laboratories Ltd, Cambridge, England.
C	Created   : ACM				Feb	1984
C
	IMPLICIT NONE
C
***	PARAMETER/HERE:RIV3D/
C
C parameters in
	INTEGER		I_RIV_STA,I_RIV_FIN	! river-box sec range
	INTEGER		I_CON_STA,I_CON_FIN	! contour-box sec range
C
***	COMMON/HERE:RIV3D/
***	COMMON/HERE:QUADTREE/			! has NBOX
C
C workspace
	INTEGER		I_RIV,I_CON		! riv/con-box sec indics
	INTEGER		IP_RIV			! riv pnt RIV index
	INTEGER		IP_RIV_STA,IP_RIV_FIN	! IP_RIV DO range
	INTEGER		IP_CON			! con pnt P index
	INTEGER		IP_CON_STA,IP_CON_FIN	! IP_CON DO range
	INTEGER		STA_PTR,PTR,NEXT_PTR	! INTP pointers
	REAL		P1X,P1Y,P2X,P2Y		! river seg end points
	REAL		Q1X,Q1Y,Q2X,Q2Y		! contour seg end points
	REAL		X,Y,Z			! int pt coords
	REAL		DX,DY
	REAL		NEW_DIST,DIST		! distances from P1
C
C functions
	LOGICAL		SEGINT			! check int betw segs
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
C	Finds all intersections between river and contour sections
C	in ranges given, and puts them into the linked list of int pts
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
C for each river section
	DO 40 I_RIV = I_RIV_STA, I_RIV_FIN
C
C for each segment in this river section
	  IP_RIV_STA = RIVBOX(1,I_RIV,NBOX)
	  IP_RIV_FIN = RIVBOX(2,I_RIV,NBOX)
	  DO 30 IP_RIV = IP_RIV_STA,IP_RIV_FIN-1
C
C set up river seg end points
	    P1X = RIVP(1,IP_RIV)
	    P1Y = RIVP(2,IP_RIV)
	    P2X = RIVP(1,IP_RIV+1)
	    P2Y = RIVP(2,IP_RIV+1)
C
C set up pointer to first int pt record for this river segment
	    STA_PTR = HEAD(IP_RIV)
C
C for each contour section
	    DO 20 I_CON = I_CON_STA,I_CON_FIN
C
C for each segment in this contour section
	      IP_CON_STA = CONBOX(1,I_CON,NBOX)
	      IP_CON_FIN = CONBOX(2,I_CON,NBOX)
	      DO 10 IP_CON = IP_CON_STA, IP_CON_FIN-1
C
C set up contour seg end points
	        Q1X = CONTOUR(1,IP_CON)
	        Q1Y = CONTOUR(2,IP_CON)
	        Q2X = CONTOUR(1,IP_CON+1)
	        Q2Y = CONTOUR(2,IP_CON+1)
C
	        IF (SEGINT(P1X,P1Y,P2X,P2Y,Q1X,Q1Y,Q2X,Q2Y,X,Y))THEN
C
C create a new contour-intersection pt record
	          TAILPTR = TAILPTR+1
	          IF (TAILPTR.GT.MAXIP) THEN
	            CALL WRITEF(
     & '*** FATAL - Intersection point overflow')
	            CALL EXIT
	          END IF
	          INTP(1,TAILPTR) = X
	          INTP(2,TAILPTR) = Y
	          INTP(3,TAILPTR) = HEIGHT	            
C
C place this int pt into its linked list, ordered by dist along seg
	          NEW_DIST = ABS(X-P1X)+ABS(Y-P1Y)
	          PTR = NILL
	          NEXT_PTR = STA_PTR
C
5	          IF (NEXT_PTR.EQ.NILL) GOTO 6
	          DX = INTP(1,NEXT_PTR)-P1X
	          DY = INTP(2,NEXT_PTR)-P1Y
	          DIST = ABS(DX)+ABS(DY)
C
	          IF (NEW_DIST.GT.DIST) THEN
	            PTR = NEXT_PTR
	            NEXT_PTR = INTP(4,PTR)
	            GOTO 5
	          END IF
C
6	          IF (PTR.EQ.NILL) THEN
	            HEAD(IP_RIV) = TAILPTR
	          ELSE
	            INTP(4,PTR) = TAILPTR
	          END IF
	          INTP(4,TAILPTR) = NEXT_PTR
	        END IF
10	      CONTINUE	! loop for next point in contour
20	    CONTINUE	! loop for next contour section
30	  CONTINUE	! loop for next point in river
40	CONTINUE	! loop for next river section
C
	END
