	SUBROUTINE NDTORV
C
***	MODULE NDTORV
***	IDENT  25SE86
C
C	Author	: J. Price Williams.
C	Date	: 20-may-1986
C
C	Descrip : The routine forms an array which references all nodes
C		  formed in the routine GETNODE to the rivers which they
C		  are asociated with.
C
	IMPLICIT NONE
C
C	parameters
C
***	PARAMETER/HERE:RIV3D/
C
C	common
C	 blocks	:
C
***	COMMON/HERE:RIV3D/
C
C	local
C	  vars	:
	INTEGER		J_RIV		!River counter
	INTEGER		K		!ends counter
	INTEGER		ARADDR		!address pointer for ass_riv array
	INTEGER		NXTFREE		!address pointer to the next free pos
C
C	first set up some of the local variables
C	
	NXTFREE = N_NODES + 1				!1st free address after
	ARADDR  = 1					!set to 1 for safety
C
	DO 30, J_RIV = 1, N_RIVERS			!each river
	   DO 20, K = 1, 2				!each end of the river
	      ARADDR = ENDS(K,J_RIV)			!set up address position
10	      IF (ASS_RIVS(1,ARADDR) .EQ. 0) THEN	!see if any entry
		 IF (K .EQ. 1) THEN			!start node ?
		    ASS_RIVS(1,ARADDR) = J_RIV		!put in riv number
	         ELSE
		    ASS_RIVS(1,ARADDR) = -1 * J_RIV	!end node so - riv no
		 ENDIF
		 GOTO 20
	      ELSEIF (ASS_RIVS(2,ARADDR) .EQ. 0) THEN	!no continue addr so
		 ASS_RIVS(2,ARADDR) = NXTFREE		!set cont addr in list
		 ARADDR  = NXTFREE			!set arddress pointer
		 NXTFREE = NXTFREE + 1			!increment next free 
		 IF (NXTFREE .GT. MAXASR) THEN		!check valid address
		    CALL WRITEF('*** FATAL - '//
     & 'Node to river referencing overflow (> %^L%N references)'
     &                                          ,MAXASR)!error meesage o/p and
		    CALL EXIT				!exit in orderly way
		 ENDIF
	      ELSE
		 ARADDR = ASS_RIVS(2,ARADDR)		!next addr in chain
	      ENDIF
	      GOTO 10					
20	   CONTINUE					!end of ENDS loop
30	CONTINUE					!end of RIVERS loop
C
	RETURN
	END
