	LOGICAL FUNCTION GETCMDS
C
***	IDENT	25SE86
***	MODULE	GETCMDS
C
C	Copyright : Laser-Scan Laboratories Ltd., Cambridge, England
C	Created   : ACM					Feb 1985
C
	IMPLICIT NONE
C
***	PARAMETER/HERE:RIV3D/
C
***	COMMON/HERE:RIV3D/		! RIVFILE, etc
***	COMMON/LSL$CMNVIO:TXTC/		! command line input
***	COMMON/LSL$CMNVIO:CMDCOM/	! command decoding
C
C functions
	INTEGER		RDCOMM		! read next command
	INTEGER		TXTCML		! read in command line
	LOGICAL		RDCHS		! read next non space char
	LOGICAL		RDFNAM		! read IFF filename
	LOGICAL		RDRANG		! reads range
	LOGICAL		RDLONG		! reads integer
C
C workspace
	INTEGER		I,J,K
	INTEGER		COMLEN		! command line length
	INTEGER*2	OLDPTR		! for storing DCPTR for HELP
	LOGICAL		EOLN		! end of command line?
	LOGICAL		ERR
	BYTE		CH		! for RDCHS
	CHARACTER*3	EXTENSION
C
C externals
	INTEGER		RIV3D_CMD_TABLE, HELP_CMD_TABLE
	EXTERNAL	RIV3D_CMD_TABLE, HELP_CMD_TABLE
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
C	Gets river/ridge, contour and output filenames, and any
C	switches, etc.
C
C	Result true iff function is successful
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
C wait for further commands to supply sufficient information
10	COMLEN = TXTCML('RIV3D> ')
	IF (COMLEN.EQ.-10) GOTO 270	! EXIT
C
	IF (COMLEN.LT.0) THEN
	  CALL WRITEF('*** WARNING - Command line read error')
	  GOTO 10			! get next command line
	END IF
C
	CALL BSLN
20	EOLN = RDCHS(CH)
	IF (.NOT.EOLN
     &	    .AND.CH.NE.','.AND.CH.NE.'/'.AND.CH.NE.'=') CALL BSCH
	CMDNUM = RDCOMM(RIV3D_CMD_TABLE)
	IF (ERRNUM.NE.0) GOTO 10	! get next command line
	IF (CMDNUM) 30,10,40
30	CALL WRITEF('*** WARNING - Command line syntax error')

	GOTO 10
C	  outfile, rivfile,  confile,   overlays,  rfc,  cfc,
C	   maxlen,   touch,  panout,   ridge,   lites,   show,
C           int_z,  nint_z,    exit,      iffzs,   help, go
C
40	GOTO ( 50,      60,      70,      80,     90,    130,
     &	      170,     180,     190,     200,     210,   220,
     &        250,     260,     270,     275,	  280,   285) CMDNUM
C 
C OUTFILE : read output filename
50	GOT_OUTFILE = RDFNAM(OUTFILE)
	CALL UPPERCASE(OUTFILE)
	IF (GOT_OUTFILE) THEN		! check output extension
	  I = INDEX(OUTFILE,'.')
	  J = INDEX(OUTFILE,']')
	  IF (I.LT.J) I = J-1+INDEX(OUTFILE(J:),'.')
	  EXTENSION = OUTFILE(I+1:I+3)
	  IF (PANOUT) THEN
	    IF (EXTENSION.EQ.'IFF'.OR.EXTENSION.EQ.'iff')
     &	    OUTFILE = OUTFILE(1:I)//'BRK'
	  ELSE
	    IF (EXTENSION.EQ.'BRK'.OR.EXTENSION.EQ.'brk')
     &	    OUTFILE = OUTFILE(1:I)//'IFF'
	  END IF
	END IF
	GOTO 20				! get next command
C
C RIVFILE<RIGFILE> : read river/ridge filename
60	GOT_RIVFILE = RDFNAM(RIVFILE)
	CALL UPPERCASE(RIVFILE)
	GOTO 20				! get next command
C
C CONFILE : read contour filename
70	GOT_CONFILE = RDFNAM(CONFILE)
	CALL UPPERCASE(CONFILE)
	GOTO 20				! get next command
C
C OVERLAYS
80	ERR = RDRANG(OSNMIN,OSNMAX)
	IF (ERR) THEN
	  CALL WRITEF('*** WARNING - Error in range syntax')
	  GOTO 10			! start again
	END IF
	GOTO 20				! get next command
C
C RFC : set river features code(s)
90	EOLN = RDCHS(CH)		! read next non spacer char
	IF (.NOT.EOLN) THEN
	  CALL BSCH			! backspace one char
	  ERR = RDLONG(I)		! try to read an integer
	  IF (.NOT.ERR) ERR = I.LT.0.OR.I.GT.32767
	END IF
C
	IF (ERR.OR.EOLN) THEN
	  IF (NRFC.LT.1)
     &	    CALL WRITEF(
     & '*** WARNING - No river/ridge feature code check ***')
	  DO 100 I = 1,NRFC
100	  CALL WRITEF('RFC %I',RFC(I))
	  GOTO 20			! get next command
	END IF
C
	IF (CMDNEG) THEN		! delete FCs?
	  DO 120 J = 1,NRFC		! for each current RFC do...
	  IF (I.EQ.RFC(J)) THEN		! if FC matches then...
	    DO 110 K = J,NRFC-1		! shunt later FCs down one place
110	    RFC(K) = RFC(K+1)
	    NRFC = NRFC-1		! decrement RFC count
	    GOTO 90			! and get next integer
	  END IF
120	  CONTINUE			! loop for next RFC
	  GOTO 90			! if no match, get next integer
	ELSE IF (NRFC.EQ.10) THEN
	  CALL WRITEF
     &	  ('*** WARNING - '//
     &     'Only 10 different river/ridge feature codes permitted')
	  GOTO 20			! get next command
	ELSE
	  NRFC = NRFC+1
	  RFC(NRFC) = I
	  GOTO 90
	END IF
C
C CFC : set contour feature codes(s)
130	EOLN = RDCHS(CH)		! read next non spacer char
	IF (.NOT.EOLN) THEN
	  CALL BSCH			! backspace one char
	  ERR = RDLONG(I)		! try to read an integer
	  IF (.NOT.ERR) ERR = I.LT.0.OR.I.GT.32767
	END IF
C
	IF (ERR.OR.EOLN) THEN
	  IF (NCFC.LT.1)
     &	    CALL WRITEF(
     &      '*** WARNING - No contour feature code check ***')
	  DO 140 I = 1,NCFC
140	  CALL WRITEF('CFC %I',CFC(I))
	  GOTO 20			! get next command
	END IF
C
	IF (CMDNEG) THEN		! delete FCs?
	  DO 160 J = 1,NCFC		! for each current CFC do...
	  IF (I.EQ.CFC(J)) THEN		! if FC matches then...
	    DO 150 K = J,NCFC-1		! shunt later FCs down one place
150	    CFC(K) = CFC(K+1)
	    NCFC = NCFC-1		! decrement CFC count
	    GOTO 160			! and get next integer
	  END IF
160	  CONTINUE			! loop for next CFC
	  GOTO 130			! if no match, get next integer
	ELSE IF (ERR.OR.I.LT.0) THEN
	  CALL WRITEF('*** WARNING - Bad feature code')
	  GOTO 20			! get next command
	ELSE IF (NCFC.EQ.10) THEN
	  CALL WRITEF
     &	  ('*** WARNING - '//
     &     'Only 10 different contour feature codes are permitted')
	  GOTO 20			! get next command
	ELSE
	  NCFC = NCFC+1
	  CFC(NCFC) = I
	  GOTO 130
	END IF
C
C MAXLEN : limit maximum river segment length
170	IF (CMDRCT.GE.1) THEN
	  MAXLEN = ABS(REALAR(1))
	  IF (MAXLEN.NE.0) MAXLEN = MAX(MINMAXLEN,MAXLEN)
	END IF
	GOTO 20				! get next command
C
C TOUCH: end point touch tolerance
180	IF (CMDRCT.GE.1) TCHDST = ABS(REALAR(1))
	GOTO 20				! get next command
C
C PANOUT : Output in PANACEA format instead of IFF
190	PANOUT = .NOT.CMDNEG
	IF (GOT_OUTFILE) THEN		! check output extension
	  I = INDEX(OUTFILE,'.')
	  J = INDEX(OUTFILE,']')
	  IF (I.LT.J) I = J-1+INDEX(OUTFILE(J:),'.')
	  EXTENSION = OUTFILE(I+1:I+3)
	  IF (PANOUT) THEN
	    IF (EXTENSION.EQ.'IFF'.OR.EXTENSION.EQ.'iff')
     &	    OUTFILE = OUTFILE(1:I)//'BRK'
	  ELSE
	    IF (EXTENSION.EQ.'BRK'.OR.EXTENSION.EQ.'brk')
     &	    OUTFILE = OUTFILE(1:I)//'IFF'
	  END IF
	END IF
	GOTO 20				! get next command
C
C RIDGE: Output in PANACEA format instead of IFF
200	RIDGE = .NOT.CMDNEG
	GOTO 20				! get next command
C
C LITES: write Lites command file for editing out faults
210	LITES = .NOT.CMDNEG
	GOTO 20				! get next command
C
C SHOW: Show parameters understood
C
C show river/ridge filename
220	CALL EXPAND('River/ridge filename: ')
	IF (GOT_RIVFILE) THEN
	  CALL APPEND('%S',RIVFILE(1:INDEX(RIVFILE,' ')))
	ELSE
	  CALL APPEND('not specified')
	END IF
	CALL TTWLIN()
C
C show contour filename
	CALL EXPAND('Contour file        : ')
	IF (GOT_CONFILE) THEN
	  CALL APPEND('%S',CONFILE(1:INDEX(CONFILE,' ')))
	ELSE
	  CALL APPEND('not specified')
	END IF
	CALL TTWLIN()
C
C show output filename
	CALL EXPAND('Output file         : ')
	IF (GOT_OUTFILE) THEN
	  CALL APPEND('%S',OUTFILE(1:INDEX(OUTFILE,' ')))
	ELSE
	  CALL APPEND('not specified')
	END IF
	CALL TTWLIN()
C
C show whether writing Lites command file
	CALL EXPAND('Lites command output: ')
	IF (LITES) THEN
	  CALL APPEND('yes')
	ELSE
	  CALL APPEND('no')
	END IF
	CALL TTWLIN()
C
C show overlay range
	CALL EXPAND('Layer range         : ')
	IF (OSNMIN.NE.-32767.OR.OSNMAX.NE.32767) THEN
	  CALL APPEND('%N - %N',OSNMIN,OSNMAX)
	ELSE
	  CALL APPEND('not specified')
	END IF
	CALL TTWLIN()
C
C show contour feature codes to be used
	CALL EXPAND('CFC''s               : ')
	IF (NCFC.LT.1) THEN
	  CALL APPEND('no CFC check')
	  CALL TTWLIN()
	ELSE
	  CALL APPEND('%I',CFC(1))
	  CALL TTWLIN()
	  DO 230 I = 2,NCFC
230	  CALL WRITEF('                      %I',CFC(I))
	END IF
C
C show river/ridge feature codes to be used
	CALL EXPAND('RFC''s               : ')
	IF (NRFC.LT.1) THEN
	  CALL APPEND('no RFC check')
	  CALL TTWLIN()
	ELSE
	  CALL APPEND('%I',RFC(1))
	  CALL TTWLIN()
	  DO 240 I = 2,NRFC
240	  CALL WRITEF('                      %I',RFC(I))
	END IF
C
C show MAXLEN
	CALL EXPAND('Max segment length  : ')
	IF (ABS(MAXLEN).GE.MINMAXLEN) THEN
	  CALL APPEND('%F9.2',MAXLEN)
	ELSE
	  CALL APPEND('no limit')
	END IF
	CALL TTWLIN()
C
C show touch tolerance
	CALL EXPAND('Touch tolerance     : ')
	IF (TCHDST.LT.0) THEN
	  CALL APPEND
     &	('not specified (will assume default = max-range/500)')
	ELSE
	  CALL APPEND('%F9.2',TCHDST)
	END IF
	CALL TTWLIN()
C
C show whether PANACEA or IFF output
	CALL EXPAND('Output format       : ')
	IF (PANOUT) THEN
	  CALL APPEND('BRK')
	ELSEIF (IFF3D) THEN
	  CALL APPEND('3d IFF (Feature code = %N)',FCODE)
	ELSE
	  CALL APPEND('2d IFF')
	END IF
	CALL TTWLIN()
C
C show whether rivers or ridges
	CALL EXPAND('Rivers or ridges?   : ')
	IF (RIDGE) THEN
	  CALL APPEND('ridges')
	ELSE
	  CALL APPEND('rivers')
	END IF
	CALL TTWLIN()
C
C show whether inegerising or nintegerising hgts
	CALL EXPAND('Real heights are    : ')
	IF (NINT_Z) THEN
	  CALL APPEND('rounded to nearest integer')
	ELSE IF (INT_Z) THEN
	  CALL APPEND('truncated to nearest integer')
	ELSE
	  CALL APPEND('not rounded or truncated')
	END IF
	CALL TTWLIN()
C
	GOTO 20				! get next command
C
C INT_Z: integerise hgt values before output
250	INT_Z = .NOT.CMDNEG
	IF (INT_Z) NINT_Z = .FALSE.
	GOTO 20				! get next command
C
C NINT_Z: nintegerise hgt values before output
260	NINT_Z = .NOT.CMDNEG
	IF (NINT_Z) INT_Z = .FALSE.
	GOTO 20				! get next command
C
C EXIT
270	GETCMDS = .FALSE.
	GOTO 320			! return
C
C IFFZS - output to IFF file with 3d ZS entries
275	IFF3D = .NOT.CMDNEG
	FCODE = INTARG(1)		! user defined IFF feature code
	GOTO 20
C
C HELP - give help
280	OLDPTR=DCPTR	! save old cmd decode pointer for now
	NOMESS=.TRUE.	! suppress CMDLIB's moans
	CMDNUM = RDCOMM (HELP_CMD_TABLE)
	IF (ERRNUM.NE.0) DCPTR=OLDPTR	! restore old DCPTR if error
	NOMESS=.FALSE.
	CALL HELP(CMDNUM)
	GOTO 20
C
C GO : go to find 3D rivers and create output file
285	IF (GOT_OUTFILE.AND.GOT_RIVFILE.AND.GOT_CONFILE) THEN
	  IF (GOT_LOGFILE) GOTO 290
	  GOT_LOGFILE = .TRUE.
C
C name log file
	  I = INDEX(OUTFILE,'.')
	  J = INDEX(OUTFILE,']')
	  IF (I.LT.J) I = J-1+INDEX(OUTFILE(J:),'.')
	  LOGFILE = OUTFILE(1:I)//'LOG'
C
C open and title log file
290	  CALL FLWOPN(LOG_LUN,LOGFILE)
	  CALL FLWRTF('*************************************************
     &****************')
	  CALL FLWRTF(' ')
	  IF (RIDGE) THEN
	    LINE_TYPE = 'RIDGE'
	  ELSE
	    LINE_TYPE = 'RIVER'
	  END IF
	  CALL FLWRTF
     &	   (' RIV3D LOG FILE %S for 3D %S GENERATION',LOGFILE,LINE_TYPE)
	  CALL FLWRTF(' ')
300	  GETCMDS = .TRUE.
	  IF (ABS(MAXLEN).LT.MINMAXLEN) MAXLEN = 1E10
	  GOTO 310			! return
	END IF
	IF (.NOT.GOT_RIVFILE) CALL WRITEF('*** River/Ridge file?')
	IF (.NOT.GOT_CONFILE) CALL WRITEF('*** Contour file?')
	IF (.NOT.GOT_OUTFILE) CALL WRITEF('*** Output file?')
	GOTO 10				! get next command line
C
310	RFLEN = INDEX(RIVFILE,' ')	! set filename lengths
	CFLEN = INDEX(CONFILE,' ')
	OFLEN = INDEX(OUTFILE,' ')
	IF (RFLEN.EQ.0) RFLEN = 80
	IF (CFLEN.EQ.0) CFLEN = 80
	IF (OFLEN.EQ.0) OFLEN = 80
C
320	END
