C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1986-09-25 13:16:28.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	PROGRAM RIV3D
C
***	IDENT	25SE86
***	MODULE	RIV3D
C
C	Copyright : Laser-Scan Laboratories Ltd., Cambridge, England
C	Created   : ACM					Feb 1985
C
CMOD	alter so that ridges are treated as rivers	JMPW	08-07-86
C
C
	IMPLICIT NONE
C
***	PARAMETER/HERE:RIV3D/
C
***	COMMON/HERE:RIV3D/		! RIVFILE, etc
***	COMMON/LSL$CMNVIO:TXTC/		! command line input
C
C workspace
	INTEGER		I
	LOGICAL		GOT_RIVERS,GOT_CONTOURS
C
C functions
	LOGICAL		GETCMDS		! get filenames, etc.

C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
C	This program creates 3D rivers from 2D rivers and contours
C
C	See REPORT for notes on algorithm and data structure
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
	CALL LIB$INIT_TIMER()		! start timing
	CALL IFFTDY			! init. IFF error handler
	TXTADD = %LOC(TXTBUF)
	TXTPTR = 80
	CALL STATE(NOTBATCH)		! bactch job?
	NOTBATCH = .NOT.NOTBATCH
C
C set defaults
	GOT_OUTFILE = .FALSE.
	GOT_RIVFILE = .FALSE.
	GOT_CONFILE = .FALSE.
	GOT_LOGFILE = .FALSE.
	GOT_RIVERS = .FALSE.
	GOT_CONTOURS = .FALSE.
	PANOUT = .FALSE.		! output to OFF, not PAN format
	RIDGE = .FALSE.			! rivers, not ridge-lines
	LITES = .FALSE.			! no Lites command output
	N_RIVERS = 0			! zero river count
	TAILPTR = 0			! zero int point count
	N_CONTOURS = 0			! & contour count
	N_NODES = 0			! & node count
	N0INTS = 0			! & 0-int count
	N1INTS = 0			! & 1-int count
	NFLATS = 0			! & flat-river count
	UP_DOWNS = 0			! & up-down river count
	OSNMIN = -32767
	OSNMAX = 32767
	RFC(1) = 206			! river FC is 206
	NRFC = 1			! only 1 river FC
	CFC(1) = 201			! contour FC is 201
	NCFC = 1			! only 1 contour FC
	MAXLEN = 0			! no max seg length constraint
	INT_Z = .FALSE.			! don't integerise hgts
	NINT_Z = .FALSE.		! don't nintegerise hgts
	TCHDST = -1			! if still = -1 after GETCMDS
C					! then will = maxrange/500

	IF(.NOT.GETCMDS()) GOTO 20	! get filenames, initialise, etc
C
	IF (GOT_RIVERS) GOTO 15
C
	CALL WRITEF(' ')
	IF (NOTBATCH) THEN
	  CALL WRITEF
     &      ('      0 %SS READ                FROM %S',
     &	    LINE_TYPE,RIVFILE(1:RFLEN))
	END IF
C
C	set up the river/ridge array RIVP
C
	CALL GETRIVS			
	IF (.NOT.NOTBATCH) THEN
	  CALL WRITEF
     &      (' %^L%I7 %SS READ                FROM %S',
     &	    N_RIVERS,LINE_TYPE,RIVFILE(1:RFLEN))
	END IF
C
	IF (N_RIVERS.GT.0) THEN
	  GOT_RIVERS = .TRUE.
	ELSE
	  CALL WRITEF
     &	    ('*** WARNING - '//
     &       'No %SS found with given feature code(s)',LINE_TYPE)
	  IF (.NOT.PANOUT) CALL IFFCLO (2) ! close river IFF in-file
	  GOTO 20			! exit
	END IF
C
C	Now find all the nodes at the river/ridge ends and store them
C	in the common array NODES(X,Y)
C
	IF (NOTBATCH) CALL WRITEF('      0 %S NODES FOUND',LINE_TYPE)
	CALL GETNODS			! get river nodes
	IF (.NOT.NOTBATCH) CALL WRITEF(' %^L%I7 %S NODES FOUND',
     &	     N_NODES,LINE_TYPE)
C
C	set up the river quad tree in preperation for intersection checking
C
	IF (NOTBATCH)
     &	  CALL WRITEF('   0.0%% %S QUADTREE SETUP',LINE_TYPE)
	CALL SETRIVS			! set rivers into riv quad tree
C
15	IF (NOTBATCH)
     &	  CALL WRITEF('      0 CONTOURS CHECKED           FROM %S',
     &	  CONFILE(1:CFLEN))
C
C	find the river/ridge // contour intersections and set into INTP array
C	also setting up the HEAD array
C
	CALL CHKMAP			! find all riv/con intersections
	IF (.NOT.NOTBATCH)
     &	  CALL WRITEF(' %^L%I7 CONTOURS CHECKED           FROM %S',
     &	  N_CONTOURS,CONFILE(1:CFLEN))
C
	IF (N_CONTOURS.GT.0) THEN
	  GOT_CONTOURS = .TRUE.
	ELSE
	  CALL WRITEF
     &	  ('*** No contours found with given feature code(s)')
	  GOTO 20			! exit
	END IF
C
C	Calculate the node heights where possible
C
	CALL NODHGTS	! find node heights
C
C	now output the river/ridges
C
	IF (NOTBATCH)
     &    CALL WRITEF('      0 3D %SS            WRITTEN TO %S',
     &	  LINE_TYPE,OUTFILE(1:OFLEN))
	CALL WRTRIVS			! write output
C
20	CALL EXIT
	END
