C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1986-07-10 18:08:36.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL FUNCTION SEGINT(P1X,P1Y,P2X,P2Y,Q1X,Q1Y,Q2X,Q2Y,X,Y)
C
***	IDENT	10JL86
***	MODULE	SEGINT
C
C	Copyright : Laser-Scan Laboratories Ltd., Cambridge, England
C	Created   : ACM					Jun 1986
C
	IMPLICIT NONE
C
C local parameters
	REAL*4		TOL			! dist tolerance
	PARAMETER(	TOL = 0.001)
C
C parameters in
	REAL*4		P1X,P1Y,P2X,P2Y		! vector P end pts
	REAL*4		Q1X,Q1Y,Q2X,Q2Y		! vector Q end pts
C
C parameters out
	REAL*4		X,Y			! intersection point
C
C workspace
	REAL*4		P1P2X,P1P2Y		! vector P2-P1
	REAL*4		Q1Q2X,Q1Q2Y		! vector Q2-Q1
	REAL*4		P1Q1X,P1Q1Y		! vector Q1-P1
	REAL*4		P2Q2X,P2Q2Y		! vector Q2-P2
	REAL*4		D1P,D2P		! dists of P1 and P2 from Q12
	REAL*4		D1Q,D2Q		! dists of Q1 AND Q2 from P12
	REAL*4		DET			! a determinant
	REAL*4		DTOL			! dist tolerance
	REAL*4		F			! scale factor
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
C	Function returns true and finds intersection point (X,Y)
C	if vectors are not parallel and there is intersection
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
	SEGINT = .FALSE.			! assume no intersection
C
C check for box intersection - most won't
	IF (MAX(P1X,P2X).LT.MIN(Q1X,Q2X)-TOL) GOTO 10
	IF (MIN(P1X,P2X).GT.MAX(Q1X,Q2X)+TOL) GOTO 10
	IF (MAX(P1Y,P2Y).LT.MIN(Q1Y,Q2Y)-TOL) GOTO 10
	IF (MIN(P1Y,P2Y).GT.MAX(Q1Y,Q2Y)+TOL) GOTO 10
C
C boxes do intersect so there may be an intersection
C
	P1P2X = P2X-P1X				! vector P1P2
	P1P2Y = P2Y-P1Y
	Q1Q2X = Q2X-Q1X				! vector Q1Q2
	Q1Q2Y = Q2Y-Q1Y
C
	DET = Q1Q2X*P1P2Y-Q1Q2Y*P1P2X		! P1P2xQ1Q2
	IF (ABS(DET).LT.1E-5) GOTO 10		! parallel so return
C
	P1Q1X = Q1X-P1X				! vector P1Q1
	P1Q1Y = Q1Y-P1Y
	P2Q2X = Q2X-P2X				! vector P2Q2
	P2Q2Y = Q2Y-P2Y
C
	DTOL = ABS(DET)*TOL			! dist tolerance
C
	D1P = P1Q1Y*Q1Q2X - P1Q1X*Q1Q2Y 	! P1Q1.NQ
	D2P = P2Q2Y*Q1Q2X - P2Q2X*Q1Q2Y		! P2Q2.NQ
C
C If vec P all one side of line Q then return
	IF (D1P.GT. DTOL.AND.D2P.GT. DTOL) GOTO 10
	IF (D1P.LT.-DTOL.AND.D2P.LT.-DTOL) GOTO 10
C
	D1Q = P1Q1Y*P1P2X - P1Q1X*P1P2Y		! P1Q1.NP
	D2Q = P2Q2Y*P1P2X - P2Q2X*P1P2Y		! P2Q2.NP
C
C If vec Q all one side of line P then return
	IF (D1Q.GT. DTOL.AND.D2Q.GT. DTOL) GOTO 10
	IF (D1Q.LT.-DTOL.AND.D2Q.LT.-DTOL) GOTO 10
C
C Vectors intersect, so calculate intersection point T = (X,Y) as
C solution to simultaneous equations	T = P1 + F*P1P2
C                                and	T = Q1 + G*Q1Q2
	F = D1P/DET
	X = P1X+F*P1P2X
	Y = P1Y+F*P1P2Y
C
	SEGINT = .TRUE.
10	END


