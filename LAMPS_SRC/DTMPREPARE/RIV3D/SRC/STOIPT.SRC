C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1986-09-26 13:53:58.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE STOIPT(INODE,IPNT_HEIGHT,DIST_FROM_NODE)
C
C	Copyright Laser-scan laboratories Ltd, Cambridge, England
C
***	MODULE STOIPT
***	IDENT  26SE86
C
C	Author	:J.M. Price Williams
C	Date	:20 JUNE 1986
C
C	descr'n	: The routine assigns a height to a nodes(INODE) ip store
C		  and ensures that the closest ip's to that node are stored
C		  for it's future height calculation
C		 
	IMPLICIT NONE
C
C	Argumts	:
C
	INTEGER 	INODE		!node number under consideration
	REAL		IPNT_HEIGHT	!height of ip under consideration
	REAL 		DIST_FROM_NODE	!distance of ip from node consid to ip
C
C	Paramet	:
C
***	PARAMETER/HERE:RIV3D/
C
C	Common	:
C
***	COMMON/HERE:RIV3D/
C
C	Local
C	  vars	:
C
	REAL		UP_IP_HGT	!height in upper ip store in node
	REAL		DOWN_IP_HGT	!  "       lower      "
	REAL		UP_TO_NODE      !dist to upper ip in store in node
	REAL		DOWN_TO_NODE    ! as above but to lower ip
C
C	assign values from common node store to local vars for clarity
C
	UP_IP_HGT    = NODE(5,INODE)
	DOWN_IP_HGT  = NODE(3,INODE)
	UP_TO_NODE   = NODE(6,INODE)
	DOWN_TO_NODE = NODE(4,INODE)
C
C	Check all poss combinations
C
	IF (UP_IP_HGT .EQ. -1) THEN		!no heigth stored for upper ip
	   UP_IP_HGT  = IPNT_HEIGHT		!so store one
	   UP_TO_NODE = DIST_FROM_NODE
C
	ELSEIF (DOWN_IP_HGT .EQ. -1 .AND.
     &		IPNT_HEIGHT .NE. UP_IP_HGT) THEN!no height for lower ip so store
	   DOWN_IP_HGT  = IPNT_HEIGHT		!one
	   DOWN_TO_NODE = DIST_FROM_NODE
C
	ELSEIF (UP_IP_HGT .EQ. IPNT_HEIGHT .AND.
     &	        UP_TO_NODE .GT. DIST_FROM_NODE) THEN
	   UP_TO_NODE = DIST_FROM_NODE		!heights same but closer so
C									store
	ELSEIF (DOWN_IP_HGT .EQ. IPNT_HEIGHT .AND.
     &		DOWN_TO_NODE .GT. DIST_FROM_NODE) THEN
	   DOWN_TO_NODE = DIST_FROM_NODE	!heights same but closer so 
C									store
	ENDIF
C
C assign the values in the up and down ip work variables back to the common
C node store so that any changes which have been registered will be stored
C
	NODE(5,INODE) = UP_IP_HGT    
	NODE(3,INODE) = DOWN_IP_HGT 
	NODE(6,INODE) = UP_TO_NODE
	NODE(4,INODE) = DOWN_TO_NODE 
C
999	RETURN
	END
