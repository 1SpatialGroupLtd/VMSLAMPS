C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1986-02-17 20:13:34.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE CHKMAP
C
***     IDENT   17FE86
***     MODULE  CHKMAP
C
C       Copyright : Laser-Scan Laboratories Ltd, Cambridge, England.
C       Created   : ACM					Feb 1984
C
	IMPLICIT        NONE
C
***	PARAMETER/HERE:RIV3D/
C
***     COMMON/HERE:RIV3D/
***	COMMON/LSL$CMNIFF:IFFHAN/	! contains LPOSR
***	COMMON/LSL$CMNVIO:EXPC/		! message output
C
C workspace
	INTEGER		I
	INTEGER*2	FTN
	INTEGER		COMLEN		! command line length
	INTEGER		IHGT		! integer height
	LOGICAL		GOT_STRING	! got complete contour string?
C
C functions
	INTEGER		TXTCML		! read a command line
	LOGICAL		RDFNAM		! read IFF filename
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
C	Finds all river/contour intersections
C
C	Reads and checks each contour in turn
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
C open contour IFF file
	STRLEN = 0			! no points in CON yet
10	CALL IFFOPN(1,CONFILE,0)
	IF (IERCD.NE.0) THEN
	  CFLEN = INDEX(CONFILE,' ')
	  IF (CFLEN.EQ.0) CFLEN = 80
	  CALL WRITEF('*** Can''t open IFF file %S',CONFILE(1:CFLEN))
20	  COMLEN = TXTCML('Contour filename> ')
	  IF (COMLEN.EQ.-10) GOTO 20	! do not quit
	  CALL BSLN
	  GOT_CONFILE = RDFNAM(CONFILE)	! read filename from TXTBUF
	  IF (.NOT.GOT_CONFILE) GOTO 20	! get another filename
	  GOTO 10			! try this filename
	END IF
C
C set state data to initial-state
	N_CONTOURS = 0			! zero contour count
	N_CONSEGS = 0			! zero contour seg count
	TOTPTS = 0			! zero total point count
	FEATURE_OPEN	= .FALSE.
C
C read and process each relevant IFF entry
30	CALL IFFNXT(IECODE,IELEN)	! find next IFF entry
C
	IF (IELEN.EQ.-1) THEN		! fatal error?
	  CALL WRITEF('*** Error reading contour file')
	  GOTO 20			! try with another filename
	END IF
C
	IF (IECODE.EQ.'NF') THEN
	  FEATURE_OPEN = .TRUE.		! change state
	  FSN = 0			! clear longword
	  CALL EIHRI(FSN,1,1)		! read feature sequence number
	  FTN = 0			! no FS entry seen yet
	ELSE IF (IECODE.EQ.'FS') THEN
	  CALL EIHRI(FTN,1,1)		! read FS number
	ELSE IF (IECODE.EQ.'AC') THEN	! read contour height
	  CALL EIHRI(ACN,1,1)		! read AC number
	  IF (ACN.EQ.2) THEN		! integer height?
	    CALL EIHRI(IHGT,1,2)
	    HEIGHT = IHGT
	  ELSE IF (ACN.EQ.3) THEN	! real height?
	    CALL EIHRR(HEIGHT,1,2)
	  END IF
	ELSE IF (IECODE.EQ.'ST') THEN
	  DO 32 I = 1,NCFC		! check for contour feature code
32	  IF (FTN.EQ.CFC(I)) GOTO 33
	  IF (NCFC.GT.0) GOTO 34
33	  CALL GETSTR(CONTOUR)		! append contour ST
34	  CONTINUE
	ELSE IF (IECODE.EQ.'EF') THEN
	  FEATURE_OPEN = .FALSE.	! change state
	ELSE IF (IECODE.EQ.'EJ') THEN
	  GOTO 40			! return
	END IF
C
	GOT_STRING = STRLEN.GT.0.AND..NOT.FEATURE_OPEN
	IF (GOT_STRING) THEN
	  CALL CHKCON			! check any completed contour
	  N_CONTOURS = N_CONTOURS+1	! count contours
	  IF (NOTBATCH) WRITE(*,FMT='(1H+,I7,'' '')')N_CONTOURS
	  N_CONSEGS = N_CONSEGS+STRLEN-1! count contour segs
	  STRLEN = 0
	END IF
	GOTO 30				! move on to next IFF entry
C
40	CALL IFFCLO(1)
	END
