C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1986-09-25 12:07:46.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL FUNCTION RDRANG(INT1,INT2)
C
***	MODULE	RDRANG
***	IDENT	25SE86
C
C	Copyright : Laser Scan Laboratories Limited, Cambridge, England
C	Author    : Andrew Morris (original author R.Daly)
C
C	Ripped off from [MCE.DTI]RDRANG.SRC	ACM	20-SEP-1984
C
C This function returns the next range pair from a list of
C numbers. Single values return identical upper/lower limits.
C Nul values return default range of -32768 to 32767.
C (eg. LAY 3,10-40,60 100 - 200 is returned as  3,3 / 10,40 /
C 60,60 / 100,200 / -32768,32767).
C ':' is allowed in place of '-' in ranges.
C Spaces and TABs may be used as delimiters instead of commas.
C Function returns TRUE if an error occurs.
C
	IMPLICIT NONE
C
C parameters out
	INTEGER	 INT1,INT2		! integer range
C
***	COMMON/LSL$CMNVIO:TXTC/
C
C Workspace
	INTEGER	PTR			! temporary copy of DCPTR.
	BYTE	CHAR			! last character read.
C
C Functions
	LOGICAL	RDCHS,RDCH,RDLONG
C
C Initialise
	RDRANG=.FALSE.
C
C See what kind of word comes next
10	IF (RDCHS(CHAR)) GOTO 30			! end of line
	IF (CHAR.GE.'0'.AND.CHAR.LE.'9') GOTO 40	! integer
	IF (CHAR.GE.'A'.AND.CHAR.LE.'Z') GOTO 20	! capital letter
	IF (CHAR.GE.'a'.AND.CHAR.LE.'z') GOTO 20	! lowercase lett
	IF (CHAR.EQ.'/') GOTO 20			! switch marker
	IF (CHAR.EQ.':') GOTO 10			! ignore colon
	GOTO 110					! unexpected cha
20	CALL BSCH
30	INT1 = 1
	INT2 = 3
	GOTO 140
C
C Read in an integer (either single value or lower limit of a range).
40	CALL BSCH
	IF (RDLONG(INT1)) GOTO 100
	INT2=INT1
C
C Read the delimiter.
	CALL DCPSAV(PTR)
	IF (RDCHS(CHAR)) GOTO 140
	IF (CHAR.GE.'0'.AND.CHAR.LE.'9') GOTO 50
	IF (CHAR.EQ.',') GOTO 140
	IF (CHAR.EQ.'-'.OR.CHAR.EQ.':') GOTO 60
50	CALL BSCH
	GOTO 140
C
C Read in upper limit of a range.
60	IF (RDCHS(CHAR)) GOTO 120
	IF (CHAR.GE.'0'.AND.CHAR.LE.'9') GOTO 70
	CALL DCPSET(PTR)
	GOTO 140
70	CALL BSCH
	IF (RDLONG(INT2)) GOTO 100
	IF (INT1.GT.INT2) GOTO 90
C
C Read the delimiter following a range.
80	IF (RDCHS(CHAR)) GOTO 140
	IF (CHAR.EQ.',') GOTO 80
	CALL BSCH
	GOTO 140
C
C Errors.
90	CALL WRITEF('*** WARNING - Illegal range (%N-%N)',INT1,INT2)
	GOTO 130
100	CALL WRITEF('*** WARNING - Error reading integer value')
	GOTO 130
110	CALL WRITEF('*** WARNING - Unexpected "%C" character found',CHAR)
	GOTO 130
120	CALL WRITEF('*** WARNING - Unexpected end of line')
C
130	RDRANG=.TRUE.
140	RETURN
C
	END
