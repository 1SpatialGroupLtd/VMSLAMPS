C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1985-12-16 13:08:26.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL FUNCTION DIVBOX(BOX,BOXDIM,I_PTH_STA,I_PTH_FIN,P,PDIM)
C
***     IDENT   28OC85
***     MODULE  DIVBOX
C
C       Copyright : Laser-Scan Laboratories Ltd, Cambridge, England.
C       Created   : ACM					Feb 1984
C
	IMPLICIT        NONE
C
C parameters in
	INTEGER		BOXDIM			! BOX dimension
	INTEGER		BOX(2,BOXDIM,4)		! tree for extension
	INTEGER		I_PTH_STA,I_PTH_FIN	! I_PTH DO range
	INTEGER		PDIM			! dimension of P
	REAL		P(2,PDIM)		! array of path points
C
***	COMMON/HERE:QUADTREE/
C
C workspace
	INTEGER         I_PTH           ! path BOX index
	INTEGER		IP_STA,IP_FIN	! sec start and end pt P indices
	INTEGER         IQ		! quadrant index
	INTEGER		NSECS(4)	! section count
	INTEGER		NSEGS(4)	! segment count
	REAL            X1,X2,X3,Y1,Y2,Y3	! X and Y box limits
C
C functions
	LOGICAL		DIVSEC		! divides path section into four
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
C	Divides all path sections (points taken from point array P)
C	in box NBOX at depth BOXDEP (quadCtree node) between the
C	quarters of this box which they intersect.
C
C	Boxes are numbered as :     2 ! 4
C                                 ----!----
C                                   1 ! 3
C
C	Function result is true iff function is successful
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
C set box limits
	X1 = LL(1,BOXDEP)
	X2 = X1+BOXWID(1,BOXDEP+1)
	X3 = X2+BOXWID(1,BOXDEP+1)
C
	Y1 = LL(2,BOXDEP)
	Y2 = Y1+BOXWID(2,BOXDEP+1)
	Y3 = Y2+BOXWID(2,BOXDEP+1)
C
C zero section and segment counts
	DO 10 IQ = 1,4
	USED(IQ) = USED(IQ)+3
	NSECS(IQ) = 0
10	NSEGS(IQ) = 0
C
C for each path section
	DO 20 I_PTH = I_PTH_STA,I_PTH_FIN
C
	IP_STA = BOX(1,I_PTH,NBOX)	! P index of start pt
	IP_FIN = BOX(2,I_PTH,NBOX)	! P index of end pt
C
C divide section between 4 quarter boxes
	DIVBOX = DIVSEC(BOX,BOXDIM,X1,X2,X3,Y1,Y2,Y3,
     +	                       NSECS,NSEGS,P,PDIM,IP_STA,IP_FIN)
	IF (.NOT.DIVBOX) GOTO 40	! return
20	CONTINUE        		! loop for next path section
C
C set section and segment counts for each new quarter box
	DO 30 IQ = 1,4
	BOX(1,USED(IQ)-2,IQ) = NSECS(IQ)
	BOX(2,USED(IQ)-2,IQ) = NSEGS(IQ)
30	USED(IQ) = USED(IQ)+NSECS(IQ)
C
40	END
