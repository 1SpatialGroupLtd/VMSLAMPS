C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1988-02-18 12:08:14.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL FUNCTION ZLIMITS_CMD()
C
***	MODULE	ZLIMITS_CMD
***	IDENT	18FE88
C
C	Copyright (C), Laser-Scan Laboratories Ltd., Cambridge, England
C
C Created by 					ALB 17-Feb-1988
C
C Function to get lower and upper height limits
C
C Function returns .TRUE. if all is well, otherwise .FALSE.
C
	IMPLICIT NONE
C
C Parameters :
	INCLUDE 'LSL$DTMCREATESYS:MESPAR.PAR'
C
C Common:
	INCLUDE	'LSL$CMNLSL:CMDCOM.CMN'		! LSLLIB common
	INCLUDE	'LSL$CMNLSL:EXPC.CMN'
	INCLUDE	'LSL$CMNLSL:TXTC.CMN'
	INCLUDE 'LSL$CMNITCHECK:CONTROL.CMN'
	INCLUDE 'LSL$CMNITCHECK:SHEET.CMN'
C
C W/s
C
C Functions
C
C ......................................................................
C
	ZLIMITS_CMD=.TRUE.		! assume success
C
C ......................................................................
C
C check that two heights have been input
C
	IF(CMDRCT.NE.2) THEN
	   CALL WRITEF('%S Specifying command ZLIMITS',ERROR)
	   CALL WRITEF('Command requires lower and upper height '//
     &		'limits')
	   ZLIMITS_CMD = .FALSE.
	   GOTO 999
	ENDIF
C
C check that lower is not the same as upper
C
	IF(REALAR(1).EQ.REALAR(2)) THEN
	   CALL WRITEF('%S Specifying command ZLIMITS',ERROR)
	   CALL WRITEF('lower height = upper height')
	   ZLIMITS_CMD = .FALSE.
	   GOTO 999
	ENDIF
C
C check that lower is not greater than upper
C
	IF(REALAR(1).GT.REALAR(2)) THEN
	   CALL WRITEF('%S Specifying command ZLIMITS',ERROR)
	   CALL WRITEF('lower height > upper height')
	   ZLIMITS_CMD = .FALSE.
	   GOTO 999
	ENDIF
	MIN_CONTOUR = REALAR(1)
	MAX_CONTOUR = REALAR(2)
	HAD_ZLIMITS = .TRUE.			! zlimits done (remember)
C
999	CONTINUE
C
	RETURN
	END
