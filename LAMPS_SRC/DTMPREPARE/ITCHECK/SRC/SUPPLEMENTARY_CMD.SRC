C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1988-03-14 13:28:04.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL FUNCTION SUPPLEMENTARY_CMD()
C
***	MODULE	SUPPLEMENTARY_CMD
***	IDENT	14MR88
C
C	Copyright (C), Laser-Scan Laboratories Ltd., Cambridge, England
C
C Created by 					ALB 17-Feb-1988
C
C Function to save supplementary contour interval in SUPPLEMENTARY_INT 
C after validating the command parameter
C
C Function returns .TRUE. if all is well, otherwise .FALSE.
C
	IMPLICIT NONE
C
C Parameters :
	INCLUDE 'LSL$DTMCREATESYS:MESPAR.PAR'
C
C Common:
	INCLUDE	'LSL$CMNLSL:CMDCOM.CMN'		! LSLLIB common
	INCLUDE	'LSL$CMNLSL:EXPC.CMN'
	INCLUDE	'LSL$CMNLSL:TXTC.CMN'
	INCLUDE 'LSL$CMNITCHECK:CONTROL.CMN'
	INCLUDE 'LSL$CMNITCHECK:SHEET.CMN'
C
C **********************************************************************
C
	SUPPLEMENTARY_CMD=.TRUE.		! assume success
C
C **********************************************************************
C
C check that command parameter before accepting
C
	IF(CMDRCT.EQ.0) THEN			! no parameter with command
	   CALL WRITEF('%S Specifying command SUPPLEMENTARY_INTERVAL'
     &		,ERROR)  
	   CALL WRITEF('Command requires supplementary '//
     &		'contour interval')
	   SUPPLEMENTARY_CMD = .FALSE.
	   GOTO 999
	ENDIF
C
	IF(REALAR(1).LE.0.0) THEN		! command parameter <= 0.0
	   CALL WRITEF('%S Specifying command SUPPLEMENTARY_INTERVAL'
     &		,ERROR)
	   CALL WRITEF('Supplied value %F0.3 less than or equal 0.0',
     &		REALAR(1))
	   SUPPLEMENTARY_CMD = .FALSE.
	   GOTO 999
	ENDIF
C
	IF(HAD_CONTOUR) THEN
	   IF(REALAR(1).GT.CONTOUR_INT) THEN	! supple_int > cont_int
	      CALL WRITEF('%S Specifying command SUPPLEMENTARY_INTERVAL',
     &		ERROR)
	      CALL WRITEF('Value %F0.3 is greater than previously '//
     &		'specified CONTOUR_INTERVAL %F0.3',
     &		REALAR(1),CONTOUR_INT)
	      SUPPLEMENTARY_CMD = .FALSE.
	      GOTO 999
	   ENDIF
	ENDIF
C
	IF(HAD_INDEX) THEN
	   IF(REALAR(1).GE.INDEX_INT) THEN	! supple_int >= index_int
	      CALL WRITEF('%S Specifying command SUPPLEMENTARY_INTERVAL',
     &		ERROR)
	      CALL WRITEF('Value %F0.3 is greater or equal to '//
     &		'previously specified INDEX_INTERVAL %F0.3',
     &		REALAR(1),INDEX_INT)
	      SUPPLEMENTARY_CMD = .FALSE.
	      GOTO 999
	   ENDIF
	ENDIF
C
C save supplementary contour interval
C
	SUPPLE_INT = REALAR(1)
	HAD_SUPPLE = .TRUE.		! supplementary contour done (remember)
C
999	CONTINUE
C
	RETURN
	END
