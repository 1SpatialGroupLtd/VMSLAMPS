	LOGICAL FUNCTION LIST_CMD()
C
***	MODULE	LIST_CMD
***	IDENT	17MR88
C
C	Copyright (C), Laser-Scan Ltd., Cambridge, England
C 	Created by					ALB 23-Feb-1988
C
CMOD	Use ITCHECK.LIS instead of ITCHECK.LST		 JB 07-Jan-1993
C
C	Function to get list tabulated error file-spec from LIST command. 
C 	If argument is missing the user is prompted.  
C
C	Function returns .TRUE. if all is well, otherwise .FALSE.
C
	IMPLICIT NONE
C
C Parameters :
	INCLUDE 'LSL$DTMCREATESYS:MESPAR.PAR'
C
C Common:
	INCLUDE	'LSL$CMNLSL:TXTC.CMN'
	INCLUDE 'LSL$CMNITCHECK:CONTROL.CMN'
C
C W/s
	BYTE		CH		! a character
	LOGICAL		BLANK		! blank line?
	LOGICAL		OK		! for error returns
	LOGICAL		IERR		! for error returns
	INTEGER		CUR_IFF		! current IFF file number being opened
	INTEGER		LUN		! LUN for input IFF file 
C
C Functions
	LOGICAL		GETFILNAM ! get file-spec
	LOGICAL		RDCHS	! read char. skipping spaces
	LOGICAL		TTRSTR	! read from TT:
C
C ......................................................................
C
	LIST_CMD=.TRUE.		! assume success
C
C Look for filename, taking appropriate action if none found
C
	BLANK=RDCHS(CH)			! empty line ...
	IF (BLANK.OR.CH.EQ.'!') THEN	! or comment?
C
C Display warning/error for no filename present
C
	   IF (TTIN) THEN
	      CALL WRITEF('%S You must specify a file-spec argument'//
     &		' to the LIST command',WARNING)
	   ELSE
	      CALL WRITEF('%S You must specify a file-spec argument'//
     &		'to the LIST command',ERROR)
	   ENDIF	   
C
C If terminal input, prompt for filename
C
	   IF (TTIN) THEN
	      CALL WRITEF('For example LIST ERROR.LIS')
	      OK=TTRSTR(,,'Read from LIST file? ',IERR)
	      IF (OK) THEN
	         CALL BSLN			! reset decode ptr
	      ELSE
	         CALL LSL_PUTMSG(OK)		! problem with input
	         CALL LSL_ADDMSG(IERR)
	         LIST_CMD=.FALSE.
	         GOTO 999
	      ENDIF
	      IF (TXTPTR.EQ.0) THEN
	   	 LIST_CMD=.FALSE.
		 GOTO 999		! empty line
	      ENDIF
	   ELSE
	      GOTO 999  ! someone got their indirect file wrong !!
	   ENDIF
	ENDIF
C
C ......................................................................
C
	CALL BSCH				! move back one chr
	OK=  GETFILNAM(	LIST_FNAME,		! filename
     &			LIST_LEN,		! filename length
     &			'ITCHECK.LIS;0',	! default
     &			.TRUE.,			! allow version numbers
     &			%REF('!') )		! termination character
C
C Deal with any error in interpreting file-spec
C
	IF (.NOT.OK) THEN
	   CALL WRITEF('%S Unable to interpret input file-spec',ERROR)
	   CALL LSL_PUTMSG(OK)
	   LIST_CMD=.FALSE.
	   GOTO 999
	ENDIF
	HAD_LIST = .TRUE.	! got list error file (remember)
999	CONTINUE
C
	RETURN
	END
C
