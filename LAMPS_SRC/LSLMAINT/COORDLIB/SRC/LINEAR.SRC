C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1986-11-14 17:19:14.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
        SUBROUTINE LINEAR(XY)
C
***     IDENT   14NO86
***     MODULE  LINEAR
C
C	Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C	Created 				RJH	22-Oct-1986
C
C	LSL Linear Interpolation - Simple interpolation
C
C Description
C
C	For compatability with the other interpolation routines, array 
C	XY holds 6 master points, the 3rd and 4th being the span we are 
C	interested in. For linear interpolation, the others are ignored.
C
C	The 1st element of TOL in INTCOM is the point separation, and 
C	the other two are redundant. If the point separation is 0.0, the
C	default value is half the segment length.
C
C	The start point of the line is not output, but the end point is.
C
        IMPLICIT NONE
C
C Arguments
C
	REAL 		XY(2,6)		! XY holds the master points
C
C Common Blocks
C
***	COMMON/CMN:INTCOM/		! control variables
C
C Local variables
C
	INTEGER*4	NSEG		! number of segments
	INTEGER*4	I		! counter
	REAL*4		DX		! difference in X for segment
	REAL*4		DY		! difference in Y for segment
	REAL*4		R		! length of segment
	REAL*4		INCX		! X increment
	REAL*4		INCY		! Y increment
	REAL*4		THIS_PT(2)	! current new point
C
C Calculate the differences in X and Y and the segment length
C
	DX = XY(1,4) - XY(1,3)
	DY = XY(2,4) - XY(2,3)
	R = SQRT(DX**2 + DY**2)
C
C Find out how many segments are required
C
	IF (TOL(1) .GT. 0.0) THEN
	   NSEG = INT(R/TOL(1))
	ELSE
	   NSEG = 2
	ENDIF
C
C If the existing points are more than the separation tolerance apart, 
C or the default action is to be done, first work out the increments 
C in X and Y
C
	IF (NSEG .GT. 0) THEN
	   INCX = DX/NSEG
	   INCY = DY/NSEG
C
C Set the start point
C
	   THIS_PT(1) = XY(1,3)
	   THIS_PT(2) = XY(2,3)
C
C Evaluate and output the new points
C
	   DO 100 I=1,NSEG-1
	      THIS_PT(1) = THIS_PT(1) + INCX	
	      THIS_PT(2) = THIS_PT(2) + INCY
	      CALL ADDPTS(1,THIS_PT,ONSCR)
100	   CONTINUE
	ENDIF
C
C Now output the last point (the only one if it is closer than the 
C given point separation
C
	CALL ADDPTS(1,XY(1,4),ONSCR)
C
C Return
C
	RETURN
        END
