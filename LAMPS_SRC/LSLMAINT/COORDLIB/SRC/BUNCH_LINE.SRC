C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1986-11-17 14:22:02.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
        SUBROUTINE BUNCH_LINE(NUMPTS,THIS_LINE)

***     IDENT   17NO86
***     MODULE  BUNCH_LINE
C
C	Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C	Created 				RJH	27-Oct-1986
C
C	LSL BUNCH Filter - Filter a whole line
C
C Description
C
C	This is the new modular version of BUNCH
C
C	Routines called	:	BUNCH_POINT, BUNCH, BUNCH_FILTER, 
C				BUNCH_FLUSH, ADDPTS
C	Other routines	:	BUNCH_INIT
C	Parameter Files	:	PARAMS
C	Common Blocks	:	BLG, MPAUX, MPEP
C
C	Prior to filtering any lines, BUNCH_INIT should be called to 
C	initialise the common blocks. It should also be called if any of
C	the tolerances change.
C
C	This routine applies the bunch filter to the whole line, 
C	dealing with each point in turn. Note that if the line is a 
C	closed loop, the first and last points will probably not 
C	coincide after filtering. In such cases, the first point should 
C	then be dragged onto the last.
C
C	Users are required to supply the subroutine ADDPTS with the 
C	following specification :-
C
C		SUBROUTINE ADDPTS(NPTS,XY,DRAW)
C
C		INTEGER*4	NPTS		! number of points
C		REAL		XY(2,NPTS)	! line string
C		LOGICAL*1	DRAW		! draw line on screen ?
C
C	It is referenced by
C
C		CALL ADDPTS(NPTS,XY,DRAW)
C
C	and allows the points either to be buffered up for subsequent 
C	output or passed to a graphics library for display on a screen.
C
C	Thus it is possible to start with a complete line and simply 
C	add the filtered points to an output buffer as in IFILTER. 
C	Alternatively, as in LITES2, the original line could be read in 
C	section by section and the filtered points copied to the 
C	output item using the normal flushing mechanism. 
C
C	Note that display on the screen is not relevant to filtering, 
C	so the last argument to ADDPTS will always be false.
C
        IMPLICIT NONE
C
C Parameter Files
C
***	PARAMETER/CMN:PARAMS/		! parameters for BUNCH
C
C Arguments
C
	INTEGER*4	NUMPTS			! number of points
	REAL*4		THIS_LINE(2,NUMPTS)	! the line string
C
C Local variables
C
	INTEGER*4	I		! counter
C
C Process each point in the line up to the last but one
C
	DO 100 I=1,NUMPTS-1
	   CALL BUNCH_POINT(THIS_LINE(X,I),THIS_LINE(Y,I),0)
100	CONTINUE
C
C Do the last point
C
	CALL BUNCH_POINT(THIS_LINE(X,NUMPTS),THIS_LINE(Y,NUMPTS),1)
C
C Return
C
	RETURN
        END
