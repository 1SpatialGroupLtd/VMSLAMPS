	SUBROUTINE EXTRPL(START,XY)
C
***	MODULE	EXTRPL
***	IDENT	23FE89
C
C Copyright Laser Scan Laboratories Ltd, Cambridge, England.
C Author Clarke Brunt
C
C Copied from LITES2 with no changes 		RJH	22-Oct-1986
CMOD Avoid division by 0			RWR	23-Feb-1989
C
C To extrapolate two extra points from three given ones.
C Used by INTRPL to get points to pass to e.g. AKIMA
C
C If START is true, then coordinates 1 and 2 are extrapolated
C from 3,4, and 5.
C If false, coordinates 4 and 5 are extrapolated from 1,2, and 3.
C
C Algorithm: (for START true case)
C Point 2 is the mirror image of point 5 in the line which
C perpendicularly bisects the line joining points 3 and 4.
C Point 1 is the mirror image of point 4 in the line which
C perpendicularly bisects the line joining points 2 and 3.
C 
	IMPLICIT NONE
C
C arguments
	LOGICAL*1 START		! extrapolate start, or end?
	REAL XY(2,5)		! coordinates
C
C W/s
	REAL	R
	REAL	X1,Y1,X2,Y2,X3,Y3,X4,Y4,X5,Y5
	REAL	X23,Y23,X34,Y34,X45,Y45
	REAL	TEMP
	EQUIVALENCE (X23,X45),(Y23,Y45)
C
C get points a consistent way round
	X3 = XY(1,3)
	Y3 = XY(2,3)
	IF (START) THEN
	   X4 = XY(1,4)
	   Y4 = XY(2,4)
	   X5 = XY(1,5)
	   Y5 = XY(2,5)
	ELSE
	   X4 = XY(1,2)
	   Y4 = XY(2,2)
	   X5 = XY(1,1)
	   Y5 = XY(2,1)
	ENDIF
C
C calculate differences 3->4 and 4->5
	X34 = X4-X3
	Y34 = Y4-Y3
	X45 = X5-X4
	Y45 = Y5-Y4
C
C R is amount of 3->4 vector to be subtracted from point 5
C to give point 2
	TEMP = (X34**2 + Y34**2)
	IF (TEMP.NE.0.0) THEN
	   R = 1.0 + 2.0*(X34*X45 + Y34*Y45)/TEMP
	ELSE
	   R = 1.0
	ENDIF
C
C extrapolate point 2
	X2 = X5 - X34*R
	Y2 = Y5 - Y34*R
C
C calculate difference 2->3 (nb equivalenced on 4->5)
	X23 = X3-X2
	Y23 = Y3-Y2
	TEMP = (X23**2 + Y23**2)
C
	IF (TEMP.NE.0.0) THEN
	   R = 1.0 + 2.0*(X34*X23 + Y34*Y23)/TEMP
	ELSE
	   R = 1.0
	ENDIF
C
C extrapolate point 1
	X1 = X4 - X23*R
	Y1 = Y4 - Y23*R
C
C Return the extrapolated points to the correct place
	IF (START) THEN
	   XY(1,1) = X1
	   XY(2,1) = Y1
	   XY(1,2) = X2
	   XY(2,2) = Y2
	ELSE
	   XY(1,5) = X1
	   XY(2,5) = Y1
	   XY(1,4) = X2
	   XY(2,4) = Y2
	ENDIF
	RETURN
C
	END
