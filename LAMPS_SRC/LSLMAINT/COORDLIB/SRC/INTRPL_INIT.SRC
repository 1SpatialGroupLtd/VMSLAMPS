C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1986-11-14 18:18:54.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
        SUBROUTINE INTRPL_INIT(TOLER,SFACTOR,DRAWING)
C
***     IDENT   14NO86
***     MODULE  INTRPL_INIT
C
C	Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C	Created 				RJH	29-Oct-1986
C
C	LSL Interpolation - Initialisation
C
C Description
C
C 	TOLER(1) is the constant separation for curve and linear 
C	interpolation
C	TOLER(2) is the arc to chord distance for curve interpolation
C	TOLER(3) is the angular deviation for curve interpolation
C
C	SFACTOR is a scale factor which should be 1.0 if dealing with 
C	IFf units
C
C	DRAWING is true if curve is being drawn on screen 
C
C	Note that ENDCON is set by INTRPL
C
        IMPLICIT NONE
C
C Arguments
C
	REAL*4		TOLER(3)	! tolerances from the user
	REAL*4		SFACTOR		! scale factor
	LOGICAL*1	DRAWING		! drawing on screen ?
C
C Common Blocks
C
***	COMMON/CMN:INTCOM/		! control variables
C
C Functions called
C
	REAL*4		CURTOL		! 'arc to chord' coefficient
C
C Set the tolereances
C
	TOL(1) = TOLER(1)*SFACTOR
	TOL(2) = CURTOL(TOLER(2),SFACTOR)
	TOL(3) = TOLER(3)
C
C ... and the display flag
C
	DISP = DRAWING
C
C Return
C
	RETURN
        END
