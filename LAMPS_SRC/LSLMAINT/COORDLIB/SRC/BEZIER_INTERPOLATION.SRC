	SUBROUTINE BEZIER_INTERPOLATION
     &             (NCOORDS_IN,XY_IN,NCOORDS_OUT,XY_OUT,
     &              LOOPED,DO_AVERAGE,BEZIER_TOLERANCES,ERROR)
C
***	IDENT	17AU89
***	MODULE	BEZIER_INTERPOLATION
C
C	Copyright : Laser-Scan Laboratories Ltd., Cambridge, England
C	Created   : DRC				  04 September 1987
C	Function  : To call the functions required to insert
C	            guide points etc. for Bezier interpolation, and
C		    to call the Bezier smoothing routines themselves.
C		    Based on the SMOOTH routine originally used by
C		    VECTORISE.
C		    Note that ideally these routines should be
C		    placed in INTRPL but unfortunately they require less
C		    than straightforward modification.
C
C-----------------------------------------------------------------------
	IMPLICIT NONE
C
***	PARAMETER/LSL$CMNCOORD:MAXPTS/	! max. no. of points in line
C Arguments:
	INTEGER*4	NCOORDS_IN	! No of pts in XY_IN
	REAL            XY_IN(2,MAXPTS) ! Coords to be interpolated 
	INTEGER*4	NCOORDS_OUT	! No of pts in XY_OUT
	REAL		XY_OUT(2,MAXPTS)! Interpolated coords.
	LOGICAL 	LOOPED		! .T. if feature is closed loop
	LOGICAL		DO_AVERAGE	! interpolate extra points
	REAL		BEZIER_TOLERANCES(2) !smoothing tolerances
	INTEGER*4	ERROR		! error status
C
	REAL		SMOOTH_TOL	! lateral deviation tolerance
	REAL		HUG		! corner hug tolerances
C
C workspace
	INTEGER		I,J,K		! misc integers
	REAL		LEN
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
C	Creates smooth curve XY_OUT using points in XY_IN
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
C if XY_IN has 2 or less coordinate points, transfer
C the points to XY_OUT and return.
C
	IF (NCOORDS_IN.EQ.1) THEN
	  XY_OUT(1,1) = XY_IN(1,1)
	  XY_OUT(2,1) = XY_IN(2,1)	  
	  NCOORDS_OUT=1
	  GOTO 999
	ENDIF
C
	IF (NCOORDS_IN.EQ.2) THEN
	  XY_OUT(1,1) = XY_IN(1,1)
	  XY_OUT(2,1) = XY_IN(2,1)	  
	  XY_OUT(1,2) = XY_IN(1,2)
	  XY_OUT(2,2) = XY_IN(2,2)	  
	  NCOORDS_OUT=2
	  GOTO 999
	ENDIF
C
	SMOOTH_TOL=BEZIER_TOLERANCES(1)
	HUG=BEZIER_TOLERANCES(2)
C
C
	IF(.NOT.DO_AVERAGE)GOTO 23
C
C if link has length < 9 then use original pts as guide pts
	LEN = 0
	DO 20 I = 2,NCOORDS_IN
20	LEN = LEN+ABS(XY_IN(1,I)-XY_IN(1,I-1))
     &        +ABS(XY_IN(2,I)-XY_IN(2,I-1))
	IF (LEN.LE.8) GOTO 30
C
C remove consecutive coincident pts & interpolate segments longer than 1
	CALL SPCPTS(XY_IN,NCOORDS_IN,XY_OUT,NCOORDS_OUT,LOOPED)
	IF (NCOORDS_OUT.LT.3)GOTO 999
C
C obtain guide pts using pts in XY_OUT
	CALL AVPTS(XY_OUT,NCOORDS_OUT,XY_IN,NCOORDS_IN,LOOPED)
C
C thin points now in XY_IN
23	CALL THIN(XY_IN,NCOORDS_IN,XY_OUT,NCOORDS_OUT,
     &            LOOPED,SMOOTH_TOL)
	IF (NCOORDS_OUT.EQ.2)GOTO 999
C
C transfer points in XY_OUT to XY_IN ready for interpolation
	DO 25 I=1,NCOORDS_OUT
	   XY_IN(1,I)=XY_OUT(1,I)
	   XY_IN(2,I)=XY_OUT(2,I)
25	CONTINUE
	NCOORDS_IN=NCOORDS_OUT
C
C interpolate guide pts
30	CALL BEZIER(XY_IN,NCOORDS_IN,XY_OUT,NCOORDS_OUT,
     &              SMOOTH_TOL,HUG,LOOPED,ERROR)
C
C
999	RETURN
C
	END
