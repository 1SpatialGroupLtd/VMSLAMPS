C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1989-08-17 15:13:12.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL*4 FUNCTION PRARPTBX(
     &		PROCESS_POINTS,PT,MAX_PTS,
     &		LINE_FC,N_LINES,SEC,MAX_SECS,
     &		CHECK,MAX_FCS,CHECK_FCS,SELF_CHECK)

***	IDENT	17AU89
***	MODULE	PRARPTBX

C	Copyright : Laser-Scan Laboratories Ltd., Cambridge, England
C	Created   : ACM					Mar 1986

	IMPLICIT NONE

***	COMMON/CMN:QUADCMN/

C Parameters
	INCLUDE	'($SSDEF)'


C Data in
	LOGICAL*4	PROCESS_POINTS	! subroutine to process pt pairs
	INTEGER*4	MAX_PTS		! PT dimension
	INTEGER*4	N_LINES		! LINE dimension
	INTEGER*4	MAX_SECS	! SEC dimension
	REAL*4		PT(2,MAX_PTS)	! point array PT
	INTEGER*4	MAX_FCS		! CHECK dimension
	INTEGER*2	LINE_FC(N_LINES)! FC for each line
	INTEGER*4	SEC(3,MAX_SECS,4)
C			box section PT sec start index, PT sec end
C			index and line index, in box NBOX
	LOGICAL*1	CHECK(MAX_FCS,MAX_FCS)	! FC pairs to be checked
	LOGICAL*4	CHECK_FCS	! use FC-pair cehck?
	LOGICAL*4	SELF_CHECK	! check lines against themselvs?

C Workspace
	INTEGER*4	IPT,JPT		! PT index in line ILIN & JLIN
	INTEGER*4	PRVIPT,PRVJPT	! previous PT indices
	INTEGER*4	IPTSTA,IPTFIN	! sec pt start/fin PT indices
	INTEGER*4	JPTSTA,JPTFIN	! same
	INTEGER*4	ISEC,JSEC	! SEC indices
	INTEGER*4	ISECSTA,ISECFIN	! start and fin SEC INDICES
	INTEGER*4	JSECSTA,JSECFIN	! same
	INTEGER*4	ILIN,JLIN	! line indices
	INTEGER*4	IFC,JFC		! line FC indices
	REAL*4		DX,DY		! vec betw pts

CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
C	Process al points in current contiguous-array point
C	quad-tree box
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC

	PRARPTBX = SS$_NORMAL

	ISECSTA = SECSTA(NBOX,DEP)
	ISECFIN = ISECSTA+NSECS(NBOX,DEP)-1

	DO 40 ISEC = ISECSTA,ISECFIN		! for each sec in box do
	  IPTSTA = SEC(SEC_STA,ISEC,NBOX)	! get first pt index
	  IPTFIN = SEC(SEC_FIN,ISEC,NBOX)	! get last pt index
	  ILIN = SEC(SEC_LIN,ISEC,NBOX)		! get LINE index
	  IFC = LINE_FC(ILIN)			! get FC index for line

	  IF (SELF_CHECK) THEN
	    JSECSTA = ISEC
	  ELSE
	    JSECSTA = ISEC+1
	  END IF

	  DO 30 IPT = IPTSTA,IPTFIN
	    DO 20 JSEC = JSECSTA,ISECFIN	! for each sec do
	      JLIN = SEC(SEC_LIN,JSEC,NBOX)
	      IF (ILIN.EQ.JLIN.AND..NOT.SELF_CHECK) GOTO 20
	      JFC = LINE_FC(JLIN)
	      IF (CHECK_FCS.AND..NOT.CHECK(IFC,JFC)) GOTO 20

	      IF (ISEC.EQ.JSEC) THEN
	        JPTSTA = IPT+1			! get first pt index
	      ELSE
	        JPTSTA = SEC(SEC_STA,JSEC,NBOX)
	      END IF

	      JPTFIN = SEC(SEC_FIN,JSEC,NBOX)	! get last pt index

	      DO 10 JPT = JPTSTA,JPTFIN
	        DX = PT(1,IPT)-PT(1,JPT)
	        DY = PT(2,IPT)-PT(2,JPT)
	        IF (DX**2+DY**2.GT.TOLSQ) GOTO 10
	        PRARPTBX
     &	        = PROCESS_POINTS(ILIN,JLIN,IPT,JPT,PRVIPT,PRVJPT)
	        IF (.NOT.PRARPTBX) GOTO 50	! return
10	      CONTINUE

20	    CONTINUE
30	  CONTINUE
40	CONTINUE

50	RETURN
	END
