	SUBROUTINE AKIMA3D(XY,ZZ)
C
***	MODULE	AKIMA3D
***	IDENT	08FE89
C
C Copyright Laser Scan Laboratories Ltd, Cambridge, England.
C Development of AKIMA routine, by R. W. Russell	8-Feb-1989
C
C AKIMA interpolation routine - does linear interpolation of heights
C between master points
C
	IMPLICIT NONE
C
C arguments
	REAL 	XY(2,6)		! XY holds the master points
	INTEGER	ZZ(6)		! and Z values (as integers, so that
				! they can be assigned and compared with
				! IFF_ABSENT)
C
	INCLUDE 'LSL$CMNIFF:CB.STR'
***	COMMON/CMN:INTCOM/
C
C functions
	REAL	INCSIZ		! calculates increment size
C
C W/s
	REAL LENGTH		! length of segment
	REAL INC		! length of interpolated segment
	INTEGER INTERP		! number of points to be generated
C
	INTEGER I,J
	REAL B1,B2,B3,B4,P0,P1,P2,P3
	REAL X2,X3,X4,X5,Y2,Y3,Y4,Y5
	REAL Q0,Q1,Q2,Q3,A1,A2,A3,A4,T2,W2,W3,DZ,SW,R,Z
	REAL COS2,COS3,SIN2,SIN3
	REAL U,V,UV(2)		! output point
	REAL DH,H
	INTEGER DHI,HI
C
	EQUIVALENCE (U,UV(1)),(V,UV(2))
	EQUIVALENCE (X2,P0),(Y2,Q0),(T2,Q1)
	EQUIVALENCE (W2,Q2),(W3,Q3),(A1,P2),(B1,P3)
	EQUIVALENCE (A2,DZ),(SW,R,Z)
	EQUIVALENCE (DH,DHI),(H,HI)
C
C Evaluate number of points to interpolate
C
C If necessary we get radius of curvature at point 3 using GRAD (which
C was really invented for McConalogue method)
	IF (TOL(2).NE.0.0.OR.TOL(3).NE.0.0) THEN
	   CALL GRAD(XY(1,2),2,SIN2,COS2,R)
	ELSE
	   R = 0.0			! dummy value
	ENDIF
	INC = INCSIZ(TOL,R)
C
	LENGTH=SQRT((XY(1,4)-XY(1,3))**2+(XY(2,4)-XY(2,3))**2)
	INTERP = INT(LENGTH/INC)	! number of points
	IF (INTERP.EQ.0) GOTO 80	! is straight line adequate?
C
C calculate Z increments
	HI = ZZ(3)		! integer assignments
	DHI = ZZ(4)
C
C if either height is not defined, then use other height with an
C increment of 0.0
	IF (HI.NE.IFF_ABSENT.AND.DHI.NE.IFF_ABSENT) THEN
	   DH = (DH - H)/INTERP
	ELSEIF (HI.EQ.IFF_ABSENT) THEN
	   H = DH
	   DH = 0.0
	ELSEIF (DHI.EQ.IFF_ABSENT) THEN
	   DH = 0.0
	ENDIF
C
C Main DO loop.
C
	DO 70 I = 1,2
C Calculate slopes at first end of span
	   IF (I.GT.1) GOTO 20
	   X3 = XY(1,3)
	   Y3 = XY(2,3)
	   X4 = XY(1,4)
	   Y4 = XY(2,4)
	   X5 = XY(1,5)
	   Y5 = XY(2,5)
	   A3 = X4 - X3
	   B3 = Y4 - Y3
	   A2 = X3 - XY(1,2)
	   A1 = XY(1,2) - XY(1,1)
	   B2 = Y3 - XY(2,2)
	   B1 = XY(2,2) - XY(2,1)
	   A4 = X5 - X4
	   B4 = Y5 - Y4
	   GOTO 30
C Other end
20	   X2 = X3
	   Y2 = Y3
	   X3 = X4
	   Y3 = Y4
	   X4 = X5
	   Y4 = Y5
	   X5 = XY(1,6)
	   Y5 = XY(2,6)
	   A1 = A2
	   B1 = B2
	   A2 = A3
	   B2 = B3
	   A3 = A4
	   B3 = B4
	   A4 = X5 - X4
	   B4 = Y5 - Y4
C
C Numerical differentiation
C
	   COS2 = COS3
	   SIN2 = SIN3
30	   W2 = ABS(A3*B4 - A4*B3)
	   W3 = ABS(A1*B2 - A2*B1)
	   IF (W2  +  W3.NE.0.0) GOTO 40
	   W2 = SQRT(A3*A3  +  B3*B3)
	   W3 = SQRT(A2*A2  +  B2*B2)
40	   COS3 = W2*A2  +  W3*A3
	   SIN3 = W2*B2  +  W3*B3
	   R = COS3*COS3  +  SIN3*SIN3
	   IF (R.EQ.0.0) GOTO 50
	   R = SQRT(R)
	   COS3 = COS3/R
	   SIN3 = SIN3/R
50	   IF (I.EQ.1) GOTO 70
C
C Determine the coefficients
C
	   R = SQRT(A2*A2  +  B2*B2)
	   P1 = R*COS2
	   P2 = 3.0*A2 - R*(COS2  +  COS2  +  COS3)
	   P3 = A2 - P1 - P2
	   Q1 = R*SIN2
	   Q2 = 3.0*B2 - R*(SIN2  +  SIN2  +  SIN3)
	   Q3 = B2 - Q1 - Q2
C
C Compute the polynomials and draw
C
	   Z = 0.0
	   DZ = 1.0/INTERP
	   DO 60 J = 1,INTERP-1
	      Z = Z  +  DZ
	      U = P0  +  Z*(P1  +  Z*(P2  +  Z*P3))
	      V = Q0  +  Z*(Q1  +  Z*(Q2  +  Z*Q3))
	      IF (HI.NE.IFF_ABSENT) H = H + DH
	      CALL ADDPTS3D(1,UV,H,ONSCR)	! output new point
60	   CONTINUE
70	CONTINUE
C Finish off by falling through to draw last point
C
C
C Special case of straight line - interpolate zero points
80	CALL ADDPTS3D(1,XY(1,4),ZZ(4),ONSCR)	! output last point
	RETURN
C
	END

