	SUBROUTINE AVPTS(IN_POINTS,NUMBER_IN,OUT_POINTS,NUMBER_OUT,
     &                   LOOPED)
C
***	IDENT	16SE87
***	MODULE	AVPTS
C
C	Copyright : Laser-Scan Laboratories Ltd., Cambridge, England
C	Created   : ACM   Vectorise version		 Nov 1985
C	Modified  : DRC   for use in COORDLIB         04 Sep 1987 
C	
C
	IMPLICIT NONE
C
***	PARAMETER/LSL$CMNCOORD:MAXPTS/	! max. no. of points in line
C Arguments
	REAL		IN_POINTS(2,MAXPTS)! line to be smoothed
	INTEGER*4	NUMBER_IN	! number of points in input line
	REAL		OUT_POINTS(2,MAXPTS)! smoothed line
	INTEGER*4	NUMBER_OUT	! number of points in smoothed line
	LOGICAL		LOOPED		! is the line to be looped?
C
C Local
	INTEGER		I
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
C	Creates locally smoothed line from pts in IN_POINTS
C
C	Each point in IN_POINTS is replaced by the vector average of the two
C	points to either side of it, except for non-loop end points,
C	which are unchanged
C
C	If IN_POINTS is closed then ends pts must NOT be identical
C
C	NUMBER_IN must be .GE. 4
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
	IF (LOOPED) THEN
	  OUT_POINTS(1,1) = (IN_POINTS(1,NUMBER_IN-2)+
     &                 IN_POINTS(1,NUMBER_IN-1)+
     &                 IN_POINTS(1,NUMBER_IN)+
     &                 IN_POINTS(1,1))/4
	  OUT_POINTS(2,1) = (IN_POINTS(2,NUMBER_IN-2)+
     &                 IN_POINTS(2,NUMBER_IN-1)+
     &                 IN_POINTS(2,NUMBER_IN)+
     &                 IN_POINTS(2,1))/4
	  OUT_POINTS(1,2) = (IN_POINTS(1,NUMBER_IN-1)+
     &                 IN_POINTS(1,NUMBER_IN)+
     &                 IN_POINTS(1,1)+
     &                 IN_POINTS(1,2))/4
	  OUT_POINTS(2,2) = (IN_POINTS(2,NUMBER_IN-1)+
     &                 IN_POINTS(2,NUMBER_IN)+
     &                 IN_POINTS(2,1)+
     &                 IN_POINTS(2,2))/4
	  OUT_POINTS(1,3) = (IN_POINTS(1,NUMBER_IN)+
     &                 IN_POINTS(1,1)+
     &                 IN_POINTS(1,2)+
     &                 IN_POINTS(1,3))/4
	  OUT_POINTS(2,3) = (IN_POINTS(2,NUMBER_IN)+
     &                 IN_POINTS(2,1)+
     &                 IN_POINTS(2,2)+
     &                 IN_POINTS(2,3))/4
	  NUMBER_OUT = 3
	ELSE
	  OUT_POINTS(1,1) = IN_POINTS(1,1)
	  OUT_POINTS(2,1) = IN_POINTS(2,1)
	  NUMBER_OUT = 1
	END IF
C
	DO 10 I = 1,NUMBER_IN-3
	  NUMBER_OUT = NUMBER_OUT+1
	  OUT_POINTS(1,NUMBER_OUT) = 
     &    (IN_POINTS(1,I)+
     &     IN_POINTS(1,I+1)+
     &     IN_POINTS(1,I+2)+
     &     IN_POINTS(1,I+3))/4
	  OUT_POINTS(2,NUMBER_OUT) = 
     &    (IN_POINTS(2,I)+
     &     IN_POINTS(2,I+1)+
     &     IN_POINTS(2,I+2)+
     &     IN_POINTS(2,I+3))/4
10	CONTINUE
C
	IF (.NOT.LOOPED) THEN
	  NUMBER_OUT = NUMBER_OUT+1
	  OUT_POINTS(1,NUMBER_OUT) = IN_POINTS(1,NUMBER_IN)
	  OUT_POINTS(2,NUMBER_OUT) = IN_POINTS(2,NUMBER_IN)
	END IF
C
	RETURN
C
	END


