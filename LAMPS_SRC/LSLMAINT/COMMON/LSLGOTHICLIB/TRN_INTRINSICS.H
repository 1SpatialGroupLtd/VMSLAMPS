/*
 * This file is part of the LAMPS distribution, released as a software
 * preservation project to archive digital history for future historians.
 * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
 *
 * Timestamp of this file for the 2002 release was: 1995-03-23 19:19:42.000000000 +0000
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, version 3.
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program. If not, see http://www.gnu.org/licenses/.
 */
#ifndef _TRN_INTRINSICS#define _TRN_INTRINSICS/* $Header: /gothic/hdr/trnlib/v1-8/RCS/hdr.trn_intrinsics.h,v 1.9 1995/02/21 18:27:28 clarke Exp $								*//* 									*//* $Log: hdr.trn_intrinsics.h,v $ * Revision 1.9  1995/02/21  18:27:28  clarke * Version v1-8 derived from v1-7 * Add support for user defined subsampling routines in trnreslib. * WICC 284. * * Revision 1.8  1993/07/22  10:30:44  davidm * Version v1-7 derived from v1-6 * Addition of colour weight average for MCE. * * Revision 1.7  1992/12/08  17:28:09  mikec * Version v1-6 derived from v1-5 * Fix to the tabulated resampling function table generation functions in * `trn_table_fns.c' to ensure that the resampling functions are symmetric * about the mid-point. * * Note, a corresponding fix needs to be made to tabulated resampling functions * in `trn_resample_table.c' etc in TRNRESLIB. This means that this fixed version * of TRNLIB can only be used with versions of TRNRESLIB later than v1-3. * Moved the file `trn_table_fns.c' to `trnres_table.c' in TRNRESLIB since the * extern functions in trn_table_fns.c are declared in the TRNRESLIB intrinsics * file "trnres_intrinsics.h". The resampling function table generation functions * are essentially used in conjunction with the tabulated resampling * functionality of TRNRESLIB. * Fix implemented and tested. * * Revision 1.6  1992/10/07  14:47:13  andyb * Version v1-5 derived from v1-4 * Change space_kind_init, tran_kind_init to ensure that multiple * space datasets can be created within a session. * * Revision 1.5  1992/10/06  11:54:15  andyb * Version v1-4 derived from v1-3 * To correct erroneous conversion of MBR 'add on' margin from a real to * an integer within the MBR functions. * Correction to tiling-priority call-back so that the output buffer is * specified to be the whole tile. * * Revision 1.4  1992/09/11  15:26:09  mikec * Version v1-3 derived from v1-2 * Remove trans kind "Identity" from trn_trans_kind_init. It screws spacelib * by having no parameters. * oFroze version so that bug-fixes to the MBR software can be made. * * Revision 1.3  1992/08/26  20:16:30  jon * Version v1-2 derived from v1-1 * Upgrade TRNLIB to make use of the `any' space-kind option when defining the * source and destination space-kinds of a transformation-kind. * * Revision 1.2  1992/08/06  20:23:36  adrian * Version v1-1 derived from v1-0 * Partial rewrite of resampling schemes for the case where the data is not * byte data. * * Also added new routines to allow trnlib to tell spacelib about its * transformation kinds, space kinds and the names that trnlib has used to * register its function addresses with tranlib. * * Revision 1.1  1992/03/16  22:54:57  jon * Version v1-0 derived from root * Version containing `smart' alternative from old system *								*//************************************************************************//* Copyright Laser-Scan Ltd, Cambridge CB4 4FY, England			*//* Author    Ian Fisher  20-Mar-91					*//************************************************************************//************************************************************************//*									*//*			  T R A N S F O R M S				*//*									*//* Part of GOTHIC module 						*//*									*//* GOTHIC include contain external declarations to all intrinsic        *//* functions.                                                           *//*									*//************************************************************************//*----------------------------------------------------------------------*//* INTRODUCTION		      						*//*									*//*  TRNLIB contains a variety of mathematical functions for the         *//*  processing and manipulation of data. Examples of the functions      *//*  contained within the library are first,second are third order       *//*  transformations of two dimensional data to two dimensional data.    *//*                                                                      *//*  The functions within the TRNLIB library may be accessed through C   *//*  and through LULL. LULL access requires that the functions within    *//*  the library are registered by name with dictionaries of             *//*  transformations. This is achieved by calling the intrinsic          *//*  trn_tran_init. Thereafter functions in the TRNLIB library may be    *//*  attached to processing utilities by reference to the name which     *//*  is the transformations key in the appropriate dictionary.           *//*----------------------------------------------------------------------*//************************************************************************//*     POINT_FUNCTIONS       POINT_FUNCTIONS       POINT_FUNCTIONS      *//************************************************************************//*---------------------------------------------------------------------------*//* EXTERN trn_sheet_to_sheet_map			       		     *//*...........................................................................*//* Scale type transformation map for raster data.                            *//*                                                                           *//*---------------------------------------------------------------------------*/extern GOTH_STATUS trn_sheet_to_sheet_map(                                           GOTH_INTEGER   n_coord,                                           GOTH_REAL      xy_in[][2],                                           GOTH_REAL      xy_out[][2],                                           GOTH_INTEGER   ntrans_params,                                           GOTH_VALUE     trans_params[],                                           GOTH_INTEGER   ninput_space_params,                                           GOTH_VALUE     input_space_params[],                                           GOTH_INTEGER   noutput_space_params,                                           GOTH_VALUE     out_space_params[]);/*---------------------------------------------------------------------------*//* EXTERN trn_orthogonal_point_map		      	      		     *//*...........................................................................*//* Orthogonal transformation map for raster data.                            *//*                                                                           *//*---------------------------------------------------------------------------*/extern GOTH_STATUS trn_orthogonal_point_map(                                           GOTH_INTEGER   n_coord,                                           GOTH_REAL      xy_in[][2],                                           GOTH_REAL      xy_out[][2],                                           GOTH_INTEGER   ntrans_params,                                           GOTH_VALUE     trans_params[],                                           GOTH_INTEGER   ninput_space_params,                                           GOTH_VALUE     input_space_params[],                                           GOTH_INTEGER   noutput_space_params,                                           GOTH_VALUE     out_space_params[]);/*---------------------------------------------------------------------------*//* EXTERN trn_bicubic_point_map			         		     *//*...........................................................................*//* Bicubic transformation point function.                                    *//*                                                                           *//*---------------------------------------------------------------------------*/extern GOTH_STATUS trn_bicubic_point_map(                                         GOTH_INTEGER   n_coord,                                         GOTH_REAL      xy_in[][2],                                         GOTH_REAL      xy_out[][2],                                         GOTH_INTEGER   ntrans_params,                                         GOTH_VALUE     trans_params[],                                         GOTH_INTEGER   ninput_space_params,                                         GOTH_VALUE     input_space_params[],                                         GOTH_INTEGER   noutput_space_params,                                         GOTH_VALUE     out_space_params[]);/*---------------------------------------------------------------------------*//* EXTERN trn_biquad_point_map			         		     *//*...........................................................................*//* Biquad transformation point function.                                     *//*                                                                           *//*---------------------------------------------------------------------------*/extern GOTH_STATUS trn_biquad_point_map(                                        GOTH_INTEGER   n_coord,                                        GOTH_REAL      xy_in[][2],                                        GOTH_REAL      xy_out[][2],                                        GOTH_INTEGER   ntrans_params,                                        GOTH_VALUE     trans_params[],                                        GOTH_INTEGER   ninput_space_params,                                        GOTH_VALUE     input_space_params[],                                        GOTH_INTEGER   noutput_space_params,                                        GOTH_VALUE     out_space_params[]);/*---------------------------------------------------------------------------*//* EXTERN trn_3rd_order_point_map			      		     *//*...........................................................................*//* 2nd order transformation raster map.                                      *//*                                                                           *//*---------------------------------------------------------------------------*/extern GOTH_STATUS trn_3rd_order_point_map(                                           GOTH_INTEGER   n_coord,                                           GOTH_REAL      xy_in[][2],                                           GOTH_REAL      xy_out[][2],                                           GOTH_INTEGER   ntrans_params,                                           GOTH_VALUE     trans_params[],                                           GOTH_INTEGER   ninput_space_params,                                           GOTH_VALUE     input_space_params[],                                           GOTH_INTEGER   noutput_space_params,                                           GOTH_VALUE     out_space_params[]);/*---------------------------------------------------------------------------*//* EXTERN trn_2nd_order_point_map			      		     *//*...........................................................................*//* 2nd order transformation raster map.                                      *//*                                                                           *//*---------------------------------------------------------------------------*/extern GOTH_STATUS trn_2nd_order_point_map(                                           GOTH_INTEGER   n_coord,                                           GOTH_REAL      xy_in[][2],                                           GOTH_REAL      xy_out[][2],                                           GOTH_INTEGER   ntrans_params,                                           GOTH_VALUE     trans_params[],                                           GOTH_INTEGER   ninput_space_params,                                           GOTH_VALUE     input_space_params[],                                           GOTH_INTEGER   noutput_space_params,                                           GOTH_VALUE     out_space_params[]); /*---------------------------------------------------------------------------*//* EXTERN trn_1st_order_point_map			      		     *//*...........................................................................*//* 1st order transformation  raster map.                                     *//*                                                                           *//*---------------------------------------------------------------------------*/extern GOTH_STATUS trn_1st_order_point_map(                                           GOTH_INTEGER   n_coord,                                           GOTH_REAL      xy_in[][2],                                           GOTH_REAL      xy_out[][2],                                           GOTH_INTEGER   ntrans_params,                                           GOTH_VALUE     trans_params[],                                           GOTH_INTEGER   ninput_space_params,                                           GOTH_VALUE     input_space_params[],                                           GOTH_INTEGER   noutput_space_params,                                           GOTH_VALUE     out_space_params[]);/*---------------------------------------------------------------------------*//* EXTERN trn_affine_point_map			         		     *//*...........................................................................*//* Affine transformation raster map.                                         *//*                                                                           *//*---------------------------------------------------------------------------*/extern GOTH_STATUS trn_affine_point_map(                                        GOTH_INTEGER   n_coord,                                        GOTH_REAL      xy_in[][2],                                        GOTH_REAL      xy_out[][2],                                        GOTH_INTEGER   ntrans_params,                                        GOTH_VALUE     trans_params[],                                        GOTH_INTEGER   ninput_space_params,                                        GOTH_VALUE     input_space_params[],                                        GOTH_INTEGER   noutput_space_params,                                        GOTH_VALUE     out_space_params[]);/*---------------------------------------------------------------------------*//* EXTERN trn_bilinear_point_map			      		     *//*...........................................................................*//* Bilinear transformation raster map.                                       *//*                                                                           *//*---------------------------------------------------------------------------*/extern GOTH_STATUS trn_bilinear_point_map(                                          GOTH_INTEGER   n_coord,                                          GOTH_REAL      xy_in[][2],                                          GOTH_REAL      xy_out[][2],                                          GOTH_INTEGER   ntrans_params,                                          GOTH_VALUE     trans_params[],                                          GOTH_INTEGER   ninput_space_params,                                          GOTH_VALUE     input_space_params[],                                          GOTH_INTEGER   noutput_space_params,                                          GOTH_VALUE     out_space_params[]);/*---------------------------------------------------------------------------*//* EXTERN trn_project_4pt_point_map			      		     *//*...........................................................................*//* Projected 4 point transformation for raster map.                          *//*                                                                           *//*---------------------------------------------------------------------------*/extern GOTH_STATUS trn_proj_4pt_point_map(                                          GOTH_INTEGER   n_coord,                                          GOTH_REAL      xy_in[][2],                                          GOTH_REAL      xy_out[][2],                                          GOTH_INTEGER   ntrans_params,                                          GOTH_VALUE     trans_params[],                                          GOTH_INTEGER   ninput_space_params,                                          GOTH_VALUE     input_space_params[],                                          GOTH_INTEGER   noutput_space_params,                                          GOTH_VALUE     out_space_params[]);/*---------------------------------------------------------------------------*//* EXTERN trn_identity_point_map			      		     *//*...........................................................................*//* Identity transformation point function.                                   *//*                                                                           *//*---------------------------------------------------------------------------*/extern GOTH_STATUS trn_identity_point_map(                                          GOTH_INTEGER   n_coord,                                          GOTH_REAL      xy_in[][2],                                          GOTH_REAL      xy_out[][2],                                          GOTH_INTEGER   ntrans_params,                                          GOTH_VALUE     trans_params[],                                          GOTH_INTEGER   ninput_space_params,                                          GOTH_VALUE     input_space_params[],                                          GOTH_INTEGER   noutput_space_params,                                          GOTH_VALUE     out_space_params[]);/*---------------------------------------------------------------------------*//* EXTERN trn_multiple_point_map			      		     *//*...........................................................................*//* Multiple transformation point function.                                   *//*                                                                           *//* Receives :   n_coord - ( GOTH_INTEGER ) Number of coordinates to map.     *//*     xy_in[n_coord,2] - ( GOTH_REAL ) The input coordinates to map.        *//*        ntrans_params - ( GOTH_INTEGER ) Number of parameters = variable   *//*       trans_params[] - ( GOTH_VALUE )  The format for multiple transfs. : *//*                                                                           *//*                            Index   Parameter                              *//*                            =====   =========                              *//*                             0      No. of transforms supplied.            *//*                             1      Pointer to 1st transformation function.*//*                                    (TRANS_COORD_FUNC forced into integer) *//*                             2      No. of trans parameter for 1st tf.     *//*                             3      1st tf parameter.                      *//*                             4      2nd tf parameter.                      *//*                             5      ....                                   *//*                             .      ....                                   *//*                             .      ....                                   *//*                             n      nth tf parameter.                      *//*                            n+1     Pointer to 2nd transformation function.*/ /*                            n+2     No. of trans parameter for 2nd tf.     */ /*                            n+3     1st tf parameter.                      */ /*                            n+4     2nd tf parameter.                      *//*                             .      ....                                   *//*                            etc.                                           *//*                                                                           */ /*  ninput_space_params - ( GOTH_INTEGER ) Number of input params : nil for  *//*                                         tranformations                    *//* input_space_params[] - ( GOTH_VALUE )   Null for transformations.         *//* noutput_space_params - ( GOTH_INTEGER ) Number of output params : nil for *//*                                         transformations.                  *//*  out_space_params[]  - ( GOTH_VALUE )   Null for transformations.         *//*                                                                           *//* Returns  :                                                                *//*   xy_out[n_coord,2] - ( GOTH_REAL ) The output coordinates mapped.        *//*                                                                           *//* Performs multiple transformation on input co-ordinates according to       *//* parameters passed into this routine.                                      *//*                                                                           *//*---------------------------------------------------------------------------*/extern GOTH_STATUS trn_multiple_point_map(                                          GOTH_INTEGER   n_coord,                                          GOTH_REAL      xy_in[][2],                                          GOTH_REAL      xy_out[][2],                                          GOTH_INTEGER   ntrans_params,                                          GOTH_VALUE     trans_params[],                                          GOTH_INTEGER   ninput_space_params,                                          GOTH_VALUE     input_space_params[],                                          GOTH_INTEGER   noutput_space_params,                                          GOTH_VALUE     out_space_params[] );/*---------------------------------------------------------------------------*//* EXTERN trn_build_multiple_tf_data			      		     *//*...........................................................................*//* To create the data array required for a multiple transformation. This     *//* routine must be used in conjunction with the multiple tf function.        *//* This routine also registers a 'new' multiple tf function with TRANLIB     *//* so as to register the datatypes required by the tf. The TRANLIB register  *//* is required by other libraries such as RASTERLIB. The name with which the *//* multiple tf function is registered is unique and is passed back to the    *//* user.                                                                     *//*                                                                           *//* Returns  : tf_name - ( GOTH_STRING * ) The unique tf name whuch has been  *//*                                        registered with TRANLIB.           *//*          tf_params - ( GOTH_VALUE *) The array of parameters to passed to *//*                                      the tf function.                     *//*                                                                           *//* Receives :   n_tfs - ( GOTH_INTEGER ) The number of transformations.      *//*           tf1_name - ( GOTH_STRING ) The 1st tf functions name (must be   *//*                                      registered with TRANLIB).            *//*         tf1_params - ( GOTH_VALUE * ) 1st tfs parameters.                 *//*           tf2_name - ( GOTH_STRING ) The 2nd tf function name.            *//*              .          ....                                              *//*              .          ....                                              *//*              .          ....                                              *//*                                                                           *//*---------------------------------------------------------------------------*/extern GOTH_STATUS trn_build_multiple_tf_data(                                              GOTH_STRING    *tf_name,                                              GOTH_VALUE    **tf_params,                                              GOTH_INTEGER    n_tfs,                                              ...);/************************************************************************//*     MBR_FUNCTIONS         MBR_FUNCTIONS         MBR_FUNCTIONS        *//************************************************************************//*---------------------------------------------------------------------------*//* EXTERN trn_bicubic_mbr_map                                                *//*...........................................................................*//* Set up the minimum bounding rectangle map for a bicubic transformation.   *//*                                                                           *//*---------------------------------------------------------------------------*/extern GOTH_STATUS trn_bicubic_mbr_map( GOTH_REAL      inlow1,                                        GOTH_REAL      inlow2,                                        GOTH_REAL      inhigh1,                                        GOTH_REAL      inhigh2,                                        GOTH_REAL      *outlow1,                                        GOTH_REAL      *outlow2,                                        GOTH_REAL      *outhigh1,                                        GOTH_REAL      *outhigh2,                                        TRANS_COORD_FUNC coord_func,                                        GOTH_INTEGER   ntrans_params,                                        GOTH_VALUE     trans_params[],                                        GOTH_INTEGER   nmbr_params,                                        GOTH_VALUE     mbr_params[],                                        GOTH_INTEGER   ninput_space_params,                                        GOTH_VALUE     input_space_params[],                                        GOTH_INTEGER   noutput_space_params,                                        GOTH_VALUE     out_space_params[]);/*---------------------------------------------------------------------------*//* EXTERN trn_biquad_mbr_map                                                 *//*...........................................................................*//* Set up the minimum bounding rectangle map for a biquad transformation.    *//*                                                                           *//*---------------------------------------------------------------------------*/extern GOTH_STATUS trn_biquad_mbr_map( GOTH_REAL      inlow1,                                       GOTH_REAL      inlow2,                                       GOTH_REAL      inhigh1,                                       GOTH_REAL      inhigh2,                                       GOTH_REAL      *outlow1,                                       GOTH_REAL      *outlow2,                                       GOTH_REAL      *outhigh1,                                       GOTH_REAL      *outhigh2,                                       TRANS_COORD_FUNC coord_func,                                       GOTH_INTEGER   ntrans_params,                                       GOTH_VALUE     trans_params[],                                       GOTH_INTEGER   nmbr_params,                                       GOTH_VALUE     mbr_params[],                                       GOTH_INTEGER   ninput_space_params,                                       GOTH_VALUE     input_space_params[],                                       GOTH_INTEGER   noutput_space_params,                                       GOTH_VALUE     out_space_params[]);/*---------------------------------------------------------------------------*//* EXTERN trn_3rd_order_mbr_map                                              *//*...........................................................................*//* Set up the minimum bounding rectangle map for a 3rd order transformation. *//*                                                                           *//*---------------------------------------------------------------------------*/extern GOTH_STATUS trn_3rd_order_mbr_map( GOTH_REAL      inlow1,                                          GOTH_REAL      inlow2,                                          GOTH_REAL      inhigh1,                                          GOTH_REAL      inhigh2,                                          GOTH_REAL      *outlow1,                                          GOTH_REAL      *outlow2,                                          GOTH_REAL      *outhigh1,                                          GOTH_REAL      *outhigh2,                                          TRANS_COORD_FUNC coordmap,                                          GOTH_INTEGER   ntrans_params,                                          GOTH_VALUE     trans_params[],                                          GOTH_INTEGER   nmbr_params,                                          GOTH_VALUE     mbr_params[],                                          GOTH_INTEGER   ninput_space_params,                                          GOTH_VALUE     input_space_params[],                                          GOTH_INTEGER   noutput_space_params,                                          GOTH_VALUE     out_space_params[]);/*---------------------------------------------------------------------------*//* EXTERN trn_2nd_order_mbr_map                                              *//*...........................................................................*//* Set up the minimum bounding rectangle map for a 2nd order transformation. *//*                                                                           *//*---------------------------------------------------------------------------*/extern GOTH_STATUS trn_2nd_order_mbr_map( GOTH_REAL      inlow1,                                          GOTH_REAL      inlow2,                                          GOTH_REAL      inhigh1,                                          GOTH_REAL      inhigh2,                                          GOTH_REAL      *outlow1,                                          GOTH_REAL      *outlow2,                                          GOTH_REAL      *outhigh1,                                          GOTH_REAL      *outhigh2,                                          TRANS_COORD_FUNC coordmap,                                          GOTH_INTEGER   ntrans_params,                                          GOTH_VALUE     trans_params[],                                          GOTH_INTEGER   nmbr_params,                                          GOTH_VALUE     mbr_params[],                                          GOTH_INTEGER   ninput_space_params,                                          GOTH_VALUE     input_space_params[],                                          GOTH_INTEGER   noutput_space_params,                                          GOTH_VALUE     out_space_params[]);/*---------------------------------------------------------------------------*//* EXTERN trn_1st_order_mbr_map                                              *//*...........................................................................*//* Set up the minimum bounding rectangle map for a 1st order transformation. *//*                                                                           *//*---------------------------------------------------------------------------*/extern GOTH_STATUS trn_1st_order_mbr_map( GOTH_REAL      inlow1,                                          GOTH_REAL      inlow2,                                          GOTH_REAL      inhigh1,                                          GOTH_REAL      inhigh2,                                          GOTH_REAL      *outlow1,                                          GOTH_REAL      *outlow2,                                          GOTH_REAL      *outhigh1,                                          GOTH_REAL      *outhigh2,                                          TRANS_COORD_FUNC coordmap,                                          GOTH_INTEGER   ntrans_params,                                          GOTH_VALUE     trans_params[],                                          GOTH_INTEGER   nmbr_params,                                          GOTH_VALUE     mbr_params[],                                          GOTH_INTEGER   ninput_space_params,                                          GOTH_VALUE     input_space_params[],                                          GOTH_INTEGER   noutput_space_params,                                          GOTH_VALUE     out_space_params[]); /*---------------------------------------------------------------------------*//* EXTERN trn_affine_mbr_map                                                 *//*...........................................................................*//* Set up the minimum bounding rectangle map for a affine transformation.    *//*                                                                           *//*---------------------------------------------------------------------------*/extern GOTH_STATUS trn_affine_mbr_map( GOTH_REAL      inlow1,                                       GOTH_REAL      inlow2,                                       GOTH_REAL      inhigh1,                                       GOTH_REAL      inhigh2,                                       GOTH_REAL      *outlow1,                                       GOTH_REAL      *outlow2,                                       GOTH_REAL      *outhigh1,                                       GOTH_REAL      *outhigh2,                                       TRANS_COORD_FUNC coordmap,                                       GOTH_INTEGER   ntrans_params,                                       GOTH_VALUE     trans_params[],                                       GOTH_INTEGER   nmbr_params,                                       GOTH_VALUE     mbr_params[],                                       GOTH_INTEGER   ninput_space_params,                                       GOTH_VALUE     input_space_params[],                                       GOTH_INTEGER   noutput_space_params,                                       GOTH_VALUE     out_space_params[]);/*---------------------------------------------------------------------------*//* EXTERN trn_bilinear_mbr_map                                               *//*...........................................................................*//* Set up the minimum bounding rectangle map for a bilinear transformation.  *//*                                                                           *//*---------------------------------------------------------------------------*/extern GOTH_STATUS trn_bilinear_mbr_map( GOTH_REAL      inlow1,                                         GOTH_REAL      inlow2,                                         GOTH_REAL      inhigh1,                                         GOTH_REAL      inhigh2,                                         GOTH_REAL      *outlow1,                                         GOTH_REAL      *outlow2,                                         GOTH_REAL      *outhigh1,                                         GOTH_REAL      *outhigh2,                                         TRANS_COORD_FUNC coordmap,                                         GOTH_INTEGER   ntrans_params,                                         GOTH_VALUE     trans_params[],                                         GOTH_INTEGER   nmbr_params,                                         GOTH_VALUE     mbr_params[],                                         GOTH_INTEGER   ninput_space_params,                                         GOTH_VALUE     input_space_params[],                                         GOTH_INTEGER   noutput_space_params,                                         GOTH_VALUE     out_space_params[]);/*---------------------------------------------------------------------------*//* EXTERN trn_proj_4pt_mbr_map                                               *//*...........................................................................*//* Set up the minimum bounding rectangle map for a projected 4 point         *//* transformation.                                                           *//*                                                                           *//*---------------------------------------------------------------------------*/extern GOTH_STATUS trn_proj_4pt_mbr_map( GOTH_REAL      inlow1,                                         GOTH_REAL      inlow2,                                         GOTH_REAL      inhigh1,                                         GOTH_REAL      inhigh2,                                         GOTH_REAL      *outlow1,                                         GOTH_REAL      *outlow2,                                         GOTH_REAL      *outhigh1,                                         GOTH_REAL      *outhigh2,                                          TRANS_COORD_FUNC coordmap,                                         GOTH_INTEGER   ntrans_params,                                         GOTH_VALUE     trans_params[],                                         GOTH_INTEGER   nmbr_params,                                         GOTH_VALUE     mbr_params[],                                         GOTH_INTEGER   ninput_space_params,                                         GOTH_VALUE     input_space_params[],                                         GOTH_INTEGER   noutput_space_params,                                         GOTH_VALUE     out_space_params[]);/*---------------------------------------------------------------------------*//* EXTERN trn_identity_mbr_map                                               *//*...........................................................................*//* Set up the minimum bounding rectangle map for an identity transformation. *//*                                                                           *//*---------------------------------------------------------------------------*/extern GOTH_STATUS trn_identity_mbr_map( GOTH_REAL      inlow1,                                         GOTH_REAL      inlow2,                                         GOTH_REAL      inhigh1,                                         GOTH_REAL      inhigh2,                                         GOTH_REAL      *outlow1,                                         GOTH_REAL      *outlow2,                                         GOTH_REAL      *outhigh1,                                         GOTH_REAL      *outhigh2,                                         TRANS_COORD_FUNC coord_func,                                         GOTH_INTEGER   ntrans_params,                                         GOTH_VALUE     trans_params[],                                         GOTH_INTEGER   nmbr_params,                                         GOTH_VALUE     mbr_params[],                                         GOTH_INTEGER   ninput_space_params,                                         GOTH_VALUE     input_space_params[],                                         GOTH_INTEGER   noutput_space_params,                                         GOTH_VALUE     out_space_params[]);/*---------------------------------------------------------------------------*//* EXTERN trn_generic_mbr_map                                                *//*...........................................................................*//*                                                                           *//*---------------------------------------------------------------------------*/extern GOTH_STATUS trn_generic_mbr_func (				 GOTH_REAL	  src_xlo,				 GOTH_REAL	  src_ylo,				 GOTH_REAL  	  src_xhi,				 GOTH_REAL	  src_yhi,				 GOTH_REAL	  *dest_xlo,				 GOTH_REAL	  *dest_ylo,				 GOTH_REAL     	  *dest_xhi,				 GOTH_REAL	  *dest_yhi,                                 TRANS_COORD_FUNC coord_func,				 GOTH_INTEGER	  ntrans_params,				 GOTH_VALUE	  trans_params[],                                 GOTH_INTEGER     nmbr_params,                                 GOTH_VALUE       mbr_params[],				 GOTH_INTEGER	  n_src_space_params,				 GOTH_VALUE	  src_space_params[],				 GOTH_INTEGER	  n_dest_space_params,				 GOTH_VALUE	  dest_space_params[] ) ;/*****************************************************************************//*  LOAD_FNS    LOAD_FNS    LOAD_FNS    LOAD_FNS    LOAD_FNS    LOAD_FNS     *//*****************************************************************************//*----------------------------------------------------------------------*//* LOCAL trn_load_orthogonal		      				*//*......................................................................*//* 'load' function for ORTHOGONAL type transforms.			*//*									*//*----------------------------------------------------------------------*/extern GOTH_STATUS trn_load_orthogonal(				       GOTH_REAL       	src_x,				       GOTH_REAL       	src_y,				       GOTH_REAL       	dest_x,				       GOTH_REAL       	dest_xy,				       GOTH_INTEGER	*ret_n_coeff,				       GOTH_REAL        **ret_x_coeff,				       GOTH_REAL       	**ret_y_coeff );/*----------------------------------------------------------------------*//* EXTERN trn_load_first_order						*//*......................................................................*//* 'load' function for AFFINE type transforms.				*//*									*//*----------------------------------------------------------------------*/extern GOTH_STATUS trn_load_first_order( GOTH_REAL      x_src,		       	                 GOTH_REAL      y_src,		       	                 GOTH_REAL      x_dest,		       	                 GOTH_REAL      y_dest,				         GOTH_INTEGER  *ret_num_coeff,				         GOTH_REAL    **ret_x_coeff,				         GOTH_REAL    **ret_y_coeff );/*----------------------------------------------------------------------*//* EXTERN trn_load_bilinear						*//*......................................................................*//* 'load' function for BILINEAR type transforms.			*//*									*//*----------------------------------------------------------------------*/extern GOTH_STATUS trn_load_bilinear( GOTH_REAL      x_src,				      GOTH_REAL      y_src,				      GOTH_REAL      x_dest,				      GOTH_REAL      y_dest,				      GOTH_INTEGER  *ret_num_coeff,				      GOTH_REAL    **ret_x_coeff,				      GOTH_REAL    **ret_y_coeff );/*----------------------------------------------------------------------*//* EXTERN trn_load_projective_4pt					*//*......................................................................*//* 'load' function for PROJECTIVE_FOUR_POINT type transforms.		*//*									*//*----------------------------------------------------------------------*/extern GOTH_STATUS trn_load_projective_4pt( GOTH_REAL      x_src,					    GOTH_REAL      y_src,					    GOTH_REAL      x_dest,					    GOTH_REAL      y_dest,					    GOTH_INTEGER  *ret_num_coeff,					    GOTH_REAL    **ret_x_coeff,					    GOTH_REAL    **ret_y_coeff );/*----------------------------------------------------------------------*//* EXTERN trn_load_second_order					        *//*......................................................................*//* 'load' function for SECOND_ORDER type transforms.			*//*									*//*----------------------------------------------------------------------*/extern GOTH_STATUS trn_load_second_order( GOTH_REAL      x_src,					  GOTH_REAL      y_src,					  GOTH_REAL      x_dest,					  GOTH_REAL      y_dest,					  GOTH_INTEGER  *ret_num_coeff,					  GOTH_REAL    **ret_x_coeff,					  GOTH_REAL    **ret_y_coeff );/*----------------------------------------------------------------------*//* EXTERN trn_load_third_order					        *//*......................................................................*//* 'load' function for THIRD_ORDER type transforms.			*//*									*//*----------------------------------------------------------------------*/extern GOTH_STATUS trn_load_third_order( GOTH_REAL      x_src,					 GOTH_REAL      y_src,					 GOTH_REAL      x_dest,					 GOTH_REAL      y_dest,					 GOTH_INTEGER  *ret_num_coeff,					 GOTH_REAL    **ret_x_coeff,					 GOTH_REAL    **ret_y_coeff );/*--------------------------------------------------------------------------*//* EXTERN trn_load_bicubic					            *//*..........................................................................*//* 'load' function for BICUBIC type transforms.			            *//*									    *//*--------------------------------------------------------------------------*/extern GOTH_STATUS trn_load_bicubic( GOTH_REAL      x_src,				     GOTH_REAL      y_src,				     GOTH_REAL      x_dest,				     GOTH_REAL      y_dest,				     GOTH_INTEGER  *ret_num_coeff,				     GOTH_REAL    **ret_x_coeff,				     GOTH_REAL    **ret_y_coeff);/*--------------------------------------------------------------------------*//* EXTERN trn_load_biquad					            *//*..........................................................................*//* 'load' function for BIQUAD type transforms.			            *//*									    *//*--------------------------------------------------------------------------*/extern GOTH_STATUS trn_load_biquad( GOTH_REAL      x_src,				    GOTH_REAL      y_src,				    GOTH_REAL      x_dest,			            GOTH_REAL      y_dest,			            GOTH_INTEGER  *ret_num_coeff,			            GOTH_REAL    **ret_x_coeff,			            GOTH_REAL    **ret_y_coeff);/************************************************************************//*     DISPLAY_FUNCTIONS     DISPLAY_FUNCTIONS      DISPLAY_FUNCTIONS   *//************************************************************************//*----------------------------------------------------------------------*//* Extern trn_disp_affine					        *//*......................................................................*//* function displays an affine type transform equation 			*//*									*//*----------------------------------------------------------------------*/extern GOTH_STATUS trn_disp_affine( GOTH_DESCRIPTOR stream,				    GOTH_VALUE      coeff[],				    GOTH_INTEGER    num_coeff,				    GOTH_STRING     comment );/*----------------------------------------------------------------------*//* EXTERN trn_disp_bilinear					        *//*......................................................................*//* function displays a bilinear type transform equation			*//*									*//*----------------------------------------------------------------------*/extern GOTH_STATUS trn_disp_bilinear( GOTH_DESCRIPTOR stream,				      GOTH_VALUE      coeff[],				      GOTH_INTEGER    num_coeff,			              GOTH_STRING     comment );/*----------------------------------------------------------------------*//* EXTERN trn_disp_projective_4pt				        *//*......................................................................*//* function displays a projective four point transform equation.	*//*									*//*----------------------------------------------------------------------*/extern GOTH_STATUS trn_disp_projective_4pt( GOTH_DESCRIPTOR stream,					    GOTH_VALUE      coeff[],					    GOTH_INTEGER    num_coeff,					    GOTH_STRING     comment );/*----------------------------------------------------------------------*//* EXTERN trn_disp_second_order				                *//*......................................................................*//* function displays a second order transform equation.			*//*									*//*----------------------------------------------------------------------*/extern GOTH_STATUS trn_disp_second_order( GOTH_DESCRIPTOR stream,					  GOTH_VALUE      coeff[],					  GOTH_INTEGER    num_coeff,					  GOTH_STRING     comment );/*----------------------------------------------------------------------*//* EXTERN trn_disp_third_order					        *//*......................................................................*//* function displays a third order transform equation.			*//*									*//*----------------------------------------------------------------------*/extern GOTH_STATUS trn_disp_third_order( GOTH_DESCRIPTOR stream,					 GOTH_VALUE      coeff[],					 GOTH_INTEGER    num_coeff,					 GOTH_STRING     comment );/*--------------------------------------------------------------------------*//* EXTERN trn_disp_bicubic		 		                    *//*..........................................................................*//* function displays abicubic transform equation.		   	    *//*									    *//*--------------------------------------------------------------------------*/extern GOTH_STATUS trn_disp_bicubic( GOTH_DESCRIPTOR stream,				     GOTH_VALUE      coeff[],				     GOTH_INTEGER    num_coeff,				     GOTH_STRING     comment );/*--------------------------------------------------------------------------*//* EXTERN trn_disp_biquad		 		                    *//*..........................................................................*//* function displays a biquad transform equation.		   	    *//*									    *//*--------------------------------------------------------------------------*/extern GOTH_STATUS trn_disp_biquad( GOTH_DESCRIPTOR stream,				    GOTH_VALUE      coeff[],				    GOTH_INTEGER    num_coeff,			            GOTH_STRING     comment );/*****************************************************************************//*  TRANSFORM   TRANSFORM   TRANSFORM   TRANSFORM   TRANSFROM   TRANSFORM    *//*****************************************************************************//*---------------------------------------------------------------------------*//* EXTERN trn_transform_raster_map                                           *//*...........................................................................*//* Transform raster data. (Closest pixel resampling)                         *//*---------------------------------------------------------------------------*/extern GOTH_STATUS trn_transform_raster_map(                                        GOTH_DESCRIPTOR  source_rac_id,                                        GOTH_DESCRIPTOR  rac_id,                                        GOTH_REAL        inlow1,                                        GOTH_REAL        inlow2,                                        GOTH_REAL        inhigh1,                                        GOTH_REAL        inhigh2,                                        GOTH_INTEGER     rast_access,                                        VOID_P           pixel_access,                                        VOID_P           buffer,                                        GOTH_INTEGER     bufsize1,                                        GOTH_INTEGER     bufsize2,                                        TRANS_COORD_FUNC transf_fn,                                        GOTH_INTEGER     ntrans_params,                                        GOTH_VALUE       trans_params[],                                        GOTH_INTEGER     ninput_space_params,                                        GOTH_VALUE       input_space_params[],                                        GOTH_INTEGER     noutput_space_params,                                        GOTH_VALUE       output_space_params[],                                        GOTH_INTEGER     nraster_params,                                        GOTH_VALUE       raster_params[]                                       );/*---------------------------------------------------------------------------*//* EXTERN trn_trans_weight_grey                                              *//*...........................................................................*//* Transform grey raster data. (weighted average pixel resampling)           *//*                                                                           *//*---------------------------------------------------------------------------*/extern GOTH_STATUS trn_trans_weight_grey(                                        GOTH_DESCRIPTOR  source_rac_id,                                        GOTH_DESCRIPTOR  rac_id,                                        GOTH_REAL        inlow1,                                        GOTH_REAL        inlow2,                                        GOTH_REAL        inhigh1,                                        GOTH_REAL        inhigh2,                                        GOTH_INTEGER     rast_access,                                        VOID_P           pixel_access,                                        VOID_P           buffer,                                        GOTH_INTEGER     bufsize1,                                        GOTH_INTEGER     bufsize2,                                        TRANS_COORD_FUNC transf_fn,                                        GOTH_INTEGER     ntrans_params,                                        GOTH_VALUE       trans_params[],                                        GOTH_INTEGER     ninput_space_params,                                        GOTH_VALUE       input_space_params[],                                        GOTH_INTEGER     noutput_space_params,                                        GOTH_VALUE       output_space_params[],                                        GOTH_INTEGER     nraster_params,                                        GOTH_VALUE       raster_params[]                                       );/*---------------------------------------------------------------------------*//* EXTERN trn_trans_weight_colour                                            *//*...........................................................................*//* Transform raster data. (weighted average pixel resampling)                *//*                                                                           *//*---------------------------------------------------------------------------*/extern GOTH_STATUS trn_trans_weight_colour(                                        GOTH_DESCRIPTOR  source_rac_id,                                        GOTH_DESCRIPTOR  rac_id,                                        GOTH_REAL        inlow1,                                        GOTH_REAL        inlow2,                                        GOTH_REAL        inhigh1,                                        GOTH_REAL        inhigh2,                                        GOTH_INTEGER     rast_access,                                        VOID_P           pixel_access,                                        VOID_P           buffer,                                        GOTH_INTEGER     bufsize1,                                        GOTH_INTEGER     bufsize2,                                        TRANS_COORD_FUNC transf_fn,                                        GOTH_INTEGER     ntrans_params,                                        GOTH_VALUE       trans_params[],                                        GOTH_INTEGER     ninput_space_params,                                        GOTH_VALUE       input_space_params[],                                        GOTH_INTEGER     noutput_space_params,                                        GOTH_VALUE       output_space_params[],                                        GOTH_INTEGER     nraster_params,                                        GOTH_VALUE       raster_params[]                                       );/*---------------------------------------------------------------------------*//* EXTERN trn_trans_uweight_colour                                           *//*...........................................................................*//* Transform raster data. (weighted average pixel resampling)                *//*                                                                           *//*---------------------------------------------------------------------------*/extern GOTH_STATUS trn_trans_uweight_colour(                                        GOTH_DESCRIPTOR  source_rac_id,                                        GOTH_DESCRIPTOR  rac_id,                                        GOTH_REAL        inlow1,                                        GOTH_REAL        inlow2,                                        GOTH_REAL        inhigh1,                                        GOTH_REAL        inhigh2,                                        GOTH_INTEGER     rast_access,                                        VOID_P           pixel_access,                                        VOID_P           buffer,                                        GOTH_INTEGER     bufsize1,                                        GOTH_INTEGER     bufsize2,                                        TRANS_COORD_FUNC transf_fn,                                        GOTH_INTEGER     ntrans_params,                                        GOTH_VALUE       trans_params[],                                        GOTH_INTEGER     ninput_space_params,                                        GOTH_VALUE       input_space_params[],                                        GOTH_INTEGER     noutput_space_params,                                        GOTH_VALUE       output_space_params[],                                        GOTH_INTEGER     nraster_params,                                        GOTH_VALUE       raster_params[]                                       );/*---------------------------------------------------------------------------*//* EXTERN trn_trans_area_grey                                                *//*...........................................................................*//* Transform grey raster data. ( pixel extent resampling)                    *//*                                                                           *//*---------------------------------------------------------------------------*/extern GOTH_STATUS trn_trans_area_grey(                                        GOTH_DESCRIPTOR  source_rac_id,                                        GOTH_DESCRIPTOR  rac_id,                                        GOTH_REAL        inlow1,                                        GOTH_REAL        inlow2,                                        GOTH_REAL        inhigh1,                                        GOTH_REAL        inhigh2,                                        GOTH_INTEGER     rast_access,                                        VOID_P           pixel_access,                                        VOID_P           buffer,                                        GOTH_INTEGER     bufsize1,                                        GOTH_INTEGER     bufsize2,                                        TRANS_COORD_FUNC transf_fn,                                        GOTH_INTEGER     ntrans_params,                                        GOTH_VALUE       trans_params[],                                        GOTH_INTEGER     ninput_space_params,                                        GOTH_VALUE       input_space_params[],                                        GOTH_INTEGER     noutput_space_params,                                        GOTH_VALUE       output_space_params[],                                        GOTH_INTEGER     nraster_params,                                        GOTH_VALUE       raster_params[]                                       );/*---------------------------------------------------------------------------*//* EXTERN trn_trans_area_user                                                *//*...........................................................................*//* Transform raster data using user routine. ( pixel extent resampling)      *//*                                                                           *//*---------------------------------------------------------------------------*/extern GOTH_STATUS trn_trans_area_user(                                        GOTH_DESCRIPTOR  source_rac_id,                                        GOTH_DESCRIPTOR  rac_id,                                        GOTH_REAL        inlow1,                                        GOTH_REAL        inlow2,                                        GOTH_REAL        inhigh1,                                        GOTH_REAL        inhigh2,                                        GOTH_INTEGER     rast_access,                                        VOID_P           pixel_access,                                        VOID_P           buffer,                                        GOTH_INTEGER     bufsize1,                                        GOTH_INTEGER     bufsize2,                                        TRANS_COORD_FUNC transf_fn,                                        GOTH_INTEGER     ntrans_params,                                        GOTH_VALUE       trans_params[],                                        GOTH_INTEGER     ninput_space_params,                                        GOTH_VALUE       input_space_params[],                                        GOTH_INTEGER     noutput_space_params,                                        GOTH_VALUE       output_space_params[],                                        GOTH_INTEGER     nraster_params,                                        GOTH_VALUE       raster_params[]                                       );/*---------------------------------------------------------------------------*//* EXTERN trn_trans_area_colour                                              *//*...........................................................................*//* Transform raster data. ( pixel extent resampling)                         *//*                                                                           *//*---------------------------------------------------------------------------*/extern GOTH_STATUS trn_trans_area_colour(                                        GOTH_DESCRIPTOR  source_rac_id,                                        GOTH_DESCRIPTOR  rac_id,                                        GOTH_REAL        inlow1,                                        GOTH_REAL        inlow2,                                        GOTH_REAL        inhigh1,                                        GOTH_REAL        inhigh2,                                        GOTH_INTEGER     rast_access,                                        VOID_P           pixel_access,                                        VOID_P           buffer,                                        GOTH_INTEGER     bufsize1,                                        GOTH_INTEGER     bufsize2,                                        TRANS_COORD_FUNC transf_fn,                                        GOTH_INTEGER     ntrans_params,                                        GOTH_VALUE       trans_params[],                                        GOTH_INTEGER     ninput_space_params,                                        GOTH_VALUE       input_space_params[],                                        GOTH_INTEGER     noutput_space_params,                                        GOTH_VALUE       output_space_params[],                                        GOTH_INTEGER     nraster_params,                                        GOTH_VALUE       raster_params[]                                       );/*---------------------------------------------------------------------------*//* EXTERN trn_trans_uarea_colour                                              *//*...........................................................................*//* Transform raster data. ( pixel extent resampling)                         *//*                                                                           *//*---------------------------------------------------------------------------*/extern GOTH_STATUS trn_trans_uarea_colour(                                        GOTH_DESCRIPTOR  source_rac_id,                                        GOTH_DESCRIPTOR  rac_id,                                        GOTH_REAL        inlow1,                                        GOTH_REAL        inlow2,                                        GOTH_REAL        inhigh1,                                        GOTH_REAL        inhigh2,                                        GOTH_INTEGER     rast_access,                                        VOID_P           pixel_access,                                        VOID_P           buffer,                                        GOTH_INTEGER     bufsize1,                                        GOTH_INTEGER     bufsize2,                                        TRANS_COORD_FUNC transf_fn,                                        GOTH_INTEGER     ntrans_params,                                        GOTH_VALUE       trans_params[],                                        GOTH_INTEGER     ninput_space_params,                                        GOTH_VALUE       input_space_params[],                                        GOTH_INTEGER     noutput_space_params,                                        GOTH_VALUE       output_space_params[],                                        GOTH_INTEGER     nraster_params,                                        GOTH_VALUE       raster_params[]                                       );/*---------------------------------------------------------------------------*//* EXTERN trn_trans_tabulate_grey                                            *//*...........................................................................*//* Transform greyscale raster data. (general tabulated pixel resampling)     *//*                                                                           *//*---------------------------------------------------------------------------*/extern GOTH_STATUS trn_trans_tabulated_grey(                                        GOTH_DESCRIPTOR  source_rac_id,                                        GOTH_DESCRIPTOR  rac_id,                                        GOTH_REAL        inlow1,                                        GOTH_REAL        inlow2,                                        GOTH_REAL        inhigh1,                                        GOTH_REAL        inhigh2,                                        GOTH_INTEGER     rast_access,                                        VOID_P           pixel_access,                                        VOID_P           buffer,                                        GOTH_INTEGER     bufsize1,                                        GOTH_INTEGER     bufsize2,                                        TRANS_COORD_FUNC transf_fn,                                        GOTH_INTEGER     ntrans_params,                                        GOTH_VALUE       trans_params[],                                        GOTH_INTEGER     ninput_space_params,                                        GOTH_VALUE       input_space_params[],                                        GOTH_INTEGER     noutput_space_params,                                        GOTH_VALUE       output_space_params[],                                        GOTH_INTEGER     nraster_params,                                        GOTH_VALUE       raster_params[]                                       );/*****************************************************************************//*   UTILITIES     UTILITIES     UTILITIES     UTILITIES     UTILITIES       *//*****************************************************************************/extern GOTH_STATUS trn_read_cube_and_map( char           *cube_str,                                          char           *map_str,                                          unsigned char **colour_cube,                                          GOTH_INTEGER   *nred,                                          GOTH_INTEGER   *ngreen,                                          GOTH_INTEGER   *nblue,                                          GOTH_REAL     **colour_map,                                          GOTH_INTEGER   *nmap );/****************************************************************************//*  RGB-to-COLOUR    COLOUR-to-RGB          RGB-to-COLOUR    COLOUR-to-RGB  *//****************************************************************************//*---------------------------------------------------------------------------*//* EXTERN trn_rgb_to_colour_code                                             *//*...........................................................................*//* Routine to convert multi-layered RGB data to single layer colour coded    *//* data.                                                                     *//*                                                                           *//*---------------------------------------------------------------------------*/extern GOTH_STATUS trn_rgb_to_colour_code(                              GOTH_DESCRIPTOR     output_rac,                              GOTH_INTEGER        nsource_racs,                              GOTH_DESCRIPTOR     source_racs[],                              VOID_P              out_buffer,                              VOID_P              input_buffer[],                              GOTH_INTEGER        buffsize1,                              GOTH_INTEGER        buffsize2,                              GOTH_REAL           low1,                              GOTH_REAL           low2,                              GOTH_REAL           high1,                              GOTH_REAL           high2,                              GOTH_BOOLEAN        unknown[],                              GOTH_BOOLEAN        boundary[],                              GOTH_INTEGER        clipping[][4],                              GOTH_INTEGER        nlayer_params,                              GOTH_VALUE          layer_params[]                             );/*---------------------------------------------------------------------------*//* EXTERN trn_ms_to_layered	                                             *//*...........................................................................*//* Routine to convert multi-spectral data to single layer RGB data. 	     *//*---------------------------------------------------------------------------*/extern GOTH_STATUS trn_ms_to_layered(                              GOTH_DESCRIPTOR     output_rac,                              GOTH_INTEGER        nsource_racs,                              GOTH_DESCRIPTOR     source_racs[],                              VOID_P              out_buffer,                              VOID_P              input_buffer[],                              GOTH_INTEGER        buffsize1,                              GOTH_INTEGER        buffsize2,                              GOTH_REAL           low1,                              GOTH_REAL           low2,                              GOTH_REAL           high1,                              GOTH_REAL           high2,                              GOTH_BOOLEAN        unknown[],                              GOTH_BOOLEAN        boundary[],                              GOTH_INTEGER        clipping[][4],                              GOTH_INTEGER        nlayer_params,                              GOTH_VALUE          layer_params[]                             );/*---------------------------------------------------------------------------*//* EXTERN trn_ms_var_to_layered	                                             *//*...........................................................................*//* Routine to convert multi-layered data (variable number of bands) to 	     *//* single layer data.	     						     *//*---------------------------------------------------------------------------*/extern GOTH_STATUS trn_ms_var_to_layered(                              GOTH_DESCRIPTOR     output_rac,                              GOTH_INTEGER        nsource_racs,                              GOTH_DESCRIPTOR     source_racs[],                              VOID_P              out_buffer,                              VOID_P              input_buffer[],                              GOTH_INTEGER        buffsize1,                              GOTH_INTEGER        buffsize2,                              GOTH_REAL           low1,                              GOTH_REAL           low2,                              GOTH_REAL           high1,                              GOTH_REAL           high2,                              GOTH_BOOLEAN        unknown[],                              GOTH_BOOLEAN        boundary[],                              GOTH_INTEGER        clipping[][4],                              GOTH_INTEGER        nlayer_params,                              GOTH_VALUE          layer_params[]                             );/*---------------------------------------------------------------------------*//* EXTERN trn_ms_layered_to_var                                              *//*...........................................................................*//* Routine to convert single-layered colour code data to multi-layered	     *//* (variable number of layers) data.                                         *//*                                                                           *//* Input  :    input_rac - ( GOTH_DESCRIPTOR ) RAC describing input data     *//*                                             characteristics.              *//*          noutput_racs - ( GOTH_INTEGER ) Number of output data RACs       *//*             in_buffer - ( VOID_P ) The single layer of input data.        *//*     bufsize1,bufsize2 - ( GOTH_INTEGER ) Size of output buffers.          *//*               unknown - ( GOTH_BOOLEAN ) TRUE if the associated data RAC  *//*                                          is relevant data or background   *//*                                          data.                            *//*              boundary - ( GOTH_BOOLEAN ) TRUE if the associated input data*//*                                          RAC is on a boundary.            *//*              clipping - ( GOTH_INTEGER ) The boundary values of the input *//*                                          data RACs.                       *//*         nlayer_params - ( GOTH_INTEGER ) The number of parameters required*//*                                          by this conversion rotuine = 0   *//*          layer_params - ( GOTH_VALUE ) The layer parameters : none        *//*                                                                           *//* Output : output_buffer - ( VOID_P ) Pointers to data after conversion.    *//*           output_racs - ( GOTH_DESCRIPTOR ) Output RACs to be filled from *//*                                             one data RAC.                 *//*                                             [0] - [noutput_racs-1]	     *//*                                                                           *//* Converts the single-layered colour coded data to multi-layered data RAC.  *//*                                                                           *//*---------------------------------------------------------------------------*/extern GOTH_STATUS trn_ms_layered_to_var(                              GOTH_DESCRIPTOR     input_rac,                              GOTH_INTEGER        noutput_racs,                              GOTH_DESCRIPTOR     output_racs[],                              VOID_P              in_buffer,                              VOID_P              output_buffer[],                              GOTH_INTEGER        buffsize1,                              GOTH_INTEGER        buffsize2,                              GOTH_REAL           low1,                              GOTH_REAL           low2,                              GOTH_REAL           high1,                              GOTH_REAL           high2,                              GOTH_BOOLEAN        unknown[],                              GOTH_BOOLEAN        boundary[],                              GOTH_INTEGER        clipping[][4],                              GOTH_INTEGER        nlayer_params,                              GOTH_VALUE          layer_params[]                             );/*---------------------------------------------------------------------------*//* EXTERN trn_colour_code_to_rgb                                             *//*...........................................................................*//* Routine to convert single-layered colour code data to multi-layered RGB   *//* data.                                                                     *//*                                                                           *//*---------------------------------------------------------------------------*/extern GOTH_STATUS trn_colour_code_to_rgb(                              GOTH_DESCRIPTOR     input_rac,                              GOTH_INTEGER        noutput_racs,                              GOTH_DESCRIPTOR     output_racs[],                              VOID_P              in_buffer,                              VOID_P              output_buffer[],                              GOTH_INTEGER        buffsize1,                              GOTH_INTEGER        buffsize2,                              GOTH_REAL           low1,                              GOTH_REAL           low2,                              GOTH_REAL           high1,                              GOTH_REAL           high2,                              GOTH_BOOLEAN        unknown[],                              GOTH_BOOLEAN        boundary[],                              GOTH_INTEGER        clipping[][4],                              GOTH_INTEGER        nlayer_params,                              GOTH_VALUE          layer_params[]                             );/****************************************************************************//*  TILING TILING TILING TILING TILING TILING TILING TILING TILING TILING   *//****************************************************************************//*---------------------------------------------------------------------------*//* EXTERN trn_priority_tiling                                                *//*...........................................................................*//*---------------------------------------------------------------------------*/extern GOTH_STATUS trn_priority_tiling(                              GOTH_DESCRIPTOR     output_rac,                              GOTH_INTEGER        nsource_racs,                              GOTH_DESCRIPTOR     source_racs[],                              VOID_P              out_buffer,                              VOID_P              input_buffer[],                              GOTH_INTEGER        buffsize1,                              GOTH_INTEGER        buffsize2,                              GOTH_REAL           low1,                              GOTH_REAL           low2,                              GOTH_REAL           high1,                              GOTH_REAL           high2,                              GOTH_BOOLEAN        unknown[],                              GOTH_BOOLEAN        boundary[],                              GOTH_INTEGER        clipping[][4],                              GOTH_INTEGER        ntile_params,                              GOTH_VALUE          tile_params[]                             );/*----------------------------------------------------------------------*//* EXTERN trn_tran_init                                                 *//*......................................................................*//*..DESCRIPTION.........................................................*//*                                                                      *//*  Make available the functions defined in the TRNLIB library.         *//*  Functions in the TRNLIB library are held in central dictionaries    *//*  which are referenced by name. The dictionary entry holds prototyping*//*  information for the functions and the actual C address of the named *//*  function. Other libraries (e.g. RASTERLIB) contain interfaces which *//*  allow these functions to be invoked through their name and attached *//*  to data processing utilities.                                       *//*                                                                      */ /*  This routine registers the TRNLIB functionality with the central    *//*  dictionaries.                                                       *//*                                                                      */ /*..ARGUMENTS...........................................................*//*                                                                      *//*..RETURN-CODES........................................................*//*                                                                      *//*  GOTH__NORMAL if operation completes successfully                    *//*  GOTH__MALLOC if insufficient memory for the operation               *//*                                                                      *//*----------------------------------------------------------------------*/extern GOTH_STATUS  trn_tran_init();/*****************************************************************************//*   RESCALE     RESCALE     RESCALE     RESCALE     RESCALE     RESCALE     *//*****************************************************************************//*----------------------------------------------------------------------*//* EXTERN trn_rescale_affine						*//*......................................................................*//*..DESCRIPTION.........................................................*//*									*//* function adjusts an affine transform to correspond to rescaled and	*//* offset source and target coordinates. The affine transform is :	*//*									*//* x' =  a[0]*y + a[1]*x + a[2]						*//* y' =  a[3]*y + a[4]*x + a[5]						*//*									*//* (coefficient storage is compatible with that used in TRNLIB)		*//*									*//* The new coordinates are :						*//*									*//* X = s[1]*x + o[1]            ,        X' = s[1]'*x' + o[1]'		*//* Y = s[2]*y + o[2]            ,        Y' = s[2]'*y' + o[2]'		*//*									*//* Note affine --> affine						*//*									*//*..ARGUMENTS...........................................................*//*									*//* in_coeffs	- in	- array containing transform coefficients to be	*//*			  adjusted, 6 coefficients required 		*//* scale_x_in	- in	- scaling factor for source x coordinate	*//* scale_y_in	- in	- scaling factor for source y coordinate	*//* offset_x_in	- in	- offset for scaled source x coordinate		*//* offset_y_in	- in	- offset for scaled source y coordinate		*//* out_coeffs	- in	- array to hold adjusted transform coefficients */ /* scale_x_out	- in	- scaling factor for target x coordinate	*//* scale_y_out	- in	- scaling factor for target y coordinate	*//* offset_x_out	- in	- offset for scaled target x coordinate		*//* offset_y_out	- in	- offset for scaled target y coordinate		*//*									*//*..RETURN-CODES........................................................*//*									*//* GOTH__NORMAL								*//*									*//*----------------------------------------------------------------------*/extern GOTH_STATUS trn_rescale_affine(GOTH_VALUE in_coeffs[],				      GOTH_REAL  scale_x_in,				      GOTH_REAL  scale_y_in,				      GOTH_REAL  offset_x_in,				      GOTH_REAL  offset_y_in,				      GOTH_VALUE out_coeffs[],				      GOTH_REAL  scale_x_out,				      GOTH_REAL  scale_y_out,				      GOTH_REAL  offset_x_out,				      GOTH_REAL  offset_y_out);/*----------------------------------------------------------------------*//* EXTERN trn_rescale_bilinear						*//*......................................................................*//*..DESCRIPTION.........................................................*//*									*//* function adjusts an bilinear transform to correspond to rescaled and	*//* offset source and target coordinates. The bilinear transform is :	*//*									*//* x' = a[0]*x*y + a[1]*y + a[2]*x + a[3]				*//* y' = a[4]*x*y + a[5]*y + a[6]*x + a[7]				*//*									*//* (coefficient storage is compatible with that used in TRNLIB)		*//*									*//* The new coordinates are :						*//*									*//* X = s[1]*x + o[1]            ,        X' = s[1]'*x' + o[1]'		*//* Y = s[2]*y + o[2]            ,        Y' = s[2]'*y' + o[2]'		*//*									*//* Note bilinear --> bilinear						*//*									*//*..ARGUMENTS...........................................................*//*									*//* in_coeffs	- in	- array containing transform coefficients to be	*//*			  adjusted, 8 coefficients required 		*//* scale_x_in	- in	- scaling factor for source x coordinate	*//* scale_y_in	- in	- scaling factor for source y coordinate	*//* offset_x_in	- in	- offset for scaled source x coordinate		*//* offset_y_in	- in	- offset for scaled source y coordinate		*//* out_coeffs	- in	- array to hold adjusted transform coefficients */ /* scale_x_out	- in	- scaling factor for target x coordinate	*//* scale_y_out	- in	- scaling factor for target y coordinate	*//* offset_x_out	- in	- offset for scaled target x coordinate		*//* offset_y_out	- in	- offset for scaled target y coordinate		*//*									*//*..RETURN-CODES........................................................*//*									*//* GOTH__NORMAL								*//*									*//*----------------------------------------------------------------------*/extern GOTH_STATUS trn_rescale_bilinear(GOTH_VALUE in_coeffs[],					GOTH_REAL  scale_x_in,					GOTH_REAL  scale_y_in,					GOTH_REAL  offset_x_in,					GOTH_REAL  offset_y_in,					GOTH_VALUE out_coeffs[],					GOTH_REAL  scale_x_out,					GOTH_REAL  scale_y_out,					GOTH_REAL  offset_x_out,					GOTH_REAL  offset_y_out);/*----------------------------------------------------------------------*//* EXTERN trn_rescale_projective_4pt					*//*......................................................................*//*..DESCRIPTION.........................................................*//*									*//* function adjusts a projective four point transform to correspond to	*//* rescaled and	offset source and target coordinates. The projective	*//* four point transform is :						*//*									*//* x' = (a[0]*y + a[1]*x + a[2]) / (1 + a[6]*y + a[7]*x)		*//* y' = (a[3]*y + a[4]*x + a[5]) / (1 + a[6]*y + a[7]*x)		*//*									*//* (coefficient storage is compatible with that used in TRNLIB)		*//*									*//* The new coordinates are :						*//*									*//* X = s[1]*x + o[1]            ,        X' = s[1]'*x' + o[1]'		*//* Y = s[2]*y + o[2]            ,        Y' = s[2]'*y' + o[2]'		*//*									*//* Note projective four point --> projective four point			*//*									*//*..ARGUMENTS...........................................................*//*									*//* in_coeffs	- in	- array containing transform coefficients to be	*//*			  adjusted, 8 coefficients required 		*//* scale_x_in	- in	- scaling factor for source x coordinate	*//* scale_y_in	- in	- scaling factor for source y coordinate	*//* offset_x_in	- in	- offset for scaled source x coordinate		*//* offset_y_in	- in	- offset for scaled source y coordinate		*//* out_coeffs	- in	- array to hold adjusted transform coefficients */ /* scale_x_out	- in	- scaling factor for target x coordinate	*//* scale_y_out	- in	- scaling factor for target y coordinate	*//* offset_x_out	- in	- offset for scaled target x coordinate		*//* offset_y_out	- in	- offset for scaled target y coordinate		*//*									*//*..RETURN-CODES........................................................*//*									*//* GOTH__NORMAL								*//*									*//*----------------------------------------------------------------------*/extern GOTH_STATUS trn_rescale_projective_4pt(GOTH_VALUE in_coeffs[],					      GOTH_REAL  scale_x_in,					      GOTH_REAL  scale_y_in,					      GOTH_REAL  offset_x_in,					      GOTH_REAL  offset_y_in,					      GOTH_VALUE out_coeffs[],					      GOTH_REAL  scale_x_out,					      GOTH_REAL  scale_y_out,					      GOTH_REAL  offset_x_out,					      GOTH_REAL  offset_y_out);/*----------------------------------------------------------------------*//* EXTERN trn_rescale_second_order					*//*......................................................................*//*..DESCRIPTION.........................................................*//*									*//* function adjusts a second order transform to correspond to rescaled	*//* and offset source and target coordinates. The second order transform *//* is :									*//*									*//* x' = a[0]*y*y + a[1]*y*x + a[2]*y + a[3]*x*x + a[4]*x  + a[5]	*//* y' = a[6]*y*y + a[7]*y*x + a[8]*y + a[9]*x*x + a[10]*x + a[11]	*//*									*//* (coefficient storage is compatible with that used in TRNLIB)		*//*									*//* The new coordinates are :						*//*									*//* X = s[1]*x + o[1]            ,        X' = s[1]'*x' + o[1]'		*//* Y = s[2]*y + o[2]            ,        Y' = s[2]'*y' + o[2]'		*//*									*//* Note second order --> second order					*//*									*//*..ARGUMENTS...........................................................*//*									*//* in_coeffs	- in	- array containing transform coefficients to be	*//*			  adjusted, 12 coefficients required 		*//* scale_x_in	- in	- scaling factor for source x coordinate	*//* scale_y_in	- in	- scaling factor for source y coordinate	*//* offset_x_in	- in	- offset for scaled source x coordinate		*//* offset_y_in	- in	- offset for scaled source y coordinate		*//* out_coeffs	- in	- array to hold adjusted transform coefficients */ /* scale_x_out	- in	- scaling factor for target x coordinate	*//* scale_y_out	- in	- scaling factor for target y coordinate	*//* offset_x_out	- in	- offset for scaled target x coordinate		*//* offset_y_out	- in	- offset for scaled target y coordinate		*//*									*//*..RETURN-CODES........................................................*//*									*//* GOTH__NORMAL								*//*									*//*----------------------------------------------------------------------*/extern GOTH_STATUS trn_rescale_second_order(GOTH_VALUE in_coeffs[],					    GOTH_REAL  scale_x_in,					    GOTH_REAL  scale_y_in,					    GOTH_REAL  offset_x_in,					    GOTH_REAL  offset_y_in,					    GOTH_VALUE out_coeffs[],					    GOTH_REAL  scale_x_out,					    GOTH_REAL  scale_y_out,					    GOTH_REAL  offset_x_out,					    GOTH_REAL  offset_y_out);/*----------------------------------------------------------------------*//* EXTERN trn_rescale_third_order					*//*......................................................................*//*..DESCRIPTION.........................................................*//*									*//* function adjusts a third order transform to correspond to rescaled	*//* and offset source and target coordinates. The third order transform	*//* is :									*//*									*//* x' = a[0]*y*y*y  + a[1]*x*y*y  + a[2]*x*x*y  + a[3]*x*x*x		*//*    + a[4]*y*y    + a[5]*x*y    + a[6]*x*x    + a[7]*y		*//*    + a[8]*x      + a[9] 						*//*									*//* y' = a[10]*y*y*y + a[11]*x*y*y + a[12]*x*x*y + a[13]*x*x*x		*//*    + a[14]*y*y   + a[15]*x*y   + a[16]*x*x   + a[17]*y		*//*    + a[18]*x     + a[19]						*//*									*//* (coefficient storage is compatible with that used in TRNLIB)		*//*									*//* The new coordinates are :						*//*									*//* X = s[1]*x + o[1]            ,        X' = s[1]'*x' + o[1]'		*//* Y = s[2]*y + o[2]            ,        Y' = s[2]'*y' + o[2]'		*//*									*//* Note third order --> third order					*//*									*//*..ARGUMENTS...........................................................*//*									*//* in_coeffs	- in	- array containing transform coefficients to be	*//*			  adjusted, 20 coefficients required 		*//* scale_x_in	- in	- scaling factor for source x coordinate	*//* scale_y_in	- in	- scaling factor for source y coordinate	*//* offset_x_in	- in	- offset for scaled source x coordinate		*//* offset_y_in	- in	- offset for scaled source y coordinate		*//* out_coeffs	- in	- array to hold adjusted transform coefficients */ /* scale_x_out	- in	- scaling factor for target x coordinate	*//* scale_y_out	- in	- scaling factor for target y coordinate	*//* offset_x_out	- in	- offset for scaled target x coordinate		*//* offset_y_out	- in	- offset for scaled target y coordinate		*//*									*//*..RETURN-CODES........................................................*//*									*//* GOTH__NORMAL		- transformation has been successfully adjusted	*//* GOTH__ERROR		- shouldn't happen				*//*									*//*----------------------------------------------------------------------*/extern GOTH_STATUS trn_rescale_third_order(GOTH_VALUE in_coeffs[],					   GOTH_REAL  scale_x_in,					   GOTH_REAL  scale_y_in,					   GOTH_REAL  offset_x_in,					   GOTH_REAL  offset_y_in,					   GOTH_VALUE out_coeffs[],					   GOTH_REAL  scale_x_out,					   GOTH_REAL  scale_y_out,					   GOTH_REAL  offset_x_out,					   GOTH_REAL  offset_y_out);/*----------------------------------------------------------------------*//* EXTERN trn_rescale_biquad						*//*......................................................................*//*..DESCRIPTION.........................................................*//*									*//* function adjusts a bi-quadratic transform to correspond to rescaled	*//* and offset source and target coordinates. The bi-quadratic transform	*//* is :									*//*									*//* x' =   a[0]*yy  + a[1]*xyy  + a[2]*xxyy  + a[3]*xxy  + a[4]*xx	*//*      + a[5]*y   + a[6]*xy   + a[7]*x     + a[8]                      *//*									*//* y' =   a[9]*yy  + a[10]*xyy + a[11]*xxyy + a[12]*xxy + a[13]*xx      *//*      + a[14]*y  + a[15]*xy  + a[16]*x    + a[17]                     *//*									*//* (coefficient storage is compatible with that used in TRNLIB)		*//*									*//* The new coordinates are :						*//*									*//* X = s[1]*x + o[1]            ,        X' = s[1]'*x' + o[1]'		*//* Y = s[2]*y + o[2]            ,        Y' = s[2]'*y' + o[2]'		*//*									*//* bi-quadratic --> bi-quadratic					*//*									*//*..ARGUMENTS...........................................................*//*									*//* in_coeffs	- in	- array containing transform coefficients to be	*//*			  adjusted, 18 coefficients required 		*//* scale_x_in	- in	- scaling factor for source x coordinate	*//* scale_y_in	- in	- scaling factor for source y coordinate	*//* offset_x_in	- in	- offset for scaled source x coordinate		*//* offset_y_in	- in	- offset for scaled source y coordinate		*//* out_coeffs	- in	- array to hold adjusted transform coefficients */ /* scale_x_out	- in	- scaling factor for target x coordinate	*//* scale_y_out	- in	- scaling factor for target y coordinate	*//* offset_x_out	- in	- offset for scaled target x coordinate		*//* offset_y_out	- in	- offset for scaled target y coordinate		*//*									*//*..RETURN-CODES........................................................*//*									*//* GOTH__NORMAL		- transformation has been successfully adjusted	*//* GOTH__ERROR		- shouldn't happen				*//*									*//*----------------------------------------------------------------------*/extern GOTH_STATUS trn_rescale_biquad(GOTH_VALUE in_coeffs[],				      GOTH_REAL  scale_x_in,				      GOTH_REAL  scale_y_in,				      GOTH_REAL  offset_x_in,				      GOTH_REAL  offset_y_in,				      GOTH_VALUE out_coeffs[],				      GOTH_REAL  scale_x_out,				      GOTH_REAL  scale_y_out,				      GOTH_REAL  offset_x_out,				      GOTH_REAL  offset_y_out);/*----------------------------------------------------------------------*//* EXTERN trn_rescale_bicubic						*//*......................................................................*//*..DESCRIPTION.........................................................*//*									*//* function adjusts a bi-cubic transform to correspond to rescaled	*//* and offset source and target coordinates. The bi-cubic transform	*//* is :									*//*									*//* x' = a[0]*yyy   + a[1]*xyyy  + a[2]*xxyyy  + a[3]*xxxyyy  + a[4]*xxxyy   *//*    + a[5]*xxxy  + a[6]*xxx   + a[7]*yy     + a[8]*yyx     + a[9]*yyxx    *//*    + a[10]*yxx  + a[11]*xx   + a[12]*y     + a[13]*xy     + a[14]*x      *//*    + a[15]                                                               *//*									    *//* y' = a[16]*yyy  + a[17]*xyyy + a[18]*xxyyy + a[19]*xxxyyy + a[20]*xxxyy  *//*    + a[21]*xxxy + a[22]*xxx  + a[23]*yy    + a[24]*yyx    + a[25]*yyxx   *//*    + a[26]*yxx  + a[27]*xx   + a[28]*y     + a[29]*xy     + a[30]*x      *//*    + a[31]                                                               *//*									*//* (coefficient storage is compatible with that used in TRNLIB)		*//*									*//* The new coordinates are :						*//*									*//* X = s[1]*x + o[1]            ,        X' = s[1]'*x' + o[1]'		*//* Y = s[2]*y + o[2]            ,        Y' = s[2]'*y' + o[2]'		*//*									*//* bi-cubic --> bi-cubic						*//*									*//*..ARGUMENTS...........................................................*//*									*//* in_coeffs	- in	- array containing transform coefficients to be	*//*			  adjusted, 32 coefficients required 		*//* scale_x_in	- in	- scaling factor for source x coordinate	*//* scale_y_in	- in	- scaling factor for source y coordinate	*//* offset_x_in	- in	- offset for scaled source x coordinate		*//* offset_y_in	- in	- offset for scaled source y coordinate		*//* out_coeffs	- in	- array to hold adjusted transform coefficients */ /* scale_x_out	- in	- scaling factor for target x coordinate	*//* scale_y_out	- in	- scaling factor for target y coordinate	*//* offset_x_out	- in	- offset for scaled target x coordinate		*//* offset_y_out	- in	- offset for scaled target y coordinate		*//*									*//*..RETURN-CODES........................................................*//*									*//* GOTH__NORMAL		- transformation has been successfully adjusted	*//* GOTH__ERROR		- shouldn't happen				*//*									*//*----------------------------------------------------------------------*/extern GOTH_STATUS trn_rescale_bicubic(GOTH_VALUE in_coeffs[],				       GOTH_REAL  scale_x_in,				       GOTH_REAL  scale_y_in,				       GOTH_REAL  offset_x_in,				       GOTH_REAL  offset_y_in,				       GOTH_VALUE out_coeffs[],				       GOTH_REAL  scale_x_out,				       GOTH_REAL  scale_y_out,				       GOTH_REAL  offset_x_out,				       GOTH_REAL  offset_y_out);/*>>> EXTERN functions from TRN_SPACE_INIT.C <<<*//*----------------------------------------------------------------------*//* EXTERN trn_trans_kind_init						*//*......................................................................*//*..DESCRIPTION.........................................................*//* 									*//* This routine assumes "space_init" has been called			*//*									*//* Routine to add all the trans kinds in TRNLIB to the space database	*//*									*//*..ARGUMENTS...........................................................*//*									*//*									*//*..RETURN-CODES........................................................*//* GOTH__NORMAL for success						*//* otherwise error codes returned by spacelib				*//*									*//*----------------------------------------------------------------------*/extern GOTH_STATUS trn_trans_kind_init();/*----------------------------------------------------------------------*//* EXTERN trn_space_kind_init						*//*......................................................................*//*..DESCRIPTION.........................................................*//* 									*//* This routine assumes "space_init" has been called			*//*									*//* Routine to add all the space kinds in TRNLIB to the space database	*//* (there is only one - a "Simple" space				*//*									*//*..ARGUMENTS...........................................................*//* None									*//*									*//*..RETURN-CODES........................................................*//* GOTH__NORMAL for success						*//* otherwise error codes returned by spacelib				*//*									*//*----------------------------------------------------------------------*/extern GOTH_STATUS trn_space_kind_init();/*----------------------------------------------------------------------*//* EXTERN trn_space_init						*//*......................................................................*//*..DESCRIPTION.........................................................*//*									*//* This routine is used to inform SPACELIB of the transformation	*//* functions that can be used in TRNLIB.				*//*									*//*..ARGUMENTS...........................................................*//*									*//* None.								*//*									*//*..RETURN-CODES........................................................*//* GOTH__NORMAL		Successful completion.				*//*----------------------------------------------------------------------*/extern GOTH_STATUS trn_space_init();/***************************** EOF ******************************************/#endif