C
C this common block holds the information obtained from a DFAD (Digital
C Feature Analysis Data, it seems) magtape, and is composed of an array
C of 18 bit chunks - each forming half a Univac word (of 36 bits)
C
C the length of the buffer is:
C
	PARAMETER	DFAMAX = 1204	! 602 36bit words
C
C and the maximum number of stripes we may read from the tape is:
C
	PARAMETER	INLEN  = 2709
C
C
C We read from the magtape into a simple byte buffer
C
	BYTE		BYTBUF( INLEN )
C
C and we have a fill counter, which records how many stripes we read
C
	INTEGER*2	BYTCNT
C
C Then we have the array into which our 36bit words will be decoded:
C
C the actual array is lots of 32 bit longwords, of which we only
C use the bottom 18 bits...
C in each pair, DFABUF(N) is the low half, and DFABUF(N+1) is the high
C half, where N is odd
C
	INTEGER*4	DFABUF( DFAMAX )
C
C and we have a fill pointer into this to tell us how much we have
C filled up (0 => nothing there, not pointing at owt)
C We would expect this to have the value 600 or 4 (feature block or
C manuscript header block)
C
	INTEGER*4	DFALEN
C
C and a current pointer to tell us which place we are considering now
C This pointer is in 1/2 words - it will normally point to the low
C half of the word to be read next (ie to the Nth cell), and will thus
C always be ODD
C
	INTEGER*4	DFAPTR
C
C note that the current Univac word accessed in the buffer will always
C be  (DFAPTR+1)/2  (integer division)
C
C also note that we should be able to tell if we have finished the
C current block by testing if DFAPTR.GT.DFALEN (after reading the
C last word in the buffer, and incrementing DFAPTR, then DFAPTR
C should be DFALEN+1)
C
C and we must have a common block for all of this:
C
	COMMON /DFAD/   BYTBUF,  BYTCNT,
     &			DFAPTR, DFALEN, DFABUF
C
