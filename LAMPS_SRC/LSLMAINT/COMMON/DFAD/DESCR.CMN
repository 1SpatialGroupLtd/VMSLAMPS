C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1983-08-26 19:54:44.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
C
C Used by I2DFAD as well as DFAD2I
C this common block holds the description of the current feature,
C built up as it is read from /DFAD/ common by FEATUR, etc.
C
C the maximum number of points to be held in a feature is...
C
	PARAMETER	MAXST = 8191
C
C
C NOTE that:
C
C   1)	linear dimensions are in units of 2 metres on the tape, values
C	between -511 and +511.
C
C   2)	angular dimensions are in units of 11.25 degrees on the tape,
C	values between 0 and 31, or 63 for omnidirectional point
C	features.
C
C	OMNI is set true for omnidirectional point features
C
C   3)	percentages are in units of 10% on the tape, values between
C	0 and 10.
C
C   All these strange storage conventions are retained in 
C   the IFF files produced, except for HEIGHT which is stored
C   in real metres.
C
C 	A notation of (*1) refers to NOTE 1 above, etc
C
C
C the following are common to all features...
C
	INTEGER*4	FAC	! Feature Analysis Code
C				! 		(1- 9999 in change 2
C				!	      or 1-16383 in change 3)
	INTEGER*4	FTYPE	! Feature type	0 -> point feature
C				!		1 -> linear
C				!		2 -> area
C				!		3 -> padding feature
	INTEGER*4	HEIGHT	! predominant height		(*1)
	INTEGER*4	FID	! Feature ID code		(1-980)
	INTEGER*4	SECRTY	! Security code			(0-99)
	INTEGER*4	RELEAS	! Releasability code		(0-99)
	INTEGER*4	SURFAM	! Surface material category	(1-13)
C
C and we may also need -
C
C for point features only
C
	INTEGER*4	ORIENT	! orientation for symbol	(*2)
	LOGICAL*4	OMNI	! true for omnidirectional feature
	INTEGER*4	LENGTH	! of point feature		(*1)
C
C for point and linear features
C
	INTEGER*4	WIDTH	! of feature			(*1)
C
C for linear features
C
	INTEGER*4	DIRECT	! directivity
C				!	1 - unidirectional
C				!	2 - bidirectional
C				!	3 - omnidirectional
C
C for area features
C
	INTEGER*4	DENSTY	! structures per area	(0-13)
	INTEGER*4	TREE	! % tree coverage	(*3)
	INTEGER*4	ROOF	! % roof coverage	(*3)
C
C and we have points to describe the feature...
C
C each digitised point is latitude (X) or longitude (Y) in integer
C tenths of a second with respect to the map origin
C
	INTEGER*4	STLEN		! number of coordinates wanted
	INTEGER*4	STPTR		! number of coordinates read in
	REAL		STBUF(2,MAXST)	! buffer to hold them
C
C and we work out the actual range of the map and store it here
C
	REAL		RANGE(4)	! range of coordinates
C
C and here we note if this feature has gone to and 'over' the
C edge of the map...
C
	LOGICAL		EXTERN		! true if goes external
C
C
C and common to hold things in...
C
	COMMON /DESCR/  FAC,    FTYPE, HEIGHT, FID,
     &			SECRTY, RELEAS,SURFAM,
     &			ORIENT, OMNI,  LENGTH, WIDTH, DIRECT,
     &			DENSTY, TREE,  ROOF,
     &			STLEN,  STPTR, STBUF,
     &			RANGE,  EXTERN
C
