C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1984-12-05 00:04:36.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
C Common block holding command arguments and other control
C
	INTEGER*4	INTARG(8)
	REAL		REALAR(8)
	INTEGER*2	CMDNLE,SECNLE,STARLE
	INTEGER*4	CMDNST(2),SECNST(2),STARST(2)
	INTEGER*4	CMDFST(2)	! copy of 'descriptor' for
C					!  command actually found
	INTEGER*4	CMSFST(2)	! ditto for secondary command
	INTEGER*4	CMDAST(2)	! copy of same for subject
C					!  of any ambiguity
	INTEGER*4	CMDNUM
	INTEGER*4	TABFLG,CMDFLG
	INTEGER*4	SECMDN		! secondary command number
	INTEGER*4	SECTAB		! table secondary command is to
C					!   be looked up in
	INTEGER*4	CMDACT,CMDICT,CMDRCT
	INTEGER*4	ERRNUM
	INTEGER*4	DEFBASE
	LOGICAL*4	RDCOMM_EXCP
	LOGICAL*1	ARGMSG,CMDNEG,HADDOT,NOMESS
	BYTE		INEQUAL
	LOGICAL*1	NOUFLG		! TRUE => no user flags with
C					!	  this table
	LOGICAL*1	NSUFLG		! ditto for 2ndary table
	BYTE		UNXCHR		! 'unexpected character' that
C					!   would be output for error
C					!   messages
	INTEGER*4	UFLAG		! user flag found, if any
	INTEGER*4	SUFLAG		! secondary table user flag
C
	COMMON /CMDCOM/	INTARG,REALAR,
     &			CMDNST,SECNST,STARST,
     &			CMDFST,CMSFST,CMDAST,
     &			CMDNUM,TABFLG,CMDFLG,
     &			SECMDN,SECTAB,
     &			CMDACT,CMDICT,CMDRCT,
     &			ERRNUM,
     &			DEFBASE,
     &			RDCOMM_EXCP,
     &			ARGMSG,CMDNEG,HADDOT,NOMESS,
     &			INEQUAL,
     &			NOUFLG,NSUFLG,UNXCHR,UFLAG,SUFLAG
C
	EQUIVALENCE (CMDNLE,CMDNST)
	EQUIVALENCE (SECNLE,SECNST)
	EQUIVALENCE (STARLE,STARST)
C
C INTARG,REALAR hold arguments found
C
C CMDNST is a descriptor for the command string
C	 (CMDNLE is the length part of it)
C SECNST is a descriptor for any secondary command name string
C	 (SECNLE is the length part of it)
C STARST is a descriptor for the staring argument string
C	 (STARLE is the length part of it)
C
C CMDNUM is the 'number' of the command read, as returned by FINCMD
C	 (it's also what's returned by RDCOMM)
C
C TABFLG holds table flags from the last table used for command look-up
C CMDFLG holds command flags from the last command actually found
C
C CMDACT is the total argument count from last successful command
C	 (integers, reals, and strings)
C CMDICT is the count of integer arguments (...)
C CMDRCT is the count of real argument (...)
C
C ERRNUM is the number of the error encountered by RDCOMM (0=>no error)
C
C DEFBASE is the default base to use in reading integer arguments
C	  (0=>decimal)
C
C RDCOMM_EXCP is set to the exception that happened, by RDCOMM_CHAND,
C	      if it was an arithmetic error of any sort
C
C ARGMSG is TRUE iff an argument was missing from the last command read
C CMDNEG is TRUE iff the last command had a logical argument '-'
C HADDOT is TRUE iff some real argument couldn't have been an integer
C NOMESS is FALSE if RDCOMM is to produce error messages, TRUE if not
C
C INEQUAL is the inequality to be satisfied by the command argument
C	=0 => no inequality, or '='
C	=1 => '>'
C	=2 => '>='
C	=3 => '<'
C	=4 => '<='
C	=5 => '<>' (not equal)
C
C Parameters defining error numbers to return in ERRNUM
C
	PARAMETER	ERRUXS = 1	! unexpected string
	PARAMETER	ERSUXS = 2	! 2ndary unexpected string
	PARAMETER	ERRUXC = 3	! unexpected character
	PARAMETER	ERREOL = 4	! unexpected end of line
	PARAMETER	ERRAMB = 5	! command name ambiguous
	PARAMETER	ERSAMB = 6	! 2ndary command name ambiguous
	PARAMETER	ERRFDV = 7	! floating division overflow
	PARAMETER	ERRFOV = 8	! floating overflow
	PARAMETER	ERRFUN = 9	! floating underflow
	PARAMETER	ERRIDV = 10	! integer division overflow
	PARAMETER	ERRIOV = 11	! integer overflow
	PARAMETER	ERRBEX = 12	! bad exception code
	PARAMETER	ERRBIQ = 13	! bad FORTRAN-style
C					!	inequality name
