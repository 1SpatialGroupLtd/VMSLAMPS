C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1986-07-04 12:08:28.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
C
C common block for holding the constituent parts of the file-name
C which has been read in by RDFILN, using FILE_PARSE
C
C first, define the lengths of the various strings...
C
	PARAMETER	C_NOD_SIZ = 6
	PARAMETER	C_DEV_SIZ = 20
	PARAMETER	C_DIR_SIZ = 100
	PARAMETER	C_NAM_SIZ = 39
	PARAMETER	C_EXT_SIZ = 39
	PARAMETER	C_VER_SIZ = 6
C
C and define the maximum length we may thus have for a filename
C (the 7 is for the seven punctuation characters -
C these being '::', ':', '[]', '.' and ';')
C
	PARAMETER	C_MAX_SIZ = C_NOD_SIZ + C_DEV_SIZ +
     &				    C_DIR_SIZ + C_NAM_SIZ +
     &				    C_EXT_SIZ + C_VER_SIZ + 7
C
C define some error types (for return from RDFILN itself)
C
	PARAMETER	ERR_NON = 0	! no error
	PARAMETER	ERR_DEF = 1	! error in default string
	PARAMETER	ERR_SRC = 2	! error in source  string
	PARAMETER	ERR_LNG = 3	! final string too long
C
C and now, the resultant strings
C
	CHARACTER*(C_NOD_SIZ)	STR_NOD		! node name
	CHARACTER*(C_DEV_SIZ)	STR_DEV		! device name
	CHARACTER*(C_DIR_SIZ)	STR_DIR		! directory name
	CHARACTER*(C_NAM_SIZ)	STR_NAM		! name string
	CHARACTER*(C_EXT_SIZ)	STR_EXT		! extension
	CHARACTER*(C_VER_SIZ)	STR_VER		! version number
C
C logicals to note if each part was present in the file-name
C
	LOGICAL*4	HAD_NOD
	LOGICAL*4	HAD_DEV
	LOGICAL*4	HAD_DIR
	LOGICAL*4	HAD_NAM
	LOGICAL*4	HAD_EXT
	LOGICAL*4	HAD_VER
C
C and the lengths of the resultant strings (ie how many significant
C characters there are in each string)
C
	INTEGER*4	LEN_NOD
	INTEGER*4	LEN_DEV
	INTEGER*4	LEN_DIR
	INTEGER*4	LEN_NAM
	INTEGER*4	LEN_EXT
	INTEGER*4	LEN_VER
C
C and finally, the common blocks to hold all of these
C
	COMMON/RDFILN_STR/	STR_NOD, STR_DEV, STR_DIR,
     &				STR_NAM, STR_EXT, STR_VER
C
	COMMON/RDFILN_LOG/	HAD_NOD, HAD_DEV, HAD_DIR,
     &				HAD_NAM, HAD_EXT, HAD_VER
C
	COMMON/RDFILN_LEN/	LEN_NOD, LEN_DEV, LEN_DIR,
     &				LEN_NAM, LEN_EXT, LEN_VER
C
