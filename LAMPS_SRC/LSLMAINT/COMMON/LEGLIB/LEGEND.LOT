C
C Legenda-symbol definition setup - this version for multiple-legenda
C leglib (LEGLIB.OLB)
C
	REAL LEGCOS, LEGSIN, LEGSCF
	INTEGER LEGTOP(3),LSTCOD(3),LEGRT(3)
	INTEGER PTLRT,LPLTYP,PTLTYP
	INTEGER CURLEG,LSTLEG
	INTEGER CODAUX(5),CODTYP,CODLEN,CODSIZ,CODSIN,CODPTR
	INTEGER LEGBAS
	REAL SHRFAC
	LOGICAL*1 LEGSHR
C
	COMMON/LEGEND/LEGCOS,LEGSIN,LEGSCF
     & ,LSTCOD,CODAUX
     & ,PTLRT,LPLTYP,PTLTYP
     & ,CURLEG,LSTLEG
     & ,LEGBAS,LEGRT,LEGTOP
     & ,SHRFAC,LEGSHR
C
	EQUIVALENCE (CODAUX(1), CODTYP)
	EQUIVALENCE (CODAUX(2), CODSIZ), (CODAUX(3), CODSIN)
	EQUIVALENCE (CODAUX(4), CODLEN), (CODAUX(5), CODPTR)
C
C LEGCOS and LEGSIN define the orientation of the legenda-
C	 symbol-in-hand
C LEGSCF holds the symbol's scale factor
C LSTCOD is the last code found in the legenda(s)
C CODAUX holds 'auxiliary data' about it, viz:-
C CODTYP, its graphical type,
C CODSIZ its 'size',
C CODSIN its special instruction,
C CODLEN, the length in words of a symbol,
C	  or in bytes of a text, and
C CODPTR, the pointer to the start of buffered information about the code.
C LEGRT is the 'root' pointer to the legenda chain(s)
C PTLRT is the root when first PT legenda starts to be read in
C	=0 if no PT legenda yet read
C LPLTYP, PTLTYP are the last types found in LP,PT legendas
C CURLEG, LSTLEG are the current/last legenda types:-
C	1 = line pattern legenda
C	2 = basic IT code legenda
C	3 = SS legenda
C LEGTOP is one above the top of the buffered legenda
C LEGBAS is the 'base address' of the legenda
C LEGSHR is TRUE if drawing of legenda symbols is to be
C	 sheared by SHRFAC
