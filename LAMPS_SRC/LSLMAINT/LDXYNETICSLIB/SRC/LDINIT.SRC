C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1988-06-10 13:42:30.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE LDINIT(ACTION,DUMMY1,TYPE)
C
***	IDENT	09JN88
***	MODULE	LDINIT
C
C	Copyright LaserScan Laboratories Ltd., Cambridge, England
C
C LDLIB lookalike for XYNETICS plotter
C
C to initialise plotting device
C
C Author R.W. Russell					 26-May-1988
C
	IMPLICIT	NONE
C
C arguments
C
	INTEGER		ACTION		! = 0 for close
					!   otherwise open
	INTEGER		DUMMY1		! ignored
	INTEGER		TYPE		! workstation type
C
C common blocks
C
***	PARAMETER/LSL$CMNLSL:LSLLIBMSG/
***	PARAMETER/CMN:CODES/
C
***	COMMON/CMN:XYNETICSCMN/
***	COMMON/LSL$CMNLSL:MTOVCM/
C
C w/s
	INTEGER		IERR
	LOGICAL		STATUS
	CHARACTER*80	DUMMY
	BYTE		HEADER(12)
	INTEGER		TAPNUM		
C
C text to insert into the tape header
C
	DATA HEADER/'L','S','L',' ',
     &              'X','Y','N','E','T','I','C','S'/
	DATA		TAPNUM/999/
C
C functions
C
	LOGICAL		TRNALL
	INTEGER		MTONIT
	INTEGER		MTOEOF
	INTEGER		MTOWRB
	INTEGER		EXPAND
C
C initialise or close?
C
	IF (ACTION.EQ.0) GOTO 500
C
C get workstation type
	   WTYPE=TYPE-100
C
C initialise plotting table (ie tape drive) (at 1600 bpi)
	STATUS = MTONIT(OUT_NAM,.TRUE.,.FALSE.,0)
	IF (.NOT.STATUS) THEN
	   IF (STATUS.EQ.LSL__NOSUCHDEV) THEN
	      CALL LSL_PUTMSG(LSL__NOSUCHDEV)
	      CALL LSL_ADDMSG(MTOERR)
	   ELSE
	      CALL LSL_PUTMSG(MTOERR)
	   ENDIF
	   GOTO 1000
	ENDIF
C
C if the logical name LSL$FPP_HEADER_ICL is set up, then write
C an ICL header to the tape
C
	IF (TRNALL(HEADER_FLAG,DUMMY)) THEN
C
C note - could ask for TAPNUM and HEADER if necessary
C
C construct a header
	   CALL ICLHDR(TAPNUM,HEADER,0,0,4095,OUTBUF)
C
C write it out
	   STATUS = MTOWRB(OUTBUF,60)
	   IF (.NOT.STATUS) THEN
	      IF (STATUS.EQ.LSL__ENDOFTAPE) THEN
	         CALL LSL_PUTMSG(LSL__ENDOFTAPE)
	      ELSE
	         CALL LSL_PUTMSG(MTOERR)
	      ENDIF
	      GOTO 1000
	   ENDIF
C
C write out tape mark
 	   STATUS = MTOEOF()			! write a tape mark
	   IF (.NOT.STATUS) THEN
	      IF (STATUS.EQ.LSL__ENDOFTAPE) THEN
	         CALL LSL_PUTMSG(LSL__ENDOFTAPE)
	      ELSE
	         CALL LSL_PUTMSG(MTOERR)
	      ENDIF
	      GOTO 1000
	   ENDIF
	ENDIF
C
C initialise first block with a skip record
	CALL OUTBYT(NOP)	! initialise OUTBUF with a
	CALL OUTBYT(NOP)	! skip block
C
	FSTUNT=.TRUE.		! haven't output this block
C
C initialise current position 
C
	CURRX = 0
	CURRY = 0
	MAXX  = 0.0
C
C reset relative to origin
	CALL RSTBST
C
C make this point origin
	CALL RSTOST
C
C now set up defaults in common block
C
	CURPEN = -1		! ensure that first call of pen is obeyed
	NOPEN = DEF_PEN		! default number of pens	
	PLOTNO = 1
	BLKNO  = 1
C
C send console message 'PLOT nnn'
	CALL MESSST(EXPAND('PLOT'))
	CALL MESSST(EXPAND('%P0%I3',PLOTNO))
C
C make sure pen is up
	CALL PENST(UP)
C
C finished
C
	GOTO 1000
C
C close plotting table
C
  500	CONTINUE
C
C move to origin
	CALL MOVTO(0,0)
	CALL RSTOST
C
C sheet or roll?
	IF ((WTYPE.AND.SHEET).NE.0) THEN
	   IF (FSTUNT) CALL OUTREC
	   CALL OUTBYT(NOP)
	   CALL OUTBYT(PAUSE)
	ELSE
C
C advance paper (2 cm past end of plot)
	   CALL ROLLST(MAXX + 2.0/2.54*1000)
	ENDIF
C
C end of plot
	IF (FSTUNT) CALL OUTREC
	CALL OUTBYT(NOP)
	CALL OUTBYT(ENDD)
C
C output last block and a tape mark
	CALL LSTBLK
	STATUS = MTOEOF()
	IF (.NOT.STATUS) THEN
	   IF (STATUS.EQ.LSL__ENDOFTAPE) THEN
	      CALL LSL_PUTMSG(LSL__ENDOFTAPE)
	   ELSE
	      CALL LSL_PUTMSG(MTOERR)
	   ENDIF
	   GOTO 1000
	ENDIF
C
C output dummy plot
	CALL DUMPLT
	CALL LSTBLK
	STATUS = MTOEOF()
	IF (.NOT.STATUS) THEN
	   IF (STATUS.EQ.LSL__ENDOFTAPE) THEN
	      CALL LSL_PUTMSG(LSL__ENDOFTAPE)
	   ELSE
	      CALL LSL_PUTMSG(MTOERR)
	   ENDIF
	   GOTO 1000
	ENDIF
C
	GOTO 1000
C
 1000	RETURN
	END

