C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1988-06-06 11:05:02.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE DIFRAM
C
***	IDENT	06JN88
***	MODULE	DIFRAM
C
C	Copyright LaserScan Laboratories Ltd., Cambridge, England
C
C LDLIB lookalike for XYNETICS plotter
C
C to clear screen/advance film
C
C Author R.W. Russell					 26-May-1988
C
	IMPLICIT	NONE
C
***	PARAMETER/LSL$CMNLSL:LSLLIBMSG/
***	PARAMETER/CMN:CODES/
C
***	COMMON/CMN:XYNETICSCMN/
***	COMMON/LSL$CMNLSL:MTOVCM/
C
C funtions called
	INTEGER		MTOEOF
	INTEGER		EXPAND
C
C w/s
	INTEGER		STATUS
	INTEGER		OLDPEN
C
C remember what current pen is
	OLDPEN = CURPEN
C
C move to origin
	CALL MOVTO(0,0)
	CALL RSTOST
C
C sheet or roll?
	IF ((WTYPE.AND.SHEET).NE.0) THEN
	   IF (FSTUNT) CALL OUTREC
	   CALL OUTBYT(NOP)
	   CALL OUTBYT(PAUSE)
	ELSE
C
C advance paper (2 cm past end of plot)
	   CALL ROLLST(MAXX + 2.0/2.54*1000)
	ENDIF
C
C end of plot
	IF (FSTUNT) CALL OUTREC
	CALL OUTBYT(NOP)
	CALL OUTBYT(ENDD)
C
C output last block and a tape mark
	CALL LSTBLK
	STATUS = MTOEOF()
	IF (.NOT.STATUS) THEN
	   IF (STATUS.EQ.LSL__ENDOFTAPE) THEN
	      CALL LSL_PUTMSG(LSL__ENDOFTAPE)
	   ELSE
	      CALL LSL_PUTMSG(MTOERR)
	   ENDIF
	   GOTO 1000
	ENDIF
C
C start of new plot
	PLOTNO = PLOTNO+1
C
C send console message 'PLOT nnn'
	CALL MESSST(EXPAND('PLOT'))
	CALL MESSST(EXPAND('%P0%I3',PLOTNO))
C
C make sure pen is up
	CALL PENST(UP)
C
C initialise current position and reset
C
	CURRX = 0
	CURRY = 0
	MAXX  = 0.0
C
C reset relative to origin
	CALL RSTBST
C
C make this point origin
	CALL RSTOST
C
C make a call to PEN. FPP does not necessarily do this, and all this
C resetting may have reset the plotter
	CURPEN = -1			! to force a change
	CALL PEN(OLDPEN)
C
1000	RETURN
	END
