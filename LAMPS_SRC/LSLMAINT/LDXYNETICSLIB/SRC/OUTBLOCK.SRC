	SUBROUTINE OUTBLOCK
C
***	MODULE OUTBLOCK
***	IDENT  03JN88
C
C	Copyright LaserScan Laboratories Ltd., Cambridge, England
C
	IMPLICIT NONE
C
C taken from I2X for LDXYNETICSLIB, 		RWR	2-Jun-1988
C
C the last block of a plot has bit "40 clear, and all others have it
C set.
C unfilled blocks are padded out to 512 bytes, the minimum length being
C 2 bytes (the first 2 header bytes)
C blocks are then written to the mag tape,and a new skip block created
C
***	PARAMETER/CMN:CODES/
***	PARAMETER/LSL$CMNLSL:LSLLIBMSG/
C
***	COMMON/CMN:XYNETICSCMN/
***	COMMON/LSL$CMNLSL:MTOVCM/
C
C w/s
C
	INTEGER 	I
	INTEGER		BLKL3	! BLKLEN+n so that divisible by 3
	INTEGER*4	DESTN	! to store compacted bytes
	INTEGER		STATUS
C
C functions
	INTEGER		MTOWRB
C
	OUTBUF(1)=OUTBUF(1).OR.'40'O
C
C *********************************************************************
C
	ENTRY LSTBLK			! entry for the last block
C
C *********************************************************************
C
C check to make sure we have at least the statutory first 2 bytes to
C introduce the block...
C
	IF (OUTLEN.EQ.2) GOTO 40	! is there a block to write out
C
C make sure that we have at least a block of data - we can safely pad
C with zeroes since the data format ensures that we always state how
C many bytes are coming, and unattached zeroes are NOPs
C
	BLKNO = BLKNO + 1
	IF (OUTLEN.LT.BLKLEN) THEN
	   DO 10 I=OUTLEN+1,BLKLEN
	      OUTBUF(I)='00'O		! pad the rest with zeroes
10	   CONTINUE
	ENDIF
C
C and now we must actually write the thing out...
C
C	 standard nine track tape -
C	first add an extra zero byte, since ICL insists that the
C	number of bytes in a block be divisible by 3 (and BLKLEN
C	is 512, in fact, but let us be more general for the fun of
C	it)
C
	BLKL3 = MOD( BLKLEN, 3 )	! number to make up to div by 3
C
	IF (BLKL3.NE.0) THEN
	   BLKL3 = 3 - BLKL3	! 2 => 1  and  1 => 2
	   DO 25 I = 1,BLKL3
	      OUTBUF(BLKLEN+I)="00	! pad with zeroes
25	   CONTINUE
	ENDIF
C
	BLKL3 = BLKLEN + BLKL3	! the resulting buffer length
C
C	and write the buffer out to tape
C
	STATUS = MTOWRB( OUTBUF, BLKL3 )
	IF (.NOT.STATUS) THEN
	   IF (STATUS.EQ.LSL__ENDOFTAPE) THEN
	      CALL LSL_PUTMSG(LSL__ENDOFTAPE)
	   ELSE
	      CALL LSL_PUTMSG(MTOERR)
	   ENDIF
	   GOTO 40
	ENDIF
C
	OUTLEN=2			! set up new skip block
	OUTBUF(1)=NOP
	OUTBUF(2)=NOP
	FSTUNT=.TRUE.
C
40	CONTINUE
	RETURN
	END
