C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1988-06-03 17:18:36.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE OUTREC
C
***	MODULE OUTREC
***	IDENT  03JN88
C
C	Copyright LaserScan Laboratories Ltd., Cambridge, England
C
C taken from I2X for LDXYNETICSLIB, 		RWR	2-Jun-1988
C
	IMPLICIT NONE
C
C deals with the skip block - the two bytes at the start of a block
C containing the number of words in the first record
C
***	PARAMETER/CMN:CODES/
C
***	COMMON/CMN:XYNETICSCMN/
C
C w/s
	LOGICAL		DWN
C
	DWN = .NOT.PUP
	FSTUNT=.FALSE.
	IF ((OUTLEN.AND.1).EQ.1) CALL OUTBYT("00)	! even it up
C
C ignore first two bytes (skip block), and count no. of words remaining
C so split (OUTLEN-2)/2 into two 6 bit bytes
C ie we put down an arg which says how many bytes we need to finish off
C the hangover from the last block - how many bytes before we have the
C start of the first complet operation in this block
C
	OUTBUF(2)=(OUTLEN/2-1).AND."77
	OUTBUF(1)=((OUTLEN/2-1)/"100).AND."77
C
C we can't call PENST or RSTBST - that would be recursing
C
	IF (.NOT.PUP) THEN
	   CALL OUTBYT(NOP)
	   CALL OUTBYT(PENOP)		! put the pen up
	   CALL OUTBYT(UP)
	   PUP=.TRUE.
	ENDIF
C
	STARTED = .FALSE.
C
	CALL OUTBYT(NOP)
	CALL OUTBYT(RESETB)		! reset (new block)
	CALL OUTIP(CURRX,CURRY)		! reset pen position
	CALL OUTBYT(NOP)
C
C if the pen was down before we started, put it down again
	IF (DWN) THEN
	   CALL OUTBYT(PENOP)		! put the pen up
	   CALL OUTBYT(DOWN)
	   PUP=.FALSE.
	ENDIF

C
	RETURN
	END
