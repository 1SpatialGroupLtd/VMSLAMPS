;
; Copyright  Laser-Scan Laboratories Limited, Cambridge, England
; Author:	Paul Hardy
; last edit  22/MAR/82
;
 
; Standard macro definitions for 'useful' macros
 
; define COMMON equivalent to FORTRAN COMMON
 
	.MACRO	COMMON,NAME
	.IF NB	NAME
	.PSECT	NAME,GBL,OVR,PIC,SHR,NOEXE,QUAD
	.IFF
	.PSECT
	.ENDC
	.ENDM
 
; checking macros for bit alignments, etc
 
	.MACRO	ASSUMEQ	SYM,VAL
.IIF NE SYM-VAL, .ERROR		; SYM NE VAL
	.ENDM
 
	.MACRO CKOFF	SYM
	ASSUMEQ	SYM,.
	.ENDM
 
; Copy of system's ASSUME macro

	.MACRO	ASSUME	EXP1,RELATION,EXP2
	.IF	RELATION <<EXP1>-<EXP2>>
	.IFF
	.ERROR	; ***** EXP1 MUST BE RELATION EXP2 ;
	.ENDC
	.ENDM	ASSUME

; 'Extra instructions' for the VAX (SEC and CLC)
 
	.MACRO	SEC
	BISPSW	#1			; set carry
	.ENDM
 
	.MACRO	CLC
	BICPSW	#1			; clear carry
	.ENDM
 
 
; VAX equivalent of .RAD50 on RSX
 
	.MACRO	RAD50,STRING
	..R50V=0			; tally
	..R50I=0			; characters so far
	.IRPC	..R50C,STRING		; loop for each char in string
	    ..R50N=^A/..R50C/		; ascii code
	    .IF NE ..R50N&^O100		; letter or digit ?
		..R50M=..R50N&^O37	; mask letter to range
	    .IFF			; digit
		..R50M=..R50N-^A/0/+^O36	; 0->9 to range
		.IIF LT ..R50M-^O36,  ..R50M=0	; non-digit -> space
		.IIF GT ..R50M-^O47,  ..R50M=0	; non-digit -> space
	    .ENDC
; special cases
	    .IIF EQ ..R50N-^A/$/,  ..R50M=^O33	; dollar
	    .IIF EQ ..R50N-^A/./,  ..R50M=^O34	; dot
	    .IIF EQ ..R50N-^A/ /,  ..R50M=^O00	; space
	    ..R50V=<..R50V*^O50>+..R50M	; pack three letters to a word
	    ..R50I=..R50I+1		; count letters
	    .IF EQ ..R50I-3		; enough for a word yet ?
		.WORD	..R50V		; output the word
		..R50I=0		; clear count
		..R50V=0		; start a new word
	    .ENDC
	.ENDR				; end character repeat loop
	.IF NE ..R50I			; remainder ?
	    ..R50V=..R50V*^O50		; space
	    .IIF EQ ..R50I-1,  ..R50V=..R50V*^O50	; two spaces
	    .WORD	..R50V		; output the remainder
	.ENDC
	.ENDM
 
 
 
	.MACRO	WARNSIGNAL
	BICL3	#7,R0,-(SP)		; reduce severity to warning
	CALLS	#1, G^LIB$SIGNAL	; and get message and trace
	.ENDM


	.MACRO	DATA_PSECT	WHO
	.PSECT	_'WHO'$DATA QUAD,PIC,USR,CON,REL,LCL,NOSHR,NOEXE,RD,WRT,NOVEC
	.ENDM

	.MACRO CODE_PSECT	WHO
	.PSECT _'WHO'$CODE QUAD,PIC,USR,CON,REL,LCL,SHR,EXE,RD,NOWRT,NOVEC
	.ENDM

	.MACRO	CONST_PSECT	WHO
	.PSECT	_'WHO'$CONST QUAD,PIC,USR,CON,REL,LCL,SHR,NOEXE,RD,NOWRT,NOVEC
	.ENDM

