C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1991-02-21 12:37:46.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE WILD_SEND
C
***	IDENT	21FE91
***	MODULE	WILD_SEND
C
C	Copyright LaserScan Laboratories Ltd., Cambridge, England
C
C LDLIB lookalike for WILD plotter
C
C to send the current buffer to the plotter
C
C Author R.W. Russell					 9-Jul-1986
C
	IMPLICIT	NONE
C
	INCLUDE	'($IODEF)'
	INCLUDE	'LSL$CMNLSL:LSLLIBMSG.PAR'
	INCLUDE	'CMN:WILDCMN.CMN'
C
C
C Functions called
	INTEGER		SYS$QIOW
	LOGICAL		FLWLIN
C
C Workspace
	INTEGER		OK,IERR
	INTEGER*2	IOSB(4)
C
C if sending data to a terminal, use QIO
C
	IF (OUTERM) THEN
	   IF (BUFNUM.GT.0) THEN
	      BUFNUM =  BUFNUM+1
	      BUFFER(BUFNUM) = 13		! add a c/r
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C									C
C add a l/f for debugging purposes					C
C									C
	               BUFNUM = BUFNUM + 1	!			C
	               BUFFER(BUFNUM) = 10	!			C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
	      OK = SYS$QIOW(	,
     &				%VAL(WILD_CHAN),
     &				%VAL(IO$_WRITEVBLK.OR.IO$M_NOFORMAT),
     &				IOSB,
     &				,,
     &				BUFFER,%VAL(BUFNUM),,,,)
	      IF (.NOT.OK) CALL LSL_PUTMSG(OK)
	      IF (.NOT.IOSB(1)) CALL LSL_PUTMSG(IOSB(1))
	   ENDIF
	ELSE
	   IF (BUFNUM.GT.0) THEN
	      OK = FLWLIN(BUFFER,BUFNUM,IERR)
	      IF (.NOT.OK) THEN
	         CALL LSL_PUTMSG(OK)
	         IF (OK.EQ.LSL__SYSWRITE) CALL LSL_ADDMSG(IERR)
	      ENDIF
	   ENDIF
	ENDIF
C
C make sure same buffer is not sent again
C
	BUFNUM = 0
C
	RETURN
	END
