C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1982-03-29 11:45:06.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	PROGRAM	TEKCI
C
***	MODULE	TEKCI
***	IDENT	20OC80
C
C Command Interpreter for Tek Lib
C
C 9th May 1980
C
	INTEGER*2	N,M
	REAL		ARG(4)
	LOGICAL*1	COM(60),ICH,SPACED
C
C Read command from terminal
100	TYPE 101
101	FORMAT(' TCOM> ',$)
	ACCEPT 102,COM
102	FORMAT(60A1)
C
C Check first character is a letter
	IF (COM(1) .LT. 'A' .OR. COM(1) .GT. 'Z') GOTO 900
C
C Put commas in to read numbers if necessary
	SPACED = .TRUE.
	DO 120 I=3,60
	  ICH = COM(I)
	  IF (ICH .NE. ' ' .AND. ICH .NE. '.'
     &      .AND. ICH .NE. '-' .AND. ICH .NE. '+'
     &      .AND. (ICH .LT. '0' .OR. ICH .GT. '9')) GOTO 900
	  IF (ICH .EQ. ' ' .AND. .NOT. SPACED) COM(I) = ','
	  SPACED = ICH .EQ. ' '
120	CONTINUE
C
C Read any numbers into ARG
	DECODE(58,150,COM(3),ERR=900) ARG
150	FORMAT(4F12.0)
C
C Check second character is a letter or a space
	IF (COM(2) .EQ. ' ') GOTO 800
	IF (COM(2) .LT. 'A' .OR. COM(2) .GT. 'Z') GOTO 900
C
C Branch on first of two letters
	IF (COM(1) .EQ. 'M') GOTO 200
	IF (COM(1) .EQ. 'L') GOTO 300
	IF (COM(1) .EQ. 'C') GOTO 400
	IF (COM(1) .EQ. 'D') GOTO 500
	IF (COM(1) .EQ. 'R') GOTO 600
	IF (COM(1) .EQ. 'B') GOTO 700
	GOTO 900
C
C Branch on second letter
200	IF (COM(2) .EQ. 'B') GOTO 1000
	IF (COM(2) .EQ. 'T') GOTO 1050
	IF (COM(2) .EQ. 'C') GOTO 1075
	GOTO 900
300	IF (COM(2) .EQ. 'B') GOTO 1100
	IF (COM(2) .EQ. 'T') GOTO 1150
	IF (COM(2) .EQ. 'C') GOTO 1175
	GOTO 900
400	IF (COM(2) .EQ. 'M') GOTO 1200
	IF (COM(2) .EQ. 'H') GOTO 1300
	IF (COM(2) .EQ. 'U') GOTO 2900
	GOTO 900
500	IF (COM(2) .EQ. 'A') GOTO 1400
	IF (COM(2) .EQ. 'O') GOTO 1500
	IF (COM(2) .EQ. 'D') GOTO 2200
	GOTO 900
600	IF (COM(2) .EQ. 'F') GOTO 2300
	IF (COM(2) .EQ. 'S') GOTO 2400
	GOTO 900
700	IF (COM(2) .EQ. 'L') GOTO 2500
	IF (COM(2) .EQ. 'E') GOTO 2600
	GOTO 900
800	IF (COM(1) .EQ. 'S') GOTO 1600
	IF (COM(1) .EQ. 'O') GOTO 1700
	IF (COM(1) .EQ. 'U') GOTO 1800
	IF (COM(1) .EQ. 'I') GOTO 1900
	IF (COM(1) .EQ. 'W') GOTO 2000
	IF (COM(1) .EQ. 'P') GOTO 2100
	IF (COM(1) .EQ. 'T') GOTO 2700
	IF (COM(1) .EQ. 'E') GOTO 2800
	IF (COM(1) .EQ. 'X') GOTO 9800
	IF (COM(1) .EQ. 'Q') GOTO 9900
C
C End of options, command no good
900	TYPE 950
950	FORMAT(' Error in command')
	GOTO 100
C
C Ready to obey command now
1000	CALL MOVBY(ARG(1),ARG(2))
	GOTO 100
1050	CALL MOVTO(ARG(1),ARG(2))
	GOTO 100
1075	CALL MOVTOC
	GOTO 100
1100	CALL LINBY(ARG(1),ARG(2))
	GOTO 100
1150	CALL LINTO(ARG(1),ARG(2))
	GOTO 100
1175	CALL LINTOC
	GOTO 100
1200	CALL LDCMPL
	GOTO 100
1300	N = ARG(1)
	CALL CHAIN(N)
	GOTO 100
1400	N = ARG(1)
	CALL DASHED(N,ARG(2),ARG(3),ARG(4))
	GOTO 100
1500	N = ARG(1)
	CALL DOTTED(N)
	GOTO 100
1600	CALL SCRUB(ARG(1),ARG(2))
	GOTO 100
1700	CALL ORIGIN(ARG(1),ARG(2))
	GOTO 100
1800	CALL UNITS(ARG(1))
	GOTO 100
1900	N = ARG(1)
	M = ARG(2)
	L = ARG(3)
	CALL LDINIT(N,M,L)
	GOTO 100
2000	CALL LDWAIT
	GOTO 100
2100	CALL PICL
	GOTO 100
2200	N = ARG(1)
	CALL DISMOD(N)
	GOTO 100
2300	CALL REFRSH
	GOTO 100
2400	CALL RFSTOP
	GOTO 100
2500	N = ARG(1)
	GOTO 100
2600	GOTO 100
2700	N = ARG(1)
	M = ARG(2)
	GOTO 100
2800	N = ARG(1)
	M = ARG(2)
	GOTO 100
2900	CALL CURSOR
	GOTO	100
C
C Quit
9800	CALL PRTCHR(ARG(1))
	GOTO 100
9900	CALL EXIT
C
	END
