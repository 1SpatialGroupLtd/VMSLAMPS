C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1994-09-01 16:41:40.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
C
C	Fill area OUTPUT FUNCTIONS
C	==========================
C
	SUBROUTINE	GFA(N,PX,PY)
C
**	MODULE	GFA
**	IDENT	01SE94
C
C Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C Created					TJI	 4-Dec-1984
C
C FILL AREA
C
	IMPLICIT NONE
C
C Arguments:
	INTEGER N			! number of points
	REAL	PX(*)			! X coords of points in WC
	REAL	PY(*)			! Y coords of points in WC
C
***	COMMON/GKSDAT/
***	COMMON/GKSESL/
***	COMMON/GKSSIG/			! for coordinate buffer
C
C Internal variables:
	INTEGER		NN
	INTEGER		NPTS,ONPTS
	INTEGER		TMPX(2),TMPY(2)
	LOGICAL		AREA			! in composite area
	LOGICAL		ENDAREA			! ending composite
	SAVE		NPTS,ONPTS,AREA,ENDAREA
C
	GKSERR	= 0
	ENDAREA = .FALSE.		! not ending composite area
C
C check things for non-composite area
	IF (.NOT.AREA) THEN
	   IF (N.LT.3) THEN
	      GKSERR = 100
	      GOTO 9999
	   ENDIF
	   NPTS = 0
	ENDIF
C
C Is this workstation active?
	IF (.NOT.WSACT) GOTO 9999
C
C Make sure transformation is up to date
	IF (UPTRN) CALL GUPTRN
C
C adjust number of points
	NN = MIN(SIGMAX-NPTS,N)
	IF (NN.LE.0) GOTO 9999
C
C transform to (integer) device coordinates
	ONPTS = NPTS+1
	NPTS = NPTS+NN
	CALL GKSW2V(NN,PX,PY,NX(ONPTS),NY(ONPTS))
C
C see if we need to draw outline
C (NB This will only work if the various aspect source flags
C  are INDIVIDUAL - get it to work for BUNDLED some other time)
199	IF (IFASTY.EQ.GHOLOW.OR.
     &	    (IFASTY.EQ.GHATCH.AND.
     &	     ((IFASTX.GT.100.AND.IFASTX.LE.106).OR.
     &	      IFASTX.GE.20000))) THEN
	   IF (CACOLI.NE.CCOLI) CALL WSPLCI(CACOLI)
	   IF (CLWID.NE.1) CALL WSLWSC(1)
	   IF (CLTYPE.NE.1) CALL WSLN(1)
	   IF (.NOT.ENDAREA) CALL WPL(NN,NX(ONPTS),NY(ONPTS))
	   IF (.NOT.AREA.AND.
     &		(NX(1).NE.NX(NPTS).OR.NY(1).NE.NY(NPTS))) THEN
	      TMPX(1) = NX(1)
	      TMPX(2) = NX(NPTS)
	      TMPY(1) = NY(1)
	      TMPY(2) = NY(NPTS)
	      CALL WPL(2,TMPX,TMPY)
	   ENDIF
	   IF (CACOLI.NE.CCOLI) CALL WSPLCI(CCOLI)
	   IF (CLWID.NE.1) CALL WSLWSC(CLWID)
	   IF (CLTYPE.NE.1) CALL WSLN(CLTYPE)
	ENDIF
C
C and draw
	IF (.NOT.AREA) CALL WFA(NPTS,NX,NY)
C
9999	RETURN
C
	ENTRY	LSG_END_AREA
C
C FILL AREA - end composite area
C
	AREA = .FALSE.
C
	IF (NPTS.LT.3) THEN
	   GKSERR = 100			! number of points is invalid
	   GOTO 9999
	ENDIF
	ENDAREA = .TRUE.
	GOTO 199
C
	ENTRY	LSG_BEGIN_AREA
C
C FILL AREA - begin composite area
C
	NPTS = 0		! no points in buffer
	AREA = .TRUE.		! in composite area
	RETURN
C
	END
C
C *********************************************************************
C
	SUBROUTINE	LSG_SET_ROTATION(ANGLE)
C
**	MODULE	LSG_SET_ROTATION
**	IDENT	08JN87
C
C Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C Created				Clarke Brunt	 8-Jun-1987
C
C Set plot rotation (for the benefit of hatching angle)
C
	IMPLICIT NONE
C
***	COMMON/GKSDAT/
***	COMMON/GKSESL/
C
C Arguments:
C
	REAL	ANGLE			! angle (a/c, radians)
C
	GKSERR = 0
	IFAROT = ANGLE
C
	RETURN
	END
C
C *********************************************************************
C
C	Fill area OUTPUT ATTRIBUTES
C	===========================
C			(Workstation independent primitive attributes)
C
C
	SUBROUTINE	GSFAIS(STYLE)
C
**	MODULE	GSFAIS
**	IDENT	04DE84
C
C Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C Created					TJI	 4-Dec-1984
C
C SET FILL AREA INTERNAL STYLE
C
	IMPLICIT NONE
C
C Arguments:
C
	INTEGER	STYLE			! fill area internal style
C
***	COMMON/GKSDAT/
***	COMMON/GKSESL/
C
C workspace
C
	INTEGER	MYSTYL
C
C Style is one of
C
C	0	HOLLOW		GHOLOW
C	1	SOLID		GSOLID
C	2	PATTERN		GPATRN
C	3	HATCH		GHATCH
C
C Note that we provide HATCH and not PATTERN, whilst the Sigma 6100
C provides PATTERN, with the first 6 patterns defined as the first
C 6 hatch styles. Thus we pretend that their PATTERN is our HATCH
C
	GKSERR	= 0			! no errors yet
	IF (STYLE.LT.0 .OR. STYLE.GT.3) THEN
	   GKSERR = 77		! specified fill area internal
	   GOTO 9999		! style not supported on this w/s
	ELSEIF (STYLE.EQ.GPATRN) THEN
	   GKSERR = 83			! internal style PATTERN is not
	   GOTO 9999			! supported on this workstation
	ELSEIF (STYLE.EQ.GHATCH) THEN
	   MYSTYL = GPATRN
	ELSE
	   MYSTYL = STYLE
	ENDIF
C
	IFASTY = STYLE
	IF (MYSTYL.EQ.CFASTY) GOTO 9999	! already set
	CALL WSFAIS(MYSTYL)
	CFASTY = MYSTYL
C
9999	RETURN
	END
C
C *********************************************************************
C
	SUBROUTINE	GSFASI(INDEX)
C
**	MODULE	GSFASI
**	IDENT	04DE84
C
C Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C Created					TJI	 4-Dec-1984
C
C SET FILL AREA STYLE INDEX
C
	IMPLICIT NONE
C
C Arguments:
C
	INTEGER	INDEX			! style index
C
***	COMMON/GKSDAT/
***	COMMON/GKSESL/
C
C we are pretending to set a HATCH style index here, but really we are
C setting the Sigma 6100's PATTERN style index. Since indices 5 and 6
C are the other way round than we expect, we must correct for them
C
C Our indices are:
C
C		1	horizontal hatching
C		2	vertical   hatching
C		3	45 degrees hatching - ie ////
C		4	opposite to (3)     - ie \\\\
C		5	cross-hatching - using (1) and (2)
C		6	cross-hatching - using (3) and (4)
C		101-106	as above but draw outline also
C		10000-13600 horizontal plus angle in deg/10
C		20000-23600 as above but draw perimeter
C
C
	INTEGER	MYNDEX			! internal version
	INTEGER TRNTAB(6)		! translation table
	DATA	TRNTAB/2,1,3,4,6,5/
C
	GKSERR = 0
C
	IF (INDEX.LE.0) THEN
	   GKSERR = 78		! style (pattern or hatch) index is
	   GOTO 9999		! less than or equal to zero
	ELSEIF ((INDEX.GT.6 .AND. INDEX.LT.101) .OR.
     &		(INDEX.GT.106 .AND. INDEX.LT.10000) .OR.
     &		(INDEX.GT.13600 .AND. INDEX.LT.20000) .OR.
     &		(INDEX.GT.23600)) THEN
	   GKSERR = 80		! specified hatch index is not
	   GOTO 9999		! supported on this workstation
	ENDIF
C
	IFASTX = INDEX
	MYNDEX = INDEX
	IF (MYNDEX.GE.20000) THEN
	   MYNDEX = 101
	ELSEIF (MYNDEX.GE.10000) THEN
	   MYNDEX = 1
	ENDIF
	IF (MYNDEX.GT.100) MYNDEX = MYNDEX-100
	IF (TRNTAB(MYNDEX).EQ.CFASTX) GOTO 9999	! already set
	CFASTX = TRNTAB(MYNDEX)
	CALL WSFASI(CFASTX)
C
9999	RETURN
	END
C
C *********************************************************************
C
	SUBROUTINE	GSFACI(COLI)
C
**	MODULE	GSFACI
**	IDENT	04DE84
C
C Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C Created					TJI	 4-Dec-1984
C
C SET FILL AREA COLOUR INDEX
C
	IMPLICIT NONE
C
C Arguments:
C
	INTEGER	COLI			! fill area colour index
C
***	COMMON/GKSDAT/
***	COMMON/GKSESL/
C
C Workspace
	INTEGER	NCOLI
C
	IF (COLI.LT.0) THEN
	   GKSERR = 85
	ELSE
	   IFACOL = COLI
	   NCOLI = COLI
	   IF (POFF.NE.0) NCOLI = ISHFT(NCOLI,POFF)
	   NCOLI = NCOLI.AND.PSEL.AND.255	! restrict to 0-255
	   IF (NCOLI.EQ.0.AND.IFACOL.NE.0) NCOLI = ISHFT(1,POFF)
	   IF (NCOLI.EQ.CACOLI) GOTO 999! already set
	   CALL WSFACI(NCOLI)
	   CACOLI = NCOLI
	   GKSERR = 0
	ENDIF
999	RETURN
	END
C
C *********************************************************************
C
C	Fill area WORKSTATION ATTRIBUTES (Representations)
C	==================================================
C
C
	SUBROUTINE	GSFAR(WKID,FAI,STYLE,INDEX,COLI)
C
**	MODULE	GSFAR
**	IDENT	04DE84
C
C Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C Created					TJI	 4-Dec-1984
C
C SET FILL AREA REPRESENTATION
C
	IMPLICIT NONE
C
C Arguments:
C
	INTEGER	WKID			! workstation-identifier
	INTEGER	FAI			! fill area index
	INTEGER	STYLE			! internal style
	INTEGER	INDEX			! style index
	INTEGER	COLI			! colour index
C
***	COMMON/GKSDAT/
***	COMMON/GKSESL/
C
C refer to GSFASI and GSFAIS for explanations of our manipulation
C of STYLE and INDEX
C NB outlined, and arbitrary angle not allowed here (out code never
C uses BUNDLED ASFs anyway)
C
	INTEGER	MYSTYL
	INTEGER	MYNDEX
	INTEGER	I
C
	IF (STYLE.LT.0 .OR. STYLE.GT.3) THEN
	   GKSERR = 77		! specified fill area internal
	   GOTO 9999		! style not supported on this w/s
	ELSEIF (STYLE.EQ.GPATRN) THEN
	   GKSERR = 83			! internal style PATTERN is not
	   GOTO 9999			! supported on this workstation
	ELSEIF (STYLE.EQ.GHATCH) THEN
	   MYSTYL = GPATRN
	ELSE
	   MYSTYL = STYLE
	ENDIF
C
	IF (INDEX.LE.0) THEN
	   GKSERR = 78		! style (pattern or hatch) index is
	   GOTO 9999		! less than or equal to nought
	ELSEIF (INDEX.GT.6) THEN
	   GKSERR = 80		! specified hatch index is not
	   GOTO 9999		! supportedon this workstation
	ELSEIF (INDEX.EQ.5) THEN
	   MYNDEX = 6
	ELSEIF (INDEX.EQ.6) THEN
	   MYNDEX = 5
	ELSE
	   MYNDEX = INDEX
	ENDIF
C
	IF (COLI.LT.0) THEN
	   GKSERR = 85
	   GOTO 9999
	ENDIF
C
	I = COLI.AND.255		! restrict to 0-255
	IF (I.EQ.0.AND.COLI.NE.0) I = 1
C
	CALL WSFAR(WKID,FAI,MYSTYL,MYNDEX,I)
C
9999	RETURN
C
	END
C
C *********************************************************************
C
C	Fill area INQUIRY FUNCTIONS
C	===========================
C
C
C	SUBROUTINE GQFAF - this subroutine is not implemented
C
C**********************************************************************
C
	SUBROUTINE GQFAIS(ERRIND,STYLE)
C
***	MODULE	GQFAIS
***	IDENT	01MA84
C
C Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C Created					TJI	7-Dec-1984
C
C INQUIRE FILL AREA INTERNAL STYLE
C
	IMPLICIT NONE
C
C Arguments:
	INTEGER	ERRIND		! Error indicator
	INTEGER	STYLE		! internal style
C
***	COMMON/GKSDAT/		! GKS data structures
***	COMMON/GKSESL/
C
	GKSERR = 0		! inquiry functions can't gen errors
	ERRIND = 0		! only give indications of them !!
C
	STYLE = IFASTY
C
	RETURN
	END
C
C**********************************************************************
C
	SUBROUTINE GQFASI(ERRIND,INDEX)
C
***	MODULE	GQFASI
***	IDENT	01MA84
C
C Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C Created					TJI	7-Dec-1984
C
C INQUIRE FILL AREA STYLE INDEX
C
	IMPLICIT NONE
C
C Arguments:
	INTEGER	ERRIND		! Error indicator
	INTEGER	INDEX		! style index
C
***	COMMON/GKSDAT/		! GKS data structures
***	COMMON/GKSESL/
C
	GKSERR = 0		! inquiry functions can't gen errors
	ERRIND = 0		! only give indications of them !!
C
	INDEX = IFASTX
C
	RETURN
	END
C
C**********************************************************************
C
	SUBROUTINE GQFACI(ERRIND,COL)
C
***	MODULE	GQFACI
***	IDENT	01MA84
C
C Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C Created					TJI	7-Dec-1984
C
C INQUIRE FILL AREA COLOUR INDEX
C
	IMPLICIT NONE
C
C Arguments:
	INTEGER	ERRIND		! Error indicator
	INTEGER	COL		! colour index
C
***	COMMON/GKSDAT/		! GKS data structures
***	COMMON/GKSESL/
C
	GKSERR = 0		! inquiry functions can't gen errors
	ERRIND = 0		! only give indications of them !!
C
	COL = IFACOL
C
	RETURN
	END
