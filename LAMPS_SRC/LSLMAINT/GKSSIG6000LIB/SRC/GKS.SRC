C 	CONTROL FUNCTIONS
C	=================
C
	SUBROUTINE	GOPKS(ERRFIL)
C
**	MODULE	GOPKS
**	IDENT	26MR92
C
C Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C Created					CCB	8-Nov-1984
C
	IMPLICIT NONE
C
	EXTERNAL GKSBLK		! ensure that block data is linked in
C
C OPEN GKS	- includes initialising of data structures and variables
C
C Arguments:
	INTEGER	ERRFIL			! error message file
C
C
***	COMMON/GKSDAT/			! GKS data structures
***	COMMON/GKSESL/			! GKS error state list
C
C Set up initial indices and  default modes
	GKSERR 	= 0		! no errors yet
	TRNCUR	= 1		! use normalisation transformation 0
	RETURN
	END
C
C***********************************************************************
C
	SUBROUTINE	GCLKS
C
**	MODULE	GCLKS
**	IDENT	27JL83
C
C Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C Created					CCB	8-Nov-1984
C
C CLOSE GKS	
C
	IMPLICIT NONE
C
***	COMMON/GKSESL/
C
	GKSERR	= 0				! no errors
C
	RETURN
	END
C
C***********************************************************************
C
	SUBROUTINE	GOPWK(WKID,CONID,WTYPE)
C
**	MODULE	GOPWK
**	IDENT	27JL83
C
C Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C Created					CCB	8-Nov-1984
C
C OPEN WORKSTATION
C
	IMPLICIT NONE
C
C Arguments:
	INTEGER	WKID			! workstation-identifier
	INTEGER	CONID			! connection-identifier
	INTEGER	WTYPE			! workstation type
C
***	COMMON/GKSDAT/
***	COMMON/GKSESL/
***	COMMON/GKSSIG/
C
C Function called
	LOGICAL	SYS$ASSIGN,SYS$DASSGN
C
C Local variables.
	INTEGER	COOUNI,IX,IY
	INTEGER	ERRIND
	INTEGER*2 ICHAN
C
	GKSERR	= 0			! no errors
C
	UPTRN = .TRUE.			! update transformation
C
C Check whether logical name WKSPLL assigns to anything sensible -
C if so then use parallel interface
	IF (SYS$ASSIGN('WKSPLL',ICHAN,,)) THEN	! OK
	   CALL SYS$DASSGN(%VAL(ICHAN))	! deassign again
	   CALL WOPWKP(WKID,-1,WTYPE)	! open for parallel
	ELSE
	   CALL WOPWK(WKID,-1,WTYPE)	! open for serial
	ENDIF
C
C Set deferral to ASTI
	CALL GSDS(WKID,GASTI,GSUPPD)
C
C Set aspect source flags
	CALL WSASF(GASF)
C
	MAXCOL = 255			! fixed for now
C
C Set graphics blink control on (ie blink the workplane)
	CALL WWPBLK(1)
C
C Try to read a colour table
	CALL LSG_SET_LUT(WKID,'LSL$SIGMA_COLOUR:') ! load colour table
C
C Obtain screen size
	CALL WQDSP(WTYPE,ERRIND,COOUNI,IX,IY,RASTX,RASTY)
	RASTX = RASTX+1			! want number of pixels
	RASTY = RASTY+1
	DCMAXX = 0.36			! assume x size
	DCMAXY = DCMAXX*FLOAT(IY+1)/FLOAT(IX+1)	! calculate y size
	DCUNIT = FLOAT(IX)/DCMAXX	! conversion (metres -> device)
	GNOMLW = DCMAXX/FLOAT(IX+1)	! nominal line width
C
C Set workstation window to entire VDC
	CALL WSWKWN(WKID,-32767,32767,-32767,32767)
C
C Get maximum number of fill area points
	CALL WQFAM(WKID,IX)
	SIGMAX = MIN(IX,MAXPTS)	! limit to size of our arrays
C
C Create a second viewport (which we don't actually use, but just so that
C we can make the normal viewport non-current sometimes)
	CALL WVPCR(WKID,2,0,0,0,0,0,0,RASTX-1,0,RASTY-1,
     &			-32767,32767,-32767,32767)
C
C unset current attributes, so transmitted when next altered
	CLTYPE = -1
	CLWID = -1
	CCOLI = -1
	CFASTY = -1
	CFASTX = -1
	CACOLI = -1
	CCHUPX = 0
	CCHUPY = 0
	CCHH = -1
	CTCOLI = -1
C
	WSOP = .TRUE.		! workstation open
C
	RETURN
	END
C
C***********************************************************************
C
	SUBROUTINE	GCLWK(WKID)
C
**	MODULE	GCLWK
**	IDENT	27JL83
C
C Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C Created					CCB	8-Nov-1984
C
C CLOSE WORKSTATION
C
	IMPLICIT NONE
C
C Arguments:
	INTEGER	WKID			! workstation-identifier
C
***	COMMON/GKSDAT/
***	COMMON/GKSESL/
C
	GKSERR	= 0			! no errors
C
C Disable any string device (mainly for the benefit of LITES2)
	CALL WSSTM(1,1,0,1)
	CALL WCLWK(WKID)
	WSOP = .FALSE.		! workstation closed
C
	RETURN
	END
C
C***********************************************************************
C
	SUBROUTINE	GACWK(WKID)
C
**	MODULE	GACWK
**	IDENT	27JL83
C
C Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C Created					CCB	8-Nov-1984
C
C ACTIVATE WORKSTATION
C
	IMPLICIT NONE
C
C Arguments:
	INTEGER	WKID			! workstation-identifier
C
***	COMMON/GKSDAT/
***	COMMON/GKSESL/
C
	GKSERR	= 0
	WSACT = .TRUE.
9999	RETURN
	END
C
C***********************************************************************
C
	SUBROUTINE	GDAWK(WKID)
C
**	MODULE	GDAWK
**	IDENT	27JL83
C
C Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C Created					CCB	8-Nov-1984
C
C DEACTIVATE WORKSTATION
C
	IMPLICIT NONE
C
C Arguments:
	INTEGER	WKID			! workstation-identifier
C
***	COMMON/GKSDAT/
***	COMMON/GKSESL/
C
	GKSERR	= 0
	WSACT = .FALSE.
9999	RETURN
	END
C
C***********************************************************************
C
	SUBROUTINE	GCLRWK(WKID,COFL)
C
**	MODULE	GCLRWK
**	IDENT	29FE84
C
C Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C Created					RD	14-Nov-1983
C
C CLEAR WORKSTATION
C
	IMPLICIT NONE
C
C Arguments:
	INTEGER	WKID			! workstation-identifier
	INTEGER COFL			! control flag
C
***	COMMON/GKSDAT/
***	COMMON/GKSESL/
C
C workspace
	BYTE	SAVSEL
C
	GKSERR	= 0
C
C	CALL WCLRWK(WKID,COFL)
C WCLRWK does a total reset, so delete all segments instead
	SAVSEL = PSEL
	IF (SAVSEL.NE.'FF'X) CALL LSG_PLANE_SELECT(WKID,-1)
	CALL WDSGWK(WKID,0)
	CALL WRSGWK(WKID)
	IF (SAVSEL.NE.'FF'X) CALL LSG_PLANE_SELECT(WKID,SAVSEL)
9999	RETURN
	END
C
C***********************************************************************
C
	SUBROUTINE	GUWK(WKID,REGFL)
C
**	MODULE	GUWK
**	IDENT	16MY84
C
C Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C Created					CCB	16-May-1984
C
C UPDATE WORKSTATION
C
	IMPLICIT NONE
C
C Arguments:
	INTEGER	WKID			! workstation-identifier
	INTEGER	REGFL			! regeneration flag
C
***	COMMON/GKSDAT/
***	COMMON/GKSESL/
C
	GKSERR	= 0
	CALL WUWK(WKID,REGFL)
C
9999	RETURN
	END
C
C***********************************************************************
C
	SUBROUTINE	GSDS(WKID,DEFMOD,REGMOD)
C
**	MODULE	GSDS
**	IDENT	27JL83
C
C Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C Created					CCB	8-Nov-1984
C
C SET DEFERRAL STATE
C
	IMPLICIT NONE
C
C Arguments:
	INTEGER	WKID			! workstation-identifier
	INTEGER	DEFMOD			! deferral mode
	INTEGER	REGMOD			! implicit regeneration mode
C
***	COMMON/GKSDAT/
***	COMMON/GKSESL/
C
	GKSERR	= 0
	IF (DEFMOD .LT. GASAP .OR. DEFMOD .GT. GASTI) GOTO 20
	IF (REGMOD .LT. GSUPPD .OR. REGMOD .GT. GALLOW) GOTO 20
	CALL WSDS(WKID,2,1-REGMOD)
C
20	RETURN
	END
C
C***********************************************************************
C
C	SEGMENT FUNCTIONS
C	================
C
	SUBROUTINE	GCRSG(SEGNAM)
C
**	MODULE	GCRSG
**	IDENT	20AU84
C
C Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C Created					CCB	20-August-1984
C
C CREATE SEGMENT
C
	IMPLICIT NONE
C
C Arguments:
	INTEGER	SEGNAM			! segment name
C
	CALL WCRSG(SEGNAM)
	RETURN
	END
C
C***********************************************************************
C
	SUBROUTINE	GCLSG
C
**	MODULE	GCLSG
**	IDENT	20AU84
C
C Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C Created					CCB	20-August-1984
C
C CLOSE SEGMENT
C
	IMPLICIT NONE
C
	CALL WCLSG
	RETURN
	END
C
C***********************************************************************
C
	SUBROUTINE	GDSG(ISEG)
C
**	MODULE	GDSG
**	IDENT	20AU84
C
C Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C Created					CCB	20-August-1984
C
C DELETE SEGMENT
C
	IMPLICIT NONE
C
	INTEGER	WKID,ISEG
C
	CALL WDSGWK(WKID,ISEG)
	RETURN
	END
C
C***********************************************************************
C
	SUBROUTINE	GRSGWK(WKID)
C
**	MODULE	GRSGWK
**	IDENT	20AU84
C
C Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C Created					CCB	20-August-1984
C
C REDRAW ALL SEGMENTS ON WORKSTATION
C
	IMPLICIT NONE
C
C Arguments:
	INTEGER	WKID			! workstation-identifier
C
	CALL WRSGWK(WKID)
	RETURN
	END
C
C***********************************************************************
C
	SUBROUTINE	GSVIS(ISEG,VIS)
C
**	MODULE	GSVIS
**	IDENT	22AU84
C
C Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C Created					CCB	22-August-1984
C
C SET SEGMENT VISIBILITY
C
	IMPLICIT NONE
C
	INTEGER	ISEG,VIS
C
	CALL WSVIS(ISEG,VIS)
	RETURN
	END
C
C***********************************************************************
C
	SUBROUTINE	GSHLIT(ISEG,HILIT)
C
**	MODULE	GSHLIT
**	IDENT	20AU84
C
C Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C Created					CCB	20-August-1984
C
C SET SEGMENT HIGHLIGHTING
C
	IMPLICIT NONE
C
	INTEGER	ISEG,HILIT
C
	CALL WSHLIT(ISEG,HILIT)
	RETURN
	END
C
C***********************************************************************
C
C	OUTPUT FUNCTIONS
C	================
C
	SUBROUTINE	GPL(N,PX,PY)
C
**	MODULE	GPL
**	IDENT	28OC83
C
C Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C Created					CCB	8-Nov-1984
C
C POLYLINE
C
	IMPLICIT NONE
C
C Arguments:
	INTEGER N			! number of points
	REAL	PX(*)			! X coords of points in WC
	REAL	PY(*)			! Y coords of points in WC
C
***	COMMON/GKSDAT/
***	COMMON/GKSESL/
***	COMMON/GKSSIG/			! for coordinate buffer
C
C Internal variables:
	INTEGER	I,J,PTS
C
	GKSERR	= 0
	IF (N.LT.2) THEN
	   GKSERR = 100
	   GOTO 9999
	ENDIF
C
C Is this workstation active?
	IF (.NOT.WSACT) GOTO 100
C
C Make sure transformation is up to date
	IF (UPTRN) CALL GUPTRN
C
	PTS = N				! number of points
	I = 1
10	J = MIN0(PTS,SIGMAX)
	CALL GKSW2V(J,PX(I),PY(I),NX,NY)
	CALL WPL(J,NX,NY)
	IF (PTS.GT.SIGMAX) THEN
	   PTS = PTS-SIGMAX+1
	   I = I+SIGMAX-1
	   GOTO 10
	ENDIF
100	CONTINUE
C
9999	RETURN
	END
C
C***********************************************************************
C
C	OUTPUT ATTRIBUTES	(Workstation independent primitive attributes)
C	=================
C
C
	SUBROUTINE	GSPLI(INDEX)
C
**	MODULE	GSPLI
**	IDENT	29FE84
C
C Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C Created					CCB	8-Nov-1984
C
C SET POLYLINE INDEX
C
	IMPLICIT NONE
C
C Arguments:
	INTEGER	INDEX			! polyline index
C
***	COMMON/GKSDAT/
***	COMMON/GKSESL/
C
	GKSERR	= 0			! no errors yet
	CALL WSPRI(0,INDEX)
	RETURN
C
	END
C
C***********************************************************************
C
	SUBROUTINE	GSLN(LTYPE)
C
**	MODULE	GSLN
**	IDENT	26AP84
C
C Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C Created				Clarke Brunt	26-April-1984
C
C SET LINETYPE
C
	IMPLICIT NONE
C
C Arguments:
	INTEGER	LTYPE			! linetype
C
***	COMMON/GKSDAT/
***	COMMON/GKSESL/
C
	GKSERR = 0
	IF (LTYPE.LE.0) GOTO 10
	ILTYPE = LTYPE
	IF (ILTYPE.EQ.CLTYPE) GOTO 20	! already set
	CALL WSLN(LTYPE)
	CLTYPE = LTYPE
	GOTO 20
10	GKSERR = 62			! linetype .LE. 0
20	RETURN
	END
C
C***********************************************************************
C
	SUBROUTINE	GSLWSC(LWIDTH)
C
**	MODULE	GSLWSC
**	IDENT	26AP84
C
C Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C Created				Clarke Brunt	26-April-1984
C
C SET LINEWIDTH SCALE FACTOR
C
	IMPLICIT NONE
C
C Arguments:
	REAL	LWIDTH			! linewidth scale factor
C
***	COMMON/GKSDAT/
***	COMMON/GKSESL/
C
	INTEGER	NLWID
C
	GKSERR = 0
C
	IF (LWIDTH.LE.0.0) GOTO 10
	ILWID = LWIDTH
	NLWID = MAX(1,IFIX(LWIDTH))
	IF (NLWID.EQ.CLWID) GOTO 20	! already set
	CALL WSLWSC(NLWID)
	CLWID = NLWID
	GOTO 20
10	GKSERR = 90			! linewidth scale factor .LE. 0
20	RETURN
	END
C
C***********************************************************************
C
	SUBROUTINE	GSPLCI(COLI)
C
**	MODULE	GSPLCI
**	IDENT	26AP84
C
C Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C Created				Clarke Brunt	26-April-1984
C
C SET POLYLINE COLOUR INDEX
C
	IMPLICIT NONE
C
C Arguments:
	INTEGER	COLI			! polyline colour index
C
***	COMMON/GKSDAT/
***	COMMON/GKSESL/
C
C workspace
	INTEGER	NCOLI
C
	GKSERR = 0
	IF (COLI.LT.0) GOTO 10
	ICOLI = COLI
	NCOLI = ICOLI
	IF (POFF.NE.0) NCOLI = ISHFT(NCOLI,POFF)! apply offset
	NCOLI = NCOLI.AND.PSEL.AND.255		! restrict to 0-255
	IF (NCOLI.EQ.0.AND.ICOLI.NE.0) NCOLI = ISHFT(1,POFF)
	IF (NCOLI.EQ.CCOLI) GOTO 20	! already set
	CALL WSPLCI(NCOLI)
	CCOLI = NCOLI
	GOTO 20
10	GKSERR = 85			! colour index .LT. 0
20	RETURN
	END
C
C***********************************************************************
C
	SUBROUTINE	GSASF(LASF)
C
**	MODULE	GSASF
**	IDENT	26AP84
C
C Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C Created				Clarke Brunt	26-April-1984
C
C SET ASPECT SOURCE FLAGS
C
	IMPLICIT NONE
C
***	COMMON/GKSDAT/
***	COMMON/GKSESL/
C
C Arguments:
	INTEGER	LASF(ASFMAX)			! list of flags
C
	INTEGER	I
C
	GKSERR = 0
C
C Copy ASFs into common version
	DO 10 I=1,ASFMAX
	   GASF(I) = LASF(I)
10	CONTINUE
	IF (WSOP) CALL WSASF(GASF)		! transmit if open
C
	RETURN
	END
C
C***********************************************************************
C
C	WORKSTATION ATTRIBUTES (Representations)
C	========================================
C
C
	SUBROUTINE	GSPLR(WKID,PLI,LTYPE,LWIDTH,COLI)
C
**	MODULE	GSPLR
**	IDENT	29FE84
C
C Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C Created					CCB	8-Nov-1984
C
C SET POLYLINE REPRESENTATION
C
	IMPLICIT NONE
C
C Arguments:
	INTEGER	WKID			! workstation-identifier
	INTEGER	PLI			! polyline index
	INTEGER	LTYPE			! linetype
	REAL	LWIDTH			! line width scale factor
	INTEGER	COLI			! colour index
C
***	COMMON/GKSDAT/
***	COMMON/GKSESL/
C
C workspace
	INTEGER	I
C
	GKSERR	= 0			! no errors yet
	IF (LTYPE .LE. 0) GOTO 20
	IF (LWIDTH .LE. 0.0) GOTO 30
	IF (COLI .LT. 0 ) GOTO 40
	I = COLI.AND.255		! restrict to 0-255
	IF (I.EQ.0.AND.COLI.NE.0) I = 1	! avoid setting 0
	CALL WSPLR(WKID,PLI,LTYPE,MAX0(1,IFIX(LWIDTH)),I)
	GOTO 50
C
20	GKSERR	= 62			! linetype is invalid
	GOTO 50
30	GKSERR	= 90		! linewidth scale factor is invalid
	GOTO 50
40	GKSERR	= 86			! colour index is invalid
C
50	RETURN
C
	END
C
	SUBROUTINE	GSCR(WKID,CI,RED,GREEN,BLUE)
C
**	MODULE	GSCR
**	IDENT	26AU86
C
C Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C Created					CCB	25-Jul-1985
C
C SET COLOUR REPRESENTATION
C
	IMPLICIT NONE
C
C Arguments:
	INTEGER	WKID			! workstation-identifier
	INTEGER	CI			! colour index
	REAL	RED,GREEN,BLUE		! colour values
C
***	COMMON/GKSDAT/
***	COMMON/GKSESL/
C
	GKSERR = 0
C
	IF (CI.LT.0.OR.CI.GT.MAXCOL)THEN
	   GKSERR	= 93		! colour index is invalid
	ELSEIF (RED.LT.0.0.OR.RED.GT.1.0.OR.
     &		GREEN.LT.0.0.OR.GREEN.GT.1.0.OR.
     &		BLUE.LT.0.0.OR.BLUE.GT.1.0) THEN
	   GKSERR	= 96		! colour out of range
	ELSE
	   CALL WSCR(1,CI,NINT(255.0*RED),
     &			  NINT(255.0*GREEN),
     &			  NINT(255.0*BLUE) )
	ENDIF
C
	RETURN
C
	END
C
C***********************************************************************
C
C	TRANSFORMATION FUNCTIONS
C	========================
C
C
	SUBROUTINE	GSWN(TRN,XMIN,XMAX,YMIN,YMAX)
C
**	MODULE	GSWN
**	IDENT	27JL83
C
C Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C Created					CCB	8-Nov-1984
C
C SET WINDOW 
C
	IMPLICIT NONE
C
C Arguments:
	INTEGER	TRN			! window number
	REAL	XMIN,XMAX,YMIN,YMAX	! rectangular boundaries
C
***	COMMON/GKSDAT/
***	COMMON/GKSESL/
C
	INTEGER TRNTMP			! temporary copy of TRN so as
C					! not to pass back new value.
C
	GKSERR	= 0			! no errors yet
	TRNTMP=TRN+1			! convert to Fortran index
	IF (TRNTMP .LT. 1 .OR. TRNTMP .GT. TRNMAX) GOTO 10
	IF (XMAX .LE. XMIN .OR. YMAX .LE. YMIN) GOTO 20
	WINDOW(1,TRNTMP) = XMIN
	WINDOW(2,TRNTMP) = XMAX
	WINDOW(3,TRNTMP) = YMIN
	WINDOW(4,TRNTMP) = YMAX
	UPTRN = .TRUE.			! transformation needs updating
	GOTO 30
C
10	GKSERR	= 50			! transformation invalid
	GOTO 30
20	GKSERR	= 51			! rectangle definition invalid
C
30	RETURN
C
	END
C
C***********************************************************************
C
	SUBROUTINE	GSVP(TRN,XMIN,XMAX,YMIN,YMAX)
C
**	MODULE	GSVP
**	IDENT	27JL83
C
C Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C Created					CCB	8-Nov-1984
C
C SET VIEWPORT
C
	IMPLICIT NONE
C
C Arguments:
	INTEGER	TRN			! viewport number
	REAL	XMIN,XMAX,YMIN,YMAX	! rectangular boundaries
C
***	COMMON/GKSDAT/
***	COMMON/GKSESL/
C
	INTEGER TRNTMP			! temporary copy of TRN so as
C					! not to pass back new value.
C
	GKSERR	= 0			! no errors yet
	TRNTMP = TRN+1			! convert to Fortran index
	IF (TRNTMP .LT. 1 .OR. TRNTMP .GT. TRNMAX) GOTO 10
	IF (XMAX .LE. XMIN .OR. YMAX .LE. YMIN) GOTO 20
	IF (XMIN .LT. 0.0 .OR. XMAX .GT. 1.0 .OR.
     &	    YMIN .LT. 0.0 .OR. YMAX .GT. 1.0) GOTO 30
	VIEWPT(1,TRNTMP) = XMIN
	VIEWPT(2,TRNTMP) = XMAX
	VIEWPT(3,TRNTMP) = YMIN
	VIEWPT(4,TRNTMP) = YMAX
	UPTRN = .TRUE.			! transformation needs updating
	GOTO 40
C
10	GKSERR	= 50		! transformation number invalid
	GOTO 40
20	GKSERR	= 51		! rectangle definition is invalid
	GOTO 40
30	GKSERR	= 53		! viewport not within NDC unit square
C
40	RETURN
C
	END
C
C***********************************************************************
C
	SUBROUTINE	GSWKWN(WKID,XMIN,XMAX,YMIN,YMAX)
C
**	MODULE	GSWKWN
**	IDENT	27OC83
C
C Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C Created					CCB	8-Nov-1984
C
C SET WORKSTATION WINDOW
C
	IMPLICIT NONE
C
C Arguments:
	INTEGER	WKID			! workstation-identifier
	REAL	XMIN,XMAX,YMIN,YMAX	! rectangular boundaries
C
***	COMMON/GKSDAT/
***	COMMON/GKSESL/
C
	INTEGER	IXMIN,IXMAX,IYMIN,IYMAX
C
	INTEGER	N2V			! to convert NDC to VDC
	REAL	R
	N2V(R) = 65534*(R-0.5)
C	
	GKSERR	= 0			! no errors yet
	IF (XMAX .LE. XMIN .OR. YMAX .LE. YMIN) GOTO 20
	IF (XMIN .LT. 0.0 .OR. XMAX .GT. 1.0 .OR.
     &	    YMIN .LT. 0.0 .OR. YMAX .GT. 1.0) GOTO 30
C
C set up requested window
	WSWIN(1) = XMIN
	WSWIN(2) = XMAX
	WSWIN(3) = YMIN
	WSWIN(4) = YMAX
C
	IXMIN = N2V(XMIN)
	IXMAX = N2V(XMAX)
	IYMIN = N2V(YMIN)
	IYMAX = N2V(YMAX)
	IF (IXMAX.EQ.IXMIN) IXMAX = IXMIN+1
	IF (IYMAX.EQ.IYMIN) IYMAX = IYMIN+1
	CALL WSWKWN(WKID,IXMIN,IXMAX,IYMIN,IYMAX)
C
C and fix up the workstation viewport to same aspect ratio
	CALL GFWKVP(WKID)
	GOTO 40
C
20	GKSERR	= 51	! rectangle definition is invalid
	GOTO 40
30	GKSERR	= 53	! workstation window not within NDC unit square
C
40	RETURN
C
	END
C
C***********************************************************************
C
	SUBROUTINE	GSWKVP(WKID,XMIN,XMAX,YMIN,YMAX)
C
**	MODULE	GSWKVP
**	IDENT	27OC83
C
C Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C Created					RD	27-Oct-1983
C
C SET WORKSTATION VIEWPORT
C
	IMPLICIT NONE
C
C Arguments:
	INTEGER	WKID			! workstation-identifier
	REAL	XMIN,XMAX,YMIN,YMAX	! rectangular boundaries
C
***	COMMON/GKSDAT/
***	COMMON/GKSESL/
C
	REAL	W1,W2,V1,V2		! temporaries
C
	GKSERR	= 0			! no errors yet
	IF (XMAX .LE. XMIN .OR. YMAX .LE. YMIN) GOTO 20
C
C set required viewport
	WSVIEW(1) = XMIN*DCUNIT
	WSVIEW(2) = XMAX*DCUNIT
	WSVIEW(3) = YMIN*DCUNIT
	WSVIEW(4) = YMAX*DCUNIT
C
C force to same aspect ratio as workstation window
	ENTRY GFWKVP(WKID)
C
	V1=WSVIEW(2)-WSVIEW(1)
	V2=WSVIEW(4)-WSVIEW(3)
	W1=WSWIN(2)-WSWIN(1)
	W2=WSWIN(4)-WSWIN(3)
	IF (V1/W1.GT.V2/W2) THEN
	   PXSIZ = W2/V2
	   V1=WSVIEW(1)+W1/PXSIZ
	   V2=WSVIEW(4)
	ELSE
	   PXSIZ = W1/V1
	   V2=WSVIEW(3)+W2/PXSIZ
	   V1=WSVIEW(2)
	ENDIF
	PXSIZ = PXSIZ*65534	! pixel size in VDC
C
C give up if we are about to set a degenerate viewport
	IF (IFIX(WSVIEW(1)).EQ.IFIX(V1).OR.
     &      IFIX(WSVIEW(3)).EQ.IFIX(V2)) GOTO 9999
	CALL WSWKVP(WKID,IFIX(WSVIEW(1)),IFIX(V1),
     &                   IFIX(WSVIEW(3)),IFIX(V2))
	GOTO 9999
C
20	GKSERR = 51	! rectangle definition invalid
	GOTO 9999
30	GKSERR = 54	! workstation viewport not within display space
C
9999	RETURN
C
	END
C
C***********************************************************************
C
	SUBROUTINE	GSELNT(TRN)
C
**	MODULE	GSELNT
**	IDENT	27OC83
C
C Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C Created					CCB	8-Nov-1984
C
C SELECT NORMALISATION TRANSFORMATION  and set clipping limits to viewport
C
	IMPLICIT NONE
C
C Arguments:
	INTEGER	TRN			! transformation number
C
***	COMMON/GKSDAT/
***	COMMON/GKSESL/
C
	INTEGER TRNTMP		! temporary copy of TRN so as not to
C				! pass back new value
C
	GKSERR	= 0			! no errors yet
	TRNTMP=TRN+1			! convert to Fortran index
	IF (TRNTMP .LT. 1 .OR. TRNTMP .GT.TRNMAX) GOTO 10
	TRNCUR	= TRNTMP		! set currently selected
C					! normalisation transformation
	UPTRN = .TRUE.			! transformation needs updating
	GOTO 20
C
10	GKSERR	= 50			! transformation number invalid
C
20	RETURN
C
	END
C
C***********************************************************************
C
C	INPUT FUNCTIONS
C	===============
C
	SUBROUTINE GRQLC(WKID,DEV,ISTAT,ITNR,PX,PY)
C
***	MODULE	GRQLC
***	IDENT	22AU84
C
C Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C Created					CCB	22-Aug-1984
C
C REQUEST LOCATOR
C
	IMPLICIT NONE
C
***	COMMON/HERE:GKSDAT/
***	COMMON/HERE:GKSESL/
C
C arguments
	INTEGER WKID,DEV,ISTAT,ITNR
	REAL	PX,PY
C
C w/s
	INTEGER	IX,IY
C
	CALL WRQLC(WKID,DEV,ISTAT,ITNR,IX,IY)
	ITNR = TRNCUR
	IF (ISTAT.NE.1) ISTAT=GNONE
	IF (UPTRN) CALL GUPTRN
	CALL GKSV2W(1,IX,IY,PX,PY)
	RETURN
	END
C
	SUBROUTINE GRQPK(WKID,DEV,ISTAT,ISEG,IPCID)
C
***	MODULE	GRQPK
***	IDENT	22AU84
C
C Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C Created					CCB	22-Aug-1984
C
C REQUEST PICK
C
	IMPLICIT NONE
C
***	COMMON/HERE:GKSDAT/
***	COMMON/HERE:GKSESL/
C
C arguments
	INTEGER WKID,DEV,ISTAT,ISEG,IPCID
C
	CALL WRQPC(WKID,DEV,ISTAT,ISEG,IPCID)
	IF (ISTAT.NE.1) THEN
	   IF (ISTAT.EQ.4) THEN
	      ISTAT = GNPICK
	   ELSE
	      ISTAT = GNONE
	   ENDIF
	ENDIF
	RETURN
	END
C
	SUBROUTINE GRQST(WKID,DEV,MSTR,ISTAT,LOSTR,ISTR)
C
***	MODULE	GRQST
***	IDENT	22AU84
C
C Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C Created					CCB	22-Aug-1984
C
C REQUEST STRING
C
	IMPLICIT NONE
C
***	COMMON/HERE:GKSDAT/
***	COMMON/HERE:GKSESL/
C
C arguments
	INTEGER WKID,DEV,MSTR,ISTAT,LOSTR,ISTR(MSTR)
C
	CALL WRQST(WKID,DEV,MSTR,ISTAT,LOSTR,ISTR)
	IF (ISTAT.NE.1) ISTAT = GNONE
	RETURN
	END
C

C
C***********************************************************************
C
C	INQUIRY FUNCTIONS
C	=================
C
	SUBROUTINE GQASF(ERRIND,LASF)
C
***	MODULE	GQASF
***	IDENT	01MA84
C
C Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C Created					CCB	1-May-1984
C
C INQUIRE ASPECT SOURCE FLAGS
C
	IMPLICIT NONE
C
***	COMMON/GKSDAT/		! GKS data structures
***	COMMON/GKSESL/
C
C Arguments:
	INTEGER	ERRIND		! Error indicator
	INTEGER	LASF(ASFMAX)	! Aspect source flags
C
	INTEGER	I
C
	GKSERR = 0		! inquiry functions can't gen errors
	ERRIND = 0		! only give indications of them !!
C
	DO 11 I=1,ASFMAX
	   LASF(I) = GASF(I)
11	CONTINUE
C
	RETURN
	END
C
C***********************************************************************
C
	SUBROUTINE GQMDS(WTYPE,ERRIND,COOUNI,RX,RY,LX,LY)
C
***	MODULE	GQMDS
***	IDENT	14SE83
C
C Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C Created					CCB	8-Nov-1984
C
C INQUIRE MAXIMUM DISPLAY SURFACE SIZE
C
	IMPLICIT NONE
C
C Arguments:
	INTEGER	WTYPE		! Workstation type
	INTEGER	ERRIND		! Error indicator
	INTEGER	COOUNI		! Device Coordinate Units
	REAL	RX,RY		! Max. display surface size in DC
	INTEGER	LX,LY		! no. of device units in X and Y
C
***	COMMON/GKSDAT/		! GKS data structures
***	COMMON/GKSESL/
C
	GKSERR = 0		! inquiry functions can't gen errors
	ERRIND = 0		! only give indications of them !!
C
	COOUNI = GMETRE
	RX = DCMAXX
	RY = DCMAXY
	LX = RASTX
	LY = RASTY
C
	RETURN
	END
C
C
C***********************************************************************
C
	SUBROUTINE GQPLF(
     &		WTYPE,N,ERRIND,NLT,LT,NLW,NOMLW,RLWMIN,RLWMAX,NPPLI)
C
***	MODULE	GQPLF
***	IDENT	16MY84
C
C Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C Created					CCB	16-May-1984
C
C INQUIRE POLYLINE FACILITIES
C
	IMPLICIT NONE
C
C Arguments:
	INTEGER	WTYPE		! Workstation type
	INTEGER	N		! list element requested
	INTEGER	ERRIND		! Error indicator
	INTEGER NLT		! number of available linetypes
	INTEGER	LT		! N'th element of available linetypes
	INTEGER NLW		! number of available linewidths
	REAL	NOMLW		! nominal linewidth (DC)
	REAL	RLWMIN,RLWMAX	! range of linewidths
	INTEGER	NPPLI		! number of predefined polyline indices
C
***	COMMON/GKSDAT/		! GKS data structures
***	COMMON/GKSESL/
C
	GKSERR = 0		! inquiry functions can't gen errors
	ERRIND = 0		! only give indications of them !!
C
	NLT = 4			! number of linetypes
	LT = N			! just return N as N'th type
	NLW = 0			! continuous range of linewidths
	NOMLW = GNOMLW		! nominal line width
	RLWMIN = NOMLW		! also the minimum
	RLWMAX = 255*NOMLW	! rather arbitrary maximum
	NPPLI = PLMAX
C
	RETURN
	END
C
C
C***********************************************************************
C
	SUBROUTINE GQLN(ERRIND,LTYPE)
C
***	MODULE	GQLN
***	IDENT	01MA84
C
C Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C Created					CCB	1-May-1984
C
C INQUIRE LINETYPE
C
	IMPLICIT NONE
C
C Arguments:
	INTEGER	ERRIND		! Error indicator
	INTEGER	LTYPE		! line type
C
***	COMMON/GKSDAT/		! GKS data structures
***	COMMON/GKSESL/
C
	GKSERR = 0		! inquiry functions can't gen errors
	ERRIND = 0		! only give indications of them !!
C
	LTYPE = ILTYPE
C
	RETURN
	END
C
C***********************************************************************
C
	SUBROUTINE GQLWSC(ERRIND,LWIDTH)
C
***	MODULE	GQLWSC
***	IDENT	01MA84
C
C Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C Created					CCB	1-May-1984
C
C INQUIRE LINE WIDTH SCALE FACTOR
C
	IMPLICIT NONE
C
C Arguments:
	INTEGER	ERRIND		! Error indicator
	REAL	LWIDTH		! line width scale factor
C
***	COMMON/GKSDAT/		! GKS data structures
***	COMMON/GKSESL/
C
	GKSERR = 0		! inquiry functions can't gen errors
	ERRIND = 0		! only give indications of them !!
C
	LWIDTH = ILWID
C
	RETURN
	END
C
C***********************************************************************
C
	SUBROUTINE GQPLCI(ERRIND,COLI)
C
***	MODULE	GQPLCI
***	IDENT	01MA84
C
C Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C Created					CCB	1-May-1984
C
C INQUIRE POLYLINE COLOUR INDEX
C
	IMPLICIT NONE
C
C Arguments:
	INTEGER	ERRIND		! Error indicator
	INTEGER	COLI		! polyline colour index
C
***	COMMON/GKSDAT/		! GKS data structures
***	COMMON/GKSESL/
C
	GKSERR = 0		! inquiry functions can't gen errors
	ERRIND = 0		! only give indications of them !!
C
	COLI = ICOLI
C
	RETURN
	END
C
	SUBROUTINE	GQCR(WKID,CI,TYPE,ERRIND,RED,GREEN,BLUE)
C
**	MODULE	GQCR
**	IDENT	26AU86
C
C Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C Created					CCB	25-Jul-1985
C
C INQUIRE COLOUR REPRESENTATION
C
	IMPLICIT NONE
C
C Arguments:
	INTEGER	WKID			! workstation-identifier
	INTEGER	CI			! colour index
	INTEGER	TYPE			! type of values (unused)
	INTEGER	ERRIND			! error indicator
	REAL	RED,GREEN,BLUE		! colour values
C
***	COMMON/GKSDAT/
***	COMMON/GKSESL/
C
C workspace
	INTEGER	IRED,IGREEN,IBLUE,ERR
C
	ERRIND = 0
C
	IF (CI.LT.0.OR.CI.GT.MAXCOL)THEN
	   ERRIND	= 86		! colour index is invalid
	ELSE
	   CALL WQCR(WKID,CI,1,ERR,IRED,IGREEN,IBLUE)
	   RED = IRED/255.0
	   GREEN = IGREEN/255.0
	   BLUE = IBLUE/255.0
	ENDIF
C
	RETURN
C
	END
C
C******************************************************
C
C Non-GKS function
	SUBROUTINE	GMOVCR(PX,PY)
C
**	MODULE	GMOVCR
**	IDENT	28OC83
C
C Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C Created					CCB	27-Aug-1984
C
C MOVE CURSOR
C
	IMPLICIT NONE
C
C Arguments:
	REAL	PX			! X coord of position in WC
	REAL	PY			! Y coord of position in WC
C
***	COMMON/GKSDAT/
***	COMMON/GKSESL/
C
C
C Internal variables:
	INTEGER	NX,NY
C
	IF (UPTRN) CALL GUPTRN
	CALL GKSW2V(1,PX,PY,NX,NY)
	CALL WMOVCR(NX,NY)
	RETURN
	END
C
C***********************************************************************
C
C	GKSLDLIB UTILITIES
C	==================
C
	SUBROUTINE GUPTRN
C
***	MODULE	GUPTRN
***	IDENT	08NO94
C
C Copyright Laser-Scan Laboratories Ltd., Cambridge, England
C
C Created				Clarke Brunt	 8-Nov-1984
C
C Update the transformation
C
	IMPLICIT NONE
C
***	COMMON/GKSDAT/
C
C w/s
C
C Work out the scaling factor and offset for WC to NDC transformation.
C Effective formula for transforming a coord is:-
C	XN = XVMIN + (XW-XWMIN) * ((XVMAX-XVMIN)/(XWMAX-XWMIN))
C	YN = YVMIN + (YW-YWMIN) * ((YVMAX-YVMIN)/(YWMAX-YWMIN))
C
C This formula needs to be put into the form:-
C	XN = (XW*SCALEX) + OFFX
C	YN = (YW*SCALEY) + OFFY
C
	SCALEX = 65534*(VIEWPT(2,TRNCUR)-VIEWPT(1,TRNCUR))
     &		/(WINDOW(2,TRNCUR)-WINDOW(1,TRNCUR))
	SCALEY = 65534*(VIEWPT(4,TRNCUR)-VIEWPT(3,TRNCUR))
     &		/(WINDOW(4,TRNCUR)-WINDOW(3,TRNCUR))
	OFFX = 65534*(VIEWPT(1,TRNCUR)-0.5) - (WINDOW(1,TRNCUR)*SCALEX)
	OFFY = 65534*(VIEWPT(3,TRNCUR)-0.5) - (WINDOW(3,TRNCUR)*SCALEY)
C
	UPTRN = .FALSE.		! now up to date
C
	RETURN
	END
C
C***********************************************************************
C
	SUBROUTINE GKSW2V(N,WX,WY,DX,DY)
C
***	MODULE	GKSW2V
***	IDENT	10AU84
C
C Copyright Laser Scan Laboratories Ltd., Cambridge, England.
C Author: Clarke Brunt
C
C Created August 1984
C
C To convert world coordinate WX,WY to virtual device coordinate DX,DY
C
	IMPLICIT NONE
C
***	COMMON/GKSDAT/
C
C arguments
	INTEGER	N		! number of coords
	REAL	WX(*),WY(*)	! input world coordinate
	INTEGER	DX(*),DY(*)	! output virtual device coordinate
C
	INTEGER	I
C
	DO 11 I=1,N
	   DX(I) = NINT(WX(I)*SCALEX+OFFX)
	   IF (ABS(DX(I)).GT.32767) DX(I) = SIGN(32767,DX(I))
	   DY(I) = NINT(WY(I)*SCALEY+OFFY)
	   IF (ABS(DY(I)).GT.32767) DY(I) = SIGN(32767,DY(I))
11	CONTINUE
C
	RETURN
	END
C
	SUBROUTINE GKSV2W(N,VX,VY,WX,WY)
C
***	MODULE	GKSV2W
***	IDENT	10AU84
C
C Copyright Laser Scan Laboratories Ltd., Cambridge, England.
C Author: Clarke Brunt
C
C Created August 1984
C
C To convert virtual device coordinate V1,V2 to world coordinate W1,W2
C
	IMPLICIT NONE
C
***	COMMON/GKSDAT/
C
C arguments
	INTEGER	N		! number of coords
	INTEGER	VX(*),VY(*)	! input virtual device coordinate
	REAL	WX(*),WY(*)	! output world coordinate
C
	INTEGER	I
C
	DO 11 I=1,N
	   WX(I) = (VX(I)-OFFX)/SCALEX
	   WY(I) = (VY(I)-OFFY)/SCALEY
11	CONTINUE
C
	RETURN
	END
C
C *********************************************************************
C
	SUBROUTINE GSCLIP(CLIPSW)
C
***	IDENT	04DE84
***	MODULE	GSCLIP
C
C	Copyright LaserScan Laboratories Ltd., Cambridge, England
C
C Author TJ Ibbs, 4 December 1984
C
C Dummy routine, which totally fails to switch clipping on or off
C
	IMPLICIT NONE
C
C Argument
C
	INTEGER	CLIPSW
C
C
	RETURN
	END
C
C *********************************************************************
C
	SUBROUTINE	GESC(ESCID,DATA)
C
**	MODULE	GESC
**	IDENT	29MY86
C
C Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C Created				Clarke Brunt	9-May-1986
C
C ESCAPE
C
	IMPLICIT NONE
C
C Arguments
	INTEGER ESCID			! escape identifier
	REAL	DATA(2)			! other data
C
	RETURN
	END
