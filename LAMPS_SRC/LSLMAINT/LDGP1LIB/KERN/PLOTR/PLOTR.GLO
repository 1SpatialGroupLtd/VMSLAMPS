{ PLOTR.GLO <> VAX <> 718.300.0076 }

CONST
      Pi = 3.1415926536 ;

      Blank_4  = '    ' ;
      Blank_10 = '          ' ;
      Blank_14 = '              ' ;
      Blank_16 = '                ' ;
      Blank_30 = '                              ' ;
      Blank_40 = '                                        ' ;

      GP_Code = 'GP' ;
      HU_Code = 'HU' ;
      TA_Code = 'TA' ;

      Up_Arrow_Key	= 'A';
      Down_Arrow_Key	= 'B';
      Page_Back		= 'X';
      Page_Forward	= 'Y';

      File_Name_Length	= 30;

     { general kern globals }
      Title                 = 'OFF-LINE PLOTTING                       ' ;
      Help_Text_File        = 'Kph$Plotr:PLOTR.HLP           ' ;

      Max_Field         = 30 ;
      Max_Window_Points = 64 ;

      Max_Record_Length  = 80 ;

      Temp_File = 'BUFFER.TMP' ;
      Max_Layers = 4000 ;
      Chain_String_Length = 80;
      Max_Chain_Command  = 10;

TYPE
      SWord		      = -32768..32767 ;
      String_2                = PACKED ARRAY [1..2 ]   OF CHAR;
      String_3                = PACKED ARRAY [1..3 ]   OF CHAR;
      String_4                = PACKED ARRAY [1..4 ]   OF CHAR;
      String_5                = PACKED ARRAY [1..5 ]   OF CHAR;
      String_7                = PACKED ARRAY [1..7 ]   OF CHAR;
      String_8                = PACKED ARRAY [1..8 ]   OF CHAR;
      String_9                = PACKED ARRAY [1..9 ]   OF CHAR;
      String_10               = PACKED ARRAY [1..10]   OF CHAR;
      String_12               = PACKED ARRAY [1..12]   OF CHAR;
      String_14               = PACKED ARRAY [1..14]   OF CHAR;
      String_15               = PACKED ARRAY [1..15]   OF CHAR;
      String_16               = PACKED ARRAY [1..16]   OF CHAR;
      String_19               = PACKED ARRAY [1..19]   OF CHAR;
      String_30               = PACKED ARRAY [1..30]   OF CHAR;
      String_40               = PACKED ARRAY [1..40]   OF CHAR;
      String_80               = PACKED ARRAY [1..80]   OF CHAR;
      String_128              = PACKED ARRAY [1..128]  OF CHAR;
      String_1024             = PACKED ARRAY [1..1024] OF CHAR;
      String_File_Name_Length = PACKED ARRAY [1..File_Name_Length]    OF CHAR;
      Chain_List              = PACKED ARRAY [1..Max_Chain_Command,
					      1..Chain_String_Length] OF CHAR;

      Record_String = PACKED ARRAY [ 1..Max_Record_Length] OF CHAR;

      Real_Array_3 = ARRAY [1..3] OF DOUBLE ;
      Real_Array_Max_Window_Points = ARRAY [1..Max_Window_Points] OF DOUBLE ;

      Integer_Array_8  = ARRAY [1..8] OF INTEGER ;
      Integer_Array_10 = ARRAY [1..10] OF INTEGER ;

      How_Many_Records     = ( One_Record, Two_Records ) ;

      Two_Foot_Pedals      = ( Left, Right ) ;

      { plotter definitions }
      Segment       = ( ARC, CIRCLE ) ;
      Position      = ( UP, DOWN, SMOOTH ) ;
      Spline        = ( START, CONTINUE, TERMINATE ) ;

  Plotter_Devices_Types = (GP1, DMP, HP, TA2, VWS, KRISS, TEKT, P_DSP, NOP) ;


VAR
     P4_IO:	[COMMON]	INTEGER ;
     P4:	[COMMON]	TEXT ;

     P4_Code:			String_2 ;
     P4_Port:			String_12 ;
     Plotter:			String_12 ;
     Plot_Parameter_File:	String_File_Name_Length ;

     Ten_Digit_Number       : String_14;
     Meters_or_Feet         : String_2 ;
     MM_or_Inches           : String_2 ;
     Gons_or_Degrees        : String_8 ;

     Return                 : BOOLEAN ;
     Scape                  : BOOLEAN ;
     Arrow_Key              : CHAR ;

     Quiet_Display          : BOOLEAN ;

     { constant to compute angular units (gons/degrees) to radians }
     Ro                     : DOUBLE ;

     { plotter library variables }
     Library_File_Name      : String_File_Name_Length ;
     Library_Pointer        : FILE OF String_128 ;
     Library_Size           : INTEGER ;

     { Parameters Definition Page 1 }
     { ============================ }
     Linear_Units           : String_7 ;
     Rotation_Units         : String_7 ;
     Input_File_Name        : String_File_Name_Length ;
     File_Format            : String_14 ;
     Selected_Layers        : String_3 ;

     { Parameters Definition Page 2 }
     { ============================= }
     Event_Counter_Format            : INTEGER ;
     Tag_Field_Single_Format         : INTEGER ;
     Annotation_Format               : INTEGER ;
     Switch_Codes_Format             : INTEGER ;
     X_Single_Format                 : String_8 ;
     Y_Single_Format                 : String_8 ;
     Z_Single_Format                 : String_8 ;
     P_Single_Format                 : String_8 ;
     Computed_Area_Format            : String_8 ;
     Single_Recording_Order          : String_8 ;

     { Parameters Definition Page 3 }
     { ============================= }
     Card_Number_Format              : INTEGER ;
     Tag_Field_Multiple_Format       : INTEGER ;
     Fixed_Annotation                : String_16 ;
     Decimal_Point_Recording         : String_3 ;
     Sign_Of_P_Recording             : String_3 ;
     X_Multiple_Format               : String_8 ;
     Y_Multiple_Format               : String_8 ;
     Z_Multiple_Format               : String_8 ;
     P_Multiple_Format               : String_8 ;
     Fixed_Annotation_Format         : INTEGER ;
     Multiple_Recording_Order        : String_15 ;

     { Parameters Definition Page 4 }
     { ============================ }
     Plotter_Mode           : String_8 ;
     Plot_Horizontal        : String_2 ;
     Plot_Vertical          : String_2 ;
     Plot_X_Scale           : DOUBLE ;
     Plot_Y_Scale           : DOUBLE ;
     Plot_Rotation          : DOUBLE ;
     Plot_X_Index           : DOUBLE ;
     Plot_Y_Index           : DOUBLE ;
     Input_Sheet_Window     : BOOLEAN ;

     { Parameters Definition Page 5 }
     { ============================ }
     Plot_Horizontal_Size   : DOUBLE ;
     Plot_Vertical_Size     : DOUBLE ;

     { Parameters Definition Page 4 }
     { ============================ }
     X_Window,
     Y_Window                 : Real_Array_Max_Window_Points ;
     Nr_Window_Pts            : INTEGER ;

     { Line Definition }
     { =============== }
     Line_Type_Code_Number           : INTEGER ;
     Line_Alpha_Description          : String_16 ;
     Line_Pen_Selection              : INTEGER ;
     Hardware_Line_Type_Number       : INTEGER ;
     Standard_Line_Size              : DOUBLE ;
     Line_Ratio                      : DOUBLE ;
     Line_Symbol_Number              : INTEGER ;
     Line_Symbol_Rotation            : DOUBLE ;
     Line_Node_Symbol_Number         : INTEGER ;
     Line_Voice_Response             : String_16 ;
     Line_Level                      : INTEGER ;

     { Symbol Definition }
     { ================= }

     Symbol_Code_Number              : INTEGER ;
     Symbol_Alpha_Description        : String_16 ;
     Symbol_Pen_Selection            : INTEGER ;
     Hardware_Symbol_Number          : INTEGER ;
     Symbol_File_Name                : String_40 ;
     Standard_Symbol_Size            : DOUBLE ;
     Symbol_Rotation                 : DOUBLE ;
     Symbol_Annotation               : String_4 ;
     Symbol_Fixed_Text               : String_16 ;
     Symbol_Annotation_Size          : DOUBLE ;
     Symbol_Annotation_Text_Slant    : DOUBLE ;
     Symbol_Text_Rotation            : DOUBLE ;
     Symbol_Rotation_Relative_To     : String_14 ;
     Symbol_Voice_Response           : String_16 ;
     Symbol_Level                    : INTEGER ;


     { actual cam mode }
     CAM_Mode                        : INTEGER ;

     { actual plotter off - pen selection }
     Plotter_Status                  : String_5 ;

     { scale factors }
     Line_Symbol_Scale_Factor,
     Display_Scale_Factor            : DOUBLE ;
     Ground_Unit_To_Table_Unit_Factor: DOUBLE ;

     { actual ground coordinates }
     East,
     North,
     Height,
     P_Distance,
     Event_Counter                   : DOUBLE ;

     { table coordinates }
     X_Table,
     Y_Table                         : DOUBLE ;

     { for spline pourposes }
     Last_X_Table,
     Last_Y_Table                    : DOUBLE ;

     { ground coordinate system to table coordinate system }
     E1, E2, E0,
     F1, F2, F0                      : DOUBLE ;


     Left_Foot_Pedal,
     Right_Foot_Pedal                : BOOLEAN ;

     Last_Penup_East,
     Last_Penup_North,
     Last_Penup_Height,
     Last_Penup_P_Dist               : DOUBLE ;

     Last_Foot_Pedal                 : Two_Foot_Pedals ;

     New_Selection                   : BOOLEAN ;

     { plotter output }
     HoustonPort                     : TEXT ;
     Pen                             : Position ;
     Location                        : Spline ;

     Annotation                      : String_40 ;

     { arc variables }
     N_Arc_Points                    : INTEGER ;
     X_Arc,
     Y_Arc,
     Z_Arc                           : Real_Array_3 ;

     Input_Record                    : Record_String ;

     { For KRISS/DSP }
     BStatus:			    BOOLEAN ;
     IStatus:			    INTEGER ;
     Device_Previously_Running:	    BOOLEAN ;

     Plotter_Device                  : Plotter_Devices_Types ;

     { output formats }
     X_Format_Field, X_Format_Decimals,
     Y_Format_Field, Y_Format_Decimals,
     Z_Format_Field, Z_Format_Decimals,
     P_Format_Field, P_Format_Decimals,
     Computed_Area_Format_Field, Computed_Area_Format_Decimals : INTEGER ;

     Input_File                      : TEXT ;

     Computed_Area                   : DOUBLE ;

     Kern_Cam_System_Format,
     Single_Point_Format,
     Multiple_Point_Format           : BOOLEAN ;

     Record_Length                   : INTEGER ;

     { for selected layers }
     Plot_Selected_Layers            : BOOLEAN ;
     Layer                           : BOOLEAN ;
     Layer_File                      : FILE OF BOOLEAN ;
     Selected_Line_Type_Code_Number  : BOOLEAN ;
     Selected_Symbol_Code_Number     : BOOLEAN ;
     Selected_Line_Level             : BOOLEAN ;
     Selected_Symbol_Level           : BOOLEAN ;
     Selected_Layer                  : Integer_Array_10 ;
     Nr_of_Layers                    : INTEGER ;

     Something_to_Plot               : BOOLEAN ;


     { window variables }
     Point_In                        : BOOLEAN ;
     Last_Point_In                   : BOOLEAN ;

     Max_X_Window,
     Max_Y_Window,
     Min_X_Window,
     Min_Y_Window                    : DOUBLE ;

     X_Start,
     Y_Start,
     X_End,
     Y_End                           : DOUBLE ;

     MAPS300_Annotation              : String_40 ;


{========================= main procredures =========================}

[EXTERNAL] PROCEDURE ISV_Initialise_System_Values ;	EXTERNAL ; { PLT001 }

[EXTERNAL] PROCEDURE IOD_Initialise_Output_Device ;	EXTERNAL ; { PLT002 }

[EXTERNAL] PROCEDURE IMV_Initialise_Main_Values ;       EXTERNAL ; { PLT010 }

[EXTERNAL] PROCEDURE RPP_Read_Plot_Parameters_File ;    EXTERNAL ; { PLT011 }

[EXTERNAL] PROCEDURE IPP_Initialise_Plot_Parameters ;   EXTERNAL ; { PLT11A }

[EXTERNAL] PROCEDURE WPP_Write_Plot_Parameters_File ;   EXTERNAL ; { PLT012 }

[EXTERNAL] PROCEDURE Get_Line_Definition ;              EXTERNAL ; { PLT013 }

[EXTERNAL] PROCEDURE Get_Symbol_Definition ;            EXTERNAL ; { PLT014 }

[EXTERNAL] PROCEDURE CLF_Check_Library_File ;           EXTERNAL ; { PLT016 }

[EXTERNAL] PROCEDURE OLF_Open_Library_File ;            EXTERNAL ; { PLT16A }

[EXTERNAL] PROCEDURE CGTT_Compute_Ground_To_Table_Transformation ;
							EXTERNAL ; { PLT017 }
[EXTERNAL] PROCEDURE COF_Compute_Input_Formats ;        EXTERNAL ; { PLT017 }

[EXTERNAL] PROCEDURE CW_Compute_Window ;                EXTERNAL ; { PLT018 }

[EXTERNAL] PROCEDURE CSLF_Create_Selected_Layers_File ; EXTERNAL ; { PLT019 }

[EXTERNAL] PROCEDURE OPF_Open_Plot_File ;               EXTERNAL ; { PLT019 }

[EXTERNAL] PROCEDURE FSPF_Find_Start_of_Plot_File ;     EXTERNAL ; { PLT019 }

[EXTERNAL] PROCEDURE IDS_Init_Display_Screen ;          EXTERNAL ; { PLT020 }

[EXTERNAL] PROCEDURE GGC_Get_Ground_Coordinates
             ( VAR X,Y,Z       : DOUBLE ;
               VAR Annotation  : String_40 ;
               VAR Error       : BOOLEAN     ) ;     	EXTERNAL ; { PLT030 }

[EXTERNAL] PROCEDURE IS_Interpret_String ;              EXTERNAL ; { PLT040 }

[EXTERNAL] PROCEDURE STP_Something_to_Plot ;            EXTERNAL ; { PLT050 }

[EXTERNAL] PROCEDURE PD_Plot_Datas ;                    EXTERNAL ; { PLT060 }

[EXTERNAL] PROCEDURE PXYC_Plot_XY_Coordinates ;         EXTERNAL ; { PLT060 }

[EXTERNAL] PROCEDURE EPP_Exit_Plot_Program ;            EXTERNAL ; { PLT070 }

[EXTERNAL] PROCEDURE CAP_Chain_a_Program
        ( Next_Program : String_File_Name_Length );  	EXTERNAL ; { PLT101 }

{===================== definition page procedures =======================}

[EXTERNAL] PROCEDURE DOP_Define_Overall_Parameters  ;   EXTERNAL ; { PLT110 }

[EXTERNAL] PROCEDURE DMP_Define_Manuscript_Parameters ; EXTERNAL ; { PLT130 }

[EXTERNAL] PROCEDURE LASS_Line_And_Symbol_Selection ;   EXTERNAL ; { PLT170 }

[EXTERNAL] PROCEDURE PMP7_Print_Menu_Page_7 ;           EXTERNAL ; { PLT171 }

[EXTERNAL] PROCEDURE WMP7CRT_Write_Menu_Page_7_CRT ;    EXTERNAL ; { PLT171 }

[EXTERNAL] PROCEDURE SPF_Single_Point_Format ;          EXTERNAL ; { PLT200 }

[EXTERNAL] PROCEDURE MPF_Multiple_Point_Format ;        EXTERNAL ; { PLT201 }

[EXTERNAL] PROCEDURE DMS_Define_Manuscript_Size ;       EXTERNAL ; { PLT203 }

[EXTERNAL] PROCEDURE DMW_Define_Manuscript_Window ;     EXTERNAL ; { PLT204 }

[EXTERNAL] PROCEDURE AP_Add_Point ( VAR Add_Mode : BOOLEAN ) ;
							EXTERNAL ; { PLT240 }
[EXTERNAL] PROCEDURE KP_Kill_Point ;                    EXTERNAL ; { PLT241 }

[EXTERNAL] PROCEDURE EP_Edit_Point
          ( VAR Begin_Scroll_Segment,
                End_Scroll_Segment   : INTEGER ) ;	EXTERNAL ; { PLT242 }

[EXTERNAL] PROCEDURE IP_Insert_Point
          ( VAR Begin_Scroll_Segment,
                End_Scroll_Segment   : INTEGER ) ;	EXTERNAL ; { PLT243 }

{===================== plotting procedures =======================}

[EXTERNAL] PROCEDURE PUDS_Plot_Users_Defined_Symbol ;   EXTERNAL ; { PLT450 }

[EXTERNAL] PROCEDURE FSF_Find_Start_of_File
          ( VAR Error        : BOOLEAN ;
            VAR Symbol_File  : TEXT     ) ;		EXTERNAL ; { PLT451 }

[EXTERNAL] PROCEDURE FTP_Find_Transformation_Parameters
             ( VAR Error                : BOOLEAN ;
               VAR Symbol_File          : TEXT    ;
               VAR A, B, A0, B0         : DOUBLE ;
               VAR Symbol_Center_North,
                   Symbol_Center_East   : DOUBLE ) ;	EXTERNAL ; { PLT451 }

[EXTERNAL] PROCEDURE CSTC_Convert_String_to_Coordinates
             ( VAR X,Y,Z       : DOUBLE ;
               VAR Error       : BOOLEAN ) ;		EXTERNAL ; { PLT451 }

[EXTERNAL] PROCEDURE FPIW_Find_Point_Inside_Window
                   (VAR Point_In       : BOOLEAN ;
                        X_Test, Y_Test : DOUBLE    ) ; 	EXTERNAL ; { PLT510 }

[EXTERNAL] PROCEDURE CPLIW_Compute_Part_Line_In_Window
   (    X_Start, Y_Start,
        X_End, Y_End                  : DOUBLE    ;
    VAR X_Start_Point, Y_Start_Point,
        X_End_Point,   Y_End_Point    : DOUBLE    ;
    VAR Find_Part                     : BOOLEAN ;
    VAR More_Part                     : BOOLEAN ) ;	EXTERNAL ; { PLT520 }


{========================= mlib procedures ==========================}
[EXTERNAL] PROCEDURE CC_Chain_Commands
	( VAR Command_List       :        ARRAY [L1..U1:INTEGER] OF
				   PACKED ARRAY [L2..U2:INTEGER] OF CHAR ;
	      Number_Of_Commands : INTEGER ) ;		EXTERNAL ; {MLIB01}

[EXTERNAL] PROCEDURE Read_Key_Board
	( VAR SString               : String_40 ;
          VAR Number_Of_Characters : INTEGER   ;
          VAR Scape,
              Return               : BOOLEAN   ;
          VAR Arrow_Key            : CHAR      ;
              Max_Length           : INTEGER   ) ; 	EXTERNAL ;   {MLIB02}

[EXTERNAL] PROCEDURE Read_If_There
	( VAR Input   : INTEGER ;
	      Channel : INTEGER ;
	  VAR Got_Char: BOOLEAN ) ;   			EXTERNAL ;   {MLIB2E}

[EXTERNAL] PROCEDURE Convert_To_Numeric
	(     SString               : String_40;
              Number_Of_Characters : INTEGER;
          VAR Value                : DOUBLE ;
          VAR Error                : BOOLEAN ) ; 	EXTERNAL ;   {MLIB03}

[EXTERNAL] PROCEDURE GIOP_Get_IO_Port
	(     Code : String_2 ;
          VAR Port : String_12 ;
	  VAR Error: BOOLEAN ) ;			EXTERNAL ;   {MLIB12}

[EXTERNAL] PROCEDURE MAC_Message_And_Continue
	(     Ten_Digit_Number:	String_14 ;
	  VAR Program_Title:    PACKED ARRAY [L1..U1:INTEGER] OF CHAR ;
	  VAR Message:	        ARRAY [RL..RU:INTEGER]
			        OF PACKED ARRAY [CL..CU:INTEGER] OF CHAR ;
	      Number_Of_Message_Lines: INTEGER ;
	      Return_On_Escape_Key:    BOOLEAN ) ;
							EXTERNAL ; {MLIB14}
[EXTERNAL] PROCEDURE FD_Find_Date
	( VAR Date : String_9 ) ; 			EXTERNAL ;   {MLIB16}

[EXTERNAL] PROCEDURE  SCAWBS_Set_Cursor_And_Write_Black_String
	( VAR Black_String  : String_30 ;
              Line, Column  : INTEGER   ) ; 		EXTERNAL ;   {MLIB17}

[EXTERNAL] PROCEDURE  SCAWBR_Set_Cursor_And_Write_Black_Real
	( Real_Value                 : DOUBLE ;
          Digits_After_Decimal_Point,
          Line, Column               : INTEGER ) ; 	EXTERNAL ;   {MLIB17}

[EXTERNAL] PROCEDURE  SCAWBI_Set_Cursor_And_Write_Black_Integer
	( Int_Value,
          Line, Column    : INTEGER ) ; 		EXTERNAL ;   {MLIB17}

[EXTERNAL] PROCEDURE  IRAWF_Indicate_Reading_And_Writing_Files
	( Message_3,
          Message_4   : String_40 ) ; 			EXTERNAL ;   {MLIB18}

[EXTERNAL] PROCEDURE  KT_Kern_Title
	( Ten_Digit_Number : String_14 ;
          Title            : String_40 ) ; 		EXTERNAL ;   {MLIB19}

[EXTERNAL] PROCEDURE RADH_Read_And_Display_Help
	( Help_Text_File : String_File_Name_Length ;
          Help_Text_Page : INTEGER   ) ; 		EXTERNAL ;   {MLIB24}

[EXTERNAL] PROCEDURE  RIODF_Read_IO_Definition_File
	(     Code             : String_2 ;
          VAR Integer_Address  : INTEGER ) ;  		EXTERNAL ;   {MLIB20}

[EXTERNAL] PROCEDURE Determine_Scroll
	( VAR Begin_Scroll_Segment,
              End_Scroll_Segment       : INTEGER ;
              Number_Of_Programs,
              Lines_Per_Scroll_Segment : INTEGER ;
              Arrow_Key                : CHAR    ) ; 	EXTERNAL ;   {MLIB22}

[EXTERNAL] PROCEDURE IRKB_Interrupt_Read_Key_Board
	( VAR SString               : String_40 ;
          VAR Number_Of_Characters : INTEGER   ;
          VAR Scape,
              Return               : BOOLEAN   ;
          VAR Arrow_Key            : CHAR      ;
              Max_Length           : INTEGER ) ; 	EXTERNAL ;   {MLIB25}

[EXTERNAL] PROCEDURE CRTS_Convert_Real_To_String
	(     Value                : DOUBLE ;
          VAR Field, Decimals      : INTEGER ;
          VAR SString               : String_40 ) ; 	EXTERNAL ;   {MLIB28}

[EXTERNAL] PROCEDURE CITS_Convert_Integer_To_String
	(     Value                : INTEGER ;
          VAR Field                : INTEGER ;
          VAR SString               : String_40 ) ; 	EXTERNAL ;   {MLIB29}

[EXTERNAL] PROCEDURE CFN_Check_File_Name
	( VAR File_Name : String_File_Name_Length ;
	  VAR Valid_Name: Boolean );			EXTERNAL;    {MLIB31}

[EXTERNAL] PROCEDURE CFE_Check_File_Exists
	( VAR File_Name  : String_File_Name_Length ;
	  VAR File_Exists: Boolean ); 			EXTERNAL;    {MLIB32}

[EXTERNAL] PROCEDURE CS_Capitalise_String
	( VAR Textstring: PACKED ARRAY [L..U:INTEGER] OF CHAR ) ;
							EXTERNAL ; {MLIB35}
[EXTERNAL] PROCEDURE CC_Capitalise_Char
	( VAR Ch:	CHAR ) ;			EXTERNAL ; {MLIB35}

[EXTERNAL] PROCEDURE GT_Get_Time
	( VAR Tempus: String_8 );	 		EXTERNAL;    {MLIB38}

[EXTERNAL] PROCEDURE EP_Exit_Program ;			EXTERNAL ;   {MLIB39}

[EXTERNAL] PROCEDURE TD_Time_Delay
	( Tempus: DOUBLE );		 		EXTERNAL;    {MLIB44}

[EXTERNAL] FUNCTION  LS_Length_String
	( Textstring : PACKED ARRAY [L..H:INTEGER] OF CHAR ):
							INTEGER ;
							EXTERNAL ; {MLIB45}
[EXTERNAL] PROCEDURE WQ_Write_QIO
	(     Channel          : INTEGER ;
	  VAR Textstring       : String_1024 ;
	      Length_Of_String : INTEGER ) ;		EXTERNAL ; {MLIB51}

[EXTERNAL] PROCEDURE PKT_Print_Kern_Title
	( Ten_Digit_Number: String_14;
	  Title           : String_40 );    		EXTERNAL ; {MLIB55}

{========================= vt100 procedures ==========================}

[EXTERNAL] PROCEDURE CURPOS_Cursor_Position
	( Line, Column : INTEGER ) ;			EXTERNAL ; {VT1001}

[EXTERNAL] PROCEDURE DBHEIG_Double_Height
	( Top_Line  : INTEGER ) ; 			EXTERNAL ; {VT1003}

[EXTERNAL] PROCEDURE DBWIDT_Double_Width
	( Line  : INTEGER ) ;      			EXTERNAL ; {VT1004}

[EXTERNAL] PROCEDURE SETSCR_Set_Scroll
	( Upper_Line, Lower_Line  : INTEGER ) ;
                                                        EXTERNAL ; {VT1005}
[EXTERNAL] PROCEDURE ERADIS_Erase_Display
	( Where  : CHAR ) ;       			EXTERNAL ; {VT1007}

[EXTERNAL] PROCEDURE ERALIN_Erase_In_Line
	( Where  : CHAR ) ;       			EXTERNAL ; {VT1008}

[EXTERNAL] PROCEDURE SELGRA_Select_Graphics
	( Option  : CHAR ) ;    			EXTERNAL ; {VT1012}

[EXTERNAL] PROCEDURE ERASCR_Erase_Screen ;		EXTERNAL ; {VT1013}

[EXTERNAL] PROCEDURE BELLRI_Bell_Ring ;			EXTERNAL ; {VT1014}


{========================= graflib procedures ==========================}
[EXTERNAL] PROCEDURE Download_WTT_Transformation
	(     E1, E2, E0:	DOUBLE ; 
	      F1, F2, F0:	DOUBLE ) ; 		EXTERNAL ;

[EXTERNAL] PROCEDURE Plot_Annotation
	( VAR File_Ptr:				TEXT ;
              Annotation:			String_40 ;
	      Plotter_Device:			Plotter_Devices_Types ;
	      Symbol_Annotation:		String_4 ;
	      Symbol_Annotation_Size:		DOUBLE ;
	      Symbol_Fixed_Text:		String_16 ;
	      Symbol_Text_Rotation:		DOUBLE ;
	      Standard_Symbol_Size:		DOUBLE ;
	      Display_Scale_Factor:		DOUBLE ;
	      X_Table:				DOUBLE ;
	      Y_Table:				DOUBLE ;
	      Event_Counter:			DOUBLE ;
	      Event_Counter_Format:		INTEGER ;
	      Computed_Area:			DOUBLE ;
	      East:				DOUBLE ;
	      North:				DOUBLE ;
	      Height:				DOUBLE ;
	      P_Distance:			DOUBLE ;
	      X_Format_Field:			INTEGER ;
	      Y_Format_Field:			INTEGER ;
	      Z_Format_Field:			INTEGER ;
	      P_Format_Field:			INTEGER ;
	      X_Format_Decimals:		INTEGER ;
	      Y_Format_Decimals:		INTEGER ;
       	      Z_Format_Decimals:		INTEGER ;
	      P_Format_Decimals:		INTEGER ;
	      Computed_Area_Format_Field:	INTEGER ;
	      Computed_Area_Format_Decimals:	INTEGER ) ;	EXTERNAL ;

[EXTERNAL] PROCEDURE Plot_Arc
	( VAR File_Ptr:		TEXT ;
	      X_Table, Y_Table,
	      Height:		DOUBLE ;
	      Last_Foot_Pedal:	Two_Foot_Pedals ;
	  VAR X_Arc:		Real_Array_3 ;
	  VAR Y_Arc:		Real_Array_3 ;
	  VAR Z_Arc:		Real_Array_3 ;
	  VAR N_Arc_Points:	INTEGER ;
	      Plotter_Device:	Plotter_Devices_Types ) ;	EXTERNAL ;

[EXTERNAL] PROCEDURE Plot_Curve
	( VAR File_Ptr:		TEXT ;
	      Location:		Spline  ;
	      XEnd, YEnd,
	      ZEnd:		DOUBLE ;
	      Plotter_Device:	Plotter_Devices_Types ) ;	EXTERNAL ;

[EXTERNAL] PROCEDURE Plot_Line
	( VAR File_Ptr:		TEXT ;
	      Pen:		Position ;
	      XEnd, YEnd,
	      ZEnd:		DOUBLE ;
	      Plotter_Device:	Plotter_Devices_Types ) ;	EXTERNAL ;


{========================= plotter procedures ==========================}
{======================== needed in real time ==========================}

[EXTERNAL] PROCEDURE Close_Plotter
	( VAR File_Ptr:		TEXT ) ;			EXTERNAL ;

[EXTERNAL] PROCEDURE DP_Download_Parameters
	( VAR File_Ptr:		TEXT ;
	      Screen_Width:	DOUBLE ;
	      Screen_Height:	DOUBLE ;
	      Program_Name:	String_14 ;
	      Ten_Digit_Number:	String_14 ;
	      Buffered_Output:	BOOLEAN ;
	      Nominal_Scale:	DOUBLE ) ;			EXTERNAL ;

[EXTERNAL] PROCEDURE ILS_Initialize_Line_and_Symbols
	( VAR File_Ptr:				TEXT ;
	      CAM_Mode:				INTEGER ;
	      Plotter_Status:			String_5 ;
	      Hardware_Line_Type_Number:	INTEGER ;
	      Standard_Line_Size:		DOUBLE ;
	      Line_Pen_Selection:		INTEGER ;
	      Line_Symbol_Rotation:		DOUBLE ;
	      Line_Symbol_Number:		INTEGER ;
	      Line_Ratio:			DOUBLE ;

	      Hardware_Symbol_Number:		INTEGER ;
	      Standard_Symbol_Size:		DOUBLE ;
	      Display_Scale_Factor:		DOUBLE ;
	      Symbol_Pen_Selection:		INTEGER ;
	      Symbol_Rotation:			DOUBLE ;
	      Symbol_Annotation_Size:		DOUBLE ;
	      Symbol_Annotation_Text_Slant:	DOUBLE ;
	      Symbol_Text_Rotation:		DOUBLE ) ;	EXTERNAL ;

[EXTERNAL] PROCEDURE IP_Initialize_Plotter
	( VAR File_Ptr:		TEXT ) ;			EXTERNAL ;

[EXTERNAL] PROCEDURE PCharS
	( VAR File_Ptr:		TEXT ;
	      CharacterScale:	DOUBLE ) ;			EXTERNAL ;

[EXTERNAL] PROCEDURE PLineN
	( VAR File_Ptr:		TEXT ;
	      LineNumber:	INTEGER ;
	  VAR Symbolnumber:	INTEGER ) ;			EXTERNAL ;

[EXTERNAL] PROCEDURE PLineS
	( VAR File_Ptr:		TEXT ;
	      LineNumber:	INTEGER ;
	      LineScale:	DOUBLE ) ;			EXTERNAL ;

[EXTERNAL] PROCEDURE PLSRot
	( VAR File_Ptr:	  	TEXT ;
	      LineSymbolRotation: DOUBLE ) ;			EXTERNAL ;

[EXTERNAL] PROCEDURE PPen
	( VAR File_Ptr:		TEXT ;
	      PenNumber:	INTEGER ) ;			EXTERNAL ;

[EXTERNAL] PROCEDURE PRatio
	( VAR File_Ptr:		TEXT ;
	      LineNumber:	INTEGER ;
	      LineRatio:	DOUBLE ) ;			EXTERNAL ;

[EXTERNAL] PROCEDURE PSlant
	( VAR File_Ptr:		TEXT ;
	      TextSlant:	DOUBLE ) ;			EXTERNAL ;

[EXTERNAL] PROCEDURE PS_Plotter_Status
	( VAR File_Ptr:		TEXT ;
	  VAR Status:		BOOLEAN ) ;			EXTERNAL ;

[EXTERNAL] PROCEDURE PSRota
	( VAR File_Ptr:		TEXT ;
	      SymbolRotation:	DOUBLE ) ;			EXTERNAL ;

[EXTERNAL] PROCEDURE PStr
	( VAR File_Ptr:		TEXT ;
	      SString:		String_40 ) ;			EXTERNAL ;

[EXTERNAL] PROCEDURE PSymb
	( VAR File_Ptr:		TEXT ;
	  VAR SymbolNumber:	INTEGER ;
	       Symbolsize:	DOUBLE ) ;			EXTERNAL ;

[EXTERNAL] PROCEDURE PSymbS
	( VAR File_Ptr:		TEXT ;
	      SymbolScale:	DOUBLE    ) ;			EXTERNAL ;

[EXTERNAL] PROCEDURE PTRota
	( VAR File_Ptr:		TEXT ;
	      TextRotation:	DOUBLE ) ;			EXTERNAL ;


{========================= P2 procedures ==========================}
[EXTERNAL] PROCEDURE SUP_Start_User_Program ;			EXTERNAL ;

[EXTERNAL] PROCEDURE P2CL_Check_If_P2_Loaded
	( VAR P2_Loaded:	BOOLEAN ) ;			EXTERNAL ;


{========================= Betalib procedures ==========================}
[EXTERNAL] FUNCTION CNGRTL
	(     Status : INTEGER ):		INTEGER ;	EXTERNAL ;

[EXTERNAL] FUNCTION Registration:		BOOLEAN ;	EXTERNAL ;

[EXTERNAL] PROCEDURE Enable_PLine_Buffer ;			EXTERNAL ;



{========================= Menu procedures ==========================}
[EXTERNAL] PROCEDURE Read_And_Write_Metafiles
	(     Ten_Digit_Number:		String_14 ;
	      Title:			String_40 ;
	  VAR Scape:			BOOLEAN ) ;		EXTERNAL ;
