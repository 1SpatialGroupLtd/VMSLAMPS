C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1982-06-23 17:40:42.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
C Copyright Laser-Scan Laboratories Limited, Cambridge, England.
C
C Author: D. Meader
C
C	Created 				 DM	23-Jun-1982
C
C Routines for reading ":number" after a switch (in free format).
C Return	0	if error
C	       -1	if success
C	       +1	if success and terminated by a comma
C N.B. terminating comma is swallowed !
C
	INTEGER FUNCTION FFSWVI(I)
C
***	MODULE FFSWVI
***	IDENT  23JN82
C
	BYTE ICH
	INTEGER*2 I
	LOGICAL FFRDI,RDCHS
C
	I=0
	FFSWVI=0
	IF (RDCHS(ICH)) RETURN
	IF (ICH.NE.':') GO TO 10
	FFSWVI=FFRDI(I)
	CALL FFSWOK(FFSWVI)
	RETURN
C
10	CALL BSCH
	RETURN
	END
C
	INTEGER FUNCTION FFSWVL(L)
C
***	MODULE FFSWVL
***	IDENT  23JN82
C
	BYTE ICH
	INTEGER*4 L
	LOGICAL FFRDL,RDCHS
C
	L=0
	FFSWVL=0
	IF (RDCHS(ICH)) RETURN
	IF (ICH.NE.':') GO TO 10
	FFSWVL=FFRDL(L)
	CALL FFSWOK(FFSWVL)
	RETURN
C
10	CALL BSCH
	RETURN
	END
C
	INTEGER FUNCTION FFSWVO(I)
C
***	MODULE FFSWVO
***	IDENT  23JN82
C
	BYTE ICH
	INTEGER*2 I
	LOGICAL FFRDO,RDCHS
C
	I=0
	FFSWVO=0
	IF (RDCHS(ICH)) RETURN
	IF (ICH.NE.':') GO TO 10
	FFSWVO=FFRDO(I)
	CALL FFSWOK(FFSWVO)
	RETURN
C
10	CALL BSCH
	RETURN
	END
C
	INTEGER FUNCTION FFSWVP(L)
C
***	MODULE FFSWVP
***	IDENT  23JN82
C
C Reads long_octal switch values.
C
	BYTE ICH
	INTEGER*4 L
	LOGICAL FFRDLO,RDCHS
C
	L=0
	FFSWVP=0
	IF (RDCHS(ICH)) RETURN
	IF (ICH.NE.':') GO TO 10
	FFSWVP=FFRDLO(L)
	CALL FFSWOK(FFSWVP)
	RETURN
C
10	CALL BSCH
	RETURN
	END
C
	INTEGER FUNCTION FFSWVR(R)
C
***	MODULE FFSWVR
***	IDENT  23JN82
C
	BYTE ICH
	LOGICAL FFRDR,RDCHS
	REAL R
C
	R=0.0
	FFSWVR=0
	IF (RDCHS(ICH)) RETURN
	IF (ICH.NE.':') GO TO 10
	FFSWVR=FFRDR(R)
	CALL FFSWOK(FFSWVR)
	RETURN
C
10	CALL BSCH
	RETURN
	END
C
	INTEGER FUNCTION FFSWVD(R)
C
***	MODULE FFSWVD
***	IDENT  23JN82
C
	BYTE ICH
	LOGICAL FFRDR8,RDCHS
	REAL*8 R
C
	R=0.0D0
	FFSWVD=0
	IF (RDCHS(ICH)) RETURN
	IF (ICH.NE.':') GO TO 10
	FFSWVD=FFRDR8(R)
	CALL FFSWOK(FFSWVD)
	RETURN
C
10	CALL BSCH
	RETURN
	END
C
	SUBROUTINE FFSWOK(LOGVAL)
C
***	MODULE	FFSWOK
***	IDENT	23JN82
C
C See if value just read was terminated by a comma.
C Return value accordingly.
C
	LOGICAL LOGVAL,TMPVAL
C
***	COMMON/TXTC/
C
	TMPVAL=0
	IF (LOGVAL) GO TO 10		! error - return zero
	TMPVAL=-1
	IF (DCPTR.EQ.1) GO TO 10
	IF (TXTBUF(DCPTR-1).EQ.',') TMPVAL=1
10	LOGVAL=TMPVAL
	RETURN
	END
