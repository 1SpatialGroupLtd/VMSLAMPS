C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1982-06-10 10:34:22.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL FUNCTION RDNUM(I,BASE)
C
***	MODULE	RDNUM
***	IDENT	10JN82
C
C Copyright Laser-Scan Laboratories Ltd,Cambridge,England
C
C Author: M.C.Fulford
C
C	Modified not to swallow commas		 DM	07-Jun-1982
C	Rehashed				 DM	09-Mar-1982
C	Created					MCF	26-Jan-1979
C
C Reads an integer (to a given base) from a line of text.
C Result is .TRUE. if no digits are read.
C
	BYTE	  ICH	! character
	INTEGER*2 BASE	! numerical base
	INTEGER*2 SIGN	! sign of number
	INTEGER*4 I	! where the number goes
C
	LOGICAL RDCH
C
	RDNUM=.TRUE.
	I=0
	SIGN=1						! implicit plus
C
C ... get any leading items.
10	IF (RDCH(ICH)) GO TO 50
	IF (ICH.EQ.' '.OR.ICH.EQ.9) GO TO 10		! space or tab
	IF (ICH.EQ.'+') GO TO 20			! plus
	IF (ICH.NE.'-') GO TO 30			! minus
	SIGN=-1
C
C ... digits.
20	IF (RDCH(ICH)) GO TO 50				! get next char
30	ICH=ICH-48					! '0' => 0 etc.
	IF (ICH.LT.0.OR.ICH.GE.BASE) GO TO 40
	I=I*BASE + ICH*SIGN
	RDNUM=.FALSE.
	GO TO 20
C
C ... end of number.
40	CALL BSCH
50	RETURN
	END
C
	LOGICAL FUNCTION RDINT(I)
C
***	MODULE	RDINT
***	IDENT	09MR82
C
C Reads a single length decimal integer.
C
	INTEGER*2 I
	INTEGER*4 L
C
	LOGICAL	  RDNUM
C
	RDINT=RDNUM(L,10)
	I=L
	RETURN
	END
C
	LOGICAL FUNCTION RDOCT(I)
C
***	MODULE	RDOCT
***	IDENT	09MR82
C
C Reads a single length octal integer.
C
	INTEGER*2 I
	INTEGER*4 L
C
	LOGICAL	  RDNUM
C
	RDOCT=RDNUM(L,8)
	I=L
	RETURN
	END
C
	LOGICAL FUNCTION RDLONG(L)
C
***	MODULE	RDLONG
***	IDENT	09MR82
C
C Reads a double length decimal integer.
C
	INTEGER*4 L
C
	LOGICAL	  RDNUM
C
	RDLONG=RDNUM(L,10)
	RETURN
	END
C
	LOGICAL FUNCTION RDLOCT(L)
C
***	MODULE	RDLOCT
***	IDENT	09MR82
C
C Reads a double length octal integer.
C
	INTEGER*4 L
C
	LOGICAL	  RDNUM
C
	RDLOCT=RDNUM(L,8)
	RETURN
	END
