;
; * This file is part of the LAMPS distribution, released as a software
; * preservation project to archive digital history for future historians.
; * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
; *
; * Timestamp of this file for the 2002 release was: 1983-01-31 13:06:30.000000000 +0000
; *
; * This program is free software: you can redistribute it and/or modify
; * it under the terms of the GNU General Public License as published by
; * the Free Software Foundation, version 3.
; *
; * This program is distributed in the hope that it will be useful, but
; * WITHOUT ANY WARRANTY; without even the implied warranty of
; * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
; * General Public License for more details.
; *
; * You should have received a copy of the GNU General Public License
; * along with this program. If not, see http://www.gnu.org/licenses/.
;
	.TITLE	TXM
	.IDENT /25MY82/
	.ENABL	LC

; Interface to Tektronix 4010 terminal
; RSX version	P. Cross  SEP 76

;  necessary system macros
	.MCALL	QIO$S,WTSE$S,SPCIO$
	SPCIO$		; define I/O function codes

; linkage to free-format LUNs

	.GLOBL	FFOLUN, FFOEFN, FFILUN, FFIEFN

; I/O status block

TXISB:	.BLKW	2

; TXWT(CH,N) writes N bytes from byte array CH

TXWT::	JSR	R4,TXIO
	 .WORD	FFOEFN,FFOLUN,IO.WAL
	RTS	PC

; TXRD(CH,N) reads N bytes from 4010 to byte array CH

TXRD::	JSR	R4,TXIO
	 .WORD	FFIEFN,FFILUN,IO.RAL
10$:	BICB	#200,(R1)+	; clr parity bit of each byte
	SOB	R2,10$
	RTS	PC

; common subroutine - issue QIO to the terminal

TXIO:	MOV	2(R5),R1	; get buffer address
	MOV	@4(R5),R2	; and word count
	QIO$S	(R4)+,@(R4)+,@(R4)+,,#TXISB,,<R1,R2>
	MOV	$DSW,R0
	BCS	10$		; j if directive rejected
	WTSE$S	@-6(R4)		; await completion
	MOV	TXISB,R0	; examine status
	TSTB	R0
	BGT	20$		; j if no error
10$:	BPT
20$:	RTS	R4

;
; TXCODE(IX,IY,CH) where CH(4) is a byte array
; converts (IX,IY) into 4 bytes for 4010 GRAPH mode

TXCODE:: MOV	@2(R5),R2	; IX
	MOV	@4(R5),R3	; IY
	MOV	6(R5),R4	; CH
;
	MOV	R3,R1
	ASH	#-5,R1		; high Y
	BIC	#MASK5,R1
	BIS	#000040,R1	; set tag bits
	MOVB	R1,(R4)+	; save
	BIC	#MASK5,R3	; low Y
	BIS	#000140,R3	; tag
	MOVB	R3,(R4)+
	MOV	R2,R1
	ASH	#-5,R1		; high X
	BIC	#MASK5,R1
	BIS	#000040,R1	; tag
	MOVB	R1,(R4)+
	BIC	#MASK5,R2	; low X
	BIS	#000100,R2	; tag
	MOVB	R2,(R4)
	RTS	PC

MASK5 = 177740			; mask to bottom 5 bits

	.END
