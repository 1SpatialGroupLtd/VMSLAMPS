C Copyright Laser-Scan Laboratories Limited, Cambridge, England.
C
C Author: D. Meader
C
C	"=" also allowed as delimiter		 DM	23-Jun-1982
C	Created 				 DM	10-Jun-1982
C
C "Free-format" read routines.
C The character which terminates a number (read by a primitive such as
C RDNUM) is checked for validity. Acceptable delimiters are: '/', ':',
C '+', '-', '=', space, tab, comma and end-of-line. If no digits are
C read, or the delimiter is invalid (indicating bad syntax) the
C functions return a value of zero and are .TRUE.
C The only exception is that trailing commas are allowed even if no
C digits have been read . This allows ",3" to be read as two numbers,
C zero and 3. Note also that commas are swallowed; in all other cases
C DCPTR is left pointing AT the delimiter, but in the case of a comma it
C points to the NEXT character.
C
	LOGICAL FUNCTION FFRDI(I)
C
***	MODULE	FFRDI
***	IDENT	10JN82
C
	INTEGER*2 I
	INTEGER*4 L
C
	LOGICAL RDNUM,FFRDOK
C
	FFRDI=RDNUM(L,10)
	I=L
	IF (FFRDOK(FFRDI)) RETURN
	I=0				! error detected
	RETURN
	END
C
	LOGICAL FUNCTION FFRDO(I)
C
***	MODULE	FFRDO
***	IDENT	10JN82
C
	INTEGER*2 I
	INTEGER*4 L
C
	LOGICAL RDNUM,FFRDOK
C
	FFRDO=RDNUM(L,8)
	I=L
	IF (FFRDOK(FFRDO)) RETURN
	I=0				! error detected
	RETURN
	END
C
	LOGICAL FUNCTION FFRDL(L)
C
***	MODULE	FFRDL
***	IDENT	10JN82
C
	INTEGER*4 L
C
	LOGICAL RDNUM,FFRDOK
C
	FFRDL=RDNUM(L,10)
	IF (FFRDOK(FFRDL)) RETURN
	L=0				! error detected
	RETURN
	END
C
	LOGICAL FUNCTION FFRDLO(L)
C
***	MODULE	FFRDLO
***	IDENT	10JN82
C
	INTEGER*4 L
C
	LOGICAL RDNUM,FFRDOK
C
	FFRDLO=RDNUM(L,8)
	IF (FFRDOK(FFRDLO)) RETURN
	L=0				! error detected
	RETURN
	END
C
	LOGICAL FUNCTION FFRDR(R)
C
***	MODULE	FFRDR
***	IDENT	10JN82
C
	REAL	  R
C
	LOGICAL RDREAL,FFRDOK
C
	FFRDR=RDREAL(R)
	IF (FFRDOK(FFRDR)) RETURN
	R=0.0				! error detected
	RETURN
	END
C
	LOGICAL FUNCTION FFRDR8(R8)
C
***	MODULE	FFRDR8
***	IDENT	10JN82
C
	REAL*8	  R8
C
	LOGICAL RREAL8,FFRDOK
C
	FFRDR8=RREAL8(R8)
	IF (FFRDOK(FFRDR8)) RETURN
	R8=0.0D0			! error detected
	RETURN
	END
C
	LOGICAL FUNCTION FFRDOK(LOGVAL)
C
***	MODULE	FFRDOK
***	IDENT	23JN82
C
C Check the delimiting character for validity.
C
	BYTE	  ICH
	LOGICAL	  LOGVAL	! value returned by primitive
C
	LOGICAL	  RDCH
C
	FFRDOK=.FALSE.			! assume duff syntax
	IF (.NOT.RDCH(ICH)) GO TO 30	! end of line ?
10	IF (LOGVAL) RETURN		! nothing read -> error
20	LOGVAL=.FALSE.			! else ok
	FFRDOK=.TRUE.
	RETURN
C
30	IF (ICH.EQ.',') GO TO 20	! swallow comma ...
	CALL BSCH			! but nothing else
C
C ... look for valid delimeters.
	IF (ICH.EQ.' ' .OR. ICH.EQ.'/' .OR. ICH.EQ.':' .OR.
     &	    ICH.EQ.'-' .OR. ICH.EQ.'+' .OR. ICH.EQ.'=' .OR.
     &	    ICH.EQ.9) GO TO 10
	LOGVAL=.TRUE.			! error
	RETURN
	END

