;
; * This file is part of the LAMPS distribution, released as a software
; * preservation project to archive digital history for future historians.
; * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
; *
; * Timestamp of this file for the 2002 release was: 1982-03-16 11:30:50.000000000 +0000
; *
; * This program is free software: you can redistribute it and/or modify
; * it under the terms of the GNU General Public License as published by
; * the Free Software Foundation, version 3.
; *
; * This program is distributed in the hope that it will be useful, but
; * WITHOUT ANY WARRANTY; without even the implied warranty of
; * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
; * General Public License for more details.
; *
; * You should have received a copy of the GNU General Public License
; * along with this program. If not, see http://www.gnu.org/licenses/.
;
	.TITLE	FLWOC
	.IDENT	/16MR82/
	.ENABL	LC
;
; Copyright Laser-Scan Laboratories Limited, Cambridge, England.
;
; Authors: M.C.Fulford & P.G.Hardy
;
;	FLWDEL added (close and delete o/p file) DM	16-Mar-1982
;
; write record to disc file using Fortran FDBs & FCS
; file open and close section
;

	.MCALL	OFNB$W,FDAT$R,CLOSE$,DELET$

; ERROR=FLWOPN(LUN, [IERR]) opens file on LUN using FORTRAN FDB

FLWOPN::MOV	#FLWLUN, R1
	MOV	#-1,     R2
	CALL	LI$ARG
	MOV	@R1, R1
	CALL	FL$WSL		; find appropriate FDB and select
	MOV	R2, -(SP)
	FDAT$R	R0,#R.VAR,#FD.CR
	OFNB$W	R0,FLWLUN
	MOV	(SP)+, R2
	MOVB	F.ERR(R0),R0	; sign extend error code
	CMP	R2, #-1
	BEQ	20$
	MOV	R0, @R2
20$:	MOV	R0,FLWERR	; save it
	SXT	R0
	RETURN

; FLWSEL(LUN) finds FORTRAN FDB for LUN and selects it for writing

FLWSEL::MOV	#FLWLUN, R1
	CALL	LI$ARG
	MOV	@R1, R1
FL$WSL:	MOV	FLWFDB,R0	; current fdb
	MOV	R2, -(SP)
	MOV	R1, R2
	CMP	R2,FLWLUN	; same as before ?
	BEQ	1$		; yes
	MOV	R2,FLWLUN	; save selection
	CALL	$FCHNL		; find FDB
	ADD	#14,R0		; to get FDB address
	MOV	R0,FLWFDB	; save it
1$:	MOV	(SP)+, R2
	RETURN			; return it in R0

; FLWCLO closes the selected file

FLWCLO::TST	FLWLUN
	BEQ	3$		; no selection
	CLOSE$	FLWFDB		; and close the file
	CLR	FLWLUN		; null selection
3$:	RETURN

; FLWPRT is as FLWCLO but spools the file for printing

FLWPRT::TST	FLWLUN
	BEQ	3$		; no selection
	MOV	FLWFDB,R0	; current selected fdb
	CALL	.PRINT		; spool it
	CLR	FLWLUN		; no selection
3$:	RETURN

; FLWDEL closes and deletes the selected file

FLWDEL::TST	FLWLUN
	BEQ	3$		; no selection
	DELET$	FLWFDB		; close & delete the file
	CLR	FLWLUN		; null selection
3$:	RETURN


	.PSECT	FLWCOM,D,GBL,OVR

FLWERR:	.WORD	0	; error marker
FLWFDB:	.BLKW	1	; currently selected FDB
FLWLUN:	.WORD	0	; currently selected LUN

	.END
