C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1982-05-07 10:46:36.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	INTEGER FUNCTION CMLTIT(MCR)
C
C Copyright Laser-Scan Laboratories Ltd, Cambridge, England
C Author Paul Hardy
C
***	MODULE	CMLTIT
***	IDENT	07MR82
C
C Written and typed			anon	21.x.76
C
C Argument changed from WORD to BYTE 	JHR	7.iv.82
C  (echoes RF's change in VIOLIB copy)
C Not to zero switch array,		RF	15.iii.82
C      permit negated switches
C Made a function (for PDP-11)		RD	19.i.82
C Adapted for RDFILT			PGH	13.iii.79
C Modified for GETCML			PGH	1.i.78
C
C read in command line containing IFF file title
C leaves title in IFFTIT & EXPBUF
C also reads any switches present
C
***	COMMON/EXPC/
***	COMMON/TXTC/
***	COMMON/SWITCH/
C
	LOGICAL*1	MCR
	LOGICAL		RDCH,RDCHS	! read characters
	LOGICAL		RDINT		! read number (for sw value)
	LOGICAL		RDFILT		! read file title
	INTEGER		GETCML		! get command line input
C
C w/s
	INTEGER*2	IDS		! DSW return
	BYTE		CHAR		! character to be red from file
	LOGICAL*1	SWVAL		! switch value
C
C get CML command line
	CMLTIT=0
1	MCR=GETCML(TXTBUF,IDS,'IFF title ?  ')
CC	IF(MCR.LT.0.AND.IDS.EQ.-10) GOTO 1  ! EOF at end of MCR line
	IF(IDS.EQ.-10) GOTO 9999
	IF(IDS.EQ.0) GOTO 1
	IF(IDS.LT.0) GOTO 997
C
C Set end pointer and clear last byte
	TXTPTR=IDS
	TXTBUF(IDS+1)=0
	CMLTIT=IDS
	DCPTR=1
	NSW=-1
C
C Now read title from it
	IF (RDFILT(IFFTIT,40,'IF:IFF.IFF;0',.TRUE.,.TRUE.,.TRUE.,IDS)
     +  ) GOTO 998
C
C copy into NUM
	CALL EXPAND('%S',IFFTIT)
CcC
CcC zero the switch array
Cc	DO 15 I=1,26
Cc15	   SWITCH(I)=.FALSE.
C
C and read the switches
20	IF(RDCHS(CHAR)) RETURN
25	IF(CHAR.NE.'/') GOTO 50
	SWVAL = .TRUE.				! init value for switch
C
C switch coming up: get letter
	IF (RDCHS(CHAR)) GOTO 994
	IF (CHAR.EQ.'-') GOTO 40		! go to negate
C
C now it HAS to be a switch letter
27	IF (CHAR.GE.'a'.AND.CHAR.LE.'z')
     &            CHAR = CHAR-('a'-'A')		! upper-case
	IF(CHAR.GT.'Z'.OR.CHAR.LT.'A') GOTO 996	! fault non-letter
	NSW = CHAR-64				! get switch number
	SWITCH(NSW) = SWVAL			! set value
	IF (RDCHS(CHAR)) RETURN			! look for :
	IF (CHAR.NE.':') GOTO 25
C
C read number after ':'
30	IF(RDINT(SWINT(NSW))) GOTO 995
	GOTO 20
C
C it's '-' - negate switch and get another character
40	SWVAL = .FALSE.
	IF (.NOT.RDCHS(CHAR)) GOTO 27
	RETURN
C
C overshot: it wasn't a '/'
50	CALL BSCH
	RETURN
C
C Errors
994	CALL MSGF('Unexpected end of line')
	GOTO 1
C
995	CALL MSGF('Bad number for switch %C',NSW+64)
	GOTO 1
C
996	CALL MSGF('Bad Switch "%C"',CHAR)
	GOTO 1
C
997	CALL MSGF('GETCML error %N',IDS)
	GOTO 9999
C
998	CALL MSGF('RDFILT error %N',IDS)
	GOTO 9999
C
9999	CALL EXIT
	END
