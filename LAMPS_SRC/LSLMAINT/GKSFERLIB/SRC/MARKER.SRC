C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1987-11-19 17:04:36.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
C
C***********************************************************************
C
C	POLYMARKER PRIMITIVE
C	====================
C
	SUBROUTINE	GPM(N,PX,PY)
C
**	MODULE	GPM
**	IDENT	19NO87
C
C Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C Created					CCB	9-May-1986
C
C POLYMARKER
C
	IMPLICIT NONE
C
C Arguments:
	INTEGER N			! number of points
	REAL	PX(N)			! X coords of points in WC
	REAL	PY(N)			! Y coords of points in WC
C
***	COMMON/GKSDAT1/
C
C Internal variables:
	INTEGER	I			! loop variable
	REAL	QX,QY
C
	IF (N.LT.1) THEN
	   CALL GKSERR(100,'GPM')	! number of points invalid
	   GOTO 9999
	ENDIF
C
C Is this workstation active?
	IF (.NOT.WSACT) GOTO 100
C
C Make sure transformation is up to date
	IF (UPTRN) CALL GUPTRN
C
C Is everything clipped ?
	IF (CLPALL) GOTO 100
C
	CALL FER_FLUSHP		! flush out any polylines
C
C Make sure polyline attributes are up to date
	IF (UPMAR) CALL GUPMAR
C
C Loop for each marker
	DO 90 I = 1, N
	   QX = PX(I)
	   QY = PY(I)
	   IF (ENCLIP) THEN
	      IF (QX.LT.CLIPLO(1).OR.QX.GT.CLIPHI(1) .OR.
     &            QY.LT.CLIPLO(2).OR.QY.GT.CLIPHI(2) ) GOTO 90
	   ENDIF
C transform World Coordinates to Workstation Device Coordinates
	   QX = (QX*SCALEX)+OFFX
	   QY = (QY*SCALEY)+OFFY
	   CALL FER_MARKER(QX,QY)
90	CONTINUE
C
	IF (DEFER .EQ. GASAP) CALL GUWK(WKIDS,0)
100	CONTINUE
C
9999	RETURN
	END
C
C***********************************************************************
C
C	POLYMARKER ATTRIBUTES
C	=====================
C
C
	SUBROUTINE	GSPMI(INDEX)
C
**	MODULE	GSPMI
**	IDENT	29FE84
C
C Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C Created					CCB	9-May-1986
C
C SET POLYMARKER INDEX
C
	IMPLICIT NONE
C
C Arguments:
	INTEGER	INDEX			! polymarker index
C
***	COMMON/GKSDAT1/
C
	IF (INDEX .LT. 1 .OR. INDEX .GT. PMMAX) THEN
	   CALL GKSERR(64,'GSPMI')	! polymarker index is invalid
	ELSEIF (INDEX.NE.PMIND) THEN	! if current already, ignore
	   PMIND = INDEX		! set it to current index
	   UPMAR = .TRUE.		! attributes need updating
	ENDIF
C
	RETURN
	END
C
C***********************************************************************
C
	SUBROUTINE	GSMK(MTYPE)
C
**	MODULE	GSMK
**	IDENT	26AP84
C
C Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C Created				Clarke Brunt	26-April-1984
C
C SET MARKER TYPE
C
	IMPLICIT NONE
C
C Arguments:
	INTEGER	MTYPE			! marker type
C
***	COMMON/GKSDAT1/
C
	IF (MTYPE.EQ.0) THEN
	   CALL GKSERR(69,'GSMK')	! marker type .EQ. 0
	ELSE
	   IMTYPE = MTYPE
	   UPMAR = .TRUE.		! attributes need updating
	ENDIF
	RETURN
	END
C
C***********************************************************************
C
	SUBROUTINE	GSMKSC(MSZSF)
C
**	MODULE	GSMKSC
**	IDENT	26AP84
C
C Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C Created				Clarke Brunt	26-April-1984
C
C SET MARKER SIZE SCALE FACTOR
C
	IMPLICIT NONE
C
C Arguments:
	REAL	MSZSF			! marker size scale factor
C
***	COMMON/GKSDAT1/
C
	IF (MSZSF.LT.0.0) THEN
	   CALL GKSERR(71,'GSMKSC')	! factor .LT. 0.0
	ELSE
	   IMSZSF = MSZSF
CCC	   UPMAR = .TRUE.		! no update, marker size ignored
	ENDIF
	RETURN
	END
C
C***********************************************************************
C
	SUBROUTINE	GSPMCI(COLI)
C
**	MODULE	GSPMCI
**	IDENT	26AP84
C
C Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C Created				Clarke Brunt	26-April-1984
C
C SET POLYMARKER COLOUR INDEX
C
	IMPLICIT NONE
C
C Arguments:
	INTEGER	COLI			! polymarker colour index
C
***	COMMON/GKSDAT1/
C
	IF (COLI.LT.0) THEN
	   CALL GKSERR(85,'GSPMCI')	! colour index .LT. 0
	ELSE
	   IMCOLI = COLI
CCC	   UPMAR = .TRUE.		! no update, colour ignored
	ENDIF
	RETURN
	END
C
C***********************************************************************
C
	SUBROUTINE	GSPMR(WKID,PMI,MTYPE,MSZSF,COLI)
C
**	MODULE	GSPMR
**	IDENT	29FE84
C
C Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C Created					CCB	9-May-1986
C
C SET POLYMARKER REPRESENTATION
C
	IMPLICIT NONE
C
C Arguments:
	INTEGER	WKID			! workstation-identifier
	INTEGER	PMI			! polymarker index
	INTEGER	MTYPE			! marker type
	REAL	MSZSF			! marker size scale factor
	INTEGER	COLI			! colour index
C
***	COMMON/GKSDAT1/
C
	INTEGER	ERR
C
	ERR = 0
	IF (PMI .LT. 1 .OR. PMI .GT. PLMAX ) THEN
	   ERR = 66			! polymarker index is invalid
	ELSEIF (MTYPE .EQ. 0) THEN
	   ERR = 69			! marker type is invalid
	ELSEIF (MSZSF .LT. 0) THEN
	   ERR = 71			! scale factor .LT. 0
	ELSEIF (COLI .LT. 0 ) THEN
	   ERR = 93			! colour index is invalid
	ELSE
	   MKTYPE(PMI) = MTYPE		! store values in bundle table
	   MKSZSF(PMI) = MSZSF
	   MKCOL(PMI)  = COLI
	   IF (PMI .EQ. PMIND) UPMAR = .TRUE.	! apply if current
	ENDIF
	IF (ERR.NE.0) CALL GKSERR(ERR,'GSPMR')
C
	RETURN
	END
C
C***********************************************************************
C
C INQUIRE POLYMARKER FACILITIES is not implemented
C
C***********************************************************************
C
	SUBROUTINE GQMK(ERRIND,MTYPE)
C
***	MODULE	GQMK
***	IDENT	01MA84
C
C Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C Created					CCB	1-May-1984
C
C INQUIRE MARKERTYPE
C
	IMPLICIT NONE
C
C Arguments:
	INTEGER	ERRIND		! Error indicator
	INTEGER	MTYPE		! marker type
C
***	COMMON/GKSDAT1/		! GKS data structures
C
	ERRIND = 0		! no error indication
	MTYPE = IMTYPE
C
	RETURN
	END
C
C***********************************************************************
C
	SUBROUTINE GQMKSC(ERRIND,MSZSF)
C
***	MODULE	GQMKSC
***	IDENT	01MA84
C
C Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C Created					CCB	1-May-1984
C
C INQUIRE MARKER SIZE SCALE FACTOR
C
	IMPLICIT NONE
C
C Arguments:
	INTEGER	ERRIND		! Error indicator
	REAL	MSZSF		! marker size scale factor
C
***	COMMON/GKSDAT1/		! GKS data structures
C
	ERRIND = 0		! no error indication
	MSZSF = IMSZSF
C
	RETURN
	END
C
C***********************************************************************
C
	SUBROUTINE GQPMCI(ERRIND,COLI)
C
***	MODULE	GQPMCI
***	IDENT	01MA84
C
C Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C Created					CCB	1-May-1984
C
C INQUIRE POLYMARKER COLOUR INDEX
C
	IMPLICIT NONE
C
C Arguments:
	INTEGER	ERRIND		! Error indicator
	INTEGER	COLI		! polymarker colour index
C
***	COMMON/GKSDAT1/		! GKS data structures
C
	ERRIND = 0		! no error indication
	COLI = IMCOLI
C
	RETURN
	END
C
C***********************************************************************
C
	SUBROUTINE GUPMAR
C
***	MODULE	GUPMAR
***	IDENT	27NO84
C
C Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C Created				Clarke Brunt	26-April-1984
C
C Update the polymarker attributes
C
	IMPLICIT NONE
C
C local variables
	INTEGER	NMTYPE
	LOGICAL*1	NTANG,NMAG
C
***	COMMON/GKSDAT1/		! GKS data structures
C
	IF (GASF(4).EQ.GBUNDL) THEN
	   NMTYPE = MKTYPE(PMIND)
	ELSE
	   NMTYPE = IMTYPE
	ENDIF
	NMTYPE = NMTYPE-1	! start at 0
C
C marker size scale factor, and colour are ignored
C
C split 'marker type' into components
C
	NMAG = .FALSE.
	IF (NMTYPE.GE.1000) THEN
	   NMAG = .TRUE.
	   NMTYPE = MOD(NMTYPE,1000)
	ENDIF
	NTANG = .FALSE.
	IF (NMTYPE.GE.100) THEN
	   NTANG = .TRUE.
	   NMTYPE = MOD(NMTYPE,100)
	ENDIF
C
	IF ((CMAG.NEQV.NMAG).OR.CMTYPE.NE.NMTYPE) THEN
	   CMAG = NMAG		! set magnification
	   CMTYPE = NMTYPE	! set marker type
	   CALL FER_SYMBOL(CMTYPE)	! symbols start at 0
	   UPLIN = .TRUE.	! may clobber polyline symbol
	ENDIF
C
C set up correct symbol angle, or tangential control
C
	IF ((CTANG.NEQV.NTANG).OR.CANG.NE.SANG) THEN
	   CTANG = NTANG
	   CANG = SANG
	   IF (CTANG) THEN
	      CALL FER_TANG
	   ELSE
	      CALL FER_SANG(CANG)
	   ENDIF
	   UPLIN = .TRUE.	! may clobber polyline
	ENDIF
C
	UPMAR = .FALSE.		! polymarker now up to date
	RETURN
	END
