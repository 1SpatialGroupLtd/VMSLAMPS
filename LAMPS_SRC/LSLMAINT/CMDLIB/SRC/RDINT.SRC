C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1984-09-17 10:44:52.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL FUNCTION RDINT(I)
C
***	MODULE RDINT
***	IDENT 17SE84
C
C Read a single length decimal integer
C
C argument:
	INTEGER*2 I	! for returning result
C
	INCLUDE '($SSDEF)/NOLIST'
C
***	COMMON/HERE:CMDCOM/
C
C w/s
	INTEGER*4 L
C
C function called
	LOGICAL RDLONG
C
C condition handler
	EXTERNAL	RDCOMM_CHAND
	INTEGER*4	RDCOMM_CHAND
C
C establish handler in our call frame
	CALL LIB$ESTABLISH(RDCOMM_CHAND)
C
C no exception yet
	RDCOMM_EXCP = SS$_NORMAL
C
C get the answer
	RDINT = RDLONG(L)
C
C transcribe it
	I = L
C
C throw away the efforts if truncation produced (e.g.) an overflow
	IF (.NOT.RDCOMM_EXCP) RDINT = .TRUE.
C
C if any failure, force result zero
	IF (RDINT) I = 0
	RETURN
C
	END
