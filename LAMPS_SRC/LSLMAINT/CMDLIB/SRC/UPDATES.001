17.xi.82	Robin Fairbairns
	   CMDCOM.CMN - Make into reference to [COMMON.VIOLIB] version
	   WINDEF.CMN - Make into reference to [COMMON.VIOLIB] version
	   CMDBLD.COM - Remove references to CMDTAB in assembly of
			 FINCMD and SORTAB
	   CMDT.COM   - Remove reference to CMDTAB in assembly of CMDTT
	   CMDTAB.MAR - Totally 'macro-ised';
			$CMCOM renamed as $CMDCOM;
			the whole put into LSLMACLIB
			 (changed sources no longer with us)
	   CMDTT.MAR  - Add invocation of LSLMACLIB at start
	   FINCMD.MAR - Define command table flags with $$CMTAB_INIT;
			change name of common block macro to $CMDCOM
	   SORTAB.MAR - Define command table flags with $$CMTAB_INIT

4.xi.82		Robin Fairbairns
	   CMDTAB.MAR - Add provision for 'C' argspec;
			move checking of numbers of integer and real args out
			 of .IRPC loop;
			provide interlock against both C and S in one command
	   CMDTT.MAR  - Add C, CF and S commands
	   CMDFLG.PAR - Add _x_CHAR things
	   CMDTST     - Deal with C, CF and S (all the same code)
	   RDCOMM     - Deal with char arguments
	   SHELLSORT  - Change IMPLICIT CHARACTER*1 to NONE

(Actually I did all the rest, too)

16.viii.82 SORTAB.MAR - CALLs (one commented out) to be G^
11.viii.82 RDNUM  - Make provision for permitting ms bit input in hex, octal
			numbers, ensuring we still get overflow if numbers
			overflow 32 bits
6.viii.82 CMDBLD.COM - Add RDDBLE to number stuff;
		       add 'help' facility
	  RDDBLE - New, implements RDDBLE/RREAL8
4.viii.82 RDAUXC - Correct typing error
	  RDCH   - Remove spurious reference to AUXPTR
	  SETWIN - Correct check on using auxiliary buffer;
		   check the window size argument positive
3.viii.82 WINDEF.CMN - Add auxiliary buffer variables
	  CMDBLD.COM - Add RDAUXC, SETAUX
	  BSLN   - Cancel auxiliary input buffer, as well
	  RDAUXC - New, extract byte from character variable
	  RDCH   - Add code to deal with auxiliary buffer
	  RDREAL - Only copy NUMTOR into result variable if
			there's been no error
	  SETAUX - New, set command input from alternative buffer
	  SETWIN - Cope with auxiliary buffers
2.viii.82 WINDEF.CMN - New, control for text line windowing
	  CMDBLD.COM - Add SETWIN
	  BSLN   - Set WINDEF marker for SETWIN
	  SETWIN - New, a version of MTC DMS input routine
19.vii.82 CMDBLD.COM - Add RDNUME
	  RDNUME - New, external version of RD_NUM_AB for compatibility
		    with LIOLIB
16.vii.82 CMDBLD.COM - Add DCPSAV, DCPSET
	  DCPSAV - New, return DCPTR
	  DCPSET - New, reset DCPTR (safely)
	  RDCOMM - Treat comma-separated arguments as 'free-format'
			(in DM's FORTRAN-derived sense);
		   don't swallow comma after last argument
15.vii.82 CMDBLD.COM - New build file, separates numbers and other decoding
			in FORTRAN build
	  RDHEX  - Now reads single-length number (new version adapted from
		    modified RDOCT)
	  RDLHEX - New, double-length version (what was RDHEX);
		   now uses RD_NUM_AB, RD_SIGN
	  RDLOCT - New, reads double-length octal (adapted from new RDLHEX)
	  RDLONG - Now uses RD_NUM_AB, RD_SIGN
	  RDNUM  - Changed routine name to RD_NUM_AB
		    (it's an internal subroutine)	
	  RDOCT  - Now uses RD_NUM_AB, RD_SIGN
	  RDREAL - Permit 'e' for exponent, not to mention '&' (auggh!);
		   remove explicit checks for silly exponent, denominator -
		    let the hardware do our checking
	  RDSIGN - Changed routine name to RD_SIGN
		    (it's an internal subroutine)	
23.vi.82 RDCOMM - Allow '=' (implemented yesterday) to be optional
	 RDREAL - Only try for rational format if '/' is followed by
		   decimal digit
22.vi.82 CMDTAB.MAR - Add EQUAL switch
	 CMDFLG.PAR - Add CMD$x_EQUAL
	 RDCOMM - If EQUAL switch on command, look for '=' before arguments
5.v.82 RDCOMM - Set up STARLE before calling RDSTR for string arg
2.iv.82 FINCMD.MAR - Put code in standard VIOLIB code PSECT
	HAVARG.MAR - As FINCMD.MAR
	SORTAB.MAR - As FINCMD.MAR
30.iii.82 CMDTAB.MAR - Add RDCOMM_EXCP (!)
12.iii.82 UPDATES.DOC - Renamed as CMDLIB.UPD
12.ii.82 RDRCMP - Correct check on RDCOMM_EXCP (in re. zeroing the result argument)
21.i.82 RDINT  - Force result zero if ANY failure (including overflow)
	RDNUM  - As RDINT
	RDOCT  - As RDINT
	RDRCMP - As RDINT
	RDREAL - As RDINT;
		 only set CALLERS_HADDOT if no failure
20.i.82 CMDCOM.CMN - Add RDCOMM_EXCP, and exception error numbers
	CMDC.COM - Add CHAND to FORTRAN stuff
	CHAND  - New, an exception handler for the RDCOMM-called things
	RDCOMM - Deal with all those exceptions coming back from number readers
	RDINT  - Add code to deal with exceptions
	RDNUM  - As RDINT
	RDOCT  - As RDINT
	RDRCMP - As RDINT;
		 change name to RDREAL_CMPT;
		 add IMPLICIT CHARACTER*1
	RDREAL - As RDINT;
		 refer to RDREAL_CMPT;
		 add IMPLICIT CHARACTER*1
6.i.82 FINCMD.MAR - Use MOVTC instruction to take to upper case (there is one!);
		    save size of table on stack at start for CORRECT check of
		     ambiguity search against the top of the table
23.xii.81 CMDFLG.PAR - New, defines individual command flags
	  TBLFLG.PAR - New, defines command table flags
	  BSCH,BSLN,CVT,RDCH,RDRCMP,RDREAL - Refer to TXTC via CMNVIO logical name
	  RDCOMM - Use new parameter files;
		   add provision for reading numeric commands
	  RDLONG - CORRECT NAME USED FOR DEFAULT_BASE ARG IN CODE
8.xii.81 CMDCOM.CMN - Add DEFBASE
	 CMDTAB.MAR - Add DEFBASE to CMDCOM
	 RDCOMM - Use DEFBASE in call to RDLONG if not 0
	 RDLONG - Add DEFAULT_BASE argument, use it if it's there
7.xii.81 CMDC.COM - Add HAVARG to macro stuff;
		    remove RDRFCM from ADC line once more
	 HAVARG.MAR - New, check existence of argument
	 RDCOMM - Back to status quo ante - uses RDREAL once more
	 RDREAL - Back once more from being RDRFCM, uses HAVE_I_AN_ARG
	 RDRFCM - Withdrawn
4.xii.81 RDHEX  - New, read double-length hexadecimal
3.xii.81 CMDC.COM - Add RDRFCM to ADC line
	 RDCOMM - Call RDRFCM, not RDREAL
	 RDREAL - New one, simply relays to RDRFCM, having supplied an HADDOT
		   argument, which it then throws away
	 RDRFCM - Renaming of what was RDREAL
1.xii.81 RDSTR  - Allow underlines in command strings
17.ix.81 RDSTR  - Deal with TERM<0 (as documentation!)
16.ix.81 CMDC.COM - Output LIB/CREATE before it's done, for greater realism!
	 CMDCOM.CMN - Add ERRNUM, NOMESS;
		      define ERRxxx parameters defining error numbers
	 CMDTAB.MAR - Add ERRNUM, NOMESS to common block definition
	 RDCOMM - Cope with NOMESS, return ERRNUM correctly
5.xi.81 CMDCOM.CMN - Add HADDOT
	CMDC.COM - Add RDRCMP to ADCing
	CMDTAB.MAR - Add HADDOT to CMDCOM
	FINCMD.MAR - Clear R11 save from stack after ambiguity search
		      ends at exact match
	RDCOMM - Set HADDOT FALSE once initially verified command;
		 call RDREAL with HADDOT as argument
	RDRCMP - Modification of SOL/IGES version
	RDREAL - Modification of SOL/IGES version - supersedes old one
4.xi.81 RDNUM  - Define little parameters for conversion of bytes
2.xi.81 CMDTAB.MAR - Add marker to number of commands in command table header
	FINCMD.MAR - Detect marker in command table header;
		     if it's not there, dereference to take account of the beastly descriptor that's appeared;
		     adjust command number before using as index on flags arrays
	SORTAB.MAR - Detect marker in command table header;
		     if it's not there, dereference to take account of the beastly descriptor that's appeared;
		     don't pass 'marked' number of commands to SHELL_SORT
	RDCOMM - Actually return command number, when successful (!)
27.x.81 RDCOMM - Add provision to skip commas after numeric arguments
		  (if appropriate switch given on command definition)
26.x.81 CMDCOM.CMN - New, defines command arguments, etc
	CMDC.COM - Renamed from CMD.COM, since there now exists logical name CMD:;
		   deal more satisfactorily with compiling, etc., 'new';
		   add provision to deal with separate MACRO and FORTRAN;
		   add RDCOMM, SHELLSORT to FORTRAN
	CMDTAB.MAR - Add CMD$x_COMMA;
		     make the $CMTAB macro generate FORTRAN common blocks for tables,
		      and use argument NAME in default of PSECT;
		     add code that accepts U (upper case), and . (comma!)
		      in the flags part of $CMTAB, $CMD macros respectively;
		     change the significance of M and N flags in $CMTAB,
		      and parameterise the initial value of $$$TBF
		     add CMD_INTCT, _REALCT to common block
	RDCOMM - New, read and decode arguments of a command
	RDLONG - Correct case of letters in line that calls RDNUM
	RDSTR  - Make inexplicit INTEGER declarations INTEGERs*4 (including function name)
20.x.81 CMD.COM - New, command file to assemble, compile, and make library
	CMDTAB.MAR - Add to CMDCOM: descriptor for command name;
				    word to hold 'whole table' flags;
				    buffers for characters of command name and string argument;
		     change declaration of REALARG to .BLKF;
		     make more explicit declaration of STRARG descriptor
	FINCMD.MAR - Copy table flags to CMD_TBFLAG
	BSCH   - Add (restore?) END statement!
15.x.81 BSCH, RDCH, RDCHS - Replacement versions slightly modified from VIOLIB sources
	BSLN   - Slightly modified from VIOLIB - get to start of line
	RDINT  - Slightly modified from VIOLIB - read INTEGER*2 via RDLONG
	RDLONG - Slightly modified from VIOLIB - read INTEGER*4, allowing for
		  base specified by '^<char>', via RDNUM
	RDNUM  - Slightly modified from VIOLIB - read number to arbitrary base
	RDOCT  - Slightly modified from VIOLIB - read integer*2 to base 8, via RDNUM
	RDSIGN - New, read sign for RDLONG, RDOCT
7.x.81 BSCH   - New, from SOL, backspace by one character
       RDCH   - New, from SOL, but using BYTE instead of INTEGER characters,
		 read one character from input line
       RDCHS  - New, from SOL, but using BYTE instead of INTEGER characters,
		 read one character from input line ignoring spaces and tabs
       RDSTR - New, to read string for command decode
2.x.81 CMDTAB.MAR - Add definition of CMT$x_UPCASE;
		    add .PAGE at end, in case producing listing file
       FINCMD.MAR - Add code upper-casing input command strings;
		    convert several BRBs to BRWs (it's gotten bigger!)
       SHELLSORT - Remove commented-out debugging statements, tidy other comments
30.ix.81 CMDTAB.MAR - Add $CMCOM macro definition
	 FINCMD.MAR - Modify to take command table from a CMDTAB table,
			not an array as originally defined
28.ix.81 SORTAB.MAR - Correct indexing in SORTAB_CFSTR
	 SHELLSORT - Correct discrimination conditional in inner loop;
		     correct slice sequence from CST notes (vs. my memory!)
25.ix.81 SORTAB.MAR - Correct indexing in SORTAB_SWAP
24.ix.81 SORTAB.MAR - Add subroutine SORTAB_SWAP
	 SHELLSORT - New, routine to perform a shell sort
23.ix.81 CMDTAB.MAR - Define command and command table flags symbolically;
		      use the symbols in macros
	 SORTAB.MAR - Use symbols for command table flag bits

