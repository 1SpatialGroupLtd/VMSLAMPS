C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1984-09-18 10:23:24.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE CMDERR
C
***	IDENT	18SE84
***	MODULE	CMDERR
C
C	Copyright LaserScan Laboratories Ltd., Cambridge, England
C
C Author TJ Ibbs, 26 May 1983
C
C When we use RDCOMM with errors disabled, we may still wish to
C provide an error message. This routine provides these.
C
	IMPLICIT NONE
C
***	COMMON/HERE:CMDCOM/	! CMDLIB common block
C
C also need
C
	LOGICAL		RDCH	! reads a character in
C
	BYTE		CHAR	! the character it reads
C
C
C give an appropriayte message (appropriayte?)
C
	IF ( ERRNUM.EQ.0 ) THEN
C
	   CALL TTWSTR('Command missing')
C
	ELSEIF ( ERRNUM.EQ.ERRUXC ) THEN
C
	   CALL EXPAND('Unexpected ')
	   CALL BSCH			! unread the character
C
	   IF ( RDCH(CHAR) ) THEN	! read it in again
	      CALL TTWSTR(
     &	    '*** Internal error - trying to read unexpected character')
	   ELSE
	      CALL WRITAP('"%A1"',CHAR)
	   ENDIF
C
	ELSEIF ( ERRNUM.EQ.ERRUXS ) THEN
C
	   CALL WRITEF('Unexpected ''%S''',CMDNST)
C
	ELSE IF ( ERRNUM.EQ.ERSUXS ) THEN
C
	  CALL WRITEF('Unexpected ''%S''', SECNST)
C
	ELSEIF ( ERRNUM.EQ.ERRAMB ) THEN
C
	   CALL WRITEF('Command ''%S'' is ambiguous',CMDNST)
	   CALL WRITEF(' (as between ''%S'' and ''%S'')',
     &				   CMDFST,    CMDAST	)
C
	ELSE IF ( ERRNUM.EQ.ERSAMB ) THEN
C
	  CALL WRITEF('Command ''%S'' is ambiguous', SECNST)
	  CALL WRITEF(' (as between ''%S'' and ''%S'')',
     &				  CMSFST,    CMDAST	)
C
	ELSEIF ( ERRNUM.EQ.ERREOL ) THEN
C
	   CALL TTWSTR('Unexpected end of line')
C
	ELSEIF ( ERRNUM.EQ.ERRFDV ) THEN
C
	   CALL TTWSTR('Floating division overflow')
C
	ELSEIF ( ERRNUM.EQ.ERRFOV ) THEN
C
	   CALL TTWSTR('Floating overflow')
C
	ELSEIF ( ERRNUM.EQ.ERRFUN ) THEN
C
	   CALL TTWSTR('Floating underflow')
C
	ELSEIF ( ERRNUM.EQ.ERRIDV ) THEN
C
	   CALL TTWSTR('Integer division overflow')
C
	ELSEIF ( ERRNUM.EQ.ERRIOV ) THEN
C
	   CALL TTWSTR('Integer overflow')
C
	ELSEIF ( ERRNUM.EQ.ERRBEX ) THEN
C
	   CALL TTWSTR(
     &		'Unexpected exception from number read routines')
	   CALL GEN_SYSMSG( RDCOMM_EXCP )
C
	ELSE IF (ERRNUM.EQ.ERRBIQ) THEN
	   CALL TTWSTR('Bad inquality name')
C
	ELSE
	   CALL WRITEF('Unexpected RDCOMM error %N', ERRNUM)
C
	ENDIF
C
C and that is that, so clear the error number
C
	ERRNUM = 0
C
	RETURN
	END
