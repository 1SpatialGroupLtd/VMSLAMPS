	SUBROUTINE SHELL_SORT(TABLE, COUNT, CF, SWAP)
C
***	MODULE SHELL_SORT
***	IDENT 04NO82
C
	IMPLICIT NONE
C
C Copyright Laser Scan Laboratories Ltd., Cambridge, England
C Author R. Fairbairns
C
C Coded September 1981
C
C To sort table into order defined by routine supplied by caller
C
C Arguments
	INTEGER*4	TABLE		! it's actually an array,
C i.e.	CHARACTER*(*)	TABLE(*)	! but this s/r need never know
	INTEGER*2	COUNT		! count of elements in the table
	INTEGER*4	CF		! routine to compare elements
C	SUBROUTINE	SWAP		! to swap two elements
C
C w/s
	INTEGER*4	COUNT4		! copy of COUNT
	INTEGER*4	SLICE		! holds current slice of array
	INTEGER*4	I, J		! loop variable
C
C copy COUNT, initialise
	COUNT4 = COUNT
	SLICE  = COUNT4
C
C outer loop: decide slice
10	SLICE  = (SLICE+2)/3		! not quite an optimal choice
C
C inner loop: compare elements separated by slice
20	DO 30 I = SLICE+1,COUNT4
	   DO 30 J = I,SLICE+1,-SLICE
	      IF ( CF(TABLE, J, J-SLICE) .GE. 0 )
     &               GOTO 30		! this pair already OK
	      CALL SWAP(TABLE, J, J-SLICE) ! correct order of this pair
30	   CONTINUE
C
C go back for next slice, unless already done 'finest'
	IF (SLICE .NE. 1) GOTO 10
	RETURN
C
	END
