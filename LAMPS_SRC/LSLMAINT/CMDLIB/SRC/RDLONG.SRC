	LOGICAL FUNCTION RDLONG(L, DEFAULT_BASE)
C
***	MODULE RDLONG
***	IDENT 15JL82
C
C Read a double length integer,
C  having established its BASE (default 10)
C
C arguments:
	INTEGER*4	L		! for returning result
	INTEGER*2	DEFAULT_BASE	! to use in absence of ^x
C
C w/s
	INTEGER*2 SIGN, BASE
	BYTE CH
C
C functions called
	LOGICAL		RDCH, RDCHS	! read characters
	LOGICAL		RD_NUM_AB	! read the number
	LOGICAL		HAVE_I_AN_ARG	! check presence of argument
C
C character definitions
	PARAMETER UPA	= '101'O
	PARAMETER UPB	= '102'O
	PARAMETER UPD	= '104'O
	PARAMETER UPO	= '117'O
	PARAMETER UPX	= '130'O
	PARAMETER LWA	= '141'O
	PARAMETER UPARR	= '136'O
C
C initialise
	CALL RD_SIGN(SIGN)
	BASE = 10
	IF (HAVE_I_AN_ARG(2)) BASE = DEFAULT_BASE
C
C establish any forced base
	IF (RDCH(CH)) GOTO 30
	IF (CH.NE.UPARR) GOTO 10
C
C look for forced base letter
	IF (RDCH(CH)) GOTO 30
	IF (CH.GE.LWA) CH = CH-LWA+UPA
C
C look for new base
	BASE = -1
	IF (CH.EQ.UPB) BASE = 2
	IF (CH.EQ.UPD) BASE = 10
	IF (CH.EQ.UPO) BASE = 8
	IF (CH.EQ.UPX) BASE = 16
	IF (BASE.LT.0) GOTO 20
C
C get a character-in-hand for label 10
	IF (RDCHS(CH)) GOTO 30
C
C now read number proper
10	CALL BSCH
	RDLONG = RD_NUM_AB(L,BASE,SIGN)
	RETURN
C
C fail exit: '^<unknown>'
20	CALL BSCH
C
C fail exit: (^)end of line
30	RDLONG = .TRUE.
	RETURN
C
	END
