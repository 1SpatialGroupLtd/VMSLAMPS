C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1984-12-04 14:59:14.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	PROGRAM CMDTST
C
***	MODULE CMDTST
***	IDENT 04DE84
C
	IMPLICIT NONE
C
C Copyright Laser Scan Laboratories Ltd., Cambridge, England
C Author R. Fairbairns
C
C Coded July 1982
C
C To test the command routines
C
***	COMMON/HERE:CMDCOM/
***	COMMON/LSL$CMNVIO:TXTC/
C
C workspace
	INTEGER*4	I		! loop variable
	INTEGER*4	CMD		! command number
	INTEGER*4	LSTCMD(2)	! name of last command found
	INTEGER*4	MAXADD		! max number added so far
	INTEGER*4	NAMVAL		! for name-table tests
	INTEGER*2	NCHS		! feedback from VIOLIB
	BYTE		CH		! for constructing command flags
	LOGICAL*1	UFLG_FLG	! copy of NOUFLG
	INTEGER*4	UFLAG_CPY	! copy of UFLAG
C
C functions called
	INTEGER*4	RDCOMM
	INTEGER*2	TTRSTR
	INTEGER*4	ADDNAM
C
C command table
	INTEGER*4	CMDTST_CMD_TABLE
	EXTERNAL	CMDTST_CMD_TABLE
C
C stuff for INIT, ADD, FIND
	INTEGER*4	OCMTAB(100)	! room for 49 names
	BYTE		OCMBYT(1000)	! reasonable?!
C
C preset inequality names
	CHARACTER*3	INEQ_NAMES(0:5)
	DATA		INEQ_NAMES/'EQL', 'GTR', 'GEQ',
     &				   'LSS', 'LEQ', 'NEQ'/
C
C preset dynamic table control
	DATA		MAXADD /0/
C
C also 'last command found'
	DATA		LSTCMD /2*0/
C
C announce ourselves
	CALL WRITEF('Command routine tester')
	CALL WRITEF(' ')
	GOTO 1010
C
C get an input line from the terminal
1000	DO I = 1,2
	   LSTCMD(I) = CMDFST(I)
	ENDDO
	UFLG_FLG = NOUFLG
	UFLAG_CPY = UFLAG
C
C first time round joins
1010	TXTPTR = 80
	NCHS = TTRSTR(, '* ')
	IF (NCHS.EQ.0) GOTO 1000	! empty line
	IF (NCHS.LT.0) GOTO 9990	! error or ^Z
C
C decode the line
	TXTPTR = NCHS
	CALL BSLN
	CMD = RDCOMM(CMDTST_CMD_TABLE)
	GOTO (1020,
     &        1100,1100,1200,1200,
     &        1300,1300,1300,
     &	      1400,1500,
     &	      1600,1700,1800,1900,
     &	      2000,2100,2200,
     &	      2300,2400,2400,
     &	      8900
     &       ), CMD+1
	CALL WRITEF('fallen off bottom of table')
	GOTO 1000
C
C RDCOMM returns 0 - was it 1ary or 2ndary command failure
1020	IF (CMDNUM.NE.0) THEN			! it was 2ndary
	  CALL WRITEF('Primary cmd ''%S'' looked up as ''%S'', %^L%N',
     &				 CMDNST,	     CMDFST,  CMDNUM  )
	ENDIF
	GOTO 1000
C
C commands
C
C integer
1100	DO 1110 I = 1,CMDICT
	   CALL WRITEF('%^L%I: %I10', I, INTARG(I))
1110	CONTINUE
	GOTO 1000
C
C real
1200	DO 1210 I = 1,CMDRCT
	   CALL WRITEF('%^L%I: %F0.3', I, REALAR(I))
1210	CONTINUE
	GOTO 1000
C
C string or character
1300	IF (STARLE.EQ.0) THEN
	   CALL WRITEF('No argument')
	ELSE
	   CALL WRITEF('%N char%m: ''%S''', STARLE, STARST)
	ENDIF
	GOTO 1000
C
C inequality on real
1400	CALL WRITEF('.%S. %F0.3', INEQ_NAMES(INEQUAL), REALAR(1))
	GOTO 1000
C
C inequality on integer
1500	CALL WRITEF('.%S. %^L%N', INEQ_NAMES(INEQUAL), INTARG(1))
	GOTO 1000
C
C initialise command table
1600	IF (CMDICT.EQ.0) INTARG(1) = 100	! default to
	IF (CMDICT.LE.1) INTARG(2) = 1000	!  what we've got
	CALL INITAB(OCMTAB, INTARG(1), OCMBYT, INTARG(2))
	MAXADD = -1
	GOTO 1000
C
C add name to table
1700	IF (MAXADD.EQ.0) THEN
	   CALL TTWSTR('Name table not yet initialised')
	   GOTO 1000
	ENDIF
	IF (STARLE.EQ.0) THEN
	  CALL TTWSTR('What am I to add?')
	  GOTO 1000
	ENDIF
	IF (CMDICT.EQ.1) THEN			! use stated command no
	  NAMVAL = ADDNAM(STARST,, INTARG(1))
	ELSE					! use default
	  NAMVAL = ADDNAM(STARST)
	ENDIF
	IF (NAMVAL.EQ.0) CALL TTWSTR('Name table full')
	IF (NAMVAL.LT.0) CALL TTWSTR('Byte array full')
	IF (NAMVAL.GT.0) THEN
	  CALL WRITEF('Into table, number %^L%N', namval)
	  IF (MAXADD.LT.0) THEN
	    MAXADD = 1
	  ELSE
	    MAXADD = MAXADD+1
	  ENDIF
	ENDIF
	GOTO 1000
C
C find name in table
1800	IF (MAXADD.LE.0) THEN
	   CALL TTWSTR('Nothing in table yet')
	   GOTO 1000
	ENDIF
	NAMVAL = RDCOMM(OCMTAB)
	CALL WRITEF('''Command'' %S returns %^L%N', CMDNST, NAMVAL)
	GOTO 1000
C
C list name table
1900	CALL WRITEF('%^L%N names in table:', MAXADD)
	DO I = 1,MAXADD
	   CALL WRITEF('%^L%N: %S', I, OCMTAB(I*2+1))
	ENDDO
	CALL WRITEF
	CALL TTWSTR('CMDPRT makes of that lot:')
	CALL CMDPRT(OCMTAB)
	GOTO 1000
C
C give name found for last command
2000	IF (LSTCMD(1) .EQ. 0) THEN
	   CALL TTWSTR('No ''last'' command yet!')
	ELSE
	   CALL WRITEF('Last command ''%S''', LSTCMD)
	ENDIF
	GOTO 1000
C
C HELP - list commands in table
2100	CALL TTWSTR('Commands available are:')
	CALL CMDPRT(CMDTST_CMD_TABLE)
	GOTO 1000
C
C AMBIGUOUS/AMBIVALENT - just say what we actually got
2200	CALL WRITEF('Command ''%S'' matched with ''%S''',
     &			   CMDNST,	       CMDFST )
	GOTO 1000
C
C FLAG - list flags of last command encountered
2300	IF (UFLG_FLG) THEN
	  CALL TTWSTR('No user flag found')
	ELSE IF (UFLAG_CPY.EQ.0) THEN
	  CALL TTWSTR('No user flag bits were set')
	ELSE
	  CALL EXPAND('User flag bits were %^L%P0%X8 (i.e. ', UFLAG_CPY)
	  CH = 0
	  DO I = 0,31
	    IF (CH.EQ.'9') THEN
	      CH = 'A'
	    ELSE IF (CH.EQ.0) THEN
	      CH = '0'
	    ELSE
	      CH = CH+1
	    ENDIF
	    IF ((UFLAG_CPY .AND. (ISHFT(1,I))) .NE. 0)
     &			CALL APPEND('%^B%C', CH)
	  ENDDO
	  CALL WRTAPP(')')
	ENDIF
	GOTO 1000
C
C SECONDARY, SECF - these commands have secondary tables!
C					=========
2400	CALL WRITEF('2ndary cmd number %^L%N', SECMDN)
	GOTO (2410,2410,2420,2420,1000,1000), SECMDN
	IF (SECMDN.EQ.0) THEN
	  CALL TTWSTR('Aha! - no secondary')
	ELSE
	  CALL TTWSTR('(I don''t know about this one)')
	ENDIF
	GOTO 1000
C
C integers
2410	DO I = 1,CMDICT
	  CALL WRITEF('%^L%N: %N', I, INTARG(I))
	ENDDO
	GOTO 1000
C
C reals
2420	DO I = 1,CMDRCT
	  CALL WRITEF('%^L%N: %F0.3', I, REALAR(I))
	ENDDO
	GOTO 1000
C
C RUBBISH command - tests absence of trailing rubbish in user flags table
8900	CALL TTWSTR('Rubbish!')
	GOTO 1000
C
C error on input
9990	CALL EXIT
C
	END
