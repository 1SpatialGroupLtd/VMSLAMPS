C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1984-07-26 11:27:18.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	INTEGER*4 FUNCTION RDSTR(STRING, TERM, REPTRM)
C
***	MODULE RDSTR
***	IDENT 26JL84
C
	IMPLICIT NONE
C
C Copyright Laser Scan Laboratories Ltd., Cambridge, England
C Author R. Fairbairns
C
C Coded October 1981
C Version of 22 June 1983 retyped after being lost, 26 July 1984
C
C To read a string from the current RDCH line
C
	CHARACTER*(*)	STRING	! to read into
	BYTE		TERM	! string terminator character
	LOGICAL*1	REPTRM	! TRUE iff repeated terminator permitted
C				! (optional, default TRUE)
C
C TERM = 0 if to read standard alphabetic (or underline) command name,
C	      ignoring leading spaces
C      > 0 if to read until character 'TERM' found, excepting
C	      'TERM''TERM', which transmits to output as 'TERM'
C			    (provided REPTRM argument is TRUE)
C	      <space> is treated differently: matches <tab> as well,
C					      no repeat facility
C      < 0 if to read to end of line, ignoring leading and trailing sps
C string ALWAYS terminates at end of line
C
C Function result is length of string read (0 if none found)
C
C w/s
	INTEGER*4	LENGTH		! to accumulate length of string
	INTEGER*4	ILNGTH		! length of arg (input) string
	INTEGER*4	LSTNSP		! last char of string not space
	BYTE		CH		! for reading characters
	BYTE		CH1		! for checking double TERM
	LOGICAL*1	REPEAT		! internal copy of REPTRM
C
C functions called
	LOGICAL		HAVE_I_AN_ARG	! have I an argument?
	LOGICAL		RDCH		! read one character
	LOGICAL		RDCHS		! ditto, ignoring spaces
C
C preset data
	BYTE		SPACE, TAB
	DATA		SPACE,TAB/' ',9/
C
C initialise
	LENGTH = 0
	ILNGTH = LEN(STRING)
	LSTNSP = 0
C
C get itnernal copy of REPTRM
	IF (HAVE_I_AN_ARG(3)) THEN
	  REPEAT = REPTRM
	ELSE
	  REPEAT = .TRUE.
	ENDIF
C
C separate 'find start of terminated string'
	IF (TERM.GT.0 .AND. TERM.NE.SPACE) GOTO 10
C
C look for start of command, sapce terminated, or whole line string
	IF (RDCHS(CH)) GOTO 50
	IF (TERM.NE.0) GOTO 20
	IF ( CH.NE.'_' .AND.
     &	    (CH.LT.'A' .OR. (CH.GT.'Z' .AND.
     &	    (CH.LT.'a' .OR.  CH.GT.'z'))) ) GOTO 40
	GOTO 20
C
C look for start of terminated string
10	IF (RDCH(CH)) GOTO 50
	IF (CH.NE.TERM) GOTO 20
C
C string starts with a terminator -
C  PRESUMABLY there'll be another immediately
	IF (.NOT.REPEAT) GOTO 50	! repeats not allowed
	IF (RDCH(CH1)) GOTO 50
	IF (CH1.NE.TERM) GOTO 40
C there was - fall through to add it to string
C
C loop to add to string
20	IF (LENGTH.GE.ILNGTH) GOTO 40	! filled arg string up
	LENGTH = LENGTH+1
	STRING(LENGTH:LENGTH) = CHAR(CH)
	IF (CH.NE.SPACE .AND. CH.NE.TAB) LSTNSP = LENGTH
C
C get next character of string
	IF (RDCH(CH)) GOTO 50
C
C look for terminator - separate terminated, whole line strings
	IF (TERM) 20,25,30
C
C command string terminates on non-alphabetic
25	IF ( CH.NE.'_' .AND.
     &	    (CH.LT.'A' .OR. (CH.GT.'Z' .AND.
     &	    (CH.LT.'a' .OR.  CH.GT.'z'))) ) GOTO 40
	GOTO 20
C
C terminated string
30	IF ( CH.NE.TERM .AND.
     &	    (TERM.NE.SPACE.OR.CH.NE.TAB) ) GOTO 20
C
C don't care about repetition if terminator is <space>, or if it's
C		not allowed anyway
	IF (TERM.EQ.SPACE .OR. .NOT.REPEAT) GOTO 50
C
C deal with repeats
	IF (RDCH(CH1)) GOTO 50
	IF (CH1.EQ.TERM) GOTO 20
C
C terminated, but we overshot by one character
40	CALL BSCH
C
C terminated, character pointer correct
50	RDSTR = LENGTH			! return result
	IF (TERM.LT.0) RDSTR = LSTNSP	! trim trailing spaces
	RETURN
C
	END
