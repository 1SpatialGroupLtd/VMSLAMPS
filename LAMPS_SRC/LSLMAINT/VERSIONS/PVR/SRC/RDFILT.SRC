C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1981-07-09 15:47:42.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL FUNCTION RDFILT(DSTBUF,DSTLEN,DEFTIT,
     *                          NUMFIL,ALLVER,ALLBLK,NCHS)
C
**	MODULE RDFILT
**	IDENT 09JL81
C
C Copyright Laser-Scan Laboratories Ltd,Cambridge,England
C
C Author M.C.Fulford
C
C	Created 22.v.79
C	Last edited 28/ii/80
C
C	To read a generalised file title, applying
C	defaults where necessary.
C	A special feature is the treatment of a numerical file
C	name, which is turned into a 3-digit file type.
C
C	Thus:	ABCDE	->	ABCDE.<default>
C		12	->	<default>.012
C
C	A full DSD is accepted as the default string, version
C	numbers are optionally allowed in the input string.
C
C parameters:
C arguments:
	BYTE DSTBUF(1)		! destination string
	INTEGER DSTLEN		! max destination length
	BYTE DEFTIT(1)		! default filename
	LOGICAL*1 NUMFIL	! allow numerical filenames
	LOGICAL*1 ALLVER	! allow version numbers
	LOGICAL*1 ALLBLK
	INTEGER NCHS		! return code:-
C			+n - number of characters in DSTBUF
C			 0 - blank filename given
C			-1 - illegal character in given filename
C			-2 - illegal character in default name
C			-3 - filename too long
C common blocks:
***	COMMON/[LIB.LIOLIB]TXTC/	! input string
***	COMMON/[LIB.LIOLIB]EXPC/	! for expanded numbers
C
C workspace:
	LOGICAL*1 GOTDEF,GOTACT		! got elements of DSDs
	INTEGER DEFPOS,DEF1ST,DEFLEN,DEFTYP,DEFVAL
	INTEGER        ACT1ST,ACTLEN,ACTTYP,ACTVAL
	INTEGER DEFPTR		! limit to DEFTIT
	LOGICAL*1 ACTNUM	! it's a numerical name
	INTEGER DSTPOS,DSTTYP	! destination state
	INTEGER ERRPTR		! for error messages
	LOGICAL*1 BLNKFL        ! blank filename
	INTEGER ZIP		! for coercion
C
C functions:
	INTEGER EXPAND
C
	DATA ZIP/0/
C
C code:
	GOTDEF = .FALSE.	! initialise everything
	GOTACT = .FALSE.
	BLNKFL=.TRUE.
	RDFILT=.FALSE.
	DSTPOS = 1
	DSTTYP = 0
	DEFPOS = 1
	DEFPTR = 32000		! the null byte terminates it
	NCHS = 0
C
C skip leading spaces
10	IF (TXTBUF(DCPTR) .NE. "40) GOTO 20
	DCPTR = DCPTR+1
	GOTO 10
C
C record start of line
20	ERRPTR = DCPTR
C
C analyse next element from each string
30	IF (GOTDEF) GOTO 40
	CALL GETITM(DEFTIT,DEFPOS,DEFPTR,.TRUE.,
     *              DEF1ST,DEFLEN,DEFTYP,DEFVAL)
	IF (DEFTYP .LE. 0) GOTO 150
	GOTDEF = .TRUE.
40	IF (GOTACT) GOTO 50
	CALL GETITM(TXTBUF, DCPTR,TXTPTR,ALLVER,
     *              ACT1ST,ACTLEN,ACTTYP,ACTVAL)
	IF (ACTTYP .LE. 0) GOTO 160
	GOTACT = .TRUE.
C
C cope with numerical filename (becomes file type)
	ACTNUM = (ACTTYP.EQ.3).AND.(ACTVAL.GE.0).AND.(NUMFIL)
	IF (ACTNUM) ACTTYP = 4
C
C & note bits of real filename
	IF (ACTTYP.NE.6) BLNKFL=.FALSE.
C
C check for syntax errors
50	IF (DEFTYP .LE. DSTTYP) GOTO 150
	IF (ACTTYP .LE. DSTTYP) GOTO 160
C
C add element to title
	IF (DEFTYP-ACTTYP) 60,90,100
C
C use default
60	IF (DEFLEN.LE.0) GOTO 80
	DO 70 I = 1,DEFLEN
	  DSTBUF(DSTPOS) = DEFTIT(DEF1ST)
	  DEF1ST = DEF1ST+1
	  DSTPOS = DSTPOS+1
	  IF (DSTPOS .GE. DSTLEN) GOTO 170
70	  CONTINUE
80	GOTDEF = .FALSE.
	DSTTYP = DEFTYP
	GOTO 140
C
C use actual element, overwiting default
90	GOTDEF = .FALSE.
C
C issue actual item, leaving default
100	IF (.NOT.ACTNUM) GOTO 110
	ACTLEN = EXPAND('%P0.%I3',ACTVAL)
	ACT1ST = 1
110	IF (ACTLEN.LE.0) GOTO 130
	DO 120 I = 1,ACTLEN
	  DSTBUF(DSTPOS) = TXTBUF(ACT1ST)
	  IF (ACTNUM) DSTBUF(DSTPOS) = EXPBUF(ACT1ST)
	  ACT1ST = ACT1ST+1
	  DSTPOS = DSTPOS+1
	  IF (DSTPOS .GE. DSTLEN) GOTO 170
120	  CONTINUE
130	GOTACT = .FALSE.
	DSTTYP = ACTTYP
C
C check for end
140	IF (DSTTYP .LT. 6) GOTO 30
C
C blank filename
	IF (BLNKFL.AND.(.NOT.ALLBLK)) GOTO 145
C
C tidy up
	DSTBUF(DSTPOS) = 0
	NCHS = DSTPOS-1
	GOTO 180
C
C errors:
145	NCHS=0
	GOTO 175
150	NCHS = -2
	GOTO 175
C
160	NCHS = -1
	GOTO 175
C
170	NCHS = -3
C
175	RDFILT=.TRUE.
C
C return
180	RETURN
	END
