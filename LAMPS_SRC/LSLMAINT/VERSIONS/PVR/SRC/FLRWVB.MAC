;
; * This file is part of the LAMPS distribution, released as a software
; * preservation project to archive digital history for future historians.
; * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
; *
; * Timestamp of this file for the 2002 release was: 1981-05-12 09:38:44.000000000 +0100
; *
; * This program is free software: you can redistribute it and/or modify
; * it under the terms of the GNU General Public License as published by
; * the Free Software Foundation, version 3.
; *
; * This program is distributed in the hope that it will be useful, but
; * WITHOUT ANY WARRANTY; without even the implied warranty of
; * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
; * General Public License for more details.
; *
; * You should have received a copy of the GNU General Public License
; * along with this program. If not, see http://www.gnu.org/licenses/.
;
	.TITLE	FLRWVB
	.IDENT	/12MY81/
	.ENABL	LC
 
; Copyright Laser Scan Laboratories Ltd., Cambridge, England.
; Author  R. Fairbairns		Original dated May 1981
 
; Read blocks from, or write blocks to, files accessed
;  (one way or another) under the file i/o procedures
;  of LIOLIB
 
	.MCALL	QIO$, DIR$, WTSE$S
 
; read block from file
 
;	FLRBLK(memadr, [size], filadr[, ierr])
 
; <size> defaults to 512
 
FLRBLK:: MOV	#IO.RVB, QIOP	; set function
	BR	FLRW		; join common route
 
; write block to file
 
;	FLWBLK(memadr, [size], filadr[, ierr])
 
; <size> defaults to 512
 
FLWBLK:: MOV	#IO.WVB, QIOP	; set function
 
; common route for both read and write
FLRW:	MOV	#-1,   R1	; no default for memory address
	MOV	#.512, R2	; default size is 512 bytes
	MOV	#-1,   R3	; no default for file address
	MOV	#-1,   R4	; default no error return address
	CALL	LI$ARG		; decode arguments
	MOV	(R3), QIBKLS	; copy file address to ls of block no.
	MOV	FLBLUN, QILUN	; selected LUN for transfer
	MOVB	FLBLUN, QIEFN	; and EFN
	MOV	R1, QIBLKB	; set block buffer pointer
	MOV	(R2), QIBYTC	; set byte count
	DIR$	#QIODPB		; execute QIO transfer
	BCS	20$		; failed
	WTSE$S	QILUN		; wait for transfer to complete
	BCS	20$		; why did that fail, then?
	MOVB	FLBKST, R0	; recover error/success flag
5$:	MOV	R0, FLBERR	; save error in common block regardless
	CMP	R4, #-1		; is he interested in the result?
	BEQ	10$		; if EQ, he ain't
	MOV	R0, (R4)	; return error to the user
10$:	RTS	PC
 
; directive rejected - return error code as error for whole operation
20$:	MOV	$DSW, R0	; directive reject
	BR	5$		; go to return it
 
 
; read file extent data
 
;	FLBFE(hibyte, efbyte)
 
; returns values in:
;  hibyte - first invalid byte address in file	) both F4P
;  efbyte - address of end-of-file marker	)  INTEGER*4
 
FLBFE::	MOV	#-1, R1		; default is 'don't return hibyte'
	MOV	R1, R2		;	     'don't return efbyte'
	JSR	PC, LI$ARG	; find arguments
	MOV	FLBFDB, R0	; selected FDB
	CMP	R1, #-1		; interested in hibyte?
	BEQ	20$		; if EQ, not
	MOV	F.HIBK+2(R0), R4 ; ls 16 bits of block number
	MOV	F.HIBK(R0), R5	; ms 15 bits
	ASHC	#9., R4		; shift up to give byte address
	MOV	R4, (R1)+	; return ls 16 bits of byte address
	MOV	R5, (R1)	;	 ms 16 bits
20$:	CMP	R2, #-1		; interested in efbyte?
	BEQ	40$		; if EQ, not
	MOV	F.EFBK(R0), R5	; ms 15 bits of block number
	MOV	F.EFBK+2(R0), R4 ; ls 16 bits
	BNE	30$		; if NE, it can be DEC'd without carry-out
	DEC	R5		; allow for carry out that is to come
30$:	DEC	R4		; allow for virtual blocks not starting at 0
	ASHC	#9., R4		; convert to byte address
	ADD	F.FFBY(R0), R4	; add end-of-file byte offset
	MOV	R4, (R2)+	; return ls 16 bits of byte address
	MOV	R5, (R2)	;	 ms 16 bits
40$:	RTS	PC
 
; QIO parameters
 
QIODPB:	QIO$	,,,,FLBKST,,<-1,512.,,0,1>
 
QIOP	= QIODPB+Q.IOFN
QILUN	= QIODPB+Q.IOLU
QIEFN	= QIODPB+Q.IOEF
QIBLKB	= QIODPB+Q.IOPL
QIBYTC	= QIBLKB+2
QIBKLS	= QIBLKB+10
 
; workspace for these routines only
FLBKST:	.BLKW	2		; two words for iosb
FLBKVB:	.WORD	0		; high order 15 bits will always be 0
	.BLKW	1		; low order 16 bits from call
.512:	.WORD	^D512		; default transfer size
 
; interfaces to rest of LIOLIB
 
	.PSECT	FLBCOM, D,OVR,GBL
 
FLBERR:	.WORD	0		; error marker
FLBFDB:	.BLKW	1		; currently selected FDB
FLBLUN:	.WORD	0		; currently selected LUN
 
	.PSECT
 
	.END
