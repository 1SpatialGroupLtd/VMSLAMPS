;
; * This file is part of the LAMPS distribution, released as a software
; * preservation project to archive digital history for future historians.
; * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
; *
; * Timestamp of this file for the 2002 release was: 1981-05-12 10:41:22.000000000 +0100
; *
; * This program is free software: you can redistribute it and/or modify
; * it under the terms of the GNU General Public License as published by
; * the Free Software Foundation, version 3.
; *
; * This program is distributed in the hope that it will be useful, but
; * WITHOUT ANY WARRANTY; without even the implied warranty of
; * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
; * General Public License for more details.
; *
; * You should have received a copy of the GNU General Public License
; * along with this program. If not, see http://www.gnu.org/licenses/.
;
	.TITLE	FLBOC
	.IDENT	/12MY81/
	.ENABL	LC
;
; Copyright Laser-Scan Laboratories Ltd,Cambridge,England
;
; Author  R. Fairbairns			Original dated May 1981
; From original FLR/WOC, authors M.C.Fulford & P.G.Hardy
;
; read/write block to disc file using Fortran FDBs & QIO
; file open and close section
 
 
	.MCALL	OFNB$W,FDAT$R,CLOSE$
 
; ERROR=FLBOPN(LUN, [IERR]) opens file on LUN using FORTRAN FDB
 
FLBOPN::MOV	#FLBLUN, R1
	MOV	#-1,     R2
	CALL	LI$ARG
	MOV	@R1, R1
	CALL	FL$BSL		; find appropriate FDB and select
	MOV	R2, -(SP)
	FDAT$R	R0,#R.VAR,#FD.CR
	OFNB$W	R0,FLBLUN
	MOV	(SP)+, R2
	MOVB	F.ERR(R0),R0	; sign extend error code
	CMP	R2, #-1
	BEQ	20$
	MOV	R0, @R2
20$:	MOV	R0,FLBERR	; save it
	SXT	R0
	RETURN
 
; FLBSEL(LUN) finds FORTRAN FDB for LUN and selects it for writing
 
FLBSEL::MOV	#FLBLUN, R1
	CALL	LI$ARG
	MOV	@R1, R1
FL$BSL:	MOV	FLBFDB,R0	; current fdb
	MOV	R2, -(SP)
	MOV	R1, R2
	CMP	R2,FLBLUN	; same as before ?
	BEQ	1$		; yes
	MOV	R2,FLBLUN	; save selection
	CALL	$FCHNL		; find FDB
	ADD	#14,R0		; to get FDB address
	MOV	R0,FLBFDB	; save it
1$:	MOV	(SP)+, R2
	RETURN			; return it in R0
 
; FLBCLO closes the selected file
 
FLBCLO::TST	FLBLUN
	BEQ	3$		; no selection
	CLOSE$	FLBFDB		; and close the file
	CLR	FLBLUN		; null selection
3$:	RETURN
 
; interface to the rest of LIOLIB
 
	.PSECT	FLBCOM,D,GBL,OVR
 
FLBERR:	.WORD	0	; error marker
FLBFDB:	.BLKW	1	; currently selected FDB
FLBLUN:	.WORD	0	; currently selected LUN
 
	.END
