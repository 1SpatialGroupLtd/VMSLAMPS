C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1995-01-30 14:27:52.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	PROGRAM MAPID
C
***	MODULE MAPID
***	IDENT	30JA95
C
C Copyright Laser-Scan Laboratories Limited,Cambridge,England
C Author Paul Hardy
C
C	Written and typed			PGH	09-Apr-1982
CMOD	Amended for VMS V3			PGH	23-Sep-1982
CMOD	Don't output spurious form-feeds	 DM	15-Jan-1985
CMOD	get creator etc right for VMS V4	PGH	 5-Jan-1987
CMOD	Don't spool the output for printing	PGH	 5-Oct-1989
CMOD	Now reads AXP link maps			 ST	30-Jan-1994
C
C program for printing of the module and ident information
C from VAX/AXP LINK maps for LSL version numbering.
C
	IMPLICIT NONE
C
***	COMMON/LSL$CMNVIO:TXTC/
C
	CHARACTER CLINE*80	! command line
	INTEGER*2 CLEN		! length of command line
	CHARACTER MLINE*132	! line from map
	INTEGER*2 MLEN		! length of line from map
	CHARACTER MODULE*16	! module name
	CHARACTER IDENT*8	! its IDENT
	CHARACTER FILE*36	! its object filename
	INTEGER*2 FLEN		! the length of the filename
	CHARACTER DATE*17	! its compilation date
	CHARACTER LANGDESC*20	! its language (full description)
	CHARACTER LANG*7	! its language (short form)
	CHARACTER FF*1		! form-feed
	INTEGER*4 IERR		! general error code
	INTEGER	  VERSION	! linker map version no
	INTEGER	  ISP1,ISP2	! index of spaces in string
	LOGICAL	  FOUND_LANG	! got a match with know AXP creator
C
C routines called
	INTEGER*2 TXTCML
C
	DATA FF/12/
C
C ......................................................................
C
C general init - assume success
	VERSION = 0
	IERR = 1
C
C get hold of command line
1	CLEN=TXTCML('MAPID>')
	IF(CLEN.EQ.0) GOTO 1
	IF(CLEN.LT.0) GOTO 900
C copy to character variable
	CALL LIB$SCOPY_DXDX(TXTDSC,CLINE)
	CALL STR$UPCASE(CLINE,CLINE)
C
C get files
	OPEN (UNIT=1,NAME=CLINE(1:CLEN)//'.MAP',TYPE='OLD',
     &    READONLY,SHARED,ERR=800)
	OPEN (UNIT=2,NAME=CLINE(1:CLEN)//'.MAPID',
     &    TYPE='NEW')
C
C get date, and print header
5	READ(1,1000,END=600)MLEN,MLINE
	IF (MLEN.LT.94) GOTO 5
	IF (MLINE(91:94).EQ.'LINK') VERSION = 2
	IF (MLINE(97:100).EQ.'Link') VERSION = 3
	IF (MLINE(90:93).EQ.'Link') VERSION = 4		! AXP Map
	IF (VERSION.EQ.0) GOTO 850
	IF (VERSION.EQ.2) DATE = MLINE(66:82)
	IF (VERSION.EQ.3) DATE = MLINE(65:81)
	IF (VERSION.EQ.4) DATE = MLINE(65:81)		! AXP Map
	WRITE(2,1020)CLINE(1:CLEN),DATE
1020	FORMAT(' ','Version Identification from ',A,'.MAP linked on ',
     &   A//' Module',10X,'Ident',4X,'Compiled on',7X,
     &   'By',7X,'Linked from'/)
C
C read lines, extracting as needed
10	READ(1,1000,END=600)MLEN,MLINE
1000	FORMAT(Q,A)
D	WRITE(6,1069)MLINE(1:72)  ! debug print
D1069	FORMAT(' ',A)
	IF (MLEN.LT.43) GOTO 12
	IF (MLINE(1:5).EQ.'Psect') GOTO 600
	IF (MLINE(2:6).EQ.'Psect') GOTO 600
	IF (MLINE(3:7).EQ.'Psect') GOTO 600
	IF (VERSION.EQ.2.AND.MLINE(43:43).EQ.'_') GOTO 15
	IF (VERSION.EQ.3.AND.MLINE(99:101).EQ.'VAX') GOTO 15
C
C AXP specific
C
	FOUND_LANG = .FALSE.
	IF (VERSION.EQ.4) THEN
	   IF (MLINE(99:104).EQ.'Linker') THEN
	      LANG = 'Linker'
	      FOUND_LANG = .TRUE.
	   ENDIF
	   IF (MLINE(99:102).EQ.'AMAC') THEN
	      LANG = 'AMAC'
	      FOUND_LANG = .TRUE.
	   ENDIF
	   IF (MLINE(99:105).EQ.'Message') THEN
	      LANG = 'Message'
	      FOUND_LANG = .TRUE.
	   ENDIF
	   IF (FOUND_LANG) THEN
	      MODULE = MLINE(1:16)
	      IDENT  = MLINE(17:24)
	      DATE   = MLINE(80:96)
	      GOTO 16
	   ENDIF
	   IF (MLINE(99:101).EQ.'DEC') GOTO 15    ! Creator is `DEC Fortran' or `DEC C'
	   IF (MLINE(99:101).EQ.'VMS') GOTO 15    ! Creator is `VMS Command Definition Utility'
	ENDIF
C
	GOTO 10
C
C have we a module name on a line by itself ?
12	IF (MLINE(1:31).EQ.' '.OR.MLINE(32:43).NE.' ') GOTO 10
	IF (MLINE(1:MLEN).EQ.FF) GO TO 10	! trap form-feeds
	WRITE(2,1021)MLINE(1:MLEN)
1021	FORMAT(' ',A)
	GOTO 10
C
C extract the bits we want
15	MODULE = MLINE(1:16)
	IDENT  = MLINE(17:24)
	DATE   = MLINE(80:96)
C for language, extract second word after finding spaces
	LANGDESC  = MLINE(99:118)
	ISP1   = INDEX(LANGDESC,' ')
	IF (ISP1.LE.0) ISP1 = 0
	ISP2   = INDEX(LANGDESC(ISP1+1:),' ')
	IF (ISP2.LE.0) ISP2 = LEN(LANGDESC(ISP1+1:))
	ISP2 = ISP2 + ISP1
	LANG = LANGDESC(ISP1+1:ISP2)
	IF (LANG.EQ.'FORTRAN') LANG = 'Fortran'
C sort out filename length
	IF (VERSION.EQ.2) FILE   = MLINE(44:79)
	IF (VERSION.EQ.3) FILE   = MLINE(43:78)
16	IF (VERSION.EQ.4) FILE   = MLINE(43:78)
	FLEN=INDEX(FILE,' ')
	IF (FLEN.LE.0) FLEN=37				! just in case
	FLEN = FLEN - 1
C
C and write to output
25	WRITE(2,1022)MODULE,IDENT,DATE,LANG,FILE(1:FLEN)
1022	FORMAT(' ',A,A,A,2X,A,2X,A)
	GOTO 10
C
C that's all
600	CLOSE (UNIT=1)
	CLOSE (UNIT=2)
	GOTO 1
C
C here with error on open
800	WRITE(6,1060)CLINE(1:CLEN)
1060	FORMAT(' ','"',A,'.MAP" is not available.')
	IERR = 2320	! %SYSTEM-W-NOSUCHFILE
	GOTO 900
C
C here with not a LINK map
850	WRITE(6,1067)CLINE(1:CLEN)
	WRITE(2,1067)CLINE(1:CLEN)
1067	FORMAT(' ','"',A,'.MAP" is not a valid VMS LINK map.')
	WRITE(6,1068) MLINE(2:MIN0(50,MLEN))
1068	FORMAT(' ','Unexpected "',A,'"')
	IERR = 184	! %SYSTEM-W-FORMAT
C
C general exit
900	CALL EXIT(IERR)
	END
