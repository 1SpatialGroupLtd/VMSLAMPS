C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1985-05-31 09:25:22.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE DITFIL(INT, PTR)
C
***	MODULE DITFIL
***	IDENT 31MY85
C
**	UNLESS PDP
	IMPLICIT NONE
**	ENDC
C
C Copyright Laser Scan Laboratories Ltd., Cambridge, England
C Author R. Fairbairns
C
C Coded 2.vi.81
C
C To convert a 2-digit integer to characters, and output it to file
C
	INTEGER*2	INT	! the integer to be output
	INTEGER*4	PTR	! pointer to where the characters are to go
C
C w/s
	INTEGER*2	CH	! we only actually really need a BYTE, but
C				!  VAX Fortran insists on doing all its
C				!  arithemetic (in this area) in words, so
C				!  we have to swim with the tide. It makes no
C				!  difference with PDP Fortran.
C
C check in range
	IF (INT.LT.0 .OR. INT.GE.100)
     &      CALL WRITEF('*** DITFIL - integer out of range')
C
C put 10s
	CH = (INT/10)+'0'
	CALL WFBYTE(PTR, CH)
C
C put units
	CH = MOD(INT,10)+'0'
	CALL WFBYTE(PTR, CH)
C
C now that wasn't too bad, was it?
	RETURN
C
	END
