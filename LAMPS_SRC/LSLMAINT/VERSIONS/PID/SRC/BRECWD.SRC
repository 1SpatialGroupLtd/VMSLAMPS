C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1989-09-25 13:35:24.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
**	IF PDP
	LOGICAL FUNCTION BRECWD(WORD)
**	IFF
	LOGICAL FUNCTION BRECWD(WORD, SENSITIVITY)
**	ENDC
C
***	MODULE BRECWD
***	IDENT 25SE89
C
**	UNLESS PDP
	IMPLICIT NONE
**	ENDC
C
C Copyright Laser Scan Laboratories Ltd., Cambridge, England
C Author R. Fairbairns
C
C Coded 25.v.81
C
C To read a 'word' from the current record being buffered by the
C  block access routines, and compare it with a word "sought"
C
C parameters:
**	IF PDP
	BYTE WORD(40)			! WORD holds the word sought,
C					!	terminated with a zero byte
**	IFF
	CHARACTER*(*)	WORD		! WORD holds the word sought
	LOGICAL		SENSITIVITY	! T,F => case sensitive, insensitive
C					! (optional: default F)
**	ENDC
C
C function result is TRUE if word not found, for whatever reason
C
C w/s
	INTEGER*2	PTR		! pointer on WORD
	BYTE		CH		! character from file line
	BYTE		CHWD		! character from WORD
**	UNLESS PDP
	INTEGER		CHAR_OF_WORD	! ICHAR intermediate
	LOGICAL		CASE_SENSITIVE	! actual value of SENSITIVITY
**	ENDC
C
C functions called
	LOGICAL		BRECH		! read char from file
	LOGICAL		BRECHS		! ditto, ignoring spaces
**	UNLESS PDP
	LOGICAL		HAVE_I_AN_ARG	! have I an arg?
**	ENDC
C
**	IF DEBUG
C
C record what we're trying for
**	IF PDP
	CALL WRITEF('Seeking word %A40', WORD)
**	IFF
	CALL WRITEF('Seeking word %S', WORD)
**	ENDC						! PDP
**	ENDC						! DEBUG
C
**	UNLESS PDP
C
C de-optionalise (yes, I can write cruddy words, too!)
	IF (HAVE_I_AN_ARG(2)) THEN
	  CASE_SENSITIVE = SENSITIVITY
	ELSE
	  CASE_SENSITIVE = .FALSE.
	ENDIF
**	ENDC
C
C is there anything on the line at all?
	IF (BRECHS(CH)) GOTO 40
C
C initialise, ready to read the word
	PTR = 1
	CALL BSRECH
C
C loop through the word
10	IF (BRECH(CH)) GOTO 40
**	IF DEBUG
	CALL WRITEF('Char %A1 of word', CH)
**	ENDC
**	IF PDP
	IF (CH.LT.'A' .OR. CH.GT.'Z') GOTO 30
	CHWD = WORD(PTR)
**	IFF
	IF (.NOT.CASE_SENSITIVE) THEN
	  IF (CH.GE.'a' .AND. CH.LE.'z') CH = CH-32	! upper-case
	ENDIF
	IF ((CH.LT.'A' .OR. CH.GT.'Z') .AND.
     &	   CH.NE.'$' .AND.				! for CDEC$ (yuck!)
     &	   .NOT.(CASE_SENSITIVE .OR.
     &		 (CH.GE.'a' .AND. CH.LE.'z'))) GOTO 30
	CHAR_OF_WORD = ICHAR(WORD(PTR:PTR))
	CHWD = CHAR_OF_WORD
	IF (.NOT.CASE_SENSITIVE) THEN
	  IF (CHWD.GE.'a' .AND. CHWD.LE.'z') CHWD = CHWD-32 ! upper-case
	ENDIF
**	ENDC
	IF (CH.NE.CHWD) GOTO 30
C
C one byte matches: advance
	PTR = PTR+1
**	IF PDP
	IF (WORD(PTR).NE.0) GOTO 10
**	IFF
	IF (PTR.LE.LEN(WORD)) GOTO 10
**	ENDC
C
C end of word: check it doesn't carry on in the record
	IF (BRECH(CH)) GOTO 20		! end of record: so it doesn't
	CALL BSRECH
	IF (CH.GE.'A' .AND. CH.LE.'Z') GOTO 40 ! the word carries on
C
C success exit
20	BRECWD = .FALSE.
	RETURN
C
C failure - character in hand
30	CALL BSRECH
C
C failure exit
40	BRECWD = .TRUE.
	RETURN
C
	END
