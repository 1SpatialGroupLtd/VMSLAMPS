	INTEGER*4 FUNCTION DCL_SIGN(CHAR_ARRAY,CHAR_LEN,WHINGE)
C
***	MODULE	DCL_SIGN
***	IDENT	11NO86
C
C	Copyright Laser-Scan Laboratories Ltd., Cambridge, England
C	
CMOD	Bug fix - look for 2nd '+' instead of '-'	RJH 11-Sep-1986
C	Author 						TJH 15-Sep-1986
C
C Function is passed an integer argument associated with a DCL qualifier
C as the character array CHAR_ARRAY. CHAR_ARRAY is checked for bad sign
C positioning within the number, for example n+n or nn-n instead of +nn
C and -nnn respectively. Function returns set to SS$_NORMAL if all is
C well and 
C
	IMPLICIT NONE
C
	CHARACTER*16	CHAR_ARRAY	! found argument
	INTEGER*2	CHAR_LEN        ! length of found argument
	INTEGER*4	DUDPOS		! position of dud char. in range
	INTEGER*4	DUDPOS2		! position of dud char. in range
	LOGICAL*4	WHINGE		! .T. = report errors locally
C
	INTEGER		SS$_NORMAL
	EXTERNAL	SS$_NORMAL
	INCLUDE 	'LSL$CMNLSL:LSLLIBMSG.PAR'
	INCLUDE 	'LSL$CMNLSL:STATUS.CMN'
C
C ......................................................................
C
	DCL_SIGN=%LOC(SS$_NORMAL)
C
	DUDPOS=INDEX(CHAR_ARRAY(:CHAR_LEN),'-')		! rogue '-'?
	IF (DUDPOS.NE.0.AND.DUDPOS.NE.1) GOTO 10
C
C Now test that there are not 2 (or more) '-' signs
	DUDPOS=INDEX(CHAR_ARRAY(DUDPOS+1:CHAR_LEN),'-')! rogue '-'?
	IF (DUDPOS.NE.0) GOTO 10
C
	DUDPOS=INDEX(CHAR_ARRAY(:CHAR_LEN),'+')		! rogue '+'?
	IF (DUDPOS.NE.0.AND.DUDPOS.NE.1) GOTO 10
C
C Now test that there are not 2 (or more)  '+' signs
	DUDPOS=INDEX(CHAR_ARRAY(DUDPOS+1:CHAR_LEN),'+')	! rogue '+'?
	IF (DUDPOS.NE.0) GOTO 10
C
	GOTO 20
C
C ......................................................................
C
C Error on internal read due to misplaced '-' or '+'. Return with
C "invalid syntax for value specification"
C
10	DCL_SIGN=LSL__INVALSPEC
	IF (WHINGE) THEN
	   CALL LSL_PUTMSG(DCL_SIGN) 		! sets status for you
	   CALL WRITEF(' \%S\',CHAR_ARRAY(:CHAR_LEN))
	ELSE
	   LSL_STATUS=DCL_SIGN.OR.LSL_QUIET	! set status 
	ENDIF
C
C ......................................................................
C
20	RETURN
	END

