	INTEGER FUNCTION PUTFLN( FILENAME )
C
***	IDENT	10OC86
***	MODULE	PUTFLN
C
C	Copyright LaserScan Laboratories Ltd., Cambridge, England
C
C Author TJ Ibbs, 4 February 1985
C Amended for LSLLIB, 6 July 1985
C
CMod	TJ Ibbs, 10 Oct 1986
CMod	clear the /FILENAME/ logical flags before parsing into it
C
C Takes FILENAME, and parses it into the common block
C
	IMPLICIT NONE
C
***	PARAMETER/LSL$CMNLSL:LSLLIBMSG/
C
***	COMMON/LSL$CMNLSL:FILENAME/
C
C Arguments
C
	CHARACTER*(*)		FILENAME
C
C functions used
C
	INTEGER			FILE_PARSE
	LOGICAL			HAVE_I_AN_ARG
C
C workspace
C
	INTEGER			IERR		! internal error code
C
C *********************************************************************
C clear the HAD_xxx flags
C
	HAD_NOD = .FALSE.
	HAD_DEV = .FALSE.
	HAD_DIR = .FALSE.
	HAD_NAM = .FALSE.
	HAD_EXT = .FALSE.
	HAD_VER = .FALSE.
C
C and parse the new name
C
	IERR = FILE_PARSE(
     &			FILENAME,
     &			HAD_NOD, STR_NOD, LEN_NOD,
     &			HAD_DEV, STR_DEV, LEN_DEV,
     &			HAD_DIR, STR_DIR, LEN_DIR,
     &			HAD_NAM, STR_NAM, LEN_NAM,
     &			HAD_EXT, STR_EXT, LEN_EXT,
     &			HAD_VER, STR_VER, LEN_VER
     &			 )
C
C did that succeed?
C
	IF ( IERR.NE.LSL__NORMAL ) THEN
	   IF ( IERR.EQ.LSL__RESPARSOVF ) THEN
	      PUTFLN = LSL__SRCTOOBIG		! part of name too long
	   ELSEIF ( IERR.EQ.LSL__MISSARGS ) THEN
	      PUTFLN = LSL__BADPARSE		! too few arguments
	   ELSE
	      PUTFLN = LSL__SRCFILNAM		! error parsing source
	   ENDIF
	ELSE
	   PUTFLN = LSL__NORMAL
	ENDIF
C
	RETURN
	END
