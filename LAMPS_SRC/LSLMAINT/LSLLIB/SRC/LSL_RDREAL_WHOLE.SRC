C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1986-01-15 12:54:04.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL FUNCTION LSL_RDREAL_WHOLE( R, CALLERS_HADDOT )
C
***	MODULE	LSL_RDREAL_WHOLE
***	IDENT	15JA86
C
	IMPLICIT NONE
C
C Copyright Laser-Scan Laboratories, Ltd., Cambridge, England
C
C Author  		R. Fairbairns		12.xii.78, 3.xii.81
C						as RDREAL
C Modified for LSLLIB and renamed LSL_RDREAL_WHOLE
C			TJ Ibbs/R J Hulme	15 January 1986
C
C To read a real number from the current buffer
C
C Function result is TRUE if there's no number left on the line,
C or if we can't read one, FALSE if we read a number
C
C Deals with 'rational format' and numbers-with-exponents
C
C Provided only for RDCOMM which uses CALLERS_HADDOT argument
C
C arguments
C
	REAL		R		! out - real number read
	LOGICAL		CALLERS_HADDOT	! out - true if find /,E or .
C
C include files
C
***	PARAMETER/LSL$CMNLSL:LSLLIBMSG/
C
***	COMMON/LSL$CMNLSL:EXCEPTION/
C
C functions called
C
	LOGICAL		LSL_RDDBLE_WHOLE	! read a bigger real
	LOGICAL		HAVE_I_AN_ARG		! check got an argument
C
C functions referenced
C
	INTEGER		LSL_NUM_CHAND	! our condition handler
	EXTERNAL	LSL_NUM_CHAND
C
C workspace
C
	REAL*8		RR		! temporary real
C
C *********************************************************************
C
C note that we have (as yet) had no exceptions
C
	LSL_EXCP = LSL__NORMAL
	ERRNUM   = LSL__NORMAL
C
C establish our condition handler
C
	CALL LIB$ESTABLISH( LSL_NUM_CHAND )
C
C and read a number
C
	IF ( HAVE_I_AN_ARG(2) ) THEN
	   LSL_RDREAL_WHOLE = LSL_RDDBLE_WHOLE( RR , CALLERS_HADDOT )
	ELSE
	   LSL_RDREAL_WHOLE = LSL_RDDBLE_WHOLE( RR )
	ENDIF
C
C and copy it for ourselves
C
	R = RR
C
C check that all went well
C
	IF ( .NOT.LSL_EXCP ) THEN
	   LSL_RDREAL_WHOLE = .TRUE.
	   ERRNUM = LSL__HADEXCP
	   R = 0.0
	ENDIF
C
	RETURN
	END
