	LOGICAL FUNCTION CVT_DMY_DAY( BINDAY, DAY, MONTH, YEAR )
C
***	IDENT	20NO87
***	MODULE	CVT_DMY_DAY
C
C Copyright (C) LaserScan Laboratories Ltd, Cambridge, England
C
C Author R J Hulme, 19 November 1987
C Based on OSMH_TO_BINDAY
C
C To convert a date into the DEC form of binary date, i.e. number of 
C days since zero
C
C Returns TRUE if all goes well, FALSE if it doesn't
C
	IMPLICIT NONE
C
C Arguments
C
	INTEGER		BINDAY		! OUT - the binary date
	INTEGER		DAY,MONTH,YEAR	!  IN - the date required
C
C Common files
C
	INCLUDE	'LSL$CMNLSL:EXPC.CMN'	! for EXPDSC
C
C Functions
C
	LOGICAL		SYS$BINTIM
	LOGICAL		LIB$DAY
C
C Workspace
C
	LOGICAL		OK		! function return
	INTEGER		QUAD(2)		! quadword quantity
	INTEGER		DATE		! our current date
C
	CHARACTER*3	MONTH_NAME(12)
	DATA		MONTH_NAME	/'JAN','FEB','MAR','APR','MAY','JUN',
     &					 'JUL','AUG','SEP','OCT','NOV','DEC'/
C
C ****************************************************************************
C Check that the date makes sense, and change it if it doesn't
C
	IF (   DAY.LT.1 .OR.   DAY.GT.31 )   DAY = 1
	IF ( MONTH.LT.1 .OR. MONTH.GT.12 ) MONTH = 1
C
C produce a string for the date we want to translate
C
	CALL EXPAND('%N-%S-%N 00:00:00.00',DAY,MONTH_NAME(MONTH),YEAR)
C
C work out its binary date
C
	OK = SYS$BINTIM(EXPDSC,QUAD)
	IF (.NOT.OK) GOTO 999
C
C and thus the number of days for it
C
	OK = LIB$DAY(DATE,QUAD)
	IF (.NOT.OK) GOTO 999
C
C and so we can now return the result
C
	BINDAY = DATE
C
999	CVT_DMY_DAY = OK
	RETURN
	END
