	INTEGER*4 FUNCTION DCL_STR(CLD_LABEL)
C
***	MODULE	DCL_STR
***	IDENT	10SE87
C
C	Copyright Laser-Scan Laboratories Ltd., Cambridge, England
C	
CMOD	/LSL_STATUS/ added				TJH 21-Nov-1985
CMOD    Condition handler added				TJH 22-Oct-1985
C	Author 						TJH 16-Sep-1985
C
C Function gets any string arguments associated with the DCL qualifier 
C CLD_LABEL and puts them into CARRAY(). Function returns set to 
C SS$_NORMAL if all is well. Local error reporting (via condition
C handler) may be invoked by setting WHINGE .true..
C
	IMPLICIT NONE
C
	INTEGER*4 	CLI$_ABSENT, CLI$GET_VALUE
	EXTERNAL 	CLI$_ABSENT
C
	CHARACTER*(*)	CLD_LABEL	! the CLD label for qualifier

	INTEGER*4	IERR		! for error return
	LOGICAL*4	REPORT	! .T.= condition handler error reporting
	LOGICAL*4	WHINGE		! .T. if local error reporting
C
C condition handler
	EXTERNAL	DCL_ERRET
C
C Common block to control error reporting in condition handler
	COMMON /LSL_REPORT/ REPORT	
C
	INCLUDE 	'($SSDEF)'
	INCLUDE 	'($STSDEF)'
	INCLUDE 	'LSL$CMNLSL:LSLLIBMSG.PAR'
	INCLUDE 	'LSL$CMNLSL:CLD.CMN'
	INCLUDE 	'LSL$CMNLSL:STATUS.CMN'
C
C ......................................................................
C
	REPORT=WHINGE		! is condition handler to scream?
	NUMSTR=0		! initialise number of args. counter
C
C Establish condition handler
	CALL LIB$ESTABLISH( DCL_ERRET )
C
C Get first value for our label
	DCL_STR=CLI$GET_VALUE (CLD_LABEL,
     &			       CARRAY(1),
     &			       STR_LEN(1))
C
C Do it until the list is depleted
	DO WHILE(DCL_STR)
           NUMSTR=NUMSTR+1
	   DCL_STR=CLI$GET_VALUE (CLD_LABEL,
     &				  CARRAY(NUMSTR+1),
     &				  STR_LEN(NUMSTR+1))
	END DO
C
C Make sure termination status was correct
	IF (DCL_STR.OR.DCL_STR .EQ. %LOC (CLI$_ABSENT)) THEN
	   DCL_STR=SS$_NORMAL
	ELSE IF (IBITS(DCL_STR,0,3).NE.STS$K_WARNING) THEN
	   CALL LIB$SIGNAL (%VAL (DCL_STR)) ! signal error
	ENDIF
C
C Revert to normal error processing
	CALL LIB$REVERT
	LSL_STATUS=DCL_STR.OR.LSL_QUIET
	RETURN	
	END
