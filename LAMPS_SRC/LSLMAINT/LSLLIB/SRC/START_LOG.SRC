	INTEGER*4 FUNCTION START_LOG(LUN,CMDSTR,CMDLEN,IERR)
C
***	MODULE	START_LOG
***	IDENT	15AP87
C
C	Copyright Laser-Scan Laboratories Ltd., Cambridge, England
C
C	Author						TJH  15-Apr-1987
C
C Function to create a standard IMP pattern log file header.
C
C Function returns one of:
C
C		LSL__NORMAL  - all is well
C		LSL__SYSERR  - failed - system message in IERR
C
	IMPLICIT NONE
C
C Arguments:
	INTEGER*2	LUN	! the LUN of the output file
	CHARACTER*(*)	CMDSTR	! the command line to be printed out
C
C Optional arguments:
	INTEGER	        CMDLEN	! length of command line
	INTEGER	        IERR	! system error return
C
C Parameters:
	INCLUDE '($SSDEF)'
	INCLUDE 'LSL$CMNLSL:LSLLIBMSG.PAR'
C
C Workspace:
	INTEGER		CLEN	! temp. cmd line length
	CHARACTER*80	TITSTR	! title string
	INTEGER	        TITLEN	! length of title string
	CHARACTER*80	JPISTR	! the GETJPI line to be printed out
	INTEGER	        JPILEN	! length of GETJPI line
	INTEGER 	ERRET	! error return
	INTEGER		I,J	! temporary variables
	INTEGER	ISTART,IEND	! temp. vars.
C
C Functions:
	INTEGER EXPAND
	LOGICAL HAVE_I_AN_ARG	! is optional argument present?
	INTEGER SYS$GETJPIW	! get Job/Process Information
	INTEGER PREP_INFO	! prepares data for header
C
C ......................................................................
C
	TITLEN=80
	IF (HAVE_I_AN_ARG(3)) THEN
	   CLEN=CMDLEN
	ELSE
	   CLEN=LEN(CMDSTR)
	ENDIF
C
C Prepare all the data for output - get process info and uppercase and
C remove any trailing spaces from cmd line string
	START_LOG=PREP_INFO(CMDSTR,CLEN,TITSTR,TITLEN,
     &					JPISTR,JPILEN,ERRET)
	IF (.NOT.START_LOG) GOTO 40
C
C If optional 3rd argument supplied, return cmd string length less any
C trailing spaces
	IF (HAVE_I_AN_ARG(3)) THEN
	   CMDLEN=CLEN
	ENDIF
C
C and write out all the info
	CALL FLWSEL(LUN)
	CALL FLWSTR(TITSTR,TITLEN)
	CALL FLWRTF
	CALL FLWSTR(JPISTR,JPILEN)
C
	CALL FLWRTF
	CALL FLWRTF('Command line:')
	CALL FLWRTF
C
C Now output the command line. Look for suitable breaks if more than
C 80 characters long.
	IEND=0
	ISTART=1
10	DO 20 I=MIN(CLEN,IEND+80)+1,ISTART,-1
	   J=I
	   IF(CMDSTR(I:I).EQ.' '.OR.CMDSTR(I:I).EQ.','.OR.I.EQ.CLEN)THEN
	      GOTO 30
	   ELSEIF (CMDSTR(I:I).EQ.'/') THEN
	      J=J-1
	      GOTO 30
	   ENDIF	   
20	CONTINUE
C
C And output each chunck
30	IEND=J
	CALL FLWRTF('%S',CMDSTR(ISTART:IEND))
	ISTART=IEND+1
C
C and possibly loop back for the rest of the command line
	IF (ISTART.LT.CLEN) GOTO 10
	CALL FLWRTF
	CALL FLWRTF('================================================'//
     &			'================================')
	CALL FLWRTF
C
C ......................................................................
C
40	IF (START_LOG) THEN
	   START_LOG=LSL__NORMAL
	   IF (HAVE_I_AN_ARG(4)) THEN
	      IERR=SS$_NORMAL
	   ENDIF
	ELSE
	   START_LOG=LSL__SYSERR
	   IF (HAVE_I_AN_ARG(4)) THEN
	      IERR=ERRET
	   ENDIF
	ENDIF
	RETURN
	END
