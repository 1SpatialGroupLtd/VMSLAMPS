C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1986-08-07 15:42:16.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	INTEGER FUNCTION TEST_TERM( FILENAME, YES, OK )
C
***	MODULE TEST_TERM
***	IDENT 07AU86
C
	IMPLICIT NONE
C
C Copyright Laser Scan Laboratories Ltd., Cambridge, England
C
C MTTEST - Author S. Hancock - November 1984
C Stolen for LSLLIB (name changed, checks now for DVI$_FOR rather than
C for DVI$_DEVCLASS) by Tony J Ibbs, 17 June 1986
C Replicated, with a new name and testing now for DVI$_TRM, by L.A.Jones,
C 07 August 1986.
C
C This function tests the given device name to see if the relevant device
C is a terminal.
C
C It returns YES as TRUE if the device is a terminal, and as FALSE
C if it is not.
C
C Note that SYS$GETDVI will translate the FILENAME to get a physical
C device, and that anything after a colon in the name is ignored.
C
C argument
C
 	CHARACTER*(*)	FILENAME		! in - device name
	LOGICAL		YES			!out - true if a terminal
	INTEGER*4	OK			!out - system error
C
C system parameters
C
	INCLUDE '($SSDEF)'
	INCLUDE '($DVIDEF)'
C
C and LSL message numbers
C
	INCLUDE	'LSL$CMNLSL:LSLLIBMSG.PAR'
C
C workspace
C
	LOGICAL*4	BUFFER		! the result is returned here
	INTEGER		LENGTH		! and its length here
C
C - the item list
C
	INTEGER*2	ITM1(2)
	INTEGER*4	ITMLST(4)
	EQUIVALENCE	(ITM1,ITMLST(1))
C
C functions
C
	INTEGER		SYS$GETDVIW
C
C **********************************************************************
C set up the item list
C
	ITM1(1)	= 4				! buffer length
	ITM1(2) = DVI$_TRM			! is it a terminal?
	ITMLST(2) = %LOC(BUFFER)		! buffer address
	ITMLST(3) = %LOC(LENGTH)		! buffer length
	ITMLST(4) = 0				! terminate item list
C
C find out what it is...
C
       	OK = SYS$GETDVIW( ,, FILENAME, ITMLST, ,,, )
C
 	IF ( OK ) THEN
C
C	 if that worked, then return success and set YES to the
C	 result returned by the inquiry
C
	   TEST_TERM = LSL__NORMAL
	   YES = BUFFER
C
	ELSEIF ( OK.EQ.SS$_IVDEVNAM ) THEN
C
C	 the device name was not legitimate - we will assume
C	 that this means that we received a filename without
C	 a device, and will thus succeed, but say that it is
C	 not a terminal.
C
	   TEST_TERM = LSL__NORMAL
	   YES = .FALSE.
C
	ELSEIF ( OK.EQ.SS$_NOSUCHDEV ) THEN
C
C	 if the device does not exist, then we will tell the
C	 user that - return our own value for this error
C
	   TEST_TERM = LSL__NOSUCHDEV
C
	ELSE
C
C	 otherwise, just note that something was wrong, and let
C	 the user look at OK if they want to
C
 	   TEST_TERM = LSL__SYSERR
C
	ENDIF
C
	RETURN
	END
