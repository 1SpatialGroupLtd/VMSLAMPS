	.TITLE	VIOTTW
	.IDENT	/09MY86/
;
; Copyright Laser-Scan Laboratories Ltd,Cambridge,England
; Author Paul Hardy
; Modified for LSLLIB, R J Hulme		24-Jan-1986
;
;MOD	09-May-1986	TJ Ibbs
;MOD	place a '#' in front of constant LSL__SYSERR
;
; terminal output routines for LSLLIB

; TTWLIN & TTWSTR write a line using LIB$PUT_OUTPUT
;    CALL TTWSTR([STRING], [IERR])	! write character string
;    CALL TTWLIN([BUF], [NCHS], [IERR])	! write byte array
; the default buffer is EXPC as used by EXPLODE

; MUST be assembled with EXPC.MAR and LSLLIBMSG.MAR

	DATA_PSECT	LSL

TTWDSC:					; string descriptor for LIB$PUT_OUTPUT
TTWLEN:	.BLKW	1			; string length
	.BYTE	0,0			; class & type
TTWPTR:	.BLKL	1			; pointer to buffer (unset)

	CODE_PSECT	LSL

	.ENTRY	TTWSTR,^M<R3,R11>	; write string
	JSB	VIO$1ST			; basic init for arg handling
	MOVAL	EXPDSC,R0		; default string is in EXPC
	JSB	VIO$GNA			; first arg is string to write
	PUSHL	R0			; arg is string descriptor address
	BRB	GOTDSC			; common code

	.ENTRY	TTWLIN,^M<R3,R11>	; write byte array
	JSB	VIO$1ST			; basic init for arg handling
	MOVAB	EXPBUF,R0		; default buffer is EXPBUF
	JSB	VIO$GNA			; first arg is buffer to read into
	MOVL	R0,TTWPTR		; set buffer address
	MOVAW	EXPLEN,R0		; default for second arg is EXPLEN
	JSB	VIO$GNA			; get second arg - length
	MOVW	(R0),TTWLEN		; set in descriptor
	PUSHAL	TTWDSC			; use our manufactured descriptor

; here with address of descriptor on stack
GOTDSC:	CALLS	#1, G^VIO$PUT_OUTPUT	; print it
	BLBC	R0,99$			; deal with error separately
	MOVL	#LSL__NORMAL,R0		; success
10$:	RET				; return code from LIB$ call

; here with error in write
99$:	MOVL	R0, R3			; save against GNA
	BSBW	VIO$GNA			; is there an IERR argument?
	BCS	98$			; branch if no IERR
	MOVL	R3, (R0)		; return actual error
98$:	MOVL	#LSL__SYSERR,R0		; system error
	BRB	10$			; back for return

	.PSECT
	.END
