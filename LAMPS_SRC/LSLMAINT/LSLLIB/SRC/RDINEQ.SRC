C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1988-06-22 12:38:34.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL FUNCTION RDINEQ(INEQ)
C
***	MODULE	RDINEQ
***	IDENT	22JN88
C
C Copyright Laser Scan Laboratories Ltd., Cambridge, England.
C
C To read an inequality from the current line
C
C Return true if failed (leave command line as we started),
C otherwise inequality number in INEQ.
C INEQ defaults to 0 (equal) in any case.
C
	IMPLICIT NONE
C
***	PARAMETER/LSL$CMNLSL:INEQ/
C
C arguments
	BYTE		INEQ
C
C functions called
	INTEGER*4	RDCOMM
	LOGICAL		RDCHS,RDCH
C
	EXTERNAL	LSL_INEQUAL_CMD_TABLE 	! defined in CMDLIB
C
C workspace
	INTEGER		CMD
	INTEGER*2	SAVDP		! saved decode pointer
	BYTE		CH
	BYTE		SPACE,TAB
	PARAMETER	(SPACE=' ')
	PARAMETER	(TAB=9)
C
	RDINEQ = .FALSE.		! assume success
	INEQ = INEQ_EQL			! default to =
	CALL DCPSAV(SAVDP)		! remember where we started
C
	IF (RDCHS(CH)) GOTO 999		! nothing doing
	IF (CH.EQ.'<') THEN
	   INEQ = INEQ_LSS		! first stab
	   IF (RDCH(CH)) GOTO 1000	! that's all
	   IF (CH.EQ.'>') THEN
	      INEQ = INEQ_NEQ
	   ELSEIF (CH.EQ.'=') THEN
	      INEQ = INEQ_LEQ
	   ELSE
	      CALL BSCH
	      GOTO 1000
	   ENDIF
	ELSEIF (CH.EQ.'=') THEN
	   INEQ = INEQ_EQL
	ELSEIF (CH.EQ.'>') THEN
	   INEQ = INEQ_GTR		! first stab
	   IF (RDCH(CH)) GOTO 1000	! that's all
	   IF (CH.EQ.'=') THEN
	      INEQ = INEQ_GEQ
	   ELSE
	      CALL BSCH
	      GOTO 1000
	   ENDIF
	ELSEIF (CH.EQ.'.') THEN		! FORTRAN-type inequal
	   IF (RDCH(CH)) GOTO 999	! nothing there
	   IF (CH.EQ.SPACE.OR.CH.EQ.TAB) GOTO 999	! not sig.
	   CALL BSCH
	   CMD = RDCOMM(LSL_INEQUAL_CMD_TABLE)
C
C no errors at all for now, if no command, just reset
	   IF (CMD.LE.0) GOTO 999
C
C make sure terminating dot there
	   IF (RDCH(CH)) GOTO 999	! nothing there
	   IF (CH.NE.'.') GOTO 999	! not a dot
	   INEQ = CMD-1
	ELSE
	   GOTO 999			! nothing we recognize
	ENDIF
	GOTO 1000
C
C error exit
999	CALL DCPSET(SAVDP)		! restore to where we started
	RDINEQ = .TRUE.			! failed
C
1000	RETURN
	END
