;
; * This file is part of the LAMPS distribution, released as a software
; * preservation project to archive digital history for future historians.
; * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
; *
; * Timestamp of this file for the 2002 release was: 1986-02-21 13:21:36.000000000 +0000
; *
; * This program is free software: you can redistribute it and/or modify
; * it under the terms of the GNU General Public License as published by
; * the Free Software Foundation, version 3.
; *
; * This program is distributed in the hope that it will be useful, but
; * WITHOUT ANY WARRANTY; without even the implied warranty of
; * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
; * General Public License for more details.
; *
; * You should have received a copy of the GNU General Public License
; * along with this program. If not, see http://www.gnu.org/licenses/.
;
	.TITLE		LSL_GETFORMAT
	.IDENT		/21FE86/

	.LIBRARY	/LSL$LIBRARY:LSLMACLIB/
;
; Copyright Laser-Scan Laboratories Limited, Cambridge, England.
;
; Author: Tim Hartnall					18-Nov-1985
;
; Called in the following form:
;
; CALL LSL_GETFORMAT(CONDITION_CODE, STRING, [,string_length] ) 
;
; Searches using SYS$GETMSG for message text for CONDITION_CODE. The
; text and its (optional) length are returned via the argument list.
;
;
; LSL_GETMSG should be assembled with LSL$CMNLSL:LSL_TXTC.MAR and
; LSL_CMNLSL:LSLLIBMSG.MAR
;

	$SSDEF

	DATA_PSECT	LSL
VECTOR:
	.LONG	1
	.LONG	LSL__BUFFEROVF
MSG_LEN:				; prepare args. for SYS$GETMSG
	.WORD	0			; length of returned msg text

TMPDSC:					; temp. string descriptor for 
					; string argument
TMPLEN:	.BLKL	1			; string length
TMPPTR:	.BLKL	1			; 	 address

FLAGS:	.WORD	^B0001			; 1st flag bit set - only
					; get text part of message
	CODE_PSECT	LSL
 
	.ENTRY	LSL_GETFORMAT, ^M<R2>

; determine number of args. supplied
	CVTBL	(AP),	R2	
;
; get the first arg (which should be the condition code passed by 
; reference)
	MOVL	@4(AP),	R1		
;
; get the string argument
	MOVL	8(AP),	R0
	MOVL	(R0)+,	TMPLEN
	MOVL	(R0),	TMPPTR
;
; now get the message string
	$GETMSG_S -
		MSGID=R1, -
		MSGLEN=MSG_LEN, -
		BUFADR=TMPDSC, -
		FLAGS=FLAGS

;
; Examine the success of our foray
	CMPL	R0, #SS$_MSGNOTFND	; did we find the message?
	BNEQ	15$
	CLRW	MSG_LEN			; no. Set string length to 0
	MOVL	#LSL__MSGNOTFND, R0	; substitute LSLLIB err. for
					; the system one
	BRB	20$
15$:	CMPL	R0, #SS$_BUFFEROVF	; found the msg text but it was
					; so long truncation occurred?
	BNEQ	20$
	
;
; Yes truncation has occurred. Warn the user, there is a danger that 
; he may have a mismatch of EXPLODE escapes and the number of args. 
; that he expects supported by the text 
;
	$PUTMSG_S -
		MSGVEC=VECTOR		
	MOVL	#LSL__BUFFEROVF, R0
;
20$:	MOVQ	TMPDSC,	@8(AP)
	CMPL	#3, R2			; was a string length required?
	BNEQ	25$
	MOVZWL	MSG_LEN, @12(AP)
	CMPL	#SS$_NORMAL, R0
	BNEQ	25$
	MOVL	#LSL__NORMAL,	R0
25$:	RET
	.PSECT
	.END
