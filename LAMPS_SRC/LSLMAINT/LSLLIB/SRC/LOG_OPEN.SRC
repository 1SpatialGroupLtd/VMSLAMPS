C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1987-04-16 15:23:02.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	INTEGER*4 FUNCTION LOG_OPEN(LUN,FILESPEC,HAD_LOG)
C
***	MODULE	LOG_OPEN
***	IDENT	16AP87
C
C	Copyright Laser-Scan Laboratories Ltd., Cambridge, England
C
C	Author						TJH  16-Apr-1987
C
C Function to create a standard IMP pattern log file.
C
C Function returns:
C
C		LSL__NORMAL     - all is well
C
C or one of a variety of CLI or LSLLIB errors on failure
C
	IMPLICIT NONE
C
C Arguments:
	INTEGER*2	LUN	! the LUN of the output file
	CHARACTER*(*)	FILESPEC! the log file specification
	LOGICAL		HAD_LOG ! /LOG specified?
C
C Parameters:
	INCLUDE 'LSL$CMNLSL:LSLLIBMSG.PAR'
C
C Workspace:
	CHARACTER*1024	CMDSTR	! the command line to be printed out
	INTEGER		CMDLEN	! its length
	INTEGER		IERR	! error return
C
C Functions:
	INTEGER	DCL_CML		! gets DCL command string
	INTEGER	FLWOPN		! opens log file for write
	INTEGER	START_LOG	! writed header into log file
C
C ......................................................................
C
C Open file
	LOG_OPEN = FLWOPN(LUN,FILESPEC,IERR)
	IF (LOG_OPEN) THEN			! did it open ok?
	   IF (HAD_LOG) THEN
	      LOG_OPEN = LSL__LOGOPNOUT		! yes, tell user 
	      CALL LSL_PUTMSG(LOG_OPEN,FILESPEC)
	   ENDIF
	ELSE					! file open error
	   LOG_OPEN = LSL__OPLOG		! tell user
	   CALL LSL_PUTMSG(LOG_OPEN,FILESPEC)
	   CALL LSL_ADDMSG(IERR)		! give any 2ndary error
	ENDIF
C	
C ......................................................................
C
C Get and write header stuff into it
	IF (LOG_OPEN) THEN
	   LOG_OPEN=DCL_CML(CMDSTR,CMDLEN,.TRUE.)
	   IF (LOG_OPEN) THEN
	      LOG_OPEN=START_LOG(LUN,CMDSTR,CMDLEN,IERR)
	      IF (.NOT.LOG_OPEN) THEN
	         CALL LSL_PUTMSG(LOG_OPEN)
	         CALL LSL_ADDMSG(IERR)
	      ENDIF
	   ELSE
	      CALL LSL_PUTMSG(LOG_OPEN)
	   ENDIF
	ENDIF
C
C ......................................................................
C
	IF (LOG_OPEN) THEN
	   LOG_OPEN=LSL__NORMAL
	ENDIF
	RETURN
	END
