	LOGICAL FUNCTION LSL_IFFPARSE( FILE, HADVER )
C
***	IDENT	29OC87
***	MODULE	LSL_IFFPARSE
C
C Copyright (C) LaserScan Laboratories Ltd, Cambridge, England
C
C Author Clarke Brunt, 29 Oct 1987
C
C To parse a filename, returning whether version number present
C
	IMPLICIT NONE
C
C arguments
C
	CHARACTER*(*)	FILE		! in - filename of file to open
	LOGICAL		HADVER		! out - had version
C
C *********************************************************************
C
C common files
C
	INCLUDE	'LSL$CMNLSL:FILENAME.CMN'	! for lengths
C
C functions
C
	LOGICAL		FILE_PARSE		! parse filename
C
C workspace
C
C the parts of the filename
C
	CHARACTER*(C_NOD_SIZ)	T_STR_NOD		! node name
	CHARACTER*(C_DEV_SIZ)	T_STR_DEV		! device name
	CHARACTER*(C_DIR_SIZ)	T_STR_DIR		! directory name
	CHARACTER*(C_NAM_SIZ)	T_STR_NAM		! name string
	CHARACTER*(C_EXT_SIZ)	T_STR_EXT		! extension
	CHARACTER*(C_VER_SIZ)	T_STR_VER		! version number
C
C true if that part of a filename was present
C
	LOGICAL		T_HAD_NOD,T_HAD_DEV,T_HAD_DIR
	LOGICAL		T_HAD_NAM,T_HAD_EXT
C
C length of each part of a filename
C
	INTEGER		T_LEN_NOD,T_LEN_DEV,T_LEN_DIR
	INTEGER		T_LEN_NAM,T_LEN_EXT,T_LEN_VER
C
C *********************************************************************
C
	T_HAD_NOD = .FALSE.		! not had any file parts yet
	T_HAD_DEV = .FALSE.
	T_HAD_DIR = .FALSE.
	T_HAD_NAM = .FALSE.
	T_HAD_EXT = .FALSE.
	HADVER = .FALSE.
C
C	 parse the filename
C
	LSL_IFFPARSE = FILE_PARSE(
     &			FILE,			! filename to parse
     &			T_HAD_NOD, T_STR_NOD, T_LEN_NOD,
     &			T_HAD_DEV, T_STR_DEV, T_LEN_DEV,
     &			T_HAD_DIR, T_STR_DIR, T_LEN_DIR,
     &			T_HAD_NAM, T_STR_NAM, T_LEN_NAM,
     &			T_HAD_EXT, T_STR_EXT, T_LEN_EXT,
     &			HADVER,    T_STR_VER, T_LEN_VER
     &			 )
C
	RETURN
	END
