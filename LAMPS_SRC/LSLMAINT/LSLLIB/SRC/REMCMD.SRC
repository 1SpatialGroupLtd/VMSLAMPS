C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1989-02-24 12:56:12.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE REMCMD( CMD_NUMBER )
C
***	MODULE REMCMD
***	IDENT 24FE89
C
	IMPLICIT NONE
C
C Copyright Laser Scan Laboratories Ltd., Cambridge, England
C Author Clarke Brunt
C
C Coded July 1987
C
C To remove a command from a previously-defined command table
C No errors are returned - all commands with the given CMD_NUMBER
C are removed from the table - if there aren't any, that's your fault.
C
C Argument:
	INTEGER*4	CMD_NUMBER	! command number to be removed
C
C workspace:
	INTEGER*4	C,D,NAMLEN
C
***	COMMON/LSL$CMNLSL:TABLE_DEFINITION/
C
C search for command number in table
	MAX_CMD_NUMBER = 0
	D = 0
C
	DO 20 C=1,TABLE_COUNT
C
C make a pass through table of descriptors, updating pointers to
C characters we have moved, and removing the descriptor we have found
	   CALL LSL_COPY_TABLE_LONGS(
     &			    %VAL(TABLE_ADDRESS+C*8+TABLE_OFF),
     &			    NAME_DESC,
     &			    2)
C
C does the command number match the one we want?
	   IF (NAME_DESC1(2).NE.CMD_NUMBER) THEN
C
C re-calculate maximum command number in table
	      IF (NAME_DESC1(2).GT.MAX_CMD_NUMBER)
     &				   MAX_CMD_NUMBER = NAME_DESC1(2)
	      D = D+1
	      IF (D.NE.C) CALL LSL_COPY_TABLE_LONGS(
     &			    NAME_DESC,
     &			    %VAL(TABLE_ADDRESS+D*8+TABLE_OFF),
     &			    2)
	   ELSE
C
C free the memory used by this command string
	      NAMLEN = NAME_DESC1(1)
	      IF (NAMLEN.GT.0) CALL LIB$FREE_VM(NAMLEN,NAME_DESC(2))
	      TABLE_COUNT = TABLE_COUNT-1
	   ENDIF
20	CONTINUE
C
C now re-make up first word of table (leave flags alone)
	TABCNT = TABLE_COUNT
	TABCNT = TABCNT .OR. '8000'X
	CALL LSL_COPY_TABLE_WORDS(TABCNT, %VAL(TABLE_ADDRESS), 1)
C
	RETURN
	END
