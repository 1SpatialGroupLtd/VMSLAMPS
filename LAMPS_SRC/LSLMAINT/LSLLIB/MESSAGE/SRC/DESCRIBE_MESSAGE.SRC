C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1988-03-02 16:06:26.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE DESCRIBE_MESSAGE( SEV_LETTER, MES_IDENT, OLDMESS )
C
***	MODULE	DESCRIBE_MESSAGE
***	IDENT	02MR88
C
C Copyright Laser-Scan Laboratories Ltd., Cambridge, England
C Author TJ Ibbs, 7 July 1987
C
C This routine writes the documentation for the current message
C to the .RNO file
C
	IMPLICIT NONE
C
C Arguments
C
	CHARACTER*1	SEV_LETTER	! letter defining the severity
	CHARACTER*(*)	MES_IDENT	! message ident
	CHARACTER*(*)	OLDMESS		! original message line from file
C
C *****************************************************************************
C Common files
C
	INCLUDE	'LSL$CMNLSL:FILENAME.CMN'
	INCLUDE	'HERE:FILES.CMN'
	INCLUDE	'HERE:QUALIFIERS.CMN'
	INCLUDE	'HERE:MESSAGES.CMN'
C
C Functions
C
	LOGICAL		DO_MESS_LINE	! read/write one line of text
C
C Workspace
C
	INTEGER		END	! end of ident
	INTEGER		LINE	! which line of text this is
	CHARACTER*1	WHICH	! whether 'E' or 'U'
	INTEGER		LENGTH	! length of MESSAGE
C
	CHARACTER*(BIG_STR) MESSAGE
C
C *****************************************************************************
C Firstly, let us output the message text itself
C - work out where the first non-space in the IDENT is
C
	END = LEN(MES_IDENT)
1000	IF ( MES_IDENT(END:END).EQ.' ' ) THEN
	   END = END-1
	   GOTO 1000
	ENDIF
C
C - perform any replacements on the message text
C
	CALL REPLACE_MESSAGE( SEV_LETTER, MES_IDENT,
     &			      OLDMESS(SZ_INDEX_KEY+1:),
     &			      MESSAGE, LENGTH )
C
C - and thus we can write it out
C
	WRITE (RNO_UNIT,40000) MES_IDENT(:END), MESSAGE(:LENGTH)
40000	FORMAT( /
     &		'.NOJUSTIFY;.TP 10;.P -4', /
     &		A,', ',A,/
     &		'.JUSTIFY'/ )
C
C now do the explanation for this message
C
	WRITE (RNO_UNIT,40010)
40010	FORMAT('.P0; ^*Explanation:\*')
C
C extract the lines of the explanation for the message
C
	LINE = 1
2000	IF ( .NOT.DO_MESS_LINE( SEV_LETTER, MES_IDENT, 'E', LINE ) ) THEN
	   LINE = LINE +1
	   GOTO 2000
	ENDIF
C
C and similarly for the user action lines
C
	WRITE (RNO_UNIT,40020)
40020	FORMAT('.P0; ^*User action:\*')
C
	LINE = 1
4000	IF ( .NOT.DO_MESS_LINE( SEV_LETTER, MES_IDENT, 'U', LINE ) ) THEN
	   LINE = LINE +1
	   GOTO 4000
	ENDIF
C
C *****************************************************************************
C
	RETURN
	END
