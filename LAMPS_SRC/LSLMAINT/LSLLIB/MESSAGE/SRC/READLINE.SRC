C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1988-03-01 14:02:06.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL FUNCTION READLINE
C
***	IDENT	01MR88
***	MODULE	READLINE
C
C Copyright (C) LaserScan Laboratories Ltd, Cambridge, England
C Author TJ Ibbs, 2 July 1987
C
C This function reads the next line from the message file.
C It returns an appropriate LSL__ error code
C
	IMPLICIT NONE
C
C *****************************************************************************
C Parameter files
C
	INCLUDE	'LSL$CMNLSL:LSLLIBMSG.PAR'	! LSLLIB message numbers
	INCLUDE	'HERE:NEWMSGMSG.PAR'		! NEWMSG message numbers
C
C define a maximum legal line length for the .MES file
C
	INTEGER*2	MAX_LINE_LENGTH
	PARAMETER	(MAX_LINE_LENGTH=132)
C
C Common files
C
	INCLUDE	'LSL$CMNLSL:TXTC.CMN'
	INCLUDE	'HERE:MESSAGES.CMN'
C
C Functions
C
	LOGICAL		FLRSTR		! read a string
C
C Workspace
C
	LOGICAL		OK,IERR		! function returns
C
C *****************************************************************************
C so read the next line
C
	OK = FLRSTR( ,, IERR )
	IF ( .NOT.OK ) THEN
	   IF ( OK.NE.LSL__EOF ) THEN
	      CALL LSL_PUTMSG( NEWMSG__READERR, LINE_COUNT+1 )
	      CALL LSL_ADDMSG( OK )
	      IF ( OK.EQ.LSL__SYSREAD ) CALL LSL_ADDMSG( IERR )
	   ENDIF
	ELSE
	   LINE_COUNT = LINE_COUNT +1		! count the line
	   IF (TXTPTR.GT.MAX_LINE_LENGTH) THEN	! is it too long?
	      OK = NEWMSG__TOOLONG
	      CALL LSL_PUTMSG(OK,LINE_COUNT,MAX_LINE_LENGTH)
	   ENDIF
	ENDIF
C
C and return
C
	READLINE = OK
	RETURN
	END
