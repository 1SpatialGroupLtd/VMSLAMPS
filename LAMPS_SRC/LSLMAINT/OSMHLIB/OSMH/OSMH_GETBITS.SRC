C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1987-10-08 15:17:44.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE OSMH_GETBITS( FROM, START, END, VALUE )
C
***	IDENT	08OC87
***	MODULE	OSMH_GETBITS
C
C Copyright (C) LaserScan Laboratories Ltd, Cambridge, England
C
C Author TJ Ibbs, 8 October 1987
C
C To extract bits START to END (in OS/ICL bit order) from FROM, and
C return them (appropriately shifted) in VALUE
C
C NOTE that the relevant ICL machines number their bits with bit 0
C      as most significant, in a 24 bit word - ie the relationship
C      between ICL and VAX bits is:
C
C  0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23
C 23 22 21 20 19 18 17 16 15 14 13 12 11 10  9  8  7  6  5  4  3  2  1  0
C
	IMPLICIT NONE
C
C Arguments
C
	INTEGER		FROM		! longword to extract from
	INTEGER		START		! ICL start bit
	INTEGER		END		! ICL end bit
	INTEGER		VALUE		! the result of the extraction
C
C Functions
C
	INTEGER		LIB$EXTZV	! extract a bit field
C
C Workspace
C
	INTEGER		BOT,TOP		! VAX start and end bits
C
C *****************************************************************************
C Calculate the VAX start and end bits from the ICL values
C
	TOP = 23 - START
	BOT = 23 - END
C
C and extract the relevant bit field
C
	VALUE = LIB$EXTZV( BOT, TOP-BOT+1, FROM )
C
	RETURN
	END
