C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1992-11-19 12:36:30.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL FUNCTION OSMH_NEW_PUTSTR( FIELD,STR,STRLEN )
C
***	IDENT	12OC90
***	MODULE	OSMH_NEW_PUTSTR
C
C	Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C	Created					ST	26-Sept-1990
C
C Description
C       A routine to insert a string into the specified field of a type 3 or 4
C       OS map header.
C
	IMPLICIT NONE
C
C Arguments
C
	INTEGER*4	FIELD			! The header field to b written
	CHARACTER*(*)	STR			! The string to be inserted
	INTEGER*4	STRLEN			! The string length
C
C Included Parameter Files
C
	INCLUDE 'CMN:OSMHLIBMSG.PAR'		! OSMH messages
	INCLUDE 'LSL$CMNLSL:LSLLIBMSG.PAR'	! LSLLIB message definitions
	INCLUDE 'LSL$CMNOSMH:OSMH_NEW.PAR'	! Header field definitions
C
C Common Blocks
C
	INCLUDE 'CMN:OSMH_NEW_FILES.CMN'	! File definitions
	INCLUDE 'CMN:OSMH_NEW_TAB.CMN'		! Map header table definitions
	INCLUDE 'LSL$CMNOSMH:OSMH_NEW_MH.CMN'	! New map header definition
	INCLUDE 'LSL$CMNIFF:MHOSGB.CMN'		! Map header definitions
C
C Functions called
C
	LOGICAL		OSMH_NEW_GET_FLD_POSN	! get field's true offset
C
C Local Variables
C
	LOGICAL		STATUS			! Success/failure of routine
	INTEGER*4	POSN, SIZE		! Area of input buffer required
	INTEGER*4	I,P			! counter
	INTEGER*4	LEN			! Resultant length
	INTEGER*4	RETVAL			! system error code
C
C------------------------------------------------------------------------------
C
C Assume everything will work
C
	STATUS = .TRUE.
C
C This routine should only be called for type 3 or 4 headers.
C
	IF ( (MH2DESC(2).NE.3) .AND. (MH2DESC(2).NE.4) ) THEN
	   STATUS = OSMHLIB__BADCALL
	   IF ( .NOT.MH_NOMESS ) CALL LSL_PUTMSG(STATUS)
	   GOTO 999
	ENDIF
C
C Get position and size of field required from common block filled by 
C OSMH_NEW_INI
C
	IF (FIELD.NE.MH_CHANGE_IND) THEN
	   STATUS = OSMH_NEW_GET_FLD_POSN(FIELD,POSN,SIZE)
	   IF (.NOT.STATUS) THEN
C
C Miss out messages as GET_FLD_POSN will have generate its own
C
	      GOTO 1000
	   ENDIF
	ELSE
	   DO 100 I = 1,8
	      P = MH_CH_IND_A+I-1
	      IF (OSMH_TABLE(P,2,MH2DESC(2)).NE.MH_UNDEFINED) THEN
		 STATUS = OSMH_NEW_GET_FLD_POSN(P,POSN,SIZE)
		 IF (.NOT.STATUS) GOTO 999
		 MH2BYTE(POSN) = ICHAR(STR(I:I))
	      ENDIF
100	   CONTINUE
	   GOTO 1000
	ENDIF
C
C Check the field
C
	IF ( (POSN.EQ.MH_UNDEFINED) .AND. (SIZE.EQ.MH_UNDEFINED) ) THEN
	   STATUS = OSMHLIB__NOSUCHFIELD
	   IF ( .NOT.MH_NOMESS ) CALL LSL_PUTMSG(STATUS)
	   GOTO 999
	ENDIF
C
C Check the field is alphanumeric
C
	IF ( OSMH_TABLE_FORMAT(FIELD,MH2DESC(2))(1:1) .NE. 'A') THEN
	   STATUS = OSMHLIB__FLDNOTSTR
	   IF ( .NOT.MH_NOMESS ) CALL LSL_PUTMSG(STATUS)
	   GOTO 999
	ENDIF
C
	LEN = STRLEN
C
	IF (LEN.GT.SIZE) THEN
	   IF ( .NOT.MH_NOMESS ) CALL LSL_PUTMSG(OSMHLIB__STRSIZ,STR,SIZE)
	   LEN = SIZE
	ENDIF
C
C Blank whole field
C
	DO 850 I = 1,SIZE
	   MH2BYTE(POSN+I-1) = 32		! Blank field with spaces
850	CONTINUE
C
C Fill field from STR
C
	POSN=POSN+SIZE-LEN
	DO 900 I = 1,LEN
	   MH2BYTE(POSN+I-1) = ICHAR( STR(I:I) )
900	CONTINUE
C
	GOTO 1000
C
C Failure
C
999	IF ( .NOT.MH_NOMESS ) CALL LSL_ADDMSG( OSMHLIB__ERRPUTSTR )
C
C Return
C
1000	OSMH_NEW_PUTSTR = STATUS
C
	RETURN
	END
C
