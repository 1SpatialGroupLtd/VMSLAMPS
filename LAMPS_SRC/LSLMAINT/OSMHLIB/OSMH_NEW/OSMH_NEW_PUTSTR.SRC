	LOGICAL FUNCTION OSMH_NEW_PUTSTR( FIELD,STR,STRLEN )
C
***	IDENT	12OC90
***	MODULE	OSMH_NEW_PUTSTR
C
C	Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C	Created					ST	26-Sept-1990
C
C Description
C
	IMPLICIT NONE
C
C Arguments
C
	INTEGER*4	FIELD			! The header field to be written
	CHARACTER*(*)	STR			! The string to be inserted
	INTEGER*4	STRLEN			! The string length
C
C Included Parameter Files
C
	INCLUDE 'CMN:OSMHLIBMSG.PAR'		! OSMH messages
	INCLUDE 'LSL$CMNLSL:LSLLIBMSG.PAR'	! LSLLIB message definitions
	INCLUDE 'LSL$CMNOSMH:OSMH_NEW.PAR'	! Header field definitions
C
C Common Blocks
C
	INCLUDE 'CMN:OSMH_NEW_FILES.CMN'	! File definitions
	INCLUDE 'CMN:OSMH_NEW_TAB.CMN'		! Map header table definitions
	INCLUDE 'LSL$CMNOSMH:OSMH_NEW_MH.CMN'	! New map header definition
	INCLUDE 'LSL$CMNIFF:MHOSGB.CMN'		! Map header definitions
C
C Local Variables
C
	LOGICAL		STATUS			! Success/failure of routine
	INTEGER*4	POSN, SIZE		! Area of input buffer required
	INTEGER*4	I			! counter
	INTEGER*4	LEN			! Resultant length
	INTEGER*4	RETVAL			! system error code
C
C------------------------------------------------------------------------------
C
C Assume everything will work
C
	STATUS = .TRUE.
C
C This routine should only be called for type 3 or 4 headers.
C
	IF ( (MH2DESC(2).NE.3) .AND. (MH2DESC(2).NE.4) ) THEN
	   STATUS = OSMHLIB__BADCALL
	   IF ( .NOT.MH_NOMESS ) CALL LSL_PUTMSG(STATUS)
	   GOTO 999
	ENDIF
C
C Get position and size of field required from common block filled by 
C OSMH_NEW_INI
C
	POSN = OSMH_TABLE(FIELD,1,MH2DESC(2))
	SIZE = OSMH_TABLE(FIELD,2,MH2DESC(2))
C
	IF ( (POSN.EQ.0) .AND. (SIZE.EQ.0) ) THEN
	   STATUS = OSMHLIB__NOSUCHFIELD
	   IF ( .NOT.MH_NOMESS ) CALL LSL_PUTMSG(STATUS)
	   GOTO 999
	ENDIF
C
C Check the field is an integer
C
	IF ( OSMH_TABLE_FORMAT(FIELD,MH2DESC(2))(1:1) .NE. 'A') THEN
	   STATUS = OSMHLIB__FLDNOTSTR
	   IF ( .NOT.MH_NOMESS ) CALL LSL_PUTMSG(STATUS)
	   GOTO 999
	ENDIF
C
	LEN = STRLEN
C
	IF (LEN.GT.SIZE) THEN
	   IF ( .NOT.MH_NOMESS ) CALL LSL_PUTMSG(OSMHLIB__STRSIZ,STR,SIZE)
	   LEN = SIZE
	ENDIF
C
C Blank whole field
C
	DO 850 I = 1,SIZE
	   MH2BYTE(POSN+I-1) = 32		! Blank field with spaces
850	CONTINUE
C
C Fill field from STR
C
	POSN=POSN+SIZE-LEN
	DO 900 I = 1,LEN
	   MH2BYTE(POSN+I-1) = ICHAR( STR(I:I) )
900	CONTINUE
C
	GOTO 1000
C
C Failure
C
999	IF ( .NOT.MH_NOMESS ) CALL LSL_ADDMSG( OSMHLIB__ERRPUTSTR )
C
C Return
C
1000	OSMH_NEW_PUTSTR = STATUS
C
	RETURN
	END
C
