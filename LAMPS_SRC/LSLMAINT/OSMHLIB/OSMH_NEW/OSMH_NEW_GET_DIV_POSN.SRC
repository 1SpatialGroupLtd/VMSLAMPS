C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1992-11-09 11:02:18.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL FUNCTION OSMH_NEW_GET_DIV_POSN( DIVNUM, POS, LINE )
C
***	IDENT	21OC92
***	MODULE	OSMH_NEW_GET_DIV_POSN
C
C	Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C	Created					ST	21-Oct-1992
C
C Description
C
C Returns the offset of the divider within the map header.
C The character value of the divider is held in MH_CITF_DIVIDER.
C
	IMPLICIT NONE
C
C Arguments
C
	INTEGER*4	DIVNUM			! The nth divider
	INTEGER*4	POS			! The offset into header
	INTEGER*4	LINE			! The line number it was in
C
C Included Parameter Files
C
	INCLUDE 'CMN:OSMHLIBMSG.PAR'		! OSMH messages
	INCLUDE 'LSL$CMNOSMH:OSMH_NEW.PAR'	! Header field definitions
C
C Common Blocks
C
	INCLUDE 'CMN:OSMH_NEW_TAB.CMN'		! Map header table definitions
	INCLUDE 'LSL$CMNOSMH:OSMH_NEW_MH.CMN'	! New map header definition
	INCLUDE 'LSL$CMNIFF:MHOSGB.CMN'		! Map header definitions
C
C Functions called
C
	LOGICAL		RDLONG			! read a long
	INTEGER*4	RDCH			! read char
	LOGICAL*4	OSMH_NEW_GET_CITF_LINE	! read a line from the header
C
C Local Variables
C
	INTEGER*4	STATUS			! Error status code
	INTEGER*4	I,J			! counters
C
	LOGICAL		LASTLINE		! of SECRHEC
	LOGICAL		FOUNDALLDIVS		! have all the DIVS been found
	LOGICAL		SECHREC			! are we in the SECHREC
	INTEGER*4	DIVFOUND		! num of dividers found so far
	INTEGER*4	LEN			! length of STR
	INTEGER*4	HEADERSIZE		! the actual size of header
	CHARACTER*80	STR			! each line from header
	CHARACTER*1	CH			! a character
C
C------------------------------------------------------------------------------
C
C Assume everything will work
C
	STATUS = .TRUE.
	DIVFOUND = 0
	POS = 0
	LINE = 0
	LASTLINE = .FALSE.
	FOUNDALLDIVS = .FALSE.
C
C This routine should only be called for type 4 headers.
C
	IF (MH2DESC(2).NE.4) THEN
	   STATUS = OSMHLIB__BADCALL
	   IF ( .NOT.MH_NOMESS ) CALL LSL_PUTMSG(STATUS)
	   GOTO 999
	ENDIF
C
C Set buffer to read from
C
	CALL SETAUX(MH2BYTE,MH2BYSZ)
C
	HEADERSIZE = OSMH_TABLE(MH_LENGTH,1,MH2DESC(2))
C
	SECHREC = .FALSE.
	DO 100 I = 1,(HEADERSIZE-1)/80+1
	   STATUS = OSMH_NEW_GET_CITF_LINE(I,STR,LEN)
	   IF (STATUS.EQ.OSMHLIB__BLANKLINE) GOTO 700
	   IF (.NOT.STATUS) GOTO 999
	   IF (.NOT.SECHREC) SECHREC = STR(1:2).EQ.'07'
	   IF (.NOT.SECHREC) GOTO 150
	   LASTLINE = STR(LEN-1:LEN-1).EQ.'0'
	   LEN = LEN-2
	   DO 200 J = 3,LEN
	      CH = STR(J:J)
	      IF (CH.EQ.MH_CITF_DIVIDER) DIVFOUND = DIVFOUND + 1
	      IF (DIVNUM.EQ.DIVFOUND) THEN
		 POS = POS + J
		 LINE = I
		 GOTO 800
	      ENDIF
200	   CONTINUE
150	   POS = POS + 80
	   IF (LASTLINE) GOTO 700
100	CONTINUE
C       
C Check the reason for the failure
C
700	IF (.NOT.FOUNDALLDIVS) THEN
	   STATUS = OSMHLIB__TOOFEWDIVS
	   IF ( .NOT.MH_NOMESS ) CALL LSL_PUTMSG(STATUS)
	   GOTO 999
	ENDIF
C
800	CONTINUE
C
999	OSMH_NEW_GET_DIV_POSN = STATUS
C
	RETURN
	END
C
