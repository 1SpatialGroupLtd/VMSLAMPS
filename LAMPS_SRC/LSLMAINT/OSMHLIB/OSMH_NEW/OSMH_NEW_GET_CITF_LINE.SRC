C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1992-11-30 14:49:24.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL FUNCTION OSMH_NEW_GET_CITF_LINE(LINENUM,STR,STRLEN)
C
***	IDENT	21OC92
***	MODULE	OSMH_NEW_GET_CITF_LINE
C
C	Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C	Created					ST	21-Oct-1992
C
C Description
C       A routine to extract a line (LINENUM) from a type 4 CITF map header
C       and put the result in STR with its length in STRLEN. The line returned
C       is not automatically 80 characters, but upto and including the {EOR}
C       flag (%).
C
C
	IMPLICIT NONE
C
C Arguments
C
	INTEGER*4	LINENUM			! The line number within header
	CHARACTER*(*)	STR			! The resultant string
	INTEGER*4	STRLEN			! And its length
C
C Included Parameter Files
C
	INCLUDE 'CMN:OSMHLIBMSG.PAR'		! OSMH messages
	INCLUDE 'LSL$CMNLSL:LSLLIBMSG.PAR'	! LSLLIB messages
C
C Common Blocks
C
	INCLUDE 'LSL$CMNOSMH:OSMH_NEW_MH.CMN'	! New map header definition
	INCLUDE 'LSL$CMNIFF:MHOSGB.CMN'		! Map header definitions
C
C Functions called
C
	LOGICAL		RDLONG			! read a long
	INTEGER*4	RDCH			! read char
	INTEGER*4	READSTR
C
C Local Variables
C
	INTEGER*4	STATUS			! Error status code
	INTEGER*4	RETVAL			! Error status code
	INTEGER*4	I,NUMBLANKS		! Counters
	INTEGER*4	ICH			! ASCII value for character
	CHARACTER*1	CH			! For the continuation flag
C
C------------------------------------------------------------------------------
C
C Assume everything will work
C
	STATUS = .TRUE.
C
	IF (LINENUM.GT.MH2BYSZ/80) THEN
	   STATUS = .FALSE.
	   GOTO 999
	ENDIF
C
C This routine should only be called for type 4 headers.
C
	IF (MH2DESC(2).NE.4) THEN
	   STATUS = OSMHLIB__BADCALL
	   IF ( .NOT.MH_NOMESS ) CALL LSL_PUTMSG(STATUS)
	   GOTO 999
	ENDIF
C
C Set buffer to read from
C
	CALL SETAUX(MH2BYTE,MH2BYSZ)
	CALL SETWIN((LINENUM-1)*80+1,80)
C
	STRLEN = READSTR(STR,,,.FALSE.,RETVAL)
	IF (.NOT.RETVAL .AND. .NOT.MH_NOMESS ) CALL LSL_PUTMSG(RETVAL)
C
	IF (STRLEN.EQ.0.AND.RETVAL.EQ.LSL__STREOL) STRLEN = 80
C
C Check for blank line
C
	IF (STRLEN.EQ.80) THEN
	   NUMBLANKS = 0
	   DO 100 I = 1,80
	      ICH = ICHAR(STR(I:I))
	      IF (ICH.EQ.32.OR.ICH.EQ.0) NUMBLANKS = NUMBLANKS + 1
100	   CONTINUE
	   IF (NUMBLANKS.EQ.80) THEN
	      STATUS = OSMHLIB__BLANKLINE
	      GOTO 1000
	   ENDIF
	ENDIF
C
C Check for {EOR} character
C
	STRLEN = INDEX(STR,MH_CITF_EOR)
	IF (STRLEN.EQ.0) THEN
	   STATUS = OSMHLIB__NOEORCHAR
	   IF ( .NOT.MH_NOMESS ) CALL LSL_PUTMSG(STATUS,LINENUM)
	   GOTO 999
	ENDIF
C
C Check for sensible size
C
	IF (STRLEN.LT.4) THEN
	   STATUS = OSMHLIB__ODDSIZE
	   IF ( .NOT.MH_NOMESS ) CALL LSL_PUTMSG(STATUS,LINENUM)
	   GOTO 999
	ENDIF
C
C Check for continuation character (0 or 1)
C
	CH = STR(STRLEN-1:STRLEN-1)
	IF (CH.NE.'1' .AND. CH.NE.'0') THEN
	   STATUS = OSMHLIB__NOCONTCHAR
	   IF ( .NOT.MH_NOMESS ) CALL LSL_PUTMSG(STATUS,LINENUM)
	   GOTO 999
	ENDIF
C
	GOTO 1000
C
C Failure
C
999	IF ( .NOT.MH_NOMESS ) CALL LSL_ADDMSG( OSMHLIB__ERRGETCITF )
C
C Reset decoding pointer
C
1000	CALL BSLN
C
C Return
C
	OSMH_NEW_GET_CITF_LINE = STATUS
C
	RETURN
	END
