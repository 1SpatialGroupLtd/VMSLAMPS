	LOGICAL FUNCTION OSMH_NEW_GET_FLD_POSN( FIELD, POS, SIZ )
C
***	IDENT	21OC92
***	MODULE	OSMH_NEW_GET_FLD_POSN
C
C	Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C	Created					ST	21-Oct-1992
C
C Description
C
C Returns the true offset of the field specified into the map header.
C For OSTF fields, the value returned is just the value in the OSMH_TABLE
C array. For fixed CITF fileds, the offset must take ito account of the line
C numbers and for variable CITF fields (the Change Indiactor Flags) the number
C of dividers must be searched for and the offset calculated from there.
C
	IMPLICIT NONE
C
C Arguments
C
	INTEGER*4	FIELD			! The header field required
	INTEGER*4	POS			! The true offset into header
	INTEGER*4	SIZ			! The width of the field
C
C Included Parameter Files
C
	INCLUDE 'CMN:OSMHLIBMSG.PAR'		! OSMH messages
	INCLUDE 'LSL$CMNOSMH:OSMH_NEW.PAR'	! Header field definitions
C
C Common Blocks
C
	INCLUDE 'CMN:OSMH_NEW_TAB.CMN'		! Map header table definitions
	INCLUDE 'LSL$CMNOSMH:OSMH_NEW_MH.CMN'	! New map header definition
	INCLUDE 'LSL$CMNIFF:MHOSGB.CMN'		! Map header definitions
C
C Functions called
C
	LOGICAL		RDLONG			! read a long
	INTEGER*4	RDCH			! read char
	LOGICAL*4	OSMH_NEW_GET_CITF_LINE	! read a line from the header
C
C Local Variables
C
	INTEGER*4	STATUS			! Error status code
	INTEGER*4	I,J			! counters
C
	LOGICAL		FOUNDALLDIVS
	LOGICAL		REMEMBER
	INTEGER*4	NUMDIV,DIVFOUND
	INTEGER*4	LEN,OFFSET,NUMLEFT,COUNT
	INTEGER*4	HEADERSIZE
	CHARACTER*80	STR
	CHARACTER*1	CH
C
C------------------------------------------------------------------------------
C
C Assume everything will work
C
	STATUS = .TRUE.
	DIVFOUND = 0
	POS = 0
	COUNT = 0
	FOUNDALLDIVS = .FALSE.
C
C This routine should only be called for type 3 or 4 headers.
C
	IF ( (MH2DESC(2).NE.3) .AND. (MH2DESC(2).NE.4) ) THEN
	   STATUS = OSMHLIB__BADCALL
	   IF ( .NOT.MH_NOMESS ) CALL LSL_PUTMSG(STATUS)
	   GOTO 999
	ENDIF
C
C Set buffer to read from
C
	CALL SETAUX(MH2BYTE,MH2BYSZ)
C
C Find size field
C
!	   IF (MH2DESC(2).EQ.3) THEN
!	      SIZE = OSMH_TABLE(FIELD,3,MH2DESC(2))
!	   ELSE
!	      IF (FIELD.EQ.MH_LENGTH) THEN
!		 SIZE = OSMH_TABLE(FIELD,1,MH2DESC(2))
!	      ELSE
!		 SIZE = OSMH_TABLE(FIELD,3,MH2DESC(2))
!	      ENDIF
!	   ENDIF
C
C Find offset for field
C
	IF (MH2DESC(2).EQ.3) THEN
	   POS = OSMH_TABLE(FIELD,2,MH2DESC(2))
	   SIZ = OSMH_TABLE(FIELD,3,MH2DESC(2))
	ELSEIF (FIELD.LT.MH_CH_IND_A .OR. FIELD.GT.MH_CH_IND_H) THEN
	   IF (FIELD.EQ.MH_LENGTH) THEN
	      POS = 1
	      SIZ = OSMH_TABLE(FIELD,1,MH2DESC(2))
	   ELSE
	      IF (OSMH_TABLE(FIELD,1,MH2DESC(2)).EQ.MH_UNDEFINED .AND.
     &		  OSMH_TABLE(FIELD,2,MH2DESC(2)).EQ.MH_UNDEFINED) THEN
		 POS = MH_UNDEFINED
		 GOTO 999
	      ENDIF
	      POS = (OSMH_TABLE(FIELD,1,MH2DESC(2))-1) * 80
	      POS = POS + OSMH_TABLE(FIELD,2,MH2DESC(2))
	      SIZ = OSMH_TABLE(FIELD,3,MH2DESC(2))
	   ENDIF
	ELSE
	   SIZ = OSMH_TABLE(FIELD,3,MH2DESC(2))
	   HEADERSIZE = OSMH_TABLE(MH_LENGTH,1,MH2DESC(2))
	   NUMDIV = OSMH_TABLE(FIELD,1,MH2DESC(2))
	   OFFSET = OSMH_TABLE(FIELD,2,MH2DESC(2))
!	   IF (NUMDIV.EQ.0 .AND. OFFSET.EQ.0) GOTO 999	! field undefined
	   FOUNDALLDIVS = NUMDIV.EQ.0
	   DO 100 I = 1,(HEADERSIZE-1)/80+1
	      STATUS = OSMH_NEW_GET_CITF_LINE(I,STR,LEN)
	      IF (STATUS.EQ.OSMHLIB__BLANKLINE) GOTO 700
!	      IF (STATUS.EQ.OSMHLIB__BLANKLINE) THEN
!		 STATUS = OSMHLIB__TOOFEWDIVS
!		 IF ( .NOT.MH_NOMESS ) CALL LSL_PUTMSG(STATUS)
!		 GOTO 999
!	      ENDIF
	      IF (.NOT.STATUS) THEN
		 GOTO 999
	      ENDIF
	      LEN = LEN-2
	      DO 200 J = 3,LEN
		 IF (FOUNDALLDIVS) THEN
		    COUNT = COUNT + 1
		    IF (COUNT.GE.OFFSET) THEN
		       POS = POS + J
		       GOTO 800
		    ENDIF
		 ELSE
		    CH = STR(J:J)
		    IF (CH.EQ.MH_CITF_DIVIDER) DIVFOUND = DIVFOUND + 1
		    IF (NUMDIV.EQ.DIVFOUND) THEN
		       NUMLEFT = LEN-J
		       IF (OFFSET.LE.NUMLEFT) THEN
			  POS = POS + J + OFFSET
			  GOTO 800
		       ELSE
			  COUNT = NUMLEFT
			  FOUNDALLDIVS = .TRUE.
			  GOTO 150
		       ENDIF
		    ENDIF
		 ENDIF
200	      CONTINUE
150	      POS = POS + 80
100	   CONTINUE
C
C Check the reason for the failure
C
700	   IF (.NOT.FOUNDALLDIVS) THEN
	      STATUS = OSMHLIB__TOOFEWDIVS
	      IF ( .NOT.MH_NOMESS ) CALL LSL_PUTMSG(STATUS)
	      GOTO 999
	   ELSE
	      IF (COUNT.LT.OFFSET) THEN
		 STATUS = OSMHLIB__BADOFFSET
		 IF ( .NOT.MH_NOMESS ) CALL LSL_PUTMSG(STATUS)
		 GOTO 999
	      ENDIF
	   ENDIF
	ENDIF
C
800	CONTINUE
C
999	OSMH_NEW_GET_FLD_POSN = STATUS
C
	RETURN
	END
C
