C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1992-10-30 14:30:08.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL FUNCTION OSMH_NEW_PUTFLG( FIELD )
C
***	IDENT	19AP91
***	MODULE	OSMH_NEW_PUTFLG
C
C	Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C	Created					RJH	17-Jan-1991
C
C Description
C
C	Inserts an OSTF flag into a type 3 header
C
	IMPLICIT NONE
C
C Included Parameter Files
C
	INCLUDE 'CMN:OSMHLIBMSG.PAR'		! OSMHLIB messages
	INCLUDE 'LSL$CMNOSMH:OSMH_NEW.PAR'	! Header field definitions
C
C Arguments
C
	INTEGER*4	FIELD		! the header field to be written
C
C Common Blocks
C
	INCLUDE 'LSL$CMNLSL:EXPC.CMN'		! Text output
	INCLUDE 'CMN:OSMH_NEW_TAB.CMN'		! Map header table definitions
	INCLUDE 'LSL$CMNOSMH:OSMH_NEW_MH.CMN'	! New map header definition
	INCLUDE 'LSL$CMNIFF:MHOSGB.CMN'		! Map header definitions
C
C Functions
C
	INTEGER*4	EXPAND			! string expansion
	LOGICAL		OSMH_NEW_GET_FLD_POSN	! get field's true offset
C
C Local Variables
C
	LOGICAL		STATUS		! success/failure of routine
	INTEGER*4	FLG		! the header flag to be inserted
	INTEGER*4	POSN, SIZE	! flag position in header
	INTEGER*2	LEN		! Length of expanded string
	BYTE		BUF(80)		! Array for expanded string
	INTEGER*2	BUFPTR		! Pointer into BUF
	INTEGER*2	I		! counter
	INTEGER*4	DUMMY		! don't get size from GET_FLD_POSN
C
C------------------------------------------------------------------------------
C
C Assume everything will work
C
	STATUS = .TRUE.
C
C This routine should only be called for type 3 headers.
C
	IF ( MH2DESC(2).NE.3 ) THEN
	   STATUS = OSMHLIB__BADCALL
	   IF ( .NOT.MH_NOMESS ) CALL LSL_PUTMSG(STATUS)
	   GOTO 999
	ENDIF
C
C Get position of field required 
C
	STATUS = OSMH_NEW_GET_FLD_POSN(FIELD,POSN,DUMMY)
	IF (.NOT.STATUS) THEN
C
C Miss out messages as GET_FLD_POSN will have generate its own
C
	   GOTO 1000
	ENDIF
C
	IF ( POSN.EQ.MH_UNDEFINED ) THEN
	   STATUS = OSMHLIB__NOSUCHFIELD
	   IF ( .NOT.MH_NOMESS ) CALL LSL_PUTMSG(STATUS)
	   GOTO 999
	ENDIF
C
C Fill the field with the flag
C
	IF (FIELD .EQ. MH_ONE) THEN
	   FLG = -1
	ELSEIF (FIELD .EQ. MH_TWENTY) THEN
	   FLG = -20
	ELSE
	   STATUS = OSMHLIB__UNKFLG
	   IF ( .NOT.MH_NOMESS ) CALL LSL_PUTMSG(STATUS)
	   GOTO 999
	ENDIF
C
	IF (FLG.EQ.-20) THEN
	   LEN = EXPAND('%^L%I4%I4',FLG,1 )
	ELSE
	   LEN = EXPAND('%^L%I4%I4',FLG,0 )
	ENDIF
	CALL SAVE_EXPC( BUF,BUFPTR,LEN)
CCC	CALL EXPAND('%^L%I4%I4',MH2BYTE(POSN),FLG,0)
C
	SIZE = 8
C
C Blank whole field
C
	DO 850 I = 1,SIZE
	   MH2BYTE(POSN+I-1) = 32		! Blank field with spaces
850	CONTINUE
C
	POSN=POSN+SIZE-LEN
	DO 900 I = 1,LEN
	   MH2BYTE(POSN+I-1) = BUF(I)
900	CONTINUE
C
	GOTO 1000
C
C Failure
C
999	IF ( .NOT.MH_NOMESS ) CALL LSL_ADDMSG( OSMHLIB__ERRPUTINT )	! *** PUTFLD
C
C Return
C
1000	OSMH_NEW_PUTFLG = STATUS
C
	RETURN
	END
C
