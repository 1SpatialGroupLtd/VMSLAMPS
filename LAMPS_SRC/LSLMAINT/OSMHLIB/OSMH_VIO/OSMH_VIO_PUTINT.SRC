C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1990-11-09 10:37:46.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL FUNCTION OSMH_VIO_PUTINT( FIELD,VALUE )
C
***	IDENT	09NO90
***	MODULE	OSMH_VIO_PUTINT
C
C	Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C	VIOLIB version for DIGSYS		RJH	05-Nov-1990
C	Created					ST	26-Sept-1990
C
C Description
C
	IMPLICIT NONE
C
C Arguments
C
	INTEGER*4	FIELD			! The header field to be written
	INTEGER*4	VALUE			! The array to go into the field
C
C Included Parameter Files
C
	INCLUDE 'CMN:OSMHLIBMSG.PAR'		! OSMH messages
	INCLUDE 'LSL$CMNOSMH:OSMH_NEW.PAR'	! Header field definitions
C
C Common Blocks
C
	INCLUDE 'CMN:OSMH_NEW_FILES.CMN'	! File definitions
	INCLUDE 'CMN:OSMH_NEW_TAB.CMN'		! Map header table definitions
	INCLUDE 'CMNV:OSMH_VIO_MSG.CMN'		! message arguments
	INCLUDE 'LSL$CMNVIO:EXPC.CMN'		! Text output
	INCLUDE 'LSL$CMNOSMH:OSMH_NEW_MH.CMN'	! New map header definition
	INCLUDE 'LSL$CMNIFF:MHOSGB.CMN'		! Map header definitions
C
C Functions called
C
	INTEGER*4	EXPAND			! string expansion
C
C Local Variables
C
	LOGICAL		STATUS			! Success/failure of routine
	INTEGER*4	I			! counter
	INTEGER*4	RETVAL			! system error code
	INTEGER*2	LEN			! Length of expanded string
	BYTE		BUF(80)			! Array for expanded string
	INTEGER*2	BUFPTR			! Pointer into BUF
C
C------------------------------------------------------------------------------
C
C Assume everything will work
C
	STATUS = .TRUE.
C
C This routine should only be called for type 3 or 4 headers.
C
	IF ( (MH2DESC(2).NE.3) .AND. (MH2DESC(2).NE.4) ) THEN
	   STATUS = OSMHLIB__BADCALL
	   IF ( .NOT.MH_NOMESS ) CALL LSL_PUTMSG(STATUS)
	   GOTO 999
	ENDIF
C
C Get position and size of field required from common block filled by 
C OSMH_VIO_INI
C
	POSN = OSMH_TABLE(FIELD,1,MH2DESC(2))
	SIZE = OSMH_TABLE(FIELD,2,MH2DESC(2))
C
	IF ( (POSN.EQ.0) .AND. (SIZE.EQ.0) ) THEN
	   STATUS = OSMHLIB__NOSUCHFIELD
	   IF ( .NOT.MH_NOMESS ) CALL LSL_PUTMSG(STATUS)
	   GOTO 999
	ENDIF
C
C Check the field is an integer
C
	IF ( OSMH_TABLE_FORMAT(FIELD,MH2DESC(2))(1:1) .NE. 'I') THEN
	   STATUS = OSMHLIB__FLDNOTINT
	   IF ( .NOT.MH_NOMESS ) CALL LSL_PUTMSG(STATUS)
	   GOTO 999
	ENDIF
C
	LEN = EXPAND('%^L%I',VALUE )
	CALL SAVE_EXPC( BUF,BUFPTR,LEN)
C
	IF (LEN.GT.SIZE) THEN
	   IF ( .NOT.MH_NOMESS ) CALL LSL_PUTMSG(OSMHLIB__INTSIZ)
	   LEN = SIZE
	ENDIF
C
C Blank whole field
C
	DO 850 I = 1,SIZE
	   MH2BYTE(POSN+I-1) = 32		! Blank field with spaces
850	CONTINUE
C
	POSN=POSN+SIZE-LEN
	DO 900 I = 1,LEN
	   MH2BYTE(POSN+I-1) = BUF(I)
900	CONTINUE
C
	GOTO 1000
C
C Failure
C
999	IF ( .NOT.MH_NOMESS ) CALL LSL_ADDMSG( OSMHLIB__ERRPUTINT )
C
C Return
C
1000	OSMH_VIO_PUTINT = STATUS
C
	RETURN
	END
C
