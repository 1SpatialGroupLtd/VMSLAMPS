	.TITLE	TRNALL
	.IDENT	/10SE87/
 
; Copyright Laser-Scan Laboratories, Ltd., Cambridge, England
;
;MOD	Move .ASCID to DATA_PSECT			CCB 10-Sep-1987
;MOD	PSECT now LSL					TJH 15-Jun-1987
; Author:			Clarke Brunt, November 1984
 
	.LIBRARY	/LSL$LIBRARY:LSLMACLIB/
 
; system symbol definitions
	$LNMDEF
	$SSDEF
 
	DATA_PSECT	LSL
TABDESC:.ASCID		/LNM$FILE_DEV/

	CODE_PSECT	LSL

; ******************************************************************** 
; Translate logical name as far as it will go
; Return SS$_NOLOGNAM if it doesn't translate at all,
; SS$_NORMAL for normal complete translation, otherwise any
; error returns from $TRNLNM.
;
; ierr = TRNALL( FROM, TO )
;

TRNATTR:	.LONG	LNM$M_CASE_BLIND
 
 .ENTRY	TRNALL, ^M<R2,R3,R4,R5,R6,R11>
 
	JSB	G^VIO$1ST		; init argument mechanism
	JSB	G^VIO$GNA		; get string to translate
	BCS	50$			; missing
	MOVL	R0, R5			; input descriptor address
	JSB	G^VIO$GNA
	BCS	50$			; missing
	MOVL	R0, R2			; output descriptor address
;
; create output descriptor on stack
	MOVQ	(R0), -(SP)
	MOVL	SP, R3			; descriptor address
;
; create item list on stack
	PUSHL	#0			; terminator
	PUSHAW	(R3)			; length part
	MOVQ	(R0), -(SP)		; push descriptor
	MOVW	#LNM$_STRING, 2(SP)	; insert item code
	CLRL	R6			; no translation yet

10$:	MOVL	SP, R0			; temporary
	$TRNLNM_S	ATTR=TRNATTR,-	; attributes
			TABNAM=TABDESC,-; table name
	   		LOGNAM=(R5),-	; logical name
			ITMLST=(R0)

	CMPW	R0, #SS$_NOLOGNAM	; doesn't exist
	BEQL	30$
	CMPW	R0, #SS$_BUFFEROVF	; buffer overflow
	BEQL	60$
	BLBC	R0, 35$			; if LBC, translation actually failed
	CMPB	@4(R2), #^X1B		; <esc> at start?
	BNEQ	20$			; if NEQ, not process permanent
	ADDL2	#4, 4(R3)		; advance over 'permanent' indicator
	SUBW2	#4, (R3)		; adjust length
;
20$:	MOVL	R3, R5			; output becomes input
	AOBLEQ	#10,R6,10$		; round again

25$:	MOVZWL	#SS$_NOLOGNAM, R0
	RET

; reached last level
; pad with spaces
30$:	MOVC5	(R5),@4(R5),#^A/ /,(R2),@4(R2)
	TSTL	R6
	BEQL	25$			; return SS$_NOLOGNAM if first time
	MOVZWL	#SS$_NORMAL, R0		; change to normal
35$:	RET

50$:	MOVZWL	#SS$_INSFARG, R0	; insufficient arguments
	RET

60$:	MOVZWL	#SS$_RESULTOVF, R0	; result overflowed
	RET

	.END
