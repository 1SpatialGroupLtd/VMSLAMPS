C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1991-05-29 18:36:58.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL FUNCTION OSMH_VIO_PUTFLG( FIELD )
C
***	IDENT	30MY91
***	MODULE	OSMH_VIO_PUTFLG
C
C	Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C	Created					RJH	17-Jan-1991
C
C Description
C
C	Inserts an OSTF flag into a type 3 header
C
	IMPLICIT NONE
C
C Included Parameter Files
C
	INCLUDE 'CMN:OSMHLIBMSG.PAR'		! OSMHLIB messages
	INCLUDE 'LSL$CMNOSMH:OSMH_NEW.PAR'	! Header field definitions
C
C Arguments
C
	INTEGER*4	FIELD		! the header field to be written
C
C Common Blocks
C
	INCLUDE 'CMN:OSMH_NEW_TAB.CMN'		! Map header table definitions
	INCLUDE 'LSL$CMNOSMH:OSMH_NEW_MH.CMN'	! New map header definition
	INCLUDE 'LSL$CMNIFF:MHOSGB.CMN'		! Map header definitions
C
C Local Variables
C
	LOGICAL		STATUS		! success/failure of routine
	INTEGER*4	FLG		! the header flag to be inserted
	INTEGER*4	POSN		! flag position in header
C
C------------------------------------------------------------------------------
C
C Assume everything will work
C
	STATUS = .TRUE.
C
C This routine should only be called for type 3 headers.
C
	IF ( MH2DESC(2).NE.3 ) THEN
	   STATUS = OSMHLIB__BADCALL
	   IF ( .NOT.MH_NOMESS ) CALL LSL_PUTMSG(STATUS)
	   GOTO 999
	ENDIF
C
C Get position of field required 
C
	POSN = OSMH_TABLE(FIELD,1,MH2DESC(2))
C
	IF ( POSN.EQ.0 ) THEN
	   STATUS = OSMHLIB__NOSUCHFIELD
	   IF ( .NOT.MH_NOMESS ) CALL LSL_PUTMSG(STATUS)
	   GOTO 999
	ENDIF
C
C Fill the field with the flag
C
	IF (FIELD .EQ. MH_ONE) THEN
	   FLG = -1
	   CALL EXPAND('%W%^L%I4%I4',MH2BYTE(POSN),FLG,0)
	ELSEIF (FIELD .EQ. MH_TWENTY) THEN
	   FLG = -20
	   CALL EXPAND('%W%^L%I4%I4',MH2BYTE(POSN),FLG,1)
	ELSE
	   STATUS = OSMHLIB__UNKFLG
	   IF ( .NOT.MH_NOMESS ) CALL LSL_PUTMSG(STATUS)
	   GOTO 999
	ENDIF
C
	GOTO 1000
C
C Failure
C
999	IF ( .NOT.MH_NOMESS ) CALL LSL_ADDMSG( OSMHLIB__ERRPUTINT )	! *** PUTFLD
C
C Return
C
1000	OSMH_VIO_PUTFLG = STATUS
C
	RETURN
	END
C
