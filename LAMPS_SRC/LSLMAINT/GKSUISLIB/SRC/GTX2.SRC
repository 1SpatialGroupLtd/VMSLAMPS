C
C Text functions
C ==============
C
C *********************************************************************
C
C	TEXT OUTPUT PRIMITIVE
C	=====================
C
C
	SUBROUTINE	GTX(PX,PY,STRING)
C
**	MODULE	GTX
**	IDENT	21FE91
C
C Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C Created				Clarke Brunt	24-Jul-1985
C
C TEXT
C
	IMPLICIT NONE
C
C Arguments:
C
	REAL	PX			! X coord
	REAL	PY			! Y coord
	CHARACTER*(*) STRING		! text
C
C Workspace
	REAL	DX,DY			! device coordinate
C
C Functions
	LOGICAL	GKCLIP
C
	INCLUDE 'SYS$LIBRARY:UISUSRDEF'
***	COMMON/GKSDAT2/
***	COMMON/GKSESL/
C
	INTEGER	NCOLI
	INTEGER	DEV
C
	GKSERR	= 0			! no error (yet!)
C
C draw the text on the workstations
	DO 200 DEV = 1,WSMAX
C
C	 is this workstation active? - if not ignore it
C
	IF (.NOT.WSACT(DEV)) GOTO 200
C
C	 ensure that our transformation is up to date
C
	IF (UPTRN(DEV)) CALL GUPTRN(DEV)	! update it
C
C	 is everything clipped (ie nothing visible)
C
	IF (CLPALL(DEV)) GOTO 200
	IF (ENCLIP) THEN
	   IF (GKCLIP(DEV,PX,PY,PX,PY)) GOTO 200
	ENDIF
	CALL GKSW2D(WKIDS(DEV),PX,PY,DX,DY)
	CALL UIS$SET_POSITION(DCB(DEV),DX,DY)
	IF ((PSEL(DEV).AND.USED_PLANESB(1,DEV)).EQ.
     &			   USED_PLANESB(1,DEV)) THEN
	   CALL UIS$TEXT(DCB(DEV),3,STRING)
	ELSE
	   IF (TXCOLI(DEV).NE.0) THEN
	      CALL UIS$SET_WRITING_MODE(DCB(DEV),3,3,UIS$C_MODE_BIS)
	      CALL UIS$TEXT(DCB(DEV),3,STRING)
	   ENDIF
C
	   NCOLI = (.NOT.TXCOLI(DEV)).AND.PSEL(DEV).AND.USED_PLANES(DEV)
	   IF (NCOLI.NE.0) THEN
	      IF (NCOLI.GT.MAXCOL(DEV)) THEN
	         NCOLI = (.NOT.NCOLI).AND.USED_PLANES(DEV)
	         CALL UIS$SET_WRITING_MODE(DCB(DEV),3,3,UIS$C_MODE_BICN)
	      ELSE
	         CALL UIS$SET_WRITING_MODE(DCB(DEV),3,3,UIS$C_MODE_BIC)
	      ENDIF
	      CALL UIS$SET_WRITING_INDEX(DCB(DEV),3,3,NCOLI)
	      CALL UIS$SET_POSITION(DCB(DEV),DX,DY)
	      CALL UIS$TEXT(DCB(DEV),3,STRING)
	      CALL UIS$SET_WRITING_INDEX(DCB(DEV),3,3,TXCOLI(DEV))
	   ENDIF
	ENDIF
C
200	CONTINUE
	RETURN
	END
C
C
C***********************************************************************
C
	SUBROUTINE	GSTXCI(COLI)
C
**	MODULE	GSTXCI
**	IDENT	26AP84
C
C Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C Created				Clarke Brunt	26-April-1984
C
C SET TEXT COLOUR INDEX
C (Don't bother with aspect source flags for now)
C
	IMPLICIT NONE
C
C Arguments:
	INTEGER	COLI			! text colour index
C
***	COMMON/GKSDAT2/
***	COMMON/GKSESL/
C
C workspace
	LOGICAL*1	FST
	INTEGER		DEV
C
	GKSERR = 0
	IF (COLI.LT.0) GOTO 10
C
C for each workstation
	DO 200 DEV = 1,WSMAX
	IF (WKIDS(DEV).LT.0) GOTO 200	! not open
C
	TXCOLI(DEV) = COLI
	IF (TXCOLI(DEV).NE.0) THEN
	   FST = .FALSE.
5	   FST = .NOT.FST
	   IF (POFF(DEV).NE.0) TXCOLI(DEV)=ISHFT(TXCOLI(DEV),POFF(DEV))
	   TXCOLI(DEV) = TXCOLI(DEV).AND.PSEL(DEV).AND.USED_PLANES(DEV)
	   IF (TXCOLI(DEV).GT.MAXCOL(DEV).OR.TXCOLI(DEV).EQ.0) THEN
C
C First time, try again with colour 1, otherwise just use 1
	      TXCOLI(DEV) = 1
	      IF (FST) GOTO 5
	   ENDIF
	   IF (TXCOLI(DEV).EQ.0) TXCOLI(DEV) = 1! avoid background
	ENDIF
	CALL UIS$SET_WRITING_INDEX(DCB(DEV),3,3,TXCOLI(DEV))
200	CONTINUE
	GOTO 999
C
10	GKSERR = 85			! colour index .LT. 0
999	RETURN
	END
C
	SUBROUTINE	GSCHXP(CHXP)
C
**	MODULE	GSCHXP
**	IDENT	26AP84
C
C Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C Created				Clarke Brunt	26-April-1984
C
C SET CHARACTER EXPANSION FACTOR
C (Don't bother with aspect source flags for now)
C
	IMPLICIT NONE
C
C Arguments:
	REAL	CHXP		! character expansion factor
C
***	COMMON/GKSDAT2/
***	COMMON/GKSESL/
C
	GKSERR = 0
	IF (CHXP.LE.0.0) GOTO 10
C
C ignore for now (would use UIS$SET_CHAR_SIZE somehow)
	GOTO 999
C
10	GKSERR = 72			! expansion factor .le.0
999	RETURN
	END
C
	SUBROUTINE	GSCHSP(CHSP)
C
**	MODULE	GSCHSP
**	IDENT	26AP84
C
C Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C Created				Clarke Brunt	26-April-1984
C
C SET CHARACTER SPACING
C (Don't bother with aspect source flags for now)
C
	IMPLICIT NONE
C
C Arguments:
	REAL	CHSP		! character expansion factor
C
***	COMMON/GKSDAT2/
***	COMMON/GKSESL/
C
C workspace
	INTEGER	DEV
C
	GKSERR = 0
C
C for each workstation
	DO 200 DEV = 1,WSMAX
	IF (WKIDS(DEV).LT.0) GOTO 200	! not open
	CALL UIS$SET_CHAR_SPACING(DCB(DEV),3,3,CHSP,0.0)
200	CONTINUE
	RETURN
	END
C
	SUBROUTINE	GSCHH(HGT)
C
**	MODULE	GSCHH
**	IDENT	26AP84
C
C Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C Created				Clarke Brunt	26-April-1984
C
C SET CHARACTER HEIGHT
C
	IMPLICIT NONE
C
C Arguments:
	REAL	HGT			! height (w.c.)
C
***	COMMON/GKSDAT2/
***	COMMON/GKSESL/
C
C workspace
	INTEGER	DEV
	REAL	HX,HY
C
	GKSERR = 0
	IF (HGT.LE.0) GOTO 10
C
C for each workstation
	DO 200 DEV = 1,WSMAX
	IF (WKIDS(DEV).LT.0) GOTO 200	! not open
	CALL GW2D(WKIDS(DEV),HGT,HGT,HX,HY)
C
C Seem to need *2 on GPX. Characters are smaller than the size set.
	CALL UIS$SET_CHAR_SIZE(DCB(DEV),3,3,,,HY*2.0)
200	CONTINUE
	GOTO 999
C
10	GKSERR = 73			! character height .le.0
999	RETURN
	END
C
	SUBROUTINE	GSCHUP(CUX,CUY)
C
**	MODULE	GSCHUP
**	IDENT	26AP84
C
C Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C Created				Clarke Brunt	26-April-1984
C
C SET CHARACTER UP VECTOR
C
	IMPLICIT NONE
C
C Arguments:
	REAL	CUX,CUY			! vector (w.c.)
C
***	COMMON/GKSDAT2/
***	COMMON/GKSESL/
C
	INTEGER	DEV
	REAL	HX,HY,ANGLE
C
	GKSERR = 0
C
C for each workstation
	DO 200 DEV = 1,WSMAX
	IF (WKIDS(DEV).LT.0) GOTO 200	! not open
	CALL GW2D(WKIDS(DEV),CUX,CUY,HX,HY)
	IF (HX.EQ.0.0.AND.HY.EQ.0.0) GOTO 10
	ANGLE = ATAN2(-HX,HY)
	CALL UIS$SET_TEXT_SLOPE(DCB(DEV),3,3,ANGLE)
200	CONTINUE
	GOTO 999
C
10	GKSERR = 74			! vector length is 0.0
999	RETURN
	END
C
	SUBROUTINE	GSTXFP(FNT,PREC)
C
**	MODULE	GSTXFP
**	IDENT	26AP84
C
C Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C Created				Clarke Brunt	26-April-1984
C
C SET TEXT FONT & PRECISION
C
	IMPLICIT NONE
C
***	COMMON/GKSESL/
C
C Arguments:
	INTEGER	FNT,PREC
C
	GKSERR = 0
C
C ignore for now
	RETURN
	END
