	SUBROUTINE OS4PT
C
***	IDENT	23JL87
***	MODULE	OS4PT
C
C Bill's corner point transformation stuff (uses 4 points)
C for old OS set-up procedure.
C
C Copyright LaserScan Laboratories Ltd., Cambridge, England
C
C Created from OSNEW4PT					WJJ	22-Dec-1987
C
C
C we are passed...
	REAL	CPTS(4,4)	! CPSET entry - corner points
	REAL X,Y		! CPUSE entry - coords to transform
C
C and share with CPSET...
C
	REAL*8	CPCOEF(10)
	REAL*8	M,N,P,Q,R,S,XOI,YOI,XOO,YOO
	EQUIVALENCE (CPCOEF(1),M)
	EQUIVALENCE (CPCOEF(2),N)
	EQUIVALENCE (CPCOEF(3),P)
	EQUIVALENCE (CPCOEF(4),Q)
	EQUIVALENCE (CPCOEF(5),R)
	EQUIVALENCE (CPCOEF(6),S)
	EQUIVALENCE (CPCOEF(7),XOI)
	EQUIVALENCE (CPCOEF(8),YOI)
	EQUIVALENCE (CPCOEF(9),XOO)
	EQUIVALENCE (CPCOEF(10),YOO)
	COMMON/CPCOM/CPCOEF	! to hold the transform coeffs
C w/s
	REAL U(4),V(4)
	REAL D,A,B
	REAL XX			! saved X
	INTEGER I,J
C
C **************************************************************
C
	ENTRY CPSET(CPTS)
C
C transfer the corner point information from CPTS into CPCOEF
	DO 45 I = 1,4
	  U(I) = CPTS(1,I) - CPTS(1,2)
	  V(I) = CPTS(2,I) - CPTS(2,2)
	  CPCOEF(7+I) = CPTS(I,2)
45	CONTINUE
	D = U(3)*V(1) - U(1)*V(3)
	M = CPTS(3,3)*V(1)/D
	N =-CPTS(3,3)*U(1)/D
	P =-V(3)*CPTS(4,1)/D
	Q = U(3)*CPTS(4,1)/D
	A = M*U(4) + N*V(4)
	B = P*U(4) + Q*V(4)
	R = (CPTS(3,4)-A)/(A*B)
	S = (CPTS(4,4)-B)/(A*B)
C
	RETURN
C
C ******************************************************************
C
	ENTRY CPUSE(X,Y)
C
C X,Y contain the coord to be transformed
C CPCOEF contains the transform matrix set up by CPSET
C
	XX = X
	YY = Y
	X = (M*(XX-XOI) + N*(YY-YOI))*(1.0+R*(P*(XX-XOI)+Q*(YY-YOI))) + XOO
	Y = (P*(XX-XOI) + Q*(YY-YOI))*(1.0+S*(M*(XX-XOI)+N*(YY-YOI))) + YOO
C
C
	RETURN
C
	END
