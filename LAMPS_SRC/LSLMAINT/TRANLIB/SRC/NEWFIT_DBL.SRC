	LOGICAL*4 FUNCTION NEWFIT_DBL(NPTS,SHOULD,SAID,COEFF,
     &				  A,B,V,NORDER,NGAP)
C
***	MODULE	NEWFIT_DBL
***	IDENT	05MY95
C
CMOD	Copy of NEWFIT to return coeffs in double precision.	JMC  14-Feb-1994
CMOD	And also take SHOULD and SAID as double precision	PGH  25-Feb-1994
C
C Takes NPTS points in SHOULD and SAID and returns transform
C coefficients of order NORDER in COEFF using every NGAPth point.
C (Gets SHOULD as a function of SAID).
C
	IMPLICIT NONE
C
	REAL*8	CRIT			! criterion for rejection of fit
	COMMON /FITCOM/ CRIT
C
	INTEGER I,NGAP,NORDER,NPTS,NTERMS,J,K
	REAL*8	SHOULD(2,NPTS),SAID(2,NPTS)
	REAL*8	TMP(2,200)
	REAL*8	COEFF(((NORDER+1)*(NORDER+2))/2,2)
	REAL*8	A(((NORDER+1)*(NORDER+2))/2,((NORDER+1)*(NORDER+2))/2)
	REAL*8	B(((NORDER+1)*(NORDER+2))/2,2)
	REAL*8	V(((NORDER+1)*(NORDER+2))/2)
	REAL*8	XD,YD,XD1,YD1,SHOULD_DIFFX,SHOULD_DIFFY
C
C ......................................................................
C
	NTERMS=((NORDER+1)*(NORDER+2))/2
C
C ... clear arrays.
	DO 20 I=1,NTERMS
	   B(I,1)=0.0D0
	   B(I,2)=0.0D0
	   DO 10 J=1,NTERMS
	      A(I,J)=0.0D0
10	   CONTINUE
20	CONTINUE
C
C ... form sums.
	DO 50 I=1,NPTS
	   IF (MOD(I,NGAP).NE.0) GO TO 50
	   XD=SAID(1,I)				! measured values
	   YD=SAID(2,I)
	   XD1=SHOULD(1,I)			! true values
	   YD1=SHOULD(2,I)
CCC	   IF (XD.GT.1.0D29.OR.XD1.GT.1.0D29) GO TO 60
	   CALL POLGEN(V,XD,YD,NORDER)		! get 1,X,Y,XX,XY,YY etc
	   DO 40 J=1,NTERMS
	      B(J,1)=B(J,1) + V(J)*XD1		! r.h.s. of equation
	      B(J,2)=B(J,2) + V(J)*YD1
	      DO 30 K=1,NTERMS
		 A(J,K)=A(J,K) + V(J)*V(K)	! l.h.s. of equation
30	      CONTINUE
40	   CONTINUE
50	CONTINUE
C
C ... solve matrix equation AC=B (returning coefficients C in B).
C ... note that if the points are *really* duff this will fall over !!
	CALL SOLVE(A,B,NTERMS,2,0,NTERMS,NTERMS)
C
C ... return results.
	DO 60 I=1,NTERMS
	   COEFF(I,1)=B(I,1)
	   COEFF(I,2)=B(I,2)
60	CONTINUE
C
C	IF (HAD_DEBUG) THEN
	   DO 41 I=1,NPTS
	      CALL TRSFRM(COEFF,SAID(1,I),SAID(2,I),TMP(1,I),TMP(2,I),NORDER)
	      SHOULD_DIFFX = TMP(1,I) - SHOULD(1,I)
	      SHOULD_DIFFY = TMP(2,I) - SHOULD(2,I)
              IF ((ABS(SHOULD_DIFFX).GT.1.0).OR.
     &			(ABS(SHOULD_DIFFY).GT.1.0)) THEN
C                 CALL WRITEF('SAIDX:   %F10.4 SAIDY:   %F10.4',
C     &                        SAID(1,I),SAID(2,I))
C              	 CALL WRITEF('OUTX: %F10.4 OUTY: %F10.4',
C     &				TMP(1,I),TMP(2,I))
C                 CALL WRITEF('SHOULDX: %F10.4 SHOULDY: %F10.4',
C     &				SHOULD(1,I),SHOULD(2,I))
     	         CALL WRITEF()
     	         CALL WRITEF('X DIFF = %F10.4 Y DIFF = %F10.4',
     &			SHOULD_DIFFX,SHOULD_DIFFY)
	      ENDIF

41	   CONTINUE
C	ENDIF
C
C ... analyse the eigenvalues of A (now triangular).
C ... examine the first and last eigenvalues; if the fit is good these
C ... will have similar magnitudes (one day I may get round to proving
C ... this, until then take my word for it !!)
	NEWFIT_DBL=DABS(A(1,1)/A(NTERMS,NTERMS)).GT.CRIT
C
	RETURN
	END
