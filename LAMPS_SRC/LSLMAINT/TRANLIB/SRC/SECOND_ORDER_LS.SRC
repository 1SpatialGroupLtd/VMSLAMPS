C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1990-09-04 11:31:06.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL*4 FUNCTION SECOND_ORDER_LS(NPTS,PTS,COEFFS,RESID,XMAX,YMAX,
     &				  XRMS,YRMS)
C
***	MODULE	SECOND_ORDER_LS
***	IDENT	04SE90
C
C Copyright Laser-Scan Laboratories Limited, Cambridge, England.
C
C Author: R.W. Russell 
C
C	Created 				 RWR	21-Aug-1990
C
C Performs a second order transformation.
C This routine performs a least squares fit of the specified points
C to functions of the form:
C
C		X=a0 + a1*x + a2*y + a3*x*y + a5*x*x + a6*y*y
C		Y=b0 + b1*x + b2*y + b3*x*y + b5*x*x + b6*y*y
C
C SECOND_ORDER_LS takes an array of NPTS sets of coordinates, with each set
C arranged in the order:
C
C		 Xmeasured Ymeasured Xtarget Ytarget
C
C A set of coefficients (COEFFS) is calculated which will transform the
C 'measured' coordinate system into the 'target' one. X and Y residuals
C are returned in the user array RESID, and the maximum and RMS errors
C are also calculated.
C
C If SECOND_ORDER_LS is .TRUE. then we may have tried to do the impossible. For
C example the point distribution may be inappropriate (e.g. all points
C nearly collinear) or the 'measured' and 'target' spaces simply may not
C be related by an this transformation. In any case the transformation
C coefficients are suspect.
C
	IMPLICIT NONE
C
	INTEGER	  UNKNOWN		! number of unknowns
	PARAMETER (UNKNOWN = 6)
C
	INTEGER*4 NPTS			! number of points
	REAL	  PTS(4,NPTS)		! measured & target coordinates
	REAL*8	  COEFFS(UNKNOWN,2)	! returned transform coeffs
	REAL	  RESID(2,NPTS)		! X,Y residuals (target space)
	REAL	  XMAX,YMAX		! max residuals    "      "
	REAL	  XRMS,YRMS		! RMS residuals    "      "
C
	INTEGER	  I,J
	REAL	  DX,DY			! temporary X,Y residuals
	REAL*8	  A(UNKNOWN,UNKNOWN)	! temporary matrix for SOLVE
	REAL*8	  CRIT			! criterion for rejection of fit
C
	REAL*8	  X
	REAL*8	  Y
	REAL*8	  XP
	REAL*8	  YP
	REAL*8	  XX
	REAL*8	  XY
	REAL*8	  YY
C
C ......................................................................
C ... set up NORMAL equations directly
	A(2,1) = 0.0		! [x]
	A(3,1) = 0.0		! [y]
	A(4,1) = 0.0		! [xy]
	A(5,1) = 0.0		! [x*x]
	A(6,1) = 0.0		! [y*y]
	A(4,2) = 0.0		! [x*x*y]
	A(5,2) = 0.0		! [x*x*x]
	A(6,2) = 0.0		! [x*y*y]
	A(6,3) = 0.0		! [y*y*y]
	A(4,4) = 0.0		! [x*x*y*y]
	A(5,4) = 0.0		! [x*x*x*y]
	A(6,4) = 0.0		! [x*y*y*y]
	A(5,5) = 0.0		! [x*x*x*x]
	A(6,5) = 0.0		! [x*x*y*y]
	A(6,6) = 0.0		! [y*y*y*y]
	COEFFS(1,1) = 0.0	! [X]
	COEFFS(2,1) = 0.0	! [x*X]
	COEFFS(3,1) = 0.0	! [y*X]
	COEFFS(4,1) = 0.0	! [x*y*X]
	COEFFS(5,1) = 0.0	! [x*x*X]
	COEFFS(6,1) = 0.0	! [y*y*X]
	COEFFS(1,2) = 0.0	! [Y]
	COEFFS(2,2) = 0.0	! [x*Y]
	COEFFS(3,2) = 0.0	! [y*Y]
	COEFFS(4,2) = 0.0	! [x*y*Y]
	COEFFS(5,2) = 0.0	! [x*x*Y]
	COEFFS(6,2) = 0.0	! [y*y*Y]
C
	DO 10, I = 1,NPTS
	   X  = PTS(1,I)
	   Y  = PTS(2,I)
	   XP = PTS(3,I)
	   YP = PTS(4,I)
	   XX = X*X
	   YY = Y*Y
	   XY = X*Y
C
	   A(2,1) = A(2,1) + X		! [x]
	   A(3,1) = A(3,1) + Y		! [y]
	   A(4,1) = A(4,1) + XY		! [xy]
	   A(5,1) = A(5,1) + XX		! [x*x]
	   A(6,1) = A(6,1) + YY		! [y*y]
	   A(4,2) = A(4,2) + XX*Y	! [x*x*y]
	   A(5,2) = A(5,2) + XX*X	! [x*x*x]
	   A(6,2) = A(6,2) + X*YY	! [x*y*y]
	   A(6,3) = A(6,3) + YY*Y	! [y*y*y]
	   A(4,4) = A(4,4) + XX*YY	! [x*x*y*y]
	   A(5,4) = A(5,4) + XX*XY	! [x*x*x*y]
	   A(6,4) = A(6,4) + XY*YY	! [x*y*y*y]
	   A(5,5) = A(5,5) + XX*XX	! [x*x*x*x]
	   A(6,5) = A(6,5) + XX*YY	! [x*x*y*y]
	   A(6,6) = A(6,6) + YY*YY	! [y*y*y*y]
	   COEFFS(1,1) = COEFFS(1,1) + XP	! [X]
	   COEFFS(2,1) = COEFFS(2,1) + X*XP	! [x*X]
	   COEFFS(3,1) = COEFFS(3,1) + Y*XP	! [y*X]
	   COEFFS(4,1) = COEFFS(4,1) + XY*XP	! [x*y*X]
	   COEFFS(5,1) = COEFFS(5,1) + XX*XP	! [x*x*X]
	   COEFFS(6,1) = COEFFS(6,1) + YY*XP	! [y*y*X]
	   COEFFS(1,2) = COEFFS(1,2) + YP	! [Y]
	   COEFFS(2,2) = COEFFS(2,2) + X*YP	! [x*Y]
	   COEFFS(3,2) = COEFFS(3,2) + Y*YP	! [y*Y]
	   COEFFS(4,2) = COEFFS(4,2) + XY*YP	! [x*y*Y]
	   COEFFS(5,2) = COEFFS(5,2) + XX*YP	! [x*x*Y]
	   COEFFS(6,2) = COEFFS(6,2) + YY*YP	! [y*y*Y]
10	CONTINUE
C
C ... fill relevant values in A
	A(1,1) = NPTS
	A(2,2) = A(5,1)
	A(3,2) = A(4,1)
	A(3,3) = A(6,1)
	A(4,3) = A(6,2)
	A(5,3) = A(4,2)
C
C ... that was UR triangle of A, now fill in BL triangle
	DO 20, J = 2,UNKNOWN
	   DO 20, I = 1,J-1
	      A(I,J) = A(J,I)
	   CONTINUE
20	CONTINUE
C
C ... now call SOLVE to give us the transform array C in COEFFS.
	CALL SOLVE(A,COEFFS,UNKNOWN,2,0,UNKNOWN,UNKNOWN)
C
C ... analyse the eigenvalues of A (now triangular).
C ... examine the first and last eigenvalues; if the fit is good these
C ... will have 'similar' magnitudes (one day I may get round to proving
C ... this, until then take my word for it !!)
C ... return .TRUE. if we don't believe the fit is any good.
C ... N.B. we are more tolerant than in FIT, since we must allow fairly
C ... weird points to be used if required.
	CRIT=1.0D6			! rather arbitrary, this !
	SECOND_ORDER_LS=DABS(A(1,1)/A(UNKNOWN,UNKNOWN)).GT.CRIT
C
C ... now test the goodness of fit by applying the transform to the
C ... measured values.
	XRMS=0.0
	YRMS=0.0
	XMAX=0.0
	YMAX=0.0
	DO 40 I=1,NPTS
	   DX=ABS(
     &	      COEFFS(1,1) + COEFFS(2,1)*PTS(1,I) + COEFFS(3,1)*PTS(2,I) +
     &	      COEFFS(4,1)*PTS(1,I)*PTS(2,I) + COEFFS(5,1)*PTS(1,I)**2 +
     &	      COEFFS(6,1)*PTS(2,I)**2 - PTS(3,I))
	   DY=ABS(
     &	      COEFFS(1,2) + COEFFS(2,2)*PTS(1,I) + COEFFS(3,2)*PTS(2,I) +
     &	      COEFFS(4,2)*PTS(1,I)*PTS(2,I) + COEFFS(5,2)*PTS(1,I)**2 +
     &	      COEFFS(6,2)*PTS(2,I)**2 - PTS(4,I))
	   RESID(1,I)=DX			! return all residuals
	   RESID(2,I)=DY
	   XRMS=XRMS + DX*DX			! and RMS and MAX errors
	   YRMS=YRMS + DY*DY
	   IF (DX.GT.XMAX) XMAX=DX
	   IF (DY.GT.YMAX) YMAX=DY
40	CONTINUE
	XRMS=SQRT(XRMS/FLOAT(NPTS))
	YRMS=SQRT(YRMS/FLOAT(NPTS))
	RETURN
	END
