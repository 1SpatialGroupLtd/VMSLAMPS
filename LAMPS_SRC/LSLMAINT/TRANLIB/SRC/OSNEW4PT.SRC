	SUBROUTINE OS4PT
C
***	IDENT	23JL87
***	MODULE	OS4PT
C
C Bill's corner point transformation stuff (uses 4 points)
C for new OS set-up procedure.
C
C Copyright LaserScan Laboratories Ltd., Cambridge, England
C
C Created from WJJ4PT					WJJ	23-Jul-1987
C
C The transform is X' = (A.X+B.Y+C)/(G.X+H.Y+1)
C 	...        Y' = (D.X+E.Y+F)/(G.X+H.Y+1)
C
C .. which is rearranged to
C		X' = A.X + B.Y + C                - G.X.X' - H.Y.X'
C		Y' =                D.X + E.Y + F - G.X.Y' - H.Y.Y'
C
C we are passed...
	REAL	CPTS(4,4)	! CPSET entry - corner points
	REAL X,Y		! CPUSE entry - coords to transform
C
C and share with CPSET...
C
	REAL*8	CPCOEF(8)
	COMMON/CPCOM/CPCOEF	! to hold the transform coeffs
C w/s
	REAL*8 A(8,8)		! temporary matrix for SOLVE
	REAL D
	REAL XX			! saved X
	INTEGER I,J
C
C **************************************************************
C
	ENTRY CPSET(CPTS)
C
C transfer the corner point information from CPTS into CPCOEF
	DO 45 I = 1,4
	    J = I*2-1
		CPCOEF(J) = CPTS(3,I)		! output
		CPCOEF(J+1) = CPTS(4,I)		! coordinates
		A(J,1) = CPTS(1,I)		! input
		A(J,2) = CPTS(2,I)		! coordinates
		A(J,3) = 1.0
		A(J,4) = 0.0
		A(J,5) = 0.0
		A(J,6) = 0.0
		A(J,7) = -CPTS(1,I)*CPTS(3,I)
		A(J,8) = -CPTS(2,I)*CPTS(3,I)
	    J = J+1
		A(J,1) = 0.0
		A(J,2) = 0.0
		A(J,3) = 0.0
		A(J,4) = CPTS(1,I)		! input
		A(J,5) = CPTS(2,I)		! coordinates
		A(J,6) = 1.0
		A(J,7) = -CPTS(1,I)*CPTS(4,I)
		A(J,8) = -CPTS(2,I)*CPTS(4,I)
45	CONTINUE
C
C and now call solve to give us a transform array in CPCOEF
C
	CALL SOLVE( A, CPCOEF, 8, 1, 0, 8, 8 )
C
	RETURN
C
C ******************************************************************
C
	ENTRY CPUSE(X,Y)
C
C X,Y contain the coord to be transformed
C CPCOEF contains the transform matrix set up by CPSET
C
	D = CPCOEF(7)*X + CPCOEF(8)*Y + 1.0
	XX = (CPCOEF(1)*X + CPCOEF(2)*Y + CPCOEF(3))/D
C
	Y =  (CPCOEF(4)*X + CPCOEF(5)*Y + CPCOEF(6))/D
	X=XX
C
	RETURN
C
	END
