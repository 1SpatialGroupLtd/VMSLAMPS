C Copyright Laser-Scan Laboratories Limited, Cambridge, England.
C
C Authors: Many and various
C
C	Tidied and rationalised			 DM	31-May-1983
C	Created from SOLVE and MA01A			   Oct-1980
C
C Routines for setting up and using the standard LSL bicubic transform.
C
	SUBROUTINE TRSFRM(COEFF,XIN,YIN,XOUT,YOUT,NORDER)
C
***	MODULE	TRSFRM
***	IDENT	31MY83
C
C Applies transform of order NORDER in COEFF to IN to produce OUT.
C
	PARAMETER MAXORDER=5		! Allow up to quintic
	PARAMETER MAXCOEFFS=(((MAXORDER+1)*(MAXORDER+2))/2)
C
	INTEGER I,NORDER,NTERMS
	REAL*8	COEFF(((NORDER+1)*(NORDER+2))/2,2),XIN,YIN,XOUT,YOUT
	REAL*8	V(MAXCOEFFS),XD,YD
C
	NTERMS=((NORDER+1)*(NORDER+2))/2
	XD=XIN
	YD=YIN
	CALL POLGEN(V,XD,YD,NORDER)		! get 1,X,Y,XX,XY,YY etc
	XD=0.0D0
	YD=0.0D0
	DO 10 I=1,NTERMS
	   XD=XD + COEFF(I,1)*V(I)
	   YD=YD + COEFF(I,2)*V(I)
10	CONTINUE
	XOUT=XD
	YOUT=YD
	RETURN
	END
C
	LOGICAL*4 FUNCTION FIT(NPTS,SHOULD,SAID,COEFF,NORDER,NGAP)
C
***	MODULE	FIT
***	IDENT	20JN83
C
CMOD	CRIT put in common block		 DM	20-Jun-1983
CMOD	Now a function - .TRUE. if fit is duff	 DM	01-Jun-1983
C
C Takes NPTS points in SHOULD and SAID and returns transform
C coefficients of order NORDER in COEFF using every NGAPth point.
C (Gets SHOULD as a function of SAID).
C
	REAL*8	CRIT			! criterion for rejection of fit
	COMMON /FITCOM/ CRIT
C
	INTEGER I,NGAP,NORDER,NPTS,NTERMS
	REAL	SHOULD(2,NPTS),SAID(2,NPTS),COEFF(10,2)
	REAL*8	A(10,10),B(10,2),V(10)
	REAL*8	XD,YD,XD1,YD1
C
	NTERMS=((NORDER+1)*(NORDER+2))/2
C
C ... clear arrays.
	DO 20 I=1,NTERMS
	   B(I,1)=0.0D0
	   B(I,2)=0.0D0
	   DO 10 J=1,NTERMS
	      A(I,J)=0.0D0
10	   CONTINUE
20	CONTINUE
C
C ... form sums.
	DO 50 I=1,NPTS
	   IF (MOD(I,NGAP).NE.0) GO TO 50
	   XD=SAID(1,I)				! measured values
	   YD=SAID(2,I)
	   XD1=SHOULD(1,I)			! true values
	   YD1=SHOULD(2,I)
CCC	   IF (XD.GT.1.0D29.OR.XD1.GT.1.0D29) GO TO 60
	   CALL POLGEN(V,XD,YD,NORDER)		! get 1,X,Y,XX,XY,YY etc
	   DO 40 J=1,NTERMS
	      B(J,1)=B(J,1) + V(J)*XD1		! r.h.s. of equation
	      B(J,2)=B(J,2) + V(J)*YD1
	      DO 30 K=1,NTERMS
		 A(J,K)=A(J,K) + V(J)*V(K)	! l.h.s. of equation
30	      CONTINUE
40	   CONTINUE
50	CONTINUE
C
C ... solve matrix equation AC=B (returning coefficients C in B).
C ... note that if the points are *really* duff this will fall over !!
	CALL SOLVE(A,B,NTERMS,2,0,NTERMS,NTERMS)
C
C ... return results.
	DO 60 I=1,NTERMS
	   COEFF(I,1)=B(I,1)
	   COEFF(I,2)=B(I,2)
60	CONTINUE
C
C ... analyse the eigenvalues of A (now triangular).
C ... examine the first and last eigenvalues; if the fit is good these
C ... will have similar magnitudes (one day I may get round to proving
C ... this, until then take my word for it !!)
	FIT=DABS(A(1,1)/A(NTERMS,NTERMS)).GT.CRIT
C
	RETURN
	END
C
	BLOCK DATA FITBLK
C
***	MODULE	FITBLK
***	IDENT	20JN83
C
C Copyright Laser-Scan Laboratories Limited, Cambridge, England.
C
C Author: D. Meader
C
C	Created 				 DM	20-Jun-1983
C
C Default criterion for rejection of fit.
C
	REAL*8	CRIT
	COMMON /FITCOM/ CRIT
	DATA CRIT /1.0D3/		! rather arbitrary, this !
C
	END
C
	SUBROUTINE POLGEN(V,X,Y,NF)
C
***	MODULE	POLGEN
***	IDENT	31MY83
C
C Generates 1 X Y XX XY YY XXX XXY XYY YYY .... in V (up to order NF).
C
	INTEGER	I,J,K,NF,N1,N2
	REAL*8  V((NF+1)*(NF+2)/2),X,Y
C
	V(1)=1.0D0
	K=1
	DO 20 I=1,NF
	   N1=K + 1
	   N2=K + I
	   DO 10 J=N1,N2
	      V(J)=V(J-I)*X
10	   CONTINUE
	   V(K+I+1)=V(K)*Y
	   K=K + I + 1
20	CONTINUE
	RETURN
	END
C
	SUBROUTINE SOLVE(A,B,M,N,M1,IA,IB)
	ENTRY MA01A(A,B,M,N,M1,IA,IB)
C
***	MODULE	SOLVE
***	IDENT	31MY83
C
C Solves simultaneous equations of the form AC=B, using pivotal 
C condensation. The coefficient matrix C(IB,N) is returned in B.
C If N is <= 0, the coefficients are not returned (B is not altered),
C but matrix A still undergoes a triangular decomposition.
C M is the number of terms in each simultaneous equation; M1 is ignored.
C
	IMPLICIT DOUBLE PRECISION (A-H),(O-Z)
	DIMENSION A(IA,1),B(IB,1)
C
	MM=M - 1
	AMAX=0.0D0
	DO 10 I=1,M				! get first pivot
	   IF (DABS(A(I,1)).LE.AMAX) GO TO 10
	   AMAX=DABS(A(I,1))
	   I4=I
10	CONTINUE
C
C ... do pivotal condensation with row interchange.
	DO 80 J=1,MM				! loop through rows
	   IF (I4.LE.J) GO TO 40
	   DO 20 K=1,M
	      STO=A(I4,K)
	      A(I4,K)=A(J,K)
	      A(J,K)=STO
20	   CONTINUE
	   IF (N.LE.0) GO TO 40			! do we want B set up ?
	   DO 30 K=1,N
	      STO=B(I4,K)
	      B(I4,K)=B(J,K)
	      B(J,K)=STO
30	   CONTINUE
C
40	   AMAX=0.0D0
	   J1=J + 1
	   DO 70 I=J1,M
	      A(I,J)=A(I,J)/A(J,J)
	      DO 50 K=J1,M
		 A(I,K)=A(I,K) - A(I,J)*A(J,K)
		 IF (K.GT.J1) GO TO 50
		 IF (DABS(A(I,K)).LE.AMAX) GO TO 50
		 AMAX=DABS(A(I,K))
		 I4=I
50	      CONTINUE
	      IF (N.LE.0) GO TO 70		! do we want coeffs ?
	      DO 60 K=1,N
		 B(I,K)=B(I,K) - A(I,J)*B(J,K)
60	      CONTINUE
70	   CONTINUE
80	CONTINUE
C
	IF (N.LE.0) GO TO 130			! do we want coeffs ?
	DO 120 I1=1,M
	   I=M + 1 - I1
	   DO 110 J=1,N
	      IF (M.LE.I) GO TO 100
	      I2=I + 1
	      DO 90 K=I2,M
		 B(I,J)=B(I,J) - A(I,K)*B(K,J)
90	      CONTINUE
100	      B(I,J)=B(I,J)/A(I,I)
110	   CONTINUE
120	CONTINUE
C
130	RETURN
	END
