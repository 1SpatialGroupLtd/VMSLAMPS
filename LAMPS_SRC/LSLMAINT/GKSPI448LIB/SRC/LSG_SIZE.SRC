C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1990-03-14 17:39:12.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL FUNCTION LSG_SIZE(FILE)
C
***	IDENT	14MR90
***	MODULE	LSG_SIZE
C
C	Copyright LaserScan Laboratories Ltd., Cambridge, England
C
C Author Clarke Brunt					17-Mar-1986
C
C To read a file containing size and number of pixels for a
C raster plotter.
C
C File contains one significant line containing:
C X-size (metres) Y-size (metres) X-pixels Y-pixels
C
C Comment lines are preceded by a semi-colon, and may be interspersed
C at will.
C
	IMPLICIT NONE
C
	INCLUDE 'LSL$CMNLSL:LSLLIBMSG.PAR'
	INCLUDE 'HERE:GKSDAT1.CMN'
C
C arguments
	CHARACTER*(*)	FILE		! the filename
C
C functions used
	LOGICAL		FLROPN
	LOGICAL		FLRCLO
	INTEGER*4	FLRLIN
	LOGICAL		RDCHS
	LOGICAL		RDREAL
	LOGICAL*4	LIB$GET_LUN
	LOGICAL*4	LIB$FREE_LUN
C
	LOGICAL*4	OK
	INTEGER*4	ERROR
	INTEGER		I			! count variable
	INTEGER*4	LUN
	BYTE		CH
C
	REAL	DEFMAXX,DEFMAXY,DEFPIXX,DEFPIXY
	PARAMETER	(DEFMAXX=1.1704,DEFMAXY=0.8636)
	PARAMETER	(DEFPIXX=1152.0,DEFPIXY=850.0)
C
C set up the defaults
	DCMAXX = DEFMAXX	! x size
	DCMAXY = DEFMAXY
	RASTX =	DEFPIXX		! x number of pixels
	RASTY = DEFPIXY
C
C get a LUN to read the file on
	OK = LIB$GET_LUN(LUN)
	IF (.NOT.OK) THEN		! failed
	   CALL LSL_PUTMSG(OK)
	   GOTO 10000
	ENDIF
C
C open up the file (just give up on error)
	OK = FLROPN(LUN,FILE)	! open file
	IF (.NOT.OK) GOTO 999
C
50	OK =  FLRLIN(,,,ERROR) 	! read into TXTBUF
	IF (.NOT.OK) THEN
	   IF (OK.EQ.LSL__EOF) GOTO 998		! end of file
	   CALL LSL_PUTMSG(OK)
	   CALL LSL_ADDMSG(ERROR)
	   GOTO 999
	ENDIF
C
C we have a line - what is it ?
	CALL BSLN				! start of line
	IF (RDCHS(CH)) GOTO 50			! empty line
	IF (CH.EQ.';') GOTO 50			! comment line
	CALL BSCH
C
C read x and y size (metres)
	IF (RDREAL(DCMAXX)) GOTO 998
	IF (RDREAL(DCMAXY)) GOTO 998
C
C and now number of pixels
	IF (RDREAL(RASTX)) GOTO 998
	IF (RDREAL(RASTY)) GOTO 998
C
998	OK = FLRCLO(LUN,ERROR)
	IF (.NOT.OK) THEN
	   CALL LSL_PUTMSG(OK)
	   CALL LSL_ADDMSG(ERROR)
	ENDIF
C
999	OK = LIB$FREE_LUN(LUN)	! free LUN
	IF (.NOT.OK) CALL LSL_PUTMSG(OK)
C
10000	RETURN
C
	END
