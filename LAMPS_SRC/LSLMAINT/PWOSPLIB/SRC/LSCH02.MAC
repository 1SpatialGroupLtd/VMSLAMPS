	.TITLE	LSCH
	.IDENT	/22MR85/
	.ENABL LC
 
; Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
;
; Author: Clarke Brunt from originals by Susan Manning
 
 
; LCD character control routines

CHEXT:	.FLT2	32767.0		; maximum character size
 
; CHSIZE(CH,CX,CY) set character height CH, and spacing CX,CY (in user units)
 
CHSIZE:: JSR	PC, FTNFPU
	LDF	@(R5)+, F0	; get character height
	LDF	@(R5)+, F1	; get character spacing vector
	LDF	@(R5)+, F3

$CHSIZ:: MULF	TKTR, F0	; transform CH to tek counts
	CFCC
	BPL	5$
	NEGF	F0		; height must be positive
5$:	CMPF	CHEXT, F0
	CFCC
	BGE	10$
	LDF	CHEXT, F0	; force within limit if necessary
10$:	STCFI	F0, CHCH	; store
	JSR	PC, TKTRMT	; transform CX, CY into F0, F2
	CLR	R0
	TSTF	F0
	CFCC
	BPL	15$
	NEGF	F0		; make +ve so only one comparison
	INC	R0		; remember
15$:	CMPF	CHEXT,F0
	CFCC
	BGE	20$
	LDF	CHEXT,F0	; force in range
20$:	TST	R0
	BEQ	25$
	NEGF	F0		; restore sign
25$:	STCFI	F0,CHCX		; store
	TSTF	F2
	CFCC
	BPL	30$
	NEGF	F2		; make +ve so only one comparison
	INC	R0		; remember
30$:	CMPF	CHEXT,F2
	CFCC
	BGE	35$
	LDF	CHEXT,F2	; force in range
35$:	TST	R0
	BEQ	40$
	NEGF	F2		; restore sign
40$:	STCFI	F2,CHCY		; store
;
	JSR	R5, $CHKBF	; check sequence contiguous
	.WORD	9.
	JSR	R5, $TKW2C	; output <esc=N> sequence
	.BYTE	AS.ESC, '=
	MOV	#'N, R0
	JSR	PC, $TKWCH
;
; transmit each of 3 words (CH,CX,CY) as 2*6-bit biased numbers
	MOV	#CHCH,R5	; start of words
	MOV	#3,R4		; no of words
50$:	MOV	(R5)+, R3	; get next word
	ASHC	#6, R2		; top 6 bits to bottom of R2
	BIC	#177700, R2	; mask to bottom 6
	MOV	R2, R1		; ready for TKWBN
	JSR	PC, $TKWBN
	ASHC	#6, R2		; next 6 bits to bottom of R2
	BIC	#177700, R2
	MOV	R2, R1
	JSR	PC, $TKWBN
	SOB	R4, 50$

	MOV	#-1,TKCCHS	; mark not concerned about char size
				; so refresh wont reset
	RTS	PC
 
 
; CHFONT(NFONT,NITAL)	NFONT=0,1	NITAL=0,1 (normal,italicised)
;
CHFONT:: MOV	(R5)+,R0	; get argument count
	MOV	@(R5)+,R1	; get font number
	CLR	R2
	CMP	R0, #1		; only one argument, default to normal font
	BLE	$CHFNT
	MOV	@(R5)+,R2	; get italic switch
 
$CHFNT:: BIC	#177770,R1	; only fonts 0 to 7
	BIC	#177776,R2	; only italic or normal
	ASH	#3, R2		; move up 3 bits
	BIS	R2, R1		; and insert in font word
	JSR	R5, $CHKBF
	.WORD	4
	JSR	R5, $TKW2C	; send <escape = M <font>> sequence
	.BYTE	AS.ESC, '=
	MOV	#'M, R0
	JSR	PC, $TKWCH
	JSR	PC, $TKWBN

	RTS	PC
 
	.END
