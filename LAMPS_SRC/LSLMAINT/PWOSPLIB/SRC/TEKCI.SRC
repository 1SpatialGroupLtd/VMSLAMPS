C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1984-06-08 11:11:18.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	PROGRAM TEKCI
C
***	MODULE	TEKCI
***	IDENT	08JN84
C
C Command Interpreter for WOSPLIB (not using CMDLIB)
C
C
	INTEGER*2	ASTCAL(3)
	COMMON/ASTC/	ASTCAL
	INTEGER*2	N,M,L
	REAL		ARG(6)
	LOGICAL*1	COM(80),ICH,SPACED
	INTEGER*2	IOSB(2,3),ASTADR(3),LENRD(3)
	LOGICAL*1	BUFFER(80,3)
C
	EXTERNAL AST0,AST1,AST2
C
	INTEGER*2	TKIDEV,TKTRAC,TKMAPT,TKREAD,TKKILL
C
C Read command from terminal
100	TYPE 101
101	FORMAT(' TCOM> ',$)
	ACCEPT 102,COM
102	FORMAT(80A1)
C
C upper-case first two
	IF (COM(1).GE.'a' .AND. COM(1).LE.'z')
     &				COM(1) = COM(1)-'a'+'A'
	IF (COM(2).GE.'a' .AND. COM(2).LE.'z')
     &				COM(2) = COM(2)-'a'+'A'
C
C Check first character is a letter
	IF (COM(1) .LT. 'A' .OR. COM(1) .GT. 'Z') GOTO 900
C
C Put commas in to read numbers if necessary
	SPACED = .TRUE.
	DO 120 I=3,60
	  ICH = COM(I)
	  IF (ICH .NE. ' ' .AND. ICH .NE. '.'
     &      .AND. ICH .NE. '-' .AND. ICH .NE. '+'
     &      .AND. (ICH .LT. '0' .OR. ICH .GT. '9')) GOTO 900
	  IF (ICH .EQ. ' ' .AND. .NOT. SPACED) COM(I) = ','
	  SPACED = ICH .EQ. ' '
120	CONTINUE
C
C Read any numbers into ARG
	DECODE(78,150,COM(3),ERR=900) ARG
150	FORMAT(6F12.0)
C
C Check second character is a letter or a space
	IF (COM(2) .EQ. ' ') GOTO 800
	IF (COM(2) .LT. 'A' .OR. COM(2) .GT. 'Z') GOTO 900
C
C Branch on first of two letters
	IF (COM(1) .EQ. 'M') GOTO 200
	IF (COM(1) .EQ. 'L') GOTO 300
	IF (COM(1) .EQ. 'C') GOTO 400
	IF (COM(1) .EQ. 'D') GOTO 500
	IF (COM(1) .EQ. 'R') GOTO 600
	IF (COM(1) .EQ. 'B') GOTO 700
	IF (COM(1) .EQ. 'P') GOTO 750
	IF (COM(1) .EQ. 'T') GOTO 760
	IF (COM(1) .EQ. 'S') GOTO 780
	IF (COM(1) .EQ. 'W') GOTO 790
	IF (COM(1) .EQ. 'F') GOTO 792
	IF (COM(1) .EQ. 'O') GOTO 794
	GOTO 900
C
C Branch on second letter
200	IF (COM(2) .EQ. 'B') GOTO 1000
	IF (COM(2) .EQ. 'T') GOTO 1050
	IF (COM(2) .EQ. 'C') GOTO 1075
	GOTO 900
300	IF (COM(2) .EQ. 'B') GOTO 1100
	IF (COM(2) .EQ. 'T') GOTO 1150
	IF (COM(2) .EQ. 'C') GOTO 1175
	GOTO 900
400	IF (COM(2) .EQ. 'M') GOTO 1200
	IF (COM(2) .EQ. 'H') GOTO 1300
	IF (COM(2) .EQ. 'U') GOTO 2900
	IF (COM(2) .EQ. 'S') GOTO 3000
	IF (COM(2) .EQ. 'W') GOTO 3100
	IF (COM(2) .EQ. 'C') GOTO 3200
	IF (COM(2) .EQ. 'R') GOTO 3150
	IF (COM(2) .EQ. 'F') GOTO 3500
	IF (COM(2) .EQ. 'T') GOTO 3600
	IF (COM(2) .EQ. 'V') GOTO 4300
	IF (COM(2) .EQ. 'L') GOTO 4600
	GOTO 900
500	IF (COM(2) .EQ. 'A') GOTO 1400
	IF (COM(2) .EQ. 'O') GOTO 1500
	IF (COM(2) .EQ. 'R') GOTO 1550
	IF (COM(2) .EQ. 'D') GOTO 2200
	GOTO 900
600	IF (COM(2) .EQ. 'F') GOTO 2300
	IF (COM(2) .EQ. 'S') GOTO 2400
	GOTO 900
700	IF (COM(2) .EQ. 'L') GOTO 2500
	IF (COM(2) .EQ. 'E') GOTO 2600
	IF (COM(2) .EQ. 'U') GOTO 4000
	GOTO 900
750	IF (COM(2) .EQ. 'R') GOTO 3300
	IF (COM(2) .EQ. 'I') GOTO 4200
	GOTO 900
760	IF (COM(2) .EQ. 'S') GOTO 3400
	IF (COM(2) .EQ. 'R') GOTO 3800
	IF (COM(2) .EQ. 'K') GOTO 3900
	IF (COM(2) .EQ. 'W') GOTO 4800
	GOTO 900
780	IF (COM(2) .EQ. 'C') GOTO 1600
	IF (COM(2) .EQ. 'P') GOTO 3700
	IF (COM(2) .EQ. 'U') GOTO 4700
	GOTO 900
790	IF (COM(2) .EQ. 'E') GOTO 4100
	GOTO 900
792	IF (COM(2) .EQ. 'P') GOTO 4400
	GOTO 900
794	IF (COM(2) .EQ. 'F') GOTO 4500
	GOTO 900

800	IF (COM(1) .EQ. 'O') GOTO 1700
	IF (COM(1) .EQ. 'U') GOTO 1800
	IF (COM(1) .EQ. 'I') GOTO 1900
	IF (COM(1) .EQ. 'W') GOTO 2000
	IF (COM(1) .EQ. 'P') GOTO 2100
	IF (COM(1) .EQ. 'T') GOTO 2700
	IF (COM(1) .EQ. 'R') GOTO 2750
	IF (COM(1) .EQ. 'E') GOTO 2800
	IF (COM(1) .EQ. 'M') GOTO 2850
	
	IF (COM(1) .EQ. 'Q') GOTO 9900
C
C End of options, command no good
900	TYPE 950
950	FORMAT(' Error in command')
	GOTO 100
C
C
C Ready to obey command now
1000	CALL MOVBY(ARG(1),ARG(2))
	GOTO 100
1050	CALL MOVTO(ARG(1),ARG(2))
	GOTO 100
1075	CALL MOVTOC
	GOTO 100
1100	CALL LINBY(ARG(1),ARG(2))
	GOTO 100
1150	CALL LINTO(ARG(1),ARG(2))
	GOTO 100
1175	CALL LINTOC
	GOTO 100
1200	CALL LDCMPL
	GOTO 100
1300	N = ARG(1)
	CALL CHAIN(N)
	GOTO 100
1400	N = ARG(1)
	CALL DASHED(N,ARG(2),ARG(3),ARG(4))
	GOTO 100
1500	N = ARG(1)
	CALL DOTTED(N)
	GOTO 100
1550	N = ARG(1)
	M = ARG(2)
	CALL DREPT(N,M)
	GOTO 100
1600	CALL SCRUB(ARG(1),ARG(2))
	GOTO 100
1700	CALL ORIGIN(ARG(1),ARG(2))
	GOTO 100
1800	CALL UNITS(ARG(1))
	GOTO 100
1900	N = ARG(1)
	M = ARG(2)
	L = ARG(3)
	CALL LDINIT(N,M,L)
	GOTO 100
2000	CALL LDWAIT
	GOTO 100
2100	CALL PICL
	GOTO 100
2200	N = ARG(1)
	CALL DISMOD(N)
	GOTO 100
2300	CALL REFRSH
	GOTO 100
2400	CALL RFSTOP
	GOTO 100
2500	N = ARG(1)
	CALL RFBLNK(N)
	GOTO 100
2600	CALL RFBEND
	GOTO 100
2700	N = ARG(1)
	M = ARG(2)
	TYPE 8000, TKTRAC(N,M)
	GOTO 100
2750	CALL TKRASP
	GOTO 100
2800	N = ARG(1)
	M = ARG(2)
	L = ARG(3)
	TYPE 8000, TKIDEV(N,M,L)
	GOTO 100
2850	N = ARG(1)
	TYPE 8000, TKMAPT(N, ARG(2))
	GOTO 100
2900	CALL CURSOR
	GOTO	100
3000	CALL CHSIZE(ARG(1),ARG(2),ARG(3))
	GOTO 100
3100	CALL CSWT(ARG(1),ARG(2))
	GOTO 100
3150	CALL CSRD(ARG(1),ARG(2))
	TYPE 3151, ARG(1),ARG(2)
3151	FORMAT(' X=',F15.6,'  Y=',F15.6)
	GOTO 100
3200	CALL CHARS('CHARACTER STRING TERMINATED BY NULL ')
	CALL CHARC('#THIS IS A COUNTED CHARACTER STRING.')
	GOTO 100
3300	N = ARG(1)
	CALL PRTCHR(N)
	GOTO 100
3400	N = ARG(1)
	CALL TKCHSZ(N)
	GOTO 100
3500	N = ARG(1)
	M = ARG(2)
	CALL CHFONT(N,M)
	GOTO 100
3600	CALL CHTEST
	GOTO 100
3700	CALL CSPEED
	GOTO 100
3800	N = ARG(1)
	M = N+1
	IF (M.LT.1) M=1
	IF (M.GT.3) M=3
	LENRD(M)=0
	ASTCAL(M)=0
	IOSB(1,M)=0
	IOSB(2,M)=0
	GOTO(3801,3802,3803),M
3801	TYPE 8000, TKREAD(N,BUFFER(1,M),80,LENRD(M),M+10,IOSB(1,M),AST0)
	GOTO 100
3802	TYPE 8000, TKREAD(N,BUFFER(1,M),80,LENRD(M),M+10,IOSB(1,M),AST1)
	GOTO 100
3803	TYPE 8000, TKREAD(N,BUFFER(1,M),80,LENRD(M),M+10,IOSB(1,M),AST2)
	GOTO 100
3900	N = ARG(1)
	TYPE 8000, TKKILL(N)
	GOTO 100
4000	N = ARG(1)
	N = N+1
	IF (N.LT.1.OR.N.GT.3) GOTO 100
	TYPE 4001, LENRD(N),(IOSB(I,N),I=1,2),ASTCAL(N),
     &				(BUFFER(I,N),I=1,80)
4001	FORMAT(1X,'Length ',I5,' IOSB ',2O7,' AST Call ',I2/1X,80A1)
	GOTO 100
4100	N = ARG(1)
	N=N+1
	IF (N.LT.1.OR.N.GT.3) GOTO 100
	CALL WAITFR(N+10)
	GOTO 100
4200	CALL TKPING
	GOTO 100
4300	N = ARG(1)
	M = ARG(2)
	L = ARG(3)
	CALL C(N,M,L)
	CALL LDWAIT
	GOTO 100
4400	N = ARG(1)
	CALL LDFPPM(N,ARG(1),ARG(2),ARG(3))
	TYPE 4401, ARG(1),ARG(2),ARG(3)
4401	FORMAT(1X,3F15.6)
	GOTO 100
4500	CALL TKOFF(ARG(1),ARG(2))
	GOTO 100
4600	N = ARG(1)
	CALL CURSEL(N)
	GOTO 100
4700	N = ARG(1)
	M = ARG(2)
	L = ARG(3)
	CALL DSUBST(N,M,L)
	GOTO 100
4800	CALL TKTWIN(ARG(1),ARG(2),ARG(3),ARG(4))
	GOTO 100
8000	FORMAT(' Code',I6)
C	
C
C Quit
9900	CALL EXIT
C

	END
	SUBROUTINE AST0
	INTEGER*2	ASTCAL(3)
	COMMON/ASTC/	ASTCAL
	ASTCAL(1)=1
	RETURN
	END
	SUBROUTINE AST1
	INTEGER*2	ASTCAL(3)
	COMMON/ASTC/	ASTCAL
	ASTCAL(2)=1
	RETURN
	END
	SUBROUTINE AST2
	INTEGER*2	ASTCAL(3)
	COMMON/ASTC/	ASTCAL
	ASTCAL(3)=1
	RETURN
	END
