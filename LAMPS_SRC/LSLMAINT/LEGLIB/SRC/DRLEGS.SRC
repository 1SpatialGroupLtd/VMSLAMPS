C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1983-05-23 17:13:50.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
**	IF TXTVSP
	SUBROUTINE DRLEGS(P, L)
**	IFF					! ...txtvsp
	SUBROUTINE DRLEGS
**	ENDC					! ...txtvsp
C
***	MODULE	DRLEGS
***	IDENT	23MY83
C
C Copyright Laser Scan Laboratories Ltd., Cambridge, England.
C Author  R. Fairbairns
C
C Coded 2.iv.76
C Typed 8.iv.76
C Simplified MTC version 21.iv.77
C
**	IF VAX
	IMPLICIT NONE
**	ENDC					! ...vax
C
C To draw a legenda 1- or 2-point symbol, or to draw the
C  interpolated symbol in a fancy line
C
**	IF TXTVSP
	INTEGER P, L
C
C P is pointer to (virtual address of) start of symbol
C L is length of symbol (in steps)
C
**	IFF					! ...txtvsp
***	COMMON/LEGEND/
**	ENDC					! ...txtvsp
C
C w/s
	INTEGER		PTR	! ptr to legenda definition/step
	INTEGER		I	! DO loop counter
	REAL		DX,DY	! displacement to move/draw by
C
C function called
	LOGICAL 	RDLEGS
C
C set up 'start point'
C
**	IF TXTVSP
	PTR = P
**	IFF					! ...txtvsp
	PTR = CODPTR
**	ENDC					! ...txtvsp
C
C now draw
**	IF TXTVSP
	DO 1 I = 1,L
**	IFF					! ...txtvsp
	DO 1 I = 1,CODLEN
**	ENDC					! ...txtvsp
	   IF (RDLEGS(PTR,DX,DY)) GOTO 2
	   CALL MOVBY(DX,DY)
	   GOTO 1
2	   CALL LINBY(DX,DY)
1	CONTINUE
	RETURN
C
	END
