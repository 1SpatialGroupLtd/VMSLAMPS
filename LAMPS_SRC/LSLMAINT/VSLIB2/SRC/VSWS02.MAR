;
; * This file is part of the LAMPS distribution, released as a software
; * preservation project to archive digital history for future historians.
; * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
; *
; * Timestamp of this file for the 2002 release was: 1987-05-12 17:53:48.000000000 +0100
; *
; * This program is free software: you can redistribute it and/or modify
; * it under the terms of the GNU General Public License as published by
; * the Free Software Foundation, version 3.
; *
; * This program is distributed in the hope that it will be useful, but
; * WITHOUT ANY WARRANTY; without even the implied warranty of
; * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
; * General Public License for more details.
; *
; * You should have received a copy of the GNU General Public License
; * along with this program. If not, see http://www.gnu.org/licenses/.
;
; Workspace for the VS Library (new version - default is VS11, but also
; supports the Sigma ARGS 1000 line display)
;
; There is a FORTRAN version of this block in LSL$CMNVS:
;

	$GBLINI

	COMMON	VSWS

; the following things define our coordinate systems and our current position

VSRHXC:	.BLKW	1		; current h/w position in integer
VSRHYC:	.BLKW	1		; pixels as sent to VS11 or Sigma display

; Adjacency of next 4 assumed
VSRDOX:	.BLKF	1		; origin, display units
VSRDOY:	.BLKF	1
VSRUOX:	.BLKF	1		; origin, user units
VSRUOY:	.BLKF	1

VSRUX:	.BLKF	1		; current position, user units
VSRUY:	.BLKF	1

VSSCF:	.FLOAT	1.0		; scale factor (user units to display pixels)

VSTRX:	.BLKF	1		; transformation, user units to display pixels
VSTRY:	.BLKF	1

VSBSTRX:.FLOAT	16.12903226	; transformation at scale = 1.0
VSBSTRY:.FLOAT	16.12903226

VSSAVX:	.BLKF	1		; last position "MOV"ed to in pixels
VSSAVY:	.BLKF	1

VSCSX:	.BLKF	1		; store the last position VSCSWT moved the
VSCSY:	.BLKF	1		; cursor to - this is then returned by VSCSRD

VSHCSX:	.BLKF	1		; as above, but this is the position in
VSHCSY:	.BLKF	1		; 'pixels' (including fractions of a pixel)

VSPCSX:	.BLKL	1		; as above but integer pixels
VSPCSY:	.BLKL	1

VSCEN:	.FLOAT	255.5		; screen centres in pixels (default VS11 pixels)
VSEXT:	.LONG	511		; screen extents in pixels (as above)


VSCOLR:	.LONG	0		; current colour selected, initially white
;		********************************

; and now we deal with Sigma specific things...
; arguments for ZSR instruction for each picture
ZSR1:	.WORD	^X0300	; default 4 planes starting at 0
ZSR2:	.WORD	^X0304	; default 4 planes starting at 4

; bit masks for the planes in each picture
PLANE1:	.LONG	^X0000000F	; planes 0-3
PLANE2:	.LONG	^X000000F0	; planes 4-7

; registers for the Sigma ARGS display - three Video Status Registers
SGREG1:	.WORD	^X0FFF
SGREG2:	.WORD	^X0000	; contains the cursor on/off bit
SGREG3:	.WORD	^X0207

; and the colour (video transformation) table, as we remember setting it up...
SGVTMX= 256				; max length in longwords of table
SGVBUF:		.BLKW	1		; will be load VTT instn
		.WORD	0		; start at offset zero
SGVTT:		.BLKL	SGVTMX		; 256 longwords to remember VTT in
SGVTTL:		.WORD	16		; to remember how many we're using

; and then the blink generator programs, as we remember them...
SGBLNK_TAB:
SGBLNK_1:	.WORD	^X0066		; each blink generator
SGBLNK_2:	.WORD	^X0066		; defaults to off,on
SGBLNK_3:	.WORD	^X0066		; values of 6,6
SGBLNK_4:	.WORD	^X0066

; remember which plane (1 or 2) is currently selected
SGWHCH:		.BLKB	1		; plane currently write selected
VSENBL:		.BYTE	0		; TRUE if display enabled

;		*******************************

; Flagword and associated offsets for both VS11 and Sigma ARGS
VSFLAG:	.LONG	0		; force move o/p in abs.pt.mode, select colour

; define bits within flagword
	_VIELD	VFLG,0,<-
		<VUPTD,,M>,-	; =1 if moves not up to date
		<FRCABS,,M>,-	; =1 if force move to be o/p in abs. pt. mode
		<XA,,M>,-	; =1 if this is uVAX XA device
		<IFPAT,,M>-	; =1 if patterned line generation now on
		<CHAR,,M>-	; =1 if been drawing characters
		>
;
; Sigma character size and direction control
SGCHSZ:	.WORD	0
