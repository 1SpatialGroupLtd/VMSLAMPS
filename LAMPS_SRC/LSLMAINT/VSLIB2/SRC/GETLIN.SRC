C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1982-11-11 09:45:32.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL	FUNCTION VS_GETLIN( IERR )
C
***	IDENT	11NO82
***	MODULE	VS_GETLIN
C
C	Copyright LaserScan Laboratories Ltd., Cambridge, England
C
C function to read a new line in from LSL$IDSY02 for VS_GET_SYSC
C It ignores blank lines and lines starting with semi-colon,
C and returns FALSE unless something goes wrong, when it returns TRUE
C
C Author TJ Ibbs, 11 November 1982
C
	IMPLICIT NONE
C
	PARAMETER	SCOLON = 59	! semicolon for comments
C
C we were passed
C
	INTEGER*4	IERR		! system error code return
C
C we call
C
	LOGICAL		VS_RDCHS	! read a character
	INTEGER*4	VS_RDSYSC	! read a line
C
C declare what info we need
C
	INTEGER*4	RET		! result of function
	BYTE		CH		! character to read
C
C we assume things will go wrong...
C
	VS_GETLIN = .TRUE.		! failure
C
20	RET = VS_RDSYSC( IERR )		! read a line
	IF (RET.LT.0) RETURN		! bearing the error
C
C and interpret the line we managed to read
C
	CALL VS_BSLN			! go to start of line
	IF ( VS_RDCHS(CH) ) GOTO 20	! ignore blank lines
C semicolon introduces a coment line - ignore it
	IF ( CH.EQ.SCOLON ) GOTO 20	! comment line
C
C otherwise we should have a valid line -
C
	CALL VS_BSCH			! unread that first CH
C
	VS_GETLIN = .FALSE.		! success at last
	RETURN				! return with it
C
	END
