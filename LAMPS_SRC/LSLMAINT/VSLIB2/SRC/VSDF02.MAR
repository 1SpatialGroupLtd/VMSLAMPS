;
; * This file is part of the LAMPS distribution, released as a software
; * preservation project to archive digital history for future historians.
; * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
; *
; * Timestamp of this file for the 2002 release was: 1987-05-07 12:56:20.000000000 +0100
; *
; * This program is free software: you can redistribute it and/or modify
; * it under the terms of the GNU General Public License as published by
; * the Free Software Foundation, version 3.
; *
; * This program is distributed in the hope that it will be useful, but
; * WITHOUT ANY WARRANTY; without even the implied warranty of
; * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
; * General Public License for more details.
; *
; * You should have received a copy of the GNU General Public License
; * along with this program. If not, see http://www.gnu.org/licenses/.
;
; Sigma ARGS LIBRARY HEADER FILE

	.LIBRARY	/SYS$LIBRARY:LIB/
	.LIBRARY	/LSL$LIBRARY:LSLMACLIB/

	$IODEF
	$SSDEF
	$QIODEF
	$GBLINI
	$IRPDEF

; General Bit Masks
MASK1	= ^O177776		; mask to 1 bit  ( range 0 -> 1 ) -clever eh?
MASK2	= ^O177774		; mask to 2 bits ( range 0 -> 3 )
MASK3	= ^O177770		; mask to 3 bits ( range 0 -> 7 )
MASK4	= ^O177760		; mask to 4 bits ( range 0 -> 15 )
MASK5	= ^O177740		; mask to 5 bits ( range 0 -> 32 )
MASK10	= ^O176000		; mask to 10 bits

;
;		SIGMA INSTRUCTION CODES
;
SIGXMA	= ^XC000		; SIGma X Move Absolute
SIGYMA	= ^XA000		; SIGma Y Move Absolute	(not used)
SIGXMR	= ^XD000		;	X Move Relative
SIGYMR	= ^XB000		;	Y Move Relative	(not used)
SIGYDA	= ^XE000		;	Y Draw Absolute
SIGYDR	= ^XF000		;	Y Draw Relative
SIGBWV	= ^X2E00		;	background write value
SIGCLS	= ^X3400		;	clear bit planes
SIGCLS2	= ^X3502		;		"	(32 bit)
SIGCUR	= ^X3D00		;	read cursor address
SIGDEL	= ^X1500		;	set up delay
SIGDEV	= ^X3C00		;	device communications
SIGFPW	= ^X6900		;	fast pixel write
SIGFPR	= ^X6B00		;	fast pixel read
SIGLSW	= ^X0E00		;	load status word
SIGLUC	= ^X2500		;	load user cursor matrix
SIGLVT	= ^X1800		;	load video transformation table
SIGPBG	= ^X8100		;	programmable blink generator
SIGRSB	= ^X3100		;	reset bit in graphic status
SIGRVT	= ^X1900		;	read video transformation table
SIGSCN	= ^X4100		;	scanner on/off
SIGSDD	= ^X0C00		;	set drawing direction
SIGSDM	= ^X0500		;	set drawing mode
SIGSEP	= ^X1A20		;	select picture (?)
SIGSSB	= ^X3000		;	set bit in graphic status
SIGSSZ	= ^X0D00		;	set size in graphic status
SIGSVP	= ^X6400		;	select video processor
SIGTXT	= ^X3600		;	write text string
SIGVSR	= ^X2401		;	video status register
SIGXCL	= ^X1700		;	load cursor X
SIGYCL	= ^X2700		;	load cursor Y
SIGXOR	= ^X1000		;	set X origin
SIGYOR	= ^X1100		;	set y origin
SIGZDI	= ^X2800		;	Z axis data input
SIGZDI2	= ^X2902		;		"	(32 bit)
SIGZDO	= ^X2A00		;	Z axis data out
SIGZDO2	= ^X2B02		;		"	(32 bit)
SIGZPA1	= ^X5401		;	Z plane assignment (1 plane)
SIGZSR	= ^X0700		;	Z status register
SIGZWE	= ^X2C00		;	Z axis write enable
SIGZWE2	= ^X2D02		;		"	(32 bit)
SIGZOM	= ^X5000		;	zoom
SIGSXR	= ^X3800		;	set X scroll register
SIGSXR2	= ^X3902		;		"	(32 bit)
SIGSYR	= ^X3A00		;	set Y scroll register
SIGSYR2	= ^X3B02		;		"	(32 bit)
;
SIGINI	= ^X0004		;	initialise display
SIGNOP	= ^X0003		;	no-op

; and define some offsets for the construction of instructions
SGMPOS	= 0			; Sigma Move Position - base of X or Y value
SGMSIZ	= 12			; size of move value - 3 hex digits = 12 bits
;
SGBYT1	= 0			; first part of a byte (one hex digit)
SGBYT2	= 4			; second part of a byte (another hex digit)
SGBYSZ	= 4			; number of bits in part of a byte
SGWOSZ	= 8			; size of a 'word', instead (really size of 8
				; bits, ie a proper byte)
;
SGCSR	= 3			; cursor bit position in VSR reg 2 (SGREG2)
;
; and let us deal with device communication -
TBDEV	= 4			; tracker ball device number (goes in SGBYT2)
TBSEL	= 0			; select/reset TB
TBREAD	= 4			; read from TB (X, Y position, switch value)
TBWRITE	= 5			; write to TB lights
;
; and some offsets, etc for interpreting the IOSB return from a QIO
; ie we are looking at the low word of VSSTATUS
SGERRPS	= 14			; error bits are 14 & 15
SGERRSZ	= 2			; and there are 2 relevant bits
SGERR	= ^X01			; and they have value 01 on an error
;
; and offsets in the VTT table words, for the blink bit (use generator 1)
SGBLPS	= 24			; where the bit is
SGBLSZ	= 3			; there are really 3 of them
;
; and some defaults to use for Sigma display - screen size
SGBSTRX	= ^F30.8434		; transformation at scale = 1.0
SGBSTRY	= ^F37.7860		; for both axes
SGCEN	= ^F512.0		; screen centre in pixels
SGEXT	= 1023			; screen extent in pixels
;
; and drawing mode values...
SGBLK	= 2			; draw a solid box
SGLIN	= 0			; solid line
