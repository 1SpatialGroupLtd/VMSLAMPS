	INTEGER FUNCTION B_BOX_SET_AST(USERAST)
C
***	MODULE	B_BOX_SET_AST
***	IDENT	14AP87
C
C Copyright Laserscan Laboratories Limited, Cambridge, England.
C
C	Created					WJJ	19-Mar-1987
C
C
C	Sets up the line LSL$CONSOLE to deliver an AST to the given
C	routine when a valid function button byte appears in it.
C	If the USERAST is zero, AST's are then disabled. 
C
C	The routine is called as AST(BUTTON) where BUTTON is the 
C	decoded number read from the serial line.
C
C
C	Returns:	SS$_NORMAL if OK
C			or something else if something wrong
C
C
	IMPLICIT NONE
C
C definitions
	INCLUDE		'($SSDEF)'
C
C argument
	INTEGER		USERAST		! address of user AST routine
C
C common blocks:
	INCLUDE		'B_BOX_COMMON.CMN'	! serial line info.
C
C external
	EXTERNAL	B_BOX_AST			! fb read AST
C
C functions called:
C
C....system routines.
C
	INTEGER*4	SYS$ASSIGN		! assign channel
	INTEGER*4	SYS$DASSGN		! deassign channel
C
	INTEGER*4	B_BOX_AST		! assign channel
C
C w/s:
	INTEGER		STATUS			! system returns.
C
C record AST routine addresses
	B_BOX_USERAST = %LOC(USERAST)		! user AST routine
	B_BOX_ASTADR = %LOC(B_BOX_AST)		! fb AST (see below)
C
	IF (USERAST.EQ.0) THEN	
C
C shutdown
	  IF (B_BOX_ASTCHAN.NE.0) THEN
	    STATUS = SYS$DASSGN(%VAL(B_BOX_ASTCHAN)) ! deassign channel
	    B_BOX_ASTCHAN = 0
	    IF (.NOT.STATUS ) GOTO 9980		! return with error
	  ENDIF
	ELSE
C
C startup
C
C get hold of the serial line.
	  STATUS=SYS$ASSIGN('LSL$CONSOLE',B_BOX_ASTCHAN,,)
	  IF (.NOT.STATUS ) GOTO 9980		! return with error
C
C call the AST to get going (zero IOSB to stop USERAST being called)
	  B_BOX_IOSTAT(1) = 0	
	  STATUS = B_BOX_AST(0)
	  IF (.NOT.STATUS ) GOTO 9980		! return with error
	ENDIF
C
C good exit
	GOTO 9990
C
C relay error back
9980	B_BOX_SET_AST = STATUS
	GOTO 9999
C
C successful exit 
9990	B_BOX_SET_AST = SS$_NORMAL
	GOTO 9999
C leave
9999	RETURN
	END


