	SUBROUTINE INIDMB
C
***	IDENT	01MY85
***	MODULE	INIDMB
C
C Author: Susan Manning
C Copyright: Laser-Scan Laboratories Ltd.,Cambridge, England
C Date written: 09/04/80
C
C Converted to VAX native mode		21:01:81	SCM
C
C Writes ICL Header and Start Of Data Sentinel
C
***	COMMON/LSL$CMNVIO:MTICLCOM/
***	COMMON/LSL$CMNVIO:TXTC/
C
C Functions:
	LOGICAL RDCH,RDNUM
	INTEGER MTOEOF
C
C w/s
	INTEGER*4 QUAD		! 32 bits for ICL 24 bit word
	BYTE	BYTE(4)
	BYTE	BYTARR(60)
	BYTE	CH		! character
C
	EQUIVALENCE (QUAD,BYTE)	! to put QUAD into BYTARR
C
	DATA BLKLEN/512/
C
C Initialise magtape.
	CALL MTOI(0,.FALSE.)
	IF (MTOERR.LT.0) CALL ERREX
C
C ICL Header - tape serial no. and filename from terminal
10	CALL WRITEF('Tape Serial No. ?')
	CALL TTRLIN
	CALL BSLN
	IF (.NOT. RDNUM(QUAD,8)) GOTO 20  ! some sort of number read
	IF (RDCH(CH)) GOTO 10		! no chars on line, repeat req
	GOTO 30				! illegal character, complain
C extract next character and test for valid terminator
20	IF (RDCH(CH)) GOTO 40		! end of line
	IF (CH .EQ. "40) GOTO 40	! space terminator
C illegal terminator or number outside range
30	CALL WRITEF ('Error in Tape Serial Number')
	GOTO 10
C legal terminator - check that number is in range
40	IF (QUAD .LT. 0 .OR. QUAD .GT. "37777777) GOTO 30
	CALL WRITEF('Tape Filename ?')
	CALL TTRLIN
	CALL BSLN
	DO 50 I=1,12
50	  IF (I .GT. TXTPTR) TXTBUF(I) = ' '
	CALL ICLHDR(QUAD,TXTBUF,0,1,4095,BYTARR)
	CALL WRBLK(BYTARR,60)
	IF (MTOEOF(0).LT.0) CALL ERREX
C
C Start Of Data Sentinel
C
	INDX = 1
	QUAD = "77777702		! SOD identifier
	DO 60 I=3,1,-1
	  BYTARR(INDX) = BYTE(I)
	  INDX = INDX + 1
60	CONTINUE
C
	QUAD = 512			! block size
	DO 70 I=3,1,-1
	  BYTARR(INDX) = BYTE(I)
	  INDX = INDX + 1
70	CONTINUE
C
	DO 80 I=7,60
	  BYTARR(I) = 0
80	CONTINUE
C
	CALL WRBLK(BYTARR,60)
	RETURN
C
C *********************************************************************
C
	ENTRY ENDDMB
C
C Writes ICL Trailer Label
C
	QUAD = "40000000		! EOD identifier
	GOTO 90
C
C *********************************************************************
C
	ENTRY USRDMB
C
C Writes ICL User Sentinel
C
	QUAD = "77777704		! User Sentinel identifier
C
90	IF ((RECLEN.GT.0).AND.(RECLEN.LT.15)) THEN
	   DO 91 I=RECLEN+1,15
	      RECBUF(I) = 0
91	   CONTINUE
	   RECLEN=15
	ENDIF
	CALL PUTREC			! clears RECBUF
	IF (MTOEOF(0).LT.0) CALL ERREX
	INDX = 1
C
	DO 100 I=3,1,-1			! sentinel identifier
	  BYTARR(INDX) = BYTE(I)
	  INDX =INDX + 1
100	CONTINUE
C
	QUAD = BLKCNT
	DO 110 I=3,1,-1
	  BYTARR(INDX) = BYTE(I)
	  INDX = INDX + 1
110	CONTINUE
C
	DO 120 I=7,60
	  BYTARR(I) = 0
120	CONTINUE
C
	CALL WRBLK(BYTARR,60)
	RETURN
	END
C
C *********************************************************************
C
	SUBROUTINE ERREX
C
***	IDENT	26MY82
***	MODULE	ERREX
C
C Identifies error from mag. tape routine and exits
C
***	COMMON/LSL$CMNVIO:MTOVCM/
C
	INTEGER*4 SAVERR
C
C	CALL PRTMSS(MTOERR)
	CALL WRITEF('M/T ERROR %X',MTOERR)
	SAVERR=MTOERR
	CALL MTODET(0)
	CALL EXIT(SAVERR)
	RETURN
	END
C
C *********************************************************************
C
	SUBROUTINE PUT24B(L)
C
***	IDENT	26AP82
***	MODULE	PUT24B
C
C Decodes INT*4 into 3 bytes forming ICL 24 bit word
C
	INTEGER*4 L
C
	INTEGER*4 LNG
	BYTE B(4)
	EQUIVALENCE (LNG,B)
C
	LNG = L
C
	DO 10 I=3,1,-1
	  CALL PUTBYT(B(I))
10	CONTINUE
	RETURN
	END
C
C *********************************************************************
C
	SUBROUTINE PUTBYT(B)
C
***	IDENT	26AP82
***	MODULE	PUTBYT
C
C Flushes o/p buffer if full and stores bytes in buffer
C
	BYTE B
C
***	COMMON/LSL$CMNVIO:MTICLCOM/
C
	IF (RECLEN .EQ. BLKLEN) CALL PUTREC
	RECLEN = RECLEN+1
	RECBUF(RECLEN) = B
	RETURN 
	END
C
C *********************************************************************
C
	SUBROUTINE PUTREC
C
***	IDENT	04MY82
***	MODULE	PUTREC
C
C Flushes output buffer.
C
***	COMMON/LSL$CMNVIO:MTICLCOM/
C
	IF (RECLEN .EQ. 0) GOTO 10
	CALL WRBLK(RECBUF,RECLEN)
	RECLEN = 0
	BLKCNT = BLKCNT+1
10	RETURN
	END
C
C *********************************************************************
C
	SUBROUTINE WRBLK(IARR,ILEN)
C
***	IDENT	19MY82
***	MODULE	WRBLK
C
C Writes a block out to mag tape. (Not necessarily RECBUF).
C
	BYTE IARR(ILEN)
C
C Functions
	INTEGER MTOWRB
C
	IF (MTOWRB(IARR,ILEN).LT.0) CALL ERREX
	RETURN
	END
C
C *********************************************************************
C
	SUBROUTINE DOFIT(LEN)
C
***	IDENT	24MY82
***	MODULE	DOFIT
C
C Checks ICL record fits into block.
C
***	COMMON/LSL$CMNVIO:MTICLCOM/
C
	INTEGER*2 LEN
C
	IF (RECLEN+(LEN*3).GT.BLKLEN) CALL PUTREC
	RETURN
	END
C
C *********************************************************************
C
	INTEGER*4 FUNCTION ASCICL(I)
C
***	IDENT	24MY82
***	MODULE	ASCICL
C
C Returns the ICL char. code of the ASCII char I
C
	BYTE I
C
	IF( (I .AND. "100) .EQ. 0) I = I .XOR. "20
	I = (I .XOR. "40) .AND. "77
	ASCICL = I
	RETURN
	END
C
C *********************************************************************
C
	SUBROUTINE WORD(BYT1,BYT2,BYT3,BYT4,LONG)
C
***	IDENT	20MY82
***	MODULE	WORD
C
C Compacts 4 6-bit bytes into 1 word.
C
	INTEGER*2 I
	INTEGER*4 LONG,TEMP
	BYTE BYT(4),BYT1,BYT2,BYT3,BYT4
C
	BYT(1)=BYT1
	BYT(2)=BYT2
	BYT(3)=BYT3
	BYT(4)=BYT4
	LONG=0
	DO 10 I=1,4
	TEMP=BYT(5-I)
C	IF ((TEMP.AND."100).EQ.0) TEMP=TEMP.XOR."20
C	TEMP=(TEMP.XOR."40).AND."77
	TEMP=ISHFT(TEMP,6*I-6)
	LONG=LONG.OR.TEMP
10	CONTINUE
	RETURN
	END
