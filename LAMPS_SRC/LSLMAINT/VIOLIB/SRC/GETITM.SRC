C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1983-03-18 17:09:46.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE GETITM (BUF, PTR, LIM, USEVER,
     *                     ITM1ST, ITMLEN, ITMTYP, ITMVAL)
C
**	MODULE GETITM
**	IDENT  18MR83
C
	IMPLICIT NONE
C
C Copyright Laser-Scan Laboratories Ltd,Cambridge,England
C
C Author M.C.Fulford
C
C	Created 22.v.79
C	Last edited 17/Oct/80
C
C	To extract next syntactic item from file title
C
C parameters:
	PARAMETER COLON = "072		! :
	PARAMETER SQBRA = "133		! [
	PARAMETER SQKET = "135		! ]
	PARAMETER ANBRA = "074		! <
	PARAMETER ANKET = "076		! >
	PARAMETER COMMA = "054		! ,
	PARAMETER POINT = "056		! .
	PARAMETER SMCLN = "073		! ;
	PARAMETER SLASH = "057		! /
	PARAMETER EQUAL = "075		! =
	PARAMETER SPACE = "040
	PARAMETER NULL  = "000
C
C arguments:
	BYTE		BUF(1)		! line of text
	INTEGER*2	PTR		! position in it
C					!  <0 if to use RDCH(S) mech-
C					!     anism to get characters
	INTEGER*2	LIM		! limit to BUF
	LOGICAL*1	USEVER		! allow version numbers
	INTEGER*2	ITM1ST		! position of item
	INTEGER*2	ITMLEN		! length of item
	INTEGER*2	ITMTYP		! type of item (0 if error)
	INTEGER*2	ITMVAL		! value of item
C					!  (-1 if non-numeric)
C
C workspace:
	LOGICAL*1	CFRMBF		! TRUE => read chars from buffer
C					! FALSE => use RDCH(S)
	INTEGER*2	CH		! current character
	LOGICAL*1	HADALF		! had alphabetic character
C
C functions:
	LOGICAL		ALPHA		! defined
	LOGICAL		DIGIT		!  as ASFs
	LOGICAL		LOWER		!   below
	LOGICAL		RDCH		! from elsewhere in the library
C
C definition of functions:
	ALPHA(CH) =("101.LE.CH .AND. CH.LE."132) .OR.
     *              "044.EQ.CH .OR. "137.EQ.CH
	DIGIT(CH) = "060.LE.CH .AND. CH.LE."071
	LOWER(CH) = "141.LE.CH .AND. CH.LE."172
C
C code:
	HADALF = .FALSE.
	IF (PTR.GE.0) THEN		! got a buffer to read from
	   ITM1ST = PTR
	   CFRMBF = .TRUE.
	ELSE				! to read from TXTBUF
	   CALL DCPSAV(ITM1ST)
	   CFRMBF = .FALSE.
	   CH = 0			! (RDCH only affects ls byte)
	ENDIF
	ITMVAL = 0
	ITMTYP = 0
C
C look at 1st character in string
	IF (CFRMBF) THEN
	   IF (PTR .GT. LIM) GOTO 806	! j at end
	   CH = BUF(PTR)		! else get character
	ELSE
	   IF (RDCH(CH)) GOTO 806	! get char, j at end
	ENDIF
	IF (LOWER(CH)) CH=CH-32		! force upper case
	IF (ALPHA(CH)) GOTO 100
	IF (DIGIT(CH)) GOTO 110
	IF (CH .EQ. SQBRA .OR.
     *      CH .EQ. ANBRA) GOTO 200
	IF (CH .EQ. POINT) GOTO 300
	IF (CH .EQ. SMCLN) GOTO 400
	IF (CH .NE. SLASH .AND.
     *      CH .NE. COMMA .AND.
     *      CH .NE. SPACE .AND.
     *      CH .NE. EQUAL .AND.
     *      CH .NE. NULL ) GOTO 900
C
C got a terminator: un-read it
	IF (.NOT.CFRMBF) CALL BSCH
	GOTO 806
C
C build up alphanumeric string for device, name or number
100	HADALF = .TRUE.
110	IF (.NOT.HADALF) ITMVAL = ITMVAL*10+CH-48
	IF (CFRMBF) THEN
	   PTR = PTR+1
	   CH = BUF(PTR)
	ELSE
	   IF (RDCH(CH)) GOTO 115
	ENDIF
	IF (LOWER(CH)) CH=CH-32		! force upper case
	IF (ALPHA(CH)) GOTO 100
	IF (DIGIT(CH)) GOTO 110
	IF (CH .EQ. COLON) GOTO 120
	IF (.NOT.CFRMBF) CALL BSCH	! re-read terminator
C
C it's a name or number (let caller decide what to do with it)
115	IF (HADALF) ITMVAL = -1
	GOTO 803
C
C it's a device
120	IF (CFRMBF) PTR = PTR+1		! swallow terminator
	GOTO 801
C
C it's a UIC  or directory name
200	IF (CFRMBF) THEN
	   PTR = PTR+1
	   CH = BUF(PTR)
	ELSE
	   IF (RDCH(CH)) GOTO 900	! termination here is error
	ENDIF
	IF (LOWER(CH)) CH=CH-32		! force upper case
	IF (DIGIT(CH).OR.(CH.EQ.COMMA).OR.
     *      ALPHA(CH).OR.(CH.EQ.POINT)) GOTO 200
	IF (.NOT. ((CH.EQ.SQKET).OR.(CH.EQ.ANKET)) ) GOTO 900
	IF (CFRMBF) PTR = PTR+1		! swallow terminator
	GOTO 802
C
C it's a file type
300	IF (CFRMBF) THEN
	   PTR = PTR+1
	   CH = BUF(PTR)
	ELSE
	   IF (RDCH(CH)) GOTO 804
	ENDIF
	IF (LOWER(CH)) CH=CH-32		! force upper case
	IF (ALPHA(CH).OR.DIGIT(CH)) GOTO 300
	IF (.NOT.CFRMBF) CALL BSCH	! re-read terminator
	GOTO 804
C
C it's a version number
400	IF (.NOT.USEVER) GOTO 900	! forbidden
410	IF (CFRMBF) THEN
	   PTR = PTR+1
	   CH = BUF(PTR)
	ELSE
	   IF (RDCH(CH)) GOTO 805
	ENDIF
C	IF (LOWER(CH)) CH=CH-32		! force upper case
	IF (DIGIT(CH)) GOTO 410
	IF (.NOT.CFRMBF) CALL BSCH	! re-read terminator
	GOTO 805
C
C it's a terminator of some sort
806	ITMTYP = ITMTYP+1		! terminator
805	ITMTYP = ITMTYP+1		! ;version
804	ITMTYP = ITMTYP+1		! .type
803	ITMTYP = ITMTYP+1		! name/number
802	ITMTYP = ITMTYP+1		! [group,owner]
801	ITMTYP = ITMTYP+1		! device:
C
C evaluate the length of the item read
	IF (CFRMBF) THEN
	   ITMLEN = PTR-ITM1ST
	ELSE
	   CALL DCPSAV(ITMLEN)
	   ITMLEN = ITMLEN-ITM1ST	
	ENDIF
C
C common return
900	RETURN
C
	END
