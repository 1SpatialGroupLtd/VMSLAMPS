	INTEGER*4 FUNCTION CMLTWO(MCR)
C
***	IDENT	01MY85
***	MODULE	CMLTWO
C
C Copyright Laser-Scan Laboratories Ltd, Cambridge, England
C Adapted from CMLTIT (author Paul Hardy), by TJ Ibbs, to
C accept/prompt for 2 IFF titles.
C modified 26.jan.82
C
	IMPLICIT NONE
C
C
C read in command line containing IFFOUT/...=IFFIN/...
C or IFF/... when input/output files of same name.
C
C leaves titles in IFFIN,IFFOUT in common block IFFCML;
C also reads any switches present
C
C MCR is set .TRUE. if the line read was from the CLI/MCR
C
C passed (to fill in)
	LOGICAL*1	MCR
C
C common blocks
***	COMMON/LSL$CMNVIO:TXTC/
***	COMMON/LSL$CMNVIO:SWITCH/
***	COMMON/LSL$CMNVIO:IFFCML/
C
C functions called
	LOGICAL		RDCH,RDCHS,RDINT,RDFILT
	INTEGER*2	TXTCML,INDEX
C
C w/s
	BYTE		CH		! character read in
	LOGICAL*1	HADMCR		! true if have had MCR line
	LOGICAL*1	FIRST		! true if is first file name
	INTEGER		NSW		! number of switch in switch
	INTEGER		I,IX

C
C get CML command line
C
1	FIRST = .TRUE.
	HADMCR=(TXTCLI.GT.0)   ! already got CLI/MCR line
2	CMLTWO=TXTCML('command?  ')
	MCR=(TXTCLI.GT.0).AND..NOT.HADMCR  ! this is the CLI line
	IF(CMLTWO.EQ.-10) GOTO 9999
	IF(CMLTWO.EQ.0) GOTO 2
	IF(CMLTWO.LT.0) GOTO 997
	NSW=-1
C
C Now read 1st file name from it, into appropriate place
C
	IF (RDFILT(IFFOUT,40,'LSL$IF:IFF.IFF',.TRUE.,.TRUE.,
     &  .TRUE.,CMLTWO)) GOTO 998
C
C note that the above allows numerical filenames, version numbers
C (although we do NOT want a version number on our outfile) and blank
C filenames.
C
C and read any switches
C first set all switches off
C
	DO 15 I=1,26
15	   SWITCH(I)=.FALSE.
20	IF(RDCH(CH)) GOTO 900	! end of line
	IF(CH.LE."40) GOTO 20	! control char or space
	IF(CH.EQ."57) GOTO 20	! slash (/)
	IF(CH.EQ."72) GOTO 30	! colon (:)
	IF(CH.EQ."75) GOTO 40	! equals (=)
	IF(CH.GE."141.AND.CH.LE."172) CH=CH-"40	! force upper case
	IF(CH.GT."132.OR.CH.LT."101) GOTO 996
	NSW=CH-"100				! get switch nuber
	SWITCH(NSW)=.TRUE.			! set switch
	GOTO 20
C
C read number after ':'
C
30	IF(NSW.EQ.-1) GOTO 996			! no switch read
	IF(RDINT(SWINT(NSW))) GOTO 995		! no number there
	GOTO 20
C
C had equals, so get next file-name
C
40	IF (.NOT.FIRST) GOTO 996
	IF (RDCHS(CH)) GOTO 900		! check for end of line
	CALL BSCH
	IF (RDFILT(IFFIN,40,'LSL$IF:IFF.IFF;0',.TRUE.,.TRUE.,
     &  .TRUE.,CMLTWO)) GOTO 998
	FIRST = .FALSE.			! got 2nd name now
C
C so we've got two files - check that the first one didn't have a
C semicolon after it (ie. no version number on outfile)
C
	IF (INDEX(IFFOUT,';').NE.0) GOTO 993
	GOTO 20				! to look for switches
C
C Errors and so on
C
900	IF (.NOT.FIRST) RETURN		! got both file names, finished
C
C warn the operator that we are using the same file-name
C
	CALL MSGF('Output file same as input file')
	IFFIN=IFFOUT			! in & out same name
	IX = INDEX(IFFOUT,';')		! check for ';' in OUTFILE
	IF (IX.EQ.0) GOTO 920		! no ';' there
C
C here, we have a ';' at the end of the filename - remove it from
C OUTFILE, leave it on INFILE
C
	IFFOUT(IX:40) = ' '		! overwrite end with spaces
	RETURN
C
C here, we had no ';', so we must put ';0' onto INFILE
C
920	IX = INDEX(IFFIN,' ')		! find the first space
	IF (IX.EQ.0) GOTO 999
	IFFIN(IX:(IX+1)) = ';0'	! add on the substring
	RETURN
C
993	CALL MSGF('Version number illegal on outfile')
	GOTO 1
C
995	CALL MSGF('Bad number for switch %C',NSW+"100)
	GOTO 1
C
996	CALL MSGF('Bad switch ''%C''',CH)
	GOTO 1
C
997	CALL MSGF('GETCML error %N',CMLTWO)
	GOTO 9999
C
998	CALL MSGF('RDFILT error %N',CMLTWO)
	CALL FLTERR(CMLTWO)
	GOTO 9999
C
999	CALL MSGF('INFILE name too long')
	GOTO 1
C
9999	CALL EXIT
	END
C
