C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1984-08-14 09:45:32.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE EXPFLN( STRING, STRLEN )
C
***	IDENT	14AU84
***	MODULE	EXPFLN
C
C	Copyright LaserScan Laboratories Ltd., Cambridge, England
C
C Author TJ Ibbs, 4 August 1984
C
C This routine concatenates the parts of a filename and assigns them
C to STRING
C
	IMPLICIT NONE
C
C the common block which holds the filename parts
C
***	COMMON/LSL$CMNVIO:RDFILN/
C
C and we were passed
C
	CHARACTER*(*)		STRING		! result string
	INTEGER*2		STRLEN		! length produced
C
C internal workspace
C
	CHARACTER*(C_MAX_SIZ+1)	WORKSP
C
C now assemble the resultant string
C
	STRLEN = 0
C
	IF (HAD_NOD) THEN
	   WORKSP = WORKSP(1:STRLEN) // STR_NOD(:LEN_NOD) // '::'
	   STRLEN = STRLEN + LEN_NOD+2
	ENDIF
	IF (HAD_DEV) THEN
	   WORKSP = WORKSP(1:STRLEN) // STR_DEV(:LEN_DEV) // ':'
	   STRLEN = STRLEN + LEN_DEV + 1
	ENDIF
	IF (HAD_DIR) THEN
	   WORKSP = WORKSP(1:STRLEN) // '[' // STR_DIR(:LEN_DIR) // ']'
	   STRLEN = STRLEN + LEN_DIR + 2
	ENDIF
	IF (HAD_NAM) THEN
	   WORKSP = WORKSP(1:STRLEN) // STR_NAM(:LEN_NAM)
	   STRLEN = STRLEN + LEN_NAM
	ENDIF
	IF (HAD_EXT) THEN
	   WORKSP = WORKSP(1:STRLEN) // '.' // STR_EXT(:LEN_EXT)
	   STRLEN = STRLEN + LEN_EXT + 1
	ENDIF
	IF (HAD_VER) THEN
	   WORKSP = WORKSP(1:STRLEN) // ';' // STR_VER(:LEN_VER)
	   STRLEN = STRLEN + LEN_VER + 1
	ENDIF
C
C and copy this result over to the argument
C
	STRING = WORKSP
C
	RETURN
	END
