;
; * This file is part of the LAMPS distribution, released as a software
; * preservation project to archive digital history for future historians.
; * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
; *
; * Timestamp of this file for the 2002 release was: 1984-11-16 12:09:34.000000000 +0000
; *
; * This program is free software: you can redistribute it and/or modify
; * it under the terms of the GNU General Public License as published by
; * the Free Software Foundation, version 3.
; *
; * This program is distributed in the hope that it will be useful, but
; * WITHOUT ANY WARRANTY; without even the implied warranty of
; * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
; * General Public License for more details.
; *
; * You should have received a copy of the GNU General Public License
; * along with this program. If not, see http://www.gnu.org/licenses/.
;
	.TITLE	MTIV
	.IDENT	/16NO84/
 
; Copyright Laser Scan Laboratories Ltd., Cambridge, England.
;
; MTINIT added - allows initialization by file name	SGH	16-Nov-1984
;
; Author	Susan Manning
;		from PDP 11 routines by Paul Hardy
; Date:	29:01:81
 
; Magtape Input Routines
 
; assemble with MTICOM.MAR
 
; Definitions
 
	$IODEF
	$MTDEF
	$QIODEF
 
; Macro definition
 
	.MACRO	QIOTSTERR,QSTAT,QIOSB,QERREX,?QL1,?QL2
.IF NB QSTAT				; check queuing of I/O request ?
	CMPW	#SS$_NORMAL,QSTAT	; okay ?
	BEQL	QL1			; yes
.IIF NB QIOSB,	MOVW	QSTAT,QIOSB	; duplicate error
	BRW	QERREX			; branch to error routine
.ENDC
QL1:
.IF NB QIOSB				; check result of I/O request ?
	CMPW	#SS$_NORMAL,QIOSB	; okay ?
	BEQL	QL2			; yes
	BRW	QERREX			; branch to error routine
.ENDC
QL2:
	.ENDM	QIOTSTERR
 
; Workspace
 
	DATA_PSECT	VIO
 
; Tape name descriptor
MTDESC:	.LONG	MTEND - MTNAME
	.LONG	MTNAME
MTNAME:	.ASCII	/MT/
MTNUM:	.ASCII	/0/
MTEND:
 
; general tape name descriptor
MTGDSC:	.ASCID	/MTA0/

; Tape I/O status block
MTIISB:	.BLKW	1	; status return
MTICNT:	.BLKW	1	; byte count
MTDINF:	.BLKL	1	; device information
 
; QIO directive parameter block
MTIDPB:	$QIOW	FUNC=IO$_READVBLK,-
		IOSB=MTIISB
 
QI.FUNC	= MTIDPB+QIO$_FUNC
QI.CHAN	= MTIDPB+QIO$_CHAN
QI.P1	= MTIDPB+QIO$_P1
QI.P2	= MTIDPB+QIO$_P2
 
	CODE_PSECT	VIO
 
; MTINIT([name] [, norew]) initialises named device (default MTA0),
; assigns it to a channel, rewinds it positioning tape at BOT
;(unless <norew>, whose value is FALSE in default)
 
 .ENTRY	MTINIT,^M<R11>
 
	BSBW	VIO$1ST				; init argument mechanism
	BSBW	VIO$GNA				; get name argument
	BCC	10$				; if CC, it's there
	MOVAL	MTGDSC,R0			; default name MTA0
10$:	$ASSIGN_S	DEVNAM=(R0),-		; assign to channel
			CHAN=QI.CHAN
	MOVW	#SS$_NORMAL,MTIISB		; frig to use QIOTSTERR
	QIOTSTERR	R0,MTIISB,ERR		; check result
 
	BRB	MTII30
; 
; MTII(n, seven[, norew]) initialises MTn:, assigns it to a channel,
; rewinds it positioning tape at BOT (unless <norew>, whose value is
;	FALSE in default)
; Argument <seven> (7-track format on 9-track tape) is included for
;	compatibility with PDP-11 routines only, and is ignored
 
 .ENTRY	MTII,^M<R11>
 
	BSBW	VIO$1ST				; init argument mechanism
	BSBW	VIO$GNA				; get <n> argument
	BCC	10$				; if CC, it's there
	CLRB	R0				; default n=0
	BRB	20$
10$:	MOVB	(R0), R0			; get <n>
20$:	ADDB3	#^A/0/, R0, MTNUM		; set tape unit number
 
	$ASSIGN_S	DEVNAM=MTDESC,-		; assign to channel
			CHAN=QI.CHAN
	MOVW	#SS$_NORMAL,MTIISB		; frig to use QIOTSTERR
	QIOTSTERR	R0,MTIISB,ERR		; check result
 
	BSBW	VIO$GNA				; skip <seven> argument
MTII30:
	BSBW	VIO$GNA				; get <norew> argument
	BCS	30$				; if CS, missing - assume FALSE
	BLBSW	(R0), SUCC			; if LBS, TRUE - don't rewind
 
30$:	CALLS	#0, B^MTIRWD			; rewind tape to BOT
	RET					; return with MTIRWD's status
 
 
 
; Included for compatibility
; IERR = MTIATT(NMTI)	- Attach magtape
; IERR = MTIDET(NMTI)	- Detach magtape
 
MTIATT::
 .ENTRY	MTIDET,^M<>
	BRW	SUCC
 
 
 
; Rewind magtape
 
 .ENTRY	MTIRWD,^M<>
	MOVL	#IO$_REWIND,QI.FUNC
	$QIOW_G		MTIDPB
	CLRW	MTINBL
	QIOTSTERR	R0,MTIISB,ERR		; check okay
	BRW	SUCC
	
 
 
; MTIRDB(BUFFER,LENGTH,BYTCNT) reads from tape
 
 .ENTRY	MTIRDB,^M<>
	MOVZWL	@8(AP),QI.P2			; set buffer size
	MOVL	4(AP),QI.P1			; buffer address
	MOVL	#IO$_READVBLK,QI.FUNC
	$QIOW_G	MTIDPB
	INCW	MTINBL
	MOVW	MTICNT,@12(AP)			; return bytes read
	QIOTSTERR	R0,MTIISB,ERR		; check okay
 
; common success exit
SUCC:	MOVW	MTIISB,R0
	CLRW	MTIERR
	BRB	EXIT
 
; common error exit
ERR:	MOVW	MTIISB,MTIERR
	MNEGL	#1, R0
 
EXIT:	CLRW	MTIISB
	RET
 
ONE:	.WORD	1
 
; MTIEOV skips blocks to end of volume
 
 .ENTRY	MTIEOV,^M<>
 
$MTEOV:	PUSHAW	ONE
	CALLS	#1, G^MTISPC			; space by one block
	TSTL	R0				; positive if okay
	BGTR	$MTEOV
	MOVW	MTIERR,MTIISB			; restore status
	CMPW	MTIISB,#SS$_ENDOFVOLUME
	BEQL	SUCC
	BRW	ERR
 
 
; either space blocks by BLKNO 		- MTISPC(BLKNO)
; or come back by one block		- MTIBCK
 
 .ENTRY	MTIBCK,^M<R2>
	MNEGL	#1, R2				; come back by one block
	BRB	$MTISP
 
 .ENTRY	MTISPC,^M<R2>
 
	CVTWL	@4(AP),R2
 
$MTISP:	MOVL	#IO$_SKIPRECORD,QI.FUNC
	MOVL	R2,QI.P1
	$QIOW_G	MTIDPB
	ADDW2	R2,MTINBL			; keep it correct
	CMPW	#SS$_ENDOFFILE,MTIISB		; allow eof
	BEQL	1$
	QIOTSTERR	R0,MTIISB,ERR
1$:	BRW	SUCC
 
 
; Sense characteristics and return in R0
 
MTISNS::					; alias entry
 .ENTRY	MTSENS,^M<>
 
	MOVL	#IO$_SENSEMODE,QI.FUNC
	$QIOW_G		MTIDPB
 
	QIOTSTERR	R0, MTIISB, ERR		; check for errors
 
	MOVL	MTDINF,R0			; OK - return info as result
	RET
 
 
	.PSECT
	.END
