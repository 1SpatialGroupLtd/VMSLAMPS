C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1985-06-14 12:08:58.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL FUNCTION RDCH(CH)
C
**	MODULE RDCH
**	IDENT  01MY85
C
	IMPLICIT INTEGER*2 (I-N)
C
C Copyright Laser Scan Laboratories Ltd., Cambridge, England
C Author R. Fairbairns
C
C Coded 31.xii.76
C Typed 4.i.77
C Last edited 20/ix/79
C
C To read a chracter from the chracter input buffer
C
	BYTE CH
C
C CH is to hold the chracter read
C
C Function result is TRUE if the end of the command line is reached
C
***	COMMON/LSL$CMNVIO:TXTC/
C
C end of line?
	IF (DCPTR.GT.TXTPTR) GOTO 10
C
C no
	RDCH = .FALSE.
	CH = TXTBUF(DCPTR)
	DCPTR = DCPTR+1
	RETURN
C
C yes - return 'null'
10	RDCH = .TRUE.
	CH = 0
	RETURN
C
	END
C
	LOGICAL FUNCTION RDCHS(CH)
C
**	MODULE RDCHS
**	IDENT  20SE79
C
	IMPLICIT INTEGER*2 (I-N)
C
C Copyright Laser Scan Laboratories Ltd., Cambridge, England
C Author R. Fairbairns
C
C Coded 31.xii.76
C Typed 4.i.77
C Last edited 20/ix/79
CMOD 	skips tabs also     AS  14.vi.85
C
C To read a chracter from the input command line,
C  ignoring spaces and tabs
C
	BYTE CH
C
C CH is to hold the chracter read
C
C The function result is TRUE if no chracters (other than
C  spaces) remain on the line
C
C function called
	LOGICAL RDCH
C
C loop until non-space and non-tab
10	RDCHS = RDCH(CH)
	IF (RDCHS) RETURN
	IF ((CH.EQ.32).OR.(CH.EQ.9)) GOTO 10
	RETURN
C
	END
C
	LOGICAL FUNCTION RDNUM(I,BASE)
C
**	MODULE RDNUM
**	IDENT  18AP80
C
	IMPLICIT INTEGER*2 (I-N)
C
C Copyright Laser-Scan Laboratories Ltd,Cambridge,England
C
C Author M.C.Fulford
C
C	Created 26.i.79
C	Last edited 18/Apr/80
C
C To read in a number from a line of text
C Result is .TRUE. if no digits are read
C
C 
C arguments
	INTEGER*4 I	! where the number goes
	INTEGER*2 BASE	! numerical base
C
C
C functions
	LOGICAL RDCH
C
C w/s
	BYTE ICH	! chracter
	INTEGER*2 SIGN	! sign of number (0 if none so far)
C
C
	I = 0
	RDNUM = .TRUE.
	SIGN = 1		! to make it zero 1st time through
C + & - signs jump back to ...
20	SIGN = SIGN-2		! ... here (-) or ...
30	SIGN = SIGN+1		! ... here (+)
C extract next chracter
40	IF (RDCH(ICH)) GOTO 70
	IF (SIGN .NE. 0) GOTO 50
C leading items
	IF (ICH .EQ. "40) GOTO 40	! space
	IF (ICH .EQ. "55) GOTO 20	! minus
	IF (ICH .EQ. "53) GOTO 30	! plus
C digits
50	ICH = ICH-"60
	IF (ICH.LT.0 .OR. ICH.GE.BASE) GOTO 60
	IF (SIGN .EQ. 0) SIGN = 1	! implicit plus
	I = I*BASE + ICH*SIGN
	RDNUM = .FALSE.
	GOTO 40
C
C end of number
60	CALL BSCH
C
70	RETURN
C
	END
C
	LOGICAL FUNCTION RDINT(I)
C
**	MODULE RDINT
**	IDENT  25FE82
C
	IMPLICIT INTEGER*2 (I-N)
C
C Read a single length decimal integer
C
	INTEGER*4 L
	LOGICAL RDNUM
C
	RDINT = RDNUM(L,10)
	I = L
	RETURN
	END
C
	LOGICAL FUNCTION RDOCT(I)
C
**	MODULE RDOCT
**	IDENT  15FE82
C
	IMPLICIT INTEGER*2 (I-N)
C
C Read a single length octal integer
C
	INTEGER*4 L
	LOGICAL RDNUM
C
	RDOCT = RDNUM(L,8)
	I = L
	RETURN
	END
C
	LOGICAL FUNCTION RDLOCT(L)
C
**	MODULE RDLOCT
**	IDENT  25FE82
C
C Reads a double length octal integer
C
	INTEGER*4 L
	LOGICAL RDNUM
C
	RDLOCT = RDNUM(L,8)
	RETURN
	END
C
	LOGICAL FUNCTION RDLONG(L)
C
**	MODULE RDLONG
**	IDENT  15FE82
C
	IMPLICIT INTEGER*2 (I-N)
C
C Read a double length decimal integer
C
	INTEGER*4 L
	LOGICAL RDNUM
C
	RDLONG = RDNUM(L,10)
	RETURN
	END
C
	LOGICAL FUNCTION RDREAL(R)
C
**	MODULE RDREAL
**	IDENT  05MR82
C
	IMPLICIT NONE
C
C Copyright Laser-Scan Laboratories Ltd,Cambridge,England
C
C	Tided, and + added			AJW	05-Mar-1982
C	Created					MCF	18-Sep-1979
C
C To read in a real number
C Syntax of numbers is as FORTRAN real, but '&' replaces 'E'
C E.G.  -123.45& 7       654.3& -21   -12.34
C there must not be a space before the ampersand
C
C The function result is .TRUE. if no number read
C
C argument:
	REAL R		! to h
C
C functions:
	LOGICAL RDCH,RDCHS
C
C w/s:
	REAL      FRACTN
	INTEGER   N
	INTEGER   NEXP
	LOGICAL*1 NEGTVE,HADDOT,HADEXP
	BYTE      ICH
C
C code:
C preliminary ideas
C
	R = 0.0		! guilty until proven innocent
	RDREAL = .TRUE.
C
	NEXP = 0
C
	HADEXP = .FALSE.
	HADDOT = .FALSE.
C
C start of mantissa or exponent
C
10	CONTINUE
	NEGTVE = .FALSE.
C
C skip leading spaces & deal with sign
	IF (RDCHS(ICH)) GOTO 100
	IF (ICH.EQ.'+') GOTO 15
	IF (ICH.NE.'-') GOTO 20
	NEGTVE = .TRUE.
15	IF (RDCH(ICH)) GOTO 100
C
C now loop to extract digits
20	N = ICH-'0'
	IF (N.LT.0.OR.N.GT.9) GOTO 50
	RDREAL = .FALSE.
	IF (NEGTVE) N = -N
	IF (HADEXP) GOTO 40
	IF (HADDOT) GOTO 30
C
C digit before '.'
	R = R*10.0+FLOAT(N)
	GOTO 70
C
C digit after a '.'
30	FRACTN = FRACTN*0.1
	R = R+FRACTN*FLOAT(N)
	GOTO 70
C
C digit after '&'
40	NEXP = NEXP*10 + N
	GOTO 70
C
C not a digit - is it a 'legal' dot ?
50	IF (ICH.NE.'.' .OR. HADDOT) GOTO 60
	HADDOT = .TRUE.		! yes
	FRACTN = 1.0
	GOTO 70
C is it a legal '&' ?
60	IF (ICH.NE.'&' .OR. HADEXP) GOTO 80
	HADEXP = .TRUE.		! yes
	GOTO 10
C
70	IF (.NOT.RDCH(ICH)) GOTO 20
	GOTO 90
C
C end of the number
80	CALL BSCH	! not end of line
90	IF (HADEXP) R = R*(10.0**NEXP)
C return value
100	RETURN
C
	END
	SUBROUTINE BSCH
C
**	MODULE BSCH
**	IDENT  18SE79
C
C Copyright Laser Scan Laboratories Ltd., Cambridge, England
C Author R. Fairbairns
C
C Coded 31.xii.76
C Typed 4.i.77
C Last edited 18/ix/79
C
C To step back one chracter of the command line
C
***	COMMON/LSL$CMNVIO:TXTC/
C
C only in a subroutine for uniformity's sake, really
	IF (DCPTR.GT.1) DCPTR = DCPTR-1
	RETURN
C
	END
	SUBROUTINE BSLN
C
**	MODULE BSLN
**	IDENT  18SE79
C
C Copyright Laser Scan Laboratories Ltd., Cambridge, England
C Author R. Fairbairns
C
C	Created 18/ix/79
C
C To move back to the start of the command line
C
***	COMMON/LSL$CMNVIO:TXTC/
C
C only in a subroutine for uniformity's sake, really
	DCPTR = 1
	RETURN
C
	END
