C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1982-12-14 11:10:46.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE JPINFO
C
***	MODULE	JPINFO
***	IDENT	14DE82
C
	IMPLICIT NONE
C
C routine to print job information
C
C functions:
	INTEGER SYS$GETJPI	! Get Job/Process Information
C
C parameters:
	INCLUDE 'SYS$LIBRARY:FORSYSDEF($SSDEF)'
	INCLUDE 'SYS$LIBRARY:FORSYSDEF($JPIDEF)'
C
C workspace:
	INTEGER   IERR		! Error from queing of System service
	INTEGER   IOSB		! status at completion of Sys service
	INTEGER*2 IOSBW(2)	! bottom word is error code
	EQUIVALENCE (IOSB,IOSBW)
C
	INTEGER   ITMLEN	! size of item list
	PARAMETER (ITMLEN=25)
	INTEGER*4 ITMLST(ITMLEN)
	INTEGER*2 ITMLST2(2*ITMLEN)
	EQUIVALENCE (ITMLST,ITMLST2)
C
	CHARACTER*128 IMAGNAME	! name of image being executed
	INTEGER	      IMAGELEN	! no. of chars
	CHARACTER*15  PRCNAM	! name of process
	INTEGER       PRCLEN	! no. of chars
	CHARACTER*7   TERMINAL	! terminal name
	INTEGER       TERMLEN	! no. of chars
	CHARACTER*15  USERNAME	! name of user
	INTEGER       USERLEN	! no. of chars
C
C code:
C
C set up the item list ( see SYSTEM SERVICES Reference Manual)
C
	ITMLST2(1)   =128
	ITMLST2(2)   =JPI$_IMAGNAME
	ITMLST (3/2+1) =%LOC(IMAGNAME)
	ITMLST (5/2+1) =%LOC(IMAGELEN)
C
	ITMLST2(7)  =7
	ITMLST2(8)  =JPI$_TERMINAL
	ITMLST (9/2+1)=%LOC(TERMINAL)
	ITMLST (11/2+1)=%LOC(TERMLEN)
C
	ITMLST2(13)  =15
	ITMLST2(14)  =JPI$_PRCNAM
	ITMLST (15/2+1)=%LOC(PRCNAM)
	ITMLST (17/2+1)=%LOC(PRCLEN)
C
	ITMLST2(19)  =15
	ITMLST2(20)  =JPI$_USERNAME
	ITMLST (21/2+1)=%LOC(USERNAME)
	ITMLST (23/2+1)=%LOC(USERLEN)
C
	ITMLST (25/2+1) =0		! to terminate it
C
C	queue the request
	IERR=SYS$GETJPI(,		! efn
     &                  ,		! pid
     &                  ,		! prcnam
     &                  ITMLST,		! itmlst
     &                  IOSB,		! iosb
     &                  ,		! astadr
     &                  ,)		! astprm
C
	IF (IERR.NE.SS$_NORMAL) GOTO 20	! branch if failed to queue
C
C did the request complete OK ? - branch if it failed
	IF (IOSBW(1).NE.SS$_NORMAL) GOTO 10
C
C tidy things up
	USERLEN = INDEX(USERNAME,' ') - 1
	IF (USERLEN.LE.0) USERLEN = 12
C
C print our results
	CALL EXPAND('User  %S, Process %S',USERNAME(1:USERLEN),
     &    PRCNAM(1:PRCLEN))
	IF (TERMLEN.GT.0) CALL APPEND(', on %S',TERMINAL(1:TERMLEN))
	CALL WRTEXP
	CALL WRITEF('Image %S',IMAGNAME(1:IMAGELEN))
	RETURN
C
C here if GETJPI failed to queue
10	IERR = IOSBW(1)
20	CALL EXIT(IERR)
	END
