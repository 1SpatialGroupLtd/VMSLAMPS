C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1985-05-01 14:08:00.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL FUNCTION RDSWCH(TAB, LEN, INDX, WAY)
C
**	MODULE RDSWCH
**	IDENT  01MY85
C
	IMPLICIT NONE
C
C Copyright Laser-Scan Laboratories Ltd,Cambridge,England
C
C	Upper cases before comparing		AJW	19-Feb-1982
C	Author					MCF	11-Feb-1980
C
C To read a switch following a filename, looking it up in 
C a switch table.
C
	INTEGER*2 TAB(1)	! switch names (two letters each)
	INTEGER*2 LEN		! length of table
	INTEGER*2 INDX		! index of recognised switch
	INTEGER*2 WAY		! 1 => asserted, -1 => negated
C
C INDX returns details of result:
C	+n	index of switch in table
C	 0	end of line found
C	-1	syntax error
C	-2	unknown switch found
C
C Result of function is INDX<=0 (i.e. error found)
C
C functions called:
	LOGICAL   RDCHS
C
C workspace:
	INTEGER   I
	BYTE      ICH1, ICH2
C
C code:
	INDX = 0
	IF (RDCHS(ICH1)) GOTO 40	! end of line
	IF (ICH1 .NE. '/') GOTO 30	! no more switches
C
C read in the switch
	INDX = -1
	WAY  = -1
C
10	WAY  = -WAY
	IF (RDCHS(ICH1)) GOTO 40
	IF (ICH1 .EQ. '-') GOTO 10
	IF (RDCHS(ICH2)) GOTO 40
	IF (('a' .LE. ICH1) .AND. (ICH1 .LE. 'z')) ICH1=ICH1-32
	IF (('a' .LE. ICH2) .AND. (ICH2 .LE. 'z')) ICH2=ICH2-32
C
C got our switch - look it up
	DO 20 I = 1,LEN
	  INDX = I
	  IF (TAB(I) .EQ. ICH2*"400+ICH1) GOTO 40
20	  CONTINUE
C
C unknown switch
	INDX = -2
	GOTO 40
C
C no more switches
30	CALL BSCH
C 
40	RDSWCH = INDX.LE.0
C
	RETURN
	END
C
C**********************************************************************
C
	LOGICAL FUNCTION RDSWVI (I)
C
	IMPLICIT NONE
C
**	MODULE RDSWVI
**	IDENT  15FE82
C
C Copyright Laser-Scan Laboratories Ltd,Cambridge,England
C
C	Last edited				AJW	15-Feb-1982
C	Author					MCF	11-Feb-1980
C
C To read a :integer after a switch.
C
C argument:
	INTEGER*2 I
C
C functions called:
	LOGICAL RDINT,RDCHS
C
C workspace:
	BYTE COLON,ICH
C
C data:
	DATA COLON/':'/
C
C code:
	I = 0
	RDSWVI = .TRUE.
	IF (RDCHS(ICH)) RETURN
	IF (ICH .NE. COLON) GOTO 10
	RDSWVI = RDINT(I)
	RETURN
C
10	CALL BSCH
	RETURN
C
	END
C
C**********************************************************************
C
	LOGICAL FUNCTION RDSWVL(I)
C
	IMPLICIT NONE
C
**	MODULE RDSWVL
**	IDENT  15FE82
C
C Copyright Laser-Scan Laboratories Ltd,Cambridge,England
C
C	Created					AJW	15-Feb-1982
C
C To read a :long integer after a switch.
C
C argument:
	INTEGER*4 I
C
C functions called:
	LOGICAL   RDLONG,RDCHS
C
C workspace:
	BYTE      COLON,ICH
C
C data:
	DATA COLON/':'/
C
C code:
	I = 0
	RDSWVL = .TRUE.
	IF (RDCHS(ICH)) RETURN
	IF (ICH .NE. COLON) GOTO 10
	RDSWVL = RDLONG(I)
	RETURN
C
10	CALL BSCH
	RETURN
C
	END
C
C**********************************************************************
C
	LOGICAL FUNCTION RDSWVR (R)
C
	IMPLICIT NONE
C
**	MODULE RDSWVR
**	IDENT  15FE82
C
C Copyright Laser-Scan Laboratories Ltd,Cambridge,England
C
C	Last edited				AJW	15-Feb-1982
C	Author					MCF	11-Feb-1980
C
C To read a :real after a switch.
C
C argument:
	REAL R
C
C functions called:
	LOGICAL RDREAL,RDCHS
C
C workspace:
	BYTE COLON,ICH
C
C data:
	DATA COLON/':'/
C
C code:
	R = 0.0
	RDSWVR = .TRUE.
	IF (RDCHS(ICH)) RETURN
	IF (ICH .NE. COLON) GOTO 10
	RDSWVR = RDREAL(R)
	RETURN
C
10	CALL BSCH
	RETURN
	END
