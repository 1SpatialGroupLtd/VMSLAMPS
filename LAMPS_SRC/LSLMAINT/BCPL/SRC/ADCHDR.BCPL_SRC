 //*
 //* This file is part of the LAMPS distribution, released as a software
 //* preservation project to archive digital history for future historians.
 //* Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
 //*
 //* Timestamp of this file for the 2002 release was: 1986-10-16 16:20:52.000000000 +0100
 //*
 //* This program is free software: you can redistribute it and/or modify
 //* it under the terms of the GNU General Public License as published by
 //* the Free Software Foundation, version 3.
 //*
 //* This program is distributed in the hope that it will be useful, but
 //* WITHOUT ANY WARRANTY; without even the implied warranty of
 //* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 //* General Public License for more details.
 //*
 //* You should have received a copy of the GNU General Public License
 //* along with this program. If not, see http://www.gnu.org/licenses/.
 //*
// Header file for ADC - ADd Common blocks program

GLOBAL $(

COM		: 200	// TRUE -> comment lines to be transmitted
LN		: 201	// TRUE -> add line nos to output,
			//	    and retain *** lines
SLCOM		: 202	// TRUE -> transmit comment lines from nested files, too
ANOTHER		: 210	// TRUE -> there's another input title to read
SPOOL		: 211	// TRUE -> to spool the output file
APPEND		: 212	// TRUE -> to open the current (and next .IDE) file
			//					with /DD:E
DEBUG		: 213	// TRUE -> to treat lines beginning 'D'
			//				as real statements
			//	   (i.e. same as corresponding FORTRAN switch)
TRUTHFILE	: 214	// TRUE -> file of conditional definitions
**	IF VAX
INITVECS	: 215	// TRUE -> zero conditionals, default strings, 
			//				at new command line
**	ENDC
THREAD		: 216	// TRUE -> thread threaded (COMMON/INCLUDE/PARAMETER)
			//						files
LINELENGTH	: 217	// acceptable length for file lines
TRUETABS	: 218	// TRUE -> tabs are "true" (otherwise they're treated
			//	   the way that VAX Fortran does - as spaces)
ASTERISK	: 219	// character that introduces *** lines <init '*'>

UICVEC		: 220	// vector holding current default directory string
UICVECL		: 221	// its length
DISCVEC		: 222	// vector holding current default disc string
DISCVECL	: 223	// length
CUICVEC		: 224	// default directory for common block files
CUICVECL	: 225	// length
CDISCVEC	: 226	// default disc string for common block files
CDISCVECL	: 227	// length
IDETITLE	: 228	// title for .IDE file

RDCHECH		: 230	// RDCH with echoing
RDCHSAV		: 231	// preserved copy of RDCH

RDCHCML		: 232	// RDCH from CML line copied into:
CMLBUFFER	: 233	// buffer for CML line
CMLPTR		: 234	// pointer on CMLBUFFER

WRCHSAV		: 235	// preserved copy of WRCH

NULL		: 237	// null routine

**	IF VAX
IDEAPPEND	: 238	// copy of APPEND when last output file opened: used
			// to establish whether to append to .IDE file (!)
**	ENDC
IDFILE		: 239	// file holding IDENT directive output

SWITCHTAB	: 240	// table of legal switch names
STARTAB		: 241	// table of special function names

COPYING		: 249	// whether to output or not
IFSTACK		: 250	// stack of nested IFs
TITSTACK	: 251	// stack of values in IF/UNLESS statements
IFPTR		: 252	// index of next free entry (0 at outer level)
SYMBOLTAB	: 253	// symbol table, laid out thus:
			//	1	- or 0 for end marker
			//	value	- integer
			//	name	- address of packed string
SYMPTR		: 254	// index of next free entry
NAMETAB		: 255	// symbol names as packed strings
NAMEPTR		: 256	// index of next free entry

LOOKUPVAL	: 257	// last value 'looked up'

// inter-segment communication
TAGON		: 260	// tag a string on to another unpacked
			//   in a vector
LOOKUP		: 261	// look up a name in a table initialised with -
INITTAB		: 262	// initialise table with names
FORMNAME	: 263	// extract 'name' from input
PACKNAME	: 264	// pack name into vector
**	IF VAX
FORMGENNAME	: 265	// as FORMNAME, except allows $ and _,
			//			conditionally on 4th arg
**	IFF
FORMGENNAME	: 265	// as FORMNAME, except allows .,
			//			conditionally on 4th arg
**	ENDC
RDCHS		: 266	// read character, skipping spaces
SKIPSPACE	: 267	// skip spaces
SKIPCHAR	: 268	// skip repetitions of a character
READTITLE	: 269	// read file title
READTRUTHS	: 270	// read truth file
SKIPLINE	: 271	// skip line of text
READLOGEXP	: 272	// read logical expression
USEDATE		: 273	// 'to use this IDENT date?'
FORMIDETITLE	: 274	// form .IDE file's title
$)

MANIFEST $(

// special function names
F.IF	=  1	// IF
F.UNL	=  2	// UNLESS
F.END	=  3	// ENDC
F.COM	=  4	// COMMON
F.IFF	=  5	// IFF
F.IFT	=  6	// need I say?
F.FTF	=  7	// IFTF
F.PAR	=  8	// PARAMETER
F.DEF	=  9	// DEFPAR
F.SET	= 10	// SETVAR
F.INC	= 11	// INCLUDE
F.DAT	= 12	// DATA
F.ID	= 13	// IDENT
F.MOD	= 14	// MODULE/END
F.AST	= 15	// ASTERISK

F.UNKNWN = 16	// not in table

// table sizes
MAXIF	= 6	// number of nested IFs
MAXSYM	= 180	// 3 * number of symbols
MAXNAME	= 600	// space for actual symbol names
GIANT	= 258	// size of huge vector for storing CML line

$)


MANIFEST $(	// switch table values
S.COM	=  1	// COMments switch
S.LIB	=  2	// LIBrary switch
S.LN	=  3	// Line Nos switch
S.SP	=  4	// SPool switch
S.AP	=  5	// APpend switch
S.CU	=  6	// Common Uic switch
S.DE	=  7	// DEbug switch
S.TR	=  8	// TRuths switch - read truth values
S.NUL	=  9	// null switch (e.g. MAin)
**	IF VAX
S.CD	= 10	// Common Device switch
S.IN	= 11	// INitialise defaults switch
**	ENDC
S.THR	= 12	// THread files
S.LL	= 13	// Line Length
S.AST	= 14	// ASTerisk substitution
S.TRUETAB = 15	// True Tab interpretation
$)

MANIFEST $(
NOODLE	= 0	// unset variable value (for "?" variable initialisation)
$)

MANIFEST $(
// vector sizes: different on VAX and PDP
**	IF VAX

MAXFILETITLE = 256	// vector for (unpacked) file titles
MAXPACKEDTITLE = 128	// (packed) ditto
MAXTITLEBIT = 40	// a bit of a title (e.g. a UIC, directory name, etc)
MAXMODNAME = 60		// size for a module name (actually stored in a vector
			//			   of length MAXPACKEDTITLE)
MAXPACKEDMODNAME = 30	// size for vectors into which module names are to be 
			//						packed

**	IFF

MAXFILETITLE = 60	// vector for (unpacked) file titles
MAXPACKEDTITLE = 30	// (packed) ditto
MAXTITLEBIT = 30	// a bit of a title (e.g. a UIC, directory name, etc)
MAXMODNAME = 30		// size for a module name (actually stored in a vector
			//			   of length MAXPACKEDTITLE)
MAXPACKEDMODNAME = 15	// size for vectors into which module names are to be 
			//						packed
**	ENDC

$)
