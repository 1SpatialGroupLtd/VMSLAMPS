C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1995-10-27 12:02:46.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
C                   PJ08F
C **********************************************************************
C ** U.S.G.S. GENERAL MAP PROJECTION PACKAGE ...... DR. A. A. ELASSAL **
C **          MATHEMATICAL ANALYSIS BY JOHN SNYDER                    **
C ** MODULE I                VERSION 1.0.0            NOVEMBER 1,1980 **
C **********************************************************************
C                        *  EQUIDISTANT CONIC  *
C **********************************************************************
C
CMOD    Converted to Fortran77 (WI/CC 1514)      T.J.Mulcahy 24-Oct-1995
C
      SUBROUTINE PJ08F
C ***	IDENT   24OC95
C ***	MODULE  PJ08F
C
      IMPLICIT DOUBLE PRECISION (A-Z)
C
      INTEGER IERROR,IPEMSG,IPPARM
      INTEGER SWITCH,IND,I,ZONE,ANGS,ANG1(4),ANG2(4,2),INFILE
C
      COMMON /ELLP/ AZ,EZ,ESZ,E0Z,E1Z,E2Z,E3Z
C ** PARAMETERS ** A,E,ES,LAT1,LAT2,LON0,LAT0,X0,Y0,E0,E1,E2,NS,GL,RH0 *
      COMMON /ERRM/ IERROR
      COMMON /PRIN/ IPEMSG,IPPARM
      COMMON /WRK0/ BUFF(15),ANGS(4,4)
C
      DOUBLE PRECISION DATA(1),GEOG(1),PROJ(1)
C
      EQUIVALENCE (ANG1(1),ANGS(1,1)) , (ANG2(1,1),ANGS(1,3))
      DATA ZERO,ONE /0.0D0,1.0D0/
      DATA EPSLN /1.0D-10/
      DATA SWITCH /0/
C
C ......................................................................
C      .  INITIALIZATION OF PROJECTION PARAMETERS (ENTRY INPUT)  .
C ......................................................................
C
      ENTRY IS08F (ZONE,DATA)
C
      IERROR = 0
      IF (SWITCH.NE.0 .AND. SWITCH.EQ.ZONE) RETURN
      DO 260 I = 1,9
      BUFF(I) = DATA(I)
  260 CONTINUE
      GO TO 020
C
C ......................................................................
C       .  INITIALIZATION OF PROJECTION PARAMETERS (FILE INPUT)  .
C ......................................................................
C
      ENTRY IF08F (INFILE,DATA)
C
      IERROR = 0
      READ (INFILE,END=240) ZONE,BUFF
      IF (SWITCH.NE.0 .AND. SWITCH.EQ.ZONE) RETURN
  020 IF (BUFF(1) .LE. ZERO) GO TO 100
      A = BUFF(1)
      B = BUFF(2)
      IF (B .GT. ZERO) GO TO 040
      E = ZERO
      ES = ZERO
      E0 = ONE
      E1 = ZERO
      E2 = ZERO
      GO TO 120
  040 IF (B .GT. ONE) GO TO 060
      E = DSQRT (B)
      ES = B
      GO TO 080
  060 ES = ONE - (B / A) ** 2
      E = DSQRT (ES)
  080 E0 = E0FN (ES)
      E1 = E1FN (ES)
      E2 = E2FN (ES)
      GO TO 120
  100 A = AZ
      E = EZ
      ES = ESZ
      E0 = E0Z
      E1 = E1Z
      E2 = E2Z
  120 LAT1 = PAKR (BUFF(3))
      LAT2 = PAKR (BUFF(4))
      IF (DABS(LAT1+LAT2) .GE. EPSLN) GO TO 130
      IF (IPEMSG .EQ. 0) PRINT 2000
 2000 FORMAT ('0ERROR PJ08F'/
     .        ' EQUAL LATITUDES FOR ST. PARALLELS ON OPPOSITE',
     .        ' SIDES OF EQUATOR')
      IERROR = 081
      RETURN
  130 LON0 = PAKR (BUFF(5))
      LAT0 = PAKR (BUFF(6))
      X0 = BUFF(7)
      Y0 = BUFF(8)
      SINPHI = DSIN (LAT1)
      COSPHI = DCOS (LAT1)
      MS1 = MSFN (E,SINPHI,COSPHI)
      ML1 = MLFN (E0,E1,E2,LAT1)
      IND = 0
      IF (BUFF(9) .NE. ZERO) GO TO 140
      NS = SINPHI
      GO TO 160
  140 IND = 1
      SINPHI = DSIN (LAT2)
      COSPHI = DCOS (LAT2)
      MS2 = MSFN (E,SINPHI,COSPHI)
      ML2 = MLFN (E0,E1,E2,LAT2)
      IF (DABS(LAT1-LAT2) .GE. EPSLN) GO TO 150
      NS = SINPHI
      GO TO 160
  150 NS = (MS1 - MS2) / (ML2 - ML1)
  160 GL = ML1 + MS1 / NS
      ML0 = MLFN (E0,E1,E2,LAT0)
      RH0 = A * (GL - ML0)
C
C LIST RESULTS OF PARAMETER INITIALIZATION.
C
      CALL RADD (LAT1,ANGS(1,1))
      CALL RADD (LAT2,ANGS(1,2))
      CALL RADD (LON0,ANGS(1,3))
      CALL RADD (LAT0,ANGS(1,4))
      IF (IND .EQ. 0) GO TO 200
      IF (IPPARM .EQ. 0) PRINT 2010, A,ES,ANGS,X0,Y0
 2010 FORMAT ('0INITIALIZATION PARAMETERS (EQUIDISTANT CONIC',
     .        ' PROJECTION)'/
     .        ' SEMI-MAJOR AXIS OF ELLIPSOID =',F12.2,' METERS'/
     .        ' ECCENTRICITY SQUARED         =',F12.9/
     .        ' LATITUDE OF 1ST ST. PARALLEL = ',A1,2I3,F7.3/
     .        ' LATITUDE OF 2ND ST. PARALLEL = ',A1,2I3,F7.3/
     .        ' LONGITUDE OF ORIGIN          = ',A1,2I3,F7.3/
     .        ' LATITUDE OF ORIGIN           = ',A1,2I3,F7.3/
     .        ' FALSE EASTING                =',F12.2,' METERS'/
     .        ' FALSE NORTHING               =',F12.2,' METERS')
      GO TO 220
  200 IF (IPPARM .EQ. 0) PRINT 2020, A,ES,ANG1,ANG2,X0,Y0
 2020 FORMAT ('0INITIALIZATION PARAMETERS (EQUIDISTANT CONIC',
     .        ' PROJECTION)'/
     .        ' SEMI-MAJOR AXIS OF ELLIPSOID =',F12.2,' METERS'/
     .        ' ECCENTRICITY SQUARED         =',F12.9/
     .        ' LATITUDE OF ST. PARALLEL     = ',A1,2I3,F7.3/
     .        ' LONGITUDE OF ORIGIN          = ',A1,2I3,F7.3/
     .        ' LATITUDE OF ORIGIN           = ',A1,2I3,F7.3/
     .        ' FALSE EASTING                =',F12.2,' METERS'/
     .        ' FALSE NORTHING               =',F12.2,' METERS')
  220 DATA(1) = A
      DATA(2) = ES
      SWITCH = ZONE
      RETURN
  240 IF (IPEMSG .EQ. 0) PRINT 2030
 2030 FORMAT ('0ERROR PJ08F'/
     .        ' MISSING PROJECTION PARAMETERS')
      IERROR = 082
      RETURN
C
C ......................................................................
C                      .  FORWARD TRANSFORMATION  .
C ......................................................................
C
      ENTRY PF08F (GEOG,PROJ)
C
      IERROR = 0
      IF (SWITCH .NE. 0) GO TO 300
      IF (IPEMSG .EQ. 0) PRINT 2030
      IERROR = 083
      RETURN
  300 ML = MLFN (E0,E1,E2,GEOG(2))
      RH = A * (GL - ML)
      THETA = NS * ADJL (GEOG(1) - LON0)
      PROJ(1) = X0 + RH * DSIN (THETA)
      PROJ(2) = Y0 + RH0 - RH * DCOS (THETA)
      RETURN
C
      END

