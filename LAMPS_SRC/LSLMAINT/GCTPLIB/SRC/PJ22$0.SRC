C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1995-10-27 12:43:08.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
C                   PJ22F
C **********************************************************************
C          *  OBLIQUE STEREOGRAPHIC (UKSL specific projection) *
C **********************************************************************
C
CMOD    Converted to Fortran77 (WI/CC 1514)      T.J.Mulcahy 24-Oct-1995
C
	SUBROUTINE PJ22F
C ***	IDENT   24OC95
C ***	MODULE  PJ22F
C
C Copyright Laser-Scan Ltd., Cambridge, England
C
C Author 					R.W. Russell	29-Apr-86
C
C this projection is defined for use on UKSL contracts only. It is an
C oblique stereographic projection which uses conformal latitudes to
C project through a sphere.
C It uses a conformal earth's radius, passed as parameter(4) in DATA
C ------------------------------------------------------------------
C The inbuilt constants are believed to be defined for the INTERNATIONAL
C spheroid
C 
	IMPLICIT DOUBLE PRECISION (A-Z)
C
C arguments
C
C projection paramteres
	DOUBLE PRECISION DATA(1)
C geographical coordinates (radians)
	DOUBLE PRECISION GEOG(2)
C stereographic coordinates
	DOUBLE PRECISION PROJ(2)
C zone number (variable if using file)
	INTEGER ZONE
C LUN for input file (if used)
	INTEGER INFILE
C
C common blocks
C
	INTEGER IERROR,IPEMSG,IPPARM
	COMMON /ERRM/ IERROR
	COMMON /PRIN/ IPEMSG,IPPARM
C
C default spheroid
C
	DOUBLE PRECISION AZ,EZ,ESZ,E0Z,E1Z,E2Z,E3Z
	COMMON /ELLP/ AZ,EZ,ESZ,E0Z,E1Z,E2Z,E3Z
C
C working area
C
	INTEGER ANGS(4,3)
	INTEGER SWITCH
	DOUBLE PRECISION A,B,LON0,LAT0,CFLAT0,X0,Y0,SNCPH0,CSCPH0
	DOUBLE PRECISION BUFF(15)
	COMMON /WRK22F/ BUFF,ANGS,A,LON0,LAT0,CFLAT0,X0,Y0,SNCPH0,
     &	                CSCPH0
	COMMON /SW22F/ SWITCH
C
C constants
C
	DOUBLE PRECISION 	HALFPI,EPSLN,ZERO,ONE,TWO
	PARAMETER	(HALFPI =1.5707963267948966D0)
	PARAMETER	(EPSLN = 1.0D-10)
	PARAMETER	(ZERO = 0.0, ONE = 1.0, TWO = 2.0)
C
C functions called
C
	DOUBLE PRECISION CFGEOG
	DOUBLE PRECISION GEOGCF
	DOUBLE PRECISION PAKR
	DOUBLE PRECISION ADJL
	DOUBLE PRECISION RADD
	DOUBLE PRECISION DARSIN
C
C working storage
C
	DOUBLE PRECISION E,E2
C distance of point from origin
	DOUBLE PRECISION RHRH,RH
C difference in longitude
	DOUBLE PRECISION DLON
C and its cosine
	DOUBLE PRECISION CSDLON
C temporaries
	DOUBLE PRECISION G,Z,CON
C coordinates of point
	DOUBLE PRECISION X,Y
C sine and cosine of CONFORMAL latitude
	DOUBLE PRECISION SINPHI,CSPHI
C of point
C loop counter
	INTEGER	I
C
C initialisation
C
C	DATA SWITCH /0/
C
C ......................................................................
C      .  INITIALIZATION OF PROJECTION PARAMETERS (ENTRY INPUT)  .
C ......................................................................
C
	ENTRY IS22F (ZONE,DATA)
C
	IERROR = 0
C Initialisation
	IF (SWITCH.NE.0 .AND. SWITCH.EQ.ZONE) RETURN
C already done
	DO 180 I = 1,8
	   BUFF(I) = DATA(I)
  180	CONTINUE
	GOTO 020
C
C ......................................................................
C       .  INITIALIZATION OF PROJECTION PARAMETERS (FILE INPUT)  .
C ......................................................................
C
	ENTRY IF22F (INFILE)
C
	IERROR = 0
	READ (INFILE,END=060) ZONE,BUFF
C Initialisation
	IF (SWITCH.NE.0 .AND. SWITCH.EQ.ZONE) RETURN
C already done
  020	CONTINUE
	A = BUFF(1)
	B = BUFF(2)
	IF (A .GT. ZERO) THEN
	   IF (B .LE. ZERO) THEN
	      E = ZERO
	      E2 = ZERO
	   ELSEIF (B .LE. ONE) THEN
	      E = DSQRT (B)
	      E2 = B
	   ELSE
	      E2 = ONE - (B / A) ** 2
	      E = DSQRT (E2)
	   ENDIF
	ELSE
	   A = AZ
	   E = EZ
	   E2 = ESZ
	ENDIF
C
C see if conformal earth's radius has been defined
C
	IF (BUFF(4).GT.ZERO) A=BUFF(4)
C longitude of origin
	LON0 = PAKR (BUFF(5))
C latitude of origin
	LAT0 = PAKR (BUFF(6))
C eastings of origin
	X0 = BUFF(7)
C northings of origin
	Y0 = BUFF(8)
C conformal latitude of origin
	CFLAT0=GEOGCF(LAT0,E)
C sine of conformal lat of origin
	SNCPH0 = DSIN (CFLAT0)
C cosine of con lat of origin
	CSCPH0 = DCOS (CFLAT0)
C
C LIST RESULTS OF PARAMETER INITIALIZATION.
C
	CALL RADD (LON0,ANGS(1,1))
	CALL RADD (LAT0,ANGS(1,2))
	CALL RADD (CFLAT0,ANGS(1,3))
     	IF (IPPARM .EQ. 0) PRINT 2000, A,ANGS,X0,Y0
C pass radius of conformal earth back
	DATA(4) = A
C to calling program
C remember that initialisation done
	SWITCH = ZONE
	RETURN
C
  060	IF (IPEMSG .EQ. 0) PRINT 2010
	IERROR = 221
	RETURN
C
C ......................................................................
C                      .  FORWARD TRANSFORMATION  .
C ......................................................................
C
	ENTRY PF22F (GEOG,PROJ)
C
	IERROR = 0
C projection not initalised yet
	IF (SWITCH .EQ. 0) THEN
	   IF (IPEMSG .EQ. 0) PRINT 2010
	   IERROR = 222
	   RETURN
	ENDIF
C
	DLON = ADJL (GEOG(1) - LON0)
C use conformal latitude
	CON=GEOGCF(GEOG(2),E)
C from now on
	SINPHI = DSIN (CON)
	COSPHI = DCOS (CON)
	CSDLON = DCOS (DLON)
	G = SNCPH0 * SINPHI + CSCPH0 * COSPHI * CSDLON
C
C division by zero implies projection to infinity
C
	IF (DABS(G + ONE) .LE. EPSLN) THEN
	   PRINT 2020
	   IERROR = 223
	   RETURN
	ENDIF
C
	G = TWO / (ONE + G)
	PROJ(1) = X0 + A * G * COSPHI * DSIN (DLON)
	PROJ(2) = Y0 + A * G * (CSCPH0 * SINPHI - SNCPH0 * COSPHI *
     .          CSDLON)
	RETURN
C
C format statements
C
 2000 FORMAT ('0INITIALIZATION PARAMETERS ( OBLIQUE STEREOGRAPHIC',
     .        ' PROJECTION for UKSL)'/
     .        ' RADIUS OF CONFORMAL SPHERE   =',F12.2,/
     .        ' LONGITUDE OF CENTER          = ',A1,2I3,F7.3/
     .        ' LATITUDE  OF CENTER          = ',A1,2I3,F7.3/
     .        ' CONFORMAL LATITUDE OF CENTER = ',A1,2I3,F7.3/
     .        ' FALSE EASTING                =',F12.2,' METERS'/
     .        ' FALSE NORTHING               =',F12.2,' METERS')
C
 2010	FORMAT ('0ERROR PJ22F'/
     .        ' MISSING PROJECTION PARAMETERS')
C
 2020	FORMAT ('0ERROR PJ22F'/
     .        ' POINT PROJECTS INTO INFINITY')
C
	END
         
