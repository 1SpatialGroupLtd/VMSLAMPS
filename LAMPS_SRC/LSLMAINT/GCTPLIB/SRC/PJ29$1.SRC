C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1995-10-27 12:47:50.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
C                   PJ29I
C **********************************************************************
C ** U.S.G.S. GENERAL MAP PROJECTION PACKAGE ...... DR. A. A. ELASSAL **
C **          MATHEMATICAL ANALYSIS BY JOHN SNYDER                    **
C ** MODULE I                VERSION 1.0.0            NOVEMBER 1,1980 **
C **********************************************************************
C                      *  MODIFIED-STEREOGRAPHIC  *
C **********************************************************************
C
C Copyright Laser-Scan Laboratories Ltd., Cambridge, England
C
C Author                                                 TJM 29-Jun-1995
C
	SUBROUTINE PJ29I
C
C ***	IDENT   25OC95
C ***	MODULE  PJ29I
C
      IMPLICIT DOUBLE PRECISION (A-Z)
C
      DOUBLE PRECISION ARGS1(15),ARGS2(15)
      INTEGER IERROR,IPEMSG,IPPARM
      INTEGER SWITCH,ZONE,ANGS,INFILE,I
      LOGICAL SAME
C
      INTEGER MODIND
      INTEGER M
      DOUBLE COMPLEX AB(0:10),XYOLD,XYNEW,PXY,DPXY
C
      COMMON /SPHR/ AZZ
C **** PARAMETERS **** A,LON0,LAT0,X0,Y0,SINPH0,COSPH0 *****************
      COMMON /ERRM/ IERROR
      COMMON /PRIN/ IPEMSG,IPPARM
      COMMON /WRK29I/ BUFF(15),ANGS(4,2),A,LON0,LAT0,X0,Y0,
     &                SINPH0,COSPH0,MODIND,AB,M
C
      DOUBLE PRECISION DATA(1),GEOG(1),PROJ(1)
C
      DATA HALFPI /1.5707963267948966D0/
      DATA EPSLN /1.0D-10/
      DATA ZERO,ONE,TWO /0.0D0,1.0D0,2.0D0/
      DATA SWITCH /0/
C
C ......................................................................
C      .  INITIALIZATION OF PROJECTION PARAMETERS (ENTRY INPUT)  .
C ......................................................................
C
      ENTRY IS29I (ZONE,DATA)
C
      IERROR = 0
      IF (SWITCH.NE.0 .AND. SWITCH.EQ.ZONE) RETURN
      DO 180 I = 1,8
      BUFF(I) = DATA(I)
  180 CONTINUE
      GO TO 020
C
C ......................................................................
C       .  INITIALIZATION OF PROJECTION PARAMETERS (FILE INPUT)  .
C ......................................................................
C
      ENTRY IF29I (INFILE)
C
      IERROR = 0
      READ (INFILE,END=060) ZONE,BUFF
      IF (SWITCH.NE.0 .AND. SWITCH.EQ.ZONE) RETURN
  020 A = BUFF(1)
      IF (A .LE. ZERO) A = AZZ
      MODIND = NINT (BUFF(4))
      LON0 = PAKR (BUFF(5))
      LAT0 = PAKR (BUFF(6))
      X0 = BUFF(7)
      Y0 = BUFF(8)
      SINPH0 = DSIN (LAT0)
      COSPH0 = DCOS (LAT0)
C
C Initialise the complex polynomial coeffs. AB(1),...,AB(M) of the
C modified stereographic projection given by Z' = AB(1)*Z + ... + AB(M)*(Z**M)
C where Z' = (X',Y') is the image of the point Z = (X,Y).
C
C The projection coefficients given in USGS Professioanl Paper 1395 (page 209).
C
      AB(0) = (0.0, 0.0)
      IF ( MODIND.EQ.1 ) THEN
	 M = 3
	 AB(1) = (0.924500, 0.0)
	 AB(2) = (0.0,      0.0)
	 AB(3) = (0.019430, 0.0)
      ELSEIF( MODIND.EQ.2 ) THEN
	 M = 3
	 AB(1) = ( 0.72131600,  0.0)
	 AB(2) = ( 0.0,         0.0)
	 AB(3) = (-0.00881625, -0.00617325)
      ELSEIF( MODIND.EQ.3 ) THEN
	 M = 10
	 AB(1) = ( 0.9842990,  0.0)
	 AB(2) = ( 0.0211642,  0.0037608)
	 AB(3) = (-0.1036018, -0.0575102)
	 AB(4) = (-0.0329095, -0.0320119)
	 AB(5) = ( 0.0499471,  0.1223335)
	 AB(6) = ( 0.0260460,  0.0899805)
	 AB(7) = ( 0.0007388, -0.1435792)
	 AB(8) = ( 0.0075848, -0.1334108)
	 AB(9) = (-0.0216473,  0.0776645)
	 AB(10) = (-0.0225161, 0.0853673)
      ELSEIF( MODIND.EQ.4 ) THEN
	 M = 6
	 AB(1) = ( 0.9972523,  0.0000000)
	 AB(2) = ( 0.0052513, -0.0041175)
	 AB(3) = ( 0.0074606,  0.0048125)
	 AB(4) = (-0.0153783, -0.1968253)
	 AB(5) = ( 0.0636871, -0.1408027)
	 AB(6) = ( 0.3660976, -0.2937382)
      ELSEIF( MODIND.EQ.5 ) THEN
	 M = 5
	 AB(1) = ( 0.988790, 0.0)
	 AB(2) = ( 0.0,      0.0)
	 AB(3) = (-0.050909, 0.0)
	 AB(4) = ( 0.0,      0.0)
	 AB(5) = ( 0.075528, 0.0)
      ENDIF
C
C LIST RESULTS OF PARAMETER INITIALIZATION.
C
      CALL RADD (LON0,ANGS(1,1))
      CALL RADD (LAT0,ANGS(1,2))
      IF (IPPARM .EQ. 0) PRINT 2000, A,ANGS,X0,Y0
 2000 FORMAT ('0INITIALIZATION PARAMETERS (STEREOGRAPHIC',
     .        ' PROJECTION)'/
     .        ' RADIUS OF SPHERE             =',F12.2,' METERS'/
     .        ' LONGITUDE OF CENTER          = ',A1,2I3,F7.3/
     .        ' LATITUDE  OF CENTER          = ',A1,2I3,F7.3/
     .        ' FALSE EASTING                =',F12.2,' METERS'/
     .        ' FALSE NORTHING               =',F12.2,' METERS')
      DATA(1) = A
      SWITCH = ZONE
      RETURN
  060 IF (IPEMSG .EQ. 0) PRINT 2010
 2010 FORMAT ('0ERROR PJ29I'/
     .        ' MISSING PROJECTION PARAMETERS')
      IERROR = 101
      RETURN
C
C ......................................................................
C                      .  INVERSE TRANSFORMATION  .
C ......................................................................
C
      ENTRY PI29I (PROJ,GEOG)
C
      IERROR = 0
      IF (SWITCH .NE. 0) GO TO 220
      IF (IPEMSG .EQ. 0) PRINT 2010
      IERROR = 102
      RETURN
  220 X = (PROJ(1) - X0)/A
      Y = (PROJ(2) - Y0)/A
C
C First compute the inverse `modified' projection (X',Y') of (X,Y)
C
C Use Newton-Raphson iteration to find the root of complex polynomial with
C initial trial XYOLD equal to (X,Y). PXY is the complex polynomial and DPXY
C is its first derivative. Note that the constant term AB(0) is zero.
C
      XYOLD = DCMPLX (X,Y)
C
  230 PXY = AB(M)
      DPXY = (0.0,0.0)
      DO 235 I = M-1, 0, -1
      DPXY = DPXY*XYOLD + PXY
      PXY = PXY*XYOLD + AB(I)
  235 CONTINUE
C
C Check for error
C
      IF ( ABS(DPXY).EQ.0.0 ) THEN
         PRINT 2020
 2020    FORMAT ('0ERROR PJ29I'/
     .           ' POINT PROJECTS INTO INFINITY')
         IERROR = 103
         RETURN
      ENDIF
C
C Compute the next iterated solution XYNEW from previous solution XYOLD
C
      PXY = PXY - DCMPLX (X,Y)
      XYNEW = XYOLD - PXY/DPXY
C
C Does the new solution satisfy the precision requirement?
C ...if not, iterate again.
C
      IF ( ABS( XYNEW - XYOLD ).GT.EPSLN ) THEN
         XYOLD = XYNEW
         GOTO 230
      ENDIF
C
C Finally, compute the standard inverse stereographic transformation.
C
      X = A*DREAL(XYNEW)
      Y = A*DIMAG(XYNEW)
C
      RH = DSQRT (X * X + Y * Y)
      Z = TWO * DATAN (RH / (TWO * A))
      SINZ = DSIN (Z)
      COSZ = DCOS (Z)
      GEOG(1) = LON0
      IF (DABS(RH) .GT. EPSLN) GO TO 240
      GEOG(2) = LAT0
      RETURN
  240 GEOG(2) = DARSIN (COSZ * SINPH0 + Y * SINZ * COSPH0 / RH)
      CON = DABS (LAT0) - HALFPI
      IF (DABS (CON) .GT. EPSLN) GO TO 260
      IF (LAT0 .LT. ZERO) GO TO 250
      GEOG(1) = ADJL (LON0 + DATAN2 (X , -Y))
      RETURN
  250 GEOG(1) = ADJL (LON0 - DATAN2 (-X , Y))
      RETURN
  260 CON = COSZ - SINPH0 * DSIN (GEOG(2))
      IF (CON.EQ.ZERO .AND. X.EQ.ZERO) RETURN
      GEOG(1) = ADJL (LON0 + DATAN2 ((X*SINZ*COSPH0) , (CON*RH)))
C
      RETURN
C
C ......................................................................
C                 .  TRANSFORMATION  COMPARISON  .
C ......................................................................
C
      ENTRY CF29(ARGS1,ARGS2,SAME)
C
      SAME = .TRUE.
C
C radius of sphere
      IF ( DABS(ARGS1(1)-ARGS2(1)) .GT. 0.1D-3) GOTO 810
C
C Compare Types of modified-stereographic (1=Miller Oblate, 2=Lee Oblate,...)
      IF ( NINT(ARGS1(4)) .NE. NINT(ARGS2(4)) ) GOTO 810
C
C centre of projection
C
      DO 801 I = 5,6
	 SEC1 = PAKS(ARGS1(I))
	 SEC2 = PAKS(ARGS2(I))
C
         IF ( DABS(SEC1-SEC2) .GT. 0.1D-3) GOTO 810
801   CONTINUE
C
C eastings, northings
C
      DO 802 I = 7,8
         IF ( DABS(ARGS1(I)-ARGS2(I)) .GT. 0.1D-3) GOTO 810
802   CONTINUE
      GOTO 820
C
810   SAME=.FALSE.
C
820   RETURN
      END
C





