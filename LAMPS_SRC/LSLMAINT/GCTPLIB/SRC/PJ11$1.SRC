C                   PJ11I
C **********************************************************************
C ** U.S.G.S. GENERAL MAP PROJECTION PACKAGE ...... DR. A. A. ELASSAL **
C **          MATHEMATICAL ANALYSIS BY JOHN SNYDER                    **
C ** MODULE I                VERSION 1.0.0            NOVEMBER 1,1980 **
C **********************************************************************
C                   *  LAMBERT AZIMUTHAL EQUAL-AREA  *
C **********************************************************************
C
CMOD	PJ11I created from PJ11F for inverse transformation
C	Add CF11 to compare two projection parameter sets
C					            J Barber 20-Oct-1993
C
CMOD    Converted to Fortran77 (WI/CC 1514)      T.J.Mulcahy 24-Oct-1995
C
	SUBROUTINE PJ11I
C
C ***	IDENT   24OC95
C ***	MODULE  PJ11I
C
      IMPLICIT DOUBLE PRECISION (A-Z)
C
      DOUBLE PRECISION ARGS1(15),ARGS2(15)
      INTEGER IERROR,IPEMSG,IPPARM
      INTEGER SWITCH,ZONE,ANGS,INFILE,I
      LOGICAL SAME
C
      COMMON /SPHR/ AZZ
C **** PARAMETERS **** A,LON0,LAT0,X0,Y0,SINPH0,COSPH0 *****************
      COMMON /ERRM/ IERROR
      COMMON /PRIN/ IPEMSG,IPPARM
      COMMON /WRK0/ BUFF(15),ANGS(4,2)
C
      DOUBLE PRECISION DATA(1),GEOG(1),PROJ(1)
C
      DATA HALFPI /1.5707963267948966D0/
      DATA EPSLN /1.0D-10/
      DATA ZERO,ONE,TWO /0.0D0,1.0D0,2.0D0/
      DATA SWITCH /0/
C
C ......................................................................
C      .  INITIALIZATION OF PROJECTION PARAMETERS (ENTRY INPUT)  .
C ......................................................................
C
      ENTRY IS11I (ZONE,DATA)
C
      IERROR = 0
      IF (SWITCH.NE.0 .AND. SWITCH.EQ.ZONE) RETURN
      DO 180 I = 1,8
      BUFF(I) = DATA(I)
  180 CONTINUE
      GO TO 020
C
C ......................................................................
C       .  INITIALIZATION OF PROJECTION PARAMETERS (FILE INPUT)  .
C ......................................................................
C
      ENTRY IF11I (INFILE)
C
      IERROR = 0
      READ (INFILE,END=060) ZONE,BUFF
      IF (SWITCH.NE.0 .AND. SWITCH.EQ.ZONE) RETURN
  020 A = BUFF(1)
      IF (A .LE. ZERO) A = AZZ
      LON0 = PAKR (BUFF(5))
      LAT0 = PAKR (BUFF(6))
      X0 = BUFF(7)
      Y0 = BUFF(8)
      SINPH0 = DSIN (LAT0)
      COSPH0 = DCOS (LAT0)
C
C LIST RESULTS OF PARAMETER INITIALIZATION.
C
      CALL RADD (LON0,ANGS(1,1))
      CALL RADD (LAT0,ANGS(1,2))
      IF (IPPARM .EQ. 0) PRINT 2000, A,ANGS,X0,Y0
 2000 FORMAT ('0INITIALIZATION PARAMETERS (LAMBERT AZIMUTHAL EQUAL-AREA'
     .       ,' PROJECTION)'/
     .        ' RADIUS OF SPHERE             =',F12.2,' METERS'/
     .        ' LONGITUDE OF CENTER          = ',A1,2I3,F7.3/
     .        ' LATITUDE  OF CENTER          = ',A1,2I3,F7.3/
     .        ' FALSE EASTING                =',F12.2,' METERS'/
     .        ' FALSE NORTHING               =',F12.2,' METERS')
      DATA(1) = A
      SWITCH = ZONE
      RETURN
  060 IF (IPEMSG .EQ. 0) PRINT 2010
 2010 FORMAT ('0ERROR PJ11I'/
     .        ' MISSING PROJECTION PARAMETERS')
      IERROR = 111
      RETURN
C
C ......................................................................
C                      .  INVERSE TRANSFORMATION  .
C ......................................................................
C
      ENTRY PI11I (PROJ,GEOG)
C
      IERROR = 0
      IF (SWITCH .NE. 0) GO TO 220
      IF (IPEMSG .EQ. 0) PRINT 2010
      IERROR = 114
      RETURN
  220 X = PROJ(1) - X0
      Y = PROJ(2) - Y0
      RH = DSQRT (X * X + Y * Y)
      CON = RH / (TWO * A)
      IF (CON .LE. ONE) GO TO 230
      PRINT 2030
 2030 FORMAT ('0ERROR PJ11I'/
     .        ' INPUT DATA ERROR')
      IERROR = 115
      RETURN
  230 Z = TWO * DARSIN (CON)
      SINZ = DSIN (Z)
      COSZ = DCOS (Z)
      GEOG(1) = LON0
      IF (DABS(RH) .GT. EPSLN) GO TO 240
      GEOG(2) = LAT0
      RETURN
  240 GEOG(2) = DARSIN (COSZ * SINPH0 + Y * SINZ * COSPH0 / RH)
      CON = DABS (LAT0) - HALFPI
      IF (DABS (CON) .GT. EPSLN) GO TO 260
      IF (LAT0 .LT. ZERO) GO TO 250
      GEOG(1) = ADJL (LON0 + DATAN2 (X , -Y))
      RETURN
  250 GEOG(1) = ADJL (LON0 - DATAN2 (-X , Y))
      RETURN
  260 CON = COSZ - SINPH0 * DSIN (GEOG(2))
      IF (CON .EQ. ZERO) RETURN
      GEOG(1) = ADJL (LON0 + DATAN2 ((X*SINZ*COSPH0) , (CON*RH)))
      RETURN
C
C ......................................................................
C                 .  TRANSFORMATION  COMPARISON  .
C ......................................................................
C
      ENTRY CF11(ARGS1,ARGS2,SAME)
C
      SAME = .TRUE.
C
C sphere of ref
      IF ( DABS(ARGS1(1)-ARGS2(1)) .GT. 0.1D-3) GOTO 810
C
C centre of projection
C
      DO 801 I = 5,6
	 SEC1 = PAKS(ARGS1(I))
	 SEC2 = PAKS(ARGS2(I))
C
         IF ( DABS(SEC1-SEC2) .GT. 0.1D-3) GOTO 810
801   CONTINUE
C
C eastings, northings
C
      DO 802 I = 7,8
         IF ( DABS(ARGS1(I)-ARGS2(I)) .GT. 0.1D-3) GOTO 810
802   CONTINUE
      GOTO 820
C
810   SAME=.FALSE.
C
820   RETURN
      END
C
