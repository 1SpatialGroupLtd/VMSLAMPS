C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1995-10-25 15:33:14.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
C                   PJ30F
C **********************************************************************
C                       *  dummy *
C **********************************************************************
C
CMOD    Converted to Fortran77 (WI/CC 1514)              TJM 25-Oct-1995
C
      SUBROUTINE PJ30F
C ***	IDENT   25OC95
C ***	MODULE  PJ30F
C
C
C Copyright LaserScan Laboratories Ltd., Cambridge, England
C
C Author 					R.W. Russell	11-Feb-93
C
      IMPLICIT DOUBLE PRECISION (A-Z)

      INTEGER IERROR,IPEMSG,IPPARM
      INTEGER SWITCH,I,ZONE,ANGS,INFILE,IND,NIT
C
      COMMON /ELLP/ AZ,EZ,ESZ,E0Z,E1Z,E2Z,E3Z
C **** PARAMETERS **** A,E,ES,KS0,LON0,LAT0,X0,Y0,E0,E1,E2,ML0,IND *
      COMMON /ERRM/ IERROR
      COMMON /PRIN/ IPEMSG,IPPARM
      COMMON /WRK0/ BUFF(15),ANGS(4,2)
C
      DOUBLE PRECISION DATA(15),GEOG(1),PROJ(1)
C
      DATA ZERO,HALF,ONE,TWO,THREE /0.0D0,0.5D0,1.0D0,2.0D0,3.0D0/
      DATA FOUR,FIVE,SIX,EIGHT,NINE /4.0D0,5.0D0,6.0D0,8.0D0,9.0D0/
      DATA HALFPI /1.5707963267948966D0/
      DATA TEN /10.0D0/
      DATA TOL,EPSLN,NIT /1.0D-5,1.0D-10,6/
      DATA SWITCH /0/
C
C ......................................................................
C      .  INITIALIZATION OF PROJECTION PARAMETERS (ENTRY INPUT)  .
C ......................................................................
C
      ENTRY IS30F (ZONE,DATA)
C
      IERROR = 0
      IF (SWITCH.NE.0 .AND. SWITCH.EQ.ZONE) RETURN
      DO 180 I = 1,8
      BUFF(I) = DATA(I)
  180 CONTINUE
      GO TO 020
C
C ......................................................................
C       .  INITIALIZATION OF PROJECTION PARAMETERS (FILE INPUT)  .
C ......................................................................
C
      ENTRY IF30F (INFILE)
C
      IERROR = 0
      READ (INFILE,END=160) ZONE,BUFF
      IF (SWITCH.NE.0 .AND. SWITCH.EQ.ZONE) RETURN
  020 IF (BUFF(1) .LE. ZERO) GO TO 100
      A = BUFF(1)
      B = BUFF(2)
      IF (B .GT. ZERO) GO TO 040
      E = ZERO
      ES = ZERO
      E0 = ONE
      E1 = ZERO
      E2 = ZERO
      GO TO 120
  040 IF (B .GT. ONE) GO TO 060
      E = DSQRT (B)
      ES = B
      GO TO 080
  060 ES = ONE - (B / A) ** 2
      E = DSQRT (ES)
  080 E0 = E0FN (ES)
      E1 = E1FN (ES)
      E2 = E2FN (ES)
      GO TO 120
  100 A = AZ
      E = EZ
      ES = ESZ
      E0 = E0Z
      E1 = E1Z
      E2 = E2Z
  120 LON0 = PAKR (BUFF(5))
      LAT0 = PAKR (BUFF(6))
      X0 = BUFF(7)
      Y0 = BUFF(8)
      ML0 = A * MLFN (E0,E1,E2,LAT0)
      IND = 1
      IF (E .LT. TOL) GO TO 130
      IND = 0
C
C LIST RESULTS OF PARAMETER INITIALIZATION.
C
  130 CALL RADD (LON0,ANGS(1,1))
      CALL RADD (LAT0,ANGS(1,2))
      IF (IPPARM .EQ. 0) PRINT 2000, A,ES,ANGS,X0,Y0
 2000 FORMAT ('0INITIALIZATION PARAMETERS (dummy',
     .        ' PROJECTION)'/
     .        ' SEMI-MAJOR AXIS OF ELLIPSOID =',F12.2,' METERS'/
     .        ' ECCENTRICITY SQUARED         =',F12.9/
     .        ' LONGITUDE OF C. MERIDIAN     = ',A1,2I3,F7.3/
     .        ' LATITUDE OF ORIGIN           = ',A1,2I3,F7.3/
     .        ' FALSE EASTING                =',F12.2,' METERS'/
     .        ' FALSE NORTHING               =',F12.2,' METERS')
      DATA(1) = A
      DATA(2) = ES
      SWITCH = ZONE
      RETURN
  160 IF (IPEMSG .EQ. 0) PRINT 2010
 2010 FORMAT ('0ERROR PJ30F'/
     .        ' MISSING PROJECTION PARAMETERS')
      IERROR = 301
      RETURN
C
C ......................................................................
C                      .  FORWARD TRANSFORMATION  .
C ......................................................................
C
      ENTRY PF30F (GEOG,PROJ)
C
      IERROR = 0
      IF (SWITCH .NE. 0) GO TO 220
      IF (IPEMSG .EQ. 0) PRINT 2010
      IERROR = 302
      RETURN
  220 DLON = ADJL (GEOG(1) - LON0)
      LAT = GEOG(2)
      IF (IND .EQ. 0) GO TO 300
      COSPHI = DCOS (LAT)
      B = COSPHI * DSIN (DLON)
      IF (DABS(DABS(B) - ONE) .GT. EPSLN) GO TO 230
      IF (IPEMSG .EQ. 0) PRINT 2020
 2020 FORMAT ('0ERROR PJ30F'/
     .        ' POINT PROJECTS INTO INFINITY')
      IERROR = 303
      RETURN
  230 PROJ(1) =  A * DARSIN(B)
      CON = DARCOS (COSPHI * DCOS (DLON) / DSQRT (ONE - B * B))
      IF (LAT .LT. ZERO) CON =-CON
      PROJ(2) = A * (CON - LAT0)
C
C apply false origin to transformed coordinates
C
      PROJ(1) = PROJ(1) + X0
      PROJ(2) = PROJ(2) + Y0
      RETURN
C
  300 SINPHI = DSIN (LAT)
      COSPHI = DCOS (LAT)
      AL = COSPHI * DLON
      ALS = AL * AL
      C = ES * COSPHI * COSPHI/(1 - ES)
      TQ = DTAN (LAT)
      T = TQ * TQ
      N = A / DSQRT (ONE - ES * SINPHI * SINPHI)
      ML = A * MLFN (E0,E1,E2,LAT)
      PROJ(1) = N * AL * (ONE -T * ALS / SIX * (ONE - 
     .          (EIGHT - T + EIGHT *C) * ALS /20.0D0)) + X0
      PROJ(2) = ML - ML0 + N * TQ * ALS * (HALF + (FIVE - T + SIX * C) *
     .          ALS/24.0D0) + Y0
      RETURN
C
      END

