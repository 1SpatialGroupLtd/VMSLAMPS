C                   PJ08I
C **********************************************************************
C ** U.S.G.S. GENERAL MAP PROJECTION PACKAGE ...... DR. A. A. ELASSAL **
C **          MATHEMATICAL ANALYSIS BY JOHN SNYDER                    **
C ** MODULE I                VERSION 1.0.0            NOVEMBER 1,1980 **
C **********************************************************************
C                        *  EQUIDISTANT CONIC  *
C **********************************************************************
C
CMOD	PJ08I created from PJ08F for inverse transformation
C	Add CF08 to compare two projection parameter sets
C						    J Barber 20-Oct-1993
C
CMOD    Converted to Fortran77 (WI/CC 1514)      T.J.Mulcahy 24-Oct-1995
C
	SUBROUTINE PJ08I
C
C ***	IDENT   24OC95
C ***	MODULE  PJ08I
C
      IMPLICIT DOUBLE PRECISION (A-Z)
C
      DOUBLE PRECISION ARGS1(15),ARGS2(15)
      INTEGER IERROR,IPEMSG,IPPARM
      INTEGER SWITCH,IND,ZONE,ANGS,ANG1(4),ANG2(4,2),INFILE,I
      LOGICAL SAME

      COMMON /ELLP/ AZ,EZ,ESZ,E0Z,E1Z,E2Z,E3Z
C ** PARAMETERS ** A,E,ES,LAT1,LAT2,LON0,LAT0,X0,Y0,E0,E1,E2,NS,GL,RH0 *
      COMMON /ERRM/ IERROR
      COMMON /PRIN/ IPEMSG,IPPARM
      COMMON /WRK0/ BUFF(15),ANGS(4,4)
C
      DOUBLE PRECISION DATA(1),GEOG(1),PROJ(1)
C
      EQUIVALENCE (ANG1(1),ANGS(1,1)) , (ANG2(1,1),ANGS(1,3))
      DATA ZERO,ONE /0.0D0,1.0D0/
      DATA EPSLN /1.0D-10/
      DATA SWITCH /0/
C
C ......................................................................
C      .  INITIALIZATION OF PROJECTION PARAMETERS (ENTRY INPUT)  .
C ......................................................................
C
      ENTRY IS08I (ZONE,DATA)
C
      IERROR = 0
      IF (SWITCH.NE.0 .AND. SWITCH.EQ.ZONE) RETURN
      DO 260 I = 1,9
      BUFF(I) = DATA(I)
  260 CONTINUE
      GO TO 020
C
C ......................................................................
C       .  INITIALIZATION OF PROJECTION PARAMETERS (FILE INPUT)  .
C ......................................................................
C
      ENTRY IF08I (INFILE,DATA)
C
      IERROR = 0
      READ (INFILE,END=240) ZONE,BUFF
      IF (SWITCH.NE.0 .AND. SWITCH.EQ.ZONE) RETURN
  020 IF (BUFF(1) .LE. ZERO) GO TO 100
      A = BUFF(1)
      B = BUFF(2)
      IF (B .GT. ZERO) GO TO 040
      E = ZERO
      ES = ZERO
      E0 = ONE
      E1 = ZERO
      E2 = ZERO
      GO TO 120
  040 IF (B .GT. ONE) GO TO 060
      E = DSQRT (B)
      ES = B
      GO TO 080
  060 ES = ONE - (B / A) ** 2
      E = DSQRT (ES)
  080 E0 = E0FN (ES)
      E1 = E1FN (ES)
      E2 = E2FN (ES)
      GO TO 120
  100 A = AZ
      E = EZ
      ES = ESZ
      E0 = E0Z
      E1 = E1Z
      E2 = E2Z
  120 LAT1 = PAKR (BUFF(3))
      LAT2 = PAKR (BUFF(4))
      IF (DABS(LAT1+LAT2) .GE. EPSLN) GO TO 130
      IF (IPEMSG .EQ. 0) PRINT 2000
 2000 FORMAT ('0ERROR PJ08I'/
     .        ' EQUAL LATITUDES FOR ST. PARALLELS ON OPPOSITE',
     .        ' SIDES OF EQUATOR')
      IERROR = 081
      RETURN
  130 LON0 = PAKR (BUFF(5))
      LAT0 = PAKR (BUFF(6))
      X0 = BUFF(7)
      Y0 = BUFF(8)
      SINPHI = DSIN (LAT1)
      COSPHI = DCOS (LAT1)
      MS1 = MSFN (E,SINPHI,COSPHI)
      ML1 = MLFN (E0,E1,E2,LAT1)
      IND = 0
      IF (BUFF(9) .NE. ZERO) GO TO 140
      NS = SINPHI
      GO TO 160
  140 IND = 1
      SINPHI = DSIN (LAT2)
      COSPHI = DCOS (LAT2)
      MS2 = MSFN (E,SINPHI,COSPHI)
      ML2 = MLFN (E0,E1,E2,LAT2)
      IF (DABS(LAT1-LAT2) .GE. EPSLN) GO TO 150
      NS = SINPHI
      GO TO 160
  150 NS = (MS1 - MS2) / (ML2 - ML1)
  160 GL = ML1 + MS1 / NS
      ML0 = MLFN (E0,E1,E2,LAT0)
      RH0 = A * (GL - ML0)
C
C LIST RESULTS OF PARAMETER INITIALIZATION.
C
      CALL RADD (LAT1,ANGS(1,1))
      CALL RADD (LAT2,ANGS(1,2))
      CALL RADD (LON0,ANGS(1,3))
      CALL RADD (LAT0,ANGS(1,4))
      IF (IND .EQ. 0) GO TO 200
      IF (IPPARM .EQ. 0) PRINT 2010, A,ES,ANGS,X0,Y0
 2010 FORMAT ('0INITIALIZATION PARAMETERS (EQUIDISTANT CONIC',
     .        ' PROJECTION)'/
     .        ' SEMI-MAJOR AXIS OF ELLIPSOID =',F12.2,' METERS'/
     .        ' ECCENTRICITY SQUARED         =',F12.9/
     .        ' LATITUDE OF 1ST ST. PARALLEL = ',A1,2I3,F7.3/
     .        ' LATITUDE OF 2ND ST. PARALLEL = ',A1,2I3,F7.3/
     .        ' LONGITUDE OF ORIGIN          = ',A1,2I3,F7.3/
     .        ' LATITUDE OF ORIGIN           = ',A1,2I3,F7.3/
     .        ' FALSE EASTING                =',F12.2,' METERS'/
     .        ' FALSE NORTHING               =',F12.2,' METERS')
      GO TO 220
  200 IF (IPPARM .EQ. 0) PRINT 2020, A,ES,ANG1,ANG2,X0,Y0
 2020 FORMAT ('0INITIALIZATION PARAMETERS (EQUIDISTANT CONIC',
     .        ' PROJECTION)'/
     .        ' SEMI-MAJOR AXIS OF ELLIPSOID =',F12.2,' METERS'/
     .        ' ECCENTRICITY SQUARED         =',F12.9/
     .        ' LATITUDE OF ST. PARALLEL     = ',A1,2I3,F7.3/
     .        ' LONGITUDE OF ORIGIN          = ',A1,2I3,F7.3/
     .        ' LATITUDE OF ORIGIN           = ',A1,2I3,F7.3/
     .        ' FALSE EASTING                =',F12.2,' METERS'/
     .        ' FALSE NORTHING               =',F12.2,' METERS')
  220 DATA(1) = A
      DATA(2) = ES
      SWITCH = ZONE
      RETURN
  240 IF (IPEMSG .EQ. 0) PRINT 2030
 2030 FORMAT ('0ERROR PJ08I'/
     .        ' MISSING PROJECTION PARAMETERS')
      IERROR = 082
      RETURN
C
C ......................................................................
C                      .  INVERSE TRANSFORMATION  .
C ......................................................................
C
      ENTRY PI08I (PROJ,GEOG)
C
      IERROR = 0
      IF (SWITCH .NE. 0) GO TO 320
      IF (IPEMSG .EQ. 0) PRINT 2030
      IERROR = 084
      RETURN
  320 X = PROJ(1) - X0
      Y = RH0 - PROJ(2) + Y0
      RH = DSIGN (DSQRT (X * X + Y * Y) , NS)
      THETA = ZERO
      CON = DSIGN (ONE , NS)
      IF (RH .NE. ZERO) THETA = DATAN2 (CON * X , CON * Y)
      ML = GL - RH / A
      GEOG(2) = PHI3 (ML,E0,E1,E2)
      IF (IERROR .EQ. 0) GO TO 340
      IERROR = 085
      RETURN
  340 GEOG(1) = ADJL (LON0 + THETA / NS)
      RETURN
C
C ......................................................................
C                 .  TRANSFORMATION  COMPARISON  .
C ......................................................................
C
      ENTRY CF08(ARGS1,ARGS2,SAME)
C
      SAME = .TRUE.
C
C test if different type A or B
C
      IF ( (ARGS1(9).EQ.0D0 .AND. ARGS2(9).NE.0D0) .OR.
     &     (ARGS1(9).NE.0D0 .AND. ARGS2(9).EQ.0D0) ) GOTO 810
C
C semi-major axis
      IF ( DABS(ARGS1(1)-ARGS2(1)) .GT. 0.1D-3) GOTO 810
C
C eccentricity or semi-minor axis converted to eccentricity
      IF (ARGS1(2).GT.1D0) ARGS1(2) = 1D0 - ARGS1(2)*ARGS1(2) /
     &						ARGS1(1)*ARGS1(1)
C
      IF (ARGS2(2).GT.1D0) ARGS2(2) = 1D0 - ARGS2(2)*ARGS2(2) /
     &						ARGS2(1)*ARGS2(1)
C
      IF ( DABS(ARGS1(2)-ARGS2(2)) .GT. 0.1D-11) GOTO 810
C
C standard parallel(s), central meridian, proj orig
C
      DO 801 I = 3,6
C
C not used in type a
C
	 IF (I.EQ.4 .AND. ARGS1(9).EQ.0D0) GOTO 801
C
	 SEC1 = PAKS(ARGS1(I))
	 SEC2 = PAKS(ARGS2(I))
C
         IF ( DABS(SEC1-SEC2) .GT. 0.1D-3) GOTO 810
801   CONTINUE
C
C eastings, northings
C
      DO 802 I = 7,8
         IF ( DABS(ARGS1(I)-ARGS2(I)) .GT. 0.1D-3) GOTO 810
802   CONTINUE
      GOTO 820
C
810   SAME=.FALSE.
C
820   RETURN
      END
C
