C                   PJ03I
C **********************************************************************
C ** U.S.G.S. GENERAL MAP PROJECTION PACKAGE ...... DR. A. A. ELASSAL **
C **          MATHEMATICAL ANALYSIS BY JOHN SNYDER                    **
C ** MODULE I                VERSION 1.0.0            NOVEMBER 1,1980 **
C **********************************************************************
C
CMOD	PJ03I created from PJ03F for inverse transformation
C	Add CF03 to compare two projection parameter sets
C						J Barber 20-Oct-1993
C
C                    *  ALBERS CONICAL EQUAL AREA  *
C **********************************************************************
C
	SUBROUTINE PJ03I
C
C ***	IDENT   24OC95
C ***	MODULE  PJ03I
C
      IMPLICIT DOUBLE PRECISION (A-Z)
C
      DOUBLE PRECISION ARGS1(15),ARGS2(15)
      INTEGER IERROR,IPEMSG,IPPARM
      INTEGER SWITCH,ZONE,ANGS,INFILE,I
      LOGICAL SAME
C
      COMMON /ELLP/ AZ,EZ,ESZ,E0Z,E1Z,E2Z,E3Z
C **** PARAMETERS **** A,E,ES,LAT1,LAT2,LON0,LAT0,X0,Y0,NS,C,RH0 *******
      COMMON /ERRM/ IERROR
      COMMON /PRIN/ IPEMSG,IPPARM
      COMMON /WRK0/ BUFF(15),ANGS(4,4)
C
      DOUBLE PRECISION DATA(1),GEOG(1),PROJ(1)
C
      DATA TOL,EPSLN /1.0D-7,1.0D-10/
      DATA HALFPI /1.5707963267948966D0/
      DATA ZERO,HALF,ONE /0.0D0,0.5D0,1.0D0/
      DATA SWITCH /0/
C
C ......................................................................
C      .  INITIALIZATION OF PROJECTION PARAMETERS (ENTRY INPUT)  .
C ......................................................................
C
      ENTRY IS03I (ZONE,DATA)
C
      IERROR = 0
      IF (SWITCH.NE.0 .AND. SWITCH.EQ.ZONE) RETURN
      DO 180 I = 1,8
      BUFF(I) = DATA(I)
  180 CONTINUE
      GO TO 020
C
C ......................................................................
C       .  INITIALIZATION OF PROJECTION PARAMETERS (FILE INPUT)  .
C ......................................................................
C
      ENTRY IF03I (INFILE,DATA)
C
      IERROR = 0
      READ (INFILE,END=160) ZONE,BUFF
      IF (SWITCH.NE.0 .AND. SWITCH.EQ.ZONE) RETURN
  020 IF (BUFF(1) .LE. ZERO) GO TO 100
      A = BUFF(1)
      B = BUFF(2)
      IF (B .GT. ZERO) GO TO 040
      E = ZERO
      ES = ZERO
      GO TO 120
  040 IF (B .GT. ONE) GO TO 060
      E = DSQRT (B)
      ES = B
      GO TO 120
  060 ES = ONE - (B / A) ** 2
      E = DSQRT (ES)
      GO TO 120
  100 A = AZ
      E = EZ
      ES = ESZ
  120 LAT1 = PAKR (BUFF(3))
      LAT2 = PAKR (BUFF(4))
      IF (DABS(LAT1+LAT2) .GE. EPSLN) GO TO 130
      IF (IPEMSG .EQ. 0) PRINT 2000
 2000 FORMAT ('0ERROR PJ03I'/
     .        ' EQUAL LATITUDES FOR ST. PARALLELS ON OPPOSITE',
     .        ' SIDES OF EQUATOR')
      IERROR = 031
      RETURN
  130 LON0 = PAKR (BUFF(5))
      LAT0 = PAKR (BUFF(6))
      X0 = BUFF(7)
      Y0 = BUFF(8)
      SINPHI = DSIN (LAT1)
      CON = SINPHI
      COSPHI = DCOS (LAT1)
      MS1 = MSFN (E,SINPHI,COSPHI)
      QS1 = QSFN (E,SINPHI,COSPHI)
      SINPHI = DSIN (LAT2)
      COSPHI = DCOS (LAT2)
      MS2 = MSFN (E,SINPHI,COSPHI)
      QS2 = QSFN (E,SINPHI,COSPHI)
      SINPHI = DSIN (LAT0)
      COSPHI = DCOS (LAT0)
      QS0 = QSFN (E,SINPHI,COSPHI)
      IF (DABS(LAT1-LAT2) .GE. EPSLN) GO TO 140
      NS = CON
      GO TO 150
  140 NS = (MS1 * MS1 - MS2 * MS2) / (QS2 - QS1)
  150 C = MS1 * MS1 + NS * QS1
      RH0 = A * DSQRT (C - NS * QS0) / NS
C
C LIST RESULTS OF PARAMETER INITIALIZATION.
C
      CALL RADD (LAT1,ANGS(1,1))
      CALL RADD (LAT2,ANGS(1,2))
      CALL RADD (LON0,ANGS(1,3))
      CALL RADD (LAT0,ANGS(1,4))
      IF (IPPARM .EQ. 0) PRINT 2010, A,ES,ANGS,X0,Y0
 2010 FORMAT ('0INITIALIZATION PARAMETERS (ALBERS CONICAL EQUAL-AREA',
     .        ' PROJECTION)'/
     .        ' SEMI-MAJOR AXIS OF ELLIPSOID =',F12.2,' METERS'/
     .        ' ECCENTRICITY SQUARED         =',F12.9/
     .        ' LATITUDE OF 1ST ST. PARALLEL = ',A1,2I3,F7.3/
     .        ' LATITUDE OF 2ND ST. PARALLEL = ',A1,2I3,F7.3/
     .        ' LONGITUDE OF ORIGIN          = ',A1,2I3,F7.3/
     .        ' LATITUDE OF ORIGIN           = ',A1,2I3,F7.3/
     .        ' FALSE EASTING                =',F12.2,' METERS'/
     .        ' FALSE NORTHING               =',F12.2,' METERS')
      DATA(1) = A
      DATA(2) = ES
      SWITCH = ZONE
      RETURN
  160 IF (IPEMSG .EQ. 0) PRINT 2020
 2020 FORMAT ('0ERROR PJ03I'/
     .        ' MISSING PROJECTION PARAMETERS')
      IERROR = 032
      RETURN
C
C ......................................................................
C                      .  INVERSE TRANSFORMATION  .
C ......................................................................
C
      ENTRY PI03I (PROJ,GEOG)
C
      IERROR = 0
      IF (SWITCH .NE. 0) GO TO 240
      IF (IPEMSG .EQ. 0) PRINT 2020
      IERROR = 034
      RETURN
  240 X = PROJ(1) - X0
      Y = RH0 - PROJ(2) + Y0
      RH = DSIGN (DSQRT (X * X + Y * Y) , NS)
      THETA = ZERO
      CON = DSIGN (ONE , NS)
      IF (RH .NE. ZERO) THETA = DATAN2 (CON * X , CON * Y)
      CON = RH * NS / A
      QS = (C - CON * CON) / NS
      IF (E .LT. TOL) GO TO 260
      CON = ONE - HALF * (ONE - ES) * DLOG ((ONE - E) /
     .      (ONE + E)) / E
      IF ((DABS(CON) - DABS(QS)) .GT. TOL) GO TO 260
      GEOG(2) = DSIGN (HALFPI , QS)
      GO TO 280
  260 GEOG(2) = PHI1 (E,QS)
      IF (IERROR .EQ. 0) GO TO 280
      IERROR = 035
      RETURN
  280 GEOG(1) = ADJL (THETA / NS + LON0)
      RETURN
C
C ......................................................................
C                 .  TRANSFORMATION  COMPARISON  .
C ......................................................................
C
      ENTRY CF03(ARGS1,ARGS2,SAME)
C
      SAME = .TRUE.
C
C semi-major axis
      IF ( DABS(ARGS1(1)-ARGS2(1)) .GT. 0.1D-3) GOTO 810
C
C eccentricity or semi-minor axis converted to eccentricity
      IF (ARGS1(2).GT.1D0) ARGS1(2) = 1D0 - ARGS1(2)*ARGS1(2) /
     &						ARGS1(1)*ARGS1(1)
C
      IF (ARGS2(2).GT.1D0) ARGS2(2) = 1D0 - ARGS2(2)*ARGS2(2) /
     &						ARGS2(1)*ARGS2(1)
C
      IF ( DABS(ARGS1(2)-ARGS2(2)) .GT. 0.1D-11) GOTO 810
C
C standard parallels, central meridian, proj orig
C
      DO 801 I = 3,6
	 SEC1 = PAKS(ARGS1(I))
	 SEC2 = PAKS(ARGS2(I))
C
         IF ( DABS(SEC1-SEC2) .GT. 0.1D-3) GOTO 810
801   CONTINUE
C
C eastings, northings
C
      DO 802 I = 7,8
         IF ( DABS(ARGS1(I)-ARGS2(I)) .GT. 0.1D-4) GOTO 810
802   CONTINUE
      GOTO 820
C
810   SAME=.FALSE.
C
820   RETURN
      END
C
