C                   PJ19F
C **********************************************************************
C ** U.S.G.S. GENERAL MAP PROJECTION PACKAGE ...... DR. A. A. ELASSAL **
C **          MATHEMATICAL ANALYSIS BY JOHN SNYDER                    **
C ** MODULE I                VERSION 1.0.1            MAY 1, 1981 ******
C **********************************************************************
C                        *  VAN DER GRINTEN I  *
C **********************************************************************
C
CMOD    Converted to Fortran77 (WI/CC 1514)      T.J.Mulcahy 24-Oct-1995
C
      SUBROUTINE PJ19F
C ***	IDENT   24OC95
C ***	MODULE  PJ19F
C
      IMPLICIT DOUBLE PRECISION (A-Z)
C
      INTEGER IERROR,IPEMSG,IPPARM
      INTEGER SWITCH,I,ZONE,ANGS,NIT,INFILE
C
      COMMON /SPHR/ AZZ
C **** PARAMETERS **** A,LON0,X0,Y0 ************************************
      COMMON /ERRM/ IERROR
      COMMON /PRIN/ IPEMSG,IPPARM
      COMMON /WRK0/ BUFF(15),ANGS(4)
C
      DOUBLE PRECISION DATA(1),GEOG(1),PROJ(1)
C
      DATA PI /3.14159265358979323846D0/
      DATA HALFPI /1.5707963267948966D0/
C
C **************** correction by RWR      Laserscan	14-Oct-91 ********
C
C the tolerance EPSLN is too small to prevent floating overflow on the VAX
C
C      DATA EPSLN,TOL,NIT /1.0D-10,0.7D0,35/
      DATA EPSLN,TOL,NIT /1.0D-9,0.7D0,35/
C
C *********************** end of correction  ********************
C
      DATA ZERO,HALF,ONE,TWO,FOUR /0.0D0,0.5D0,1.0D0,2.0D0,4.0D0/
      DATA SWITCH /0/
C
C ......................................................................
C      .  INITIALIZATION OF PROJECTION PARAMETERS (ENTRY INPUT)  .
C ......................................................................
C
      ENTRY IS19F (ZONE,DATA)
C
      IERROR = 0
      IF (SWITCH.NE.0 .AND. SWITCH.EQ.ZONE) RETURN
      DO 080 I = 1,8
      BUFF(I) = DATA(I)
  080 CONTINUE
      GO TO 020
C
C ......................................................................
C       .  INITIALIZATION OF PROJECTION PARAMETERS (FILE INPUT)  .
C ......................................................................
C
      ENTRY IF19F (INFILE)
C
      IERROR = 0
      READ (INFILE,END=060) ZONE,BUFF
      IF (SWITCH.NE.0 .AND. SWITCH.EQ.ZONE) RETURN
  020 A = BUFF(1)
      IF (A .LE. ZERO) A = AZZ
      LON0 = PAKR (BUFF(5))
      X0 = BUFF(7)
      Y0 = BUFF(8)
C
C LIST RESULTS OF PARAMETER INITIALIZATION.
C
      CALL RADD (LON0,ANGS)
      IF (IPPARM .EQ. 0) PRINT 2000, A,ANGS,X0,Y0
 2000 FORMAT ('0INITIALIZATION PARAMETERS (VAN DER GRINTEN I',
     .        ' PROJECTION)'/
     .        ' RADIUS OF SPHERE             =',F12.2,' METERS'/
     .        ' LONGITUDE OF C. MERIDIAN     = ',A1,2I3,F7.3/
     .        ' FALSE EASTING                =',F12.2,' METERS'/
     .        ' FALSE NORTHING               =',F12.2,' METERS')
      DATA(1) = A
      SWITCH = ZONE
      RETURN
  060 IF (IPEMSG .EQ. 0) PRINT 2010
 2010 FORMAT ('0ERROR PJ19F'/
     .        ' MISSING PROJECTION PARAMETERS')
      IERROR = 191
      RETURN
C
C ......................................................................
C                      .  FORWARD TRANSFORMATION  .
C ......................................................................
C
      ENTRY PF19F (GEOG,PROJ)
C
      IERROR = 0
      IF (SWITCH .NE. 0) GO TO 120
      IF (IPEMSG .EQ. 0) PRINT 2010
      IERROR = 192
      RETURN
  120 LON = ADJL (GEOG(1) - LON0)
      LAT = GEOG(2)
      IF (DABS(LAT) .GT. EPSLN) GO TO 140
      PROJ(1) = X0 + A * LON
      PROJ(2) = Y0
      RETURN
  140 THETA = DARSIN (DABS (LAT /HALFPI))
      IF (DABS(LON) .GT. EPSLN) GO TO 160
      PROJ(1) = X0
      PROJ(2) = Y0 + PI * A * DSIGN( DTAN (HALF * THETA), LAT)
      RETURN
  160 AL = HALF * DABS (PI / LON - LON / PI)
      ASQ = AL * AL
      SINTHT = DSIN (THETA)
      COSTHT = DCOS (THETA)
      G = COSTHT / (SINTHT + COSTHT - ONE)
      GSQ = G * G
      M = G * (TWO / SINTHT - ONE)
      MSQ = M * M
C
C **************** correction by RWR      Laserscan	14-Oct-91 ********
C
C for small THETAs, the following expression "floating overflows" - so
C divide top and bottom of expression by MSQ
C      CON = PI * A * (AL * (G - MSQ) + DSQRT (ASQ * (G - MSQ)**2 -
C     .      (MSQ + ASQ) * (GSQ - MSQ))) / (MSQ + ASQ)
C
C
      CON = PI * A * (AL * (G/MSQ - ONE) +
     .      DSQRT (ASQ * (G/MSQ - ONE)**2 -
     .      (ONE + ASQ/MSQ) * (GSQ/MSQ - ONE))) / (ONE + ASQ/MSQ)
C
C *********************** end of correction  ********************
C
      CON = DSIGN (CON , LON)
      PROJ(1) = X0 + CON
C
C **************** correction by RWR      Laserscan	14-Oct-91 ********
C
C for small latitudes, this expression goes haywire
C      CON = DABS (CON / (PI * A))
C      PROJ(2) = Y0 + DSIGN (PI * A * DSQRT (ONE - CON * CON -
C     .          TWO * AL * CON) , LAT)
C      
      Q = ASQ + G
      QSQ = Q**2
      CON = ( Q / M - AL /M *
     .      DSQRT((ASQ + ONE) * (ONE + ASQ/MSQ) - QSQ/MSQ)) /
     .       (ONE + ASQ/MSQ)
      PROJ(2) = Y0 + DSIGN (PI * A * CON , LAT)
C
C *********************** end of correction  ********************
C
      RETURN
C
      END

