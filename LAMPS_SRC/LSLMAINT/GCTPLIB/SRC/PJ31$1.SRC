C                   PJ31I
C **********************************************************************
C                       *  dummy *
C **********************************************************************
C
	SUBROUTINE PJ31I
C
C ***	IDENT   26OC95
C ***	MODULE  PJ31I
C
C Copyright Laser-Scan Ltd., Cambridge, England
C
C       Author 				               R.W.Russell 11-Feb-1993
C
CMOD    Add new dummy *31I* entry points               T.J.Mulcahy 22-Jun-1995
C       (WI/CC 1500)
C
      IMPLICIT DOUBLE PRECISION (A-Z)
C
      DOUBLE PRECISION ARGS1(15),ARGS2(15)
      INTEGER IERROR,IPEMSG,IPPARM
      INTEGER SWITCH,ZONE,ANGS,INFILE,IND,NIT,I
      LOGICAL SAME
C
      COMMON /ELLP/ AZ,EZ,ESZ,E0Z,E1Z,E2Z,E3Z
C **** PARAMETERS **** A,E,ES,KS0,LON0,LAT0,X0,Y0,E0,E1,E2,ML0,IND *
      COMMON /ERRM/ IERROR
      COMMON /PRIN/ IPEMSG,IPPARM
      COMMON /WRK0/ BUFF(15),ANGS(4,2)
C
      DIMENSION DATA(15),GEOG(1),PROJ(1)
C
      DATA ZERO,HALF,ONE,TWO,THREE /0.0D0,0.5D0,1.0D0,2.0D0,3.0D0/
      DATA FOUR,FIVE,SIX,EIGHT,NINE /4.0D0,5.0D0,6.0D0,8.0D0,9.0D0/
      DATA HALFPI /1.5707963267948966D0/
      DATA TEN /10.0D0/
      DATA TOL,EPSLN,NIT /1.0D-5,1.0D-10,6/
      DATA SWITCH /0/
C
C ......................................................................
C      .  INITIALIZATION OF PROJECTION PARAMETERS (ENTRY INPUT)  .
C ......................................................................
C
      ENTRY IS31I (ZONE,DATA)
C
      IERROR = 0
      IF (SWITCH.NE.0 .AND. SWITCH.EQ.ZONE) RETURN
      DO 180 I = 1,8
      BUFF(I) = DATA(I)
  180 CONTINUE
      GO TO 020
C
C ......................................................................
C       .  INITIALIZATION OF PROJECTION PARAMETERS (FILE INPUT)  .
C ......................................................................
C
      ENTRY IF31I (INFILE)
C
      IERROR = 0
      READ (INFILE,END=160) ZONE,BUFF
      IF (SWITCH.NE.0 .AND. SWITCH.EQ.ZONE) RETURN
  020 IF (BUFF(1) .LE. ZERO) GO TO 100
      A = BUFF(1)
      B = BUFF(2)
      IF (B .GT. ZERO) GO TO 040
      E = ZERO
      ES = ZERO
      E0 = ONE
      E1 = ZERO
      E2 = ZERO
      GO TO 120
  040 IF (B .GT. ONE) GO TO 060
      E = DSQRT (B)
      ES = B
      GO TO 080
  060 ES = ONE - (B / A) ** 2
      E = DSQRT (ES)
  080 E0 = E0FN (ES)
      E1 = E1FN (ES)
      E2 = E2FN (ES)
      GO TO 120
  100 A = AZ
      E = EZ
      ES = ESZ
      E0 = E0Z
      E1 = E1Z
      E2 = E2Z
  120 LON0 = PAKR (BUFF(5))
      LAT0 = PAKR (BUFF(6))
      X0 = BUFF(7)
      Y0 = BUFF(8)
      ML0 = A * MLFN (E0,E1,E2,LAT0)
      IND = 1
      IF (E .LT. TOL) GO TO 130
      IND = 0
C
C LIST RESULTS OF PARAMETER INITIALIZATION.
C
  130 CALL RADD (LON0,ANGS(1,1))
      CALL RADD (LAT0,ANGS(1,2))
      IF (IPPARM .EQ. 0) PRINT 2000, A,ES,ANGS,X0,Y0
 2000 FORMAT ('0INITIALIZATION PARAMETERS (dummy',
     .        ' PROJECTION)'/
     .        ' SEMI-MAJOR AXIS OF ELLIPSOID =',F12.2,' METERS'/
     .        ' ECCENTRICITY SQUARED         =',F12.9/
     .        ' LONGITUDE OF C. MERIDIAN     = ',A1,2I3,F7.3/
     .        ' LATITUDE OF ORIGIN           = ',A1,2I3,F7.3/
     .        ' FALSE EASTING                =',F12.2,' METERS'/
     .        ' FALSE NORTHING               =',F12.2,' METERS')
      DATA(1) = A
      DATA(2) = ES
      SWITCH = ZONE
      RETURN
  160 IF (IPEMSG .EQ. 0) PRINT 2010
 2010 FORMAT ('0ERROR PJ31I'/
     .        ' MISSING PROJECTION PARAMETERS')
      IERROR = 311
      RETURN
C
C ......................................................................
C                      .  INVERSE TRANSFORMATION  .
C ......................................................................
C
      ENTRY PI31I (PROJ,GEOG)
C
      IERROR = 0
      IF (SWITCH .NE. 0) GO TO 320
      IF (IPEMSG .EQ. 0) PRINT 2010
      IERROR = 314
      RETURN
  320 X = PROJ(1) - X0
      Y = PROJ(2) - Y0
      IF (IND .EQ. 0) GO TO 340
      D = Y/A + LAT0
      G = TAN(X/A)
      H = DCOS (D)
      GEOG(2) = DARSIN (SIN(D) * COS(X/A))
CCC      IF ((LAT0 + Y / A) .LT. ZERO)
CCC     .            GEOG(2) = -GEOG(2)      
C 
      IF (G.NE.ZERO .OR. H.NE.ZERO) GO TO 330
      GEOG(1) = LON0
      RETURN
  330 GEOG(1) = ADJL (DATAN2 (G,H) + LON0)
      RETURN
C
  340 CON = (ML0 + Y ) / A
      PHI = CON
      DO 360 I = 1,NIT
      DPHI = ((CON + E1 * DSIN (TWO * PHI) - E2 * DSIN (FOUR * PHI)) /
     .       E0) - PHI
      PHI = PHI + DPHI
      IF (DABS(DPHI) .LE. EPSLN) GO TO 380
  360 CONTINUE
      IF (IPEMSG .EQ. 0) PRINT 2030, NIT
 2030 FORMAT ('0ERROR PI31I' /
     .        ' LATITUDE FAILED TO CONVERGE AFTER',I3,' ITERATIONS')
      IERROR = 315
      RETURN
  380 IF (DABS(PHI) .LT. HALFPI) GO TO 400
      GEOG(2) = DSIGN (HALFPI , Y)
      GEOG(1) = LON0
      RETURN
  400 SINPHI = DSIN (PHI)
      COSPHI = DCOS (PHI)
      TANPHI = DTAN (PHI)
      T = TANPHI * TANPHI
      TS = T * T
      CON = ONE - ES * SINPHI * SINPHI
      N = A / DSQRT (CON)
      R = N * (ONE - ES) / CON
      D = X / N 
      DS = D * D
      GEOG(2) = PHI - (N * TANPHI * DS / R) * (HALF - DS / 24.0D0 *
     .          (ONE + THREE * T))
      GEOG(1) = ADJL (LON0 + (D * (ONE - T * DS / THREE * 
     .          (ONE + (ONE + THREE*T) * DS /FIVE)))/COSPHI)
      RETURN
C
C ......................................................................
C                 .  TRANSFORMATION  COMPARISON  .
C ......................................................................
C
      ENTRY CF31(ARGS1,ARGS2,SAME)
C
      SAME = .TRUE.
C
      DO 800 I = 1,15
         IF (ARGS1(I).NE.ARGS2(I)) GOTO 810
800   CONTINUE
      GOTO 820
C
810   SAME=.FALSE.
C
820   RETURN
      END
C
