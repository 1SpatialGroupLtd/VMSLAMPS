C *********************************************************************
C * U.S.G.S. GENERAL TRANSFORMATION PACKAGE                           *
C * MODULE II                                                         *
C *********************************************************************
C
CMOD    Converted to Fortran77 (WI/CC 1514)              TJM 26-Oct-1995
C
      SUBROUTINE RGNT (NAMESB,IFLG)
C ***	IDENT   26OC95
C ***	MODULE  RGNT
C
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
C
      COMMON /APPC/ TPARB(15),TPART(15),TPARS(15),TOLREN,
     .              BOUNDR(2,10),NBOUND,ISYSB,IZONEB,
     .              IUNITB,ISYST,IZONET,IUNITT,ISYSS,IZONES,
     .              IUNITS,MAXSPN,NPTRNX,NPTRNY
      COMMON /PRJC/ SOURCE(2,100),TARGET(2,100),TOLRNC,NPT,MAXPNT
      COMMON /TRNC/ TPARAM(10,100),ORIGIN(2),EXTENT(2),CELLSZ(2),
     .              NSPAN(2),MAXPAR
C
      DOUBLE PRECISION XYSMAX(2),SPAN(2),XY(2)
      INTEGER NAMES(3)
      EQUIVALENCE (X,XY(1)), (Y,XY(2))
C
      DATA NAMES /'APPT','CRDT','PROJ'/
      DATA ZERO /0.0D0/
C
C CHECK INPUT DATA VALIDITY
C
      MAXPAR = 100
      MAXPNT = 100
      TOLRNC = TOLREN
      IF (NBOUND .LT. 4) GOTO 20
      IF (NPTRNX.LT.2 .OR. NPTRNY.LT.2) GOTO 20
      IF (MAXSPN.LT.1) GO TO 20
      IF (NPTRNX*NPTRNY .LE. MAXPNT) GO TO 40
20    NAMESB = NAMES(1)
      IFLG = 2
      RETURN
40    CALL GTRN (BOUNDR,ISYSB,IZONEB,TPARB,IUNITB,ORIGIN,
     .           ISYSS,IZONES,TPARS,IUNITS,IFLG)
      IF (IFLG .EQ. 0) GO TO 80
60    NAMESB = NAMES(2)
      RETURN
C
C DETERMINE RECTANGULAR BOUNDRIES OF SPECIAL DOMAIN.
C
80    XYSMAX(1) = ORIGIN(1)
      XYSMAX(2) = ORIGIN(2)
      DO 100 I=2,NBOUND
      CALL GTRN (BOUNDR(1,1),ISYSB,IZONEB,TPARB,IUNITB,XY,
     .           ISYSS,IZONES,TPARS,IUNITS,IFLG)
      IF (IFLG.NE.0) GO TO 60
      ORIGIN(1) = DMIN1(ORIGIN(1),X)
      ORIGIN(2) = DMIN1(ORIGIN(2),Y)
      XYSMAX(1) = DMAX1(XYSMAX(1),X)
      XYSMAX(2) = DMAX1(XYSMAX(2),Y)
100   CONTINUE
      SPAN(1)=XYSMAX(1)-ORIGIN(1)
      SPAN(2)=XYSMAX(2)-ORIGIN(2)
      IF (SPAN(1) .GE. SPAN(2)) GO TO 120
      IPSPAN=2
      ISSPAN=1
      GO TO 140
120   IPSPAN=1
      ISSPAN=2
C
C DIVIDE DOMAIN INTO PROGRESSIVELY SMALLER REGIONS.
C
140   DO 300 NSPANP = 1,MAXSPN
      TOLMMX = ZERO
C
C DETERMINE NOMINAL SIZE OF TRANSFORMATION CELL.
C
      CON=NSPANP
      DELP = SPAN(IPSPAN)/CON
      NSPANS = SPAN(ISSPAN)/DELP
      CON = DMOD (SPAN(ISSPAN),DELP)
      IF (CON.EQ.ZERO) NSPANS = NSPANS-1
      NSPANS=NSPANS+1
      DELS=SPAN(ISSPAN)/NSPANS
      CELLSZ(IPSPAN)=NSPANP
      CELLSZ(ISSPAN)=NSPANS
      NSPAN(IPSPAN) = NSPANP
      NSPAN(ISSPAN) = NSPANS
      EXTENT(1) = CELLSZ(1) * NSPAN(1)
      EXTENT(2) = CELLSZ(2) * NSPAN(2)
C
C FORM TABLE OF CHECK POINTS FOR EACH CELL.
C
      NSPANX = NSPAN(1)
      NSPANY = NSPAN(2)
      FACTOR = NPTRNX - 1
      DELX = CELLSZ(1)/FACTOR
      FACTOR = NPTRNY - 1
      DELY = CELLSZ(2)/FACTOR
      IDTRAN = 0
      DO 280 III=1,NSPANX
      DO 280 JJJ=1,NSPANY
      IF (IDTRAN.GE.MAXPAR) GOTO 320
      IDTRAN = IDTRAN + 1
      XO = ORIGIN(1)+CELLSZ(1)*(III-1)
      YO = ORIGIN(2)+CELLSZ(2)*(JJJ-1)
      NPT=0
      DO 200 II = 1,NPTRNX
      CON=YO
      DO 180 JJ = 1,NPTRNY
      NPT=NPT+1
      SOURCE(1,NPT)=XO
      SOURCE(2,NPT)=CON
      CALL GTRN (SOURCE(1,NPT),ISYSS,IZONES,TPARS,IUNITS,
     .           TARGET(1,NPT),ISYST,IZONET,TPART,IUNITT,IFLG)
      IF (IFLG.NE.0) GOTO 60
      CON = CON+DELY
180   CONTINUE
      XO=XO+DELX
200   CONTINUE
C
C VERIFY TOLERENCE OF TRANSFORMATION FOR CURRENT CELL SIZE.
C
      CALL PROJ (IDTRAN,TOLMAX,IFLG)
      IF (IFLG.EQ.0) GOTO 260
      NAMESB=NAMES(3)
      RETURN
260   TOLMAX=DMAX1(TOLMMX,TOLMAX)
      IF (TOLMAX.GT.TOLRNC) GO TO 300
280   CONTINUE
      TOLREN = TOLMMX
      RETURN
300   CONTINUE
C
C FAILURE TO MEET ERROR TOLERENCE.
C
320   IFLG=1
      NAMESB=NAMES(1)
      RETURN
C
      END

