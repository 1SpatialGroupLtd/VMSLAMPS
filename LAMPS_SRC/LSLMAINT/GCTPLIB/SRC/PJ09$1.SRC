C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1995-10-27 12:02:42.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
C                   PJ09I
C **********************************************************************
C ** U.S.G.S. GENERAL MAP PROJECTION PACKAGE ...... DR. A. A. ELASSAL **
C **          MATHEMATICAL ANALYSIS BY JOHN SNYDER                    **
C ** MODULE I                VERSION 1.0.2                MAY 14,1981 **
C **********************************************************************
C                       *  TRANSVERSE MARCATOR  *
C **********************************************************************
C
CMOD	PJ09I created from PJ09F for inverse transformation
C	Add CF09 to compare two projection parameter sets
C						    J Barber 20-Oct-1993
C
CMOD    Converted to Fortran77 (WI/CC 1514)      T.J.Mulcahy 24-Oct-1995
C
	SUBROUTINE PJ09I
C
C ***	IDENT   24OC95
C ***	MODULE  PJ09I
C
      IMPLICIT DOUBLE PRECISION (A-Z)
C
      DOUBLE PRECISION ARGS1(15),ARGS2(15)
      INTEGER IERROR,IPEMSG,IPPARM
      INTEGER SWITCH,ZONE,ANGS,INFILE,IND,NIT,I
      LOGICAL SAME
C
      COMMON /ELLP/ AZ,EZ,ESZ,E0Z,E1Z,E2Z,E3Z
C **** PARAMETERS **** A,E,ES,KS0,LON0,LAT0,X0,Y0,E0,E1,E2,ESP,ML0,IND *
      COMMON /ERRM/ IERROR
      COMMON /PRIN/ IPEMSG,IPPARM
      COMMON /WRK0/ BUFF(15),ANGS(4,2)
C
C ********************** correction by RWR, Laserscan  13-Jan-85 ***
C
C As this transformation is used by the UTM subroutine
C SWITCH should be held in common with that transformation, so that
C the transformation parameters can be reset if the other half of the
C transformation also uses PJ09F
C
C      DATA SWITCH /0/
	COMMON /SW09I/SWITCH
C
C *************************end of correction **********************
C
      DOUBLE PRECISION DATA(15),GEOG(1),PROJ(1)
C
      DATA ZERO,HALF,ONE,TWO,THREE /0.0D0,0.5D0,1.0D0,2.0D0,3.0D0/
      DATA FOUR,FIVE,SIX,EIGHT,NINE /4.0D0,5.0D0,6.0D0,8.0D0,9.0D0/
      DATA HALFPI /1.5707963267948966D0/
      DATA TEN /10.0D0/
      DATA TOL,EPSLN,NIT /1.0D-5,1.0D-10,6/
C
C ......................................................................
C      .  INITIALIZATION OF PROJECTION PARAMETERS (ENTRY INPUT)  .
C ......................................................................
C
      ENTRY IS09I (ZONE,DATA)
C
      IERROR = 0
C$$$$$$$$$$$$$$$$$$$$$ ADDITIONS BY J F WAANANEN 5/1/81 $$$$$$$$$$$
      IF (DATA(1).NE.0.0D0.AND.DATA(1).NE.BUFF(1)) SWITCH=0
C$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
      IF (SWITCH.NE.0 .AND. SWITCH.EQ.ZONE) RETURN
      DO 180 I = 1,8
      BUFF(I) = DATA(I)
  180 CONTINUE
      GO TO 020
C
C ......................................................................
C       .  INITIALIZATION OF PROJECTION PARAMETERS (FILE INPUT)  .
C ......................................................................
C
      ENTRY IF09I (INFILE)
C
      IERROR = 0
      READ (INFILE,END=160) ZONE,BUFF
      IF (SWITCH.NE.0 .AND. SWITCH.EQ.ZONE) RETURN
  020 IF (BUFF(1) .LE. ZERO) GO TO 100
      A = BUFF(1)
      B = BUFF(2)
      IF (B .GT. ZERO) GO TO 040
      E = ZERO
      ES = ZERO
      E0 = ONE
      E1 = ZERO
      E2 = ZERO
      GO TO 120
  040 IF (B .GT. ONE) GO TO 060
      E = DSQRT (B)
      ES = B
      GO TO 080
  060 ES = ONE - (B / A) ** 2
      E = DSQRT (ES)
  080 E0 = E0FN (ES)
      E1 = E1FN (ES)
      E2 = E2FN (ES)
      GO TO 120
  100 A = AZ
      E = EZ
      ES = ESZ
      E0 = E0Z
      E1 = E1Z
      E2 = E2Z
  120 KS0 = BUFF(3)
      LON0 = PAKR (BUFF(5))
      LAT0 = PAKR (BUFF(6))
      X0 = BUFF(7)
      Y0 = BUFF(8)
      ML0 = A * MLFN (E0,E1,E2,LAT0)
      IND = 1
      IF (E .LT. TOL) GO TO 130
      IND = 0
      ESP = ES / (ONE - ES)
C
C LIST RESULTS OF PARAMETER INITIALIZATION.
C
  130 CALL RADD (LON0,ANGS(1,1))
      CALL RADD (LAT0,ANGS(1,2))
      IF (IPPARM .EQ. 0) PRINT 2000, A,ES,KS0,ANGS,X0,Y0
 2000 FORMAT ('0INITIALIZATION PARAMETERS (TRANSVERSE MERCATOR',
     .        ' PROJECTION)'/
     .        ' SEMI-MAJOR AXIS OF ELLIPSOID =',F12.2,' METERS'/
     .        ' ECCENTRICITY SQUARED         =',F12.9/
     .        ' SCALE FACTOR AT C. MERIDIAN  =',F9.6/
     .        ' LONGITUDE OF C. MERIDIAN     = ',A1,2I3,F7.3/
     .        ' LATITUDE OF ORIGIN           = ',A1,2I3,F7.3/
     .        ' FALSE EASTING                =',F12.2,' METERS'/
     .        ' FALSE NORTHING               =',F12.2,' METERS')
      DATA(1) = A
      DATA(2) = ES
      SWITCH = ZONE
      RETURN
  160 IF (IPEMSG .EQ. 0) PRINT 2010
 2010 FORMAT ('0ERROR PJ09I'/
     .        ' MISSING PROJECTION PARAMETERS')
      IERROR = 091
      RETURN
C
C ......................................................................
C                      .  INVERSE TRANSFORMATION  .
C ......................................................................
C
      ENTRY PI09I (PROJ,GEOG)
C
      IERROR = 0
      IF (SWITCH .NE. 0) GO TO 320
      IF (IPEMSG .EQ. 0) PRINT 2010
      IERROR = 094
      RETURN
  320 X = PROJ(1) - X0
      Y = PROJ(2) - Y0
      IF (IND .EQ. 0) GO TO 340
      F = DEXP (X / (A * KS0))
      G = HALF * (F - ONE / F)
      H = DCOS (LAT0 + Y / (A * KS0))
      CON = DSQRT ((ONE - H * H) / (ONE + G * G))
      GEOG(2) = DARSIN (CON)
C
C ********************** correction by RWR, Laserscan  19-Jun-91 ***
C
C this line does not check for southern hemisphere, if the latitude of
C the origin is not the equator
C
C      IF (Y .LT. ZERO) GEOG(2) =-GEOG(2)
C
      IF ((LAT0 + Y / (A * KS0)) .LT. ZERO)
     .            GEOG(2) = -GEOG(2)      
C
C *************************end of correction **********************
C 
      IF (G.NE.ZERO .OR. H.NE.ZERO) GO TO 330
      GEOG(1) = LON0
      RETURN
  330 GEOG(1) = ADJL (DATAN2 (G,H) + LON0)
      RETURN
C
  340 CON = (ML0 + Y / KS0) / A
      PHI = CON
      DO 360 I = 1,NIT
      DPHI = ((CON + E1 * DSIN (TWO * PHI) - E2 * DSIN (FOUR * PHI)) /
     .       E0) - PHI
      PHI = PHI + DPHI
      IF (DABS(DPHI) .LE. EPSLN) GO TO 380
  360 CONTINUE
      IF (IPEMSG .EQ. 0) PRINT 2030, NIT
 2030 FORMAT ('0ERROR PI09I' /
     .        ' LATITUDE FAILED TO CONVERGE AFTER',I3,' ITERATIONS')
      IERROR = 095
      RETURN
  380 IF (DABS(PHI) .LT. HALFPI) GO TO 400
      GEOG(2) = DSIGN (HALFPI , Y)
      GEOG(1) = LON0
      RETURN
  400 SINPHI = DSIN (PHI)
      COSPHI = DCOS (PHI)
      TANPHI = DTAN (PHI)
      C = ESP * COSPHI * COSPHI
      CS = C * C
      T = TANPHI * TANPHI
      TS = T * T
      CON = ONE - ES * SINPHI * SINPHI
      N = A / DSQRT (CON)
      R = N * (ONE - ES) / CON
      D = X / (N * KS0)
      DS = D * D
      GEOG(2) = PHI - (N * TANPHI * DS / R) * (HALF - DS / 24.0D0 *
     .          (FIVE + THREE * T + TEN * C - FOUR * CS - NINE * ESP -
     .          DS / 30.0D0 * (61.0D0 + 90.0D0 * T + 298.0D0 * C +
     .          45.0D0 * TS - 252.0D0 * ESP - THREE * CS)))
      GEOG(1) = ADJL (LON0 + (D * (ONE - DS / SIX * (ONE + TWO *
     .          T + C - DS / 20.0D0 * (FIVE - TWO * C + 28.0D0 * T -
     .          THREE * CS + EIGHT * ESP + 24.0D0 * TS))) / COSPHI))
      RETURN
C
C ......................................................................
C                 .  TRANSFORMATION  COMPARISON  .
C ......................................................................
C
      ENTRY CF09(ARGS1,ARGS2,SAME)
C
      SAME = .TRUE.
C
C semi-major axis
      IF ( DABS(ARGS1(1)-ARGS2(1)) .GT. 0.1D-3) GOTO 810
C
C eccentricity or semi-minor axis converted to eccentricity
      IF (ARGS1(2).GT.1D0) ARGS1(2) = 1D0 - ARGS1(2)*ARGS1(2) /
     &						ARGS1(1)*ARGS1(1)
C
      IF (ARGS2(2).GT.1D0) ARGS2(2) = 1D0 - ARGS2(2)*ARGS2(2) /
     &						ARGS2(1)*ARGS2(1)
C
      IF ( DABS(ARGS1(2)-ARGS2(2)) .GT. 0.1D-11) GOTO 810
C
C scale factor
      IF ( DABS(ARGS1(3)-ARGS2(3)) .GT. 0.1D-9) GOTO 810
C
C central meridian, proj orig
C
      DO 801 I = 5,6
	 SEC1 = PAKS(ARGS1(I))
	 SEC2 = PAKS(ARGS2(I))
C
         IF ( DABS(SEC1-SEC2) .GT. 0.1D-3) GOTO 810
801   CONTINUE
C
C eastings, northings
C
      DO 802 I = 7,8
         IF ( DABS(ARGS1(I)-ARGS2(I)) .GT. 0.1D-3) GOTO 810
802   CONTINUE
      GOTO 820
C
810   SAME=.FALSE.
C
820   RETURN
      END
C
