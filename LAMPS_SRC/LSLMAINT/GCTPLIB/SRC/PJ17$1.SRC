C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1995-10-27 11:27:22.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
C                   PJ17I
C **********************************************************************
C ** U.S.G.S. GENERAL MAP PROJECTION PACKAGE ...... DR. A. A. ELASSAL **
C **          MATHEMATICAL ANALYSIS BY JOHN SNYDER                    **
C ** MODULE I                VERSION 1.0.1            MAY 1 ,1981 ******
C **********************************************************************
C                  *  EQUIRECTANGULAR   *
C **********************************************************************
C
CMOD	PJ17I created from PJ17F for inverse transformation
C	Add CF17 to compare two projection parameter sets
C						    J Barber 20-Oct-1993
C
CMOD    Converted to Fortran77 (WI/CC 1514)      T.J.Mulcahy 24-Oct-1995
C
	SUBROUTINE PJ17I
C
C ***	IDENT   24OC95
C ***	MODULE  PJ17I
C
      IMPLICIT DOUBLE PRECISION (A-Z)
C
      DOUBLE PRECISION ARGS1(15),ARGS2(15)
      INTEGER IERROR,IPEMSG,IPPARM
      INTEGER SWITCH,ZONE,ANGS,INFILE,I
      LOGICAL SAME
C
      COMMON /SPHR/ AZZ
C **** PARAMETERS **** A,LON0,X0,Y0,LAT1 *******************************
      COMMON /ERRM/ IERROR
      COMMON /PRIN/ IPEMSG,IPPARM
      COMMON /WRK0/ BUFF(15),ANGS(4,2)
C
      DOUBLE PRECISION DATA(1),GEOG(1),PROJ(1)
C
      DATA HALFPI /1.5707963267948966D0/
      DATA ZERO /0.0D0/
      DATA SWITCH /0/
C
C ......................................................................
C      .  INITIALIZATION OF PROJECTION PARAMETERS (ENTRY INPUT)  .
C ......................................................................
C
      ENTRY IS17I (ZONE,DATA)
C
      IERROR = 0
      IF (SWITCH.NE.0 .AND. SWITCH.EQ.ZONE) RETURN
      DO 080 I = 1,8
      BUFF(I) = DATA(I)
  080 CONTINUE
      GO TO 020
C
C ......................................................................
C       .  INITIALIZATION OF PROJECTION PARAMETERS (FILE INPUT)  .
C ......................................................................
C
      ENTRY IF17I (INFILE)
C
      IERROR = 0
      READ (INFILE,END=060) ZONE,BUFF
      IF (SWITCH.NE.0 .AND. SWITCH.EQ.ZONE) RETURN
  020 A = BUFF(1)
      IF (A .LE. ZERO) A = AZZ
      LAT1 = PAKR (BUFF(6))
      LON0 = PAKR (BUFF(5))
      X0 = BUFF(7)
      Y0 = BUFF(8)
C
C LIST RESULTS OF PARAMETER INITIALIZATION.
C
      CALL RADD (LAT1,ANGS(1,1))
      CALL RADD (LON0,ANGS(1,2))
      IF (IPPARM .EQ. 0) PRINT 2000, A,ANGS,X0,Y0
 2000 FORMAT ('0INITIALIZATION PARAMETERS (EQUIRECTANGULAR PROJECTION)'/
     .        ' RADIUS OF SPHERE             =',F12.2,' METERS'/
     .        ' LATITUDE OF TRUE SCALE       = ',A1,2I2,F7.3/
     .        ' LONGITUDE OF C. MERIDIAN     = ',A1,2I3,F7.3/
     .        ' FALSE EASTING                =',F12.2,' METERS'/
     .        ' FALSE NORTHING               =',F12.2,' METERS')
      DATA(1) = A
      SWITCH = ZONE
      RETURN
  060 IF (IPEMSG .EQ. 0) PRINT 2010
 2010 FORMAT ('0ERROR PJ17I'/
     .        ' MISSING PROJECTION PARAMETERS')
      IERROR = 171
      RETURN
C
C ......................................................................
C                      .  INVERSE TRANSFORMATION  .
C ......................................................................
C
      ENTRY PI17I (PROJ,GEOG)
C
      IERROR = 0
      IF (SWITCH .NE. 0) GO TO 220
      IF (IPEMSG .EQ. 0) PRINT 2010
      IERROR = 173
      RETURN
  220 X = PROJ(1) - X0
      Y = PROJ(2) - Y0
      GEOG(2) = Y / A
      IF (DABS(GEOG(2)) .LE. HALFPI) GO TO 240
      IF (IPEMSG .EQ. 0) PRINT 2020
 2020 FORMAT ('0ERROR PJ17I'/
     .        ' INPUT DATA ERROR')
      IERROR = 174
      RETURN
  240 GEOG(1) = ADJL (LON0 + X / (A * DCOS(LAT1) ))
      RETURN
C
C ......................................................................
C                 .  TRANSFORMATION  COMPARISON  .
C ......................................................................
C
      ENTRY CF17(ARGS1,ARGS2,SAME)
C
      SAME = .TRUE.
C
C radius of sphere of ref
      IF ( DABS(ARGS1(1)-ARGS2(1)) .GT. 0.1D-3) GOTO 810
C
C central meridian, true scale
C
      DO 801 I = 5,6
	 SEC1 = PAKS(ARGS1(I))
	 SEC2 = PAKS(ARGS2(I))
C
         IF ( DABS(SEC1-SEC2) .GT. 0.1D-3) GOTO 810
801   CONTINUE
C
C eastings, northings
C
      DO 802 I = 7,8
         IF ( DABS(ARGS1(I)-ARGS2(I)) .GT. 0.1D-3) GOTO 810
802   CONTINUE
      GOTO 820
C
810   SAME=.FALSE.
C
820   RETURN
      END
C
