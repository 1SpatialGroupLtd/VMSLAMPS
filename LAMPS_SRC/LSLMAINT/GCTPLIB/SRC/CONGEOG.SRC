C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1995-11-02 13:12:26.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	DOUBLE PRECISION FUNCTION CFGEOG(CON,E)
C
C ***	IDENT	26OC95
C ***	MODULE	CFGEOG
C
C	Copyright LaserScan Laboratories Ltd., Cambridge, England
C
C to convert between conformal and geodetic latitudes.
C 
C The function returns the geodetic latitude
C
C Author 					R.W. Russell 29-Apr-1986
C
CMOD    Converted to Fortran77 (WI/CC 1514)      T.J.Mulcahy 24-Oct-1995
C
C
	IMPLICIT DOUBLE PRECISION (A-Z)
C
C arguments
C
C latitude to convert
	DOUBLE PRECISION CON
C eccentricity of spheroid
	DOUBLE PRECISION E
C
C w/s
C
	DOUBLE PRECISION ONEMIN,ONEPLS
	DOUBLE PRECISION FACTOR,FFACT
	DOUBLE PRECISION HALFPI
	INTEGER ITER
C
	DOUBLE PRECISION LAT1,LAT2
	PARAMETER	 (HALFPI =1.5707963267948966D0)
	DOUBLE PRECISION LIMIT
	PARAMETER	 (LIMIT = 0.00000000000001)
C
C set up first trial
C
	ITER=0
	LAT1 = CON
	FFACT = TAN(HALFPI/2+CON/2)
   10	CONTINUE
	ITER=ITER+1
	FACTOR=E*SIN(LAT1)
	ONEMIN=1-FACTOR
	ONEPLS=1+FACTOR
	FACTOR=(ONEPLS/ONEMIN)**(E/2)
C
	LAT2 = 2*ATAN(FFACT*FACTOR)-HALFPI
	IF (ITER.GT.10.OR.ABS(LAT1-LAT2).LT.LIMIT) THEN
	   CFGEOG=LAT2
	ELSE
	   LAT1=LAT2
	   GOTO 10
	ENDIF
C
	RETURN
	END

