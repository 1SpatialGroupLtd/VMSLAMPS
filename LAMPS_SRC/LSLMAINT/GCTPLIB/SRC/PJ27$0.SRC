C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1995-10-27 12:47:56.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
C                   PJ27F
C **********************************************************************
C                       *  HAMMER-AITOFF *
C **********************************************************************
C
CMOD    Converted to Fortran77 (WI/CC 1514)      T.J.Mulcahy 25-Oct-1995
C
      SUBROUTINE PJ27F
C ***	IDENT   25OC95
C ***	MODULE  PJ27F
C
C
C Copyright LaserScan Laboratories Ltd., Cambridge, England
C
C Author 					R.W. Russell	11-Feb-93
C
      IMPLICIT DOUBLE PRECISION (A-Z)
C
C This pseudocylindrical projection is equal area. It is available in only
C spherical form.
C
C The formulation comes from MALING, pages 77 - 78
C
C arguments
C
C projection parameters
      DOUBLE PRECISION DATA(15)
C                      DATA(5) = Longitude of central meridian
C                      DATA(7) = False Eastings
C                      DATA(8) = False Northings
C geographical coordinates (radians)
      DOUBLE PRECISION GEOG(2)
C projected coordinates (usually meters)
      DOUBLE PRECISION PROJ(2)
C zone number (variable if using file)
      INTEGER    ZONE
C LUN for input file (if used)
      INTEGER   INFILE
C
C common blocks
C
      INTEGER IERROR,IPEMSG,IPPARM
      COMMON /ERRM/ IERROR
      COMMON /PRIN/ IPEMSG,IPPARM
C
C default sphere
C
      DOUBLE PRECISION AZZ
      COMMON/SPHR/ AZZ
C
C working area
C
      INTEGER ANGS(4,1)
      INTEGER SWITCH
      DOUBLE PRECISION A,LON0,X0,Y0,SQRT2,TSQRT2
      DOUBLE PRECISION BUFF(15)
      COMMON /WRK27F/BUFF,ANGS,A,LON0,X0,Y0,SQRT2,TSQRT2
      COMMON /SW27F/ SWITCH
C
C constants
C
      DOUBLE PRECISION PI,HALFPI,EPSLN,ZERO,ONE,TWO,HALF
      PARAMETER        (PI =3.14159265358979323846D0)
      PARAMETER        (HALFPI =1.5707963267948966D0)
      PARAMETER        (EPSLN = 1.0D-12)
      PARAMETER        (ZERO = 0.0, ONE = 1.0, TWO = 2.0, HALF = 0.5)
C
C functions called
C
      DOUBLE PRECISION PAKR
      DOUBLE PRECISION ADJL
      DOUBLE PRECISION RADD
      DOUBLE PRECISION DARSIN
C
C working storage
C
      DOUBLE PRECISION B,E,ES
      INTEGER I
      DOUBLE PRECISION DLON,PHI,X,Y
      DOUBLE PRECISION COSPHI,SINPHI
      DOUBLE PRECISION LON2,TMP
      DOUBLE PRECISION SINC,CSLON2,SNLON2
      DOUBLE PRECISION RH,C
C
C initialisation
C
C      DATA SWITCH /0/
C
C ......................................................................
C      .  INITIALIZATION OF PROJECTION PARAMETERS (ENTRY INPUT)  .
C ......................................................................
C
      ENTRY IS27F (ZONE,DATA)
C
      IERROR = 0
      IF (SWITCH.NE.0 .AND. SWITCH.EQ.ZONE) RETURN
      DO 180 I = 1,8
      BUFF(I) = DATA(I)
  180 CONTINUE
      GO TO 020
C
C ......................................................................
C       .  INITIALIZATION OF PROJECTION PARAMETERS (FILE INPUT)  .
C ......................................................................
C
      ENTRY IF27F (INFILE)
C
      IERROR = 0
      READ (INFILE,END=160) ZONE,BUFF
      IF (SWITCH.NE.0 .AND. SWITCH.EQ.ZONE) RETURN
  020 A = BUFF(1)
      IF (A .LE. ZERO) A = AZZ
      LON0 = PAKR (BUFF(5))
      X0 = BUFF(7)
      Y0 = BUFF(8)
      SQRT2 = SQRT(TWO)
      TSQRT2 = SQRT2 * TWO
C
C LIST RESULTS OF PARAMETER INITIALIZATION.
C
      CALL RADD (LON0,ANGS(1,1))
      IF (IPPARM .EQ. 0) PRINT 2000, A,ANGS,X0,Y0
 2000 FORMAT ('0INITIALIZATION PARAMETERS (HAMMER-AITOFF PROJECTION)'/
     .        ' RADIUS OF SPHERE             =',F12.2,' METERS'/
     .        ' LONGITUDE OF C. MERIDIAN     = ',A1,2I3,F7.3/
     .        ' FALSE EASTING                =',F12.2,' METERS'/
     .        ' FALSE NORTHING               =',F12.2,' METERS')
      DATA(1) = A
      SWITCH = ZONE
      RETURN
  160 IF (IPEMSG .EQ. 0) PRINT 2020
 2020 FORMAT ('0ERROR PJ27F'/
     .        ' MISSING PROJECTION PARAMETERS')
      IERROR = 271
      RETURN
C
C ......................................................................
C                      .  FORWARD TRANSFORMATION  .
C ......................................................................
C
      ENTRY PF27F (GEOG,PROJ)
C
      IERROR = 0
      IF (SWITCH .NE. 0) GO TO 220
      IF (IPEMSG .EQ. 0) PRINT 2020
      IERROR = 272
      RETURN
  220 CONTINUE
      DLON = ADJL (GEOG(1) - LON0)
      COSPHI = COS(GEOG(2))
      SINPHI = SIN(GEOG(2))
      LON2 = DLON/TWO
      CSLON2 = COS(LON2)
      SNLON2 = SIN(LON2)
      TMP = SQRT(ONE + COSPHI*CSLON2)
      TMP = ONE/TMP
      PROJ(1) = X0 + A * COSPHI * SNLON2 * TSQRT2 * TMP
      PROJ(2) = Y0 + A * SQRT2 * SINPHI * TMP
      RETURN
C
      END
