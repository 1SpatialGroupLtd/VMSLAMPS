;
; * This file is part of the LAMPS distribution, released as a software
; * preservation project to archive digital history for future historians.
; * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
; *
; * Timestamp of this file for the 2002 release was: 1988-10-26 13:42:04.000000000 +0000
; *
; * This program is free software: you can redistribute it and/or modify
; * it under the terms of the GNU General Public License as published by
; * the Free Software Foundation, version 3.
; *
; * This program is distributed in the hope that it will be useful, but
; * WITHOUT ANY WARRANTY; without even the implied warranty of
; * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
; * General Public License for more details.
; *
; * You should have received a copy of the GNU General Public License
; * along with this program. If not, see http://www.gnu.org/licenses/.
;
; MACRO representation of Tektronix library vector generator workspace
 
	.LIBRARY	/SYS$LIBRARY:LIB/

	$GBLINI

	COMMON	TKVW
 
TKCODC:	.BLKB	8		; temporary array for coding positions
TKGRAF:	.BYTE	0		;  0 => in alpha mode
				; -1 => in graph mode
THBRT:	.BLKB	1		;  0 => this vector 'bright'
				; -1 => this vector 'dark'
				; used in deciding whether to supress (0,0) move
LSTBRT:	.BLKB	1		; ditto, re last vector
	.EVEN
 
TKBLIM:	.LONG	TKBUF1+TKBFSZ-14 ; buffer limit allowing space
TKBPTR:	.LONG	TKBUF1		; pointer into  buffer
TKNEFN:	.BLKL	1		; output efn to use (set up in TKINIT)
TKOSEL:	.BLKB	1		; last output mode selected
 
	.EVEN
; positions, etc
TKSAVX:	.BLKF	1		; last graphic position
TKSAVY:	.BLKF	1


; buffers and immediately associated information
TKEFN1:	.WORD	0		; for active efn
TKBUF1:	.BLKB	TKBFSZ		; actual buffer
 
TKISB1:	.BLKL	2		; i/o status block

TKIBUF:	.BLKB	80
TKILEN=.-TKIBUF
 
; flagword and associated offsets
FLAGW:	.LONG	0

; define bits in said flagword
	_VIELD	FLAG,0,<-
		<IFTHK,,M>,-	; =1 if 'thick line diversion' in operation
		<TUPTD,,M>,-	; =1 if moves not up to date
		<RFOLO,,M>,-	; =0 if to suppress next movement at RFSWB
		<THKD,,M>,-	; =1 to complete thick diversion
		<THKSAV,,M>,-	; =1 (while in refresh mode) if IFTHK at entry to refresh mode
		<NEWSEG,,M>,-	; =1 if last call to GENSEG generated new segment
		<FLSHNG,,M>,-	; =1 if suppressing 'space in buffer' checking in $FLUSH
		<TRANSPAR,,M>,-	; =1 if output of Tek chars is to be transparent (RMTOC)
		<LRGCUR,,M>,-	; =1  if large cursor selected (CURSEL(1))
		<FIRSTSEG,,M>-	; =1 if generating first seg of refresh picture
		<32BIT,,M>-	; =1 if using 32 bit coordinate mode
		<WESTWARD,,M>-	; =1 if for Westward (rather than TEK)
		<GIN,,M>-	; =1 if GIN just enabled
		>

; DPB for output transfers (extensively patched)
QO.DPB:	$QIO	FUNC=IO$_WRITEVBLK!IO$M_NOFORMAT,-
		IOSB=TKISB1,-
		P1=TKBUF1
 
QO.CHAN = QO.DPB+QIO$_CHAN	; CHAN to use (set up in TKINIT)
QO.EFN = QO.DPB+QIO$_EFN	; EFN to use (set up in TKINIT)
QO.LEN = QO.DPB+QIO$_P2		; buffer length

; DPB for input transfers
QI.DPB:	$QIO	FUNC=IO$_READVBLK,-
		P1=TKIBUF,-
		P2=TKILEN,
QI.CHAN = QI.DPB+QIO$_CHAN	; CHAN to use (set up in TKINIT)
QI.EFN = QI.DPB+QIO$_EFN	; EFN to use (from TKREAD)
QI.IOSB = QI.DPB+QIO$_IOSB	; IOSB to use (from TKREAD)

	.PSECT

