Problems interfacing to Westward display
----------------------------------------

Can it highlight segments by blinking? - apparently not

Does not understand -1 (remove all classes) in a Set Segment Class command
(escSA), as a TEK would. Change RFDRAW to remove only class 2.

Cannot delete segments while another segment open (seems to work on TEK).
Call STDINI from LCRSG so as to delete the segments before opening new one,
rather than waiting for STDRAW to call STDINI.

Changing window or viewport causes a redraw unless deferrability set low.
TEK does not redraw under these circumstances.

Renew View (escKN) -1 does not clear whole screen, as it does on a TEK.
Use a Clear Viewport Area (escRA) -1 to clear.

If Set Segment Position (escSX) is used with segment -2 (all created in
future), then how does one return to the default behaviour. On a TEK,
Set Pivot Point clears it. Also TEK Set Pivot Point always applies to future
segments (it has no 'segment' argument). Answer - set segment position to
same as pivot point.

Set Segment Visibility (escSV) seems to use 0 visible, 1 invisible
which is opposite to TEK.

Doesn't accept graphic commands while in GIN mode - just ignores them.

Segments visible in all viewports by default, rather than just current.

Won't allow definition of pen 0 in escML command.

Further points arising from installation at OS
----------------------------------------------

The terminals are 3219s (high res monochrome) with added Graphics Manager.

First table button press entered 2 coordinates (if bitpad enabled). This
was due to a spurious C/R from the Westward which was returned by GTDGXY
as though is was a table press - fixed by looping back in GTDGXY if
TEK/Westward keyboard input received.

If setup was aborted, then first buffer of graphics data not drawn (though
loaded into graphics manager). This was cured by flushing out (LDWAIT)
the disable GIN in GTDGXY. Presumably was in some sort of ignoring/bypass
mode.

The tablet buttons were being returned as control chars. This was due to
'Tablet character' in setup being set to ^\ (control-\) rather than the
'1' which we require.

If the screen menu is not created initially, then when it is created
later, the map segments become visible in it. Not very serious - cure
by creating the menu view anyway and setting the map segments invisible
in it (perhaps??).

Drawing in colour index 0 does not erase on a monochrome terminal.
This was cured by defining pen 1 (which is used to draw colour 0) to
include the sequence esc DLE (27,16) i.e. enter erase mode. Not sure
what setting segment writing mode to delete would do - especially
for non-segment stuff, and on colour display. This allows screen menu
to be visible also (otherwise green on green). Pen 1 was also set thick,
since the thin text on solid background was not very visible.

Slow blinking refresh was not liked and tends to interfere with bitpad.
Changed refresh to use a thick line (colour 15, pen 16 defined to draw
a thick line ESC|K!!). This then was continuously visible rather than
blinking between on and off when superimposed on a thin line feature.
Eventually switched off blinking completely (unless ENA BLINK) and
this was quite satisfactory. What should be done on the colour display?
May be a thick, non-blinking, but coloured line would be OK.
