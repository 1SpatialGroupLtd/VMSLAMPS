C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1983-05-06 15:55:04.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE CPPGEN(DESTX,DESTY)
C
***	MODULE CPPGEN
***	IDENT 23MR82
C
C Copyright Laser Scan Laboratories Ltd., Cambridge, England.
C Author  R. Fairbairns
C
C Typed 28.xi.78
C Coded 27.xi.78 as CalComp tape output dot/dash/chain generator
C
C No FANSYM in LDCPLIB, dummy routine here	WJJ	06-May-1983
C New Calcomp version started (CPPGEN) RD 17.iii.82
C Returned to PDP-11 for TEKLIB 23.ii.82
C 'Buffer generated' scrub code added 23.ii.81
C Adapted 11.ii.81 for VAX LDLIB
C Adapted 17.i.80 as line pattern generator for MCE plotting package
C
C Dot/dash/chain generator for pseudo LDLIB for Calcomp.
C Taken from TEKPGN library.
C
	REAL DESTX,DESTY
C
***	COMMON/CPPGWS/
C
C w/s
	REAL LEN, CX,CY, DX,DY, NX,NY
C
C start it all off by looking at 'last' point
	CX = LASTX
	CY = LASTY
C
C extract 'current' point
	NX = DESTX
	NY = DESTY
C
C get vector, length
10	DX = NX-CX
	DY = NY-CY
	LEN = SQRT(DX**2+DY**2)
C
C ignore tiny segments
	IF (LEN.LE.1E-5) GOTO 80
C
C length greater than what's left?
	IF (LEN.LE.DDCRES) GOTO 70
C
C yes - do our bit and move stage on
	D = DDCRES/LEN
	CX = CX+D*DX
	CY = CY+D*DY
	GOTO (41,20,30,20,40), DDCSTG+1
C
C end an 'on' period
20	IF (PTNTYP.EQ.0) GOTO 24
C
C end 'off line' bit in scrub
	YY = 0.5*SCRBSZ/LEN
	XX = DY*YY
	YY = DX*YY
	IF (DDCSTG.EQ.1) GOTO 21
C
C end 'minor on' - different side of line
	XX = -XX
	YY = -YY
21	CALL GENLIN(CX-XX, CY+YY)
	GOTO 35
C
C end 'on' in ordinarily patterned line
24	IF (DSUBTP.NE.0) GOTO 25
	CALL GENLIN(CX, CY)
	GOTO 35
C
C substitute 'on' period with a symbol
25	CALL FANSYM(DSUBTP, DSUBTL,
     &              ENDLGX, ENDLGY, CX, CY)
	GOTO 35
C
C set to repeat minor on
29	DDCSTG = 2
	GOTO 31
C
C end of first gap
30	DREPOS = DREPOS-1
	IF (DREPOS.GE.0) GOTO 42
C
C get control for minor on
	DREPOS = DREPCT(2)
	DSUBTP = DSUBSP(2)
	DSUBTL = DSUBSL(2)
C
C IS there a minor on?
31	DDCRES = DDCMIN
	IF (DDCRES.NE.0.0) GOTO 50
C
C zero minor on - suppress it altogether
	DDCSTG = DDCSTG+1
C
C end 'on' joins
35	DDCRES = DDCGAP
	GOTO 60
C
C end of second gap
40	DREPOS = DREPOS-1
	IF (DREPOS.GE.0) GOTO 29
C
C get control for major on
41	DREPOS = DREPCT(1)
	DSUBTP = DSUBSP(1)
	DSUBTL = DSUBSL(1)
C
C set major on (again)
42	DDCRES = DDCMAJ
	DDCSTG = 0
C
C end 'off' period
50	IF (PTNTYP.EQ.0) GOTO 55
C
C in scrub - move back on to line
	CALL GENLIN(CX, CY)
	GOTO 60
C
C move up to end of gap
55	CALL GENMOV(CX, CY)
C
C preserve end of gap in case 'on' to be substituted
	ENDLGX = CX
	ENDLGY = CY
C
C move on to next stage (major on if end of second gap)
60	DDCSTG = DDCSTG+1
C
C go back for next move
	GOTO 10
C
C length less than what's left of this stage
70	IF ((DDCSTG.EQ.1.OR.DDCSTG.EQ.3)
     *		.AND. PTNTYP.EQ.0
     *		 .AND.DSUBTP.EQ.0)
     *		   CALL GENLIN(NX, NY)
C
C count down the reidue of this stage
	DDCRES = DDCRES-LEN
C
C end of loop - move on to next segment of line
80	LASTX=DESTX
	LASTY=DESTY
	RETURN
C
	END
C
	SUBROUTINE FANSYM(DSUBTP, DSUBTL,
     &              ENDLGX, ENDLGY, CX, CY)
C
***	MODULE	FANSYM
***	IDENT	06MY83
C
	RETURN
	END
