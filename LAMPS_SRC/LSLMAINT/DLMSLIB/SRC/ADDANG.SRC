C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1983-11-02 13:20:54.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE ADDANG(TO,INPUT,LARGE,TENTH,HEMI)
C
***	IDENT	02NO83
***	MODULE	ADDANG
C
C	Copyright LaserScan Laboratories Ltd., Cambridge, England
C
C Author: CC Brunt, 1 November 1983
C from originals by M Dhillon, 1 June 1983
C
C Subroutine to convert an angle in integer tenth seconds
C to DMA conventional format(s)
C
	IMPLICIT NONE
C
C passed
C 
	BYTE		TO(10)		! destination (max length)
	INTEGER*4 	INPUT		! angle in tenths of secs
	LOGICAL		LARGE		! 3 digit degree field if true
	LOGICAL		TENTH		! tenth second field
	LOGICAL		HEMI		! hemisphere letter
C
C Workspace
C
	LOGICAL		MINUS		! is it negative?
	INTEGER*4	DEGS		! degrees of angle
	INTEGER*4	MINS		! minutes
	REAL		SECS		! and seconds
	REAL		RINPUT		! real input passed to CVTANG
	INTEGER*4	INTSEC		! secs as integer
	INTEGER*4	TENSEC		! Integer tenths of sec
	INTEGER		PTR		! pointer into output
C
C Code starts here
C Convert angle to floating point and then to correct form
	PTR = 1
	RINPUT = INPUT
	CALL CVTANG(RINPUT,MINUS,DEGS,MINS,SECS)
C ...and output them in the appropriate format
	INTSEC = SECS
	TENSEC = (SECS - INTSEC)*10.
C
	IF (LARGE) THEN
	   CALL EXPAND('%W%P0%I3',TO(PTR),DEGS)
	   PTR = PTR + 3
	ELSE
	   CALL EXPAND('%W%P0%I2',TO(PTR),DEGS)
	   PTR = PTR + 2
	ENDIF
C
	CALL EXPAND('%W%P0%I2%I2',TO(PTR),MINS,INTSEC)
	PTR = PTR + 4
C
	IF (TENTH) THEN
	   CALL EXPAND('%W.%I1',TO(PTR),TENSEC)
	   PTR = PTR + 2
	ENDIF
C
	IF (HEMI) THEN
	   IF (LARGE) THEN
	      IF (MINUS) THEN
	         TO(PTR)='W'
	      ELSE
	         TO(PTR)='E'
	      ENDIF
	   ELSE
	      IF (MINUS) THEN
	         TO(PTR)='S'
	      ELSE
	         TO(PTR)='N'
	      ENDIF
	   ENDIF
	ENDIF
C
C ...and finish here
C
	RETURN
	END
