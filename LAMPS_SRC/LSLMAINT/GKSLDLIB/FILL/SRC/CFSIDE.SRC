 	INTEGER FUNCTION
**	IF SYMBOL
     &	                 CF_SIDE2
**	IFF
     &	                 CF_SIDE
**	ENDC
     &	                         ( SIDE_1, IX_1, SIDE_2, IX_2 )
C
***	IDENT	04AU92
**	IF SYMBOL
***	MODULE	CF_SIDE2
**	IFF
***	MODULE	CF_SIDE
**	ENDC
C
C	Copyright LaserScan Laboratories Ltd., Cambridge, England
C
C Author TJ Ibbs, 2 January 1985
C
C ADC conditionals added for symbol fill version,
C    CF_S introduced, replace HERE: with CMN: 	RJH	10-Dec-1986
C
	IMPLICIT NONE
C
C CF_SIDE is a longword function to compare two side descriptions
C
C	   eg	CF_SIDE( TABLE, index1, TABLE, index2 )
C	   or	CF_SIDE( TABLE, index1, STORE, 1 )
C	   or	CF_SIDE( STORE, 1,      TABLE, index2 )
C
C	returns	-1 if  SIDE 'index1' < SIDE 'index2'
C		 0 if		     =
C		+1 if		     >
C
C Arguments
C
	REAL		SIDE_1(4,*)
	INTEGER		IX_1		! index into SIDE_1
	REAL		SIDE_2(4,*)
	INTEGER		IX_2		! index into SIDE_2
C
C Common
C
***	COMMON/CMN:CFSIDE/		! define SIDE layout
C
C Local
C
	INTEGER		CF_S		! result
C
C do the comparison
C
	IF ( SIDE_1(V,IX_1).GT.SIDE_2(V,IX_2) ) THEN
	   CF_S = +1
	ELSEIF ( SIDE_1(V,IX_1).LT.SIDE_2(V,IX_2) ) THEN
	   CF_S = -1
	ELSE
	   IF ( SIDE_1(U,IX_1).LT.SIDE_2(U,IX_2) ) THEN
	      CF_S = +1
	   ELSEIF ( SIDE_1(U,IX_1).GT.SIDE_2(U,IX_2) ) THEN
	      CF_S = -1
	   ELSE
	      IF ( SIDE_1(DU,IX_1).LT.SIDE_2(DU,IX_2) ) THEN
		 CF_S = +1
	      ELSEIF ( SIDE_1(DU,IX_1).GT.SIDE_2(DU,IX_2) ) THEN
		 CF_S = -1
	      ELSE
		 IF ( SIDE_1(DV,IX_1).GT.SIDE_2(DV,IX_2) ) THEN
		    CF_S = +1
		 ELSEIF ( SIDE_1(DV,IX_1).LT.SIDE_2(DV,IX_2) ) THEN
		    CF_S = -1
		 ELSE
		    CF_S = 0
		 ENDIF
	      ENDIF
	   ENDIF
	ENDIF
C
**	IF SYMBOL
	CF_SIDE2 = CF_S
**	IFF
	CF_SIDE = CF_S
**	ENDC
	RETURN
	END
C
 	INTEGER FUNCTION
**	IF SYMBOL
     &	                 CF_SIDEQ2
**	IFF
     &	                 CF_SIDEQ
**	ENDC
     &	                         ( SIDE_1, IX_1, IX_2 )
C
***	IDENT	10DE86
**	IF SYMBOL
***	MODULE	CF_SIDEQ2
**	IFF
***	MODULE	CF_SIDEQ
**	ENDC
C
C	Copyright LaserScan Laboratories Ltd., Cambridge, England
C
C Author TJ Ibbs, 2 January 1985
C
C ADC conditionals added for symbol fill version,
C    CF_S introduced, replace HERE: with CMN: 	RJH	10-Dec-1986
C This version to suit QUICKSORT	CC Brunt	4 August 1992
C
	IMPLICIT NONE
C
C CF_SIDEQ is a longword function to compare two side descriptions
C
C	   eg	CF_SIDEQ( TABLE, index1, index2 )
C
C	returns	-1 if  SIDE 'index1' < SIDE 'index2'
C		 0 if		     =
C		+1 if		     >
C
C Arguments
C
	REAL		SIDE_1(4,*)
	INTEGER		IX_1		! index into SIDE_1
	INTEGER		IX_2		! index into SIDE_1
C
C Common
C
***	COMMON/CMN:CFSIDE/		! define SIDE layout
C
C Local
C
	INTEGER		CF_S		! result
C
C do the comparison
C
	IF ( SIDE_1(V,IX_1).GT.SIDE_1(V,IX_2) ) THEN
	   CF_S = +1
	ELSEIF ( SIDE_1(V,IX_1).LT.SIDE_1(V,IX_2) ) THEN
	   CF_S = -1
	ELSE
	   IF ( SIDE_1(U,IX_1).LT.SIDE_1(U,IX_2) ) THEN
	      CF_S = +1
	   ELSEIF ( SIDE_1(U,IX_1).GT.SIDE_1(U,IX_2) ) THEN
	      CF_S = -1
	   ELSE
	      IF ( SIDE_1(DU,IX_1).LT.SIDE_1(DU,IX_2) ) THEN
		 CF_S = +1
	      ELSEIF ( SIDE_1(DU,IX_1).GT.SIDE_1(DU,IX_2) ) THEN
		 CF_S = -1
	      ELSE
		 IF ( SIDE_1(DV,IX_1).GT.SIDE_1(DV,IX_2) ) THEN
		    CF_S = +1
		 ELSEIF ( SIDE_1(DV,IX_1).LT.SIDE_1(DV,IX_2) ) THEN
		    CF_S = -1
		 ELSE
		    CF_S = 0
		 ENDIF
	      ENDIF
	   ENDIF
	ENDIF
C
**	IF SYMBOL
	CF_SIDEQ2 = CF_S
**	IFF
	CF_SIDEQ = CF_S
**	ENDC
	RETURN
	END
