C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1991-02-20 18:11:02.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
C
C Text functions
C ==============
C
C Not all attributes are provided.
C Of the geometric attributes, HEIGHT and UP-VECTOR are provided,
C PATH and ALIGNMENT are not.
C The aspect source flags are always assumed INDIVIDUAL.
C COLOUR INDEX is provided, EXPANSION FACTOR, SPACING, and
C FONT & PRECISION are provided as no-ops.
C
C *********************************************************************
C
C	TEXT OUTPUT PRIMITIVE
C	=====================
C
C
	SUBROUTINE	GTX(PX,PY,STRING)
C
**	MODULE	GTX
**	IDENT	20FE91
C
C Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C Created				Clarke Brunt	24-Jul-1985
C
C TEXT
C
	IMPLICIT NONE
C
C Arguments:
C
	REAL	PX			! X coord
	REAL	PY			! Y coord
	CHARACTER*(*) STRING		! text
C
C Functions
	LOGICAL	GKCLIP
C
C Workspace
	REAL	DX,DY			! device coordinate
	INTEGER	DEV
C
***	COMMON/GKSDAT2/
***	COMMON/GKSESL/
C
	GKSERR	= 0			! no error (yet!)
C
	DO 100 DEV=1,WSMAX
C
C	 is this workstation active? - if not ignore it
C
	   IF (.NOT.WSACT(DEV)) GOTO 100
C
C	 ensure that our transformation is up to date
C
	   IF (UPTRN(DEV)) CALL GUPTRN(DEV)		! update it
C
C	 is everything clipped (ie nothing visible)
C
	   IF (CLPALL(DEV)) GOTO 100
C
C Make sure text attributes are up to date
	   IF (UPTX(DEV)) CALL GUPTX(DEV)
C
	   IF (ENCLIP) THEN
	      IF (GKCLIP(DEV,PX,PY,PX,PY)) GOTO 100
	   ENDIF
C
C transform to device coordinates
	   CALL GKSW2D(WKIDS(DEV),PX,PY,DX,DY)
C
C and draw it
	   IF (DEV.EQ.GTEK) THEN
	      CALL MOVTO(DX,DY)
	      CALL CHARS(STRING)
	   ELSE
	      CALL VSMTO(DX,DY)
	      CALL VSCHRS(STRING)
	   ENDIF
100	CONTINUE
C
200	RETURN
	END
C
C
C***********************************************************************
C
	SUBROUTINE	GSTXCI(COLI)
C
**	MODULE	GSTXCI
**	IDENT	26AP84
C
C Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C Created				Clarke Brunt	26-April-1984
C
C SET TEXT COLOUR INDEX
C (Don't bother with aspect source flags for now)
C
	IMPLICIT NONE
C
C Arguments:
	INTEGER	COLI			! text colour index
C
***	COMMON/GKSDAT2/
***	COMMON/GKSESL/
C
	INTEGER	I
C
	GKSERR = 0
	IF (COLI.LT.0) THEN
	   GKSERR = 85			! colour index less than zero
	ELSE
	   GKSERR = 0
	   ITXCOL = COLI		! text colour index set
	   DO 20 I=1,WSMAX
	      UPTX(I) = .TRUE.		! attributes need updating
20	   CONTINUE
	ENDIF
	RETURN
	END
C
	SUBROUTINE	GSCHXP(CHXP)
C
**	MODULE	GSCHXP
**	IDENT	26AP84
C
C Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C Created				Clarke Brunt	26-April-1984
C
C SET CHARACTER EXPANSION FACTOR
C (Don't bother with aspect source flags for now)
C
	IMPLICIT NONE
C
C Arguments:
	REAL	CHXP		! character expansion factor
C
***	COMMON/GKSDAT2/
***	COMMON/GKSESL/
C
	GKSERR = 0
	IF (CHXP.LE.0.0) GOTO 10
C
C ignore for now
	GOTO 999
C
10	GKSERR = 72			! expansion factor .le.0
999	RETURN
	END
C
	SUBROUTINE	GSCHSP(CHSP)
C
**	MODULE	GSCHSP
**	IDENT	26AP84
C
C Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C Created				Clarke Brunt	26-April-1984
C
C SET CHARACTER SPACING
C (Don't bother with aspect source flags for now)
C
	IMPLICIT NONE
C
***	COMMON/GKSESL/
C
C Arguments:
	REAL	CHSP		! character expansion factor
C
	GKSERR = 0
C
C ignore for now
	RETURN
	END
C
	SUBROUTINE	GSCHH(HGT)
C
**	MODULE	GSCHH
**	IDENT	26AP84
C
C Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C Created				Clarke Brunt	26-April-1984
C
C SET CHARACTER HEIGHT
C
	IMPLICIT NONE
C
C Arguments:
	REAL	HGT			! height (w.c.)
C
***	COMMON/GKSDAT2/
***	COMMON/GKSESL/
C
	REAL	HX,HY
	INTEGER	DEV
	INTEGER	SIZE
C
	GKSERR = 0
	IF (HGT.LE.0) GOTO 10
C
C This takes effect immediately on active workstations - it should
C actually be saved up and done when text output is performed.
C
	DO 100 DEV=1,WSMAX
C
C	 is this workstation active? - if not ignore it
C
	   IF (.NOT.WSACT(DEV)) GOTO 100
C
C	 ensure that our transformation is up to date
C
	   IF (UPTRN(DEV)) CALL GUPTRN(DEV)		! update it
C
C transform to device coordinates
	   CALL GW2D(WKIDS(DEV),HGT,HGT,HX,HY)
C
C and set it
C assume min size on each device is 2.5mm
	   IF (DEV.EQ.GTEK) THEN
	      SIZE = INT(HY/0.0025)-1
	      IF (SIZE.LT.0) SIZE = 0
	      IF (SIZE.GT.3) SIZE = 3
	      CALL TKCHSZ(SIZE)
	   ELSE
	      SIZE = INT(HY/0.0025)-1
	      IF (SIZE.LT.0) SIZE = 0
	      IF (SIZE.GT.15) SIZE = 15
	      CALL VSCHSZ(SIZE,0)
	   ENDIF
100	CONTINUE
	GOTO 999
C
10	GKSERR = 73			! character height .le.0
999	RETURN
	END
C
	SUBROUTINE	GSCHUP(CUX,CUY)
C
**	MODULE	GSCHUP
**	IDENT	26AP84
C
C Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C Created				Clarke Brunt	26-April-1984
C
C SET CHARACTER UP VECTOR
C
	IMPLICIT NONE
C
C Arguments:
	REAL	CUX,CUY			! vector (w.c.)
C
***	COMMON/GKSDAT2/
***	COMMON/GKSESL/
C
	REAL	HX,HY,ANGLE
	INTEGER	DEV
C
	GKSERR = 0
C
	DO 100 DEV=1,WSMAX
C
C	 is this workstation active? - if not ignore it
C
	   IF (.NOT.WSACT(DEV)) GOTO 100
C
C	 ensure that our transformation is up to date
C
	   IF (UPTRN(DEV)) CALL GUPTRN(DEV)		! update it
C
C transform to device coordinates
	   CALL GW2D(WKIDS(DEV),CUX,CUY,HX,HY)
	   IF (HX.EQ.0.0.AND.HY.EQ.0.0) GOTO 10
CCC	   ANGLE = ATAN2(-HX,HY)
C
C and set it (no-op for now - can't on TEK, needs VSCHSZ on ARGS)
100	CONTINUE
	GOTO 999
C
10	GKSERR = 74			! vector length is 0.0
999	RETURN
	END
C
C**********************************************************************
C
	SUBROUTINE	GSTXFP(FNT,PREC)
C
**	MODULE	GSTXFP
**	IDENT	26AP84
C
C Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C Created				Clarke Brunt	26-April-1984
C
C SET TEXT FONT & PRECISION
C
	IMPLICIT NONE
C
***	COMMON/GKSESL/
C
C Arguments:
	INTEGER	FNT,PREC
C
	GKSERR = 0
C
C ignore for now
	RETURN
	END
C
C**********************************************************************
C
	SUBROUTINE GUPTX(DEV)
C
***	MODULE	GUPTX
***	IDENT	30NO84
C
C Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C Created				Clarke Brunt	26-April-1984
C
C Update the text attributes for device DEV
C
	IMPLICIT NONE
C
C argument
	INTEGER	DEV
C
C local variables
	INTEGER	NCOLI
C
***	COMMON/GKSDAT2/		! GKS data structures
***	COMMON/THKPAR/		! LDLIB common block
C
C ---------------------------------------------------------------------
C
C Only does TEXT COLOUR INDEX and assumed ASF is INDIVIDUAL
	NCOLI = ITXCOL
C
C ---------------------------------------------------------------------
C
600	IF (NCOLI.NE.CCOLI(DEV)) THEN
C
	   CCOLI(DEV) = NCOLI
	   UPLIN(DEV) = .TRUE.			! update polyline
	   UPFA(DEV) = .TRUE.			! update fill area
	   IF ( DEV.EQ.GTEK ) THEN
C
C	 device 1 - Tektronix - change 'colour'
C
	      CALL PEN (NCOLI)
	   ELSE
C
C	 device 2 - ARGS - change colour
C
	      CALL VSCOL(NCOLI)
	   ENDIF
	ENDIF
C
	UPTX(DEV) = .FALSE.		! now up to date
	RETURN
	END
