Outstanding problems with AI88 PS output. Clarke Brunt. 12/1/94

1) Colours.
Should be c m y k followed by k (fill) or K (stroke), or alternatives
for grey levels that we will probably ignore (?).

At present I am using k and K, but preceded by a colour index.

We could attempt to post-process with file to rectify this, but this
would rely on the post-processor being able to identify the colour
table. OK if this came from the hex table - lines like:
COLTAB n {r g b setrgbcolor} put
but what if user supplied colour table in header file, as we know
some customers do. OK if format like ours, but they might use
setcmykcolor, or sethsbcolor, or setgray, or whatever.
Even with rgb, we need to convert to cmyk. This is the operation
where undercolorremoval and blackgeneration would play a role on
a level 2 interpreter (i.e. the cmyk value is not well defined).

We would have much the same difficulty writing the cmyk colours
into the output file in the first place. They would take up more
space, would be hard to edit afterwards, and need a procedure to
convert to rgb on level 1 operators.

2) Text.
a) Font and size selection operator should be:
/name size 0 0 0 Z (The zeros are leading, kerning, and alignment).
Instead, I am presently using:
size /Fn z

The Fn procedures are defined from the data in the .PSFONTLIST file,
and include scaling and encoding.
It is not obvious what the real name of the font is in the case when
the user specifies a FIND command in the .PSFONTLIST. If a SCALE command
was used, then this information would need transferring to the Z operator,
rather than being part of the definition of the font.

I am still not sure how to handle re-encoding at all.

b) Text angle and position operator should be
[matrix] e
whereas I am using
x y angle E.
Easy to change, but the matrix for allocates VM for the matrix each time.

c) Text output operator should be
length (string) t
whereas I am using
(string) T.
Easy (I think) to change, but length is pointless.

3) Filled areas.
AI is defined to use 'fill', that is non-zero winding rule.
We used to use this, but changed to eofill (even-odd) a while ago.

4) Non-AI operations.
Our PS may include things not supported in AI. In particular circle
arcs, and images.

