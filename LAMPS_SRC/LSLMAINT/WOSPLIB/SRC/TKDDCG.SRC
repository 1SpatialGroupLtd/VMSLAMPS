	SUBROUTINE TKDDCG
C
***	MODULE	TKDDCG
***	IDENT	15NO83
C
C this is TeK Dot Dash Chain Generator
C			 (cf Pattern GENerator GO in LDLIB)
C
C Copyright Laser Scan Laboratories Ltd., Cambridge, England.
C Author  R. Fairbairns
C
C Coded 27.xi.78 as CalComp tape output dot/dash/chain generator
C Typed 28.xi.78
C Adapted 17.i.80 as line pattern generator for MCE plotting package
C Adapted 11.ii.81 for VAX LDLIB
C 'Buffer generated' scrub code added 23.ii.81
C Stolen and modified (slightly) for WOSPLIB 4.iii.82 by TJI
C  (to supersede old TKDDCG which didn't support patterned lines - ie
C   substituted symbols for dashes)
C Identical routine used in VAX and PDP WOSPLIB 15.xi.83 CCB
C
C Dot/dash/chain/scrub generator for WOSPLIB
C
***	COMMON/TKDDCP/
C
C w/s
	REAL LEN, CX,CY, DX,DY, NX,NY, XX,YY
C
C check for empty buffer case
	IF (DDCPTR.EQ.1) GOTO 100
C
C start it all off by looking at 'last' point
	CX = DDCX(1)
	CY = DDCY(1)
C
C loop to process remaining points in buffer
	DO 90 I = 2,DDCPTR
C
C extract 'current' point
	NX = DDCX(I)
	NY = DDCY(I)
C
C get vector, length
10	DX = NX-CX
	DY = NY-CY
	LEN = SQRT(DX**2+DY**2)
C
C ignore tiny segments
	IF (LEN.LE.1E-5) GOTO 80
C
C length greater than what's left?
	IF (LEN.LE.DDCRES) GOTO 70
C
C yes - do our bit and move stage on
	D = DDCRES/LEN
	CX = CX+D*DX
	CY = CY+D*DY
	GOTO (41,20,30,20,40), DDCSTG+1
C
C end an 'on' period
20	IF (PTNTYP.EQ.0) GOTO 24
C
C end 'off line' bit in scrub
	YY = 0.5*SCRBSZ/LEN
	XX = DY*YY
	YY = DX*YY
	IF (DDCSTG.EQ.1) GOTO 21
C
C end 'minor on' - different side of line
	XX = -XX
	YY = -YY
21	CALL LINTO(CX-XX, CY+YY)
	GOTO 35
C
C end 'on' in ordinarily patterned line
24	IF (DSUBTP.NE.0) GOTO 25
	CALL LINTO(CX, CY)
	GOTO 35
C
C substitute 'on' period with a symbol
25	CALL TKSBST(DSUBTP, DSUBTL,
     &              ENDLGX, ENDLGY, CX, CY)
	GOTO 35
C
C set to repeat minor on
29	DDCSTG = 2
	GOTO 31
C
C end of first gap
30	DREPOS = DREPOS-1
	IF (DREPOS.GE.0) GOTO 42
C
C get control for minor on
	DREPOS = DREPCT(2)
	DSUBTP = DSUBSP(2)
	DSUBTL = DSUBSL(2)
C
C IS there a minor on?
31	DDCRES = DDCMIN
	IF (DDCRES.NE.0.0) GOTO 50
C
C zero minor on - suppress it altogether
	DDCSTG = DDCSTG+1
C
C end 'on' joins
35	DDCRES = DDCGAP
	GOTO 60
C
C end of second gap
40	DREPOS = DREPOS-1
	IF (DREPOS.GE.0) GOTO 29
C
C get control for major on
41	DREPOS = DREPCT(1)
	DSUBTP = DSUBSP(1)
	DSUBTL = DSUBSL(1)
C
C set major on (again)
42	DDCRES = DDCMAJ
	DDCSTG = 0
C
C end 'off' period
50	IF (PTNTYP.EQ.0) GOTO 55
C
C in scrub - move back on to line
	CALL LINTO(CX, CY)
	GOTO 60
C
C move up to end of gap
55	CALL MOVTO(CX, CY)
C
C preserve end of gap in case 'on' to be substituted
	ENDLGX = CX
	ENDLGY = CY
C
C move on to next stage (major on if end of second gap)
60	DDCSTG = DDCSTG+1
C
C go back for next move
	GOTO 10
C
C length less than what's left of this stage
70	IF ((DDCSTG.EQ.1.OR.DDCSTG.EQ.3)
     *		.AND. PTNTYP.EQ.0
     *		 .AND.DSUBTP.EQ.0)
     *		   CALL LINTO(NX, NY)
C
C count down the residue of this stage
	DDCRES = DDCRES-LEN
C
C end of loop - move on to next segment of line
80	CX = NX
90	CY = NY
C
C if scrubbing, and called because of move (visible segment end),
C then force line to last point drawn
100	IF (.NOT.MOVFLS) RETURN
	IF (PTNTYP.EQ.1.AND.DDCPTR.GT.1) CALL LINTO(NX, NY)
C
C clear the remnants of line pattern generation
C
	DDCSTG = 4		! reset phase for next dashed line
	DDCRES = 0.0		! no residue left to draw
	DREPOS = 0		! don't repeat
C
	RETURN
C
	END
