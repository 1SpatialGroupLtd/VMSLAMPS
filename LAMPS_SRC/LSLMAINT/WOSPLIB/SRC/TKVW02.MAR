; MACRO representation of Tektronix library vector generator workspace
 
	.LIBRARY	/SYS$LIBRARY:LIB/

	$GBLINI

	COMMON	TKVW
 
TKCODC:	.BLKB	7		; temporary array for coding positions
TKGRAF:	.BYTE	0		;  0 => in alpha mode
				; -1 => in graph mode
THBRT:	.BLKB	1		;  0 => this vector 'bright'
				; -1 => this vector 'dark'
				; used in deciding whether to supress (0,0) move
LSTBRT:	.BLKB	1		; ditto, re last vector
	.EVEN
 
TKBLIM:	.BLKL	1		; buffer limit allowing space
TKBPTR:	.BLKL	1		; pointer into buffer TKBUF1
TKNEFN:	.BLKL	1		; output efn to use (set up in TKINIT)
TKOSEL:	.BLKB	1		; last output mode selected
 
	.EVEN
; positions, etc
TKSAVX:	.BLKF	1		; last graphic position
TKSAVY:	.BLKF	1


; buffers and immediately associated information
TKEFN1:	.WORD	0		; for active efn
TKBUF1:	.BLKB	TKBFSZ		; actual buffer
 
TKISB1:	.BLKL	2		; i/o status block
 
; flagword and associated offsets
FLAGW:	.LONG	0

; define bits in said flagword
	_VIELD	FLAG,0,<-
		<IFTHK,,M>,-	; =1 if 'thick line diversion' in operation
		<TUPTD,,M>,-	; =1 if moves not up to date
		<RFOLO,,M>,-	; =0 if to suppress next movement at RFSWB
		<THKD,,M>,-	; =1 to complete thick diversion
		<THKSAV,,M>,-	; =1 (while in refresh mode) if IFTHK at entry to refresh mode
		<NEWSEG,,M>,-	; =1 if last call to GENSEG generated new segment
		<FLSHNG,,M>,-	; =1 if suppressing 'space in buffer' checking in $FLUSH
		<TRANSPAR,,M>,-	; =1 if output of Tek chars is to be transparent (RMTOC)
		<LRGCUR,,M>,-	; = 1  if large cursor selected (CURSEL(1))
		<FIRSTSEG,,M>-	; =1 if generating first seg of refresh picture
		<4014,,M>-	; =1 if using TEK4014 display without MUART
		>

; DPB for output transfers (extensively patched)
QO.DPB:	$QIO	FUNC=IO$_WRITEVBLK!IO$M_NOFORMAT

QO.EFN = QO.DPB+QIO$_EFN	; EFN to use (set up in TKINIT)
QO.CHAN = QO.DPB+QIO$_CHAN	; CHAN to use (set up in TKINIT)
QO.IOSB = QO.DPB+QIO$_IOSB	; IOSBto use (set up in TKINIT)
QO.BUF = QO.DPB+QIO$_P1		; buffer to use (set up in TKINIT)
QO.LEN = QO.DPB+QIO$_P2		; buffer length

	.PSECT
