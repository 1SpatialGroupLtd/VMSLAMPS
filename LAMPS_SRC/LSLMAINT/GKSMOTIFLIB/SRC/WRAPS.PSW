/************************************************************************/
/* Copyright Laser-Scan Ltd, Cambridge CB4 4FY, England			*/
/* Author    Clarke Brunt, 16-Jan-1990					*/
/* MOD       Matt Wenham,  17-Jun-1997	WI/CC 1580			*/
/************************************************************************/

#include <string.h>

/* Wraps for GKSMOTIFLIB */

/* Take care to use /SOURCE_OUTPUT=ANSI qualifier on PSWRAP to get */
/* proper prototyes, otherwise there are problems passing real args */
/* which expect to be received by value as doubles. */

/* Also my attempts to pass a context seem to be ignored, and the */
/* default is used. Edit the resulting C to fix this. */

/* Initialize some things for use later. */
defineps GWRAP_INIT(DPSContext c)
  /PIXMAT [1 0 0 -1 0 0] def
  /MAXFNT 127 def
  /FNTDICT MAXFNT dict def
  /SCALE 1 def
  % size /Fn z -
  /z
    { dup FNTDICT begin where
      { pop dup load dup type /dicttype eq
        { exch pop }
        { exec dup 3 1 roll def } ifelse }
      { /Courier findfont dup 3 1 roll def } ifelse end
      exch /SCALE exch store setfont
    } bind def
  % font /newname encoding ReEncode font
  /ReENCODE
    { 3 -1 roll				% /n e fo
      dup length dict dup 3 -1 roll	% /n e fn fn fo
      { 1 index /FID ne
        { put dup }
        { pop pop }
        ifelse
      } forall				% /n e fn fn
      3 -1 roll /Encoding exch put	% /n fn
      definefont			% fn
    } bind def
  % col SET_COLOR
  /SET_COLOR
  { currentXgcdrawablecolor
    dup 2 8 -1 roll put
    setXgcdrawablecolor
    PIXMAT setmatrix
  } bind def
  % string ang x y SHOW_AT
  /SHOW_AT
  { gsave
    translate
    rotate
    0 0 moveto
    SCALE dup scale
    show
    grestore
  } bind def
  % string font WIDTH width
  /WIDTH
    { gsave
      SCALE exch
      1 exch z
      /SCALE exch store
      stringwidth pop
      grestore
    } bind def
  % string font BOX minx miny maxx maxy
  /BOX
    { gsave
      SCALE exch
      1 exch z
      /SCALE exch store
      0 0 moveto
      true charpath flattenpath pathbbox
      grestore
    } bind def
endps

/* Allow us to change the drawable for a context. */
/* Need to provide gc and x/y offset also. */
/* This operation resets the coordinate units, so ensure */
/* they are set to x pixels afterwards. */
defineps GWRAP_SET_GC_DRAWABLE(DPSContext c; int gc, drawable, x, y)
  gc drawable x y setXgcdrawable
  PIXMAT setmatrix
endps

/* Change the drawable leaving other things the same. */
defineps GWRAP_CHANGE_DRAWABLE(DPSContext c; int drawable)
  currentXgcdrawable
  3 -1 roll pop drawable 3 1 roll
  setXgcdrawable
  PIXMAT setmatrix
endps

/* Change the first_gray element of the color array. */
defineps GWRAP_SET_COLOR(DPSContext c; int col)
  col SET_COLOR
endps

/* Ordinary moveto. */
defineps GWRAP_MOVETO(DPSContext c; float x,y)
  x y moveto
endps

/* Show text at a position. */
defineps GWRAP_SHOW_AT(DPSContext c; float x,y; float ang; char *str)
  (str) ang x y SHOW_AT
endps

/* Set the font, size, and angle. */
defineps GWRAP_SET_FONT(DPSContext c; char *fnum; float size)
  size /fnum z
endps

/* Return the width of a string. */
defineps GWRAP_STRING_WIDTH(DPSContext c; char *string,*fnum| float *width)
  (string) /fnum WIDTH width
endps

/* Return the bounding box of a string. */
defineps GWRAP_STRING_BOX(DPSContext c; char *string,*fnum|
	                  float *minx,*miny,*maxx,*maxy)
  (string) /fnum BOX maxy maxx miny minx
endps

/* This is not a wrap - but this seems a convenient home for it */
#include <xdps$include:dpsclient.h>
extern void GKS_DPS_DESTROY_SPACE(DPSContext ctx)
{
   DPSDestroySpace(ctx->space);
}
