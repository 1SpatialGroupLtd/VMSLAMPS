	PROGRAM IIS6DTI
C
***	MODULE IIS6DTI
***	IDENT 22JN89
C
C © Copyright Laser-Scan Laboratories Ltd., Cambridge, England
C Author Simon Hancock	27th March 1990
C
C To convert International Imaging Systems' s600 format data into DTI format
C
	IMPLICIT NONE
C
C Functions
C
	INTEGER	  DCL_STARTUP	! Gets parsed command line
	INTEGER	  DCL_FILE	! Reads and parses file titles from the 
				! command line
	LOGICAL	  DTI_CREATE	
	LOGICAL	  DTI_MINMAX_DATA
	LOGICAL	  DTI_COPY_BYTE_DATA
	LOGICAL	  DTI_COPY_WORD_DATA
	LOGICAL	  DTI_COPY_LONG_DATA
	LOGICAL	  DTI_CLOSE	
	EXTERNAL  IIS6DTI_CLD
C
C W/s
C
	INTEGER	  DTI_LUN
	PARAMETER (DTI_LUN=2)
C
	LOGICAL	  OK,ABSENT
	INTEGER	  I,J,K,L,M,N
	INTEGER	  IMRN
	INTEGER	  NBYTE
	INTEGER	  ERROR
	INTEGER   RX,RY
	INTEGER   XSIZE,YSIZE,ZSIZE,WSIZE
	INTEGER   XSTART,YSTART
	INTEGER   XLEN,YLEN
	INTEGER   DTYPE,MODE
	INTEGER   BUFSIZ
	PARAMETER (BUFSIZ=65535)
	BYTE      BBUFF(BUFSIZ)
	BYTE      BBUFA(BUFSIZ)
	INTEGER*2 IBUFF(BUFSIZ)
	INTEGER*2 IBUFA(BUFSIZ)
	INTEGER*4 LBUFF(BUFSIZ)
	INTEGER*4 LBUFA(BUFSIZ)
	INTEGER   IISLEN,DTILEN
	CHARACTER*128  IISFIL,DTIFIL
C
	INCLUDE	'LSL$IISINC:IMDEF'
C
	CALL LSL_INIT
	CALL DTI_INIT
C
	RX=512
	RY=4
	IF(RX*RY.GT.BUFSIZ)THEN
	   PRINT*,'Invalid rectangle size'
	   GOTO 900
	ENDIF
C
C Decode the command line
C
	OK = DCL_STARTUP('IIS6DTI',.FALSE.,IIS6DTI_CLD,.TRUE.)
C
C Get the name of the IIS file
C
	IF (OK) THEN
	   OK = DCL_FILE('P1','LSL$DTI:IIS.IMAGE',ABSENT,.FALSE.,.TRUE.)
	   IF (OK) CALL EXPFLN(IISFIL,IISLEN)
	END IF
C
C Get the name of the DTI file
C
	IF (OK) THEN
	   OK = DCL_FILE('P2','LSL$DTI:DTI.DTI',ABSENT,.FALSE.,.TRUE.)
	   IF (OK) CALL EXPFLN(DTIFIL,DTILEN)
	END IF
C
C Open the IIS file
C
	CALL FIMOPEN(	IMRN,IISFIL(1:IISLEN),MODE,DTYPE,XSIZE,YSIZE,
	1		ZSIZE,WSIZE)
	IF(XSIZE.LE.0)THEN
	   PRINT*,'%IIS6DTI-F-ERROPN Error opening IIS file for input'
	   GOTO 900
	ENDIF
	IF((4*XSIZE).LT.BUFSIZ)RX=XSIZE
C
C set DTI type in NBYTE
C
	IF(DTYPE.EQ.IMDTBYTE)THEN
	   NBYTE=1
	ELSE IF(DTYPE.EQ.IMDTSINT)THEN
	   NBYTE=2
	ELSE IF(DTYPE.EQ.IMDTINT)THEN
	   NBYTE=3
	ENDIF
C
C Create the DTI file
C
	OK = DTI_CREATE(DTI_LUN,DTIFIL,DTILEN,1,,NBYTE,XSIZE,YSIZE,ERROR) 
C
	DO 110 I=1,(XSIZE+RX-1)/RX	
	XSTART=(I-1)*RX+1
	XLEN=MIN(RX,XSIZE+1-XSTART)
	DO 100 J=1,(YSIZE+RY-1)/RY	
	YSTART=(J-1)*RY+1
	YLEN=MIN(RY,YSIZE+1-YSTART)
C
	IF(NBYTE.EQ.1)THEN
C Read in a rectangle of data, XLEN x YLEN
	   CALL FIMREAD(IMRN,BBUFF,DTYPE,XSTART,YSTART,1,1,XLEN,YLEN,1,1,MODE)
C Convert to the corresponding DTI array
	   DO 50 N=1,XLEN*YLEN
	   M=YLEN+YLEN*MOD(N-1,XLEN)-(N-1)/XLEN
	   BBUFA(M)=BBUFF(N)
50	   CONTINUE
C Set the starting row in the DTI file (DTI is in bottom-top order)
	   YSTART=(YSIZE+2-YLEN)-YSTART
C Write out the rectangle to the DTI file
	   OK = DTI_COPY_BYTE_DATA(DTI_LUN,BBUFA,.TRUE.,XSTART,YSTART,
	1	XLEN,YLEN,ERROR)
	ELSE IF(NBYTE.EQ.2)THEN
	   CALL FIMREAD(IMRN,IBUFF,DTYPE,XSTART,YSTART,1,1,XLEN,YLEN,1,1,MODE)
C Convert to the corresponding DTI array
	   DO 60 N=1,XLEN*YLEN
	   M=YLEN+YLEN*MOD(N-1,XLEN)-(N-1)/XLEN
	   IBUFA(M)=IBUFF(N)
60	   CONTINUE
C Set the starting row in the DTI file (DTI is in bottom-top order)
	   YSTART=(YSIZE+2-YLEN)-YSTART
C Write out the rectangle to the DTI file
	   OK = DTI_COPY_WORD_DATA(DTI_LUN,IBUFA,.TRUE.,XSTART,YSTART,
	1	XLEN,YLEN,ERROR)
	ELSE IF(NBYTE.EQ.3)THEN
	   CALL FIMREAD(IMRN,LBUFF,DTYPE,XSTART,YSTART,1,1,XLEN,YLEN,1,1,MODE)
C Convert to the corresponding DTI array
	   DO 70 N=1,XLEN*YLEN
	   M=YLEN+YLEN*MOD(N-1,XLEN)-(N-1)/XLEN
	   LBUFA(M)=LBUFF(N)
70	   CONTINUE
C Set the starting row in the DTI file (DTI is in bottom-top order)
	   YSTART=(YSIZE+2-YLEN)-YSTART
C Write out the rectangle to the DTI file
	   OK = DTI_COPY_LONG_DATA(DTI_LUN,LBUFA,.TRUE.,XSTART,YSTART,
	1	XLEN,YLEN,ERROR)
	ENDIF
C
100	CONTINUE
110	CONTINUE
C
C Calculate the minimum and maximum values within the DTI file and write the 
C values to the DTI header
C
	OK = DTI_MINMAX_DATA(DTI_LUN,.TRUE.,ERROR)
C
C Close the DTI file
C
	OK = DTI_CLOSE(DTI_LUN,.TRUE.,.FALSE.,ERROR)
C
C Close the IIS file
C
	CALL FIMCLOSE(IMRN)
C
900	CALL LSL_EXIT
	CALL EXIT
	END 
