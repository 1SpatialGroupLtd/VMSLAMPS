C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1988-06-22 14:16:08.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL FUNCTION LATLONG_CMD( ISLAT )
C
***	MODULE	LATLONG_CMD
***	IDENT	21JN88
C
C	Copyright LaserScan Laboratories Ltd., Cambridge, England
C
C Author TJ Ibbs, 6 June 1983
C Modified CC Brunt, 26 August 1983
C		&     4 October 1983
C stolen for DTEDIN  10 October 1983
C Adapted for DTED2DTI , grid option removed to EASNOR_CMD
C							FJB 18-Feb-1988
C Include MESPAR.PAR from 'LSL$DTMCONVERTSYS' now.FJB 21-Jun-1988
C
C
C Read a latitude and/or longitude (according to the setting of ISLAT).
C
C Return FALSE if something goes wrong, else TRUE
C
	IMPLICIT NONE
C
C we were passed
C
	LOGICAL		ISLAT	! is it a latitude we want?
C                
C Common:
	INCLUDE 'LSL$CMNDTED2DTI:OPTIONS.CMN'	! for searching for a map
	INCLUDE 'LSL$DTMCONVERTSYS:DTIFILE.CMN'	! DTI file details
	INCLUDE 'LSL$CMNLSL:CMDCOM.CMN'
C
C
C For messages:
	INCLUDE	'LSL$CMNLSL:TXTC.CMN'
     	INCLUDE 'LSL$CMNLSL:LSLLIBMSG.PAR'
	INCLUDE 'LSL$DTMCONVERTSYS:MESPAR.PAR'
C
C
C we call
C
	LOGICAL		RDCHS
	LOGICAL		RDREAL
	LOGICAL		READLL		! reads a free format angle
	INTEGER*4	RDCOMM
C
C we use command table
C
	EXTERNAL	DTED2DTI_CMD_TABLE
	INTEGER*4	DTED2DTI_CMD_TABLE
C
C we also need
C
	CHARACTER*4	LALO	! descriptor for what it is
	REAL		TENSEC	! collect the angle in this
	LOGICAL		MINUS	! is the angle negative
	INTEGER*2	PTR	! decode pointer save
	BYTE		CH	! for RDCHS
	INTEGER*4	CMD	! for RDCOMM
C
C
	LATLONG_CMD = .TRUE.    ! assume success
C
C We have just read LATITUDE or LONGITUDE
C which take no arguments.
C
C
C now we must read an angle...
C
10	IF(.NOT.READLL(TENSEC,ISLAT))GOTO 900
C
C and so we can set up the search...
C
	IF ( ISLAT ) THEN
	   SKLAT  = TENSEC
	   SERLAT = .TRUE.
	ELSE
	   SKLONG = TENSEC
	   SERLON = .TRUE.
	ENDIF
C
C no searching by number
C
	SERNUM = .FALSE.
C
C but definitely searching...
C
	SKIP   = .TRUE.
C
C End of line yet?
	IF(RDCHS(CH))GOTO 999
	CALL BSCH
C
C Had both values?             
	IF(SERLAT .AND. SERLON) GOTO 999
C	
C Is there another lat/long on same command line
	CMD = RDCOMM(DTED2DTI_CMD_TABLE)
C
	IF(CMD .EQ. 8)GOTO 110		!latitude
	IF(CMD .EQ. 9)GOTO 120 		!longitude
C
C command number out of range
	CALL WRITEF(
     &		'%S Unknown command on command line',WARNING)
C
100	GOTO 900 
C
C Here with LATITUDE as second command
110	IF(ISLAT)THEN
	   CALL WRITEF('%S Already had a LATITUDE command',WARNING)
	   GOTO 900
	ENDIF
	ISLAT = .TRUE.
  	GOTO 10
C
C Here with LONGITUDE as second command
120	IF(.NOT.ISLAT)THEN
	   CALL WRITEF('%S Already had a LONGITUDE command',WARNING)
	   GOTO 900
	ENDIF
	ISLAT = .FALSE.
  	GOTO 10
C
C Error case
900	LATLONG_CMD = .FALSE.           
C
999	RETURN
	END
