C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1988-06-22 13:04:54.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL FUNCTION HELP_CMD
C
***	MODULE HELP_CMD
***	IDENT 21JN88
C
C	Copyright Laser-Scan Laboratories Ltd., Cambridge, England
C
C Amended for use in DTED2DTI from DTITILE		FJB 21-Jun-1988
C Modified from HELP_CMD in DTI2TEXT			ALB 04-Feb-1988
C                                                                      
C Function to give help with DTED2DTI commands and assumptions.
C
C Function returns .TRUE. if all is well.
C
	IMPLICIT NONE
C
C w/s
	INTEGER		OLDPTR	! for storing DCPTR for HELP 
	INTEGER		I	! loop counter
	INTEGER*4       CMD     ! decoded command number
	INTEGER*4       TEXLEN	! length of user requested string
	BYTE		CH	! for decoding user requested string
	LOGICAL		EOLN	!  "	"	"	"	"
	CHARACTER*80	LINE	! the users requested string
C
C Parameters
	INCLUDE	'LSL$CMNLSL:LSLLIBMSG.PAR'
C
	INTEGER		LINLEN	! max. length of help text string
	PARAMETER	(LINLEN=80)
C
C Command table
	INTEGER		HELP_CMD_TABLE
	EXTERNAL	HELP_CMD_TABLE
C
C Functions
	INTEGER		RDCOMM
	INTEGER		LBR$OUTPUT_HELP
	INTEGER		LIB$PUT_OUTPUT
	EXTERNAL	LIB$PUT_OUTPUT
	LOGICAL		RDCH
C
C Condition handler
CCCC	EXTERNAL HLP_ERRET
C
C common:
	INCLUDE 'LSL$CMNLSL:CMDCOM.CMN'
	INCLUDE 'LSL$CMNLSL:EXCEPTION.CMN'
	INCLUDE 'LSL$CMNLSL:TXTC.CMN'
C
C ......................................................................
C
	HELP_CMD = .FALSE.		! assume we fail
C
C Establish condition handler
CCCC	CALL LIB$ESTABLISH( HLP_ERRET )
C
C Check that the user has not asked for help on DTMCONVERT or DTED2DTI
C these will have to be treated separately.
	TEXLEN=0
	OLDPTR = DCPTR		! save old cmd decode pointer for now
	NOMESS = .TRUE.		! suppress CMDLIB's messages
	CMD=RDCOMM(HELP_CMD_TABLE)
	IF(ERRNUM.NE.LSL__NORMAL) DCPTR = OLDPTR
	NOMESS = .FALSE.	
	GOTO (10, 10, 20, 10), CMD+1
C
C As the subject of interest to the user is not DTMCONVERT or DTED2DTI
C add these keywords to the start of the string to be searched for in
C the help library LSL$LIBRARY:DTMCONVERT.HLB
C
10	CONTINUE
	LINE='DTMCONVERT DTED2DTI'
	TEXLEN=19
	GOTO 30
C
C The user is interested in DTMCONVERT
C
20	CONTINUE
	LINE='DTMCONVERT'
	TEXLEN=10
C
C Decode TXTBUF
C
30	CONTINUE
C
C read characters form buffer into LINE string 
C
	EOLN = RDCH(CH)
	DO 50 I = 1,LINLEN
	   IF(EOLN.OR.CH.EQ.13) GOTO 100	! end loop on EOLN or <CR>
	   TEXLEN=TEXLEN+1
	   LINE(TEXLEN:TEXLEN) = CHAR(CH)
	   EOLN = RDCH(CH)
50	CONTINUE
C
C too many characters in string
C
	CALL WRITEF(
     &	'HELP command string too long - maximum %N characters',
     &					LINLEN)
	GOTO 999
C
C Check that no arguments were supplied at all. If so, give some
C general help on DTED2DTI
C
100	CONTINUE
	IF (TEXLEN.EQ.0) THEN
	   LINE='DTMCONVERT DTED2DTI'
	   TEXLEN=19
	ENDIF
C
	HELP_CMD=LBR$OUTPUT_HELP(LIB$PUT_OUTPUT,! output_routine
     &                       ,			! output_width
     &                       LINE(1:TEXLEN),	! line_descr
     &                       'LSL$HELP:DTMCONVERT',	! library_name
     &                       0,			! flags
     &                       )			! input_routine
C
C	Output a blank line to separate prompt from help text.
	CALL WRITEF(' ')
C
C Revert to normal error processing
C Function is set by LBR$OUTPUT_HELP above
C
999	CONTINUE
CCCC	CALL LIB$REVERT
	RETURN
	END
