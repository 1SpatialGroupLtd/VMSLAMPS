	LOGICAL FUNCTION ENABLE_CMD()
C
***	MODULE	ENABLE_CMD
**	IDENT	21JN88
C                     
C	Copyright (C), Laser-Scan Laboratories Ltd., Cambridge, England
C
C	Include MESPAR.PAR from 'LSL$DTMCONVERTSYS' now.FJB 21-Jun-1988
C	Adapted from DTICONTOUR				FJB 12-Feb-1988
C	Modified to include FULL option			SAB 20-Aug-1996
C	Created						TJH 13-Oct-1987
C
C Function to set command switches 'on' eg ENABLE DEBUG. This
C replaces the grotty CMDLIB + or - mechanism and must be used in
C conjunction with function DISABLE for turning switches off again. 
C
C Function returns .TRUE. if all is well, .FALSE. if an error
C
	IMPLICIT NONE
C
C
C Common blocks:
	INCLUDE 'LSL$CMNDTED2DTI:OPTIONS.CMN'
	INCLUDE 'LSL$CMNLSL:CMDCOM.CMN'
C
C For messages:
	INCLUDE	'LSL$CMNLSL:TXTC.CMN'
     	INCLUDE 'LSL$CMNLSL:LSLLIBMSG.PAR'
	INCLUDE 'LSL$DTMCONVERTSYS:MESPAR.PAR'
C
C
C Functions:
	LOGICAL 	RDCOMM  	! read command from line
C
C W/s
	BYTE		CH	! for use with RDCHS
	INTEGER		CMD     ! decoded command number
C
C Command table:
	EXTERNAL	ENABLE_CMD_TABLE
	INTEGER		ENABLE_CMD_TABLE
C
C ......................................................................
C
	ENABLE_CMD=.TRUE.			! assume success
	NOMESS=.TRUE.			! turn off CMDLIB messages
C
	CMD=RDCOMM(ENABLE_CMD_TABLE)	! get command
	GOTO (
     &		10,	! error/nothing
     &		20,	! debug
     &		30,	! diagnostics
     &		40,	! grid
     &		50,	! pme
     &		60	! full
     &			), CMD+1
C
C
C command number out of range
	CALL WRITEF('Command not yet implemented')
	ENABLE_CMD=.FALSE.
	GOTO 999
C
C ......................................................................
C DISABLE ?
C
10	CALL WRITEF
	CALL WRITEF('%S Invalid qualifier',WARNING)
	CALL WRITEF
	CALL WRITEF(
     &		'Available ENABLE command qualifiers are:')
	CALL WRITEF
	CALL WRITEF(
     &		'DEBUG	  DIAGNOSTICS	 GRID 	 PME	  FULL')
	CALL WRITEF
	ENABLE_CMD=.FALSE.
	GOTO 999
C
C ......................................................................
C ENABLE DEBUG
20	IF(.NOT.DEBUG)THEN
	   DEBUG = .TRUE.
	ELSE
	   CALL WRITEF('%S You are already using DEBUG',WARNING)
	ENDIF
	GOTO 999
C
C ......................................................................
C ENABLE DIAGNOSTICS
30	DIAG=.TRUE.
	GOTO 999
C
C ......................................................................
C ENABLE GRID
40	GRID = .TRUE.
	GOTO 999
C
C ......................................................................
C ENABLE PME  - Performance monitor and evaluation
C
50	IF (.NOT.PMEING) THEN
	   CALL PME_INIT
	   PMEING=.TRUE.
	ELSE
	   CALL WRITEF('%S You are already using PME !', WARNING)
	ENDIF
	GOTO 999
C
C ......................................................................
C ENABLE FULL
60	FULL = .TRUE.
	GOTO 999
C
C ......................................................................
C
999	NOMESS=.FALSE.
	RETURN
	END
