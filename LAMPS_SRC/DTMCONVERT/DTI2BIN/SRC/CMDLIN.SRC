C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1992-05-13 17:58:50.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	INTEGER FUNCTION CMDLIN
C
***     MODULE CMDLIN
***     IDENT  13MY92
C
C Copyright Laser-Scan Ltd, Cambridge, England
C
C Author (modified version of CMDLIN from NTF2DTI)	SG	22-Aug-1991
C Rehashed for DTI2BIN					PGH	13-MAy-1992
C
C Reads and decodes the command line
C
C
	IMPLICIT NONE
C
C Messages:
C
	INCLUDE	'LSL$CMNLSL:LSLLIBMSG.PAR'
	INCLUDE	'HERE:DTI2BINMSG.PAR'
C
C Commons:
C
	INCLUDE		'LSL$CMNDTI:DTIHDR.CMN'
	INCLUDE 	'LSL$CMNLSL:CLD.CMN'
	INCLUDE		'LSL$CMNLSL:FILENAME.CMN'
	INCLUDE 	'HERE:COMMANDS.CMN'
	INCLUDE		'HERE:FILENAME.CMN'
C
C Command language definitions:
C
	EXTERNAL 	DTI2BIN_CLD
C
C Functions:
C
	LOGICAL 	DCL_FILE
	LOGICAL 	DCL_STARTUP
	LOGICAL 	DCL_QUAL
	LOGICAL 	DCL_STR
	LOGICAL 	DCL_INT
	LOGICAL 	DCL_REAL
	LOGICAL		TEST_FOREIGN
	LOGICAL		GET_INFILE
	INTEGER*4	TEST_TERM
C
C Workspace:
C
	INTEGER		OK			!  Function return
	LOGICAL 	THERE,ABSENT		!  File-spec THERE ?
	LOGICAL 	FPRES			!  Qualifier present
	LOGICAL 	FNEGA			!  Qualifier negated
	INTEGER		LOOP			!  DO loop counter
	INTEGER		IERR			!  Error flag
	INTEGER		ITMP			!  temporary variable
	LOGICAL		HAD_FILES		!  have we had DTI files?
C
C#######################################################################
C initialise default settings
C
	DENSITY = 6250
C
	LOG       = .FALSE.
	INPUT     = .FALSE.
	OUTPUT    = .FALSE.
	HAD_FILES = .FALSE.
C
C--------------------------------------------------------------------------
C Initialise the command line
C
	OK=DCL_STARTUP('DTI2BIN',.FALSE.,DTI2BIN_CLD,.TRUE.)
	IF (.NOT.OK) GOTO 999
C
C--------------------------------------------------------------------------
C /LOG - get this first so we know if we should output messages
C		
	OK=DCL_QUAL('LOG',LOG,FPRES,FNEGA,.TRUE.)
	IF (.NOT.OK) GOTO 999
C
	IF (LOG) THEN
	  CALL TEST_TERM('SYS$OUTPUT:',IS_TERM,IERR)	!are we on a terminal
C	  IF (IS_TERM)  CALL LIB$PUT_OUTPUT(ESC//'[2J'//ESC//'[0H')	
	ENDIF
C
C-------------------------------------------------------------------------- 
C Now get the input files... ignore these if the /INPUT was specified
C
	OK=DCL_QUAL('INPUT',THERE,FPRES,FNEGA,.TRUE.)
	IF (.NOT.THERE) THEN
	  OK=DCL_FILE('DTIFILES','LSL$DTI:.DTI',ABSENT,.TRUE.,.TRUE.)
	  IF (.NOT.OK) GOTO 999
C
C	  ..................................................................
C	  get the input files if any were specified.
C
	  IF (.NOT.ABSENT) THEN				!if files present
	    DO 100, LOOP =1,NUMFIL			!for each file name
	       ITMP = FIL_LEN(LOOP)
	       DTI_FLEN(LOOP) = ITMP			!length of file name
	       DTI_FNAME(LOOP)(1:ITMP) = FILARY(LOOP)(1:ITMP)
100	    CONTINUE
	    DTI_FNUM = NUMFIL				!remember how many files
	    HAD_FILES = .TRUE.
	  ENDIF
	ENDIF
C
C---------------------------------------------------------------------------
C Now get the BIN output filename.
C
	OK=DCL_FILE('BINFILES','OUT.BIN',ABSENT,.TRUE.,.TRUE.)
	IF (.NOT.OK) GOTO 999
C
	BIN_FLEN=FIL_LEN(1)
	BIN_FNAME=FILARY(1)(1:BIN_FLEN)
C
C	....................................................................
C	If a device name was given, see if it is mounted /FOREIGN for magtape
C
	IF (HAD_DEV) THEN
	   OK=TEST_FOREIGN(STR_DEV(1:LEN_DEV),IS_MAGTAPE,IERR)
	   IF (.NOT.OK) THEN
	      CALL LSL_PUTMSG(DTI2BIN__TESTFOR,STR_DEV(1:LEN_DEV))
	      CALL LSL_ADDMSG(OK)
	      IF (OK.EQ.LSL__SYSERR) CALL LSL_ADDMSG(IERR)
	      GOTO 999
	   ENDIF
	   IF (IS_MAGTAPE) THEN
	      DEV_FLEN=LEN_DEV
	      DEV_FNAME=STR_DEV(1:LEN_DEV)	! remember the device name
	   ENDIF
	ELSE
	   IS_MAGTAPE=.FALSE.
	ENDIF
C
C---------------------------------------------------------------------------
C /DENSITY
C
	OK=DCL_QUAL('DENSITY',THERE,FPRES,FNEGA,.TRUE.)
	IF (OK.AND.THERE) THEN				!qualifier was there
	   OK=DCL_INT('DENSITY',.TRUE.)			!read the number
	   IF (OK) THEN					!success
	     DENSITY=IARRAY(1)				!get the number
	     OK = ((DENSITY.EQ.1600).OR.(DENSITY.EQ.800)
     &         .OR.(DENSITY.EQ.6250)) ! validate
	   ENDIF
	   IF (.NOT.OK) CALL LSL_PUTMSG(DTI2BIN__NODENS) !wrong density
	ENDIF
C
	IF (.NOT.OK) GOTO 999
C
C------------------------------------------------------------------------------
C /INPUT- if say want to join 200 DTI files, it would be impractical to
C specify them all on the command line, so read them from the specified file
C
C **NOTE** HAD_FILES is set above if files were specified on the command line. 
C if /INPUT was specified aswell, this is where the program decides to ignore 
C the files on the command line
C
C **NOTE** that this part of the code has been moved down here because it makes
C use of a different CLD module. This prevents the program re-prompting for file
C names if the original CLD module was restored
C
	OK = DCL_QUAL('INPUT',INPUT,FPRES,FNEGA,.TRUE.)
	IF (.NOT.OK) GOTO 999
C
	IF (INPUT) THEN
	   IF (HAD_FILES) CALL LSL_PUTMSG(DTI2BIN__IGNINFILES)
 	   OK = DCL_FILE('INPUT','DTI2BIN.INP',THERE,.TRUE.,.TRUE.)
	   IF (OK) OK = GET_INFILE ( FILARY(1), FIL_LEN(1) )	!read filenames
	ELSEIF (.NOT.HAD_FILES) THEN
	   CALL LSL_PUTMSG(DTI2BIN__NODTIIN)		!no dti files to convert
	   OK = .FALSE.					!errrrr
	ENDIF
C
C###########################################################################
C
999	CMDLIN = OK
C
	RETURN
	END
C
