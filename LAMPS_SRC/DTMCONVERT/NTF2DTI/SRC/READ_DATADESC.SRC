	LOGICAL FUNCTION READ_DATADESC(IN_STR,IN_LEN,FIND_STR,FIND_LEN,OUTWIDTH)
C
***	MODULE	READ_DATADESC
***	IDENT	21JN93
C
C Copyright (C) Laser-Scan Ltd, Cambridge, England
C
C Author 					SG 10-Sep-1991
C
CMOD1242 					JB 21-Jun-1993
C	Add ver 2.0 level 5 (same format for field name and width)
C
C This reads the data description and looks for in particular GRIDVAL
C We read the field length and use this to interpret the data fields
C Only interested in the field name and the field_width
C
	IMPLICIT NONE
C
	CHARACTER*80	IN_STR
	INTEGER		IN_LEN
	CHARACTER*80	FIND_STR
	INTEGER		FIND_LEN
	INTEGER		OUTWIDTH
C
C functions
	LOGICAL		RDINT
C
C Workspace
	CHARACTER*10	FIELD_NAME
	CHARACTER*3	FWIDTH
C
	INTEGER		FNAME_LEN,START
	LOGICAL		OK, IS_SPACE
C
C-------------------------------------------------------------------------------
C
	OK 	   = .TRUE.
	FIELD_NAME = IN_STR(3:12)
	FWIDTH	   = IN_STR(13:15)
C
C-------------------------------------------------------------------------------
C attempt to get the value from the DATADESC
C
	IS_SPACE = .TRUE.
	START    = 0
C
C	........................................................................
C	skip over any leading spaces
C
	DO WHILE(IS_SPACE .AND. START.LT.10)
	  START = START + 1
	  IS_SPACE = FIELD_NAME(START:START).EQ.' '
	END DO
C
C	........................................................................
C	check there is enough space for the name we are looking for
C
	OK = (START.LT.10) .AND. (START+FIND_LEN+1 .LE. 10)
	IF (OK) THEN
C
C	  ......................................................................
C	  ensure it is the one we want and get the data
C
	  OK = FIELD_NAME(START:START+FIND_LEN-1).EQ.FIND_STR(1:FIND_LEN)
	  IF (OK) THEN
	    CALL SETAUX(%REF(FWIDTH),3)
	    OK = .NOT.RDINT(OUTWIDTH)
	  ENDIF
	ENDIF
C
C###############################################################################
C	
	READ_DATADESC = OK
	RETURN
	END		
