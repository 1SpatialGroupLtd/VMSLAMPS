C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1993-03-31 13:21:22.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL FUNCTION CHECK_FNAME (NAME, LEN, EXTENSION)
C
***	MODULE	CHECK_FNAME
***	IDENT	31MR93
C
C Copyright (C) Laser-Scan Ltd, Cambridge, England
C	
C	Author S.Gupta 19-August-1991
C
CMOD1213 Add : to VALIDCHARS for LSL$DTI: prefix
C
C	Function checks that the file name is acceptable by VMS. If no extension
C	was present it puts the specified 3 character file extension on the end.
C	Characters not accepeted by VMS are replaced with underscores. This 
C	always returns a VMS acceptable file name
C
C	.--------------pseudo code----------------------.
C	| check the file name for bad characters	|
C	| if no dot was found				|
C	|   append specified extension			|
C	`-----------------------------------------------'
C
	IMPLICIT NONE
C
	CHARACTER*80	NAME
	INTEGER		LEN
	CHARACTER*3	EXTENSION
C
	INTEGER		LOOP,RESULT
	LOGICAL		OK
	INTEGER		HAD_DOT
C
	CHARACTER*41	VALID_CHARS
C
C..............................................................................
	VALID_CHARS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789._$;:'
	OK 	= .TRUE.
	HAD_DOT = .FALSE.
C
	CALL STR$UPCASE(NAME(1:LEN), NAME(1:LEN))		!upper case
C
C..............................................................................
C Check each character in the input file. Get rid of multiple dots.
C A semi-colon before a dot is obviously wrong
C Replace bad characters with an underscore
C
	LOOP = 0		
C
	DO WHILE (LOOP.LT.LEN)					!each character
	   LOOP = LOOP+1
	   RESULT = INDEX( VALID_CHARS, NAME(LOOP:LOOP))	!check
C
	   IF (NAME(LOOP:LOOP).EQ.'.') THEN
	     HAD_DOT = HAD_DOT+1				!how many dots
	     IF (HAD_DOT.GT.1) RESULT = 0			!too many dots
C
	   ELSEIF (NAME(LOOP:LOOP).EQ.';' .AND. HAD_DOT.EQ.0) THEN
	     RESULT = 0
	   ENDIF
C
	   IF (RESULT.EQ.0) NAME(LOOP:LOOP) = '_'		!replace if bad
	END DO
C
C..............................................................................
C If no dot was found then append the specified extension 
C
	IF (HAD_DOT.EQ.0) THEN				! no dots found
	  IF (LEN.GT.76) LEN = 76			!truncate huge names
	  NAME(LEN+1:LEN+4) = '.'//EXTENSION		!append the extension
	  LEN = LEN +4					!adjust file name length
	ENDIF
C
	CHECK_FNAME = OK
	RETURN
	END	
C
