
                                                                 6-Aug-1997 09:37:25	VAX FORTRAN V5.9-173                Page   1
                                                                 6-Aug-1997 09:37:25	[DTMCONVERT.NTF2DTI.SPECIAL]MISC.FOR;11     

00001   	SUBROUTINE READ_COMMENT
00002   C
00003   C
00004   C Copyright (C) Laser-Scan Ltd, Cambridge, England
00005   C
00006   C Author TJ Ibbs, 5 October 1987
00007   C
00008   	IMPLICIT NONE
00009   C
00010   C Common files
00011   	INCLUDE	'HERE:COMMANDS.CMN'
00030   	INCLUDE	'HERE:NTFDATA.CMN'
00091   	INCLUDE	'HERE:RECORD.CMN'
00114   C
00115   C############################################################################
00116   C
00117   	IF (.NOT.FIXED) LENGTH = LENGTH - 1		! miss EOR
00118   C
00119   	IF (OUTPUT.AND.LENGTH.GT.3) 
00120        &		CALL FLWSTR('// '//STRING(3:LENGTH-1))  ! ignore comment 
00121   C							! record
00122   	DO WHILE (STRING(LENGTH:LENGTH).EQ.'1')   	! ignore continuations
00123   	  CALL READ_CONTINUE('COMMENT')
00124   	  IF (.NOT.FIXED) LENGTH = LENGTH - 1		! miss EOR
00125   C
00126   	  IF (OUTPUT.AND.LENGTH.GT.3)
00127        &		CALL FLWSTR('// '//STRING(3:LENGTH-1))
00128   	END DO
00129   C
00130   C############################################################################
00131   C
00132   	RETURN
00133   	END

READ_COMMENT                                                     6-Aug-1997 09:37:25	VAX FORTRAN V5.9-173                Page   2
01                                                               6-Aug-1997 09:37:25	[DTMCONVERT.NTF2DTI.SPECIAL]MISC.FOR;11     

PROGRAM SECTIONS

    Name				 Bytes   Attributes

  0 $CODE                                  217   PIC CON REL LCL   SHR   EXE   RD NOWRT QUAD
  1 $PDATA                                  11   PIC CON REL LCL   SHR NOEXE   RD NOWRT QUAD
  2 $LOCAL                                  68   PIC CON REL LCL NOSHR NOEXE   RD   WRT QUAD
  3 COMMANDS                                40   PIC OVR REL GBL   SHR NOEXE   RD   WRT QUAD
  4 NTFDATA                                 16   PIC OVR REL GBL   SHR NOEXE   RD   WRT QUAD
  5 DTIDATA                                128   PIC OVR REL GBL   SHR NOEXE   RD   WRT QUAD
  6 RECORD1                                 86   PIC OVR REL GBL   SHR NOEXE   RD   WRT QUAD
  7 RECORD2                                  9   PIC OVR REL GBL   SHR NOEXE   RD   WRT QUAD

    Total Space Allocated                  575


ENTRY POINTS

    Address  Type  Name          

  0-00000000       READ_COMMENT  


VARIABLES

    Address  Type  Name                                               Address  Type  Name                            

  5-0000005C  I*4  COL_END                                          5-00000068  I*4  COL_INV                         
  5-00000058  I*4  COL_START                                        3-00000018  L*4  DEDUCE_FILE                     
  3-00000024  L*4  DTIOPEN                                          7-00000008  CHAR EOR_MARKER                      
  5-00000078  I*4  FIELD_WIDTH                                      4-0000000C  L*4  FIXED                           
  5-00000074  I*4  INTERPRET                                        4-00000004  I*4  INTVER                          
  3-0000001C  L*4  IS_MAGTAPE                                       3-00000010  L*4  IS_OS                           
  3-00000020  L*4  IS_TERM                                          7-00000004  I*4  LENGTH                          
  4-00000000  I*4  LEVEL                                            3-00000000  L*4  LOG                             
  6-00000054  CHAR NTF$_REC_DESCR                                   5-0000007C  I*4  NUM_FIELD                       
  5-0000002C  I*4  N_COLUMNS                                        5-00000028  I*4  N_ROWS                          
  5-00000070  I*4  ORDER                                            3-00000004  L*4  OUTPUT                          
  3-00000008  L*4  PROJECT                                          7-00000000  I*4  RECNUM                          
  3-00000014  L*4  REWIND                                           5-00000064  I*4  ROW_END                         
  5-0000006C  I*4  ROW_INV                                          5-00000060  I*4  ROW_START                       
  3-0000000C  L*4  SECT                                             6-00000000  CHAR STRING                          
  6-00000050  I*4  STR_LEN                                          4-00000008  R*4  VERSION                         
  5-00000014  I*4  XMAX                                             5-00000010  I*4  XMIN                            
  5-00000000  I*4  XYLEN                                            5-00000008  R*4  XY_MULT                         
  5-00000004  I*4  XY_UNIT                                          5-00000030  R*4  X_ORIG                          
  5-00000020  I*4  X_SAMP                                           5-0000001C  I*4  YMAX                            
  5-00000018  I*4  YMIN                                             5-00000034  R*4  Y_ORIG                          
  5-00000024  I*4  Y_SAMP                                           5-0000000C  R*4  Z_MULT                          

READ_COMMENT                                                     6-Aug-1997 09:37:25	VAX FORTRAN V5.9-173                Page   3
01                                                               6-Aug-1997 09:37:25	[DTMCONVERT.NTF2DTI.SPECIAL]MISC.FOR;11     

ARRAYS

    Address  Type  Name                                  Bytes  Dimensions

  2-0000000C  CHAR STD_ATTR_CODES                            6  (3)
  2-00000000  I*4  STD_ATTR_LEN                             12  (3)
  5-00000038  R*4  X_COORD                                  16  (4)
  5-00000048  R*4  Y_COORD                                  16  (4)




FUNCTIONS AND SUBROUTINES REFERENCED

  Type  Name            Type  Name          

        FLWSTR                READ_CONTINUE 

                                                                 6-Aug-1997 09:37:25	VAX FORTRAN V5.9-173                Page   4
                                                                 6-Aug-1997 09:37:25	[DTMCONVERT.NTF2DTI.SPECIAL]MISC.FOR;11     

00001   C
00002    
00003   	LOGICAL FUNCTION CHECK_FNAME (NAME, LEN, EXTENSION)
00004   C
00005   C
00006   C Copyright (C) Laser-Scan Ltd, Cambridge, England
00007   C	
00008   C	Author S.Gupta 19-August-1991
00009   C
00010   CMOD1213 Add : to VALIDCHARS for LSL$DTI: prefix
00011   C
00012   C	Function checks that the file name is acceptable by VMS. If no extension
00013   C	was present it puts the specified 3 character file extension on the end.
00014   C	Characters not accepeted by VMS are replaced with underscores. This 
00015   C	always returns a VMS acceptable file name
00016   C
00017   C	.--------------pseudo code----------------------.
00018   C	| check the file name for bad characters	|
00019   C	| if no dot was found				|
00020   C	|   append specified extension			|
00021   C	`-----------------------------------------------'
00022   C
00023   	IMPLICIT NONE
00024   C
00025   	CHARACTER*80	NAME
00026   	INTEGER		LEN
00027   	CHARACTER*3	EXTENSION
00028   C
00029   	INTEGER		LOOP,RESULT
00030   	LOGICAL		OK
00031   	INTEGER		HAD_DOT
00032   C
00033   	CHARACTER*41	VALID_CHARS
00034   C
00035   C..............................................................................
00036   	VALID_CHARS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789._$;:'
00037   	OK 	= .TRUE.
00038   	HAD_DOT = .FALSE.
00039   C
00040   	CALL STR$UPCASE(NAME(1:LEN), NAME(1:LEN))		!upper case
00041   C
00042   C..............................................................................
00043   C Check each character in the input file. Get rid of multiple dots.
00044   C A semi-colon before a dot is obviously wrong
00045   C Replace bad characters with an underscore
00046   C
00047   	LOOP = 0		
00048   C
00049   	DO WHILE (LOOP.LT.LEN)					!each character
00050   	   LOOP = LOOP+1
00051   	   RESULT = INDEX( VALID_CHARS, NAME(LOOP:LOOP))	!check
00052   C
00053   	   IF (NAME(LOOP:LOOP).EQ.'.') THEN
00054   	     HAD_DOT = HAD_DOT+1				!how many dots
00055   	     IF (HAD_DOT.GT.1) RESULT = 0			!too many dots
00056   C
00057   	   ELSEIF (NAME(LOOP:LOOP).EQ.';' .AND. HAD_DOT.EQ.0) THEN

CHECK_FNAME                                                      6-Aug-1997 09:37:25	VAX FORTRAN V5.9-173                Page   5
                                                                 6-Aug-1997 09:37:25	[DTMCONVERT.NTF2DTI.SPECIAL]MISC.FOR;11     

00058   	     RESULT = 0
00059   	   ENDIF
00060   C
00061   	   IF (RESULT.EQ.0) NAME(LOOP:LOOP) = '_'		!replace if bad
00062   	END DO
00063   C
00064   C..............................................................................
00065   C If no dot was found then append the specified extension 
00066   C
00067   	IF (HAD_DOT.EQ.0) THEN				! no dots found
00068   	  IF (LEN.GT.76) LEN = 76			!truncate huge names
00069   	  NAME(LEN+1:LEN+4) = '.'//EXTENSION		!append the extension
00070   	  LEN = LEN +4					!adjust file name length
00071   	ENDIF
00072   C
00073   	CHECK_FNAME = OK
00074   	RETURN
00075   	END	




PROGRAM SECTIONS

    Name				 Bytes   Attributes

  0 $CODE                                  220   PIC CON REL LCL   SHR   EXE   RD NOWRT QUAD
  1 $PDATA                                  41   PIC CON REL LCL   SHR NOEXE   RD NOWRT QUAD
  2 $LOCAL                                 136   PIC CON REL LCL NOSHR NOEXE   RD   WRT QUAD

    Total Space Allocated                  397


ENTRY POINTS

    Address  Type  Name          

  0-00000000  L*4  CHECK_FNAME   


VARIABLES

    Address  Type  Name              Address  Type  Name              Address  Type  Name              Address  Type  Name          

 AP-0000000C@ CHAR EXTENSION       2-0000003C  I*4  HAD_DOT        AP-00000008@ I*4  LEN             2-00000030  I*4  LOOP          
 AP-00000004@ CHAR NAME            2-00000038  L*4  OK              2-00000034  I*4  RESULT          2-00000000  CHAR VALID_CHARS   


FUNCTIONS AND SUBROUTINES REFERENCED

  Type  Name            Type  Name          

   I*4  INDEX                 STR$UPCASE    

                                                                 6-Aug-1997 09:37:25	VAX FORTRAN V5.9-173                Page   6
                                                                 6-Aug-1997 09:37:25	[DTMCONVERT.NTF2DTI.SPECIAL]MISC.FOR;11     

00001   C
00002    
00003   	LOGICAL FUNCTION READ_DATADESC(IN_STR,IN_LEN,FIND_STR,FIND_LEN,OUTWIDTH)
00004   C
00005   C
00006   C Copyright (C) Laser-Scan Ltd, Cambridge, England
00007   C
00008   C Author 					SG 10-Sep-1991
00009   C
00010   CMOD1242 					JB 21-Jun-1993
00011   C	Add ver 2.0 level 5 (same format for field name and width)
00012   C
00013   C This reads the data description and looks for in particular GRIDVAL
00014   C We read the field length and use this to interpret the data fields
00015   C Only interested in the field name and the field_width
00016   C
00017   	IMPLICIT NONE
00018   C
00019   C Commons:
00020   	INCLUDE	'HERE:RECORD.CMN'
00043   	INCLUDE	'HERE:NTFDATA.CMN'
00104   C
00105   	CHARACTER*80	IN_STR
00106   	INTEGER		IN_LEN
00107   	CHARACTER*80	FIND_STR
00108   	INTEGER		FIND_LEN
00109   	INTEGER		OUTWIDTH
00110   C
00111   C functions
00112   	LOGICAL		RDINT
00113   	LOGICAL		READ_CONTINUE	! read a continuation record
00114   C
00115   C Workspace
00116   	CHARACTER*10	FIELD_NAME
00117   	CHARACTER*3	FWIDTH
00118   C
00119   	INTEGER		FNAME_LEN,START
00120   	LOGICAL		OK, IS_SPACE
00121   C
00122   C-------------------------------------------------------------------------------
00123   C
00124   	OK 	   = .TRUE.
00125   	FIELD_NAME = IN_STR(3:12)
00126   	FWIDTH	   = IN_STR(13:15)
00127   C
00128   C-------------------------------------------------------------------------------
00129   C attempt to get the value from the DATADESC
00130   C
00131   	IS_SPACE = .TRUE.
00132   	START    = 0
00133   C
00134   C	........................................................................
00135   C	skip over any leading spaces
00136   C
00137   	DO WHILE(IS_SPACE .AND. START.LT.10)
00138   	  START = START + 1
00139   	  IS_SPACE = FIELD_NAME(START:START).EQ.' '

READ_DATADESC                                                    6-Aug-1997 09:37:25	VAX FORTRAN V5.9-173                Page   7
                                                                 6-Aug-1997 09:37:25	[DTMCONVERT.NTF2DTI.SPECIAL]MISC.FOR;11     

00140   	END DO
00141   C
00142   C	........................................................................
00143   C	check there is enough space for the name we are looking for
00144   C
00145   	OK = (START.LT.10) .AND. (START+FIND_LEN+1 .LE. 10)
00146   	IF (OK) THEN
00147   C
00148   C	  ......................................................................
00149   C	  ensure it is the one we want and get the data
00150   C
00151   	  OK = FIELD_NAME(START:START+FIND_LEN-1).EQ.FIND_STR(1:FIND_LEN)
00152   	  IF (OK) THEN
00153   	    CALL SETAUX(%REF(FWIDTH),3)
00154   	    OK = .NOT.RDINT(OUTWIDTH)
00155   	  ENDIF
00156   	ENDIF
00157   C ...................................................................
00158   C Ignore the rest of the record
00159   C
00160   200	CONTINUE
00161   C
00162   	IF (.NOT.FIXED) LENGTH = LENGTH - 1	! miss EOR marker
00163   C
00164   	IF (STRING(LENGTH:LENGTH).EQ.'1') THEN
00165   	   OK = READ_CONTINUE('DATADESC')
00166   	   IF (.NOT.OK) THEN
00167   	      GOTO 999
00168   	   ELSE
00169   	      GOTO 200
00170   	   ENDIF
00171   	ENDIF
00172   C
00173   C###############################################################################
00174   C	
00175   999	READ_DATADESC = OK
00176   	RETURN
00177   	END		

READ_DATADESC                                                    6-Aug-1997 09:37:25	VAX FORTRAN V5.9-173                Page   8
01                                                               6-Aug-1997 09:37:25	[DTMCONVERT.NTF2DTI.SPECIAL]MISC.FOR;11     

PROGRAM SECTIONS

    Name				 Bytes   Attributes

  0 $CODE                                  261   PIC CON REL LCL   SHR   EXE   RD NOWRT QUAD
  1 $PDATA                                  13   PIC CON REL LCL   SHR NOEXE   RD NOWRT QUAD
  2 $LOCAL                                 104   PIC CON REL LCL NOSHR NOEXE   RD   WRT QUAD
  3 RECORD1                                 86   PIC OVR REL GBL   SHR NOEXE   RD   WRT QUAD
  4 RECORD2                                  9   PIC OVR REL GBL   SHR NOEXE   RD   WRT QUAD
  5 NTFDATA                                 16   PIC OVR REL GBL   SHR NOEXE   RD   WRT QUAD
  6 DTIDATA                                128   PIC OVR REL GBL   SHR NOEXE   RD   WRT QUAD

    Total Space Allocated                  617


ENTRY POINTS

    Address  Type  Name          

  0-00000000  L*4  READ_DATADESC 


VARIABLES

    Address  Type  Name                                               Address  Type  Name                            

  6-0000005C  I*4  COL_END                                          6-00000068  I*4  COL_INV                         
  6-00000058  I*4  COL_START                                        4-00000008  CHAR EOR_MARKER                      
  2-00000012  CHAR FIELD_NAME                                       6-00000078  I*4  FIELD_WIDTH                     
 AP-00000010@ I*4  FIND_LEN                                        AP-0000000C@ CHAR FIND_STR                        
  5-0000000C  L*4  FIXED                                            2-00000024  I*4  FNAME_LEN                       
  2-0000001C  CHAR FWIDTH                                           6-00000074  I*4  INTERPRET                       
  5-00000004  I*4  INTVER                                          AP-00000008@ I*4  IN_LEN                          
 AP-00000004@ CHAR IN_STR                                           2-00000030  L*4  IS_SPACE                        
  4-00000004  I*4  LENGTH                                           5-00000000  I*4  LEVEL                           
  3-00000054  CHAR NTF$_REC_DESCR                                   6-0000007C  I*4  NUM_FIELD                       
  6-0000002C  I*4  N_COLUMNS                                        6-00000028  I*4  N_ROWS                          
  2-0000002C  L*4  OK                                               6-00000070  I*4  ORDER                           
 AP-00000014@ I*4  OUTWIDTH                                         4-00000000  I*4  RECNUM                          
  6-00000064  I*4  ROW_END                                          6-0000006C  I*4  ROW_INV                         
  6-00000060  I*4  ROW_START                                        2-00000028  I*4  START                           
  3-00000000  CHAR STRING                                           3-00000050  I*4  STR_LEN                         
  5-00000008  R*4  VERSION                                          6-00000014  I*4  XMAX                            
  6-00000010  I*4  XMIN                                             6-00000000  I*4  XYLEN                           
  6-00000008  R*4  XY_MULT                                          6-00000004  I*4  XY_UNIT                         
  6-00000030  R*4  X_ORIG                                           6-00000020  I*4  X_SAMP                          
  6-0000001C  I*4  YMAX                                             6-00000018  I*4  YMIN                            
  6-00000034  R*4  Y_ORIG                                           6-00000024  I*4  Y_SAMP                          
  6-0000000C  R*4  Z_MULT                                         

READ_DATADESC                                                    6-Aug-1997 09:37:25	VAX FORTRAN V5.9-173                Page   9
01                                                               6-Aug-1997 09:37:25	[DTMCONVERT.NTF2DTI.SPECIAL]MISC.FOR;11     

ARRAYS

    Address  Type  Name                                  Bytes  Dimensions

  2-0000000C  CHAR STD_ATTR_CODES                            6  (3)
  2-00000000  I*4  STD_ATTR_LEN                             12  (3)
  6-00000038  R*4  X_COORD                                  16  (4)
  6-00000048  R*4  Y_COORD                                  16  (4)




LABELS

    Address   Label       Address   Label   

  0-000000C8  200       0-000000FB  999     


FUNCTIONS AND SUBROUTINES REFERENCED

  Type  Name            Type  Name            Type  Name          

   L*4  RDINT            L*4  READ_CONTINUE         SETAUX        


COMMAND QUALIFIERS

  FORTRAN/EXTEND/DEBUG/NOOPT/LIST MISC

  /CHECK=(NOBOUNDS,OVERFLOW,NOUNDERFLOW)
  /DEBUG=(SYMBOLS,TRACEBACK)
  /DESIGN=(NOCOMMENTS,NOPLACEHOLDERS)
  /SHOW=(NODICTIONARY,NOINCLUDE,MAP,NOPREPROCESSOR,SINGLE)
  /STANDARD=(NOSEMANTIC,NOSOURCE_FORM,NOSYNTAX)
  /WARNINGS=(NODECLARATIONS,GENERAL,NOULTRIX,NOVAXELN)
  /CONTINUATIONS=19  /NOCROSS_REFERENCE  /NOD_LINES  /EXTEND_SOURCE
  /F77  /NOG_FLOATING  /I4  /NOMACHINE_CODE  /NOOPTIMIZE  /NOPARALLEL
  /NOANALYSIS_DATA
  /NODIAGNOSTICS
  /LIST=LSL$SOURCE_ROOT:[DTMCONVERT.NTF2DTI.SPECIAL]MISC.LIS;11                                             
  /OBJECT=LSL$SOURCE_ROOT:[DTMCONVERT.NTF2DTI.SPECIAL]MISC.OBJ;20                                             


COMPILATION STATISTICS

  Run Time:           0.55 seconds
  Elapsed Time:       1.06 seconds
  Page Faults:        639
  Dynamic Memory:     504 pages
