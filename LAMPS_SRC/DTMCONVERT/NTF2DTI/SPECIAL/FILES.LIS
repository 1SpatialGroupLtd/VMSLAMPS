
                                                                 6-Aug-1997 09:37:13	VAX FORTRAN V5.9-173                Page   1
                                                                 6-Aug-1997 09:37:13	[DTMCONVERT.NTF2DTI.SPECIAL]FILES.FOR;11    

00001   	LOGICAL FUNCTION OPEN_NTF
00002   C
00003   C
00004   C Copyright (C) Laser-Scan Ltd, Cambridge, England
00005   C
00006   C Author TJ Ibbs, 8 October 1987
00007   C
00008   C To open the NTF data file on magnetic tape or disk
00009   C
00010   C Modified 						I McLeman 6-Apr-1988
00011   C
00012   CMOD	replaced code with code ripped from NTF2I	SG	 15-Aug-1991
00013   C
00014   	IMPLICIT NONE
00015   C
00016   C Messages
00017   	INCLUDE	'LSL$CMNLSL:LSLLIBMSG.PAR'
00290   	INCLUDE	'HERE:NTF2DTIMSG.PAR'
00395   C
00396   C Common files
00397   	INCLUDE	'LSL$CMNLSL:FILENAME.CMN'
00458   	INCLUDE	'LSL$CMNLSL:MTIVCM.CMN'
00469   	INCLUDE	'HERE:COMMANDS.CMN'
00488   	INCLUDE	'HERE:FILENAME.CMN'
00508   	INCLUDE	'HERE:LUNS.PAR'
00518   C
00519   C Functions
00520   	LOGICAL		FLROPN		! open a file for read
00521   	LOGICAL		MTINIT		! initialise a tape for read
00522   C
00523   C Workspace
00524   	LOGICAL		OK		! function return
00525   	INTEGER		IERR		! ditto
00526   C
00527   C#############################################################################
00528   C Open the relevant sort of thing (unlike NTF2I, doesn't check for serial tapes)
00529   C
00530   	IF (IS_MAGTAPE) THEN				!is it a mag_tape?
00531   	   OK = MTINIT( DEVICE(:DEVLEN), .FALSE., 0 )
00532   	   IF (OK) THEN
00533   	      IF (LOG) CALL LSL_PUTMSG(NTF2DTI__NTFOPEN,DEVICE(:DEVLEN))
00534   	   ELSE
00535   	      CALL LSL_PUTMSG(NTF2DTI__MAGTAPE,DEVICE(:DEVLEN))
00536   	      CALL LSL_ADDMSG(OK)
00537   	      IF (OK.EQ.LSL__SYSERR) CALL LSL_ADDMSG(MTIERR)
00538   	   ENDIF
00539   C
00540   C	.......................................................................
00541   C	not a tape, must be a disk file
00542   C
00543   	ELSE
00544   C
00545   	   OK = FLROPN( NTFLUN, NTFFILE(:NTFLEN), IERR )
00546   	   IF (OK) THEN
00547   	      IF (LOG) CALL LSL_PUTMSG(NTF2DTI__NTFOPEN,NTFFILE(:NTFLEN))
00548   	   ELSE
00549   	      CALL LSL_PUTMSG(NTF2DTI__FILOPEN,NTFFILE(:NTFLEN))

OPEN_NTF                                                         6-Aug-1997 09:37:13	VAX FORTRAN V5.9-173                Page   2
                                                                 6-Aug-1997 09:37:13	[DTMCONVERT.NTF2DTI.SPECIAL]FILES.FOR;11    

00550   	      CALL LSL_ADDMSG(OK)
00551   	      IF (OK.EQ.LSL__SYSOPEN) CALL LSL_ADDMSG(IERR)
00552   	   ENDIF
00553   C
00554   	ENDIF
00555   C
00556   C##############################################################################
00557   C
00558   	OPEN_NTF = OK
00559   C
00560   	RETURN
00561   	END




PROGRAM SECTIONS

    Name				 Bytes   Attributes

  0 $CODE                                  262   PIC CON REL LCL   SHR   EXE   RD NOWRT QUAD
  1 $PDATA                                  24   PIC CON REL LCL   SHR NOEXE   RD NOWRT QUAD
  2 $LOCAL                                 172   PIC CON REL LCL NOSHR NOEXE   RD   WRT QUAD
  3 LSL_FNAM_STR                           210   PIC OVR REL GBL   SHR NOEXE   RD   WRT QUAD
  4 LSL_FNAM_LOG                            24   PIC OVR REL GBL   SHR NOEXE   RD   WRT QUAD
  5 LSL_FNAM_LEN                            24   PIC OVR REL GBL   SHR NOEXE   RD   WRT QUAD
  6 LSL_MTIVCM                               8   PIC OVR REL GBL   SHR NOEXE   RD   WRT QUAD
  7 COMMANDS                                40   PIC OVR REL GBL   SHR NOEXE   RD   WRT QUAD
  8 FILE_INT                                16   PIC OVR REL GBL   SHR NOEXE   RD   WRT QUAD
  9 FILE_CHR                               868   PIC OVR REL GBL   SHR NOEXE   RD   WRT QUAD

    Total Space Allocated                 1648


ENTRY POINTS

    Address  Type  Name          

  0-00000000  L*4  OPEN_NTF      


VARIABLES

    Address  Type  Name              Address  Type  Name              Address  Type  Name              Address  Type  Name          

  7-00000018  L*4  DEDUCE_FILE     9-000000D9  CHAR DEVICE          8-00000004  I*4  DEVLEN          9-000001B2  CHAR DTIFILE       
  8-00000008  I*4  DTILEN          7-00000024  L*4  DTIOPEN         4-00000004  L*4  HAD_DEV         4-00000008  L*4  HAD_DIR       
  4-00000010  L*4  HAD_EXT         4-0000000C  L*4  HAD_NAM         4-00000000  L*4  HAD_NOD         4-00000014  L*4  HAD_VER       
  2-00000008  I*4  IERR            7-0000001C  L*4  IS_MAGTAPE      7-00000010  L*4  IS_OS           7-00000020  L*4  IS_TERM       
  5-00000004  I*4  LEN_DEV         5-00000008  I*4  LEN_DIR         5-00000010  I*4  LEN_EXT         5-0000000C  I*4  LEN_NAM       
  5-00000000  I*4  LEN_NOD         5-00000014  I*4  LEN_VER         7-00000000  L*4  LOG             9-00000000  CHAR LOGFILE       
  8-00000000  I*4  LOGLEN          6-00000000  I*4  MTIERR          6-00000004  I*4  MTINBL          9-0000028B  CHAR NTFFILE       
  8-0000000C  I*4  NTFLEN          2-00000004  L*4  OK              7-00000004  L*4  OUTPUT          7-00000008  L*4  PROJECT       
  7-00000014  L*4  REWIND          7-0000000C  L*4  SECT            3-00000006  CHAR STR_DEV         3-0000001A  CHAR STR_DIR       
  3-000000A5  CHAR STR_EXT         3-0000007E  CHAR STR_NAM         3-00000000  CHAR STR_NOD         3-000000CC  CHAR STR_VER       

OPEN_NTF                                                         6-Aug-1997 09:37:13	VAX FORTRAN V5.9-173                Page   3
01                                                               6-Aug-1997 09:37:13	[DTMCONVERT.NTF2DTI.SPECIAL]FILES.FOR;11    

FUNCTIONS AND SUBROUTINES REFERENCED

  Type  Name            Type  Name            Type  Name            Type  Name          

   L*4  FLROPN                LSL_ADDMSG            LSL_PUTMSG       L*4  MTINIT        

                                                                 6-Aug-1997 09:37:13	VAX FORTRAN V5.9-173                Page   4
                                                                 6-Aug-1997 09:37:13	[DTMCONVERT.NTF2DTI.SPECIAL]FILES.FOR;11    

00001   C
00002    
00003   	LOGICAL FUNCTION OPEN_LOG
00004   C
00005   C
00006   C Copyright (C) LaserScan Laboratories Ltd, Cambridge, England
00007   C
00008   C Author TJ Ibbs, 8 October 1987
00009   C
00010   C To open a /OUTPUT file for logging the program's actions
00011   C
00012   	IMPLICIT NONE
00013   C
00014   C Messages
00015   C
00016   	INCLUDE	'LSL$CMNLSL:LSLLIBMSG.PAR'
00289   	INCLUDE	'HERE:NTF2DTIMSG.PAR'
00394   C
00395   C Common files
00396   C
00397   	INCLUDE	'LSL$CMNLSL:FILENAME.CMN'
00458   	INCLUDE	'HERE:COMMANDS.CMN'
00477   	INCLUDE	'HERE:FILENAME.CMN'
00497   	INCLUDE	'HERE:LUNS.PAR'
00507   C
00508   C Functions
00509   C
00510   	LOGICAL		LOG_OPEN	! open a log file
00511   C
00512   C Workspace
00513   C
00514   	LOGICAL		OK		! function return
00515   C
00516   C ********************************************************************
00517   C
00518   	OK = LOG_OPEN( LOGLUN, LOGFILE(:LOGLEN), LOG )
00519   	IF (.NOT.OK) THEN
00520   	   CALL LSL_PUTMSG(NTF2DTI__OUTOPEN,LOGFILE(:LOGLEN))
00521   	   CALL LSL_ADDMSG(OK)
00522   	ENDIF
00523   C
00524   	OPEN_LOG = OK
00525   	RETURN
00526   	END

OPEN_LOG                                                         6-Aug-1997 09:37:13	VAX FORTRAN V5.9-173                Page   5
01                                                               6-Aug-1997 09:37:13	[DTMCONVERT.NTF2DTI.SPECIAL]FILES.FOR;11    

PROGRAM SECTIONS

    Name				 Bytes   Attributes

  0 $CODE                                   80   PIC CON REL LCL   SHR   EXE   RD NOWRT QUAD
  1 $PDATA                                   8   PIC CON REL LCL   SHR NOEXE   RD NOWRT QUAD
  2 $LOCAL                                  60   PIC CON REL LCL NOSHR NOEXE   RD   WRT QUAD
  3 LSL_FNAM_STR                           210   PIC OVR REL GBL   SHR NOEXE   RD   WRT QUAD
  4 LSL_FNAM_LOG                            24   PIC OVR REL GBL   SHR NOEXE   RD   WRT QUAD
  5 LSL_FNAM_LEN                            24   PIC OVR REL GBL   SHR NOEXE   RD   WRT QUAD
  6 COMMANDS                                40   PIC OVR REL GBL   SHR NOEXE   RD   WRT QUAD
  7 FILE_INT                                16   PIC OVR REL GBL   SHR NOEXE   RD   WRT QUAD
  8 FILE_CHR                               868   PIC OVR REL GBL   SHR NOEXE   RD   WRT QUAD

    Total Space Allocated                 1330


ENTRY POINTS

    Address  Type  Name          

  0-00000000  L*4  OPEN_LOG      


VARIABLES

    Address  Type  Name              Address  Type  Name              Address  Type  Name              Address  Type  Name          

  6-00000018  L*4  DEDUCE_FILE     8-000000D9  CHAR DEVICE          7-00000004  I*4  DEVLEN          8-000001B2  CHAR DTIFILE       
  7-00000008  I*4  DTILEN          6-00000024  L*4  DTIOPEN         4-00000004  L*4  HAD_DEV         4-00000008  L*4  HAD_DIR       
  4-00000010  L*4  HAD_EXT         4-0000000C  L*4  HAD_NAM         4-00000000  L*4  HAD_NOD         4-00000014  L*4  HAD_VER       
  6-0000001C  L*4  IS_MAGTAPE      6-00000010  L*4  IS_OS           6-00000020  L*4  IS_TERM         5-00000004  I*4  LEN_DEV       
  5-00000008  I*4  LEN_DIR         5-00000010  I*4  LEN_EXT         5-0000000C  I*4  LEN_NAM         5-00000000  I*4  LEN_NOD       
  5-00000014  I*4  LEN_VER         6-00000000  L*4  LOG             8-00000000  CHAR LOGFILE         7-00000000  I*4  LOGLEN        
  8-0000028B  CHAR NTFFILE         7-0000000C  I*4  NTFLEN          2-00000004  L*4  OK              6-00000004  L*4  OUTPUT        
  6-00000008  L*4  PROJECT         6-00000014  L*4  REWIND          6-0000000C  L*4  SECT            3-00000006  CHAR STR_DEV       
  3-0000001A  CHAR STR_DIR         3-000000A5  CHAR STR_EXT         3-0000007E  CHAR STR_NAM         3-00000000  CHAR STR_NOD       
  3-000000CC  CHAR STR_VER       




FUNCTIONS AND SUBROUTINES REFERENCED

  Type  Name            Type  Name            Type  Name          

   L*4  LOG_OPEN              LSL_ADDMSG            LSL_PUTMSG    

                                                                 6-Aug-1997 09:37:13	VAX FORTRAN V5.9-173                Page   6
                                                                 6-Aug-1997 09:37:13	[DTMCONVERT.NTF2DTI.SPECIAL]FILES.FOR;11    

00001    
00002   	SUBROUTINE CLOSE_LOG
00003   C
00004   C
00005   C Copyright (C) LaserScan Laboratories Ltd, Cambridge, England
00006   C
00007   C Author TJ Ibbs, 8 October 1987
00008   C
00009   C To close the /OUTPUT file
00010   C
00011   	IMPLICIT NONE
00012   C
00013   C Messages
00014   C
00015   	INCLUDE	'LSL$CMNLSL:LSLLIBMSG.PAR'
00288   	INCLUDE	'HERE:NTF2DTIMSG.PAR'
00393   C
00394   C Common files
00395   C
00396   	INCLUDE	'LSL$CMNLSL:FILENAME.CMN'
00457   	INCLUDE	'HERE:COMMANDS.CMN'
00476   	INCLUDE	'HERE:FILENAME.CMN'
00496   	INCLUDE	'HERE:LUNS.PAR'
00506   C
00507   C Functions
00508   C
00509   	LOGICAL		FLWCLO		! close a file for write
00510   C
00511   C Workspace
00512   C
00513   	LOGICAL		OK		! function return
00514   	INTEGER		IERR		! ditto
00515   C
00516   C ****************************************************************
00517   C
00518   	OK = FLWCLO( LOGLUN, IERR )
00519   	IF (.NOT.OK) THEN
00520   	   CALL LSL_PUTMSG(NTF2DTI__CLOSERR,LOGFILE(:LOGLEN))
00521   	   CALL LSL_ADDMSG(OK)
00522   	   IF (OK.EQ.LSL__SYSOPEN) CALL LSL_ADDMSG(IERR)
00523   	ENDIF
00524   C
00525   	RETURN
00526   	END

CLOSE_LOG                                                        6-Aug-1997 09:37:13	VAX FORTRAN V5.9-173                Page   7
01                                                               6-Aug-1997 09:37:13	[DTMCONVERT.NTF2DTI.SPECIAL]FILES.FOR;11    

PROGRAM SECTIONS

    Name				 Bytes   Attributes

  0 $CODE                                   76   PIC CON REL LCL   SHR   EXE   RD NOWRT QUAD
  1 $PDATA                                   8   PIC CON REL LCL   SHR NOEXE   RD NOWRT QUAD
  2 $LOCAL                                  56   PIC CON REL LCL NOSHR NOEXE   RD   WRT QUAD
  3 LSL_FNAM_STR                           210   PIC OVR REL GBL   SHR NOEXE   RD   WRT QUAD
  4 LSL_FNAM_LOG                            24   PIC OVR REL GBL   SHR NOEXE   RD   WRT QUAD
  5 LSL_FNAM_LEN                            24   PIC OVR REL GBL   SHR NOEXE   RD   WRT QUAD
  6 COMMANDS                                40   PIC OVR REL GBL   SHR NOEXE   RD   WRT QUAD
  7 FILE_INT                                16   PIC OVR REL GBL   SHR NOEXE   RD   WRT QUAD
  8 FILE_CHR                               868   PIC OVR REL GBL   SHR NOEXE   RD   WRT QUAD

    Total Space Allocated                 1322


ENTRY POINTS

    Address  Type  Name          

  0-00000000       CLOSE_LOG     


VARIABLES

    Address  Type  Name              Address  Type  Name              Address  Type  Name              Address  Type  Name          

  6-00000018  L*4  DEDUCE_FILE     8-000000D9  CHAR DEVICE          7-00000004  I*4  DEVLEN          8-000001B2  CHAR DTIFILE       
  7-00000008  I*4  DTILEN          6-00000024  L*4  DTIOPEN         4-00000004  L*4  HAD_DEV         4-00000008  L*4  HAD_DIR       
  4-00000010  L*4  HAD_EXT         4-0000000C  L*4  HAD_NAM         4-00000000  L*4  HAD_NOD         4-00000014  L*4  HAD_VER       
  2-00000004  I*4  IERR            6-0000001C  L*4  IS_MAGTAPE      6-00000010  L*4  IS_OS           6-00000020  L*4  IS_TERM       
  5-00000004  I*4  LEN_DEV         5-00000008  I*4  LEN_DIR         5-00000010  I*4  LEN_EXT         5-0000000C  I*4  LEN_NAM       
  5-00000000  I*4  LEN_NOD         5-00000014  I*4  LEN_VER         6-00000000  L*4  LOG             8-00000000  CHAR LOGFILE       
  7-00000000  I*4  LOGLEN          8-0000028B  CHAR NTFFILE         7-0000000C  I*4  NTFLEN          2-00000000  L*4  OK            
  6-00000004  L*4  OUTPUT          6-00000008  L*4  PROJECT         6-00000014  L*4  REWIND          6-0000000C  L*4  SECT          
  3-00000006  CHAR STR_DEV         3-0000001A  CHAR STR_DIR         3-000000A5  CHAR STR_EXT         3-0000007E  CHAR STR_NAM       
  3-00000000  CHAR STR_NOD         3-000000CC  CHAR STR_VER       




FUNCTIONS AND SUBROUTINES REFERENCED

  Type  Name            Type  Name            Type  Name          

   L*4  FLWCLO                LSL_ADDMSG            LSL_PUTMSG    

                                                                 6-Aug-1997 09:37:13	VAX FORTRAN V5.9-173                Page   8
                                                                 6-Aug-1997 09:37:13	[DTMCONVERT.NTF2DTI.SPECIAL]FILES.FOR;11    

00001    
00002   	SUBROUTINE CLOSE_NTF
00003   C
00004   C
00005   C Copyright (C) LaserScan Laboratories Ltd, Cambridge, England
00006   C
00007   C Author TJ Ibbs, 8 October 1987
00008   C
00009   C To close the NTF data file - either a text file on disk, or some
00010   C form of magnetic tape
00011   C
00012   CMOD	gives message when file is closed		16-july-1991
00013   C
00014   	IMPLICIT NONE
00015   C
00016   C Messages
00017   C
00018   	INCLUDE	'LSL$CMNLSL:LSLLIBMSG.PAR'
00291   	INCLUDE	'HERE:NTF2DTIMSG.PAR'
00396   C
00397   C Common files
00398   C
00399   	INCLUDE	'LSL$CMNLSL:FILENAME.CMN'
00460   	INCLUDE	'HERE:COMMANDS.CMN'
00479   	INCLUDE	'HERE:FILENAME.CMN'
00499   	INCLUDE	'HERE:LUNS.PAR'
00509   C
00510   C Functions
00511   C
00512   	LOGICAL		FLRCLO		! close a file for read
00513   C
00514   C Workspace
00515   C
00516   	LOGICAL		OK		! function return
00517   	INTEGER		IERR		! ditto
00518   C
00519   C *****************************************************************************
00520   C There is no need to do anything if we have a magnetic tape, so
00521   C
00522   	IF (LOG) CALL WRITEF('%%NTF2DTI-I-MISC, closing input NTF file')
00523   	IF (.NOT.IS_MAGTAPE) THEN
00524   C
00525   	   OK = FLRCLO( NTFLUN, IERR )
00526   	   IF (.NOT.OK) THEN
00527   	      CALL LSL_PUTMSG(NTF2DTI__CLOSERR,NTFFILE(:NTFLEN))
00528   	      CALL LSL_ADDMSG(OK)
00529   	      IF (OK.EQ.LSL__SYSOPEN) CALL LSL_ADDMSG(IERR)
00530   	   ENDIF
00531   C
00532   	ENDIF
00533   C
00534   	RETURN
00535   	END

CLOSE_NTF                                                        6-Aug-1997 09:37:13	VAX FORTRAN V5.9-173                Page   9
01                                                               6-Aug-1997 09:37:13	[DTMCONVERT.NTF2DTI.SPECIAL]FILES.FOR;11    

PROGRAM SECTIONS

    Name				 Bytes   Attributes

  0 $CODE                                   98   PIC CON REL LCL   SHR   EXE   RD NOWRT QUAD
  1 $PDATA                                  49   PIC CON REL LCL   SHR NOEXE   RD NOWRT QUAD
  2 $LOCAL                                  72   PIC CON REL LCL NOSHR NOEXE   RD   WRT QUAD
  3 LSL_FNAM_STR                           210   PIC OVR REL GBL   SHR NOEXE   RD   WRT QUAD
  4 LSL_FNAM_LOG                            24   PIC OVR REL GBL   SHR NOEXE   RD   WRT QUAD
  5 LSL_FNAM_LEN                            24   PIC OVR REL GBL   SHR NOEXE   RD   WRT QUAD
  6 COMMANDS                                40   PIC OVR REL GBL   SHR NOEXE   RD   WRT QUAD
  7 FILE_INT                                16   PIC OVR REL GBL   SHR NOEXE   RD   WRT QUAD
  8 FILE_CHR                               868   PIC OVR REL GBL   SHR NOEXE   RD   WRT QUAD

    Total Space Allocated                 1401


ENTRY POINTS

    Address  Type  Name          

  0-00000000       CLOSE_NTF     


VARIABLES

    Address  Type  Name              Address  Type  Name              Address  Type  Name              Address  Type  Name          

  6-00000018  L*4  DEDUCE_FILE     8-000000D9  CHAR DEVICE          7-00000004  I*4  DEVLEN          8-000001B2  CHAR DTIFILE       
  7-00000008  I*4  DTILEN          6-00000024  L*4  DTIOPEN         4-00000004  L*4  HAD_DEV         4-00000008  L*4  HAD_DIR       
  4-00000010  L*4  HAD_EXT         4-0000000C  L*4  HAD_NAM         4-00000000  L*4  HAD_NOD         4-00000014  L*4  HAD_VER       
  2-00000004  I*4  IERR            6-0000001C  L*4  IS_MAGTAPE      6-00000010  L*4  IS_OS           6-00000020  L*4  IS_TERM       
  5-00000004  I*4  LEN_DEV         5-00000008  I*4  LEN_DIR         5-00000010  I*4  LEN_EXT         5-0000000C  I*4  LEN_NAM       
  5-00000000  I*4  LEN_NOD         5-00000014  I*4  LEN_VER         6-00000000  L*4  LOG             8-00000000  CHAR LOGFILE       
  7-00000000  I*4  LOGLEN          8-0000028B  CHAR NTFFILE         7-0000000C  I*4  NTFLEN          2-00000000  L*4  OK            
  6-00000004  L*4  OUTPUT          6-00000008  L*4  PROJECT         6-00000014  L*4  REWIND          6-0000000C  L*4  SECT          
  3-00000006  CHAR STR_DEV         3-0000001A  CHAR STR_DIR         3-000000A5  CHAR STR_EXT         3-0000007E  CHAR STR_NAM       
  3-00000000  CHAR STR_NOD         3-000000CC  CHAR STR_VER       




FUNCTIONS AND SUBROUTINES REFERENCED

  Type  Name            Type  Name            Type  Name            Type  Name          

   L*4  FLRCLO                LSL_ADDMSG            LSL_PUTMSG            WRITEF        

CLOSE_NTF                                                        6-Aug-1997 09:37:13	VAX FORTRAN V5.9-173                Page  10
01                                                               6-Aug-1997 09:37:13	[DTMCONVERT.NTF2DTI.SPECIAL]FILES.FOR;11    

COMMAND QUALIFIERS

  FORTRAN/EXTEND/DEBUG/NOOPT/LIST FILES

  /CHECK=(NOBOUNDS,OVERFLOW,NOUNDERFLOW)
  /DEBUG=(SYMBOLS,TRACEBACK)
  /DESIGN=(NOCOMMENTS,NOPLACEHOLDERS)
  /SHOW=(NODICTIONARY,NOINCLUDE,MAP,NOPREPROCESSOR,SINGLE)
  /STANDARD=(NOSEMANTIC,NOSOURCE_FORM,NOSYNTAX)
  /WARNINGS=(NODECLARATIONS,GENERAL,NOULTRIX,NOVAXELN)
  /CONTINUATIONS=19  /NOCROSS_REFERENCE  /NOD_LINES  /EXTEND_SOURCE
  /F77  /NOG_FLOATING  /I4  /NOMACHINE_CODE  /NOOPTIMIZE  /NOPARALLEL
  /NOANALYSIS_DATA
  /NODIAGNOSTICS
  /LIST=LSL$SOURCE_ROOT:[DTMCONVERT.NTF2DTI.SPECIAL]FILES.LIS;11                                            
  /OBJECT=LSL$SOURCE_ROOT:[DTMCONVERT.NTF2DTI.SPECIAL]FILES.OBJ;21                                            


COMPILATION STATISTICS

  Run Time:           1.98 seconds
  Elapsed Time:       2.75 seconds
  Page Faults:        683
  Dynamic Memory:     556 pages
