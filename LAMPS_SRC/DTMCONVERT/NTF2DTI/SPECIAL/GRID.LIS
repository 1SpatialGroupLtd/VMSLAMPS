
                                                                 6-Aug-1997 09:37:18	VAX FORTRAN V5.9-173                Page   1
                                                                 6-Aug-1997 09:37:17	[DTMCONVERT.NTF2DTI.SPECIAL]GRID.FOR;12     

00001   	LOGICAL FUNCTION READ_GRIDHREC
00002   C
00003   C
00004   C Copyright Laser-Scan Ltd, Cambridge, England
00005   C
00006   C Author						IM 07-Apr-1988
00007   C
00008   CMOD1049 Add reading of DTI ranges to get x/y grid size
00009   C							JB 22-Oct-1991
00010   C
00011   CMOD1119 Use new format for Version 1.1			JB 21-May-1992
00012   C
00013   CMOD1242 Use new format for Version 2.0			JB 21-Jun-1993
00014   C
00015   C Reads the data from the section header record
00016   C into the DTI common block
00017   C
00018   	IMPLICIT NONE
00019   C
00020   C Messages:
00021   	INCLUDE	'LSL$CMNLSL:LSLLIBMSG.PAR'
00294   	INCLUDE 'HERE:NTF2DTIMSG.PAR'
00399   C
00400   C Commons:
00401   	INCLUDE 'LSL$CMNDTI:DTIHDR.CMN'
00516   C
00517   	INCLUDE 'LSL$CMNLSL:FILENAME.CMN'
00578   	INCLUDE 'HERE:FILENAME.CMN'
00598   C
00599   	INCLUDE 'HERE:COMMANDS.CMN'
00618   	INCLUDE	'HERE:RECORD.CMN'
00641   	INCLUDE 'HERE:NTFDATA.CMN'
00702   	INCLUDE	'HERE:LUNS.PAR'
00712   C
00713   C Functions:
00714   	LOGICAL		RDINT		! read an integer from input buffer
00715   	LOGICAL		RDLONG		! read a longword from input buffer
00716   	LOGICAL		RDREAL		! read a real from input buffer
00717   	LOGICAL		READ_CONTINUE	! read a continuation record
00718   	LOGICAL		READ_NTF_RECORD	! read a record
00719   C
00720   C Workspace:
00721   	INTEGER		OK		! Success flag
00722   	INTEGER		NCHS		! Number of chars read by FLRSTR
00723   	INTEGER		IERR		! Error code
00724   	INTEGER		NUM		! To RDINT into
00725   	INTEGER		I		! DO loop counter
00726   C
00727   	CHARACTER*10	SECTREF
00728   C
00729   	CHARACTER*7	UNITS
00730   	INTEGER		UNLEN
00731   	REAL		Z
00732   C
00733   C############################################################################
00734   C
00735   	OK = .TRUE.

READ_GRIDHREC                                                    6-Aug-1997 09:37:18	VAX FORTRAN V5.9-173                Page   2
                                                                 6-Aug-1997 09:37:17	[DTMCONVERT.NTF2DTI.SPECIAL]GRID.FOR;12     

00736   C
00737   C Process alternative GRIDHREC format with 12 records instead of 31
00738   C if necessary
00739   	IF (NUM_FIELD.EQ.12) GOTO 989
00740   C
00741   C ..................................................................
00742   C this field was commented before I got to it		SG 16-AUG-1991
00743   C ..................................................................
00744   C The origin of the map given in the SECTION header doesn't seem
00745   C to make much sense for OS SUPPLIED DATA so for now we will read 
00746   C it from the reference field in this record. Note that nothing is 
00747   C required to be here by NTF so check for blank field first.
00748   C
00749   C	IF (.NOT.IS_OS) GOTO 23
00750   C
00751   C	IF (STRING(5:8).EQ.'    ') GOTO 23
00752   C	CALL SETAUX( %REF(STRING(5:8)), 4 )
00753   C	IF (RDREAL(X_ORIG)) THEN
00754   C	   CALL LSL_PUTMSG(NTF2DTI__GRIDHREC,'GRID_ID') ! Give a warning 
00755   C	   CALL LSL_ADDSTR(STRING(5:8))			! but carry on
00756   C	ENDIF
00757   C
00758   C ..................................................................
00759   C And the Y offset :
00760   C
00761   C	IF (STRING(9:12).EQ.'    ') GOTO 23
00762   C	CALL SETAUX( %REF(STRING(9:12)), 4 )
00763   C	IF (RDREAL(Y_ORIG)) THEN
00764   C	   CALL LSL_PUTMSG(NTF2DTI__GRIDHREC,'GRID_ID')
00765   C	   CALL LSL_ADDSTR(STRING(9:12))
00766   C	ENDIF
00767   C
00768   C ..................................................................
00769   C Read the number of columns
00770   C
00771   	X_ORIG=0.0		! Set default values in case we can't
00772   	Y_ORIG=0.0		! read them
00773   C
00774   	CALL SETAUX( %REF(STRING(13:16)), 4 )
00775   	OK = .NOT.RDINT(N_COLUMNS)
00776   	IF (.NOT.OK) THEN
00777   	   CALL LSL_PUTMSG(NTF2DTI__GRIDHREC,'N_COLUMNS')
00778   	   CALL LSL_ADDSTR(STRING(13:16))
00779   	   GOTO 999
00780   	ENDIF
00781   C
00782   C ..................................................................
00783   C Read the number of rows
00784   C
00785   	CALL SETAUX( %REF(STRING(17:20)), 4 )
00786   	OK = .NOT.RDINT(N_ROWS)
00787   	IF (.NOT.OK) THEN
00788   	   CALL LSL_PUTMSG(NTF2DTI__GRIDHREC,'N_ROWS')
00789   	   CALL LSL_ADDSTR(STRING(17:20))
00790   	   GOTO 999
00791   	ENDIF
00792   C

READ_GRIDHREC                                                    6-Aug-1997 09:37:18	VAX FORTRAN V5.9-173                Page   3
                                                                 6-Aug-1997 09:37:17	[DTMCONVERT.NTF2DTI.SPECIAL]GRID.FOR;12     

00793   C ..................................................................
00794   C Get the SW grid corner points 
00795   C
00796   	CALL SETAUX( %REF(STRING(25:34)), 10 )
00797   	OK = .NOT.RDREAL(X_COORD(1))
00798   	IF (.NOT.OK) THEN
00799   	   CALL LSL_PUTMSG(NTF2DTI__GRIDHREC,'X_COORD')
00800   	   CALL LSL_ADDSTR(STRING(25:34))
00801   	   GOTO 999
00802   	ENDIF
00803   C
00804   	CALL SETAUX( %REF(STRING(35:44)), 10 )
00805   	OK = .NOT.RDREAL(Y_COORD(1))
00806   	IF (.NOT.OK) THEN
00807   	   CALL LSL_PUTMSG(NTF2DTI__GRIDHREC,'Y_COORD')
00808   	   CALL LSL_ADDSTR(STRING(35:44))
00809   	   GOTO 999
00810   	ENDIF
00811   C
00812   C Transfer into X_ORIG and Y_ORIG
00813   	X_ORIG=X_COORD(1)
00814   	Y_ORIG=Y_COORD(1)
00815   C
00816   C Action from here depends on level and/or version
00817   C
00818   	IF (LEVEL.EQ.0) THEN				! Version 1.0
00819   	  CALL SETAUX( %REF(STRING(45:50)), 6)
00820   	  OK = .NOT.RDREAL(Z)
00821   	  IF (.NOT.OK) THEN
00822   	     CALL LSL_PUTMSG(NTF2DTI__GRIDHREC,'Z_COORD')
00823   	     CALL LSL_ADDSTR(STRING(45:50))
00824   	     GOTO 999
00825   	  ENDIF
00826   C
00827   	  CALL SETAUX( %REF(STRING(51:60)), 10)
00828   	  OK = .NOT.RDREAL(X_COORD(2))
00829   	  IF (.NOT.OK) THEN
00830   	     CALL LSL_PUTMSG(NTF2DTI__GRIDHREC,'X_COORD')
00831   	     CALL LSL_ADDSTR(STRING(51:60))
00832   	     GOTO 999
00833   	  ENDIF
00834   C
00835   	  CALL SETAUX( %REF(STRING(61:70)), 10)
00836   	  OK = .NOT.RDREAL(Y_COORD(2))
00837   	  IF (.NOT.OK) THEN
00838   	     CALL LSL_PUTMSG(NTF2DTI__GRIDHREC,'Y_COORD')
00839   	     CALL LSL_ADDSTR(STRING(61:70))
00840   	     GOTO 999
00841   	  ENDIF
00842   C
00843   	  CALL SETAUX( %REF(STRING(71:76)), 6)
00844   	  OK = .NOT.RDREAL(Z)
00845   	  IF (.NOT.OK) THEN
00846   	     CALL LSL_PUTMSG(NTF2DTI__GRIDHREC,'Z_COORD')
00847   	     CALL LSL_ADDSTR(STRING(71:76))
00848   	     GOTO 999
00849   	  ENDIF

READ_GRIDHREC                                                    6-Aug-1997 09:37:18	VAX FORTRAN V5.9-173                Page   4
                                                                 6-Aug-1997 09:37:17	[DTMCONVERT.NTF2DTI.SPECIAL]GRID.FOR;12     

00850   C
00851   	ELSEIF (LEVEL.EQ.4 .AND. INTVER.EQ.100) THEN 	! Version 1.0 (proper)
00852   C
00853   	    CALL SETAUX( %REF(STRING(45:54)), 10)
00854   	    OK = .NOT.RDREAL(X_COORD(2))
00855   	    IF (.NOT.OK) THEN
00856   	       CALL LSL_PUTMSG(NTF2DTI__GRIDHREC,'X_COORD')
00857   	       CALL LSL_ADDSTR(STRING(45:54))
00858   	       GOTO 999
00859   	    ENDIF
00860   C
00861   	    CALL SETAUX( %REF(STRING(55:64)), 10)
00862   	    OK = .NOT.RDREAL(Y_COORD(2))
00863   	    IF (.NOT.OK) THEN
00864   	       CALL LSL_PUTMSG(NTF2DTI__GRIDHREC,'Y_COORD')
00865   	       CALL LSL_ADDSTR(STRING(55:64))
00866   	       GOTO 999
00867   	    ENDIF
00868   C
00869   	ELSEIF( (LEVEL.EQ.4 .AND. INTVER.EQ.110) .OR.	! Version 1.1
00870        &		(LEVEL.EQ.5 .AND. INTVER.EQ.200) ) THEN	! Version 2.0
00871   C
00872   	    CALL SETAUX( %REF(STRING(45:50)), 6)
00873   	    OK = .NOT.RDREAL(Z)
00874   	    IF (.NOT.OK) THEN
00875   	       CALL LSL_PUTMSG(NTF2DTI__GRIDHREC,'Z_COORD')
00876   	       CALL LSL_ADDSTR(STRING(45:50))
00877   	       GOTO 999
00878   	    ENDIF
00879   C
00880   	    CALL SETAUX( %REF(STRING(51:60)), 10)
00881   	    OK = .NOT.RDREAL(X_COORD(2))
00882   	    IF (.NOT.OK) THEN
00883   	       CALL LSL_PUTMSG(NTF2DTI__GRIDHREC,'X_COORD')
00884   	       CALL LSL_ADDSTR(STRING(51:60))
00885   	       GOTO 999
00886   	    ENDIF
00887   C
00888   	    CALL SETAUX( %REF(STRING(61:70)), 10)
00889   	    OK = .NOT.RDREAL(Y_COORD(2))
00890   	    IF (.NOT.OK) THEN
00891   	       CALL LSL_PUTMSG(NTF2DTI__GRIDHREC,'Y_COORD')
00892   	       CALL LSL_ADDSTR(STRING(61:70))
00893   	       GOTO 999
00894   	    ENDIF
00895   C
00896   	    CALL SETAUX( %REF(STRING(71:76)), 6)
00897   	    OK = .NOT.RDREAL(Z)
00898   	    IF (.NOT.OK) THEN
00899   	       CALL LSL_PUTMSG(NTF2DTI__GRIDHREC,'Z_COORD')
00900   	       CALL LSL_ADDSTR(STRING(71:76))
00901   	       GOTO 999
00902   	    ENDIF
00903   C
00904   	ENDIF
00905   C
00906   C ..................................................................

READ_GRIDHREC                                                    6-Aug-1997 09:37:18	VAX FORTRAN V5.9-173                Page   5
                                                                 6-Aug-1997 09:37:17	[DTMCONVERT.NTF2DTI.SPECIAL]GRID.FOR;12     

00907   C read continuation record if present
00908   C
00909   	IF (.NOT.FIXED) LENGTH = LENGTH - 1	! miss EOR marker
00910   C
00911   	IF (STRING(LENGTH:LENGTH).EQ.'1') THEN
00912   	   OK = READ_CONTINUE('GRIDHREC')
00913   	   IF (.NOT.OK) GOTO 999
00914   	ENDIF
00915   C
00916   	CALL SETAUX( %REF(STRING(3:12)), 10)
00917   	OK = .NOT.RDREAL(X_COORD(3))
00918   	IF (.NOT.OK) THEN
00919   	   CALL LSL_PUTMSG(NTF2DTI__GRIDHREC,'X_COORD')
00920   	   CALL LSL_ADDSTR(STRING(3:12))
00921   	   GOTO 999
00922   	ENDIF
00923   C
00924   	CALL SETAUX( %REF(STRING(13:22)), 10)
00925   	OK = .NOT.RDREAL(Y_COORD(3))
00926   	IF (.NOT.OK) THEN
00927   	   CALL LSL_PUTMSG(NTF2DTI__GRIDHREC,'Y_COORD')
00928   	   CALL LSL_ADDSTR(STRING(13:22))
00929   	   GOTO 999
00930   	ENDIF
00931   C
00932   C Action from here depends on level
00933   C
00934   	IF (LEVEL.EQ.0) THEN				! Version 1.0
00935   C
00936   	  CALL SETAUX( %REF(STRING(23:28)), 6)
00937   	  OK = .NOT.RDREAL(Z)
00938   	  IF (.NOT.OK) THEN
00939   	     CALL LSL_PUTMSG(NTF2DTI__GRIDHREC,'Z_COORD')
00940   	     CALL LSL_ADDSTR(STRING(23:28))
00941   	     GOTO 999
00942   	  ENDIF
00943   C
00944   	  CALL SETAUX( %REF(STRING(29:38)), 10)
00945   	  OK = .NOT.RDREAL(X_COORD(4))
00946   	  IF (.NOT.OK) THEN
00947   	     CALL LSL_PUTMSG(NTF2DTI__GRIDHREC,'X_COORD')
00948   	     CALL LSL_ADDSTR(STRING(29:38))
00949   	     GOTO 999
00950   	  ENDIF
00951   C
00952   	  CALL SETAUX( %REF(STRING(39:48)), 10)
00953   	  OK = .NOT.RDREAL(Y_COORD(4))
00954   	  IF (.NOT.OK) THEN
00955   	     CALL LSL_PUTMSG(NTF2DTI__GRIDHREC,'Y_COORD')
00956   	     CALL LSL_ADDSTR(STRING(39:48))
00957   	     GOTO 999
00958   	  ENDIF
00959   C
00960   	  CALL SETAUX( %REF(STRING(49:54)), 6)
00961   	  OK = .NOT.RDREAL(Z)
00962   	  IF (.NOT.OK) THEN
00963   	     CALL LSL_PUTMSG(NTF2DTI__GRIDHREC,'Z_COORD')

READ_GRIDHREC                                                    6-Aug-1997 09:37:18	VAX FORTRAN V5.9-173                Page   6
                                                                 6-Aug-1997 09:37:17	[DTMCONVERT.NTF2DTI.SPECIAL]GRID.FOR;12     

00964   	     CALL LSL_ADDSTR(STRING(49:54))
00965   	     GOTO 999
00966   	  ENDIF
00967   C
00968   	ELSEIF (LEVEL.EQ.4 .AND. INTVER.EQ.100) THEN	! Version 1.0 (proper)
00969   C
00970   	    CALL SETAUX( %REF(STRING(23:32)), 10)
00971   	    OK = .NOT.RDREAL(X_COORD(4))
00972   	    IF (.NOT.OK) THEN
00973   	       CALL LSL_PUTMSG(NTF2DTI__GRIDHREC,'X_COORD')
00974   	       CALL LSL_ADDSTR(STRING(23:32))
00975   	       GOTO 999
00976   	    ENDIF
00977   C
00978    	    CALL SETAUX( %REF(STRING(33:42)), 10)
00979   	    OK = .NOT.RDREAL(Y_COORD(4))
00980   	    IF (.NOT.OK) THEN
00981   	       CALL LSL_PUTMSG(NTF2DTI__GRIDHREC,'Y_COORD')
00982   	       CALL LSL_ADDSTR(STRING(33:42))
00983   	       GOTO 999
00984   	    ENDIF
00985   C
00986   	ELSEIF( (LEVEL.EQ.4 .AND. INTVER.EQ.110) .OR. 	! Version 1.1
00987        &		(LEVEL.EQ.5 .AND. INTVER.EQ.200) ) THEN ! Version 2.0
00988   C
00989   	    CALL SETAUX( %REF(STRING(23:28)), 6)
00990   	    OK = .NOT.RDREAL(Z)
00991   	    IF (.NOT.OK) THEN
00992   	       CALL LSL_PUTMSG(NTF2DTI__GRIDHREC,'Z_COORD')
00993   	       CALL LSL_ADDSTR(STRING(23:28))
00994   	       GOTO 999
00995   	    ENDIF
00996   C
00997   	    CALL SETAUX( %REF(STRING(29:38)), 10)
00998   	    OK = .NOT.RDREAL(X_COORD(4))
00999   	    IF (.NOT.OK) THEN
01000   	       CALL LSL_PUTMSG(NTF2DTI__GRIDHREC,'X_COORD')
01001   	       CALL LSL_ADDSTR(STRING(29:38))
01002   	       GOTO 999
01003   	    ENDIF
01004   C
01005   	    CALL SETAUX( %REF(STRING(39:48)), 10)
01006   	    OK = .NOT.RDREAL(Y_COORD(4))
01007   	    IF (.NOT.OK) THEN
01008   	       CALL LSL_PUTMSG(NTF2DTI__GRIDHREC,'Y_COORD')
01009   	       CALL LSL_ADDSTR(STRING(39:48))
01010   	       GOTO 999
01011   	    ENDIF
01012   C
01013   	    CALL SETAUX( %REF(STRING(49:54)), 6)
01014   	    OK = .NOT.RDREAL(Z)
01015   	    IF (.NOT.OK) THEN
01016   	       CALL LSL_PUTMSG(NTF2DTI__GRIDHREC,'Z_COORD')
01017   	       CALL LSL_ADDSTR(STRING(49:54))
01018   	       GOTO 999
01019   	    ENDIF
01020   C

READ_GRIDHREC                                                    6-Aug-1997 09:37:18	VAX FORTRAN V5.9-173                Page   7
                                                                 6-Aug-1997 09:37:17	[DTMCONVERT.NTF2DTI.SPECIAL]GRID.FOR;12     

01021   	ENDIF
01022   C
01023   C Get x,y grid pixel size
01024   C
01025   	X_SAMP = (X_COORD(3) - X_COORD(1)) / (N_COLUMNS-1)
01026   	Y_SAMP = (Y_COORD(3) - Y_COORD(1)) / (N_ROWS-1)
01027           GOTO 990
01028   C
01029   989	CONTINUE
01030   C
01031   C Handle alternative record format (one day this should be written to handle
01032   C any format given by DATADESC and DATAFMT).
01033   C
01034   C
01035   C ..................................................................
01036   C Read the number of columns
01037   C
01038   	X_ORIG=0.0		! Set default values in case we can't
01039   	Y_ORIG=0.0		! read them
01040   C
01041   	CALL SETAUX( %REF(STRING(23:30)), 8 )
01042   	OK = .NOT.RDINT(N_COLUMNS)
01043   	IF (.NOT.OK) THEN
01044   	   CALL LSL_PUTMSG(NTF2DTI__GRIDHREC,'N_COLUMNS')
01045   	   CALL LSL_ADDSTR(STRING(23:30))
01046   	   GOTO 999
01047   	ENDIF
01048   C
01049   C ..................................................................
01050   C Read the number of rows
01051   C
01052   	CALL SETAUX( %REF(STRING(31:38)), 8 )
01053   	OK = .NOT.RDINT(N_ROWS)
01054   	IF (.NOT.OK) THEN
01055   	   CALL LSL_PUTMSG(NTF2DTI__GRIDHREC,'N_ROWS')
01056   	   CALL LSL_ADDSTR(STRING(31:38))
01057   	   GOTO 999
01058   	ENDIF
01059   C
01060   C ..................................................................
01061   C Get the SW grid corner points 
01062   C
01063   	CALL SETAUX( %REF(STRING(13:17)), 5 )
01064   	OK = .NOT.RDREAL(X_COORD(1))
01065   	IF (.NOT.OK) THEN
01066   	   CALL LSL_PUTMSG(NTF2DTI__GRIDHREC,'X_COORD')
01067   	   CALL LSL_ADDSTR(STRING(13:17))
01068   	   GOTO 999
01069   	ENDIF
01070   C
01071   	CALL SETAUX( %REF(STRING(18:22)), 5 )
01072   	OK = .NOT.RDREAL(Y_COORD(1))
01073   	IF (.NOT.OK) THEN
01074   	   CALL LSL_PUTMSG(NTF2DTI__GRIDHREC,'Y_COORD')
01075   	   CALL LSL_ADDSTR(STRING(18:22))
01076   	   GOTO 999
01077   	ENDIF

READ_GRIDHREC                                                    6-Aug-1997 09:37:18	VAX FORTRAN V5.9-173                Page   8
                                                                 6-Aug-1997 09:37:17	[DTMCONVERT.NTF2DTI.SPECIAL]GRID.FOR;12     

01078   C
01079   C Transfer into X_ORIG and Y_ORIG
01080   	X_ORIG=X_COORD(1)
01081   	Y_ORIG=Y_COORD(1)
01082   	CALL SETAUX( %REF(STRING(39:42)), 4 )
01083   	OK = .NOT.RDINT(X_SAMP)
01084   	IF (.NOT.OK) THEN
01085   	   CALL LSL_PUTMSG(NTF2DTI__GRIDHREC,'COL_INTRVL')
01086   	   CALL LSL_ADDSTR(STRING(39:42))
01087   	   GOTO 999
01088   	ENDIF
01089   C
01090   	CALL SETAUX( %REF(STRING(43:46)), 4 )
01091   	OK = .NOT.RDINT(Y_SAMP)
01092   	IF (.NOT.OK) THEN
01093   	   CALL LSL_PUTMSG(NTF2DTI__GRIDHREC,'ROW_INTRVL')
01094   	   CALL LSL_ADDSTR(STRING(43:46))
01095   	   GOTO 999
01096   	ENDIF
01097   C
01098   C Skip any further continuation records
01099   C
01100   990	CONTINUE
01101   C
01102   	IF (.NOT.FIXED) LENGTH = LENGTH - 1		! miss EOR marker
01103   C
01104   	IF (STRING(LENGTH:LENGTH).EQ.'1') THEN
01105   	   OK = READ_CONTINUE('GRIDHREC')
01106   	   IF (.NOT.OK) GOTO 999
01107   C
01108   	   GOTO 990
01109   C
01110   	ELSEIF (STRING(LENGTH:LENGTH).EQ.'0') THEN
01111   	   OK = READ_NTF_RECORD()			! get next record
01112   C
01113   	ELSE						! unknown record -
01114   	   OK = READ_CONTINUE('GRIDHREC')		! try to read on 
01115   	   IF (.NOT.OK) GOTO 999
01116   C
01117   	   GOTO 990
01118   	ENDIF
01119   C
01120   C ..................................................................
01121   C rejoin errors
01122   C
01123   999	READ_GRIDHREC=OK
01124   C
01125   	RETURN
01126   	END

READ_GRIDHREC                                                    6-Aug-1997 09:37:18	VAX FORTRAN V5.9-173                Page   9
01                                                               6-Aug-1997 09:37:17	[DTMCONVERT.NTF2DTI.SPECIAL]GRID.FOR;12     

PROGRAM SECTIONS

    Name				 Bytes   Attributes

  0 $CODE                                 2680   PIC CON REL LCL   SHR   EXE   RD NOWRT QUAD
  1 $PDATA                                  96   PIC CON REL LCL   SHR NOEXE   RD NOWRT QUAD
  2 $LOCAL                                1920   PIC CON REL LCL NOSHR NOEXE   RD   WRT QUAD
  3 DTIHDR                                2520   PIC OVR REL GBL   SHR NOEXE   RD   WRT QUAD
  4 LSL_FNAM_STR                           210   PIC OVR REL GBL   SHR NOEXE   RD   WRT QUAD
  5 LSL_FNAM_LOG                            24   PIC OVR REL GBL   SHR NOEXE   RD   WRT QUAD
  6 LSL_FNAM_LEN                            24   PIC OVR REL GBL   SHR NOEXE   RD   WRT QUAD
  7 FILE_INT                                16   PIC OVR REL GBL   SHR NOEXE   RD   WRT QUAD
  8 FILE_CHR                               868   PIC OVR REL GBL   SHR NOEXE   RD   WRT QUAD
  9 COMMANDS                                40   PIC OVR REL GBL   SHR NOEXE   RD   WRT QUAD
 10 RECORD1                                 86   PIC OVR REL GBL   SHR NOEXE   RD   WRT QUAD
 11 RECORD2                                  9   PIC OVR REL GBL   SHR NOEXE   RD   WRT QUAD
 12 NTFDATA                                 16   PIC OVR REL GBL   SHR NOEXE   RD   WRT QUAD
 13 DTIDATA                                128   PIC OVR REL GBL   SHR NOEXE   RD   WRT QUAD

    Total Space Allocated                 8637


ENTRY POINTS

    Address  Type  Name          

  0-00000000  L*4  READ_GRIDHREC 


VARIABLES

    Address  Type  Name                                               Address  Type  Name                            

 13-0000005C  I*4  COL_END                                         13-00000068  I*4  COL_INV                         
 13-00000058  I*4  COL_START                                        9-00000018  L*4  DEDUCE_FILE                     
  8-000000D9  CHAR DEVICE                                           7-00000004  I*4  DEVLEN                          
  8-000001B2  CHAR DTIFILE                                          7-00000008  I*4  DTILEN                          
  9-00000024  L*4  DTIOPEN                                         11-00000008  CHAR EOR_MARKER                      
 13-00000078  I*4  FIELD_WIDTH                                     12-0000000C  L*4  FIXED                           
  5-00000004  L*4  HAD_DEV                                          5-00000008  L*4  HAD_DIR                         
  5-00000010  L*4  HAD_EXT                                          5-0000000C  L*4  HAD_NAM                         
  5-00000000  L*4  HAD_NOD                                          5-00000014  L*4  HAD_VER                         
  2-0000003C  I*4  I                                                2-00000034  I*4  IERR                            
 13-00000074  I*4  INTERPRET                                       12-00000004  I*4  INTVER                          
  9-0000001C  L*4  IS_MAGTAPE                                       9-00000010  L*4  IS_OS                           
  9-00000020  L*4  IS_TERM                                         11-00000004  I*4  LENGTH                          
  6-00000004  I*4  LEN_DEV                                          6-00000008  I*4  LEN_DIR                         
  6-00000010  I*4  LEN_EXT                                          6-0000000C  I*4  LEN_NAM                         
  6-00000000  I*4  LEN_NOD                                          6-00000014  I*4  LEN_VER                         
 12-00000000  I*4  LEVEL                                            9-00000000  L*4  LOG                             
  8-00000000  CHAR LOGFILE                                          7-00000000  I*4  LOGLEN                          
  2-00000030  I*4  NCHS                                            10-00000054  CHAR NTF$_REC_DESCR                  
  8-0000028B  CHAR NTFFILE                                          7-0000000C  I*4  NTFLEN                          
  2-00000038  I*4  NUM                                             13-0000007C  I*4  NUM_FIELD                       
 13-0000002C  I*4  N_COLUMNS                                       13-00000028  I*4  N_ROWS                          
  2-0000002C  I*4  OK                                              13-00000070  I*4  ORDER                           
  9-00000004  L*4  OUTPUT                                           9-00000008  L*4  PROJECT                         

READ_GRIDHREC                                                    6-Aug-1997 09:37:18	VAX FORTRAN V5.9-173                Page  10
01                                                               6-Aug-1997 09:37:17	[DTMCONVERT.NTF2DTI.SPECIAL]GRID.FOR;12     

  2-00000028  L*4  RDLONG                                          11-00000000  I*4  RECNUM                          
  9-00000014  L*4  REWIND                                          13-00000064  I*4  ROW_END                         
 13-0000006C  I*4  ROW_INV                                         13-00000060  I*4  ROW_START                       
  9-0000000C  L*4  SECT                                             2-00000012  CHAR SECTREF                         
 10-00000000  CHAR STRING                                           4-00000006  CHAR STR_DEV                         
  4-0000001A  CHAR STR_DIR                                          4-000000A5  CHAR STR_EXT                         
 10-00000050  I*4  STR_LEN                                          4-0000007E  CHAR STR_NAM                         
  4-00000000  CHAR STR_NOD                                          4-000000CC  CHAR STR_VER                         
  2-0000001C  CHAR UNITS                                            2-00000040  I*4  UNLEN                           
 12-00000008  R*4  VERSION                                         13-00000014  I*4  XMAX                            
 13-00000010  I*4  XMIN                                            13-00000000  I*4  XYLEN                           
 13-00000008  R*4  XY_MULT                                         13-00000004  I*4  XY_UNIT                         
 13-00000030  R*4  X_ORIG                                          13-00000020  I*4  X_SAMP                          
 13-0000001C  I*4  YMAX                                            13-00000018  I*4  YMIN                            
 13-00000034  R*4  Y_ORIG                                          13-00000024  I*4  Y_SAMP                          
  2-00000044  R*4  Z                                               13-0000000C  R*4  Z_MULT                          


ARRAYS

    Address  Type  Name                                  Bytes  Dimensions

  3-00000318  I*4  DATA_OFFSET                              36  (9)
  3-00000384  I*4  DATA_TYPE                                36  (9)
  3-0000084C  L*4  DTILUN_INUSE                             36  (9)
  3-000003A8  CHAR DTI_NAME                               1152  (9)
  3-00000828  I*4  DTI_NAME_LENGTH                          36  (9)
  3-00000990  I*4  DTI_ORDER_CORNER                         36  (9)
  3-000009B4  I*4  DTI_ORDER_DIRECTION                      36  (9)
  3-00000900  I*4  DTI_WINDOW_NEX                           36  (9)
  3-00000924  I*4  DTI_WINDOW_NEY                           36  (9)
  3-000008B8  I*4  DTI_WINDOW_SWX                           36  (9)
  3-000008DC  I*4  DTI_WINDOW_SWY                           36  (9)
  3-0000096C  L*4  HAD_PROJ_RECORD                          36  (9)
  3-00000360  I*4  HEADER_TYPE                              36  (9)
  3-00000288  I*4  LATINT                                   36  (9)
  3-00000240  I*4  LATORI                                   36  (9)
  3-00000120  I*4  LATREC                                  144  (4, 9)
  3-000002AC  I*4  LONINT                                   36  (9)
  3-00000264  I*4  LONORI                                   36  (9)
  3-000001B0  I*4  LONREC                                  144  (4, 9)
  3-000000B4  I*4  MAX_LVALUE                               36  (9)
  3-0000006C  R*4  MAX_RVALUE                               36  (9)
  3-0000034E  I*2  MAX_WVALUE                               18  (9)
  3-00000090  I*4  MIN_LVALUE                               36  (9)
  3-00000048  R*4  MIN_RVALUE                               36  (9)
  3-0000033C  I*2  MIN_WVALUE                               18  (9)
  3-00000948  L*4  READ_ONLY                                36  (9)
  3-000002D0  I*4  SEC_ADDR                                 36  (9)
  3-000002F4  I*4  SEC_SIZE                                 36  (9)
  2-0000000C  CHAR STD_ATTR_CODES                            6  (3)
  2-00000000  I*4  STD_ATTR_LEN                             12  (3)
 13-00000038  R*4  X_COORD                                  16  (4)
  3-000000D8  I*4  X_EXTENT                                 36  (9)
  3-00000000  R*4  X_GRID                                   36  (9)
  3-00000870  R*4  X_OFFSET                                 36  (9)
 13-00000048  R*4  Y_COORD                                  16  (4)

READ_GRIDHREC                                                    6-Aug-1997 09:37:18	VAX FORTRAN V5.9-173                Page  11
01                                                               6-Aug-1997 09:37:17	[DTMCONVERT.NTF2DTI.SPECIAL]GRID.FOR;12     

  3-000000FC  I*4  Y_EXTENT                                 36  (9)
  3-00000024  R*4  Y_GRID                                   36  (9)
  3-00000894  R*4  Y_OFFSET                                 36  (9)




LABELS

    Address   Label       Address   Label       Address   Label   

  0-0000084F  989       0-00000A08  990       0-00000A6E  999     


FUNCTIONS AND SUBROUTINES REFERENCED

  Type  Name                              Type  Name                              Type  Name                            

        LSL_ADDSTR                              LSL_PUTMSG                         L*4  RDINT                           
   L*4  RDREAL                             L*4  READ_CONTINUE                      L*4  READ_NTF_RECORD                 
        SETAUX                          

                                                                 6-Aug-1997 09:37:18	VAX FORTRAN V5.9-173                Page  12
                                                                 6-Aug-1997 09:37:17	[DTMCONVERT.NTF2DTI.SPECIAL]GRID.FOR;12     

00001   C
00002    
00003   	LOGICAL FUNCTION READ_GRIDREC(COLUMN)
00004   C
00005   C
00006   C Copyright Laser-Scan Ltd, Cambridge, England
00007   C
00008   C Author						IM 07-Apr-1988
00009   C 	Reads the grid data record
00010   C
00011   CMOD	Replaced XYLEN with FIELD_WIDTH since XYLEN cannot be used to
00012   C	define field width of the raster information 	SG 10-Sep-1991 
00013   C
00014   CMOD	Multiply Z values by Z_MULT for DTI column	JB 29-Oct-1991
00015   C
00016   CMOD1119 Read Version 1.1 NTF data			JB 25-May-1992	
00017   C
00018   CMOD1242 Read Version 2.0 NTF data			JB 21-Jun-1993	
00019   C
00020   	IMPLICIT NONE
00021   C
00022   C Messages:
00023   	INCLUDE	'LSL$CMNLSL:LSLLIBMSG.PAR'
00296   	INCLUDE 'HERE:NTF2DTIMSG.PAR'
00401   C
00402   C Commons:
00403   	INCLUDE	'LSL$CMNLSL:FILENAME.CMN'
00464   	INCLUDE	'HERE:FILENAME.CMN'
00484   C
00485   	INCLUDE 'HERE:COMMANDS.CMN'
00504   	INCLUDE	'HERE:RECORD.CMN'
00527   	INCLUDE	'HERE:NTFDATA.CMN'
00588   	INCLUDE	'HERE:LUNS.PAR'
00598   C
00599   C Functions:
00600   	LOGICAL		RDINT		! read an integer from input buffer
00601   	LOGICAL		RDLONG		! read an integer from input buffer
00602   	LOGICAL		READ_NTF_RECORD	! read the next record from tape
00603   C
00604   C Arguments:
00605   	INTEGER*4	COLUMN(*)	! The column we are going to fill
00606   C
00607   C Workspace:
00608   	INTEGER		OK		! Success flag
00609   	INTEGER		NCHS		! Number of chars read by FLRSTR
00610   	INTEGER		IERR		! Error code
00611   	INTEGER		NUM		! To RDINT into
00612   	INTEGER		I		! DO loop counter
00613   	INTEGER		ROW		! How far up the col. we are
00614   	INTEGER		POS		! Offset within record
00615   	CHARACTER*1	LAST		! Continuation flag from last rec
00616   	CHARACTER*80	NUM_STR
00617   C
00618   C###############################################################################
00619   C We already have the GRIDREC read in so pull the relevent values from it
00620   C Read the start and end of the columns
00621   C

READ_GRIDREC                                                     6-Aug-1997 09:37:18	VAX FORTRAN V5.9-173                Page  13
                                                                 6-Aug-1997 09:37:17	[DTMCONVERT.NTF2DTI.SPECIAL]GRID.FOR;12     

00622           IF (NUM_FIELD.EQ.12) THEN
00623              COL_START = 1
00624   	   ROW_START = 1
00625              COL_END = N_COLUMNS
00626              ROW_END = N_ROWS
00627              FIELD_WIDTH = 5 	! HARD CODED FOR NOW!!! 
00628   	   POS = 19
00629   	   ROW = 0
00630   	   GOTO 100
00631   	ENDIF
00632   C
00633   	CALL SETAUX( %REF(STRING(27:30)), 4 )
00634   	IF (RDINT(COL_START)) THEN
00635   	   CALL LSL_PUTMSG(NTF2DTI__GRIDREC,'COL_START')
00636   	   CALL LSL_ADDSTR(STRING(27:30))
00637   	   OK=.FALSE.
00638   	   GOTO 999
00639   	ENDIF
00640   C
00641   	CALL SETAUX( %REF(STRING(31:34)), 4 )
00642   	IF (RDINT(COL_END)) THEN
00643   	   CALL LSL_PUTMSG(NTF2DTI__GRIDREC,'COL_END')
00644   	   CALL LSL_ADDSTR(STRING(31:34))
00645   	   OK=.FALSE.
00646   	   GOTO 999
00647   	ENDIF
00648   C
00649   C ..................................................................
00650   C And of the rows
00651   C
00652   	CALL SETAUX( %REF(STRING(35:38)), 4 )
00653   	IF (RDINT(ROW_START)) THEN
00654   	   CALL LSL_PUTMSG(NTF2DTI__GRIDREC,'ROW_START')
00655   	   CALL LSL_ADDSTR(STRING(35:38))
00656   	   OK=.FALSE.
00657   	   GOTO 999
00658   	ENDIF
00659   C
00660   	CALL SETAUX( %REF(STRING(39:42)), 4 )
00661   	IF (RDINT(ROW_END)) THEN
00662   	   CALL LSL_PUTMSG(NTF2DTI__GRIDREC,'ROW_END')
00663   	   CALL LSL_ADDSTR(STRING(39:42))
00664   	   OK=.FALSE.
00665   	   GOTO 999
00666   	ENDIF
00667   C
00668   C ..................................................................
00669   C Read the remaining flags
00670   C note that all the inversion flags must be unset and the INTERP must be numeric
00671   C
00672   	POS = 51
00673   C
00674   	IF (STRING(POS:POS).NE.'0') CALL LSL_PUTMSG(NTF2DTI__COLINV)
00675   	IF (STRING(POS+1:POS+1).NE.'0') CALL LSL_PUTMSG(NTF2DTI__ROWINV)
00676   C
00677   	POS = POS+1				! skip PLAne inversion flag
00678   C 	IF (STRING(POS+3:POS+3).NE.'1')	CALL LSL_PUTMSG(NTF2DTI__INTERPRET)	

READ_GRIDREC                                                     6-Aug-1997 09:37:18	VAX FORTRAN V5.9-173                Page  14
                                                                 6-Aug-1997 09:37:17	[DTMCONVERT.NTF2DTI.SPECIAL]GRID.FOR;12     

00679   C
00680   C Get continuation record for Versions 1.1 or 2.0
00681   C
00682   	IF (INTVER.EQ.110 .OR. INTVER.EQ.200) THEN
00683   	   OK = READ_NTF_RECORD()
00684   	   IF (.NOT.OK) GOTO 999
00685   	ENDIF
00686   C
00687   C ..................................................................
00688   C Now get the values. We put them into a 1x32767 array and exit 
00689   C when we have a complete column i.e. full from 1 to N_COLUMNS
00690   C
00691   	OK=READ_NTF_RECORD()
00692   	IF (.NOT.OK) GOTO 999
00693   C
00694   	POS=3						! Start of data line
00695   	ROW=0						! Bottom of array
00696   C
00697   100	CONTINUE
00698   C
00699   C	.......................................................................
00700   C	get data for next row
00701   C
00702   20	ROW = ROW+1					! Increment row counter
00703   C
00704   	NUM_STR(1:FIELD_WIDTH) = STRING(POS:POS+FIELD_WIDTH-1)
00705   	CALL SETAUX( %REF( NUM_STR(1:FIELD_WIDTH) ), FIELD_WIDTH )
00706   C
00707   	OK = .NOT.RDLONG(COLUMN(ROW))
00708   	IF (.NOT.OK) THEN
00709   	   CALL LSL_PUTMSG(NTF2DTI__GRIDREC,'GRIDVAL')
00710   	   CALL LSL_ADDSTR( NUM_STR(1:FIELD_WIDTH) )
00711   	   GOTO 999
00712   	ENDIF
00713   C
00714   	COLUMN(ROW) = COLUMN(ROW) * Z_MULT
00715   C
00716   C	.......................................................................
00717   C	reposition for next data element
00718   C
00719   	IF (ROW.LT.N_ROWS) THEN				! need more data
00720   C
00721   	  POS = POS+FIELD_WIDTH				! move to next value
00722   C
00723   	  IF ( (POS+FIELD_WIDTH-1).GT.LENGTH-1) THEN	! If we are at the end
00724   	     OK = READ_NTF_RECORD()			! read the next one in
00725   	     IF (.NOT.OK) GOTO 999
00726   	     IF (STRING(1:2).NE.'00') THEN		! Its not a continuation
00727   		CALL LSL_PUTMSG(NTF2DTI__NOTCONTINUE,'GRIDREC',51)
00728   		CALL LSL_ADDMSG(NTF2DTI__NOTALL,ROW,N_ROWS)
00729   		OK=.FALSE.
00730   		GOTO 999
00731   	     ELSE
00732   	       POS=3					! move to new data
00733   	     ENDIF
00734   	  ENDIF
00735   	  GOTO 20					! Back for next value

READ_GRIDREC                                                     6-Aug-1997 09:37:18	VAX FORTRAN V5.9-173                Page  15
                                                                 6-Aug-1997 09:37:17	[DTMCONVERT.NTF2DTI.SPECIAL]GRID.FOR;12     

00736   	ENDIF
00737   C
00738   C###############################################################################
00739   C rejoin errors
00740   C
00741   999	READ_GRIDREC=OK
00742   C
00743   	RETURN
00744   	END




PROGRAM SECTIONS

    Name				 Bytes   Attributes

  0 $CODE                                  701   PIC CON REL LCL   SHR   EXE   RD NOWRT QUAD
  1 $PDATA                                  82   PIC CON REL LCL   SHR NOEXE   RD NOWRT QUAD
  2 $LOCAL                                 524   PIC CON REL LCL NOSHR NOEXE   RD   WRT QUAD
  3 LSL_FNAM_STR                           210   PIC OVR REL GBL   SHR NOEXE   RD   WRT QUAD
  4 LSL_FNAM_LOG                            24   PIC OVR REL GBL   SHR NOEXE   RD   WRT QUAD
  5 LSL_FNAM_LEN                            24   PIC OVR REL GBL   SHR NOEXE   RD   WRT QUAD
  6 FILE_INT                                16   PIC OVR REL GBL   SHR NOEXE   RD   WRT QUAD
  7 FILE_CHR                               868   PIC OVR REL GBL   SHR NOEXE   RD   WRT QUAD
  8 COMMANDS                                40   PIC OVR REL GBL   SHR NOEXE   RD   WRT QUAD
  9 RECORD1                                 86   PIC OVR REL GBL   SHR NOEXE   RD   WRT QUAD
 10 RECORD2                                  9   PIC OVR REL GBL   SHR NOEXE   RD   WRT QUAD
 11 NTFDATA                                 16   PIC OVR REL GBL   SHR NOEXE   RD   WRT QUAD
 12 DTIDATA                                128   PIC OVR REL GBL   SHR NOEXE   RD   WRT QUAD

    Total Space Allocated                 2728


ENTRY POINTS

    Address  Type  Name          

  0-00000000  L*4  READ_GRIDREC  


VARIABLES

    Address  Type  Name                                               Address  Type  Name                            

 12-0000005C  I*4  COL_END                                         12-00000068  I*4  COL_INV                         
 12-00000058  I*4  COL_START                                        8-00000018  L*4  DEDUCE_FILE                     
  7-000000D9  CHAR DEVICE                                           6-00000004  I*4  DEVLEN                          
  7-000001B2  CHAR DTIFILE                                          6-00000008  I*4  DTILEN                          
  8-00000024  L*4  DTIOPEN                                         10-00000008  CHAR EOR_MARKER                      
 12-00000078  I*4  FIELD_WIDTH                                     11-0000000C  L*4  FIXED                           
  4-00000004  L*4  HAD_DEV                                          4-00000008  L*4  HAD_DIR                         
  4-00000010  L*4  HAD_EXT                                          4-0000000C  L*4  HAD_NAM                         
  4-00000000  L*4  HAD_NOD                                          4-00000014  L*4  HAD_VER                         
  2-00000078  I*4  I                                                2-00000070  I*4  IERR                            
 12-00000074  I*4  INTERPRET                                       11-00000004  I*4  INTVER                          
  8-0000001C  L*4  IS_MAGTAPE                                       8-00000010  L*4  IS_OS                           

READ_GRIDREC                                                     6-Aug-1997 09:37:18	VAX FORTRAN V5.9-173                Page  16
01                                                               6-Aug-1997 09:37:17	[DTMCONVERT.NTF2DTI.SPECIAL]GRID.FOR;12     

  8-00000020  L*4  IS_TERM                                          2-00000012  CHAR LAST                            
 10-00000004  I*4  LENGTH                                           5-00000004  I*4  LEN_DEV                         
  5-00000008  I*4  LEN_DIR                                          5-00000010  I*4  LEN_EXT                         
  5-0000000C  I*4  LEN_NAM                                          5-00000000  I*4  LEN_NOD                         
  5-00000014  I*4  LEN_VER                                         11-00000000  I*4  LEVEL                           
  8-00000000  L*4  LOG                                              7-00000000  CHAR LOGFILE                         
  6-00000000  I*4  LOGLEN                                           2-0000006C  I*4  NCHS                            
  9-00000054  CHAR NTF$_REC_DESCR                                   7-0000028B  CHAR NTFFILE                         
  6-0000000C  I*4  NTFLEN                                           2-00000074  I*4  NUM                             
 12-0000007C  I*4  NUM_FIELD                                        2-00000013  CHAR NUM_STR                         
 12-0000002C  I*4  N_COLUMNS                                       12-00000028  I*4  N_ROWS                          
  2-00000068  I*4  OK                                              12-00000070  I*4  ORDER                           
  8-00000004  L*4  OUTPUT                                           2-00000080  I*4  POS                             
  8-00000008  L*4  PROJECT                                         10-00000000  I*4  RECNUM                          
  8-00000014  L*4  REWIND                                           2-0000007C  I*4  ROW                             
 12-00000064  I*4  ROW_END                                         12-0000006C  I*4  ROW_INV                         
 12-00000060  I*4  ROW_START                                        8-0000000C  L*4  SECT                            
  9-00000000  CHAR STRING                                           3-00000006  CHAR STR_DEV                         
  3-0000001A  CHAR STR_DIR                                          3-000000A5  CHAR STR_EXT                         
  9-00000050  I*4  STR_LEN                                          3-0000007E  CHAR STR_NAM                         
  3-00000000  CHAR STR_NOD                                          3-000000CC  CHAR STR_VER                         
 11-00000008  R*4  VERSION                                         12-00000014  I*4  XMAX                            
 12-00000010  I*4  XMIN                                            12-00000000  I*4  XYLEN                           
 12-00000008  R*4  XY_MULT                                         12-00000004  I*4  XY_UNIT                         
 12-00000030  R*4  X_ORIG                                          12-00000020  I*4  X_SAMP                          
 12-0000001C  I*4  YMAX                                            12-00000018  I*4  YMIN                            
 12-00000034  R*4  Y_ORIG                                          12-00000024  I*4  Y_SAMP                          
 12-0000000C  R*4  Z_MULT                                         


ARRAYS

    Address  Type  Name                                  Bytes  Dimensions

 AP-00000004@ I*4  COLUMN                                   **  (*)
  2-0000000C  CHAR STD_ATTR_CODES                            6  (3)
  2-00000000  I*4  STD_ATTR_LEN                             12  (3)
 12-00000038  R*4  X_COORD                                  16  (4)
 12-00000048  R*4  Y_COORD                                  16  (4)




LABELS

    Address   Label       Address   Label       Address   Label   

  0-000001BD  20        0-000001BD  100       0-000002B4  999     


FUNCTIONS AND SUBROUTINES REFERENCED

  Type  Name                              Type  Name                              Type  Name                            

        LSL_ADDMSG                              LSL_ADDSTR                              LSL_PUTMSG                      
   L*4  RDINT                              L*4  RDLONG                             L*4  READ_NTF_RECORD                 
        SETAUX                          

                                                                 6-Aug-1997 09:37:18	VAX FORTRAN V5.9-173                Page  17
                                                                 6-Aug-1997 09:37:17	[DTMCONVERT.NTF2DTI.SPECIAL]GRID.FOR;12     

00001   C


COMMAND QUALIFIERS

  FORTRAN/EXTEND/DEBUG/NOOPT/LIST GRID

  /CHECK=(NOBOUNDS,OVERFLOW,NOUNDERFLOW)
  /DEBUG=(SYMBOLS,TRACEBACK)
  /DESIGN=(NOCOMMENTS,NOPLACEHOLDERS)
  /SHOW=(NODICTIONARY,NOINCLUDE,MAP,NOPREPROCESSOR,SINGLE)
  /STANDARD=(NOSEMANTIC,NOSOURCE_FORM,NOSYNTAX)
  /WARNINGS=(NODECLARATIONS,GENERAL,NOULTRIX,NOVAXELN)
  /CONTINUATIONS=19  /NOCROSS_REFERENCE  /NOD_LINES  /EXTEND_SOURCE
  /F77  /NOG_FLOATING  /I4  /NOMACHINE_CODE  /NOOPTIMIZE  /NOPARALLEL
  /NOANALYSIS_DATA
  /NODIAGNOSTICS
  /LIST=LSL$SOURCE_ROOT:[DTMCONVERT.NTF2DTI.SPECIAL]GRID.LIS;12                                             
  /OBJECT=LSL$SOURCE_ROOT:[DTMCONVERT.NTF2DTI.SPECIAL]GRID.OBJ;19                                             


COMPILATION STATISTICS

  Run Time:           2.23 seconds
  Elapsed Time:       3.38 seconds
  Page Faults:        1134
  Dynamic Memory:     844 pages
