C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1997-08-05 14:55:14.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL FUNCTION READ_GRIDHREC
C
***     MODULE READ_GRIDHREC
***     IDENT  05AU97
C
C Copyright Laser-Scan Ltd, Cambridge, England
C
C Author						IM 07-Apr-1988
C
CMOD1049 Add reading of DTI ranges to get x/y grid size
C							JB 22-Oct-1991
C
CMOD1119 Use new format for Version 1.1			JB 21-May-1992
C
CMOD1242 Use new format for Version 2.0			JB 21-Jun-1993
C
C Reads the data from the section header record
C into the DTI common block
C
	IMPLICIT NONE
C
C Messages:
	INCLUDE	'LSL$CMNLSL:LSLLIBMSG.PAR'
	INCLUDE 'HERE:NTF2DTIMSG.PAR'
C
C Commons:
	INCLUDE 'LSL$CMNDTI:DTIHDR.CMN'
C
	INCLUDE 'LSL$CMNLSL:FILENAME.CMN'
	INCLUDE 'HERE:FILENAME.CMN'
C
	INCLUDE 'HERE:COMMANDS.CMN'
	INCLUDE	'HERE:RECORD.CMN'
	INCLUDE 'HERE:NTFDATA.CMN'
	INCLUDE	'HERE:LUNS.PAR'
C
C Functions:
	LOGICAL		RDINT		! read an integer from input buffer
	LOGICAL		RDLONG		! read a longword from input buffer
	LOGICAL		RDREAL		! read a real from input buffer
	LOGICAL		READ_CONTINUE	! read a continuation record
	LOGICAL		READ_NTF_RECORD	! read a record
C
C Workspace:
	INTEGER		OK		! Success flag
	INTEGER		NCHS		! Number of chars read by FLRSTR
	INTEGER		IERR		! Error code
	INTEGER		NUM		! To RDINT into
	INTEGER		I		! DO loop counter
C
	CHARACTER*10	SECTREF
C
	CHARACTER*7	UNITS
	INTEGER		UNLEN
	REAL		Z
C
C############################################################################
C
	OK = .TRUE.
C
C Process alternative GRIDHREC format with 12 records instead of 31
C if necessary
	IF (NUM_FIELD.EQ.12) GOTO 989
C
C ..................................................................
C this field was commented before I got to it		SG 16-AUG-1991
C ..................................................................
C The origin of the map given in the SECTION header doesn't seem
C to make much sense for OS SUPPLIED DATA so for now we will read 
C it from the reference field in this record. Note that nothing is 
C required to be here by NTF so check for blank field first.
C
C	IF (.NOT.IS_OS) GOTO 23
C
C	IF (STRING(5:8).EQ.'    ') GOTO 23
C	CALL SETAUX( %REF(STRING(5:8)), 4 )
C	IF (RDREAL(X_ORIG)) THEN
C	   CALL LSL_PUTMSG(NTF2DTI__GRIDHREC,'GRID_ID') ! Give a warning 
C	   CALL LSL_ADDSTR(STRING(5:8))			! but carry on
C	ENDIF
C
C ..................................................................
C And the Y offset :
C
C	IF (STRING(9:12).EQ.'    ') GOTO 23
C	CALL SETAUX( %REF(STRING(9:12)), 4 )
C	IF (RDREAL(Y_ORIG)) THEN
C	   CALL LSL_PUTMSG(NTF2DTI__GRIDHREC,'GRID_ID')
C	   CALL LSL_ADDSTR(STRING(9:12))
C	ENDIF
C
C ..................................................................
C Read the number of columns
C
	X_ORIG=0.0		! Set default values in case we can't
	Y_ORIG=0.0		! read them
C
	CALL SETAUX( %REF(STRING(13:16)), 4 )
	OK = .NOT.RDINT(N_COLUMNS)
	IF (.NOT.OK) THEN
	   CALL LSL_PUTMSG(NTF2DTI__GRIDHREC,'N_COLUMNS')
	   CALL LSL_ADDSTR(STRING(13:16))
	   GOTO 999
	ENDIF
C
C ..................................................................
C Read the number of rows
C
	CALL SETAUX( %REF(STRING(17:20)), 4 )
	OK = .NOT.RDINT(N_ROWS)
	IF (.NOT.OK) THEN
	   CALL LSL_PUTMSG(NTF2DTI__GRIDHREC,'N_ROWS')
	   CALL LSL_ADDSTR(STRING(17:20))
	   GOTO 999
	ENDIF
C
C ..................................................................
C Get the SW grid corner points 
C
	CALL SETAUX( %REF(STRING(25:34)), 10 )
	OK = .NOT.RDREAL(X_COORD(1))
	IF (.NOT.OK) THEN
	   CALL LSL_PUTMSG(NTF2DTI__GRIDHREC,'X_COORD')
	   CALL LSL_ADDSTR(STRING(25:34))
	   GOTO 999
	ENDIF
C
	CALL SETAUX( %REF(STRING(35:44)), 10 )
	OK = .NOT.RDREAL(Y_COORD(1))
	IF (.NOT.OK) THEN
	   CALL LSL_PUTMSG(NTF2DTI__GRIDHREC,'Y_COORD')
	   CALL LSL_ADDSTR(STRING(35:44))
	   GOTO 999
	ENDIF
C
C Transfer into X_ORIG and Y_ORIG
	X_ORIG=X_COORD(1)
	Y_ORIG=Y_COORD(1)
C
C Action from here depends on level and/or version
C
	IF (LEVEL.EQ.0) THEN				! Version 1.0
	  CALL SETAUX( %REF(STRING(45:50)), 6)
	  OK = .NOT.RDREAL(Z)
	  IF (.NOT.OK) THEN
	     CALL LSL_PUTMSG(NTF2DTI__GRIDHREC,'Z_COORD')
	     CALL LSL_ADDSTR(STRING(45:50))
	     GOTO 999
	  ENDIF
C
	  CALL SETAUX( %REF(STRING(51:60)), 10)
	  OK = .NOT.RDREAL(X_COORD(2))
	  IF (.NOT.OK) THEN
	     CALL LSL_PUTMSG(NTF2DTI__GRIDHREC,'X_COORD')
	     CALL LSL_ADDSTR(STRING(51:60))
	     GOTO 999
	  ENDIF
C
	  CALL SETAUX( %REF(STRING(61:70)), 10)
	  OK = .NOT.RDREAL(Y_COORD(2))
	  IF (.NOT.OK) THEN
	     CALL LSL_PUTMSG(NTF2DTI__GRIDHREC,'Y_COORD')
	     CALL LSL_ADDSTR(STRING(61:70))
	     GOTO 999
	  ENDIF
C
	  CALL SETAUX( %REF(STRING(71:76)), 6)
	  OK = .NOT.RDREAL(Z)
	  IF (.NOT.OK) THEN
	     CALL LSL_PUTMSG(NTF2DTI__GRIDHREC,'Z_COORD')
	     CALL LSL_ADDSTR(STRING(71:76))
	     GOTO 999
	  ENDIF
C
	ELSEIF (LEVEL.EQ.4 .AND. INTVER.EQ.100) THEN 	! Version 1.0 (proper)
C
	    CALL SETAUX( %REF(STRING(45:54)), 10)
	    OK = .NOT.RDREAL(X_COORD(2))
	    IF (.NOT.OK) THEN
	       CALL LSL_PUTMSG(NTF2DTI__GRIDHREC,'X_COORD')
	       CALL LSL_ADDSTR(STRING(45:54))
	       GOTO 999
	    ENDIF
C
	    CALL SETAUX( %REF(STRING(55:64)), 10)
	    OK = .NOT.RDREAL(Y_COORD(2))
	    IF (.NOT.OK) THEN
	       CALL LSL_PUTMSG(NTF2DTI__GRIDHREC,'Y_COORD')
	       CALL LSL_ADDSTR(STRING(55:64))
	       GOTO 999
	    ENDIF
C
	ELSEIF( (LEVEL.EQ.4 .AND. INTVER.EQ.110) .OR.	! Version 1.1
     &		(LEVEL.EQ.5 .AND. INTVER.EQ.200) ) THEN	! Version 2.0
C
	    CALL SETAUX( %REF(STRING(45:50)), 6)
	    OK = .NOT.RDREAL(Z)
	    IF (.NOT.OK) THEN
	       CALL LSL_PUTMSG(NTF2DTI__GRIDHREC,'Z_COORD')
	       CALL LSL_ADDSTR(STRING(45:50))
	       GOTO 999
	    ENDIF
C
	    CALL SETAUX( %REF(STRING(51:60)), 10)
	    OK = .NOT.RDREAL(X_COORD(2))
	    IF (.NOT.OK) THEN
	       CALL LSL_PUTMSG(NTF2DTI__GRIDHREC,'X_COORD')
	       CALL LSL_ADDSTR(STRING(51:60))
	       GOTO 999
	    ENDIF
C
	    CALL SETAUX( %REF(STRING(61:70)), 10)
	    OK = .NOT.RDREAL(Y_COORD(2))
	    IF (.NOT.OK) THEN
	       CALL LSL_PUTMSG(NTF2DTI__GRIDHREC,'Y_COORD')
	       CALL LSL_ADDSTR(STRING(61:70))
	       GOTO 999
	    ENDIF
C
	    CALL SETAUX( %REF(STRING(71:76)), 6)
	    OK = .NOT.RDREAL(Z)
	    IF (.NOT.OK) THEN
	       CALL LSL_PUTMSG(NTF2DTI__GRIDHREC,'Z_COORD')
	       CALL LSL_ADDSTR(STRING(71:76))
	       GOTO 999
	    ENDIF
C
	ENDIF
C
C ..................................................................
C read continuation record if present
C
	IF (.NOT.FIXED) LENGTH = LENGTH - 1	! miss EOR marker
C
	IF (STRING(LENGTH:LENGTH).EQ.'1') THEN
	   OK = READ_CONTINUE('GRIDHREC')
	   IF (.NOT.OK) GOTO 999
	ENDIF
C
	CALL SETAUX( %REF(STRING(3:12)), 10)
	OK = .NOT.RDREAL(X_COORD(3))
	IF (.NOT.OK) THEN
	   CALL LSL_PUTMSG(NTF2DTI__GRIDHREC,'X_COORD')
	   CALL LSL_ADDSTR(STRING(3:12))
	   GOTO 999
	ENDIF
C
	CALL SETAUX( %REF(STRING(13:22)), 10)
	OK = .NOT.RDREAL(Y_COORD(3))
	IF (.NOT.OK) THEN
	   CALL LSL_PUTMSG(NTF2DTI__GRIDHREC,'Y_COORD')
	   CALL LSL_ADDSTR(STRING(13:22))
	   GOTO 999
	ENDIF
C
C Action from here depends on level
C
	IF (LEVEL.EQ.0) THEN				! Version 1.0
C
	  CALL SETAUX( %REF(STRING(23:28)), 6)
	  OK = .NOT.RDREAL(Z)
	  IF (.NOT.OK) THEN
	     CALL LSL_PUTMSG(NTF2DTI__GRIDHREC,'Z_COORD')
	     CALL LSL_ADDSTR(STRING(23:28))
	     GOTO 999
	  ENDIF
C
	  CALL SETAUX( %REF(STRING(29:38)), 10)
	  OK = .NOT.RDREAL(X_COORD(4))
	  IF (.NOT.OK) THEN
	     CALL LSL_PUTMSG(NTF2DTI__GRIDHREC,'X_COORD')
	     CALL LSL_ADDSTR(STRING(29:38))
	     GOTO 999
	  ENDIF
C
	  CALL SETAUX( %REF(STRING(39:48)), 10)
	  OK = .NOT.RDREAL(Y_COORD(4))
	  IF (.NOT.OK) THEN
	     CALL LSL_PUTMSG(NTF2DTI__GRIDHREC,'Y_COORD')
	     CALL LSL_ADDSTR(STRING(39:48))
	     GOTO 999
	  ENDIF
C
	  CALL SETAUX( %REF(STRING(49:54)), 6)
	  OK = .NOT.RDREAL(Z)
	  IF (.NOT.OK) THEN
	     CALL LSL_PUTMSG(NTF2DTI__GRIDHREC,'Z_COORD')
	     CALL LSL_ADDSTR(STRING(49:54))
	     GOTO 999
	  ENDIF
C
	ELSEIF (LEVEL.EQ.4 .AND. INTVER.EQ.100) THEN	! Version 1.0 (proper)
C
	    CALL SETAUX( %REF(STRING(23:32)), 10)
	    OK = .NOT.RDREAL(X_COORD(4))
	    IF (.NOT.OK) THEN
	       CALL LSL_PUTMSG(NTF2DTI__GRIDHREC,'X_COORD')
	       CALL LSL_ADDSTR(STRING(23:32))
	       GOTO 999
	    ENDIF
C
 	    CALL SETAUX( %REF(STRING(33:42)), 10)
	    OK = .NOT.RDREAL(Y_COORD(4))
	    IF (.NOT.OK) THEN
	       CALL LSL_PUTMSG(NTF2DTI__GRIDHREC,'Y_COORD')
	       CALL LSL_ADDSTR(STRING(33:42))
	       GOTO 999
	    ENDIF
C
	ELSEIF( (LEVEL.EQ.4 .AND. INTVER.EQ.110) .OR. 	! Version 1.1
     &		(LEVEL.EQ.5 .AND. INTVER.EQ.200) ) THEN ! Version 2.0
C
	    CALL SETAUX( %REF(STRING(23:28)), 6)
	    OK = .NOT.RDREAL(Z)
	    IF (.NOT.OK) THEN
	       CALL LSL_PUTMSG(NTF2DTI__GRIDHREC,'Z_COORD')
	       CALL LSL_ADDSTR(STRING(23:28))
	       GOTO 999
	    ENDIF
C
	    CALL SETAUX( %REF(STRING(29:38)), 10)
	    OK = .NOT.RDREAL(X_COORD(4))
	    IF (.NOT.OK) THEN
	       CALL LSL_PUTMSG(NTF2DTI__GRIDHREC,'X_COORD')
	       CALL LSL_ADDSTR(STRING(29:38))
	       GOTO 999
	    ENDIF
C
	    CALL SETAUX( %REF(STRING(39:48)), 10)
	    OK = .NOT.RDREAL(Y_COORD(4))
	    IF (.NOT.OK) THEN
	       CALL LSL_PUTMSG(NTF2DTI__GRIDHREC,'Y_COORD')
	       CALL LSL_ADDSTR(STRING(39:48))
	       GOTO 999
	    ENDIF
C
	    CALL SETAUX( %REF(STRING(49:54)), 6)
	    OK = .NOT.RDREAL(Z)
	    IF (.NOT.OK) THEN
	       CALL LSL_PUTMSG(NTF2DTI__GRIDHREC,'Z_COORD')
	       CALL LSL_ADDSTR(STRING(49:54))
	       GOTO 999
	    ENDIF
C
	ENDIF
C
C Get x,y grid pixel size
C
	X_SAMP = (X_COORD(3) - X_COORD(1)) / (N_COLUMNS-1)
	Y_SAMP = (Y_COORD(3) - Y_COORD(1)) / (N_ROWS-1)
        GOTO 990
C
989	CONTINUE
C
C Handle alternative record format (one day this should be written to handle
C any format given by DATADESC and DATAFMT).
C
C
C ..................................................................
C Read the number of columns
C
	X_ORIG=0.0		! Set default values in case we can't
	Y_ORIG=0.0		! read them
C
	CALL SETAUX( %REF(STRING(23:30)), 8 )
	OK = .NOT.RDINT(N_COLUMNS)
	IF (.NOT.OK) THEN
	   CALL LSL_PUTMSG(NTF2DTI__GRIDHREC,'N_COLUMNS')
	   CALL LSL_ADDSTR(STRING(23:30))
	   GOTO 999
	ENDIF
C
C ..................................................................
C Read the number of rows
C
	CALL SETAUX( %REF(STRING(31:38)), 8 )
	OK = .NOT.RDINT(N_ROWS)
	IF (.NOT.OK) THEN
	   CALL LSL_PUTMSG(NTF2DTI__GRIDHREC,'N_ROWS')
	   CALL LSL_ADDSTR(STRING(31:38))
	   GOTO 999
	ENDIF
C
C ..................................................................
C Get the SW grid corner points 
C
	CALL SETAUX( %REF(STRING(13:17)), 5 )
	OK = .NOT.RDREAL(X_COORD(1))
	IF (.NOT.OK) THEN
	   CALL LSL_PUTMSG(NTF2DTI__GRIDHREC,'X_COORD')
	   CALL LSL_ADDSTR(STRING(13:17))
	   GOTO 999
	ENDIF
C
	CALL SETAUX( %REF(STRING(18:22)), 5 )
	OK = .NOT.RDREAL(Y_COORD(1))
	IF (.NOT.OK) THEN
	   CALL LSL_PUTMSG(NTF2DTI__GRIDHREC,'Y_COORD')
	   CALL LSL_ADDSTR(STRING(18:22))
	   GOTO 999
	ENDIF
C
C Transfer into X_ORIG and Y_ORIG
	X_ORIG=X_COORD(1)
	Y_ORIG=Y_COORD(1)

	CALL SETAUX( %REF(STRING(39:42)), 4 )
	OK = .NOT.RDINT(X_SAMP)
	IF (.NOT.OK) THEN
	   CALL LSL_PUTMSG(NTF2DTI__GRIDHREC,'COL_INTRVL')
	   CALL LSL_ADDSTR(STRING(39:42))
	   GOTO 999
	ENDIF
C
	CALL SETAUX( %REF(STRING(43:46)), 4 )
	OK = .NOT.RDINT(Y_SAMP)
	IF (.NOT.OK) THEN
	   CALL LSL_PUTMSG(NTF2DTI__GRIDHREC,'ROW_INTRVL')
	   CALL LSL_ADDSTR(STRING(43:46))
	   GOTO 999
	ENDIF
C
C Skip any further continuation records
C
990	CONTINUE
C
	IF (.NOT.FIXED) LENGTH = LENGTH - 1		! miss EOR marker
C
	IF (STRING(LENGTH:LENGTH).EQ.'1') THEN
	   OK = READ_CONTINUE('GRIDHREC')
	   IF (.NOT.OK) GOTO 999
C
	   GOTO 990
C
	ELSEIF (STRING(LENGTH:LENGTH).EQ.'0') THEN
	   OK = READ_NTF_RECORD()			! get next record
C
	ELSE						! unknown record -
	   OK = READ_CONTINUE('GRIDHREC')		! try to read on 
	   IF (.NOT.OK) GOTO 999
C
	   GOTO 990
	ENDIF
C
C ..................................................................
C rejoin errors
C
999	READ_GRIDHREC=OK
C
	RETURN
	END
C
