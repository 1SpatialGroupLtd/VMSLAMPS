C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1988-06-21 15:22:18.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE CPYSWP(FROM,TO,NWORDS,CHKSUM)
C
***	MODULE	CPYSWP
***	IDENT	21JN88
C
C	Copyright (C), Laser-Scan Laboratories Ltd., Cambridge, England
C
C	Created					Unknown	30-Feb-1983
C
C	Amended-  Copyright note added,
C		  used in DTI2DTED	          FJB	21-Jun-1988
C
C module to copy words  from FROM to TO swapping bytes
C and generating a checksum as it goes
C
	INTEGER*4	NWORDS		! number of words to copy
	INTEGER*2	FROM(NWORDS)	! source
	BYTE		TO(NWORDS*2)	! destination
	INTEGER*4	CHKSUM		! checksum
C
C w/s
C
	INTEGER*4	FLONG		! for current word
	BYTE		FBYTE(2)	! two bytes of FLONG
	EQUIVALENCE	(FLONG,FBYTE)
C
	INTEGER*4	LCHK		! checksum longword
	BYTE		BCHK		! same as byte
	EQUIVALENCE	(LCHK,BCHK)
C
C
	LCHK = 0		! zeroise both bytes for safety
	DO 100 I=1,NWORDS
	   FLONG = FROM(I)	! take a word and stretch to long
	   IF (FLONG.LT.0) THEN	! convert to sign and magnitude
	      FLONG=-FLONG-32768
	   ENDIF
	   BCHK = FBYTE(2)	! high byte first
	   TO(I*2-1) = BCHK	! to low byte of output
	   CHKSUM=CHKSUM+LCHK	! add to checksum
	   BCHK = FBYTE(1)	! then low byte
	   TO(I*2) = BCHK	! to high byte of output
	   CHKSUM=CHKSUM+LCHK	! add to checksum
100	CONTINUE
	RETURN
	END
