C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1990-01-06 17:01:34.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL FUNCTION DISABLE_CMD()
C
***	MODULE	DISABLE_CMD
***	IDENT	06JA90
C
C	Copyright (C), Laser-Scan Laboratories Ltd., Cambridge, England
C
C	Tidied			                	FJB 21-Jun-1988
C	Adapted from DTICONTOUR	for DTI2DTED		FJB 12-Feb-1988
C	Created						TJH 13-Oct-1987
C
C Function to set command switches 'off' eg DISABLE DEBUG. This
C replaces the grotty CMDLIB + or - mechanism and must be used in
C conjunction with function ENABLE_CMD for turning switches on again. 
C
C Function returns .TRUE. if all is well, .FALSE. if an error
C
	IMPLICIT NONE
C
C Parameter files:
	INCLUDE 'LSL$DTMCONVERTSYS:MESPAR.PAR'
C
C Common blocks:
	INCLUDE 'LSL$CMNDTI2DTED:OPTIONS.CMN'
	INCLUDE 'LSL$CMNLSL:CMDCOM.CMN'
C
C Functions:
	LOGICAL 	RDCOMM  ! read command from line
C
C W/s
	INTEGER		CMD     ! decoded command number
C
C Command table:
	EXTERNAL	DISABLE_CMD_TABLE
C
C ......................................................................
C
	DISABLE_CMD=.TRUE.		! assume success
	NOMESS=.TRUE.			! turn off CMDLIB messages
C
	CMD=RDCOMM(DISABLE_CMD_TABLE)	! get command
	GOTO (
     &		10,	! error/nothing
     &		20,	! debug
     &		30,	! diagnostics
     &		40	! grid
     &			), CMD+1
C
C
C command number out of range
	CALL WRITEF('Command not yet implemented')
	DISABLE_CMD=.FALSE.
	GOTO 999
C
C ......................................................................
C DISABLE ?
C
10	CALL WRITEF('%S Invalid qualifier',WARNING)
 	CALL WRITEF
	CALL WRITEF(
     &		'Available DISABLE command qualifiers are:')
	CALL WRITEF
	CALL WRITEF(
     &		'DEBUG	  DIAGNOSTICS     GRID')
	CALL WRITEF
	DISABLE_CMD=.FALSE.
 	GOTO 999
C
C ......................................................................
C DISABLE DEBUG
20	IF(DEBUG)THEN
	   DEBUG = .FALSE.
	ELSE
	   CALL WRITEF('%S You were not using DEBUG!',WARNING)
	ENDIF
	GOTO 999
C
C ......................................................................
C DISABLE DIAGNOSTICS
30	DIAG = .FALSE.
	GOTO 999
C
C ......................................................................
C DISABLE GRID
40	GRID = .FALSE.
	GOTO 999
C
C .....................................................................
C
999	NOMESS=.FALSE.
C
	RETURN
	END
