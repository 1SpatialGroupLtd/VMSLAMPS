C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1988-03-23 13:57:06.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL FUNCTION DTMJPI ()
C
***	MODULE	DTMJPI
***	IDENT	23MA88
C
C Copyright Laser-Scan Laboratories Limited, Cambridge, England.
C
CMOD 	Converted for DTMCONVERT		FJB	23-Mar-1988
CMOD 	Converted for DTMCREATE			TJH	03-Aug-1987
CMOD	Watch out for mis-translated root dir.	 DM	11-Jun-1985
CMOD    If no terminal found LSL$TK substituted TJH     05-Jul-1984
CMOD	Now calls IDENT to output the message	 DM	18-Jun-1984
C 	Adapted					TJH	27-Apr-1984
C
C Function to print job information cobbled from JPINFO
C
	IMPLICIT NONE
C
C functions:
	INTEGER SYS$GETJPIW	! Get Job/Process Information
C
C parameters:
	INCLUDE '($SSDEF)'
	INCLUDE '($JPIDEF)'
C
C workspace:
	INTEGER	  III,JJJ	! temporary variables
	INTEGER   IERR		! Error from queing of System service
	INTEGER   IOSB		! status at completion of Sys service
	INTEGER*2 IOSBW(2)	! bottom word is error code
	EQUIVALENCE (IOSB,IOSBW)
C
	INTEGER   ITMLEN	! size of item list
	PARAMETER (ITMLEN=25)
	INTEGER*4 ITMLST(ITMLEN)
	INTEGER*2 ITMLST2(2*ITMLEN)
	EQUIVALENCE (ITMLST,ITMLST2)
C
	INCLUDE 'LSL$DTMCREATESYS:DTMJPI.CMN'
C
C ......................................................................
C
C set up the item list ( see SYSTEM SERVICES Reference Manual)
	ITMLST2(1)   =128
	ITMLST2(2)   =JPI$_IMAGNAME
	ITMLST (3/2+1) =%LOC(IMAGNAME)
	ITMLST (5/2+1) =%LOC(IMAGELEN)
C
	ITMLST2(7)  =7
	ITMLST2(8)  =JPI$_TERMINAL
	ITMLST (9/2+1)=%LOC(TERMINAL)
	ITMLST (11/2+1)=%LOC(TERMLEN)
C
	ITMLST2(13)  =15
	ITMLST2(14)  =JPI$_PRCNAM
	ITMLST (15/2+1)=%LOC(PRCNAM)
	ITMLST (17/2+1)=%LOC(PRCLEN)
C
	ITMLST2(19)  =15
	ITMLST2(20)  =JPI$_USERNAME
	ITMLST (21/2+1)=%LOC(USERNAME)
	ITMLST (23/2+1)=%LOC(USERLEN)
C
	ITMLST (25/2+1) =0		! to terminate it
C
C	queue the request
	DTMJPI=SYS$GETJPIW(,		! efn
     &                  ,		! pid
     &                  ,		! prcnam
     &                  ITMLST,		! itmlst
     &                  IOSB,		! iosb
     &                  ,		! astadr
     &                  ,)		! astprm
C
	IF (DTMJPI.NE.SS$_NORMAL) GOTO 20! branch if failed to queue
C
C did the request complete OK ? - branch if it failed
	IF (IOSBW(1).NE.SS$_NORMAL) GOTO 10
C
C tidy things up
	USERLEN = INDEX(USERNAME,' ') - 1
	IF (USERLEN.LE.0) USERLEN = 12
	IF (TERMLEN.LE.0) THEN
	   TERMLEN=7
	   TERMINAL='LSL$TK:'
	ENDIF
C
C call program-dependent routine to print our results
	IMAGNAME=IMAGNAME(INDEX(IMAGNAME,'][') + 1:)
	III=MAX(INDEX(IMAGNAME,']'),INDEX(IMAGNAME,'>'),
     &		INDEX(IMAGNAME,':')) + 1
	JJJ=III + INDEX(IMAGNAME(III:),'.') - 2
	IF (JJJ.LT.III) JJJ=IMAGELEN
	IMAGNAME=IMAGNAME(III:JJJ)
	IMAGELEN=(JJJ-III)+1
	CALL VERSION('DTMCONVERT module '//IMAGNAME(:IMAGELEN))
	GOTO 30
C
C here if GETJPI failed to queue
10	IERR = IOSBW(1)
20	CALL LSL_PUTMSG(DTMJPI)
	CALL LSL_ADDMSG(IERR)
30	RETURN
	END
