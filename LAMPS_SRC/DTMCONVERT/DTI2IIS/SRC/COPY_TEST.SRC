C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1990-03-29 17:57:46.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	PROGRAM Z
C
	IMPLICIT NONE
C
C Functions
C
	INTEGER	  DCL_STARTUP	! Gets parsed command line
	INTEGER	  DCL_FILE	! Reads and parses file titles from the 
				! command line
	LOGICAL	  DTI_OPEN	
	LOGICAL	  DTI_CREATE
	LOGICAL	  DTI_COPY_BYTE_DATA
	LOGICAL	  DTI_COPY_WORD_DATA
	LOGICAL	  DTI_COPY_LONG_DATA
	LOGICAL	  DTI_MINMAX_DATA
	LOGICAL	  DTI_CLOSE	
	EXTERNAL  DTI6IIS_CLD
C
	INCLUDE   'LSL$CMNDTI:DTIHDR.CMN'
C
C W/s
C
	INTEGER	  IN_LUN
	PARAMETER (IN_LUN=1)
	INTEGER	  OUT_LUN
	PARAMETER (OUT_LUN=2)
C
	LOGICAL	  OK,ABSENT
	INTEGER	  I,J,K		
	INTEGER	  IMRN
	INTEGER	  ERROR
	INTEGER   RX,RY
	INTEGER   XSIZE,YSIZE,ZSIZE,WSIZE
	INTEGER   XSTART,YSTART
	INTEGER   XLEN,YLEN
	INTEGER   DTYPE,MODE
	BYTE      BBUFF(1024)
	INTEGER*2 IBUFF(1024)
	INTEGER*4 LBUFF(1024)
	INTEGER   IISLEN,DTILEN	! Input and output filename lengths
	CHARACTER*128  IISFIL,DTIFIL	! Input and output filenames
C
	INTEGER IMDTBYTE
	INTEGER IMDTINT
	INTEGER IMDTLONG
C
	CALL LSL_INIT
	CALL DTI_INIT
C
	RX=32
	RY=32
C
C Decode the command line
C
	OK = DCL_STARTUP('DTI6IIS',.FALSE.,DTI6IIS_CLD,.TRUE.)
C
C Get the name of the input DTI file
C
	IF (OK) THEN
	   OK = DCL_FILE('P1','LSL$DTI:DTI.DTI',ABSENT,.FALSE.,.TRUE.)
	   IF (OK) CALL EXPFLN(DTIFIL,DTILEN)
	END IF
C
C Get the name of the output DTI file
C
	IF (OK) THEN
	   OK = DCL_FILE('P2','LSL$DTI:DTI.DTI',ABSENT,.FALSE.,.TRUE.)
	   IF (OK) CALL EXPFLN(IISFIL,IISLEN)
	END IF
C
C Open the input file
C
	OK = DTI_OPEN(IN_LUN,DTIFIL,DTILEN,.FALSE.,ERROR)
	DTYPE=DATA_TYPE(IN_LUN)
	XSIZE=X_EXTENT(IN_LUN)
	YSIZE=Y_EXTENT(IN_LUN)
C
C Create the output file
C
	OK = DTI_CREATE(OUT_LUN,IISFIL,IISLEN,1,,DTYPE,XSIZE,YSIZE,ERROR) 
C
	DO 110 I=1,(XSIZE+RX-1)/RX	
	XSTART=(I-1)*RX+1
	XLEN=MIN(RX,XSIZE+1-XSTART)
	DO 100 J=1,(YSIZE+RY-1)/RY	
	YSTART=(J-1)*RY+1
	YLEN=MIN(RY,YSIZE+1-YSTART)
C
	IF(DTYPE.EQ.1)THEN
C Read in a rectangle of data, XLEN x YLEN
	   OK = DTI_COPY_BYTE_DATA(IN_LUN,BBUFF,.FALSE.,XSTART,YSTART,
	1	XLEN,YLEN,ERROR)
	   OK = DTI_COPY_BYTE_DATA(OUT_LUN,BBUFF,.TRUE.,XSTART,YSTART,
	1	XLEN,YLEN,ERROR)
C Write out the rectangle to the DTI file
	ELSE IF(DTYPE.EQ.2)THEN
	   OK = DTI_COPY_WORD_DATA(IN_LUN,IBUFF,.FALSE.,XSTART,YSTART,
	1	XLEN,YLEN,ERROR)
	   OK = DTI_COPY_WORD_DATA(OUT_LUN,IBUFF,.TRUE.,XSTART,YSTART,
	1	XLEN,YLEN,ERROR)
	ELSE IF(DTYPE.EQ.3)THEN
	   OK = DTI_COPY_LONG_DATA(IN_LUN,LBUFF,.FALSE.,XSTART,YSTART,
	1	XLEN,YLEN,ERROR)
	   OK = DTI_COPY_LONG_DATA(OUT_LUN,LBUFF,.TRUE.,XSTART,YSTART,
	1	XLEN,YLEN,ERROR)
	ENDIF
C
100	CONTINUE
110	CONTINUE
C
C Close the DTI file
C
	OK = DTI_CLOSE(IN_LUN,.TRUE.,.FALSE.,ERROR)
	OK = DTI_MINMAX_DATA(OUT_LUN,.TRUE.,ERROR)
	OK = DTI_CLOSE(OUT_LUN,.TRUE.,.FALSE.,ERROR)
C
	CALL LSL_EXIT
	CALL EXIT
	END 
