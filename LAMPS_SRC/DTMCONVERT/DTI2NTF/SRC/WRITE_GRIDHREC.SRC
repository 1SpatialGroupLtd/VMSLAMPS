C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1993-07-02 13:24:18.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	INTEGER FUNCTION WRITE_GRIDHREC(NTF_COL)
C
***	MODULE	WRITE_GRIDHREC
***	IDENT	02JL93
C
C Copyright (C) Laser-Scan Ltd, Cambridge, England
C
C Author 						SG 03-Sep-1991
C
CMOD1243 Write Version 2.0 level 5			JB 01-Jul-1993
C
C This will write the GRID record, from the DATA read from the DTI file
C
	IMPLICIT NONE
C
	INCLUDE		'LSL$CMNLSL:LSLLIBMSG.PAR'
	INCLUDE		'LSL$CMNDTI:DTIHDR.CMN'
	INCLUDE		'HERE:LUNS.PAR'
	INCLUDE		'HERE:SECTION.CMN'
	INCLUDE		'HERE:NTFDATA.CMN'
	INCLUDE		'HERE:MAGTAPE.CMN'
C
C Argument
	INTEGER		NTF_COL
C
C Function
	INTEGER		WRITE_STRING
C
C Workspace
	INTEGER		OK
	CHARACTER*80	STRING, STR_BUF
	CHARACTER*80	STRING1,STRING2
	INTEGER		STR_POS
	INTEGER		CORNER
C
	CHARACTER*2	REC_DESCR
	INTEGER		N_COLUMNS
	INTEGER		N_ROWS
	INTEGER		N_PLANES
	REAL		X_COORD(4)
	REAL		Y_COORD(4)		! real world coords of corners
	REAL		Z_COORD(4)
	INTEGER*4	TMP_X, TMP_Y, TMP_Z
	INTEGER		CORNER_WIDTH
C
C------------------------------------------------------------------------------
C
	OK = LSL__NORMAL				!assume success
C
	REC_DESCR = '50'
	CALL EXPAND ('%WS% 00%P0%I4%I4',GRID_ID, X_ORIG/1000, Y_ORIG/1000)
C
	N_COLUMNS = XMAX
	N_ROWS    = YMAX
	N_PLANES  = 1					!DTI is monoplanar	
C
C------------------------------------------------------------------------------
C	the corner points for the range. The first is the SW point
C ........................................................................
C	SW grid_point
C
	X_COORD(1) = X_ORIG*XY_MULT
	Y_COORD(1) = Y_ORIG*XY_MULT
	Z_COORD(1) = 0.0				!undefined
C
C ........................................................................
C	SE
C
	X_COORD(2) = XY_MULT * (X_ORIG + (FLOAT(XMAX-1)*X_GRID(DTI_LUN)))
	Y_COORD(2) = Y_COORD(1)
	Z_COORD(2) = 0.0				!undefined
C
C ........................................................................
C	NE
C
	X_COORD(3) = X_COORD(2)
	Y_COORD(3) = XY_MULT * (Y_ORIG + (FLOAT(YMAX-1)*Y_GRID(DTI_LUN)))
	Z_COORD(3) = 0.0				!undefined
C
C ........................................................................
C	NW
C
	X_COORD(4) = X_COORD(1)
	Y_COORD(4) = Y_COORD(3)
	Z_COORD(4) = 0.0				!undefined
C
C------------------------------------------------------------------------------
C put details into the GRIDHREC
C
	STRING = ' '					!initialise

	IF (LEVEL.EQ.5) THEN
	   CALL EXPAND('%WS% %S2%S10%P0%I4%I4%I4', STRING,
     &			REC_DESCR, GRID_ID, N_COLUMNS, N_ROWS, N_PLANES)
C
	ELSE
C
	   CALL EXPAND('%WS% %S2%S10%I4%I4%I4', STRING,
     &			REC_DESCR, GRID_ID, N_COLUMNS, N_ROWS, N_PLANES)
	ENDIF
C
	STR_POS = 25
C
C------------------------------------------------------------------------------
C Note that the OS type NTF version 1.0 level 4 doesn't have any Z_COORDS in
C the grid corner coordinates. This is not a general purpose thing.
C
	CORNER_WIDTH = 26
	IF (LEVEL.EQ.4) CORNER_WIDTH = 20
C
C------------------------------------------------------------------------------
C for each of the GRID corners, append details in string
C
	DO 100 CORNER=1,4
C	  .....................................................................
C	  check there is sufficient space in the record
C
          IF ((STR_POS+CORNER_WIDTH).GE.80) THEN
C
	    IF (LEVEL.EQ.5) THEN
	       STRING(STR_POS:STR_POS) = '1'		!append CONT_MARK
	       STR_POS = STR_POS + 1
	       STRING(STR_POS:STR_POS) = EOR_MARKER	!append EOR
C
	       STRING1 = '00'//STRING(25:78)
C
	    ELSE
C
	       STRING(STR_POS:STR_POS) = '1'		!append CONT_MARK
	    ENDIF
C
	    OK = WRITE_STRING(STRING,STR_POS)		!output the string
	    IF (.NOT.OK) GOTO 999
C
	    STRING = ' '				!initialise string
	    STR_POS = 3					!initialise counter
	    CALL EXPAND('%WS% 00',STRING)		!continuation record
	  ENDIF
C
C	  .....................................................................
C
	  TMP_X = NINT(X_COORD(CORNER))
	  TMP_Y = NINT(Y_COORD(CORNER))
	  TMP_Z = NINT(Z_COORD(CORNER))
C
	  IF (LEVEL.EQ.5) THEN
	    CALL EXPAND('%WS% %P0%I10%I10%I6', STR_BUF, TMP_X, TMP_Y, TMP_Z)
C
	  ELSEIF (LEVEL.EQ.4) THEN
	    CALL EXPAND('%WS% %I10%I10', STR_BUF, TMP_X, TMP_Y)
C
	  ELSE
	    CALL EXPAND('%WS% %I10%I10%I6', STR_BUF, TMP_X, TMP_Y, TMP_Z)
	  ENDIF
C
	  STRING(STR_POS:STR_POS+CORNER_WIDTH-1) = STR_BUF(1:CORNER_WIDTH)
	  STR_POS = STR_POS + CORNER_WIDTH
C
100	CONTINUE
C
C-----------------------------------------------------------------------------
C mop up any residual records
C
	IF (STR_POS.GT.3) THEN
	  STRING(STR_POS:STR_POS) = '0'
C
	  IF (LEVEL.EQ.5) THEN
	     STR_POS = STR_POS + 1
	     STRING(STR_POS:STR_POS) = EOR_MARKER	!append EOR
C
	     STRING2 = STRING(1:56)
	     STRING(55:55) = '1'
	  ENDIF
C
	  OK = WRITE_STRING(STRING,STR_POS)
	  IF (.NOT.OK) GOTO 999
	ENDIF
C
C and output the final lines
C
	IF (LEVEL.EQ.5) THEN
	  OK = WRITE_STRING(STRING1(1:56), 56)
	  IF (.NOT.OK) GOTO 999
C
	  STRING(55:55) = '0'
	  OK = WRITE_STRING(STRING2(1:56), 56)
	  IF (.NOT.OK) GOTO 999
	ENDIF
C
C##############################################################################
C
999	WRITE_GRIDHREC = OK
C
	RETURN
	END
C
