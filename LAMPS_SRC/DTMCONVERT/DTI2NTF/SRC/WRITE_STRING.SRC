	INTEGER FUNCTION WRITE_STRING( IN_STR, IN_LEN)
C
***     MODULE WRITE_STRING
***     IDENT  06JL93
C
C	Copyright Laser-Scan Ltd, Cambridge, England
C
C Author						SG 27-Aug-1991
C
CMOD	 Made a function to return any write error, or end of tape 
C							JB 14-Apr-1992
CMOD1243 Clear buffer before writing to it		JB 06-Jul-1993
C
C Write out the specified string to the output file.
C Ripped from I2NTF:WSTR
C
C The input string for fixed length records (Version 1.0 level 0 or 4)
C needs the continuation marker moved to pos'n 80, and the intermediate
C fields left blank, the EOR marker not being necessary for fixed length
C records.
C
C For variable length records (Version 2.0 level 5) the string is left as
C it is and output, with the EOR % already provided in the input string.
C
C Variable length (Version 1.1) are not written here.
C
CMOD	Function copies string into a 80 char long string before
C	outputting. This caters for strings whose original lengths
C	were less than 80 characters. A copy of the string length
C	is also made since there is no guarantee that we are not
C	passed a constant				SG  2-Sep-1991
C
	IMPLICIT NONE
C
C Arguments:
	CHARACTER*80	IN_STR			!  String to be output
	INTEGER		IN_LEN			!  Of IN_STR
C
C Common:
	INCLUDE 'LSL$CMNLSL:LSLLIBMSG.PAR'
	INCLUDE 'LSL$CMNLSL:MTOVCM.CMN'
	INCLUDE 'HERE:COMMANDS.CMN'
	INCLUDE	'HERE:LUNS.PAR'
	INCLUDE 'HERE:MAGTAPE.CMN'
C
C Initialise the record number
	DATA		BUFFER_PTR /1/	! Point to beginning of buffer
C
C Function:
	INTEGER		MTOWRB		!  Write buffer to tape
	INTEGER		FLWSTR		!  Write buffer to disc
C
	CHARACTER*80	STR_OUT
	INTEGER		STR_LEN
C
C workspace
	INTEGER		OK,IERR		! result from function call
C
C#############################################################################
C
	WRITE_STRING = LSL__NORMAL			! assume success
C
	STR_OUT = ' '					! initialise string
	STR_LEN = IN_LEN				! copy length
	IF (STR_LEN.GT.80) STR_LEN = 80			! truncate excess chars
	STR_OUT(1:STR_LEN) =  IN_STR(1:STR_LEN)		! copy string
C
C	.......................................................................
C	ensure the output string is of the right length, and has an EOR marker
C
	IF (FIXED .AND. STR_LEN.LT.80) THEN		! fix the length
	   STR_OUT(80:80) = STR_OUT(STR_LEN:STR_LEN)
	   STR_OUT( STR_LEN:STR_LEN) = ' '
	   STR_LEN = 80
	ENDIF
C
C----------------------------------------------------------------------------
C write the string out to disk or magtape
C
C	.....................................................................
C	If tape output selected then write to tape
C
	IF (IS_MAGTAPE) THEN
	   IF ((BUFFER_PTR+STR_LEN-1) .GT. BLOCKSIZE) THEN 	! Buffer full
	      OK = MTOWRB(%REF(BUFFER), BLOCKSIZE)
	      IF (.NOT.OK) THEN
		WRITE_STRING = OK
		CALL LSL_PUTMSG(OK)
		IF (OK.EQ.LSL__SYSERR) CALL LSL_ADDMSG(MTOERR)
		GOTO 999
	      ENDIF
C
C Clear the remaining block for next output
	      CALL VIOCLR (%REF(BUFFER),2000,0)
C
	      BUFFER_PTR = 1
	   ENDIF
C
	   BUFFER(BUFFER_PTR:(BUFFER_PTR+STR_LEN-1)) = STR_OUT(1:STR_LEN)
	   BUFFER_PTR = BUFFER_PTR + STR_LEN			! Update pointer
C
C	.....................................................................
C	Output to disk file
C
	ELSE
	   CALL FLWSEL(NTF_LUN)
	   OK = FLWSTR(STR_OUT(1:STR_LEN),IERR)
	   IF (.NOT.OK) THEN
	      WRITE_STRING = OK
	      CALL LSL_PUTMSG(OK)
	      IF (OK.EQ.LSL__SYSWRITE) CALL LSL_ADDMSG(IERR)
	      GOTO 999
	   ENDIF
C
	ENDIF
C
C----------------------------------------------------------------------------
C If logfile requested and this is a comment then write there as well
C
	IF ( OUTPUT .AND. (STR_OUT(1:2).EQ.'90') ) THEN
	   CALL FLWSEL(LOG_LUN)
	   CALL FLWSTR('// '//STR_OUT(3:STR_LEN - 2 ) )
	ENDIF
C
C#############################################################################
C
999	RETURN
	END
C
