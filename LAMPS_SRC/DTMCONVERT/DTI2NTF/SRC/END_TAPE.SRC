C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1992-04-14 18:48:34.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	INTEGER FUNCTION END_TAPE
C
***     MODULE END_TAPE
***     IDENT  14AP92
C
C     Copyright Laser-Scan Ltd, Cambridge, England
C
C Author					TJI	30-Sep-1987
C Modified for variable length records		IMcL	28-Jul-1989
C
C Ripped unmodified from i2ntf			SG	02-Sep-1991
C Made a function				JB	14-Apr-1992
C
C Flush the last block of NTF data to the magtape, if necessary,
C and write appropriate finishing tapemarks
C
	IMPLICIT NONE
C
C Common:
C
	INCLUDE 'LSL$CMNLSL:LSLLIBMSG.PAR'
	INCLUDE 'LSL$CMNLSL:MTOVCM.CMN'
	INCLUDE	'HERE:MAGTAPE.CMN'
C
C Workspace:
C
	INTEGER		I		! For a DO loop
	INTEGER		OK
C
C Function
	INTEGER		MTOWRB
C
C .........................................................................
C
	END_TAPE = LSL__NORMAL
C
C If tape output is selected, then fill up this final block, and output it
C to tape - beware that it is always possible that the last record output
C actually completed a block, in which case we have nothing to do
C
	IF ( BUFFER_PTR.NE.1 ) THEN	! if we have any data in the block
C
	   DO 100 I = BUFFER_PTR, BLOCKSIZE
	      BUFFER(I:I) = ' '
100	   CONTINUE
C
	   OK = MTOWRB(%REF(BUFFER),BLOCKSIZE)
	   IF (OK.NE.LSL__NORMAL) THEN
	      END_TAPE = OK
	      CALL LSL_PUTMSG(OK)
	      IF (OK.EQ.LSL__SYSERR) CALL LSL_ADDMSG (MTOERR)
	      GOTO 9999
	   ENDIF
C
	ENDIF
C
C Finish off with two tapemarks and then rewind the tape
C
	CALL MTOEOF()
	CALL MTOEOF()
	CALL MTORWD()
C
9999	RETURN
	END
C
