C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1988-06-08 19:20:22.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	INTEGER*4 FUNCTION READ_IFF()
C
***	IDENT	08JN88
***	MODULE	READ_IFF
C
C	Copyright LaserScan Laboratories Ltd., Cambridge, England
C
C	Author: D R Catlow 
C	Reads the IFF file to find the Map Header and layer 0
C	containing the ACC regions.
C
	IMPLICIT NONE
C
***	PARAMETER/HERE:DTEDIFFMSG/
C
***	COMMON/LSL$CMNIFF:MHMCE/		!MCE Map Header
C
C	Locals
	INTEGER*2	LAYER_NUMBER		!layer number
	INTEGER*2	IECODE			!entry in hand code
	INTEGER*2	IELEN			!length of entry in hand
C
	LOGICAL		HAD_LAYZERO		!found layer 0
	LOGICAL		HAD_MH			!found MH entry
C
C	Functions
	INTEGER*4	WRITE_DSI		!to output DSI record
	INTEGER*4	WRITE_ACC		!to output ACC record
C
C-------------------------------------------------------------------------
C
	HAD_MH	      = .FALSE.
	HAD_LAYZERO = .FALSE.
C
C-------------------------------------------------------------------------
C	Get the next IFF entry
100	CALL IFFNXT(IECODE,IELEN)
C
	IF(IELEN.EQ.-1)THEN
	  CALL LSL_PUTMSG(DTEDIFF__UNEXPEOF)
	  READ_IFF=DTEDIFF__BADTRANSFER
	  GOTO 999
	ENDIF
C
	IF(IELEN.LT.0)THEN
	  CALL LSL_PUTMSG(DTEDIFF__IFFREAD)
	  READ_IFF=DTEDIFF__BADTRANSFER
	  GOTO 999
	ENDIF
C
	IF(IECODE.EQ.'MH')GOTO 200
	IF(IECODE.EQ.'NO')GOTO 300
	IF(IECODE.EQ.'EM')GOTO 400
	IF(IECODE.EQ.'EJ')GOTO 400
C
C	Not interested in anything else
	GOTO 100
C
C--------------------------------------------------------------------------
C	Map Header Entry
C	Check the length and the Map Header type
200	IF(IELEN.NE.MHLEN)THEN
	  CALL LSL_PUTMSG(DTEDIFF__BADMHSIZE)
	  READ_IFF=DTEDIFF__BADTRANSFER
	  GOTO 999
	ENDIF
C
	CALL EIHRI(MHARR,IELEN,1)
C
	IF(MHDESC(2).NE.1)THEN
	  CALL LSL_PUTMSG(DTEDIFF__BADMHTYPE)
	  READ_IFF=DTEDIFF__BADTRANSFER
	  GOTO 999
	ENDIF
C
	HAD_MH=.TRUE.
	GOTO 100
C
C---------------------------------------------------------------------------
C	New Layer entry
C	We are only interested in Layer 0
300	CALL EIHRI(LAYER_NUMBER,1,1)
	IF(LAYER_NUMBER.NE.0)GOTO 100
C
	IF(HAD_LAYZERO)THEN
	  CALL LSL_PUTMSG(DTEDIFF__DUPLAYZERO)
	  READ_IFF=DTEDIFF__BADTRANSFER
	  GOTO 999
	ENDIF
C
	HAD_LAYZERO=.TRUE.
C
C	Check we've had a MH
	IF(.NOT.HAD_MH)THEN
	  CALL LSL_PUTMSG(DTEDIFF__NOMH)
	  READ_IFF=DTEDIFF__BADTRANSFER
	  GOTO 999
	ENDIF
C
C	Do the data transfer
	READ_IFF=WRITE_DSI()
	IF(.NOT.READ_IFF)GOTO 999
C
	IF(HAD_LAYZERO)THEN
	  READ_IFF=WRITE_ACC(.TRUE.)
	  IF(.NOT.READ_IFF)GOTO 999
	ELSE
	  READ_IFF=WRITE_ACC(.FALSE.)
	  IF(.NOT.READ_IFF)GOTO 999
	ENDIF
C
	READ_IFF=DTEDIFF__NORMAL
	GOTO 999
C
C-------------------------------------------------------------------------
C	EM entry
C	Check that we've had a MH and a layer 0
400	IF(.NOT.HAD_MH)THEN
	  CALL LSL_PUTMSG(DTEDIFF__NOMH)
	  READ_IFF=DTEDIFF__BADTRANSFER
	  GOTO 999
	ENDIF
C
	IF(.NOT.HAD_LAYZERO)THEN
	  CALL LSL_PUTMSG(DTEDIFF__NOLAYZERO)
	  READ_IFF=DTEDIFF__BADTRANSFER
	  GOTO 999
	ENDIF
C
	READ_IFF=DTEDIFF__NORMAL
C
C--------------------------------------------------------------------------
999	RETURN
C
	END
