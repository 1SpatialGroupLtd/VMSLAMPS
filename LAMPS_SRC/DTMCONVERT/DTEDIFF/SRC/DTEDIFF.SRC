C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1995-11-06 11:41:34.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	PROGRAM	DTEDIFF
C
***	IDENT	06NO95
***	MODULE	DTEDIFF
C
C	Copyright Laser-Scan Ltd., Cambridge, England
C
C 	Author D R Catlow  04-June-1988
C 	Based on MCE utility written by CC Brunt, 31 October 1983
C
C 	Program to convert the DSI and ACC information in a DTED DTI
C 	file (TED4 type from Change 3/4 data) to an IFF file,
C 	and vice-versa.
C
C	This version uses DCL command line decoding, LSLLIB and DTILIB.
C
	IMPLICIT NONE
C
***	PARAMETER/HERE:DTEDIFFMSG/
C
***	COMMON/HERE:PARAMS/
***	COMMON/HERE:FILES/
C
	INTEGER*4	LSL_STATUS
C
C functions called
	INTEGER*4	GET_COMMANDS	! parses the command line
	INTEGER*4	OPEN_DTI_FILE	! open the DTI file
	INTEGER*4	OPEN_IFF_FILE	! open the IFF file
	INTEGER*4	READ_IFF	! process the IFF file
	INTEGER*4	READ_ACC	! process the ACC record
	INTEGER*4	READ_DSI	! process the DSI recrod
C
C---------------------------------------------------------------------
C Initialise Libraries
	CALL LSL_INIT
	CALL DTI_INIT
	CALL DLMS_INIT
C
C---------------------------------------------------------------------
C Decode the command line
	LSL_STATUS = GET_COMMANDS()
	IF (.NOT.LSL_STATUS) GOTO 100
C
C---------------------------------------------------------------------
C Inform the user what we are about to do
C
	IF(HAD_LOG)THEN
	  IF(HAD_MERGE)THEN
	    CALL WRITEF( 'Merging IFF file %S',  IFFILE (1:IFFILE_LENGTH))
	    CALL WRITEF( '   into DTI file %S',  DTIFILE(1:DTIFILE_LENGTH))
	    CALL WRITEF(' ')
C
	  ELSE
	    CALL WRITEF( 'Creating IFF file %S', IFFILE (1:IFFILE_LENGTH))
	    CALL WRITEF( '    from DTI file %S', DTIFILE(1:DTIFILE_LENGTH))
	    CALL WRITEF(' ')
	  ENDIF
	ENDIF
C
C----------------------------------------------------------------------
C Open the DTI file
	LSL_STATUS = OPEN_DTI_FILE()
	IF(.NOT.LSL_STATUS)GOTO 100
C
C----------------------------------------------------------------------
C Open or create the IFF file
	LSL_STATUS = OPEN_IFF_FILE()
	IF(.NOT.LSL_STATUS)GOTO 100
C
C----------------------------------------------------------------------
C Do the data transfer
C
	IF(HAD_MERGE)THEN
	  LSL_STATUS=READ_IFF()		! process the IFF file
	  IF(.NOT.LSL_STATUS)THEN
            CALL LSL_PUTMSG(DTEDIFF__BADTRANSFER)
            GOTO 50
	  ENDIF
C
	ELSE
	  LSL_STATUS=READ_DSI()
	  IF(.NOT.LSL_STATUS)THEN
            CALL LSL_PUTMSG(DTEDIFF__BADTRANSFER) 
            GOTO 50
	  ENDIF
C
	  LSL_STATUS=READ_ACC()
	  IF(.NOT.LSL_STATUS)THEN
            CALL LSL_PUTMSG(DTEDIFF__BADTRANSFER) 
            GOTO 50
	  ENDIF
	ENDIF
C
C---------------------------------------------------------------------
C Close the IFF file
50	CALL CLOSE_IFF_FILE
C
C---------------------------------------------------------------------
C Close the DTI file
	CALL CLOSE_DTI_FILE
C
C---------------------------------------------------------------------
C
	IF(LSL_STATUS)THEN
          LSL_STATUS=DTEDIFF__NORMAL
	  CALL LSL_PUTMSG(LSL_STATUS)
	ENDIF
C
100	CALL LSL_EXIT(LSL_STATUS)
	END
C
