$!
$! * This file is part of the LAMPS distribution, released as a software
$! * preservation project to archive digital history for future historians.
$! * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
$! *
$! * Timestamp of this file for the 2002 release was: 1997-06-11 13:07:00.000000000 +0100
$! *
$! * This program is free software: you can redistribute it and/or modify
$! * it under the terms of the GNU General Public License as published by
$! * the Free Software Foundation, version 3.
$! *
$! * This program is distributed in the hope that it will be useful, but
$! * WITHOUT ANY WARRANTY; without even the implied warranty of
$! * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
$! * General Public License for more details.
$! *
$! * You should have received a copy of the GNU General Public License
$! * along with this program. If not, see http://www.gnu.org/licenses/.
$!
$! MLITES2.COM
$!
$! Command file for creating LITES2
$! ================================
$!
$! on error (presumably normally control-Y or -C) we skip to asking
$! about linking things
$!
$	on ERROR then goto inqlnk
$!
$	ws == "write sys$output"
$!
$! now set up the truths we need to know...
$!
$	@EXE:LITES2TR			! obey command file of truths
$!
$	ws "** Creating ",WHATFOR
$!
$! set up MAKE 
$!
$	make 'P1' 'P2' 'P3' 'P4' 'P5' 'P6'
$	MAKI4	
$!
$! define our environment
$!
$	ROOT   = f$trnlnm("LSL$LITES2_ROOT")
$	OBJDIR = f$trnlnm("OBJ")
$	EXEDIR = f$trnlnm("EXE")
$	SRCDIR = f$trnlnm("SRC")
$	MARDIR = f$trnlnm("MAR")
$	CMNDIR = f$trnlnm("CMN")
$	COMDIR = f$trnlnm("COM")
$	GENDIR = f$trnlnm("GEN")
$	DEPDIR = f$trnlnm("DEP")
$!
$! start off out batch command file
$!
$	makfil 'EXEDIR'LITES2BAT.COM		! who it is
$	wc "$	set def ",OBJDIR		! where it should work
$	wc "$	assign/tran=(c,t) ''ROOT' LSL$LITES2_ROOT" ! define its environment
$	wc "$	assign ''OBJDIR' OBJ"
$	wc "$	assign ''EXEDIR' EXE"
$	wc "$	assign ''SRCDIR' SRC"
$	wc "$	assign ''MARDIR' MAR"
$	wc "$	assign ''CMNDIR' CMN"
$	wc "$	assign ''COMDIR' COM"
$	wc "$	assign ''GENDIR' GEN"
$	wc "$	set noon"
$!
$! did we have any arguments? if we did, then we know we're compiling,
$! otherwise we must check
$!
$	if P1 .nes. "" then goto gotp
$	inquire COMPIL "Compile"
$	if .not. COMPIL then goto lkonly
$!
$! how do we wish to compile it?
$! 
$gotp:	FSW1 = ""
$	inquire DEBUG "Compile with debug, noopt, keep .FORs "
$	if .not. DEBUG then goto nodbg
$	   makdebug
$	   NOOP=1
$	   CHKB=1
$	   KEEP=1
$!!!!!	   inquire NOOP "No optimisation "
$	   if NOOP then FSW1="/NOOPT"
$!
$!!!!!	   inquire CHKB "Check bounds and overflow "
$	   if CHKB then FSW1 = FSW1+"/CHECK=(BOUNDS,OVERFLOW)"
$	   if FSW1 .nes. "" then makfsw 'FSW1'
$
$!!!!!	   inquire KEEP "Keep FORtran sources with comments "
$	   if KEEP then makfkp		! keep ADC'd .FOR with comments
$	   makadcsw			! without comments	
$!
$! and join up with the main flow again...
$!
$nodbg:	makinq CHOVR "Everything"
$	IF .NOT.CHOVR THEN GOTO DOIT
$	MAKALL
$	wc "$	LIBR/CREATE LITES2"
$	wc "$	PURGE/KEEP=2 LITES2.OLB"
$	wc "$	DELETE *.FOR;*"
$!
$! let's start doing things
$!
$DOIT:	IF DEBUG THEN MAKDEBUG
$	MAKASK MOAN "Moan"
$	IF NO THEN GOTO NOMOAN
$	wc "$	on ERROR then EXIT"	! errors in MOAN are fatal
$	wc "$	RUN GEN:MOANGEN"
$	wc "MOANMESS"
$	wc "$	PURGE/NOLOG MAR:MOANMESS.MAR,CMN:MOANMESS.INC"
$	MAKC M MOAN MOAN
$	MAKC AM MOAN MOANMESS
$	MAKLIB LITES2 MOAN
$	wc "$	set NOON"		! continue with all errors
$!
$NOMOAN:MAKASK COMGEN "New primary command table"
$	IF NO THEN GOTO NOCOMGEN
$	wc "$	RUN GEN:COMGEN"
$	wc "PRIME"
$	wc "$	PURGE/NOLOG src:docmd.src,cmn:prime.par"
$	MAKC AF DOCMD DOCMD,CMTCMD
$	MAKLIB LITES2 DOCMD
$	MAKC M PRIME PRIME
$	MAKLIB LITES2 PRIME
$!
$NOCOMGEN:MAKASK SECOND "Secondary command table"
$	IF NO THEN GOTO NOSECOND
$	MAKC M SECOND SECOND
$	MAKLIB LITES2 SECOND
$!
$NOSECOND:MAKASK MAIN "Main"
$	IF NO THEN GOTO NOMAIN
$	MAKDEBUG 0			! never DEBUG with MAIN
$	MAKC AF MAIN MAIN,UPDATE
$	MAKLIB LITES2 MAIN
$	IF DEBUG THEN MAKDEBUG
$!
$NOMAIN:MAKASK BLKDAT "Block data"
$	IF NO THEN GOTO NOBLKDAT
$	wc "$	on ERROR then EXIT"	! errors in BLKDAT are fatal
$	MAKDEBUG			! force DEBUG for BLKDAT
$	MAKC AF BLKDAT BLKDAT
$	MAKLIB LITES2 BLKDAT
$	MAKDEBUG 0
$	wc "$	set NOON"		! continue with all errors
$!
$NOBLKDAT:IF DEBUG THEN MAKDEBUG
$	MAKASK COMMAND "Command interface"
$	IF NO THEN GOTO NOCOMMAND
$	MAKC A COMMANDA NXTCMD,GETLIN,NEWLIN,COMLIN
$	MAKC AP COMMANDA CLRCMD,RESET,CONMSG,ENDLIN
$	MAKC AP COMMANDA CLRRSP,ERRNUMB,ENCRYPT
$	MAKC AP COMMANDA GETCMD,INTCMD,PROCMD,FINCMD
$	MAKC AP COMMANDA PRIFLG,SECFLG,SEPFLG,CHKSTA
$	MAKC AP COMMANDA EXTTYP,ERRCMD,FINFIL,FINRST
$	MAKC AP COMMANDA CHKPRV,CHKFUL,CHKSAM,CHKTRM
$	MAKC APF COMMANDA ECHCMD,GET_COMMAND,INTTERM
$	MAKC AM COMMANDA ESCSEQ
$	MAKLIB LITES2 COMMANDA
$	MAKC A COMMANDB ASTYPE,SETEXT,STAFST
$	MAKC AP COMMANDB STANXT,SKIP,SPECH,BOTFRM
$	MAKC AP COMMANDB CLRSTK,PSHSTK,POPSTK,EMPSTK
$	MAKC AP COMMANDB BOTSTK,FRASTK,UWDSTK,INIOUT
$	MAKC AP COMMANDB JOUCMD,OPNJOU,INTACT
$	MAKC AP COMMANDB PROFIL,ADDFIL,SUBFIL,CLRFIL
$	MAKC AP COMMANDB OPNFIL,CLOFIL,FRMFIL,SETFIL
$	MAKC AP COMMANDB SETWRK,SETTXT,GETOUT,PROMPT
$	MAKC AP COMMANDB RSPINP,TIDY,SINSTR,CPYSTR
$	MAKC APF COMMANDB SETSTA,MSGCMD,LITES2_SETBUF
$	MAKLIB LITES2 COMMANDB
$!
$NOCOMMAND:MAKASK VARIABLES "Variable handling"
$	IF NO THEN GOTO NOVARIABLES
$	MAKC A VARIAB ADDVAR,ERREXP,EVAL,FINVAR,SETVAR
$	MAKC AP VARIAB EXPVAR,SHVAR,SUBVAR,VALVAR
$	MAKC AP VARIAB PRTVAR,FINSTR,PVALUE,GET_GROUPS
$	MAKC AP VARIAB INIVAR,GET_PUT_VAR_ARRAY
$	MAKC AP VARIAB GET_MAP_SHEET,GET_SHEET_OSGB
$	MAKC AP VARIAB GET_MAP_NUMBER,CHKDUPLCMD
$	MAKC APF VARIAB IMAGEVALUE,IMAGEPIXEL
$	MAKC AM VARIAB SYSVAR
$	MAKC AM VARIAB FUNC
$	MAKLIB LITES2 VARIAB
$!
$NOVARIABLES:MAKASK MACRO "Macro handling"
$	IF NO THEN GOTO NOMACRO
$	MAKC A MACRO INIMEN,STORE,STOCMD,GETMAC
$	MAKC AP MACRO FINMAC,MACNUM,ADDMAC,CHKCHS
$	MAKC AP MACRO ERRDEF,ERRMAC,MACSTR,INIMAC
$	MAKC AP MACRO MACEXE,MACINT,ALPHA,STORE_STRING
$	MAKC APF MACRO GETLAB,LOOKUP_LAB
$	MAKLIB LITES2 MACRO
$!
$NOMACRO:MAKASK DO "DO routines"
$	IF NO THEN GOTO NODO
$	MAKASK DOINIT "*DO Initialisation and options"
$	IF NO THEN GOTO NODOINIT
$	MAKC A DOINIT DOMAPS,DOIFF,DOREAD,DOINSI
$	MAKC AP DOINIT DOFRT,DOSRI,DOTRI,DOFIDU
$	MAKC AP DOINIT FIDLAY,DOSORT,DOPRIV,CHK_SET_PRIV
$	MAKC AP DOINIT PRIV_COMMAND,PRIV_ATTR,DORANG
$	MAKC AP DOINIT DOMENU,DOPUCK,DOTRAC,DOINTE
$	MAKC AP DOINIT DODESC,STATUS,BLINE,CHKPRIPOS
$	MAKC AP DOINIT DOSCAL,DOSETU,DOSCRO,DOSECT
$	MAKC APF DOINIT DOENAB,DODISA,DOTOGG,TOGGLE
$	MAKLIB LITES2 DOINIT
$!
$NODOINIT:MAKASK DOGEN "*DO General commands"
$	IF NO THEN GOTO NODOGEN
$	MAKC A   DOGEN DOPOSI,DOABAN,DOEND,DOHELP,DOSHEE
$	MAKC AP  DOGEN DOABSO,DOLATL,ASKTABLE,ASKIDENT
$	MAKC AP  DOGEN ASKSTATUS,RDNAME,CONVCOL
$	MAKC AP  DOGEN ASKSTRING,REPLACE_ESCAPE,ASKRGB
$	MAKC AP  DOGEN TX_SZE_FRM_ATTBTS,ASKLEGENDSIZE
$	MAKC AP  DOGEN ASKPOSITION
$	MAKC APF DOGEN DOSPAW,DOUNIT,TSTUNT,DOASK,DOGEOG
$	MAKLIB LITES2 DOGEN
$!
$NODOGEN:MAKASK DOIDENT "*DO Identification of features"
$	IF NO THEN GOTO NODOIDENT
$	MAKC AF DOIDENT DOFIND,DORECO,DOSEAR,DOLOCA
$	MAKLIB LITES2 DOIDENT
$!
$NODOIDENT:MAKASK DONORM "*DO Normal constructions"
$	IF NO THEN GOTO NODONORM
$	MAKC A DONORM DOSTAR,DOREPE,DOCURV,DOINVI
$	MAKC APF DONORM DOTEXT,DODEPO,DOTAKE
$	MAKLIB LITES2 DONORM
$!
$NODONORM:MAKASK DOSPEC "*DO Special constructions"
$	IF NO THEN GOTO NODOSPEC
$	MAKC A DOSPEC DOOFFS,OFFALL,OFFSET,OFFSEG
$	MAKC AP DOSPEC DOCIRC,DOARC,DOINCL,NDINCL
$	MAKC AP DOSPEC DORECT,GENRECT,STRECT
$	MAKC AP DOSPEC DOORIE,NDORIE,ORTHOG,TRANFT
$	MAKC AP DOSPEC TRANLN,OFFTXT,DOTRAN
$	MAKC AP DOSPEC TRANSF,TRNSTXT,TRNSFRM
$	MAKC AP DOSPEC DOFILT,FILTF,DOFEAT
$	MAKC APF DOSPEC DOPOLY,DOPOLA,DOTOLE,DOPTOL
$	MAKLIB LITES2 DOSPEC
$!
$NODOSPEC:MAKASK DOSPEC "*DO Squaring"
$	IF NO THEN GOTO NODOSQUA
$	MAKC A DOSQR DOSQUA,NDSQUA,STRTSQ
$	MAKC AP DOSQR D1460,D1461,D1462,D1463,D1464
$	MAKC AP DOSQR D1465,D1466,D1467,D1468,D1469
$	MAKC AP DOSQR D1469A,D1469B,D14COF,D14LGT
$	MAKC AP DOSQR CHK_PRIV_LIST,D14CLO,D14PRL
$	MAKC AP DOSQR D14SBX
$	MAKC APF DOSQR D14MET,D14SFL,D14SQU,ANGSQU
$	MAKLIB LITES2 DOSQR
$!
$NODOSQUA:MAKASK DOCONS "*DO Construction constraints"
$	IF NO THEN GOTO NODOCONS
$	MAKC AF DOCONS DOFORC,DOCLOS,DOBASE
$	MAKLIB LITES2 DOCONS
$!
$NODOCONS:MAKASK DOCURS "*DO Constrained cursor movement on features"
$	IF NO THEN GOTO NODOCURS
$	MAKC A DOCURS DOON,DOFREE,DOPOIN,DOFIRS
$	MAKC AP DOCURS DOLAST,DOPREV,DONEXT,DOMIDD
$	MAKC AP DOCURS DODIST
$	MAKC APF DOCURS DOFRAC,CHKFOL,CHKARC,CHKLIN
$	MAKLIB LITES2 DOCURS
$!
 $NODOCURS:MAKASK DOEDIT "*DO Editing existing features"
$	IF NO THEN GOTO NODOEDIT
$	MAKC A DOEDIT DOEDIT,DOINSE,DOREMO,DOLOOP
$	MAKC AP DOEDIT DOEXTE,DOBRID,DOCHAN,DOREVE
$	MAKC APF DOEDIT DOSPLI,DODELE,DOANCI,EDITCP
$	MAKLIB LITES2 DOEDIT
$!
$NODOEDIT:MAKASK DOCOPY "*DO Copying features"
$	IF NO THEN GOTO NODOCOPY
$	MAKC AF DOCOPY DOCOPY,DOMOVE,DOMODI,GETON
$	MAKLIB LITES2 DOCOPY
$!
$NODOCOPY:MAKASK DOALIGN "*DO Aligning and merging features"
$	IF NO THEN GOTO NODOALIGN
$	MAKC A DOALIGN DOJOIN,DOMEND,DOTIE,DOPROP
$	MAKC APF DOALIGN DOMATC,JOITIE,GETACS,EQACS,MATCHAC
$	MAKLIB LITES2 DOALIGN
$!
$NODOALIGN:MAKASK DOMOD "*DO Modification of text and symbols"
$	IF NO THEN GOTO NODOMOD
$	MAKC A DOMODA DOREPL,DOSUBS,DOSMAL,DOWHOL
$	MAKC AP DOMODA DOLARG,DOROTA,DOMARG,DOTHIS
$	MAKC AP DOMODA DOALIG,DOSTRE,DOCOLL,DOBEND,DOPARA
$	MAKC AP DOMODA PARALINE,PARAJUST,PARAFILL,PARANORM
$	MAKC AP DOMODA NEWPARALINE,TRIMSTR,COUNT_SUBTEXT
$	MAKC AP DOMODA JOITXT,COUNT_CHAR,NEXT_CHAR,DOTURN
$	MAKC APF DOMODA STSYTX,NDSTCN,MODCHK,COIDLE,NDBEND
$	MAKLIB LITES2 DOMODA
$	MAKC A DOMODB ADDCTX,BOXCTX,COPYCTXD,DELCTX,FREE1CTX
$	MAKC AP DOMODB FREECTX,GETCTX,INSRTCTX,MOVCTX,NEXTCTX
$	MAKC AP DOMODB PUTCTX,THISCTX,TYPCTX,VERFCTX,LOADCOI
$	MAKC AP DOMODB LOADFO,ADDPACKCTXD,DELPACKCTXD
$	MAKC AP DOMODB SUBSAC,SUBSTX,MARGIN,TXTREG,CHKTXT
$	MAKC APF DOMODB SYMREG,CHKSYM,COLLSTR,PROCESS_CTRL
$	MAKLIB LITES2 DOMODB
$!
$NODOMOD:MAKASK DOANCIL "*DO Ancillary Code manipulation"
$	IF NO THEN GOTO NODOANCIL
$	MAKC AF DOANCIL DOADD,DOALTE,ACDATE
$	MAKLIB LITES2 DOANCIL
$!
$NODOANCIL:MAKASK DOWIN "*DO Windowing, Redrawing and Labelling"
$	IF NO THEN GOTO NODOWIN
$	MAKC A DOWIN DOWIND,DODRAW,DOSUPP,DOZOOM,DRWVECTOR
$	MAKC AP DOWIN DRWREG,DRWLEG,LEGEND_BLOCK,LEGEND
$	MAKC AP DOWIN DOLABE,DOANNO,NDWIND,DRWCURSPOS
$	MAKC AP DOWIN DRWIFF,DRWIFFBDY,DRWFEAT,DRWIMG
$	MAKC AP DOWIN DOPICT,PICT_DO,LDTI,NDREGI
$	MAKC APF DOWIN DRAW_IMAGE,STORE_ANNO
$	MAKLIB LITES2 DOWIN
$!
$NODOWIN:MAKASK DOLAY "*DO Layers, selection and setting"
$	IF NO THEN GOTO NODOLAY
$	MAKC A DOLAY DOCREA,DORENA,DOMERG,DOSELE
$	MAKC AP DOLAY DODESE,ADDGROUP,ADDRANGE
$	MAKC AP DOLAY SELEMP,DESEMP,SELELY,DESELY
$	MAKC AP DOLAY DESEFC,SELEFC,RDSEL,SELEAL
$	MAKC AP DOLAY NUMERIC,DESFSN,SELFSN,SELEAC
$	MAKC AP DOLAY FINAC,FNDAC,CREATE_ACSEL,ISELAC
$	MAKC AP DOLAY STORE_ACSEL,SELERG,DESERG,STSARG
$	MAKC AP DOLAY SELFLG,DESFLG,FINEDT,RENLAY,CHALAY
$	MAKC AP DOLAY SELEPRIO,DESEPRIO
$	MAKC AP DOLAY DESCATSTY,SELCATSTY,FINCS,ISELCS
$	MAKC AP DOLAY DOPUT,DOGET,DOSET,DOUNSE,SELEIM
$	MAKC AP DOLAY OVERLAY_SELEAL,OVERLAY_PLANE_SELECT
$	MAKC APF DOLAY GET_OVERLAY_PLANE
$	MAKLIB LITES2 DOLAY
$!
$NODOLAY:MAKASK DOINT "*DO Interrogation"
$	IF NO THEN GOTO NODOINT
$	MAKC A  DOINTA DOEXAM,DOSHOW,DOSAVE,DOREVI,SHSELE
$	MAKC AP DOINTA SAVMAC,SHOPTI,SHMATC,EXLENG,SHLIC
$	MAKC AP DOINTA HW_MODEL_TO_NAME
$	MAKC AP DOINTA SHSEMP,SHSELY,SHMACR,SHGRP,SHATTR
$	MAKC AP DOINTA SHSETU,SHOVER,SHPTOL,SHSELAC,SHPRIV
$	MAKC AP DOINTA SHGEOG,SHSEIM,SHIMAG,SHVIEW,SHDISP
$	MAKC AP DOINTA DISP_PRIV,DISP_PRIV_ATTR,SHLIGHTS
$	MAKC APF DOINTA SHSELRG,SHLABE,SHANNO,SHFILL
$	MAKLIB LITES2 DOINTA
$	MAKC A  DOINTB SHTOLE,SHBASE,SHSCAL,EXLINE,AREA
$	MAKC AP DOINTB ANGLE,SHACD,SHOPER,EXATTR,SHCP
$	MAKC AP DOINTB SHFC,SHPAT,PRMACR,SHCOMM,PRTMAC
$	MAKC AP DOINTB DISPLBTMP,OTPLSTRG,OTPSTR,EXDIST
$	MAKC AP DOINTB INWORD,ENDDISPL,SHFCPRIO,SHPLOT
$	MAKC AP DOINTB ONOFF,SHMAPS,SHLAYE,SHMENU,EXSEC
$	MAKC AP DOINTB EXFC,LITES2_BOX,SHCOLOURS,SAVSEL
$	MAKC AP DOINTB SHPROJ,ANGLE_BEARING
$	MAKC APF DOINTB EXWDTH,EXSIZE,EXPATT,EXVERT,EXALL
$	MAKLIB LITES2 DOINTB
$!
$NODOINT:MAKASK DOALT "*DO Alteration of screen plot"
$	IF NO THEN GOTO NODOALT
$	MAKC AF DOALT DOREFR,DRWGRD
$	MAKLIB LITES2 DOALT
$
$NODOALT:MAKASK DOGEO "*DO Geometry Manipulation"
$	IF NO THEN GOTO NODOGEO
$	MAKC A DOGEO DOGEOM,DRWGEOM,DISPGEOM,GEOM_REG
$	MAKC AP DOGEO GEOM_BOX,SELEGEOM,FINGEOM,TSTGEOM
$	MAKC AP DOGEO SHGEOM,SH1GEOM
$	MAKC AP DOGEO GEOM_FEATURE,GEOM_FROM_IFF,GEOM_TYPE
$	MAKC APF DOGEO ASKGEOMETRY,GEOM_DESTROY,CHK_GEOMETRIES
$	MAKLIB LITES2 DOGEO
$!
$NODOGEO:MAKASK DOMAC "*DO Macros, conditionals and regions"
$	IF NO THEN GOTO NODOMAC
$	MAKC A DOMACA DOMACR,DOJUMP,DOJTRU
$	MAKC AP DOMACA DOTHEN,DOELSE,DOABOR
$	MAKC AP DOMACA DOJFAL,DOTEST,DOOR,DOAND
$	MAKC AP DOMACA DOENDM,DOCANC,DOREGI
$	MAKC AP DOMACA DODECL,DOLET,DOINQU
$	MAKC AP DOMACA DOCLIP,OUTCLP,CLPFRN,CLPLNE
$	MAKC AP DOMACA CLNREG,INTSCTR,PRPLIN
$	MAKC APF DOMACA CLAREG,OUTARCS,INSANG
$	MAKLIB LITES2 DOMACA
$	MAKC A DOMACB JUMP,SETFLG,SECREG,REGCIRC
$	MAKC AP DOMACB GEN_REG_CRNR,REG_TRUNC
$	MAKC AP DOMACB REG_FEATURE,REGION_ZONE,REG_BOX
$	MAKC AP DOMACB REG_WINDOW,REG_IMAGE
$	MAKC AP DOMACB REG_TIDY,DELPPT,GET_MEM,FREE_MEM
$	MAKC AP DOMACB SHREG,ADDPPT,DEFREG,GETPPT,LISTRN
$	MAKC AP DOMACB PINREG,CUTREG,CMPFRN,DELREG,SHMEM
$	MAKC AP DOMACB TSTREG,VLDSEC,BOXCUTREG,REVREG
$	MAKC AP DOMACB DISPRN,ARCREG,REG_TRUNC_START
$	MAKC AP DOMACB REG_TRIM_END
$	MAKC APF DOMACB FINREG,INCTOT,FILTREG
$	MAKLIB LITES2 DOMACB
$!
$NODOMAC:MAKASK DOOTHER "*DO Other commands"
$	IF NO THEN GOTO NODOOTHER
$	MAKC A DOOTHER DOTRAI,DOTIME,DOWORK
$	MAKC AP DOOTHER DODEBU,DOVERI,DOMESS,DOWAIT
$	MAKC AP DOOTHER DORESP,DOCONT,DOPING,DORASP
$	MAKC AP DOOTHER DONULL,DOPROM,DOPRIO
$	MAKC APF DOOTHER TIMPRT,DOFILE
$	MAKLIB LITES2 DOOTHER
$!
$NODOOTHER:MAKASK DOCOMP "*DO Completion of editing"
$	IF NO THEN GOTO NODOCOMP
$	MAKC A DOCOMP DOQUIT,DODUMP,DOEXIT,DOWRIT
$	MAKC APF DOCOMP RESTORE
$	MAKLIB LITES2 DOCOMP
$!
$NODOCOMP:MAKASK DOEDG "*DO Edgmatching"
$	IF NO THEN GOTO NODOEDG
$	MAKC A DOEDG DOEDGE,EDGMAT,PLDIST,PRPDST,MOVTOL
$	MAKC AP DOEDG LENGTH,TOFILE,TSTPRP,BASINT,EDGEXT
$	MAKC AP DOEDG OPEFILE
$	MAKC APF DOEDG OBJSDE,NOUSE,SECEDG,PRPVRT,PRPLNG
$	MAKLIB LITES2 DOEDG
$!
$NODOEDG:MAKASK DORAS "*DO Raster backdrop etc"
$	IF NO THEN GOTO NODORAS
$	MAKC A DORAS DOIMAG,DOOVER,ADJUST,DISP_RAS
$	MAKC AP DORAS DODISP,DISPLAY_CREATE,IMAGEBAND
$	MAKC AP DORAS CLASSIFY,IMAGENUMBER,LSRLOAD
$	MAKC AP DORAS DOPLOT,PLOT_DO,LSROPN,LSRCLS
$	MAKC APF DORAS IMAGE_CACHE,IMAGE_EDIT,NDIMAG,IMGCLS
$	MAKLIB LITES2 DORAS
$	MAKC A DORASW DOWARP,SHWARP,WARP_REVERSE,WARP_TRNSET
$	MAKC AP DORASW WARP_SCA_ANG,WARP_LINEAR,WARP_BACK
$	MAKC APF DORASW TRXWIN,DISP_RAS_WARP
$	MAKLIB LITES2 DORASW
$!
$NODORAS:MAKASK DOPER "*DO Perspective view manipulation"
$	IF NO THEN GOTO NODOPER
$	MAKC A DOPER DOVIEW,VIEW_WINDOW,VIEW_LIGHT
$	MAKC AP DOPER VIEW_COLOUR,VIEW_DISPLAY
$	MAKC AP DOPER VIEW_GTPLTINFO,VISA,VIEW_BFF
$	MAKC AP DOPER VIEW_PALETTE,VIEW_SPHERE
$	MAKC AP DOPER VIEW_INDEX,VIEW_METHOD
$	MAKC AP DOPER VIEWGFA,VIEWGPL,VIEW_DO,VIEW_BFA
$	MAKC AP DOPER VIEWVIEW,VIEWSAV,VIEWDRW,VIEWFTR
$	MAKC AP DOPER STREND,VIEW_OUTPUT_DTI
$	MAKC AP DOPER VIEW_RENDER,VIEW_AMBIENT
$	MAKC AP DOPER VIEW_ILLUMINATION,VIEW_DEPTH
$	MAKC AP DOPER VIEW_FOG,VIEW_RENDER_DO
$	MAKC AP DOPER VIEW_GENERATE_PARAMETERS
$	MAKC APF DOPER VIEW_GENERATE,VIEW_Z_INTERP
$	MAKLIB LITES2 DOPER
$!
$NODOPER:MAKASK DOUSER "*DO User Routines"
$	IF NO THEN GOTO NODO
$	MAKC A DOUSER DOUSER,DOROUT
$	MAKC AP DOUSER FILLXY,FILLFO,FILLZS,FILLCB
$	MAKC AP DOUSER FILLTX,SETTH,SETTFS,USER_MH_MD
$	MAKC AP DOUSER SAVE_ANNO,RESTORE_ANNO
$	MAKC APF DOUSER SETUP_USER,USER,CHKENTRY
$	MAKLIB LITES2 DOUSER
$!
$NODO:	MAKASK INIT "Init"
$	IF NO THEN GOTO NOINIT
$	MAKC A INIT INIT,WRTVER,EXCEPTION,LITES2_SCROLL
$	MAKC AP INIT TWOEXH,TWOPUT,CTRLCAST,HADCTRLC
$	MAKC AP INIT AUXACT,SERVAUX,STRTAUX,AUXOFF,QIOUP
$	MAKC AP INIT INIZONE,ABORTAST,HADBREAK,TSTENC
$	MAKC AP INIT GTDONG,TSTCPU,TSTFAC,LICENSED,VTSTAT
$	MAKC APF INIT TRNFLN,DOOSSE,GETROUTINE,GETVERSION
$	MAKLIB LITES2 INIT
$!
$NOINIT:MAKASK INPUT "Input"
$	IF NO THEN GOTO NOINPUT
$	MAKC A INPUT INPUT,IFFHDR,INISEC,INISCL,INIGKS
$	MAKC AP INPUT INIMAP,INIMNU,INITRK,TRNUSE,TRNTST
$	MAKC AP INPUT TRNSET,GETIFF,IFFBDY,GENAUX,INIDIG
$	MAKC AP INPUT OSHEAD,MCEHEA,SCFRSS,INIBAL,INISCR
$	MAKC AP INPUT INIBUT,PERCENT,REAL_CF,REAL_SWAP
$	MAKC AP INPUT TSTFLN,GTOLDT,PTOLDT,DIG2PT,DIG4PT
$	MAKC AP INPUT INIBIT,DIGOS,PSTOSZ,GENCIR,INIORG
$	MAKC AP INPUT CHCK_CPTS,DIGCRN,READ_MAP,NEW_MAP
$	MAKC AP INPUT DOPROJ
$	MAKC APF INPUT DIGEDGE,REGRESS,INTERSECT,EDGESET
$	MAKLIB LITES2 INPUT
$!
$NOINPUT:MAKASK PACK "Pack"
$	IF NO THEN GOTO NOPACK
$	MAKC A PACK SETPAK,ADDPAK,DELPAK,GETBLK,NXTPAK
$	MAKC APF PACK CLRSEC,FRESEC,DELMAP
$	MAKC AM PACK PACKER
$	MAKLIB LITES2 PACK
$!
$NOPACK:MAKASK SECTOR "Sector"
$	IF NO THEN GOTO NOSECTOR
$	MAKC A SECTOR ADCORD,FLUSH,SECTOR,LISECS,CISECS
$	MAKC AP SECTOR FNDOVR,ADOFF,RUBISH,FLUFTR,CHKDUPL
$	MAKC AP SECTOR INIT_SCAN_MEM,SCAN_POLYGON,FLUSH_SCANLINE
$	MAKC APF SECTOR ADDATT,FLUCB
$	MAKLIB LITES2 SECTOR
$!
$NOSECTOR:MAKASK PRINT "Print"
$	IF NO THEN GOTO NOPRINT
$	MAKC AF PRINT PRTSEC
$	MAKLIB LITES2 PRINT
$!
$NOPRINT:MAKASK FIND "Find"
$	IF NO THEN GOTO NOFIND
$	MAKC A FIND ADDSEC,ADDSN,FINREC
$	MAKC AP FIND FIND,GROPE,LDIST,RELVNT,SCNSEC,ARCARC
$	MAKC AP FIND BOXARC,INTLARC,LINARC,PTINARC,INTAARC
$	MAKC AP FIND PLANE,PLANE_INTERPL,LINEAR_INTERPL
$	MAKC AP FIND MINDEX,STRINS,INTSCT,INTSCN,INTSCNA
$	MAKC APF FIND SECNEA,SECDIST
$	MAKLIB LITES2 FIND
$!
$NOFIND:MAKASK CHANGE "Change"
$	IF NO THEN GOTO NOCHANGE
$	MAKC A CHANGE CHANGE,CHAPAK,SCNFTR,CHPART,CHKPRT
$	MAKC APF CHANGE BRIDGE,CREARC
$	MAKLIB LITES2 CHANGE
$!
$NOCHANGE:MAKASK COLAPS "Collapse"
$	IF NO THEN GOTO NOCOLAPS
$	MAKC A COLAPS IGNCMD,LEARNR,MOANMK,INFRMR,BELLR
$	MAKC APF COLAPS COLAPS,CRASH,LITES2_SIGNAL
$	MAKLIB LITES2 COLAPS
$!
$NOCOLAPS:MAKASK ATTRIBUTES "Attributes"
$	IF NO THEN GOTO NOATTRIBUTES
$	MAKC A ATTRIBUTES DOOPER,FADDAC,FUPDAC,ACFSET,SETEDT
$	MAKC AP ATTRIBUTES DOAFTE,ATTDECOD,CMPAC,TSTAC
$	MAKC AP ATTRIBUTES GET_ACTYPE,GET_ACVAL,CHK_PRIV_ATT
$	MAKC AP ATTRIBUTES LSTARR,ARRLST,ARRARR,GETDEF
$	MAKC AP ATTRIBUTES ADDDEF,COPYDEF,REMDEF,DELDEF
$	MAKC APF ATTRIBUTES OS_MH_UPDATE,CHK_FC_CAT
$	MAKLIB LITES2 ATTRIBUTES
$!
$NOATTRIBUTES:MAKASK STDRAW "Store draw"
$	IF NO THEN GOTO NOSTDRAW
$	MAKC A STDRAW STDRAW,DRAFTR,CURTOL,INTERP
$	MAKC AP STDRAW S_DRAFTR
$	MAKC AP STDRAW ADDPTS,ADDPTS3D,DRAWX,INIDRAW
$	MAKC AP STDRAW SETLIN,SETCOL,LOOPY,BOX_AUX
$	MAKC AP STDRAW SETBLANK,SETUP_PLOT,BOX_STDRAW
$	MAKC AP STDRAW STCIRC,FLVIEW,STDBFA,STDBFF
$	MAKC AP STDRAW DRAWDP,ADDORG,OFF,SRTOFF
$	MAKC APF STDRAW SRTMEM,SAVEDP,DRWSAV,LSORT
$	MAKLIB LITES2 STDRAW
$!
$NOSTDRAW:MAKASK REFRESH "Refresh draw"
$	IF NO THEN GOTO NOREFRESH
$	MAKC AF RFDRAW RALONG,CURCON,FRECUR,DRAWFL,RFMOVE_STAN
$	MAKLIB LITES2 RFDRAW
$!
$NOREFRESH:MAKASK LABELS "Draw labels"
$	IF NO THEN GOTO NOLABELS
$	MAKC A LABELS LABDRW,LABSAV,BLDLAB,SETANNO
$	MAKC AP LABELS DISPLAB,DSTLAB,CLIP,DISPPT
$	MAKC AP LABELS BLANK_LABEL
$	MAKC APF LABELS VINWIN,LABVIEW,DRALAB
$	MAKLIB LITES2 LABELS
$!
$NOLABELS:MAKASK FEATURE "Feature handling"
$	IF NO THEN GOTO NOFEATURE
$	MAKC A FEATURE HAULIN,NXTITM,HANDLE,DROP,DROBIH
$	MAKC AP FEATURE ADDVRT,GETVRT,CMPIND,VRFEAT
$	MAKC APF FEATURE SEGVEC,PDIST,GETATT
$	MAKLIB LITES2 FEATURE
$!
$NOFEATURE:MAKASK MAP "Map handling"
$	IF NO THEN GOTO NOMAP
$	MAKC A MAP OPENIF,CLOSIF,SELIF,STRTOV,ENDOV
$	MAKC AP MAP OPEN_FFILE,READ_FFILE,WRITE_FFILE
$	MAKC AP MAP CLOSE_FFILE,FILE_CLOSE,SELECT_FFILE
$	MAKC AP MAP CMBNEIFF,OS_MH_SET_FLAGS,ENDMAP
$!!!!	MAKC AP MAP OSMH_GETCHAR,OSMH_PUTCHAR
$	MAKC APF MAP ENDSES,TDYIFF,LOCKIF,STRTOUTPUT
$	MAKLIB LITES2 MAP
$!
$NOMAP:MAKASK EDIT "Editing"
$	IF NO THEN GOTO NOEDIT
$	MAKC A EDIT ABANDN,DELFT,ENDFT,STRTFT,NDBRID
$	MAKC AP EDIT NDEDIT,NDJOIN,NDTIE,NDLOOP,VERTEX
$	MAKC AP EDIT RECOV,STRTER,ADDLIN,REVLIN,NDMEND
$	MAKC AP EDIT CPYBYT,GENNF,ABACON,ABAWIN,ABAMND
$	MAKC AP EDIT ADDZ,GETZ,INSERT,GETZ_LIST
$	MAKC APF EDIT CPYPAK,CIRCLE,NDSTAR,NOCHAN,NDINSE
$	MAKLIB LITES2 EDIT
$!
$NOEDIT:MAKASK AC "AC handling routines"
$	IF NO THEN GOTO NOAC
$	MAKC A AC ADDAC,GETAC,MOVAC,NEXTAC,PREVAC
$	MAKC AP AC TYPAC,VERFAC,DELAC,ACEDT,COPYAC
$	MAKC AP AC CHANAC,INIDSC,FREEAC,FREE1AC
$	MAKC AP AC ALTAC,THISAC,LASTAC,FRSTAC
$	MAKC APF AC PUTAC
$	MAKLIB LITES2 AC
$!
$NOAC:MAKASK TABLE "Digitising table and Bitpad"
$	IF NO THEN GOTO NOTABLE
$	MAKC A TABLE INPLGN,TSTDGI,MNUBOX,GETABL,GTYPAC
$	MAKC AP TABLE TRNTIP,TRNBUT,STRDTB,DTBKIL,SCRNTIP
$	MAKC APF TABLE DIGTRN,INIT_TABLE
$	MAKLIB LITES2 TABLE
$!
$NOTABLE:MAKASK STREAM "Stream digitising (ie following)"
$	IF NO THEN GOTO NOSTREAM
$	MAKC A STREAM DOFOLL,ENDFOLL
$	MAKC AP STREAM FOLTMR,FOLLOW_COMPRESS
$	MAKC APF STREAM SERV_FOLLOW,FOLLOW_FLUSH
$	MAKLIB LITES2 STREAM
$!
$NOSTREAM:MAKASK TABLE "Geographical handling"
$	IF NO THEN GOTO NOGEOG
$	MAKC A GEOG TRANS_EXCP,GEOG_TRANS
$	MAKC AP GEOG GEOG_TRANS_RANGE,GEOG_TRANS_ARRAY
$	MAKC AP GEOG GEOG_SCAN_RANGE,GEOG_GRID_RANGE
$	MAKC APF GEOG RDANG,SAME_PROJECTION,SETUP_GEOG
$	MAKLIB LITES2 GEOG
$!
$NOGEOG:MAKASK LSLDEP "LSL hardware dependant routines"
$	IF NO THEN GOTO NOLSLDEP
$	wc "$	LIBR/CREATE TEK_ARGS"
$	wc "$	PURGE/KEEP=2 TEK_ARGS.OLB"
$	wc "$	assign ''DEPDIR' SRC"
$	MAKC A LSLDEP TEK_ARGS_TABINIT,TEK_ARGS_BITINIT
$	MAKC AP LSLDEP TEK_ARGS_GTDGXY,TEK_ARGS_RFMOVE
$	MAKC AP LSLDEP TEK_ARGS_LCLSG,TEK_ARGS_LCRSG,TEK_ARGS_LDSG
$	MAKC AP LSLDEP TEK_ARGS_LSVIS,TEK_ARGS_SCRINIT
$	MAKC AP LSLDEP TEK_ARGS_BUTINIT,TEK_ARGS_LUWK
$	MAKC AP LSLDEP TEK_ARGS_DSRINIT,TEK_ARGS_KRSINIT
$	MAKC AP LSLDEP TEK_ARGS_FOLLOW_COORD,TEK_ARGS_NOT_SUPPORTED
$	MAKC AP LSLDEP TEK_ARGS_LSALLV,TEK_ARGS_LSALLI
$	MAKC AP LSLDEP TEK_ARGS_LRSGWK,TEK_ARGS_CLSWK
$	MAKC AP LSLDEP TEK_ARGS_STDINI,TEK_ARGS_HARCOP
$	MAKC AP LSLDEP TEK_ARGS_BALINIT,TEK_ARGS_LSCR
$	MAKC AP LSLDEP TEK_ARGS_INTERACT,TEK_ARGS_RFDRAW
$	MAKC AP LSLDEP TEK_ARGS_TSTWK,TEK_ARGS_TSTSEG
$	MAKC AP LSLDEP TEK_ARGS_BOXTXT,TEK_ARGS_RFBAND
$	MAKC APF LSLDEP TEK_ARGS_INIWK,TEK_ARGS_PING
$	MAKLIB TEK_ARGS LSLDEP
$	MAKC M LSLDEPM SRC:TEK_ARGS_DUMMY
$	MAKLIB TEK_ARGS LSLDEPM
$	wc "$	assign ''SRCDIR' SRC"
$!
$NOLSLDEP:MAKASK MISC "Miscellaneous routines"
$	IF NO THEN GOTO NOMISC
$	MAKC M MISC LSL$CMNLSL:TXTC+WINDEF+MAR:READ_STRING
$	MAKLIB LITES2 MISC
$!
$NOMISC:
$!
$! now link it if that is required
$!
$inqlnk:inquire TKB "Link "
$	if .not.TKB then goto notkb
$lkonly:
$	wc "$!  ++++++++++++++++++++  Options  ++++++++++++++++++++"
$!
$! generate a version identifier
$	WC "$	RUN LSL$EXE:GENVER"
$	WC "$	ADC VERSION/CD:CMN:=TR:/TR,OBJ:VERSION"
$	WC "$	FORTRAN/NOLIST VERSION"
$	WC "$	PVV VERSION"
$	WC "$	DELETE VERSION.SRC;*,VERSION.FOR;*,ADC.IDE;*"
$	WC "$	PURGE/NOLOG VERSION.OBJ"
$	WC "$	ADC GCTP = LSL$CMNIFF:MD2DAT"
$	WC "$	FORT/DEBUG/NOOPT/NOLIST GCTP"
$	WC "$	PVV GCTP"
$	WC "$	DELETE	ADC.IDE;*,GCTP.FOR;*"
$	WC "$	PURGE/NOLOG GCTP.OBJ"
$!
$! now what shall we call it ?
$!
$	TSKNAM = "LITES2"
$	TSKEXT = "''LITES2_DEP'"
$	VER    = "''TSKNAM'''TSKEXT'"
$	OPTNAM = "''VER'"
$	DEBSW  = ""
$!
$! now conditionalise the link instructions
$	WC "$	ADC ''OPTNAM'.OPT=TR:/TR,COM:''VER'.LNK"
$	WC "$	PURGE/NOLOG ''OPTNAM'.OPT"
$!
$! and do the linking
$!
$	inquire LDEBUG "Link with debug"
$	if LDEBUG then DEBSW = "/DEBUG"
$	inquire EXPV "Experimental version"
$	if EXPV   then VER = VER + "D"
$!
$!  ++++++++++++++++++++  Linking  ++++++++++++++++++++
$	WC "$	LIBR/REM=ABANDN LITES2"
$	WC "$	LIBR/REM=SUBVAR LITES2"
$	WC "$	LINK''DEBSW'/NOMAP/EXE=EXE:''VER'  -"
$	WC "	obj:gctp,-"
$	WC "	LSL$LIBRARY:FRTSHR/OPT,-"
$	WC "	LSL$LIBRARY:IFFSHR/OPT,-"
$	WC "	LSL$LIBRARY:LSLSHR/OPT,-"
$	WC "	LSL$LIBRARY:DTISHR/OPT,-"
$	WC "	OBJ:''OPTNAM'/OPTIONS"
$	WC "$	PURGE/NOLOG EXE:''VER'.EXE,OBJ:''VER'.MAP"
$!
$! all done
$!
$notkb:	makend
$	PURGE/NOLOG EXE:LITES2BAT.COM/KEEP=2
$!
