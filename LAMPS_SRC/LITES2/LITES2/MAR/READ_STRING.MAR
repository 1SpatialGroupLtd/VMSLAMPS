;
; * This file is part of the LAMPS distribution, released as a software
; * preservation project to archive digital history for future historians.
; * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
; *
; * Timestamp of this file for the 2002 release was: 1988-11-11 16:56:04.000000000 +0000
; *
; * This program is free software: you can redistribute it and/or modify
; * it under the terms of the GNU General Public License as published by
; * the Free Software Foundation, version 3.
; *
; * This program is distributed in the hope that it will be useful, but
; * WITHOUT ANY WARRANTY; without even the implied warranty of
; * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
; * General Public License for more details.
; *
; * You should have received a copy of the GNU General Public License
; * along with this program. If not, see http://www.gnu.org/licenses/.
;
	.TITLE READ_STRING
	.IDENT 	/11NO88/

;Copyright Laser Scan Laboratories Ltd., Cambridge, England
;Author Clarke Brunt, 10-Jul-1985
;
; READ_STRING
; Optimsation over LSLLIB for READSTR for the case of a straight read
; up to a terminator with no special treatment for repeated terminator.
;
; Must be assembled with TXTC.MAR and WINDEF.MAR

	.LIBRARY	/LSL$LIBRARY:LSLMACLIB/
	CODE_PSECT	LITES

;
; define a macro to load registers for current buffer
; R2=DCPTR, R3=buffer length, R4=buffer address
	.MACRO	GETBUF	?L1,?L2
	MOVZWL	G^AUXTXP,R3		; is there an auxiliary buffer?
	BNEQ	L1			; yes
	MOVZWL	G^TXTPTR,R3		; length
	MOVAB	G^TXTBUF,R4		; address
	BRB	L2
L1:	MOVL	G^AUXTXB+4,R4		; address
L2:	MOVZWL	G^DCPTR,R2		; decode pointer
	.ENDM	GETBUF

;
; nchars = READ_STRING(string,term)
; reads characters from current buffer into string until term found
;
	.ENTRY	READ_STRING,^M<R2,R3,R4,R5,R6>
	GETBUF				; macro (see above)
	DECL	R2
	SUBL2	R2,R3			; how many left?
	BLEQ	10$			; none
	LOCC	@8(AP),R3,(R4)[R2]	; find 'term'
	SUBL3	R0,R3,R6		; length to move
	MOVQ	@4(AP),R0		; descriptor
	MOVZWL	R0,R0			; destination length
	CMPL	R0,R6
	BGEQ	5$
	MOVL	R0,R6
5$:	MOVC3	R6,(R4)[R2],(R1)
	MOVL	R6,R0			; number read
	ADDW2	R0,G^DCPTR		; step pointer on
	INCW	G^DCPTR			; and over terminator
	RET

10$:	CLRL	R0
	RET

	.END
