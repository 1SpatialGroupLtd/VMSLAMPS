C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1987-12-14 18:08:18.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL FUNCTION SEGVEC(DIFF,VNUM)
C
***	IDENT	01AP85
***	MODULE	SEGVEC
C
C	Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C	Created					RJH	01-APR-1985
C
C Description
C
C    This function is part of LITES2, and its purpose is to work out
C the vector for the line segment following the current vertex on the 
C current found feature.
C    The first argument returned consists of the differences in X and Y
C for the line segment, while the second is the current vertex number.
C    The function returns true if the vector is zero, i.e. the points
C comprising the line segment are equal.
C
	IMPLICIT NONE
C
C Included Parameter Files
C
	INCLUDE	'LSL$CMNIFF:CB.STR'
***	PARAMETER/CMN:AUXDEF/		! auxiliary array definitions
***     PARAMETER/CMN:MOANMESS/		! moan constants
***	PARAMETER/CMN:PACK/		! external pack definitions
C
C Arguments
C
	INTEGER*4	VNUM		! vertex number
	REAL		DIFF(2)		! differences in X and Y
C
C Common Blocks
C
***     COMMON/CMN:GLOBAL/		! global variables
***	COMMON/CMN:STRIKE/		! found objects, etc.
C
C Calculate differences in X and Y for the segment from the current
C vertex to the next one.
C
	VNUM = FOVRT-FOVO			! index on FOXY
	IF (FOVRT.EQ.FOLST) VNUM = VNUM-1	! back up if last vertex
	DIFF(1) = FOXY(1,VNUM+1)-FOXY(1,VNUM)	! vector along feature
	DIFF(2) = FOXY(2,VNUM+1)-FOXY(2,VNUM)
C
C Check if the vector is zero
C
	IF ((DIFF(1) .EQ. 0.0) .AND. (DIFF(2) .EQ. 0.0)) THEN
	   CALL MOAN(MSG_VERTSAME)
	ENDIF
C
C Assign function value
C
	SEGVEC = MOANED
C
C Return
C
	RETURN
	END
