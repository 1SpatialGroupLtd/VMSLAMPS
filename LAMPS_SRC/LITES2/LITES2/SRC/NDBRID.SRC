C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1994-12-07 16:00:32.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL FUNCTION NDBRID
C
***     IDENT   07DE94
***     MODULE  NDBRID
C
C       Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C       Written                                 CCB	17-JAN-1985
C
C	LITES2 cartographic editor END BRIDGE routine
C	Returns FALSE if successful
C
        IMPLICIT NONE
C
	INCLUDE	'LSL$CMNIFF:CB.STR'
***	PARAMETER/CMN:AUXDEF/
***     PARAMETER/CMN:END/
***     PARAMETER/CMN:MOANMESS/
***	PARAMETER/CMN:PACK/
***     PARAMETER/CMN:START/
C
***	COMMON/CMN:MASTER/
***	COMMON/CMN:OIIH/
***	COMMON/CMN:STRIKE/
C
C workspace
	LOGICAL		ONEND		! bridge started on an end
C
	NDBRID = .TRUE.			! assume failure
C
C did the bridge start at an end?
	ONEND = (IHVRT.EQ.IHLST).OR.(IHVRT.EQ.1.AND.IHNVRT)
C
C must have the object in hand found again, unless started on an end
	IF (.NOT.FO) THEN		! no found feature
	   IF (ONEND) GOTO 100
	   CALL MOAN(MSG_NOFEATURE)
	   CALL LEARN(MSG_FINDSAME)
	   GOTO 999
	ENDIF
C
	IF (FOPAK(PAKPNF).NE.IHPAK(PAKPNF).OR.
     &		FOPAK(PAKMAP).NE.IHPAK(PAKMAP) ) THEN
	   IF (ONEND) GOTO 100
	   CALL MOAN(MSG_NOTSAME)
	   CALL LEARN(MSG_FINDSAME)
	   GOTO 999
	ENDIF
C
	IF (.NOT.FONLIN) THEN
	   IF (ONEND) GOTO 100
	   CALL MOAN(MSG_NOTONLINE)
	   CALL LEARN(MSG_USEON)
	   GOTO 999
	ENDIF
	GOTO 200
C
C here to end a bridge that started on the end of a feature and has
C wandered off into space - pretend we are at the same point as where
C the bridge started
100	IMCXY(1) = IHCXY(1)
	IMCXY(2) = IHCXY(2)
	IMCZI = IHCZI
	IMVRT = IHVRT
	IMNVRT = .TRUE.
	GOTO 300			! off to add last point
C
C So we are on the correct found object.
C Transfer the position on it to the marked object in hand position
200	IMCXY(1) = FOCXY(1)
	IMCXY(2) = FOCXY(2)
	IMCZI = FOCZI
	IMVRT = FOVRT			! vertex number
	IMNVRT = FONVRT			! on a vertex?
C
C Add last point to bridge construction unless at an end
C Still add the point if doing CLOSE and bridging from one end
C of the feature to the other.
	IF ((IMVRT.EQ.1.OR.IMVRT.EQ.IHLST).AND.IMNVRT) THEN
	   IF (NDMODE.EQ.END_BRIDGE_CLOSE.AND.
     &		((IMVRT.EQ.1).NEQV.(IHVRT.EQ.1)) ) GOTO 300
	   GOTO 400
	ENDIF
300	CALL STRTER(START_ADD,START_VISIBLE)
C
C Use CHPART to get the two marked points the right way round
C and to actually construct the bridge
400	CALL CHPART(.FALSE.)
	NDBRID = .FALSE.		! success
C
999	RETURN
        END
