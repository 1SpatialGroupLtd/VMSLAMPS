C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1994-11-01 14:41:18.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE SRTOFF(XY)
C
***	IDENT	01NO94
***	MODULE	SRTOFF
C
C	Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C	Created					RWR	06-Jun-1986
C
C	Jacket routine to call the real routine below, passing it 
C	the correct values from the common block
C
	IMPLICIT NONE
C
C Arguments
	REAL	XY(2)		! point to be used to indicate
				! direction of next vector
C
***	COMMON/CMN:STDBFC/
C
	IF (STDBFP.GT.0) CALL SRTOFF_SUB(
     &				%VAL(STDBFX_ADDR+(STDBFP-1)*4),
     &			   	%VAL(STDBFY_ADDR+(STDBFP-1)*4),XY)
C
	RETURN
	END



	SUBROUTINE SRTOFF_SUB(X1,Y1,XY)
C
***	IDENT	14FE92
***	MODULE	SRTOFF_SUB
C
C	Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C	Created					RWR	06-Jun-1986
C
C	To update the point X1, Y1, which has been offset by a call
C 	of OFSET, to take into account the point X, Y, using the data
C	stored in the common block DRAWIN
C
	IMPLICIT NONE
C
C Arguments
	REAL		X1,Y1		! offset point to be updated
	REAL		XY(2)		! point to be used to indicate
					! direction of next vector
C
***	COMMON/CMN:DRAWIN/
C
C Local Variables
	REAL		SEG(2,2)	! the next vector
	REAL		PT(2)		! intersection point
	INTEGER		IN1,IN2		! dummy
C
C functions
	LOGICAL		INTSCT
C
C set up this vector
C
	SEG(1,1) = LSTPT(1)
	SEG(2,1) = LSTPT(2)
	SEG(1,2) = XY(1)
	SEG(2,2) = XY(2)
C
C offset it
C
	CALL OFFSEG(OFFDIST,SEG,SEG)
C
C update X1, Y1
C
	IF (.NOT.STD) THEN		! first vector
	   X1 = SEG(1,1)
	   Y1 = SEG(2,1)
	   STD = .TRUE.
	ELSE
	   IF (INTSCT(SEG,LSTOFF,PT,IN1,IN2)) THEN	! collinear?
	      X1 = SEG(1,1)
	      Y1 = SEG(2,1)
	   ELSE
	      X1 = PT(1)
	      Y1 = PT(2)
	   ENDIF
	ENDIF
C
	RETURN
	END
