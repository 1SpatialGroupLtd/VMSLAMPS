	SUBROUTINE D14SBX(NUMDEL)
C
***	MODULE	D14SBX
***	IDENT	13FE91
C
	IMPLICIT NONE
C
C       Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C       Written                                 RWR	 19-Jul-1988
C
C to remove redundant points at start and end of feature, where
C the first and last vectors are parallel
C
***	PARAMETER/CMN:MOANMESS/
C
***	COMMON/CMN:D14IFC/
***	COMMON/CMN:D14CMN/
C
C arguments
	INTEGER		NUMDEL		! number of points removed so far
C
C functions
	LOGICAL D14PRL
C
C w/s
	INTEGER		I,J
	INTEGER		REMOVE
C
C check if first or last point is fixed
	IF (((STATUS(0).AND.8).NE.0).OR.
     &	    ((STATUS(D14NPT-1).AND.8).NE.0).OR.
C
C and first and last vector are parallel
     &	    .NOT.D14PRL(COEFA1(0),COEFA2(0),
     &	           COEFA1(D14NPT-2),COEFA2(D14NPT-2),SQPL)) GOTO 999
C
C initialise sum of line coordinates
	X5 = D14WRK(X,0)
	Y5 = D14WRK(Y,0)
	I = 1
C
C search forward through the feature for lines parallel to the
C first line segment, until either a non-parallel or a fixed point
C is found
10	CONTINUE
	IF ((I.GT.D14NPT-2).OR.
     &	    ((STATUS(I).AND.8).NE.0).OR.
     &	    .NOT.D14PRL(COEFA1(0),COEFA2(0),COEFA1(I),COEFA2(I),SQPL))
     &	               GOTO 20
C
C parallel line, so add this coordinate to sum
	X5 = X5 + D14WRK(X,I)
	Y5 = Y5 + D14WRK(Y,I)
	I = I+1
	GOTO 10
C
C add last point tested to sum
20	CONTINUE
	X5 = X5 + D14WRK(X,I)
	Y5 = Y5 + D14WRK(Y,I)
C
C shuffle down arrays for points that have just been deleted
	IF (I.GT.1) THEN
	   CALL D14SFL(1,I,NUMDEL)
C
C number of points has changed
	   D14NPT = D14NPT - I + 1
	ENDIF
C
C add last feature point coordinates to totals
	J = D14NPT-1
	X5 = X5 + D14WRK(X,J)
	Y5 = Y5 + D14WRK(Y,J)
	J = J-1
C
C search backwards through the feature from the last line for lines
C parallel to the first line, until either a fixed point or a non-
C parallel line is found
	REMOVE = 0
30	CONTINUE
	IF (J.LE.(I-NUMDEL).OR.
     &	    ((STATUS(J+1).AND.8).NE.0).OR.
     &	    .NOT.D14PRL(COEFA1(0),COEFA2(0),COEFA1(J),COEFA2(J),SQPL))
     &	               GOTO 40
C
C parallel line, so add this point to totals
	X5 = X5 + D14WRK(X,J)
	Y5 = Y5 + D14WRK(Y,J)
C
C remove previous point from feature
	CALL INFORM(MSG_SQPTREM,J+1+NUMDEL+1)
	D14PTR(J+1+NUMDEL) = 0		 ! sort out pointers
	CALL DELDEF(D14ATT(J+1))	 ! delete lists of attributes
	D14ATT(J+1) = 0
	REMOVE = REMOVE + 1
	J = J-1
	GOTO 30
C
C test the reason for ending the parallel line search
C
C backward search found a fixed point; line must go through that
40	CONTINUE
	IF ((STATUS(J+1).AND.8).NE.0) THEN
	   X5 = D14WRK(X,J+1)
	   Y5 = D14WRK(Y,J+1)
C
C foward search found a fixed point; line must go through that
	ELSEIF ((STATUS(I-NUMDEL).AND.8).NE.0) THEN
	   X5 = D14WRK(X,I-NUMDEL)
	   Y5 = D14WRK(Y,I-NUMDEL)
C
C parallel lines not containing fixed points, so compute the 
C centroid
	ELSE
	   X5 = X5/((I+1) + (D14NPT - J - 1))
	   Y5 = Y5/((I+1) + (D14NPT - J - 1))
	ENDIF
C
C points have been removed
	D14NPT = D14NPT - REMOVE
C
C compute constant for new line and move first point to last point
	COEFA3(0)=-(COEFA1(0)*X5+COEFA2(0)*Y5)
	D14WRK(X,0) = D14WRK(X,D14NPT-1)
	D14WRK(Y,0) = D14WRK(Y,D14NPT-1)
C
999	CONTINUE
	RETURN
	END
