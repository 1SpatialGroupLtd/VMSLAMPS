C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1992-05-28 17:03:54.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE SHPAT
C
***	IDENT	26AU92
***	MODULE	SHPAT
C
C	Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C	Created					RWR	15-Nov-1984
C
C	LITES2 cartographic editor SHOW PATTERNS command.
C
	IMPLICIT NONE
C
***     PARAMETER/CMN:MOANMESS/
C
***     COMMON/CMN:DOUT/
***	COMMON/CMN:FILES/
***	COMMON/LSL$CMNFRT:FRTPAT/
C
C Function called
	LOGICAL		PATFND
C
	EXTERNAL	LEARN
C
C Local Variables
	INTEGER		I,FIRST,LAST,IPTR,RPTR
C
C cannot do anything without FRT file
	IF (.NOT.HADFRT) THEN
	   CALL MOAN(MSG_NOFILENAME,'FRT')
	   CALL MSGCMD(LEARN,MSG_REQFRTNAME)
	   GOTO 1000
	ENDIF
C
C or if FRT contained no patterns
	IF (PATCNT.LT.1) THEN
	   CALL MOAN(MSG_NOPATTERNS)
	   GOTO 1000
	ENDIF
C
C check for integer in command line
	IF (DNINT.EQ.1) THEN		! command line entered with
					! argument, so look for pattern
C
C check for valid pattern
	   IF (DINTS(1).LT.0.OR.DINTS(1).GT.32767) THEN   ! illegal
	      CALL MOAN(MSG_ILLEGLPAT,32767)		     ! pattern 	
	      GOTO 1000
	   ENDIF
	   IF (PATFND(DINTS(1))) THEN
	      CALL MOAN(MSG_PATNOTFND,DINTS(1))	! no such pattern
	      GOTO 1000
	   ENDIF
	   FIRST = PATIND
	   LAST = PATIND
	ELSE
C
C write out all patterns
	   FIRST = 1
	   LAST = PATCNT
	ENDIF
C
C write out header
	CALL INFORM(MSG_BLANK)
	CALL INFORM(MSG_PATHEAD1)
	CALL INFORM(MSG_PATHEAD2)
	CALL INFORM(MSG_BLANK)
C
C and each pattern
C PATINT_LOC is pointer to INTEGER*2 (6,*) array
C PATDIM_LOC is pointer to REAL*4 (6,*) array
C Set PTRs to first element, then write out all six for each pattern
	IPTR = PATINT_LOC+(FIRST-1)*6*2
	RPTR = PATDIM_LOC+(FIRST-1)*6*4
C
	DO 10, I=FIRST,LAST
	   CALL INFORM(MSG_PATOUTPUT,%VAL(IPTR),%VAL(IPTR+2),
     &			%VAL(IPTR+4),%VAL(IPTR+6),%VAL(IPTR+8),
     &			%VAL(RPTR),%VAL(RPTR+4),%VAL(RPTR+8),
     &			%VAL(RPTR+12),%VAL(RPTR+16),%VAL(IPTR+10),
     &			%VAL(RPTR+20) )
	   IPTR = IPTR+12
	   RPTR = RPTR+24
10	CONTINUE
C
1000	RETURN
	END
