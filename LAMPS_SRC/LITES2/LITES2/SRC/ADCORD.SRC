	SUBROUTINE ADCORD(XY,NATT,ATTC,ATTV)
C
***	MODULE	ADCORD
***	IDENT	20FE89
C
C Copyright Laser Scan Laboratories Ltd., Cambridge, England.
C
C To add a data-point to the output item-in-hand
C
	IMPLICIT NONE
C
	INCLUDE	'LSL$CMNIFF:CB.STR'
***	PARAMETER/CMN:AUXDEF/
***	PARAMETER/CMN:EFNLUN/
***	PARAMETER/CMN:MOANMESS/
***	PARAMETER/CMN:PACK/
C
***	COMMON/CMN:MAPS/
***	COMMON/CMN:OPTION/
***	COMMON/CMN:OIIH/
C
C arguments
	REAL	XY(2)		! the coordinates of the point
	INTEGER	NATT		! number of attributes
	INTEGER	ATTC(*)		! attribute codes
	INTEGER	ATTV(*)		! attribute values
C
C functions
	LOGICAL	ADDATT
	LOGICAL	CHKDUPL
C
C workspace
	LOGICAL	OVR
	REAL	LASTZ
	REAL	THISZ
C
C check if it's a duplicate point
	IF (ZOPT) THEN
	   CALL GETZ(LASTZ,COINATT,COIATTC,COIATTV(1,COIIND))
           CALL GETZ(THISZ,NATT,ATTC,ATTV)
	ENDIF
C
C CHKDUPL ignores Zs if Z not enabled
	IF (CHKDUPL(COIXY(1,COIIND),XY,LASTZ,THISZ)) THEN
	   CALL INFORM(MSG_DUPLPOINT)
	   IF (COIIND.EQ.1) OIENDS = 1	! in case point was pen-up
	ELSE
	   IF (COIIND.GE.OIFULL) THEN	! buffer is full
	      CALL FLUSH(1)		! so flush it
	      OIENDS = 1		! default ENDS flag
	   ENDIF
	   COIIND = COIIND+1		! step on
	   COIXY(1,COIIND) = XY(1)	! buffer it
	   COIXY(2,COIIND) = XY(2)
C
	   IF (NATT.GT.0.OR.COINATT.GT.0) THEN
	      OVR = ADDATT(NATT,ATTC,ATTV)
	      COIOVR = COIOVR.OR.OVR
	   ENDIF
	ENDIF
	RETURN
	END
