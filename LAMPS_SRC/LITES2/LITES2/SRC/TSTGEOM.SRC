	LOGICAL FUNCTION TSTGEOM
C
***	IDENT	20OC93
***	MODULE	TSTGEOM
C
C	Copyright LaserScan Laboratories Ltd., Cambridge, England
C
C NOTE: this function should only be called if the iff file pointer
C ================================================================
C	is pointing at an NF entry
C	==========================
C
C to test if the feature is in any selected geometry
C it returns .TRUE. if feature is in one of selected geometries
C and .FALSE. otherwise
C
C Author R.W. Russell				 7-Oct-1985
C
	IMPLICIT	NONE
C
C parameter and common blocks
C
***	PARAMETER/CMN:EFNLUN/
***	PARAMETER/CMN:MOANMESS/
C
***     COMMON/LSL$CMNFRT:FRTCOM/
***	COMMON/LSL$CMNIFF:IFFHAN/
CCC***	COMMON/CMN:MAPS/
***	COMMON/CMN:GEOM/
C
C functions
	LOGICAL		CHK_GEOMETRIES
	LOGICAL		GEOM_FROM_IFF
	LOGICAL		FRTFND
C
C working storage
C
	INTEGER*4	NFPTR
	INTEGER*2	IECODE, IELEN		! for IFF reading
	INTEGER*4	GEOM			! temporary geometry
	INTEGER		DIMENSION
	INTEGER		CUT_TYPE
	INTEGER*2	ISTAT(4)	! feature status words
	INTEGER		FC
C       
C 
	TSTGEOM=.TRUE.
	NFPTR=LPOSH
C
C do nothing if no geometry is selected
	IF (SAGEOMS .OR. SELECTED_GEOM .EQ.0) GOTO 900
C
C position onto the FS entry
	CALL IFFNXC('FS',IELEN)
	IF (IELEN.EQ.-1) THEN
	   CALL NASTY(MSG_UNEXPEIFF)
	   CALL COLAPS(MSG_UNEXPEIFF)
	   GOTO 900
	ENDIF
C
C read FS
	CALL EIHR(ISTAT,MIN(IELEN,4),1)
	FC = ISTAT(1)
C
C find graphical type
C
	IF (FRTFND(FC)) THEN
	   CALL NASTY(MSG_BADCODE,FC)
	   CALL COLAPS(MSG_BADCODE)
	   GOTO 900
	ENDIF
C
C generate a geometry for this feature
C
	GEOM = 0
	DIMENSION = 1
	IF (FRTGT.EQ.ARETYP) THEN
	   DIMENSION = 2
	ELSEIF (FRTGT .GE. UNOTYP .AND. 
     &		FRTGT .LE. TEXTYP) THEN
	   DIMENSION = 0
	ENDIF
C
	IF (GEOM_FROM_IFF(GEOM,DIMENSION,FRTGT)) GOTO 900
C
	IF (CHK_GEOMETRIES(GEOMETRY(SELECTED_GEOM),GEOM,CUT_TYPE)) THEN
	   CALL GEOM_DESTROY(GEOM)
	   GOTO 900
	ENDIF
C
	IF (CUT_TYPE .EQ. 1) THEN
	   TSTGEOM =  SELECT_IN_GEOM
	ELSEIF (CUT_TYPE .EQ. 2) THEN
	   TSTGEOM =  SELECT_OUT_GEOM
	ELSEIF (CUT_TYPE .EQ. 3) THEN
	   TSTGEOM =  SELECT_CUT_GEOM
	ELSEIF (CUT_TYPE .EQ. 4) THEN		! always accept
	   TSTGEOM = .TRUE.
	ENDIF
C
	CALL GEOM_DESTROY(GEOM)
C
 900	CONTINUE
C
C reposition onto NF pointer
	CALL IFFPKE(IECODE,IELEN,NFPTR)
	IF (IECODE.NE.'NF') THEN
	   CALL NASTY(MSG_BADPNF)
	   CALL COLAPS(MSG_BADPNF)
	ENDIF
	END

