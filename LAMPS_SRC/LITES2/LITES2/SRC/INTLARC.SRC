C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1987-02-23 14:41:36.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL FUNCTION INTLARC(LINE,AUX,LIMITS,NUM,POINT1,POINT2,TOUCH)
C
***	MODULE	INTLARC
***	IDENT	23FE87
C
C Copyright Laser Scan Laboratories Ltd., Cambridge, England.
C Author  Ron Russell
C
C To find the intersection point(s) of a line segment and an arc
C that lie within both the line and the arc
C
C LINE is the line segment (first subscript x or y, second
C subscript point 1 or 2).
C AUX is the auxiliary array containing info about the arc.
C LIMITS is the box surrounding the arc 
C     in order MINX,MAXX,MINY,MAXY
C NUM returns the number of intersection points (if any)
C POINT1 and POINT2 return the intersecion points, if any.
C TOUCH is TRUE if the line segment is a tangent to the arc
C
C The function returns TRUE iff the line does not cut arc
C
	IMPLICIT NONE
C
***	PARAMETER/CMN:AUXDEF/
***	PARAMETER/CMN:CONSTS/
C
C arguments
	REAL	LINE(2,2)
	REAL	AUX(AUXLEN)
	REAL	LIMITS(4)
	INTEGER	NUM
	REAL	POINT1(2),POINT2(2)
	LOGICAL TOUCH
C
C w/s
	INTEGER INLIN(2)
	INTEGER INARC(2)
	INTEGER	NUMBER
	REAL	P1(2),P2(2)
C
	INTLARC = .TRUE.
	NUM     = 0
	TOUCH = .FALSE.
C
C test if box round line, intersects box round arc
C
	IF (MIN(LINE(1,1),LINE(1,2)).GT.LIMITS(2).OR.
     &	    MAX(LINE(1,1),LINE(1,2)).LT.LIMITS(1).OR.
     &	    MIN(LINE(2,1),LINE(2,2)).GT.LIMITS(4).OR.
     &	    MAX(LINE(2,1),LINE(2,2)).LT.LIMITS(3))    GOTO 999
C
C calculate intersection
C
	CALL LINARC(LINE,AUX,NUMBER,P1,P2,INLIN,INARC,TOUCH)
C
C perhaps no intersection
C
	IF (NUMBER.EQ.0) GOTO 999
C
C First point within both arc and line?
C
	IF (INLIN(1).GE.-1.AND.INLIN(1).LE.1.AND.
     &	    INARC(1).GE.-1.AND.INARC(1).LE.1) THEN
	   NUM = 1
	   POINT1(1) = P1(1)
	   POINT1(2) = P1(2)
	ENDIF
C
C second point within both arc and line?
C
	IF (NUMBER.EQ.2.AND.
     &	    INLIN(2).GE.-1.AND.INLIN(2).LE.1.AND.
     &	    INARC(2).GE.-1.AND.INARC(2).LE.1) THEN
	   NUM = NUM + 1
	   IF (NUM.EQ.1) THEN
	      POINT1(1) = P2(1)
	      POINT1(2) = P2(2)
	   ELSE
	      POINT2(1) = P2(1)
	      POINT2(2) = P2(2)
	   ENDIF
	ENDIF
C
C had any intersections?
C
	IF (NUM.EQ.0) TOUCH = .FALSE.
	INTLARC = NUM.EQ.0
C
999	RETURN
	END
