C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1989-11-13 13:41:46.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE STRTAUX(IOSB,AST,BUFLEN,BUFFER)
C
***	IDENT	13NO89
***	MODULE	STRTAUX
C
C	Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C	Created					RWR	18-Sep-1987
C
C Description
C
C To put up the reads for auxiliary input lines
C If QIO fails, then event flag is set; so clear it
C
	IMPLICIT NONE
C
***	COMMON/CMN:VAREFN/
***	COMMON/CMN:WORKS/
C
C arguments
	INTEGER*2	IOSB(4,AUX_LINES)	! array of IOS blocks
	INTEGER*4	AST			! AST to call
	INTEGER		BUFLEN			! length of buffers
	BYTE		BUFFER(BUFLEN,AUX_LINES)! array of buffers
C
C w/s
	INTEGER		K	! loop counter
	LOGICAL*1	TEMPABORT,TEMPREAD
C
C function
	LOGICAL		AUXACT
C
C put up reads for auxiliary inputs
C (only do this if previous auxiliary input has been serviced)
C
	IF (AUXACT().AND..NOT.AUX_READ) THEN
	   DO 10,K = 1,AUX_LINES
	      IF (AUX_ACTIVE(K).AND.AUX_SERVICED(K)) THEN
	         TEMPABORT = .NOT.AUX_ACTIVE(K)
	         TEMPREAD  = .FALSE.
	         CALL QIOUP(AUX_ASN(K),
     &			AUX_NAME(K)(1:AUX_NAME_LEN(K)),
     &			AUX_CHANNEL(K),
     &			AUXFLG,
     &			IOSB(1,K),
     &			AST,
     &			BUFLEN,
     &			BUFFER(1,K),
     &			TEMPREAD,
     &			TEMPABORT)
C
C TEMPREAD is set if read is successful, TEMPABORT is set if assign fails
	         AUX_ACTIVE(K) = .NOT.TEMPABORT.AND.TEMPREAD
	         AUX_READ = AUX_READ.OR.TEMPREAD
	         AUX_SERVICED(K) = .FALSE.
C
C if assign suceeded, and QIO failed, event flag is set; so clear it
	         IF (.NOT.TEMPABORT.AND..NOT.TEMPREAD) THEN
	            CALL SYS$CLREF(%VAL(AUXFLG))
	         ENDIF
	      ENDIF
10	   CONTINUE
	ENDIF
C
	RETURN
	END
