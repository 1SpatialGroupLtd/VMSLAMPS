C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1992-09-16 12:27:12.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE STRTSQ
C
***	IDENT	16SE92
***	MODULE	STRTSQ
C
C	Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C	Created					RWR	15-Mar-1985
C
C Description
C
C	To copy a feature to be squared into the D14WK1 and D14DV1
C	arrays
C
	IMPLICIT NONE
C
C Arguments
C
	INCLUDE	'LSL$CMNIFF:CB.STR'
***	PARAMETER/CMN:AUXDEF/
***	PARAMETER/CMN:PACK/
***	PARAMETER/CMN:STAPAR/
C
C Common Blocks
C
***	COMMON/CMN:DRAWIN/
***	COMMON/CMN:D14IFC/
***	COMMON/CMN:MASTER/
***	COMMON/CMN:STRIKE/
C
C Local Variables
	INTEGER		X,Y
	PARAMETER 	(X=1)
	PARAMETER	(Y=2)
C
	INTEGER I,J,K
	INTEGER LISTLEN
C
C fuctions
	LOGICAL CHK_PRIV_LIST
C
C copy feature into squaring buffer 
C and mark invisibles (note: use invisible FROM here)
	D14NPT = FOLST
	D14NPT_INITIAL = FOLST
	THSVRT = FOVRT
	ONVRT  = FONVRT
	HAD_PRIV = .FALSE.		! no privileged points yet
	NPRIV = 0
	J=1				!  start at first vertex
   10	CONTINUE
	CALL GETVRT(FOPAK,J,D14NPT)	! get some vertices
	DO 50, I=1,RITOP
	   K=I+RIVO
	   D14WK1(X,K)=RIXY(X,I)
	   D14WK1(Y,K)=RIXY(Y,I)
	   IF ((K).GT.1) D14IV1(K-1)=RIFLG(I).EQ.0 ! invisible=.TRUE.
C
C copy attributes into a list, if there are any
	   IF (RINATT.GT.0) THEN
	      CALL ARRLST(RINATT,RIATTC,RIATTV(1,I),D14AT1(K),LISTLEN)
	   ELSE
	      D14AT1(K) = 0
	   ENDIF
C
C check if this point is privileged
	   D14FD1(K) = .FALSE.
	   IF (RINATT.GT.0.AND.PRIV_PT_LIST.GT.0) THEN
	      IF (CHK_PRIV_LIST(PRIV_PT_LIST,RINATT,RIATTC,RIATTV(1,I)))
     &	            THEN
	         D14FD1(K) = .TRUE.
	         HAD_PRIV = .TRUE.
	         NPRIV = NPRIV + 1
	      ENDIF
	   ENDIF
	   D14PT1(K) = K		! pointer to this point
   50	CONTINUE
	J=J+RITOP
	IF (J.LE.D14NPT) GOTO 10	! havn't read all the points
	   				! in the feature yet
C
	D14IV1(1) = .FALSE.		! first point always visible
	D14IV1(D14NPT) = .FALSE.	! last point always visible
C
C
C Return
C
	RETURN
	END
