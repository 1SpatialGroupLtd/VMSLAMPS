C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1994-09-23 09:33:56.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE TRXWIN(IFF_TO_IMAGE)
C
***	MODULE	TRXWIN
***	IDENT	23SE94
C
C Copyright Laser Scan Laboratories Ltd., Cambridge, England.
C Author Clarke Brunt	9-Dec-1988
C
C To adjust WINDOW to/from screen space using the IMAGE SETUP transform
C
	IMPLICIT NONE
C
***	COMMON/CMN:DRAWIN/
***	COMMON/CMN:MASTER/
***	COMMON/CMN:SETUP/
C
C argument
	LOGICAL	IFF_TO_IMAGE	! if TRUE, forward transformation
C
C w/s
	REAL	X(4),Y(4)
C	
C set up 4 corners of WINDOW
	X(1) = WINDOW(1)
	Y(1) = WINDOW(3)
	X(2) = WINDOW(2)
	Y(2) = WINDOW(3)
	X(3) = WINDOW(2)
	Y(3) = WINDOW(4)
	X(4) = WINDOW(1)
	Y(4) = WINDOW(4)
C
C transform them
	IF (IFF_TO_IMAGE) THEN
  	   CALL TRNUSE(X(1),Y(1),SETCOF,SET_TRANSFORM)
	   CALL TRNUSE(X(2),Y(2),SETCOF,SET_TRANSFORM)
	   CALL TRNUSE(X(3),Y(3),SETCOF,SET_TRANSFORM)
	   CALL TRNUSE(X(4),Y(4),SETCOF,SET_TRANSFORM)
	ELSE
  	   CALL WARP_BACK(X(1),Y(1))
  	   CALL WARP_BACK(X(2),Y(2))
  	   CALL WARP_BACK(X(3),Y(3))
  	   CALL WARP_BACK(X(4),Y(4))
	ENDIF
C
C and force within LIMITS
	WINDOW(1) = MAX( MIN(X(1),X(2),X(3),X(4)), LIMITS(1) )
	WINDOW(2) = MIN( MAX(X(1),X(2),X(3),X(4)), LIMITS(2) )
	WINDOW(3) = MAX( MIN(Y(1),Y(2),Y(3),Y(4)), LIMITS(3) )
	WINDOW(4) = MIN( MAX(Y(1),Y(2),Y(3),Y(4)), LIMITS(4) )
C
	RETURN
	END
