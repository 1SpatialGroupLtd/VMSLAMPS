C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1991-09-09 14:16:20.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL FUNCTION INIMEN(AMENU)
C
***	IDENT	09SE91
***	MODULE	INIMEN
C
C	Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C	Created					RJH	10-DEC-1984
C
C
	IMPLICIT NONE
C
***	PARAMETER/LSL$CMNLSL:LSLLIBMSG/
***     PARAMETER/CMN:MACMEN/		! macros, menus and puck buttons
***     PARAMETER/CMN:MERPAR/		! macro error constants
***     PARAMETER/CMN:MOANMESS/		! moan constants
C
***	COMMON/CMN:DMACRD/		! macro reading results
***     COMMON/CMN:DOUT/		! command decoding output
***	COMMON/LSL$CMNLSL:EXCEPTION/	! ERROR handling
***     COMMON/CMN:GLOBAL/		! global variables
***     COMMON/CMN:MACRO/		! macro variables
C
C Arguments
	LOGICAL		AMENU		! initialising menu, not puck ?
C
C Functions called
	INTEGER*4	GETMAC		! gets macro name
	LOGICAL		CHKSAM		! checks full name given
	LOGICAL		ADDMAC		! checks and adds name to table
	INTEGER*4	SIGCHS
C
C Local Variables
	INTEGER*4	RETCOD		! macro reading return code
	LOGICAL		NEW		! new macro name ?
C
	NEW = .FALSE.
C
C Find the number of significant characters in the macro name, so that
C trailing spaces or tabs can be ignored.
C
	DSTRL = SIGCHS(DSTR(1:DSTRL))
C
C Try reading name from the table
C
	RETCOD = GETMAC(DSTR(1:DSTRL),.FALSE.)
C
C If the name was found in the table, check that it has been given in
C full. If the name has been abbreviated, it is assumed that a new
C menu is to be defined, similarly if the name is ambiguous between two
C existing ones. Note that using the full MENU command string
C argument in this comparison forces previously defined menu names
C with their box numbers to be considered as new names. An attempt to
C to add these names to the command table will result in failure due
C to illegal characters.
C
	IF ((RETCOD .EQ. 0) .OR. (RETCOD .EQ. MEREOL)) THEN
	   NEW = CHKSAM(DSTR(1:DSTRL),DMAC(1:DMACL))
	ELSEIF ((RETCOD .EQ. MERCLB) .AND. (ERRNUM .EQ. LSL__AMBIG)) THEN
	   NEW = .TRUE.
	ENDIF
C
C Check that there have been no errors
C
	IF (.NOT. MOANED) THEN
C
C If the name was successfully found in the table and given in full, 
C it is assumed to be a macro name and a message is output.
C
	   IF ((RETCOD .EQ. 0) .AND. (.NOT. NEW)) THEN
	      CALL MOAN(MSG_DEFINEDASMAC,DMAC(1:DMACL))
C
C If the name was not found in the table, or if it was found but the
C name given was abbreviated, add the new name to the table.
C
	   ELSE IF ((RETCOD .EQ. MERUXS) .OR. NEW) THEN
	     MENADD = MENADD+1
	     CALL ADDMAC(DSTR,DSTRL,MACSAV,MENADD,.TRUE.)
C
C If extraneous stuff on line, output a message
C
	   ELSE IF (RETCOD .EQ. MEREXT) THEN
	      CALL MOAN(MSG_ILLEGNAME,'menu or puck',DSTR(1:DSTRL))
C
C If there was an unexpected end of line, an argument must have been
C expected; the name typed must therefore be a menu which has
C already been defined, so output a message
C
	   ELSE IF ((RETCOD .EQ. MEREOL) .AND. (.NOT. NEW)) THEN
	      CALL MOAN(MSG_MENDEFINED,DMAC(1:DMACL))
C
C If there was an error reading the name, output the appropriate message
C
	   ELSE
	      IF (AMENU) THEN
	         CALL ERRMAC(RETCOD,'menu name')
	      ELSE
		 CALL ERRMAC(RETCOD,'puck name')
	      ENDIF
	   ENDIF
	ENDIF
C
	INIMEN = MOANED
C
	RETURN
	END
