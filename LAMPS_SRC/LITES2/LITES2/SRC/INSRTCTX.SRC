	SUBROUTINE INSRTCTX(CTXD)
C
***	IDENT	09MY96
***	MODULE	INSRTCTX
C
C Copyright Laser-Scan Laboratories Ltd., Cambridge, England
C
C Author Ron Russell					11-Nov-1986
C
C To insert an text component into the CTX list, after the home one, and
C make it the current one
C Data about the text (TH,RO,ST,TS entries) must be already present in 
C CTXBUFL and the text itself should be in CTXTEXT, with its length in
C the descriptor in CTXBUFL
C
	IMPLICIT NONE
C
***	PARAMETER/CMN:CTXS/
C
***	COMMON/CMN:CTXS/
C
C arguments
	INTEGER*4	CTXD(CTXDLEN)	! CTX desriptor block
C
C function called
	LOGICAL		GET_MEM
C
C workspace
	INTEGER*4	ADDR		! for address of new block
	INTEGER		NEXT		! address of CTX after home one
C 
C Get address for new entry
	IF (GET_MEM(CTX_ZONE,ADDR,CTXLENB)) GOTO 999	! failed
C
C Initialise dynamic string descriptor
	CALL INIDSC(%VAL(ADDR + CTX_O_DESC))
C
C this has no attributes, so set to 0
	CALL PUTLNG(0,%VAL(ADDR + CTX_O_ATTR))
C
C Chain CTX after home CTX
	CALL PUTLNG(%VAL(CTXD(CTXD_HOME)+CTX_O_NXTPTR),NEXT)
	CALL PUTLNG(ADDR,%VAL(CTXD(CTXD_HOME)+CTX_O_NXTPTR))
	IF (NEXT.NE.0) CALL PUTLNG(ADDR,%VAL(NEXT+CTX_O_PREPTR))
C
C Now set pointers in buffer itself
	CTXBUFL(CTX_L_PREPTR) = CTXD(CTXD_HOME)   ! pointer to previous
	CTXBUFL(CTX_L_NXTPTR) = NEXT		! pointer to next
C
	IF (CTXD(CTXD_LSTCTX).EQ.CTXD(CTXD_HOME)) ! then new last CTX
     &	      CTXD(CTXD_LSTCTX) = ADDR
	CTXD(CTXD_NCTX) = CTXD(CTXD_NCTX)+1	! count it
	CALL MOVCTX(CTXBUFL,%VAL(ADDR))	! insert in CTX sector
	CURCTX = ADDR			! this CTX now current
	CTXD(CTXD_CUR) = ADDR		! and current for this CTXD
C
999	RETURN
	END
