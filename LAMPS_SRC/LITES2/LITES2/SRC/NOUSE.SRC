C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1993-10-26 13:09:44.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL FUNCTION NOUSE
C
***	IDENT	26OC93
***	MODULE	NOUSE
C
C	Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C	Created					RWR	13-May-1985
C
C	Function to test if found object and object in hand should be
C	edgematched. Returns .TRUE. if not.
C
	IMPLICIT NONE
C
***     PARAMETER/CMN:ACS/
***     PARAMETER/CMN:AUXDEF/
	INCLUDE	'LSL$CMNIFF:CB.STR'
***     PARAMETER/CMN:PACK/
C
***	COMMON/CMN:ACS/
***     COMMON/CMN:EDGE/
***	COMMON/CMN:LAYERS/
***     COMMON/CMN:STRIKE/
C
C Functions called
	INTEGER		OBJSDE
	LOGICAL		EQACS
C
C Local Variables
	INTEGER		SIDEFO		! side of edgeing line this
					! feature is on
	LOGICAL*1	THSFLS,THAFLS
	CHARACTER*30	MESS		! variable part of message
	CHARACTER*(*)	NOMAT
	PARAMETER	(NOMAT=' does not match')
C
C assume success
	NOUSE=.FALSE.
C
C 1) Test if feature lies along base line (for a signifcant portion of
C    its length)
C
	SIDEFO=OBJSDE(FOVRT,FOLST,FOTOP,FOXY,EDGLNE)
	IF (SIDEFO.EQ.0) THEN
	   MESS = 'has part lying along baseline'
	   GOTO 900
	ENDIF
C
C 2) Test if features lie on same side of base line
C
	IF (SIDEIH.EQ.SIDEFO) THEN
	   MESS = 'lies on same side of baseline'
	   GOTO 900
	ENDIF
C
C 3) Test if found feature is base line
C
	IF (FOPAK(PAKPNF).EQ.EDLPNF.AND.FOPAK(PAKMAP).EQ.EDLMAP) THEN
	   MESS = 'is base line'
	   GOTO 900
	ENDIF
C
C 4) Test for matching FCs
C
	IF (SMATFC.AND.(FOPAK(PAKFC).NE.IHPAK(PAKFC))) THEN
	   MESS = 'Feature code'//NOMAT
	   GOTO 900
	ENDIF
C
C 5) Test for matching FSNs
C
	IF (SMATFSN.AND.(FOPAK(PAKFSN).NE.IHPAK(PAKFSN))) THEN
	   MESS = 'FSN'//NOMAT
	   GOTO 900
	ENDIF
C
C 6) Test for matching maps
C
	IF (SMATMAP.AND.(FOPAK(PAKMAP).NE.IHPAK(PAKMAP))) THEN
	   MESS = 'Map'//NOMAT
	   GOTO 900
	ENDIF
C
C 7) Test for matching layers
C
	IF (SMATLAY) THEN
	   IF (OVNOS(FOPAK(PAKOVL)).NE.OVNOS(IHPAK(PAKOVL))) THEN
	      MESS = 'Layer'//NOMAT
	      GOTO 900
	   ENDIF
	ENDIF
C
C 8) Test for matching process codes
C
	IF (SMATPC.AND.((FOFS(3).AND.16383).NE.(IHFS(3).AND.16383)))
     &	                                                          THEN
	   MESS = 'Process code'//NOMAT
	   GOTO 900
	ENDIF
C
C 9) Test for matching ACs
C
	IF (SMATAC) THEN
C
C	   get ACs into FOACS arrays
C
	   CALL GETACS(FOPAK,FOTC,FOAC,FOMACD)
C
C check ACs
C
	   IF (.NOT.EQACS()) THEN
	      MESS = 'ACs do not match'
	      GOTO 900
	   ENDIF
	ENDIF
C
C Last) Test if found feature has been "searched for" before. This should
C    mean that it has been moved already, as otherwise it would have been
C    matched from the other end.
C
C    NB: THIS TEST SHOULD ALWAYS BE THE LAST ONE
C    ===========================================
C
	THSFLS=(FOPAK(PAKFLG).AND.THIFLG).NE.0	! this flag set?
	THAFLS=(FOPAK(PAKFLG).AND.THAFLG).NE.0	! that flag set?
C
	IF ((JOIFST.AND.THSFLS).OR.
     &	     (.NOT.JOIFST.AND.THAFLS)) THEN
	   MESS = 'has already been moved'
	   GOTO 900
	ENDIF
C
 	GOTO 950
C
  900	CALL EXPAND(
     &	         '%WSFSN %^W%N (map %^W%N) '//MESS,
     &	         MSGES(HITITC-HITSAV+1),FOPAK(PAKFSN),FOPAK(PAKMAP)+1)
	NOUSE=.TRUE.
C
  950	RETURN
	END
