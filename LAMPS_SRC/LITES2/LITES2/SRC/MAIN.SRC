C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1987-02-11 16:24:30.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	PROGRAM MAIN
C
***	IDENT	11FE87
***	MODULE	MAIN
C
C	Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C	Created					RJH	21-SEP-1984
C
C Description
C
C    LITES2 Main Program
C
	IMPLICIT NONE
C
***     COMMON/CMN:GLOBAL/		! global variables
***	COMMON/CMN:MASTER/		! for POSCMD
C
	EXTERNAL  	EXCP_HANDLER	! exception handler
	EXTERNAL 	TWOEXH		! exit handler
	EXTERNAL 	TWOPUT		! replacement for VIOPUT
					! needed to pull it from library
C
C workspace
	INTEGER*4 	DESBLK(4)	! descr. block for exit handler
	INTEGER*4 	STATUS		! exit status
	INTEGER*4	I		! loop count
C
C Functions called
	LOGICAL		INIT		! LITES2 initialisation
	LOGICAL		STORE		! store command only ?
C
C Set up condition handlers and enable exceptions
	CALL LIB$ESTABLISH(EXCP_HANDLER)
C
C Initialise clock
	CALL LSL_INIT(.TRUE.)
C
C Set up exit handler
	DESBLK(2) = %LOC(TWOEXH)
	DESBLK(3) = 1
	DESBLK(4) = %LOC(STATUS)
	CALL SYS$DCLEXH(DESBLK)
C
C suppress fatality of arithmetic errors
	DO 10 I=70,73
	   CALL ERRSET(I,.TRUE.,.FALSE.,.FALSE.,.TRUE.,10000)
10	CONTINUE
C
C LITES2 initialisation
	IF (INIT()) GOTO 200
C
C Start of repeat loop
100	CONTINUE
C
C Call main loop routines to constrain cursor, check for symbol/text
C modification, and update the refresh picture
	CALL UPDATE
C
	CALL NXTCMD			! get next command
	POSCMD = .FALSE.		! cancel 'position command' flag
	IF (STORE()) THEN		! command only to be stored ?
	   CALL STOCMD			! store command in a macro
	ELSE				! command to be executed
	   CALL DOCMD			! obey command
	ENDIF
C
C Check not finished
	IF (.NOT. DONE) GOTO 100
C
C Finished now, so close files and tidy up
	CALL TIDY
C
200	CALL EXIT
	END
