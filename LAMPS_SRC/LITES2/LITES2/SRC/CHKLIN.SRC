C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1987-12-14 17:59:16.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL FUNCTION CHKLIN(SUPPRESS)
C
***	IDENT   05DE86
***	MODULE  CHKLIN
C
C	Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C	Written					RWR	 5-Dec-1986
C
C Description
C
C	To check that there is a linear found object or an arc.
C	Returns .TRUE. if there is.
C
	IMPLICIT NONE
C
C argument
	LOGICAL		SUPPRESS	! suppress messages if in
					! TEXT or MODIFY (text) state
	INCLUDE	'LSL$CMNIFF:CB.STR'
***	PARAMETER/CMN:AUXDEF/
***	PARAMETER/CMN:MOANMESS/
***	PARAMETER/CMN:PACK/
***	PARAMETER/CMN:STAPAR/
C
***	COMMON/LSL$CMNFRT:FRTCOM/
***	COMMON/CMN:OIIH/
***	COMMON/CMN:STATE/
***     COMMON/CMN:STRIKE/
C
C w/s
	LOGICAL		SUPP		! suppress messages
C
	SUPP = SUPPRESS.AND.
     &	       (SINDEX.EQ.STATE_TEXT.OR.
     &	        (SINDEX.EQ.STATE_MODIFY.AND.COIPAK(PAKGT).EQ.TEXTYP))
C
	CHKLIN = .FALSE.		! assume not linear FO or arc
C
	IF (.NOT.FO) THEN
	   IF (.NOT.SUPP) CALL MOAN(MSG_NOFEATURE)	! no found object
	ELSEIF (FOPAK(PAKGT).GE.UNOTYP .AND.
     &	    FOPAK(PAKGT).LE.TEXTYP) THEN
	   IF (.NOT.SUPP) CALL MOAN(MSG_NOTLINEARC)
	ELSE
	   CHKLIN = .TRUE.
	ENDIF
C
	RETURN
	END
