C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1987-12-12 12:23:00.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE REVLIN(ALL)
C
***	IDENT	12DE87
***	MODULE	REVLIN
C
C	Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C	Created					RJH	11-MAR-1985
C
C Description
C
C    This subroutine is part of LITES2, and its purpose is to reverse
C the current line construction. It should only be called if the whole
C construction is less than one buffer load of points.
C
	IMPLICIT NONE
C
	INCLUDE	'LSL$CMNIFF:CB.STR'
***     PARAMETER/CMN:START/		! digitising procedures
C
***	COMMON/CMN:CSTRCT/		! feature being constructed
C
C Arguments
	INTEGER*4	ALL		! total number of points
C
C Local Variables
	INTEGER*4	MID		! mid-point in buffer
	INTEGER*4	TOP		! top point being swapped
	INTEGER*4	CURFLG		! flags for current point
	INTEGER*4	NXTFLG		! flags for next point
	INTEGER*4	I		! counter
	INTEGER*4	J		! counter
	REAL		TEMPXY(2)	! temporary point
	INTEGER*4	TEMPLST		! temporary list header
C
C Check that there are more than two points
C
	IF (ALL .GE. 2) THEN
C
C Reverse all points and flags
C
	   MID = ALL/2			! find mid-point
	   DO 20 I=1,MID
	      TOP = ALL-(I-1)		! index of top point swapping
	      DO 10 J=1,2
		 TEMPXY(J) = CONXY(J,I)
		 CONXY(J,I) = CONXY(J,TOP)
		 CONXY(J,TOP) = TEMPXY(J)
10	      CONTINUE
	      TEMPLST = CONLST(I)
	      CONLST(I) = CONLST(TOP)
	      CONLST(TOP) = TEMPLST
	      CURFLG = CONFLG(I)
	      CONFLG(I) = CONFLG(TOP)
	      CONFLG(TOP) = CURFLG
20	   CONTINUE
C
C Shift flags for all points up one position, except for those with the
C curve flag set
C
	   NXTFLG = CONFLG(ALL)
	   DO 30 I=ALL,2,-1
	      CURFLG = NXTFLG
	      NXTFLG = CONFLG(I-1)
	      IF (IAND(CURFLG,START_CURVE) .EQ. 0) THEN	   ! not a curve
		 IF (IAND(NXTFLG,START_CURVE) .EQ. 0) THEN ! not a curve
		    CONFLG(I) = CONFLG(I-1)		   ! shift flags
		 ELSE					   ! a curve
		    CONFLG(I) = START_VISIBLE		   ! vis. flag
		 ENDIF
	      ENDIF
30	   CONTINUE
	   CONFLG(1) = START_VISIBLE			! assume visible
	ENDIF
C
	RETURN
	END
