C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1993-04-02 14:50:28.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE DOINQU
C
***	IDENT	02AP93
***	MODULE	DOINQU
C
C	Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C	Written				Clarke Brunt	16-Jan-1986
C
C	LITES2 cartographic editor INQUIRE command
C
C Expect a command of the form INQUIRE variable [prompt]
C
        IMPLICIT NONE
C
	INCLUDE	'LSL$CMNIFF:CB.STR'
***	PARAMETER/CMN:CHARS/
***	PARAMETER/CMN:MOANMESS/
C
***	COMMON/CMN:DOUT/
***	COMMON/CMN:GLOBAL/
***	COMMON/CMN:MASTER/
***	COMMON/CMN:OPTION/
***	COMMON/CMN:PROMPT/
***	COMMON/LSL$CMNLSL:TXTC/
***	COMMON/CMN:VARIABLE/
***	COMMON/CMN:WORKS/
C
C function called
	LOGICAL	RDCHS
	INTEGER	FINSTR,CPYSTR
	INTEGER	MINDEX
	INTEGER	EXPAND
	BYTE	GET_VARBYTE
C
C workspace
	INTEGER		LENGTH
	BYTE		CH
	LOGICAL*1	CTRLZ
	INTEGER		TYPE
	CHARACTER*10	VARTYP(4)
	INTEGER		L(4)
	DATA		VARTYP/'Integer ','Real ','Character ','Double '/
	DATA		L/8,5,10,7/	! lengths of types
C
	CTRLZ = .FALSE.		! not had a CTRL/Z
	LENGTH = 0		! zero string length
C
C if not running interactively (SYS$INPUT not a terminal), then stop!
C
	IF (.NOT.ITERM) THEN
	   CALL GETOUT(MSG_NOTINTERACTIVE)
	   GOTO 997
	ENDIF
C
C set auxiliary buffer onto the string
	CALL SETAUX(%REF(DSTR),DSTRL)
C
C Find variable name.
C Don't permit system, must exist, subscript required, not substituting
	CALL FINVAR(.FALSE.,.TRUE.,.TRUE.,.FALSE.)
C
	IF (MOANED) GOTO 999
C
C get the type of variable
	TYPE = GET_VARBYTE(%VAL(VAR_DESC_ADDRESS),3,DVARN)
	IF (TYPE.EQ.5) TYPE = 3		! pretend char array is just char
C
C Is there a prompt (rest of line)?
	IF (RDCHS(CH)) THEN
	   PRILEN = CPYSTR(
     &	 'Enter '//VARTYP(TYPE)(:L(TYPE))//DVAR(:DVARL)//': ',PINSTR)
	ELSE
	   CALL BSCH
	   PRILEN = FINSTR(PINSTR,'string')
	ENDIF
	IF (MOANED) GOTO 999
C
C get a line from interactive devices
	PROINQ = .TRUE.			! want INQUIRE prompt
	TTPROM = .TRUE.			! need new prompt
10	CALL INTERACT(CTRLZ)		! get line
C
C get another line if nothing entered, unless it is a character variable,
C or CTRL/Z or CTRL/C have been pressed
	IF (TXTPTR.EQ.0.AND.TYPE.NE.3.AND.
     &		.NOT.CTRLZ.AND.CTRLC.EQ.CTRLC_OFF) GOTO 10
	PROINQ = .FALSE.		! cancel prompt
	TTPROM = .TRUE.			! need new prompt
C
C if cursor was moved in INTERACT, then generate a POS command, so that
C journal file will be correct
	IF (POSPND) THEN
	   IF (CSZI.EQ.IFF_ABSENT) THEN
	      LENGTH = EXPAND('%W%%POS %G0.8 %G0.8#',
     &				%REF(INQSTR),CSXY(1),CSXY(2))
	   ELSE
	      LENGTH = EXPAND('%W%%POS %G0.8 %G0.8 %G0.8#',
     &				%REF(INQSTR),CSXY(1),CSXY(2),CSXY(3))
	   ENDIF
	ENDIF
C
	IF (MOANED.OR.CTRLZ.OR.CTRLC.NE.CTRLC_OFF) GOTO 998
C
C make sure the line has no terminators (#) in it
	IF (TXTPTR.GT.0) THEN
	   IF (MINDEX(TXTDSC,CHAR(TERM)).NE.0) THEN
	      CALL MOAN(MSG_TERMINQ,TERM)
	      GOTO 998
	   ENDIF
	ENDIF
C
C set up command line with %LET variable=string
	INQSTR(LENGTH+1:LENGTH+DVARL+6) = '%LET '//DVAR(:DVARL)//'='
	LENGTH = LENGTH+DVARL+6
997	IF (TXTPTR.GT.0) LENGTH = LENGTH+CPYSTR(TXTDSC,INQSTR(LENGTH+1:))
C
C set up the line as the next command to be obeyed
998	IF (LENGTH.GT.0) CALL SETEXT(INQSTR(:LENGTH))
C
C If it looks like our command line is going to work (no MOANS, or
C ENABLE CONTINUE, and no CTRL/C) then dismiss pending POS command,
C otherwise leave POSPND alone for INTERACT to deal with
	IF ((CONOPT.OR..NOT.MOANED).AND.CTRLC.EQ.CTRLC_OFF
     &						) POSPND = .FALSE.
C
C error exit
999	IF (MOANED.OR.CTRLZ.OR.CTRLC.NE.CTRLC_OFF) CALL IGNCMD
C
1000	RETURN
	END
