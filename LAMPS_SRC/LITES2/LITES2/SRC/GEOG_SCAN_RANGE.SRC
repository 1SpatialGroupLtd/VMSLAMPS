        LOGICAL FUNCTION GEOG_SCAN_RANGE(MAP)
C
***	MODULE GEOG_SCAN_RANGE
***	IDENT 10MY96
C
C Copyright Laser-Scan Laboratories Ltd.,Cambridge,England
C 
C Author    Ron Russell				 24-Aug-1988
C
C       This function scans all the data in a file, transforms it
C	to LITES2 space, and resets the range
C	It returns .TRUE. for success
C
	IMPLICIT NONE
C
	INCLUDE	'LSL$CMNIFF:CB.STR'
***	PARAMETER/CMN:AUXDEF/
***	PARAMETER/CMN:EFNLUN/
***     PARAMETER/CMN:MOANMESS/		! moan constants
***	PARAMETER/CMN:PACK/
***	PARAMETER/CMN:STAPAR/
C
***	COMMON/CMN:CB/
***	COMMON/LSL$CMNIFF:IFFHAN/
***	COMMON/LSL$CMNIFF:IFFSTR/
***	COMMON/CMN:MAPS/
***	COMMON/CMN:STATE/
***	COMMON/CMN:STRIKE/
C
C arguments
C
C (input)
	INTEGER		MAP	! map whose range is to be converted
				! to LITES2 space
C
C function
	LOGICAL		GEOG_TRANS_ARRAY
	LOGICAL		HADCTRLC	! had a CTRL/C?
C
C w/s          
	INTEGER		I
	INTEGER*2	PTS		! for reading CB entry
	INTEGER*4	NPTS,START	! for counting CB points
	INTEGER*2	IELEN		! for reading from IFF
	REAL*4		RNGE(4)
C
C assume failure
	GEOG_SCAN_RANGE = .FALSE.
C
C Open IFF file for read, unless we have been called from IFFHDR, when
C it is already open
	IF (SINDEX .EQ. STATE_INITIAL) THEN
	   CALL IFFOPN(INLUN,IFFNAM(1,MAP),0)
	   IF (IERCD .NE. 0) THEN
	      CALL MOAN(MSG_IFFOPEN,MAP+1,IFFNAM(1,MAP))
	      GOTO 999
	   ENDIF
	   CALL IFFIRV(1)		! input revision level 1, for CB's
	ENDIF
	CALL IFFRWD
C
	RNGE(1) = 1E38			! initialise range
	RNGE(2) = -1E38
	RNGE(3) = 1E38
	RNGE(4) = -1E38
C
C get the next CB entry
20	CONTINUE
	IF (HADCTRLC()) GOTO 998
	CALL IFFNXC('CB',IELEN)
        IF (IELEN.EQ.-1) GOTO 998
	CALL EIHRCB_HEAD(CBH)
	PTS = CBH.NROW
	IF (PTS.LE.0) GOTO 20
C
C copy points from IFF in maximal chunks to minimise overheads
	IF (SIMPLE_XY.AND.PTS.LE.200) THEN	! simple ST format
	   CALL EIHRCB_DATA(RIXY)		! read direct to RIXY
	ELSE
	   CALL EIHRCB_DATA(CBD)		! read to scratch
	ENDIF
C
	START = 0
30	NPTS = MIN0(PTS, 200)
	IF (SIMPLE_XY) THEN
	   IF (START.NE.0.OR.PTS.GT.200) CALL VIOMV3(
     &			CBD.R(START*CBH.NCOL+1), 8*NPTS, RIXY )
	ELSE
	   CALL GETATT(RIXY,RINATT,STR_MAX_ATTR+1,
     &	                  RIATTC,RIATTV,0,START+1,START+NPTS)
	ENDIF
C
	START = START+NPTS
	PTS = PTS-NPTS
	DO 40 I = 1,NPTS
	   IF (GEOG_TRANS_ARRAY(MAP_SYS(MAP),MAP_ZONE(MAP),
     &	                        MAP_PARAMS(1,MAP),MAP_UNIT(MAP),
     &	                        MAPORG(1,MAP),
     &	                        LITES2SYS,LITES2ZONE,LITES2PAR,
     &	                        LITES2UNIT,LITES2ORG,
     &	                        1,RIXY(1,I))) THEN
	      RNGE(1) = MIN(RNGE(1),RIXY(1,I))
	      RNGE(2) = MAX(RNGE(2),RIXY(1,I))
	      RNGE(3) = MIN(RNGE(3),RIXY(2,I))
	      RNGE(4) = MAX(RNGE(4),RIXY(2,I))
	   ENDIF
40	CONTINUE
C
	IF (PTS.GT.0) GOTO 30
C
	GOTO 20
C
  998	IF (RNGE(1).LT.RNGE(2).AND.RNGE(3).LT.RNGE(4)) THEN
	   RANGE(1,MAP) = RNGE(1)
	   RANGE(2,MAP) = RNGE(2)
	   RANGE(3,MAP) = RNGE(3)
	   RANGE(4,MAP) = RNGE(4)
	   GEOG_SCAN_RANGE = .TRUE.
	ENDIF
	IF (SINDEX .EQ. STATE_INITIAL) THEN
	   CALL IFFCLO(INLUN)
	ENDIF
C
  999	RETURN
   	END
