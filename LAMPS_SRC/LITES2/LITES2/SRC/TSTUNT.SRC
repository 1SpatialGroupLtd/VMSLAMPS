C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1994-09-14 11:12:38.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE TSTUNT(IFF,NOPTS,PTS)
C
***	IDENT	14SE94
***	MODULE	TSTUNT
C
C	Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C	Created					RWR	18-Mar-1985
C
C	Subroutine to test if the UNITS command has been given, to
C	alter the type of units that are expected for the current
C	command, and to alter any values
C
	IMPLICIT NONE
C
***	COMMON/CMN:DRAWIN/
C
C Arguments
	LOGICAL		IFF	! .TRUE. if the calling routine expects
				! IFF units, .FALSE. if it expects mms
	INTEGER*4	NOPTS	! number of points to convert
	REAL		PTS(NOPTS) ! values to convert
C
C Local Variables
	INTEGER		I
	REAL		FAC
C
	IF (.NOT.(UNIT.EQ.0.OR.			! no UNIT command given
     &	         (IFF.AND.UNIT.EQ.1).OR.	! UNIT IFF and expect
						! IFF units
     &	         (.NOT.IFF.AND.UNIT.EQ.2))) THEN! UNIT MMS
						! and expect mms
	   IF (UNIT.EQ.3) THEN
	      FAC = 1.0/UNIT_FACTOR
	      IF (.NOT.IFF) FAC = FAC/SCLFRT
	   ELSE
	      IF (IFF) THEN
	         FAC = SCLFRT
	      ELSE
	         FAC = 1.0/SCLFRT
	      ENDIF
	   ENDIF
	   DO 10, I=1,NOPTS
	      PTS(I)=PTS(I)*FAC
   10	   CONTINUE	         
	ENDIF
C
C always clear UNIT command
C
	UNIT=0
C
	RETURN
	END
