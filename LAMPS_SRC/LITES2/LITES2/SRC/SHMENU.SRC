C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1996-05-13 11:17:18.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE SHMENU
C
***	IDENT	13MY96
***	MODULE	SHMENU
C
C	Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C	Created					RWR	 5-Feb-1985
C
C	Routine to list a particular menu, menu square, or to give a
C	list of	all available menus.
C
	IMPLICIT NONE
C
***     PARAMETER/CMN:MACMEN/
***	PARAMETER/CMN:MERPAR/		! error codesfrom macro reading
***     PARAMETER/CMN:MOANMESS/		! moan constants
C
***	COMMON/CMN:DMACRD/		! macro reading results
***     COMMON/CMN:DOUT/		! command decoding output
***	COMMON/CMN:MACRO/		! data about macros
***	COMMON/CMN:MENUS/
***	COMMON/LSL$CMNLSL:TXTC/
C
C Functions called
	INTEGER*4	GETMAC		! gets macro name
	LOGICAL		PRTMAC		! lists available macros/menus
	LOGICAL		HADBREAK
	INTEGER*2	GET_VARWORD
	INTEGER*4	GET_VARLONG
	INTEGER		LIB$EXTV
C
C Local Variables
	INTEGER*4	IER		! return codes
	INTEGER*4	I		! counter
	INTEGER*4	EXPNUM		! macro expansion number
	INTEGER*4	DESC(2)		! string descriptor
	LOGICAL		ABORT		! PRMACR aborted ?
C
	IF (DSTRIN) THEN		! command line entered with
					! argument, so look for macro
					! or menu name
	   IER = GETMAC(DSTR(1:DSTRL),.FALSE.)
	   IF (IER.EQ.0) THEN 		! found macro or menu and square
C
C form the name of the menu square
C
	      IF (DRARG.EQ.0) THEN
	         CALL MOAN(MSG_NOSUCHMENU,DMAC(1:DMACL))
	         GOTO 999
	      ELSE
	         CALL MACSTR		! form name in TXTDSC
	      ENDIF
C
C check if macro is 'hidden' (read from encrypted file)
C
	      IF (LIB$EXTV(DMACN-1,1,%VAL(MACENC_ADDR))) THEN
	         CALL INFORM(MSG_MACHIDDEN,TXTDSC)
	      ELSE
C
C output empty macro message, or expansion of the macro
C
	         IF (GET_VARWORD(%VAL(MACDSW_ADDR),1,DMACN).LE.0) THEN
		    CALL INFORM(MSG_EMPTYMACRO,TXTDSC)	! empty macro
	         ELSE
		    IF (GET_VARWORD(%VAL(MANDSW_ADDR),1,DMACN).LE.0) THEN
	               CALL INFORM(MSG_MACROEXPANSION,TXTDSC)
	            ELSE
	               DESC(1) = GET_VARLONG(%VAL(MANDSL_ADDR),
     &				1,MENINF(PTBASE,DTABN-MAXUSR)+DMACN)
	               DESC(2) = GET_VARLONG(%VAL(MANDSL_ADDR),
     &				2,MENINF(PTBASE,DTABN-MAXUSR)+DMACN)
	               CALL INFORM(MSG_MACROEXPANDESC,TXTDSC,DESC)
	            ENDIF
		    CALL INFORM(MSG_BLANK)
C
C Print macro on screen
C
		   CALL PRMACR(DMACN,.TRUE.,
     &			%VAL(MACDSW_ADDR),%VAL(MACDSL_ADDR),ABORT)
	         ENDIF
	      ENDIF
C
C	   menu name without a square number  --  output each square
C
	   ELSEIF (IER.EQ.MEREOL) THEN
C
C	      output header
C 
	      CALL INFORM(MSG_MENULST,DMAC(1:DMACL))
	      CALL INFORM(MSG_BLANK)
C
C	      output contents of each menu square in turn
C
	      DO 10, I=1,MENINF(PTSIZE,DTABN-MAXUSR)
C
C	          check for ctrl/c
C
	         IF (HADBREAK()) GOTO 999
C
	         EXPNUM = MENINF(PTBASE,DTABN-MAXUSR)+I
C
C check if macro is 'hidden' (read from encrypted file)
C
	         IF (LIB$EXTV(EXPNUM-1,1,%VAL(MACENC_ADDR))) THEN
	            CALL INFORM(MSG_NUM,I)
	            CALL INFORM(MSG_HIDDENMENU)
	         ELSE
		    IF (GET_VARWORD(%VAL(MANDSW_ADDR),1,EXPNUM).LE.0) THEN
	               CALL INFORM(MSG_NUM,I)
	            ELSE
	               DESC(1) = GET_VARLONG(%VAL(MANDSL_ADDR),1,EXPNUM)
	               DESC(2) = GET_VARLONG(%VAL(MANDSL_ADDR),2,EXPNUM)
	               CALL INFORM(MSG_NUMDESC,I,DESC)
	            ENDIF
	            IF (GET_VARWORD(%VAL(MACDSW_ADDR),1,EXPNUM).GT.0) THEN
	               CALL PRMACR(EXPNUM,.TRUE.,
     &			%VAL(MACDSW_ADDR),%VAL(MACDSL_ADDR),ABORT)
	               IF (ABORT) GOTO 999
	            ELSE
	               CALL INFORM(MSG_EMPTYMENU)
	            ENDIF
	         ENDIF
10	      CONTINUE
C
C	   cannot get a menu or macro name
C
	   ELSE				! error
	      CALL ERRMAC(IER,'menu/puck')
	      CALL IGNCMD
	   ENDIF
	ELSE				! no name on command line
	   IF (PRTMAC(%VAL(MACTAB_ADDR),.FALSE.)) THEN	! print defined
						! menus and pucks or
	      CALL MOAN(MSG_NOMENU)	! complain if there are none
	   ENDIF
	ENDIF
C
999	RETURN
	END
