	LOGICAL FUNCTION VIEW_GENERATE_PARAMETERS
C
***     IDENT   22MY91
***     MODULE  VIEW_GENERATE_PARAMETERS
C
C       Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C       Written                                 RWR	Apr-1989
C
C to pass the parameters required for generating a picture to VISALIB
C
C returns .TRUE. for failure
C
        IMPLICIT NONE
C
***	PARAMETER/CMN:CONSTS/
***	PARAMETER/CMN:EFNLUN/
***	PARAMETER/CMN:MOANMESS/
C
***     COMMON/LSL$CMNDTI:DTIHDR/
***	COMMON/CMN:IMAGE/
***	COMMON/CMN:MAPS/
***	COMMON/CMN:OVERLAY/
***	COMMON/CMN:VIEW/
C
C
C Functions
	INTEGER		CALLR
	LOGICAL		LIB$EXTZV
C
C w/s
	INTEGER		RETCOD
	INTEGER		IM
	INTEGER		LIGHT
	REAL		DX,DY,DZ
	REAL		DIST
	INTEGER		PIXLL(2)
	INTEGER		PIXUR(2)
	REAL		X,Y
	INTEGER		VC
	EQUIVALENCE	(VIEW_CURRENT,VC)
C
C assume failure
	VIEW_GENERATE_PARAMETERS = .TRUE.
C
C setup basic colours
	RETCOD = CALLR(VIEW_ID(VC),
     &	               VIEW_INDX(1,VC),
     &	               VIEW_RED(1,VC),
     &	               VIEW_GREEN(1,VC),
     &	               VIEW_BLUE(1,VC),
     &		       %VAL(VIEW_ADDRESSES(XVISA_SETUP_BASIC_COLOURS)))
	IF (.NOT.RETCOD) THEN
	   CALL MOAN(MSG_VISLIBERR)
	   CALL LITES2_SIGNAL(RETCOD)
	   GOTO 9999
	ENDIF
C
C setup ambient light
	RETCOD = CALLR(VIEW_ID(VC),
     &	               VIEW_AMBIENT_COLOUR(1,VC),
     &	               VIEW_AMBIENT_COLOUR(2,VC),
     &	               VIEW_AMBIENT_COLOUR(3,VC),
     &		       %VAL(VIEW_ADDRESSES(XVISA_SETUP_AMBIENT_LIGHT)))
	IF (.NOT.RETCOD) THEN
	   CALL MOAN(MSG_VISLIBERR)
	   CALL LITES2_SIGNAL(RETCOD)
	   GOTO 9999
	ENDIF
C
C reset light sources
	RETCOD = CALLR(VIEW_ID(VC),
     &		       %VAL(VIEW_ADDRESSES(XVISA_RESET_LIGHT_SOURCE)))
	IF (.NOT.RETCOD) THEN
	   CALL MOAN(MSG_VISLIBERR)
	   CALL LITES2_SIGNAL(RETCOD)
	   GOTO 9999
	ENDIF
C
C setup light sources
	DO 20, LIGHT = 1,MAXLIGHT
	   IF (VIEW_LIGHT_IN_USE(LIGHT,VC)) THEN
C
C only directional light sources at the moment
	      IF (VIEW_LIGHT_HAD_DISTANCE(LIGHT,VC)) THEN
	         DIST = VIEW_LIGHT_DISTANCE(LIGHT,VC)
	      ELSE
	         DIST = 1000.0
	      ENDIF
C
	      DX = DIST*SIN(VIEW_LIGHT_BEARING(LIGHT,VC)*PI/180.0)
	      DY = DIST*COS(VIEW_LIGHT_BEARING(LIGHT,VC)*PI/180.0)
	      DZ = DIST*TAN(VIEW_LIGHT_ELEVATION(LIGHT,VC)*PI/180)
	      RETCOD = CALLR(
     &	               VIEW_ID(VC),
     &	               1,		! all directional at present
     &	               VIEW_LIGHT_COLOUR(1,LIGHT,VC),
     &	               VIEW_LIGHT_COLOUR(2,LIGHT,VC),
     &	               VIEW_LIGHT_COLOUR(3,LIGHT,VC),
     &	               DX,
     &	               DY,
     &	               DZ,
     &	               %VAL(VIEW_ADDRESSES(XVISA_SETUP_LIGHT_SOURCE)))
C
	      IF (.NOT.RETCOD) THEN
	         CALL MOAN(MSG_VISLIBERR)
	         CALL LITES2_SIGNAL(RETCOD)
	         GOTO 9999
	      ENDIF
	   ENDIF
20	CONTINUE
C
C setup fog values
	RETCOD = CALLR(VIEW_ID(VC),
     &	               VIEW_DEPTH_ON(VC),
     &	               VIEW_FOG_ON(VC),
     &	               VIEW_SPHERE_DISTANCE(VC),
     &	               VIEW_DEPTH_DISTANCE(VC),
     &	               VIEW_FOG_DISTANCE(VC),
     &	               VIEW_FOG_FRONT(VC),
     &	               VIEW_FOG_BACK(VC),
     &	               VIEW_FOG_TOP(VC),
     &	               VIEW_FOG_BOTTOM(VC),
     &		       %VAL(VIEW_ADDRESSES(XVISA_SETUP_FOG)))
	IF (.NOT.RETCOD) THEN
	   CALL MOAN(MSG_VISLIBERR)
	   CALL LITES2_SIGNAL(RETCOD)
	   GOTO 9999
	ENDIF
C
C set illumination on or off
	RETCOD = CALLR(VIEW_ID(VC),
     &	               VIEW_ILLUMINATION_ON(VC),
     &		       %VAL(VIEW_ADDRESSES(XVISA_ILLUMINATION_SWITCH)))
	IF (.NOT.RETCOD) THEN
	   CALL MOAN(MSG_VISLIBERR)
	   CALL LITES2_SIGNAL(RETCOD)
	   GOTO 9999
	ENDIF
C
C if colouring on basis of images, then pass information about these
C images
	IF (VIEW_COLOUR_METHOD(VC).EQ.METHOD_IMAGE) THEN
C
C reset structure containing overlay images
	   RETCOD = CALLR(VIEW_ID(VC),
     &	                  VIEW_LEVEL(VC),
     &		       %VAL(VIEW_ADDRESSES(XVISA_RESET_OVERLAY_IMAGE)))
	   IF (.NOT.RETCOD) THEN
	      CALL MOAN(MSG_VISLIBERR)
	      CALL LITES2_SIGNAL(RETCOD)
	      GOTO 9999
	   ENDIF
C
	   DO 50, IM = 1,MAXIMAGE
	      IF (LIB$EXTZV(IM,1,VIEW_COLOUR_IMAGE_BITMAP(VC))) THEN
C
C get required pixels, and pass DTI values
	         PIXLL(1) =
     &		   NINT((VIEW_POSLL(1)+LITES2ORG(1)-IMAGE_ORIGIN(1,IM))/
     &			IMAGE_PIXELSIZE(1,IM)) + 1
	         PIXLL(2) =
     &		   NINT((VIEW_POSLL(2)+LITES2ORG(2)-IMAGE_ORIGIN(2,IM))/
     &			IMAGE_PIXELSIZE(2,IM)) + 1
	         PIXUR(1) =
     &		   NINT((VIEW_POSUR(1)+LITES2ORG(1)-IMAGE_ORIGIN(1,IM))/
     &			IMAGE_PIXELSIZE(1,IM)) + 1
	         PIXUR(2) =
     &		      NINT((VIEW_POSUR(2)+LITES2ORG(2)-IMAGE_ORIGIN(2,IM))/
     &			IMAGE_PIXELSIZE(2,IM)) + 1
C
C force within image
	         PIXLL(1) = MAX(PIXLL(1),1)
	         PIXLL(2) = MAX(PIXLL(2),1)
	         PIXUR(1) = MIN(PIXUR(1),IMAGE_COLUMNS(IM))
	         PIXUR(2) = MIN(PIXUR(2),IMAGE_ROWS(IM))
C
C temporary for R*8 -> R*4
	         X = IMAGE_ORIGIN(1,IM) - LITES2ORG(1)
	         Y = IMAGE_ORIGIN(2,IM) - LITES2ORG(2)
C
	         RETCOD = CALLR(IMAGE_LUN(IM),
     &	                     X,			! note - pass R*4
     &	                     Y,
     &	                     IMAGE_PIXELSIZE(1,IM),
     &	                     IMAGE_PIXELSIZE(2,IM),
     &	                     IMAGE_COLUMNS(IM),
     &	                     IMAGE_ROWS(IM),
     &			     IMAGE_CORNER(IM),
     &			     IMAGE_DIRECTION(IM),
     &	                     PIXLL(1),               
     &	                     PIXLL(2),
     &	                     PIXUR(1),
     &	                     PIXUR(2),
     &	                     IMAGE_RANGE(1,IM),
     &	                     IMAGE_RANGE(2,IM),
     &	                     DATA_TYPE(IMAGE_LUN(IM)),
     &	                     VIEW_SAMPLE(1,VC),
     &	                     VIEW_SAMPLE(2,VC),
     &	                %VAL(VIEW_ADDRESSES(XVISA_SETUP_DTI_VALUES)))
C
	         IF (.NOT.RETCOD) THEN
	            CALL MOAN(MSG_VISLIBERR)
	            CALL LITES2_SIGNAL(RETCOD)
	            GOTO 9999
	         ENDIF
C
C pass image classification scheme
	         RETCOD = CALLR(IMAGE_LUN(IM),
     &	                     IMAGE_CLASSIFY(IM), ! classifying image?
     &	                     IMAGE_RANGE(1,IM),  ! total range
     &	                     IMAGE_STEP(IM),	   ! step value
     &	                     IMAGE_NBAND(IM),	   ! number of bands set up
     &	                     IMAGE_BAND(1,1,IM), ! bottom and top of band
     &	                     IMAGE_BANDCOL(1,IM),! colours
     &	                     IMAGE_FIRST(IM),    ! first colour to use
     &	                     IMAGE_BASE(IM),     ! base, if using bits
     &	                     IMAGE_NUMBER(IM),   ! bits to interpret
     &	                %VAL(VIEW_ADDRESSES(XVISA_SETUP_CLASS_SCHEME)))
C
	         IF (.NOT.RETCOD) THEN
	            CALL MOAN(MSG_VISLIBERR)
	            CALL LITES2_SIGNAL(RETCOD)
	            GOTO 9999
	         ENDIF
C
C setup colour values
	         RETCOD = CALLR(IMAGE_LUN(IM),
     &	                     VIEW_COLOUR_METHOD(VC),
     &	                     VIEW_MIN_COL_VAL,	! minimum colour val
     &	                     VIEW_MAX_COL_VAL,	! maximum colour val
     &	                     VIEW_SEA_COL_VAL,	! sea colour
     &	                     VIEW_NULL_COL_VAL,	! null value
     &	            %VAL(VIEW_ADDRESSES(XVISA_SETUP_COLOUR_VALUES)))
C
	         IF (.NOT.RETCOD) THEN
	            CALL MOAN(MSG_VISLIBERR)
	            CALL LITES2_SIGNAL(RETCOD)
	            GOTO 9999
	         ENDIF
C
C associate this image with this view
	         RETCOD = CALLR(VIEW_ID(VC),
     &	                        VIEW_LEVEL(VC),
     &	                        IMAGE_LUN(IM),
     &	               %VAL(VIEW_ADDRESSES(XVISA_SET_OVERLAY_IMAGE)))
C
	         IF (.NOT.RETCOD) THEN
	            CALL MOAN(MSG_VISLIBERR)
	            CALL LITES2_SIGNAL(RETCOD)
	            GOTO 9999
	         ENDIF
	      ENDIF
50	   CONTINUE
	ENDIF
C
C if colouring on basis of height, then pass information about height
C scheme of images that were rendered
	IF (VIEW_COLOUR_METHOD(VC).EQ.METHOD_AV_HEIGHT) THEN
	   DO 60, IM = 1,MAXIMAGE
	      IF (LIB$EXTZV(IM,1,
     &	           VIEW_RENDERED_IMAGE_BITMAP(VIEW_LEVEL(VC),VC))) THEN
C
C pass image classification scheme
	         RETCOD = CALLR(IMAGE_LUN(IM),
     &	                     IMAGE_CLASSIFY(IM), ! classifying image?
     &	                     IMAGE_RANGE(1,IM),  ! total range
     &	                     IMAGE_STEP(IM),	   ! step value
     &	                     IMAGE_NBAND(IM),	   ! number of bands set up
     &	                     IMAGE_BAND(1,1,IM), ! bottom and top of band
     &	                     IMAGE_BANDCOL(1,IM),! colours
     &	                     IMAGE_FIRST(IM),    ! first colour to use
     &	                     IMAGE_BASE(IM),     ! base, if using bits
     &	                     IMAGE_NUMBER(IM),   ! bits to interpret
     &	                %VAL(VIEW_ADDRESSES(XVISA_SETUP_CLASS_SCHEME)))
C
	         IF (.NOT.RETCOD) THEN
	            CALL MOAN(MSG_VISLIBERR)
	            CALL LITES2_SIGNAL(RETCOD)
	            GOTO 9999
	         ENDIF
	      ENDIF
60	   CONTINUE
	ENDIF
C
C success
	VIEW_GENERATE_PARAMETERS = .FALSE.
C
9999	RETURN
        END
