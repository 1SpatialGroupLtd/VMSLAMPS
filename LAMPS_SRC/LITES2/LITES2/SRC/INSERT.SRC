	SUBROUTINE INSERT
C
***	IDENT   24AU94
***	MODULE  INSERT
C
C	Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C	Created                                 RWR	8-Mar-1989
C
C to insert an intersection point while constructing.
C If the insertion works, two points are replaced by one
C
        IMPLICIT NONE
C
	INCLUDE	'LSL$CMNIFF:CB.STR'
***	PARAMETER/CMN:MOANMESS/		! moan constants
C
***     COMMON/CMN:CSTRCT/		! feature being constructed
***	COMMON/CMN:DEFINE/
***	COMMON/CMN:OPTION/
***	COMMON/CMN:RFCTRL/
C
C Functions called
	LOGICAL		PLANE
	LOGICAL		INTSCT
	LOGICAL		RUBISH
	REAL		LENGTH
C
C Local Variables
	LOGICAL		COEFFS_DEF
	REAL		COEFFS(4)
	INTEGER		OPER
	REAL		TEMPZ(3)
	REAL		Z
	REAL		XY(2)		! intersected point
	INTEGER		IN1,IN2
C
C compute intersection
	IF (INTSCT(CONXY(1,FIRST_INSERT),CONXY(1,CONIND-1),XY,IN1,IN2))
     &	                   GOTO 998
C
C check point is within range of working area
	IF (RUBISH(XY)) GOTO 998
C
C adjust current length by subtracting last 3 segments
	CONLEN = CONLEN - LENGTH(4,CONXY(1,FIRST_INSERT))
C
C work out plane through last 3 points
	COEFFS_DEF = .FALSE.
	IF (ZOPT) THEN
	   CALL GETZ_LIST(TEMPZ(1),CONLST(CONIND-2))
	   CALL GETZ_LIST(TEMPZ(2),CONLST(CONIND-1))
	   CALL GETZ_LIST(TEMPZ(3),CONLST(CONIND))
	   COEFFS_DEF = PLANE(CONXY(1,CONIND-2),TEMPZ,COEFFS)
	ENDIF
C
	IF (COEFFS_DEF) CALL PLANE_INTERPL(XY,COEFFS,Z)
C
C second point is calculated point, with attributes of 3rd point
	CONXY(1,FIRST_INSERT+1) = XY(1)
	CONXY(2,FIRST_INSERT+1) = XY(2)
	CONFLG(FIRST_INSERT+1) = CONFLG(FIRST_INSERT+2)
C
C this point gets the attributes of point 3 (updated as necessary)
C so delete current list
	CALL DELDEF(CONLST(FIRST_INSERT+1))
C
C put list in an array
	CALL LSTARR(CONLST(FIRST_INSERT+2),CONATT,COATTC,COATTV,.FALSE.)
C
C add z value
	IF (COEFFS_DEF) CALL ADDZ(Z,MXATTR,CONATT,COATTC,COATTV)
C
C update with operations
	OPER = DEFINITION(P_CURVE)
	IF (OPER.EQ.0) OPER = DEFINITION(P_OTHER)
	CALL LSTARR(OPER,CONATT,COATTC,COATTV,.TRUE.)
C
C and copy back to list
	CALL ARRLST(CONATT,COATTC,COATTV,CONLST(FIRST_INSERT+1),IN1)
C
C 3rd point gets values from original 4th point
	CONXY(1,CONIND-1) = CONXY(1,CONIND)
	CONXY(2,CONIND-1) = CONXY(2,CONIND)
	CONFLG(CONIND-1)  = CONFLG(CONIND)
	CALL DELDEF(CONLST(CONIND-1))
	CONLST(CONIND-1) = CONLST(CONIND)
	CONLST(CONIND) = 0		! so that next DELDEF does not
					! delete thing we have just moved
C
C re-adjust current length by adding new last 2 segments
	CONLEN = CONLEN + LENGTH(3,CONXY(1,FIRST_INSERT))
C
C index is reduced by 1
	CONIND = CONIND - 1
C
C ensure construction is refreshed properly
	RFCIND = RFCIND - 1
	GOTO 999
C
C intersection point not in map
998	CALL MOAN(MSG_ERRORINSERT)
C
C we are not INSERTING any more
999	CONTINUE
	INSRTING = .FALSE.
	RETURN
        END
