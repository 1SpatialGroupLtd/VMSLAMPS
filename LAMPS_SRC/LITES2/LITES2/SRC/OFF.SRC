	SUBROUTINE OFF(NO,XYIN,XYOUT)
C
***	IDENT	01NO94
***	MODULE	OFF
C
C	Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C	Created					RWR	06-Jun-1986
C	Stolen from FPP and modified for LITES2
C	coordinates				RWR	03-Jul-1986
C
C	To offset a an array of coordinates.  This routine can be used
C	to offset features that are in several buffers, as long as the
C	last point in the previous buffer has been "sorted" with SRTOFF
C
	IMPLICIT NONE
C
C Arguments
	INTEGER		NO		! number of points in this buffer
	REAL		XYIN(2,NO)	! the input points
	REAL		XYOUT(2,NO)	! the output points
C
***	COMMON/CMN:DRAWIN/
C
C Local Variables
	INTEGER		I		! loop counter
	REAL		SEG(2,2)	! the current vector
	REAL		PT(2)		! intersection point
	INTEGER		IN1,IN2		! dummy
	INTEGER		OUT
C
C functions
C
	LOGICAL		INTSCT
	LOGICAL		OFFSEG
C
C initialise
C
	OUT = 0
C
C go through all the vectors, offsetting them, and intersecting this
C offset vector with the last one.
C
C Note that the resulting point is put into the original buffer, so
C its initial value must be remembered (as well as remembering it
C between calls of this routine)
C
	I = 0
10	I = I+1
	IF (I.GT.NO) GOTO 100
C
C make connection with last vector
	   IF (OUT.EQ.0) THEN
	      IF (STD) THEN	! this is not the first buffer, so
				! connect with last one
	         LSTOFF(1,1) = LSTPT(1)
	         LSTOFF(2,1) = LSTPT(2)
	         LSTOFF(1,2) = XYIN(1,I)
	         LSTOFF(2,2) = XYIN(2,I)
	         IF (OFFSEG(OFFDIST,LSTOFF,LSTOFF)) GOTO 10
	      ENDIF
	      LSTPT(1) = XYIN(1,I)
	      LSTPT(2) = XYIN(2,I)
	   ENDIF
C
C get next vector
C
	   IF (I.GE.NO) GOTO 100
	   SEG(1,1) = LSTPT(1)
	   SEG(2,1) = LSTPT(2)
	   SEG(1,2) = XYIN(1,I+1)
	   SEG(2,2) = XYIN(2,I+1)
C
C remember this point
C
	   LSTPT(1) = XYIN(1,I+1)
	   LSTPT(2) = XYIN(2,I+1)	 
C
C offset this vector
	   IF (OFFSEG(OFFDIST,SEG,SEG)) GOTO 10
C
C if this is start, then we have the first point (perp to line)
C
	   OUT = OUT + 1
	   IF (.NOT.STD) THEN
	      XYOUT(1,OUT) = SEG(1,1)
	      XYOUT(2,OUT) = SEG(2,1)
	      STD = .TRUE.		! started now
	   ELSE
C
C work out intersection (if possible).  This is not possible if
C the two lines are parallel (collinear in this problem) or if one
C is a point!  In either case we take the end of the offset.
C
	      IF (INTSCT(SEG,LSTOFF,PT,IN1,IN2)) THEN	! no intersection
	         XYOUT(1,OUT) = SEG(1,1)
	         XYOUT(2,OUT) = SEG(2,1)
	      ELSE
	         XYOUT(1,OUT) = PT(1)
	         XYOUT(2,OUT) = PT(2)
	      ENDIF
	   ENDIF
C
C this vector is now last vector
C
	   LSTOFF(1,1) = SEG(1,1)
	   LSTOFF(2,1) = SEG(2,1)
	   LSTOFF(1,2) = SEG(1,2)
	   LSTOFF(2,2) = SEG(2,2)
	GOTO 10
C
C for the moment, the last point is offset perpendicularly, but it
C may be doctored later by SRTOFF
C
100	NO = OUT + 1		! number of points output
	IF (STD) THEN
	   XYOUT(1,NO) = LSTOFF(1,2)	
	   XYOUT(2,NO) = LSTOFF(2,2)
	ENDIF
C
	RETURN
	END
