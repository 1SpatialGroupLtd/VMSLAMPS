C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1992-03-30 13:28:06.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	REAL FUNCTION EXDIST
C
***	IDENT	30MR92
***	MODULE	EXDIST
C
C	Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C	Created					CCB	26-Mar-1992
C
C	LITES2 cartographic editor EXAMINE DISTANCE command.
C
	IMPLICIT NONE
C
	INCLUDE	'LSL$CMNIFF:CB.STR'
***	PARAMETER/CMN:AUXDEF/
***	PARAMETER/CMN:CONSTS/
***	PARAMETER/CMN:MOANMESS/
***	PARAMETER/CMN:PACK/
C
***	COMMON/CMN:DRAWIN/
***	COMMON/LSL$CMNFRT:FRTCOM/
***	COMMON/CMN:STRIKE/
C
C functions called
	LOGICAL	CHKLIN		! check for found object line/arc
	REAL	LENGTH
C
C workspace
	INTEGER	V1,NUM
	REAL	ANG
C
	EXDIST = 0.0
C
	IF (.NOT.CHKLIN(.FALSE.)) GOTO 1000
C
	IF (.NOT.FONLIN) THEN
	   CALL MOAN(MSG_NOTONLINE)
	   CALL LEARN(MSG_USEON)
	   GOTO 1000
	ENDIF
C
	IF (FOPAK(PAKGT).GE.CLOTYP .AND. FOPAK(PAKGT).LE.FULTYP) THEN
C
C arc - calculate distance along it
C
	   IF (FOSTRT) THEN
	      ANG = 0.0
	   ELSEIF (FOEND) THEN
	      ANG = FOAUX(TOTI)
	   ELSE
	      ANG = ATAN2(FOCXY(2)-FOAUX(YCENI),FOCXY(1)-FOAUX(XCENI))
	      IF (ANG.LT.0) ANG = ANG+TWOPI
	      ANG = ANG - FOAUX(STAI)
	      IF (FOAUX(TOTI).GE.0.0) THEN
	         IF (ANG.LT.0.0) ANG = ANG+TWOPI
	      ELSE
	         IF (ANG.GT.0.0) ANG = ANG-TWOPI
	      ENDIF
	   ENDIF
	   EXDIST = FOAUX(RADI)*ABS(ANG)
	ELSE
C
C linear feature - add up length until we reach the cursor position
C
	   V1 = 1			! start at first vertex
C
C so we need to add in some more vertices,
C get some more into RIXY(*,1:RITOP)
10	   CALL GETVRT(FOPAK,V1,FOLST)
C
C add in as much of this buffer load as we need
	   NUM = FOVRT-V1+1
	   EXDIST = EXDIST + LENGTH(MIN(NUM,RITOP),RIXY)
C
C step along for next section of line
	   V1=V1+RITOP-1
	   IF (V1.LT.FOVRT) GOTO 10	! get some more vertices
C
C Now we have length up to vertex immediately before our position.
C If we are not on a vertex, then need to add in distance from
C vertex to cursor
	   IF (.NOT.FONVRT) THEN
	      EXDIST = EXDIST + SQRT( (FOCXY(1)-RIXY(1,NUM))**2 +
     &				      (FOCXY(2)-RIXY(2,NUM))**2 )
	   ENDIF
	ENDIF
C
1000	RETURN
C
	END
