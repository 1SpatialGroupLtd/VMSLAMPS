        SUBROUTINE DOSET
C
***     IDENT   13MY96
***     MODULE  DOSET
C
C       Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C       Written                                 RWR	14-Nov-1984
C
C Description
C
C	LITES2 cartographic editor SET command.
C
C SET MAP		sets map to be used
C SET <LAYER,OVERLAY>	sets layer to be used for new features
C SET <FC,IT>		sets feature code for current attribute set
C SET HEIGHT		sets height of text (mm) for current 
C			attribute set
C SET POINTSIZE		sets text height in points for current 
C			attribute set
C SET CATEGORY		sets OS text category for
C			current attribute set
C SET LOCATION		sets OS text location field for 
C			current attribute set
C SET STYLE		sets text style for current attribute set
C SET PROCESS		sets process for current attribute set
C SET TEXT		sets feature code to be used in constructing
C			text
C SET FSN		sets FSN for next construction
C SET AC		sets AC in current attribute set
C SET INCREMENT		sets the increment for LARGER and SMALLER command
C SET ARC		sets the FC to be used when doing part operations
C			on full circles
C SET ATTRIBUTE		add a point attribute to list of definition
C
        IMPLICIT NONE
C
	INCLUDE	'LSL$CMNIFF:CB.STR'
***	PARAMETER/CMN:ACS/
***	PARAMETER/CMN:EFNLUN/
***     PARAMETER/CMN:MOANMESS/
C
***	COMMON/CMN:ATTBTS/
***	COMMON/CMN:DEFINE/
***     COMMON/CMN:DOUT/
***	COMMON/CMN:FCS/
***	COMMON/CMN:FILES/
***	COMMON/LSL$CMNFRT:FRTACD/
***	COMMON/LSL$CMNFRT:FRTCOM/
***	COMMON/CMN:LAYERS/
***	COMMON/CMN:MAPS/
***	COMMON/CMN:OPTION/
***	COMMON/CMN:OSPTSZ/
C
C External routines
	EXTERNAL MOAN
	EXTERNAL NASTY
C
C Functions called
	LOGICAL		FRTFND
	LOGICAL 	ADDDEF
	LOGICAL		ATTDECOD
	LOGICAL		CHK_PRIV_ATT
C
C Local Variables
	INTEGER		MAX_ATT_NO
	PARAMETER	(MAX_ATT_NO = IFF_MAXCBCOL - 2 + 1)
C
	INTEGER*4	I		! to save typing
	REAL		R		! to save typing
	INTEGER*4	J		! loop variable
C
	EQUIVALENCE	(I,DINTS(1)),(R,DREALS(1))	! save typing
C
	INTEGER		ACTYPE		! the attribute number
	INTEGER		OUTSTR_L	! the length of the string
	CHARACTER*1	OUTSTR		! the output string
	INTEGER		ACVALUE		! the value (as an integer)
	LOGICAL		ADDED
	LOGICAL		GOT_VALUE
C
C Dispatch according to secondary command
	GOTO (100,200,300,400,500,600,700,800,900,1000,1100,1200,
     &	      1300,1400,1500), DSECN
C
C Secondary command number out of range
	CALL MSGCMD(NASTY,MSG_ERRSECIND)
	GOTO 8000
C
C SET MAP		sets map to be used
C
100	IF (I.LT.1.OR.I.GT.MAXMAP) THEN
	   CALL MOAN(MSG_ILLEGLMAP,MAXMAP)
	   GOTO 8000
	ENDIF
	CONMAP=I-1		! this is global setting
	GOTO 9000
C
C
C SET <LAYER,OVERLAY>	sets layer to be used for new features
C
200	IF (I.LT.0.OR.I.GT.TOPLAY) THEN
	   CALL MOAN(MSG_ILLEGLLAYER,TOPLAY)
	   GOTO 8000
	ENDIF
	CONLAY=I		! this is global setting
	GOTO 9000
C
C SET <FC,IT>		sets feature code for current attribute set
C
300	CONTINUE
C
C if there is a FRT file, check that I is valid
C
	IF (HADFRT) THEN
	   IF (FRTFND(I)) THEN
	      CALL MOAN(MSG_BADCODE,I)		! I not in frt
	      GOTO 8000
	   ELSEIF (FRTTEX) THEN			! I text type
	      CALL MOAN(MSG_FCISTEXT,I)
	      GOTO 8000
	   ENDIF
	ENDIF
	IF (I.LT.0.OR.I.GT.MAXFC) THEN
	   CALL MOAN(MSG_ILLEGLFC,MAXFC)
	   GOTO 8000
	ENDIF
	CONFC=I
	PRCLEN=0				! no process
	CALL FREEAC(CONACD)			! no ACs
	GOTO 9000
C
C SET HEIGHT		sets height of text (mm) for current 
C			attribute set
C
400	IF (.NOT.HEIOPT) THEN
	   CALL MOAN(MSG_ILLEGLTXT)	! getting text info from FRT
	   GOTO 8000
	ELSEIF (POIOPT) THEN
	   CALL MOAN(MSG_ILLEGLMMS)	! expecting txt height in points
	   GOTO 8000
	ELSEIF (R.LE.0.0) THEN
	   CALL MOAN(MSG_ILLEGMMVAL)
	   GOTO 8000
	ENDIF
	CALL TSTUNT(.FALSE.,1,R)	! expecting mms
	CONHT=R
	GOTO 9000
C
C SET POINTSIZE		sets text height in points for current 
C			attribute set
C
500	IF (.NOT.HEIOPT) THEN
	   CALL MOAN(MSG_ILLEGLTXT)	! getting text info from FRT
	   GOTO 8000
	ELSEIF (.NOT.POIOPT) THEN
	   CALL MOAN(MSG_ILLEGLPOI)	! expecting text height in mms
	   GOTO 8000
	ELSEIF (I.LT.3.OR.I.GT.24) THEN
	   CALL MOAN(MSG_ILLEGPOIRNG,3,24)
	   GOTO 8000
	ELSEIF (OSPTSZ(I).LE.0.0) THEN			! not valid
	   CALL MOAN(MSG_NOPOINTSIZE)			! point value
	   CALL LEARN(MSG_VALIDPTSZ)
	   GOTO 8000
	ENDIF
	CONPTZ=I
	GOTO 9000
C
C SET CATEGORY		sets OS text category for
C			current attribute set
C
600	IF (I.LT.0.OR.I.GT.63) THEN
	   CALL MOAN(MSG_ILLEGCLASS,0,63)
	   GOTO 8000
	ENDIF
	CONCLS=I
	GOTO 9000
C
C SET LOCATION		sets OS text location field for 
C			current attribute set
C
700	IF (.NOT.POSOPT) THEN		! positioning not enabled
	   CALL MOAN(MSG_NOPOSITIONING)
	   GOTO 8000
	ELSEIF (I.LT.0.OR.I.GT.8) THEN	! impossible position
	   CALL MOAN(MSG_ILLEGLLOC)
	   GOTO 8000
	ENDIF
	CONLOC=I
	GOTO 9000
C
C SET STYLE		sets text style to be used for current 
C			attribute set
C
800	IF (I.LT.0.OR.I.GT.3) THEN
	   CALL MOAN(MSG_ILLEGFONT,0,3)
	   GOTO 8000
	ENDIF
	CONFNT=I
	GOTO 9000
C
C SET PROCESS		sets process for current attribute set
C
900	PRCLEN=DSTRL
	IF (DSTRIN) CONPRC=DSTR(1:DSTRL)
	GOTO 9000
C
C SET TEXT		sets feature code to be used for constructing
C			text features
C
1000	CONTINUE
C
C if there is a FRT file, check that I is valid
C
	IF (HADFRT) THEN
	   IF (FRTFND(I)) THEN
	      CALL MOAN(MSG_BADCODE,I)		! I not in frt
	      GOTO 8000
	   ELSEIF (.NOT.FRTTEX) THEN		! I not text type
	      CALL MOAN(MSG_FCNOTTEXT,I)
	      GOTO 8000
	   ENDIF
	ENDIF
	IF (I.LT.0.OR.I.GT.MAXFC) THEN
	   CALL MOAN(MSG_ILLEGLFC,MAXFC)
	   GOTO 8000
	ENDIF
	CONTFC=I
	GOTO 9000
C
C SET FSN		sets FSN for new features
C
1100	IF (I.LT.0.OR.I.GT.MAXFSN) THEN
	   CALL MOAN(MSG_ILLEGLFSN,MAXFSN)
	   GOTO 8000
	ENDIF
	CONFSN=I		! global setting
	GOTO 9000
C
C SET AC
C
1200	DSECN = 1		! Secondary command 1 for CHANAC!!!
	CALL CHANAC(CONACD,.TRUE.)
	GOTO 9000
C
C SET INCREMENT
C
1300	CONTINUE
	IF (.NOT.HEIOPT) THEN
	   CALL MOAN(MSG_ILLEGLTXT)	! getting text info from FRT
	   GOTO 8000
	ELSEIF (POIOPT) THEN
	   CALL MOAN(MSG_ILLEGLMMS)	! expecting txt height in points
	   GOTO 8000
	ELSEIF (R.LT.0.0) THEN
	   CALL MOAN(MSG_ILLEGMMVAL)
	   GOTO 8000
	ENDIF
	IF (R.NE.0.0.AND.DNREA.GT.0) THEN
	   CALL TSTUNT(.FALSE.,1,R)	! expecting mms
C
C get nice round 1/100s of mm
	   J = IFIX(R*100.0 + 0.5)
	   HGTINC = J/100.0
	ELSE
	   HGTINC = -1.0
	ENDIF
	GOTO 9000
C
C SET ARC		sets feature code to be used when doing part
C			operations on full circles
C
1400	CONTINUE
C
C if there is a FRT file, check that I is valid
C
	IF (HADFRT) THEN
	   IF (FRTFND(I)) THEN
	      CALL MOAN(MSG_BADCODE,I)		! I not in frt
	      GOTO 8000
C
C check that arc FC
	   ELSEIF (FRTGT.NE.CIRTYP) THEN
	      CALL MOAN(MSG_FCNOTARC,I)
	      GOTO 8000
	   ENDIF
	ENDIF
	IF (I.LT.0.OR.I.GT.MAXFC) THEN
	   CALL MOAN(MSG_ILLEGLFC,MAXFC)
	   GOTO 8000
	ENDIF
	ARCFC=I
	GOTO 9000
C
C SET ATTRIBUTE		sets point attribute in list of
C			construction attributes
C
1500	CONTINUE
C
C decode the ACD type, and its value
	IF (.NOT.ATTDECOD(DSTR(1:DSTRL),ACTYPE,OUTSTR_L,OUTSTR,ACVALUE,
     &	                  .TRUE.,GOT_VALUE)) GOTO 8000
C
C check for "end of line"
	IF (OUTSTR_L.GT.0) THEN
	   CALL MOAN(MSG_CMDLIBUXC,%REF(OUTSTR))
	   GOTO 8000
	ENDIF
C
C check that allowed to operate on this attribute
	IF (CHK_PRIV_ATT(ACTYPE)) GOTO 8000
C
C add to list of definitions
	IF (.NOT.ADDDEF(CONDEF,ACTYPE,ACVALUE,ADDED)) GOTO 8000
	IF (ADDED) CONDEFNO = CONDEFNO+1
	IF (CONDEFNO.GE.MAX_ATT_NO) CALL INFORM(MSG_OVERFLWPTATTR,
     &	                           MAX_ATT_NO-1)
	GOTO 9000
C
C error exit
8000	CALL IGNCMD
	GOTO 9999
C
C update state line and return
9000	CALL VTSTAT
9999	RETURN
        END
