	SUBROUTINE SHFC
C
***	IDENT	09FE91
***	MODULE	SHFC
C
C	Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C	Created					RWR	15-Nov-1984
C
C Description
C
C	LITES2 cartographic editor SHOW FC command.
C
C 	It fills a bitmap with the FCs of each graphical type
C	in turn, and then outputs it.
C
	IMPLICIT NONE
C
***     PARAMETER/CMN:MOANMESS/		! moan constants
C
***	COMMON/CMN:DOUT/		! command decoding output
***     COMMON/CMN:FCS/			! data for FC selection
***	COMMON/CMN:FILES/		! filename details
***	COMMON/LSL$CMNFRT:FRTCOM/	! data from FRT
C
C Functions called
	LOGICAL		FRTFND
C
	EXTERNAL	LEARN
C
C workspace
	INTEGER*4	NGTYPS		! number of graphical types
	PARAMETER	(NGTYPS=12)	! set to 12 in FRTLIB at present
C
	INTEGER*4	GTYP,I		! counters
	INTEGER*4	MESGES(NGTYPS)	! message to output for each 
					! graphical type
	INTEGER*4	FC		! current FC
	LOGICAL		SOMSET		! to test if graphical type
					! has any FCs defined for it
	INTEGER*2	FCGT(2)		! FC and GT
C
	DATA	MESGES/	MSG_LNESTRNG,MSG_CLKARC,MSG_ACLKARC,
     &			MSG_CIRCCRCL,MSG_FULLCRCL,MSG_INTERCRV,
     &			MSG_UNORSY,MSG_ORSY,MSG_SCLSY,MSG_TEXT,
     &			MSG_SYSTRNG,MSG_FILLAREA/
C
C cannot do anything without FRT file
	IF (.NOT.HADFRT) THEN
	   CALL MOAN(MSG_NOFILENAME,'FRT')
	   CALL MSGCMD(LEARN,MSG_REQFRTNAME)
C
C	if no argument on command line, output summary of all FCs
	ELSEIF (DNINT.EQ.0) THEN
C
C	for each grahpical type in turn
	   DO 20,  GTYP=1,NGTYPS
	      CALL VIOCLR(SELBUF,FCMAX*4,0)	! clear buffer
C
C		 create bit map of FCs of this graphical type
C
	      SOMSET=.FALSE.			! remember if any found
	      DO 10, I=1,FRTCNT
C
C FRTINT_LOC points to an INTEGER*2 (6,*) array
C Extract first two integers for this feature code
	         CALL PUTLNG(%VAL(FRTINT_LOC+(I-1)*6*2),FCGT)
		 IF (FCGT(2).EQ.GTYP) THEN
		    FC=FCGT(1)			! extend to long
		    CALL LIB$INSV(1,FC,1,SELBUF)
		    SOMSET=.TRUE.
		 ENDIF
   10	      CONTINUE
C
C	   if anything in bitmap, display it as a series of ranges
C	   with an appropriate header
C
	      IF (SOMSET) THEN
		    CALL INFORM(MSG_BLANK)
		    CALL DISPLBTMP(MESGES(GTYP),-1,MSG_STRING,
     &					MAXFC,SELBUF)
	      ENDIF
   20	   CONTINUE
C
C	   if single integer argument on command line, output data about
C	   that FC
C
	ELSEIF(DNINT.EQ.1) THEN
C
C	   check for valid FC
C
	   IF (DINTS(1).LT.0.OR.DINTS(1).GT.MAXFC) THEN
	      CALL MOAN(MSG_ILLEGLFC,MAXFC)
C
C 	   find if FC is in FRT
C
	   ELSEIF (FRTFND(DINTS(1))) THEN
	      CALL MOAN(MSG_BADCODE,DINTS(1))
C
C	   and write out details of it
C
	   ELSE
	      CALL INFORM(MSG_BLANK)		! write out header
	      CALL INFORM(MSG_FRTHEAD)
	      CALL INFORM(MSG_BLANK)
	      CALL INFORM(MSG_FRTOUTPUT,
     &		FRTFC,FRTGT,FRTCOL,FRTWID,FRTSIZ,FRTSC,FRTFLG,FRTHW)
	   ENDIF
	ENDIF
C
	RETURN
	END
