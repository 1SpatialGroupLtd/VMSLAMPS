C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1989-12-11 16:32:44.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE BOXCTX(CTXD,PACK,TRACK,BOX)
C
***	IDENT	11DE89
***	MODULE	BOXCTX
C
C	Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C	Created					RWR	21-Mar-1985
C
C Description
C
C	To refresh (possibly) complex text features
C
	IMPLICIT NONE
C
C Included Parameter Files
***     PARAMETER/CMN:CTXS/
***	PARAMETER/CMN:PACK/
C
C Common Blocks
***     COMMON/CMN:CTXS/
***	COMMON/CMN:MODIFY/
***	COMMON/CMN:RFCTRL/
C
C Arguments
	INTEGER		CTXD(CTXDLEN)	! compound text to draw
	INTEGER		PACK(PAKLEN)	! pack of feature
	LOGICAL*1	TRACK		! use local tracking
	LOGICAL*1	BOX		! .TRUE.  = draw a box
					! .FALSE. = draw the text
C
	INTEGER*4	ADDR		! address of start of a CTX
	LOGICAL*1	TRK		! track this box
	INTEGER		Z
	INTEGER*4	PREV,NXT
	INTEGER		LEFT		! number of boxes still to draw
C
C only draw number of boxes that REFRESH VERTICES allows (5 vertices per
C box) - but insist on 1
	LEFT = MAX(1,RFFULL/5)
C
C start by refreshing home sub text
	ADDR = CTXD(CTXD_HOME)
	PREV = ADDR
	NXT  = ADDR
C
C draw a box using this CTX
	TRK = TRACK.AND.		! local tracking
     &	      (.NOT.SUBTXT.OR.		! moving whole feature
     &	       ADDR.EQ.CTXD(CTXD_HOME))	! moving this text component
C
	CALL GETZ_LIST(Z,%VAL(ADDR+CTX_O_ATTR))
	CALL BOXTXT(1,%VAL(ADDR+CTX_O_X),%VAL(ADDR+CTX_O_AUX),
     &	      %VAL(ADDR+CTX_O_DESC),PACK,TRK,BOX,Z)
	LEFT = LEFT -1
C
10	CONTINUE
	IF (LEFT.LE.0) GOTO 900
C
C draw one nearer front
	IF (PREV.NE.CTXD(CTXD_FSTCTX)) THEN
	   CALL PUTLNG(%VAL(PREV+CTX_O_PREPTR),PREV)
	   TRK = TRACK.AND.		! local tracking
     &	      (.NOT.SUBTXT.OR.		! moving whole feature
     &	       PREV.EQ.CTXD(CTXD_HOME))	! moving this text component
C
	   CALL GETZ_LIST(Z,%VAL(PREV+CTX_O_ATTR))
	   CALL BOXTXT(1,%VAL(PREV+CTX_O_X),%VAL(PREV+CTX_O_AUX),
     &	      %VAL(PREV+CTX_O_DESC),PACK,TRK,BOX,Z)
	   LEFT = LEFT -1
	ENDIF
C
C finished now?
	IF (LEFT.LE.0) GOTO 900
C
C draw one nearer end
	IF (NXT.NE.CTXD(CTXD_LSTCTX)) THEN
	   CALL PUTLNG(%VAL(NXT+CTX_O_NXTPTR),NXT)
	   TRK = TRACK.AND.		! local tracking
     &	      (.NOT.SUBTXT.OR.		! moving whole feature
     &	       NXT.EQ.CTXD(CTXD_HOME))	! moving this text component
C
	   CALL GETZ_LIST(Z,%VAL(NXT+CTX_O_ATTR))
	   CALL BOXTXT(1,%VAL(NXT+CTX_O_X),%VAL(NXT+CTX_O_AUX),
     &	      %VAL(NXT+CTX_O_DESC),PACK,TRK,BOX,Z)
	   LEFT = LEFT -1
	ENDIF
C
C finished?
	IF (LEFT.GT.0.AND.
     &	      (PREV.NE.CTXD(CTXD_FSTCTX).OR.NXT.NE.CTXD(CTXD_LSTCTX)))
     &	         GOTO 10
C
900	RETURN
	END
