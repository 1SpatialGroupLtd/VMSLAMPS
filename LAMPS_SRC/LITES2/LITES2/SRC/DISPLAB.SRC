C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1992-11-06 12:33:36.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE DISPLAB(PACK,HADLABEL,POS,ANG)
C
***	MODULE	DISPLAB
***	IDENT	06NO92
C
C Copyright Laser Scan Laboratories Ltd., Cambridge, England.
C Author Ron Russell		21-July-1986
C
C To display a label
C
	IMPLICIT NONE
C
***	PARAMETER/CMN:ACS/
***	PARAMETER/CMN:PACK/
C
***	COMMON/CMN:DRAWIN/
***	COMMON/LSL$CMNFRT:FRTACD/
***	COMMON/LSL$CMNFRT:FRTCOM/
***	COMMON/CMN:LABELS/
***	COMMON/CMN:OPTION/
C
C arguments
C
	INTEGER*4 	PACK(PAKLEN)	! a pack for the feature
	LOGICAL*1	HADLABEL	! has label been built yet
	REAL		POS(3)		! position for label
	REAL		ANG		! angle to draw it at
C
C w/s
C
	REAL		POSTMP(2)	! other end of "height"
					! of text box
	REAL		DX,DY		! amount to move label by to
					! get it in window
	REAL		SINA,COSA	! sin and cos of angle
C
C build label if necessary
C
	IF (.NOT.HADLABEL) CALL BLDLAB(PACK)
C
C if this is the first time the label has been drawn, then set FRTCOM
C
	IF (.NOT.HADLABEL.AND.LABIND.GT.0) THEN	
	   FRTFLG = 0
	   FRTHW  = 0
	   FRTHWL = 0
	   FRTWID = ANNOWIDTH
	   FRTSIZ = 0.0
	   FRTTEX = .FALSE.		! don't draw in italic
	   FRTFC = -1			! FRTCOM well and truely nadjered
	   HADLABEL = .TRUE.
	ENDIF
C
	IF (HADLABEL) THEN
C
C try to stop start of text being clippped (as feature has been clipped
C to window). If the top of the left side of the text box is outside
C the window, move it until it lies on the window
C
	   SINA = SIN(ANG)
	   COSA = COS(ANG)
	   POSTMP(1) = POS(1) - SINA * ANNOSIZ
	   POSTMP(2) = POS(2) + COSA * ANNOSIZ
	   DX = 0.0
	   DY = 0.0
C
	   IF (POSTMP(1).LT.WINDOW(1).OR.POS(1).LT.WINDOW(1)) THEN
	      DX = MAX(WINDOW(1) - POSTMP(1),WINDOW(1) - POS(1))
	   ELSEIF (POSTMP(1).GT.WINDOW(2).OR.POS(1).GT.WINDOW(2)) THEN
	      DX = MIN(WINDOW(2) - POSTMP(1),WINDOW(2) - POS(1))
	   ENDIF
	   IF (POSTMP(2).LT.WINDOW(3).OR.POS(2).LT.WINDOW(3)) THEN
	      DY = MAX(WINDOW(3) - POSTMP(2),WINDOW(3) - POS(2))
	   ELSEIF (POSTMP(2).GT.WINDOW(4).OR.POS(2).GT.WINDOW(4)) THEN
	      DY = MIN(WINDOW(4) - POSTMP(2),WINDOW(4) - POS(2))
	   ENDIF
C
	   POS(1) = POS(1) + DX
	   POS(2) = POS(2) + DY
C
	   IF (BLAOPT) CALL BLANK_LABEL(POS(1),POS(2),POS(3),
     &	                                LAB_TEXT(1:LABIND),ANNOFONT,
     &	                                ANG,ANNOSIZ,HWTOPT.AND.ANNOHWT)
	   CALL TRITXT(LAB_TEXT(1:LABIND),ANNOFONT,
     &	               POS(1),POS(2),ANNOSIZ,ANG,HWTOPT.AND.ANNOHWT)
C
	ENDIF
C
	RETURN
	END
