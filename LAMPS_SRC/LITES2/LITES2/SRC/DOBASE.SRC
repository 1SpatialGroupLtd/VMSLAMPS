C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1991-02-06 10:50:18.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
        SUBROUTINE DOBASE
C
***     IDENT   06FE91
***     MODULE  DOBASE
C
C       Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C       Written                                 RWR	12-Mar-1985
C
C Description
C
C	LITES2 cartographic editor BASE command.
C
        IMPLICIT NONE
C
C Included Parameter Files
C
	INCLUDE	'LSL$CMNIFF:CB.STR'
***	PARAMETER/CMN:AUXDEF/
***	PARAMETER/CMN:CONSTS/
***     PARAMETER/CMN:MOANMESS/         ! moan constants
***	PARAMETER/CMN:PACK/
C
C Common Blocks
C
***	COMMON/CMN:EDGE/
***	COMMON/CMN:D14IFC/
***	COMMON/CMN:DOUT/		! cmd dec. output
***	COMMON/CMN:DRAWIN/
***	COMMON/CMN:ORIENT/
***	COMMON/CMN:STRIKE/
C
C Local Variables
C
	EXTERNAL	NASTY
C
	REAL	DX,DY	! vector of base
	REAL	R	! its length
	REAL	RMM	! its length in mm
	REAL	ANGLE	! its angle
	INTEGER	I	! index of ends
C
C Start of subroutine
C
	I = FOVRT-FOVO		! index on FOXY
	IF (FOVRT.EQ.FOLST) I = I-1	! back up if on last vertex
	DX = FOXY(1,I+1)-FOXY(1,I)	! vector along feature
	DY = FOXY(2,I+1)-FOXY(2,I)
	R = SQRT(DX*DX+DY*DY)
	RMM = R/SCLFRT
	IF (RMM.LT.SQBT) THEN
	   CALL MOAN(MSG_BASESHORT,RMM,R)
	   GOTO 9998
	ENDIF
C
C Dispatch according to secondary command
C
	GOTO ( 100, 200, 300 ), DSECN
C
C Secondary command number out of range
C
	IF (DSECN.EQ.0) GOTO 100	! default to SQUARE
	CALL MSGCMD(NASTY,MSG_ERRSECIND)
	GOTO 9998
C
C BASE SQUARE  (default)
C
  100	CONTINUE
	IF (BASNUM.GE.BASMAX) THEN	! too many bases
	   CALL MOAN(MSG_TOOMANYBAS,BASMAX)
	   CALL IGNCMD
	ELSE
	   BASNUM = BASNUM + 1
	   BASSTR(1,BASNUM)=FOXY(1,I)	! save ends of base
	   BASSTR(2,BASNUM)=FOXY(2,I)
	   BASEND(1,BASNUM)=FOXY(1,I+1)
	   BASEND(2,BASNUM)=FOXY(2,I+1)
	   IF (DX .GE.0.0) THEN
	      BASSIN(BASNUM) = DY/R	! save sin & cos of base
	      BASCOS(BASNUM) = DX/R
	   ELSE
	      BASSIN(BASNUM) = -DY/R	! save sin & cos of base
	      BASCOS(BASNUM) = -DX/R
	   ENDIF
	   BASESQ = .TRUE.
	   ANGLE = ATAN2(DY,DX)
	   IF (ANGLE.LT.0.0) ANGLE=ANGLE+TWOPI
	   ANGLE=ANGLE/PI*180.0			! convert to degrees
	   CALL INFORM(MSG_REPBASE,BASNUM,ANGLE)	! report
	ENDIF
	GOTO 9999
C
C BASE EDGE
C
  200	CONTINUE
	EDGLNE(1,1)=FOXY(1,I)	! save ends of base
	EDGLNE(2,1)=FOXY(2,I)
	EDGLNE(1,2)=FOXY(1,I+1)
	EDGLNE(2,2)=FOXY(2,I+1)
	EDLMAP=FOPAK(PAKMAP)	! save details of this feature
	EDLPNF=FOPAK(PAKPNF)
	EDGEFEATURE = FOPAK(PAKFSN)	! Feature number
	IF (FOVRT.EQ.FOLST) THEN
	   EDGEVERTEX = FOVRT - 1
	ELSE
	   EDGEVERTEX = FOVRT
	ENDIF
	BASEDG=.TRUE.
	ANGLE = ATAN2(DY,DX)
	IF (ANGLE.LT.0.0) ANGLE=ANGLE+TWOPI
	ANGLE=ANGLE/PI*180.0			! convert to degrees
	CALL INFORM(MSG_BASEMSG,'Edgematching',ANGLE)	! report
	CALL ABANDN
	GOTO 9999
C
C BASE ORIENT
C
  300	CONTINUE
	ORIBAS(1,1)=FOXY(1,I)	! save ends of base
	ORIBAS(2,1)=FOXY(2,I)
	ORIBAS(1,2)=FOXY(1,I+1)
	ORIBAS(2,2)=FOXY(2,I+1)
	BASORI=.TRUE.
	ANGLE = ATAN2(DY,DX)
	IF (ANGLE.LT.0.0) ANGLE=ANGLE+TWOPI
	ANGLE=ANGLE/PI*180.0			! convert to degrees
	CALL INFORM(MSG_BASEMSG,'Orienting',ANGLE)		! report
	CALL ABANDN
	GOTO 9999
C
C error exit
9998	CALL IGNCMD
C
9999	RETURN
        END
