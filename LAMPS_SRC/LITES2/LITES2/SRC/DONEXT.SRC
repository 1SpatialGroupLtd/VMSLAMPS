	SUBROUTINE DONEXT
C
***	IDENT   09MY96
***	MODULE  DONEXT
C
C	Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C	Written					CCB	 7-NOV-1984
C
C	LITES2 cartographic editor NEXT command.
C
	IMPLICIT NONE
C
	INCLUDE	'LSL$CMNIFF:CB.STR'
***	PARAMETER/CMN:ACS/
***	PARAMETER/CMN:AUXDEF/
***	PARAMETER/CMN:CTXS/
***	PARAMETER/CMN:MOANMESS/
***	PARAMETER/CMN:PACK/
***	PARAMETER/CMN:STAPAR/
C
***	COMMON/CMN:ACS/
***	COMMON/CMN:ATTBTS/
***	COMMON/CMN:CTXS/
***	COMMON/LSL$CMNFRT:FRTCOM/
***	COMMON/CMN:MASTER/		! odds and ends
***	COMMON/CMN:MODIFY/
***	COMMON/CMN:OIIH/
***	COMMON/CMN:OPTION/
***	COMMON/CMN:STATE/
***	COMMON/CMN:STRIKE/
C
C functions called
	LOGICAL	CHKFOL
	LOGICAL	NEXTAC
	LOGICAL THISCTX
C
	IF (SINDEX.EQ.STATE_AC) THEN
	   IF (FO) THEN			! ACs of found object
	      IF (NEXTAC(FTRACD)) THEN	! get next one
	         CALL MOAN(MSG_NONEXTAC)
	         GOTO 999
	      ENDIF
	   ELSE				! current attribute ACs
	      IF (NEXTAC(CONACD)) THEN	! get next one
	         CALL MOAN(MSG_NONEXTAC)
	         GOTO 999
	      ENDIF
	   ENDIF
	   CALL TYPAC
	   GOTO 1000
	ENDIF
C
C dealing with texts?
C
	IF (.NOT.FO.AND.SINDEX.EQ.STATE_MODIFY) GOTO 100
C
C otherwise must have a found object
C
	IF (.NOT.FO) THEN
	   CALL MOAN(MSG_NOFEATURE)
	   GOTO 999
	ENDIF
C
C a text?
C
	IF (FOPAK(PAKGT).EQ.TEXTYP) GOTO 100
C
C on circle arcs, NEXT means go to end of arc
C
	IF (FOPAK(PAKGT).GE.CLOTYP.AND.FOPAK(PAKGT).LE.FULTYP) THEN
	   CALL VERTEX(1.0)
	   GOTO 1000
	ENDIF	   
C
	IF (CHKFOL(.TRUE.)) THEN	! linear found object
	   IF (FOVRT.EQ.FOLST) THEN
	      CALL MOAN(MSG_ONLAST)	! already on last vertex
	      GOTO 999
	   ENDIF
	   FOVRT = FOVRT+1		! move to next
	   FONVRT = .TRUE.		! now on a vertex
	   CALL VERTEX(0.0)		! common code
	   GOTO 1000
	ELSE
	   GOTO 999
	ENDIF
C
C must be dealing with texts or symbols
C
C don't operate on symbols
100	IF (SINDEX.EQ.STATE_MODIFY.AND.COIPAK(PAKGT).NE.TEXTYP) THEN
	   CALL MSGCMD(MOAN,MSG_CMDONLYTEXT)
	   GOTO 999
	ENDIF
C
C only valid if COMOPT has been enabled
C
	IF (.NOT.COMOPT) THEN
	   CALL MSGCMD(MOAN,MSG_ONLYWITHCOMP)
	   GOTO 999
	ENDIF
C
C Check that not on last CTX already
C
	IF ((SINDEX.NE.STATE_MODIFY.AND.
     &	         FTRCTXD(CTXD_HOME).EQ.FTRCTXD(CTXD_LSTCTX)).OR.
     &	    (SINDEX.EQ.STATE_MODIFY.AND.
     &	         COICTXD(CTXD_HOME).EQ.COICTXD(CTXD_LSTCTX))) THEN
	   CALL MOAN(MSG_NONEXTCTX)
	   GOTO 999
	ENDIF
C
C load next CTX
C
	IF (SINDEX.EQ.STATE_MODIFY) THEN
	   SUBTXT = .TRUE.
	   CALL VTSTAT
	   CALL PUTLNG(%VAL(COICTXD(CTXD_HOME) + CTX_O_NXTPTR),
     &	         COICTXD(CTXD_CUR))
	   IF (.NOT.THISCTX(COICTXD)) THEN	
	      CALL LOADCOI(.TRUE.)	! transfer to COI variables
					! and make home
	   ENDIF
	ELSE
	   CALL PUTLNG(%VAL(FTRCTXD(CTXD_HOME) + CTX_O_NXTPTR),
     &	         FTRCTXD(CTXD_CUR))
	   IF (.NOT.THISCTX(FTRCTXD)) THEN	
C
C load FO variables (and verify)
	      CALL LOADFO(.TRUE.)
	      FTRCTXD(CTXD_HOME) = FTRCTXD(CTXD_CUR)! make this one home
C
C move cursor
	      CSXY(1) = CTXBUFR(CTX_L_X)
	      CSXY(2) = CTXBUFR(CTX_L_Y)
	      IF (ZOPT) CALL GETZ(CSZI,FONATT,FOATTC,FOATTV(1,1))
	      CSSTIL = .FALSE.		! cursor has moved
	   ENDIF
	ENDIF
	GOTO 1000
C
C error exit
999	CALL IGNCMD
C
1000	RETURN
	END
