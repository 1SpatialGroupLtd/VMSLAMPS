C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1985-06-12 10:31:56.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	INTEGER*4 FUNCTION TRNBUT(BUT,DEV)
C
***	IDENT	12JN85
***	MODULE	TRNBUT
C
C	Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C	Created					RWR	21-Jan-1985
C
C Description
C
C	Function that returns the "normalised" button number from
C	a digitised input. It returns the button in the range
C	LOWB =< BUTTON =< NUMBER OF BUTTONS (defined by PUCK command)
C	If the puck in question has not been defined, or the button
C	input is higher than the NUMBER of BUTTONS, then -1 is
C	returned.
C
	IMPLICIT NONE
C
C Arguments
C
	INTEGER*4	BUT		! button number returned by
					! digitiser
	INTEGER*4	DEV		! number of device
C
***	PARAMETER/CMN:MACMEN/
C
***	COMMON/CMN:MENUS/
C
C Local Variables
	INTEGER*4	I		! counter
C
	TRNBUT=-1			! assume failure
C
C look at each puck that has been defined
	DO 10, I=1,PUKTOP
	   IF (PUKDEV(I).EQ.DEV) THEN	! this puck
C
C make sure number is within range defined in PUCK command
	      IF (BUT+LOWB.LE.PUKBUT(I)) TRNBUT=BUT+LOWB
	      GOTO 20
	   ENDIF
10	CONTINUE
C
20	RETURN
	END
