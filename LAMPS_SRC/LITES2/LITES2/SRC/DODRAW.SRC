C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1996-05-08 12:09:58.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE DODRAW
C
***	IDENT	08MY96
***	MODULE	DODRAW
C
C	Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C	Written					RWR	1-Feb-1985
C
C Description
C
C	LITES2 cartographic editor DRAW command.
C
	IMPLICIT NONE
C
	INCLUDE	'LSL$CMNIFF:CB.STR'
***	PARAMETER/CMN:ACS/
***	PARAMETER/CMN:AUXDEF/
***	PARAMETER/CMN:MOANMESS/
***	PARAMETER/CMN:PACK/
C
***	COMMON/CMN:DOUT/
***	COMMON/CMN:DRAWIN/
***	COMMON/LSL$CMNFRT:FRTACD/
***	COMMON/CMN:GLOBAL/
***	COMMON/CMN:IMAGE/
***	COMMON/CMN:LABELS/
***	COMMON/CMN:MASTER/
***	COMMON/CMN:PLOT/
***	COMMON/CMN:RFCTRL/
***	COMMON/CMN:SETUP/
***	COMMON/CMN:STRIKE/
***	COMMON/LSL$CMNLSL:TXTC/
C
	EXTERNAL	NASTY,MOAN
C
C Functions called
	INTEGER		EXPAND
C
C Local Variables
	INTEGER		DRW_COMMAND
	REAL		SAV_WINDOW(4)
	LOGICAL		DRAW_VECTOR
C
	DRAW_VECTOR = .FALSE.		! assume not DRAW VECTOR
C
C Despatch according to secondary command
	GOTO (100,200,300,400,500,600,700,800,900,1000,1100,
     &	      1200,1300,1400,1500,1600,1700,1800,1900,2000,
     &	      2100,2200,2300,2400,2500), DSECN
C
C Secondary command number out of range
	IF (DSECN.EQ.0) GOTO 200	! default is DRAW SCREEN
	CALL MSGCMD(NASTY,MSG_ERRSECIND)
	GOTO 9999
C
C Secondary command MAP
100	CALL CPYPAK(4,LIMITS,WINDOW)	! set full window
	IF (PLOT_ON) CALL CPYPAK(4,WINDOW,SAV_WINDOW)
	HADIMG = .FALSE.		! zap stored image window
	GOTO 210
C
C Secondary command SCREEN
C restore saved image window if got one
200	IF (PLOT_ON) CALL CPYPAK(4,WINDOW,SAV_WINDOW)
	IF (SETUP.AND.HADIMG) CALL CPYPAK(4,WINIMG,WINDOW)
C
C get rid of cursor
210	CURS=.FALSE.
	CALL RFDRAW
C
C redraw window
	CALL FLVIEW
C
	IF (PLOT_ON) CALL CPYPAK(4,SAV_WINDOW,WINDOW)
C
C set ready to reinitialise cursor
	INTCUR=.FALSE.
	CURS=.TRUE.
	GOTO 9999			! finished
C
C Secondary command HARDCOPY
300	CONTINUE
C
C call device dependent hardcopy routine
	IF (.NOT.NODISP) CALL HARCOP
	GOTO 9999
C
C Secondary command REGION
400	CALL DRWREG(.FALSE.)
	GOTO 9000
C
C Secondary command GRID
500	CALL DRWGRD
	GOTO 9000
C
C Secondary command LABELS
600	CONTINUE
	IF (LABFEAT.AND.NOLAB) THEN
	   CALL MOAN(MSG_NOLABEL,'feature')
	   CALL LEARN(MSG_SETLABEL)
	ELSEIF (.NOT.LABFEAT.AND.NUM_LAB_ATTR.EQ.0) THEN
	   CALL MOAN(MSG_NOLABEL,'point')
	   CALL LEARN(MSG_SETLABEL)
	ELSE
	   MARKING = .FALSE.
	   GOTO 8000
	ENDIF
	GOTO 9000
C
C Secondary command MARK
700	CONTINUE
C
C test that symbol number has been set up properly
	IF (ANNOMARK.LE.0) THEN
	   CALL MOAN(MSG_NOMARK)
	   CALL LEARN(MSG_SETMARK)
	ELSE
	   MARKING = .TRUE.
	   WITH_SYMBOL = .TRUE.
	   GOTO 8000
	ENDIF
	GOTO 9000
C
C Secondary command POSITION
800	DRW_COMMAND = CURS_POSITION
	GOTO 6000
C
C Secondary command SHEET
900	DRW_COMMAND = CURS_SHEET
	GOTO 6000
C
C Secondary command ABSOLUTE
1000	DRW_COMMAND = CURS_ABSOLUTE
	GOTO 6000
C
C Secondary command GEOGRAPHICAL
1100	DRW_COMMAND = CURS_GEOGRAPHICALS
	GOTO 6000
C
C Secondary command TEXT
1200	DRW_COMMAND = CURS_TEXT
	GOTO 6000
C
C Secondary command VECTOR
C Horrid flag, just so can journal POS before cursor is moved
1300	DRAW_VECTOR = .TRUE.
	GOTO 7000
C
C Secondary command TITLE - a text with no symbol
1400	DRW_COMMAND = CURS_TITLE
	GOTO 6000
C
C Secondary command MOVE
1500	CALL DRWVECTOR(.FALSE.)
	GOTO 9000
C
C Secondary command AREAREGION
1600	CALL DRWREG(.TRUE.)
	GOTO 9000
C
C Secondary command LEGEND
1700	CALL DRWLEG
	GOTO 9000
C
C Secondary command IFF
1800	CALL DRWIFF
	GOTO 9000
C
C Secondary command DTI
1900	CALL DRWIMG(TYPE_DTI)
	GOTO 9000
C
C Secondary command LSI
2000	CALL DRWIMG(TYPE_LSI)
	GOTO 9000
C
C Secondary command FEATURE
2100	CALL DRWFEAT
C
C write a LOCATE FSN
	IF (ANNOMAC.GT.0.AND..NOT.PLOT_ON.AND..NOT.MOANED) THEN
	   TXTPTR = EXPAND('%W%%LOCA FSN %N %N',TXTBUF,
     &				FOPAK(PAKFSN),FOPAK(PAKMAP)+1)
	   CALL STORE_STRING(TXTDSC,ANNOMAC)
	ENDIF
	GOTO 9000
C
C Secondary command LSR
2200	CALL DRWIMG(TYPE_LSR)
	GOTO 9000
C
C Secondary command NUMBERS
2300	CONTINUE
	MARKING = .TRUE.
	WITH_SYMBOL = .FALSE.
	GOTO 8000
C
C Secondary command IMAGE
2400	CALL DRAW_IMAGE
	GOTO 9000
C
C Secondary command GEOEMTR(Y/IES)
2500	CALL DRWGEOM
	GOTO 9000
C
C draw something at cursor position
6000	CALL DRWCURSPOS(DRW_COMMAND)
	IF (MOANED) CALL IGNCMD
C
C write a position command to annotation journal
C before the command itself
7000	IF (ANNOMAC.GT.0.AND..NOT.PLOT_ON.AND..NOT.MOANED) THEN
	   TXTPTR = EXPAND('%W%%POS %G0.8 %G0.8',TXTBUF,
     &					CSXY(1),CSXY(2))
	   IF (CSZI.NE.IFF_ABSENT) TXTPTR = TXTPTR + EXPAND(
     &			'%W %G0.8',TXTBUF(TXTPTR+1),CSXY(3))
	   CALL STORE_STRING(TXTDSC,ANNOMAC)
	ENDIF
	IF (DRAW_VECTOR) CALL DRWVECTOR(.TRUE.)
	GOTO 9000
C
C scan file drawing labels, or marking points
8000	CURS = .FALSE.		! take cursor down
	CALL RFDRAW
	CALL LABVIEW		! draw labels
	CURS = .TRUE.		! get RFDRAW to put cursor back
	GOTO 9000
C
C write command to annotation journal
9000	IF (ANNOMAC.GT.0.AND..NOT.PLOT_ON.AND..NOT.MOANED
     &						) CALL STORE_ANNO
C
9999	RETURN
        END
