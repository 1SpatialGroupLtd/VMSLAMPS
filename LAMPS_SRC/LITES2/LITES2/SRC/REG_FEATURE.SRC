C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1996-05-10 11:14:10.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
        LOGICAL FUNCTION REG_FEATURE(REG)
C
***     IDENT   10MY96
***     MODULE  REG_FEATURE
C
C       Copyright Laser-Scan Ltd., Cambridge, England.
C
C       Written                                 RWR 	16-Aug-1985
C
C	create a region from a feature
C	returns FALSE for success
C
        IMPLICIT NONE
C
	INCLUDE	'LSL$CMNIFF:CB.STR'
***	PARAMETER/CMN:AUXDEF/
***	PARAMETER/CMN:CTXS.PAR/
***     PARAMETER/CMN:MOANMESS/         ! moan constants
***	PARAMETER/CMN:PACK/
***	PARAMETER/CMN:REGPAR/
C
***     COMMON/CMN:GLOBAL/		! global variables
***	COMMON/CMN:REGCMN/
***	COMMON/CMN:STRIKE/
***	COMMON/CMN:WORK_TEXT/
C
C argument
	INTEGER*4	REG		! region number
C
C Functions called
	LOGICAL		CHKFOL		! check that found object is
					! linear
	LOGICAL		CHKTXT		! check we have a text
	LOGICAL		CHKSYM		! check we have a symbol
	LOGICAL		ADDPPT		! add a PPT
	LOGICAL		TXTREG		! gets text region
	LOGICAL		SYMREG		! gets symbol region
C
C Local Variables
	INTEGER*4	I		! loop counter
	INTEGER*4	V1		! control getting vertices
	INTEGER*4	TXTL		! no. of points in text region
C
C assume failure
	REG_FEATURE = .TRUE.
C
C check for text/symbol found object, or text/symbol being modified
	IF (CHKTXT().OR.CHKSYM()) THEN
C
C get the region boundary 
C
	   TXTL = MAXTXP	! max size of array (4 points per char)
	   IF (CHKTXT()) THEN
	      IF (TXTREG(TXTL,TXTXY)) THEN
	         GOTO 900
	      ENDIF
	   ELSE
	      IF (SYMREG(TXTL,TXTXY)) THEN
	         GOTO 900
	      ENDIF
	   ENDIF
C
C add vertices to region
C
	   DO 130 I=1,TXTL
	      IF (ADDPPT(TXTXY(1,I),REG)) THEN
	         GOTO 900
	      ENDIF
  130	   CONTINUE
C 
C check for linear found object
	ELSEIF (.NOT.CHKFOL(.FALSE.)) THEN	! no linear found object
	   GOTO 900
C
C check for more than 3 points in feature
	ELSEIF (FOLST.LT.3) THEN
	   CALL MOAN(MSG_TOOSMALLREG)
	   GOTO 900
C
C ready to set up region for linear features
	ELSE
C
C get each vertex in feature
	   V1=1
  220	   CONTINUE			! get next lot of vertices
	   CALL GETVRT(FOPAK,V1,FOLST)
	   DO 240,I=1,RITOP
C
C add this vertex to the region (but not if it is the last vertex of
C a closed feature)
	      IF ((V1+I-1).LT.FOLST.OR.
     &	         (RIXY(1,I).NE.FOTHIS(1).OR.
     &	          RIXY(2,I).NE.FOTHIS(2))) THEN
	         IF (ADDPPT(RIXY(1,I),REG)) THEN
	            GOTO 900   
	         ENDIF
	      ENDIF
  240	   CONTINUE
C
C see if there are any more points to get
C
	   V1=V1+RITOP
	   IF (V1.LE.FOLST) GOTO 220
	ENDIF
C
C region succesfully created
	REG_FEATURE = .FALSE.
C
900	CONTINUE
        RETURN
        END
