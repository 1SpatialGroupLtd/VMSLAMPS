C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1992-02-14 16:13:26.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE STDBFA(NCOORD,XYIN,ZIN)
C
***	MODULE	STDBFA
***	IDENT	14FE92
C
C Copyright Laser Scan Laboratories Ltd, Cambridge, England.
C Author Clarke Brunt (cf FRTLIB routine SRIBFA)
C
C Created					CCB	4-July-1984
C
C Routine to buffer coordinates up before passing them on to
C either, the line pattern generator, or directly to the GKS
C output routine (GPL). The routine accepts a block of coords.
C This may be just single points, as in the case of circles/arcs
C passed from STCIRC or interpolated curves passed from POLATE).
C It may, however, be many points, as in the case of line strings
C passed directly from STDRAW.
C This routine must also ensure that the blocks of data it passes
C on are compatable with what GKS requires. GPL simply plots
C straight lines between each point so the current position must
C be passed as the 1st coordinate in each block.
C
C
	IMPLICIT NONE
C
	INTEGER	NCOORD		! number of coords in input buffer.
	REAL XYIN(2,NCOORD)
	INTEGER ZIN(NCOORD)	! z coords (as integers)
C
***	COMMON/CMN:STDBFC/
C
C This is a jacket routine that calls the real routine with the buffers
C in the common block
C
	CALL STDBFA_SUB(NCOORD,XYIN,ZIN,STDBFM,
     &	                %VAL(STDBFX_ADDR),%VAL(STDBFY_ADDR),
     &	                %VAL(STDBFZ_ADDR),STDBFP)
C
	RETURN
C
	END
C
C
	SUBROUTINE STDBFA_SUB(NCOORD,XYIN,ZIN,ARRAY_SIZE,
     &	                      XARRAY,YARRAY,ZARRAY,PTR)
C
***	MODULE	STDBFA_SUB
***	IDENT	14FE92
C
C Copyright Laser Scan Laboratories Ltd, Cambridge, England.
C Author Clarke Brunt (cf FRTLIB routine SRIBFA)
C
C Created					CCB	4-July-1984
C
C Routine to do the work
C
	IMPLICIT NONE
C
	INTEGER	NCOORD		! number of coords in input buffer.
	REAL	XYIN(2,NCOORD)
	INTEGER ZIN(NCOORD)	! z coords (as integers)
	INTEGER	ARRAY_SIZE
	REAL 	XARRAY(ARRAY_SIZE)
	REAL 	YARRAY(ARRAY_SIZE)
	INTEGER	ZARRAY(ARRAY_SIZE)
	INTEGER	PTR
C
C W/s.
	INTEGER	I			! pointer to X/YIN.
C
C Fill up the output buffer.
	DO 20 I=1,NCOORD
C Add another coord to the buffer.
	   PTR=PTR+1
	   XARRAY(PTR)=XYIN(1,I)
	   YARRAY(PTR)=XYIN(2,I)
	   ZARRAY(PTR) = ZIN(I)
C
C Is the output buffer full - if so then output it 
C preserving continuity point
	   IF (PTR.GE.ARRAY_SIZE) CALL STDBFF(1)
20	CONTINUE
C
	RETURN
C
	END
