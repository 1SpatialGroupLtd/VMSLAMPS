C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1995-01-27 11:55:46.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE QIOUP
     &	   (ASGN,NAME,CHANNEL,EFLAG,IOSB,AST,BUFLEN,BUFFER,QIREAD,ABORT)
C
***	IDENT	27JA95
***	MODULE	QIOUP
C
C	Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C	Created					RWR	17-Sep-1987
C
C Description
C
C To put up a QIO for INTERACT 
C
	IMPLICIT NONE
C
C Arguments
	LOGICAL*1	ASGN		! is channel assigned yet?
	CHARACTER*(*)	NAME		! device name
	INTEGER*2	CHANNEL		! channel
	INTEGER*4	EFLAG		! event flag to use
	INTEGER*2	IOSB(4)		! IOSB for QIO
	INTEGER*4	AST		! AST to call
	INTEGER		BUFLEN		! length of BUFFER
	BYTE		BUFFER		! BUFFER for QIO
	LOGICAL*1	QIREAD		! is read up now?
	LOGICAL*1	ABORT		! fatal error has occurred
C
***	PARAMETER/CMN:MOANMESS/
***	COMMON/CMN:GLOBAL/
***	COMMON/CMN:WORKS/
C
	INCLUDE	'($IODEF)'
C
C w/s
	INTEGER		IERR
	INTEGER*4	IOFUNC
	INTEGER*4	P4
C
C functions
	INTEGER*4	SYS$ASSIGN
	INTEGER*4	SYS$QIO
C
	IF (ABORT) GOTO 999		! don't do anything
C
	IF (.NOT.ASGN) THEN
	   IERR = SYS$ASSIGN(NAME,CHANNEL,,)
	   IF (.NOT.IERR) THEN
	      CALL MOAN(MSG_FLDASSCHNNAM,NAME)
	      CALL LITES2_SIGNAL(IERR)
	      ABORT = .TRUE.
	      GOTO 999
	   ENDIF
	   ASGN = .TRUE.
	ENDIF
C
	IF (QIREAD) GOTO 999
C
C If we are reading SYS$INPUT (on TTICHN) and it is not a mailbox,
C then use the ESCAPE modifier, to read escape sequences
	IOFUNC = IO$_READVBLK
	P4 = 0
	IF (CHANNEL.EQ.TTICHN .AND. .NOT.IMAIL) THEN
	   IOFUNC = IOFUNC.OR.IO$M_ESCAPE
	   IF (TTIMBK(1).NE.0) P4 = %LOC(TTIMBK)
	ENDIF
C
	IERR = SYS$QIO(   %VAL(EFLAG),		! efn
     &	 		  %VAL(CHANNEL),	! channel
     &			  %VAL(IOFUNC),		! function
     &			  IOSB,			! iosb
     &			  AST,			! astadr
     &			  ,			! astprm
     &			  BUFFER,		! p1 =BUFFER
     &			  %VAL(BUFLEN),		! p2 = size
     &			  ,			! p3 = timeout
     &			  %VAL(P4),		! p4 = terminator mask
     &			  ,			! p5 = prompt BUFFER
     &			  )			! p6 = prompt size
C
	IF (.NOT.IERR) THEN
	   CALL MOAN(MSG_ERRINDEVRD,NAME)
	   CALL LITES2_SIGNAL(IERR)
	ELSE
	   QIREAD = .TRUE.			! read now going
	ENDIF
C
C Return
C
  999	RETURN
	END
