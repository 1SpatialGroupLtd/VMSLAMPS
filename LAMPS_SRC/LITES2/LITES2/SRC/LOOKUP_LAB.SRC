C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1990-10-19 18:08:10.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE LOOKUP_LAB(CURSTR,CURPTR,LABEL)
C
***	IDENT	19OC90
***	MODULE	LOOKUP_LAB
C
C	Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C	Created					CCB	18-Oct-1990
C
C Look up a label - returns char position to start decoding
C
	IMPLICIT NONE
C
***     PARAMETER/CMN:CHARS/		! character constants
***     PARAMETER/CMN:MOANMESS/		! moan constants
C
C Arguments
	CHARACTER*(*)	CURSTR		! current line
	INTEGER*2	CURPTR		! current pointer
	CHARACTER*(*)	LABEL		! the label to look for
C
C Functions called
	INTEGER		STR$FIND_FIRST_NOT_IN_SET
	INTEGER		STR$CASE_BLIND_COMPARE
	INTEGER		LIB$LOCC
C
C Workspace
	INTEGER		POS,LOC
C
	POS = 1
C
C look for start of a label
10	LOC = STR$FIND_FIRST_NOT_IN_SET(CURSTR(POS:),' '//CHAR(9))
	IF (LOC.EQ.0) GOTO 800
	POS = POS + LOC - 1
	IF (ICHAR(CURSTR(POS:POS)).NE.DOT) GOTO 20
C
	POS = POS+1
	IF (LEN(CURSTR)-POS.LT.LEN(LABEL)) GOTO 800
	IF (STR$CASE_BLIND_COMPARE(
     &		CURSTR(POS:POS+LEN(LABEL)-1),LABEL).NE.0) GOTO 20
	POS = POS + LEN(LABEL)
	IF (ICHAR(CURSTR(POS:POS)).EQ.COLON) GOTO 900
C
C find start of next command
20	LOC = LIB$LOCC(CHAR(TERM),CURSTR(POS:))
	IF (LOC.EQ.0) GOTO 800
	POS = POS + LOC
	GOTO 10
C
800	CALL MOAN(MSG_LABNOTFOUND,LABEL)
	GOTO 999
C
900	CURPTR = POS+1
999	RETURN
	END	
