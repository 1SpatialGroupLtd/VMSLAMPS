	SUBROUTINE DOZOOM
C
***	IDENT	10JN97
***	MODULE	DOZOOM
C
C	Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C	Written					PGH	 9-NOV-1984
C
C	LITES2 cartographic editor ZOOM command.
C
	IMPLICIT NONE
C
***	PARAMETER/CMN:END/
***	PARAMETER/CMN:MOANMESS/		! moan constants
***	PARAMETER/CMN:STAPAR/
C
***     COMMON/CMN:DOUT/		! cmd dec. output
***	COMMON/CMN:DRAWIN/		! output drawing control
***	COMMON/CMN:GLOBAL/
***	COMMON/CMN:IMAGE/
***	COMMON/CMN:MASTER/
***	COMMON/CMN:OVERLAY/
***	COMMON/CMN:RFCTRL/		! refresh picture control
***	COMMON/CMN:SETUP/
***	COMMON/CMN:STATE/
***	COMMON/CMN:WORKS/
C
	EXTERNAL	ZOOM_CMD_TABLE
C
C Local Variables
	INTEGER	WKID,OV,IM
	REAL	ZFACT			! zoom factor
	REAL	WXSIZ,WYSIZ		! window size
	REAL	ZEROWIN			! a small number
	REAL	X,Y			! position to zoom about
C
C get which workstation we are (mainly) working on
	WKID = 1					! assume primary
	IF (WKAC(2).AND.(.NOT.WKAC(1).OR.WKSUPP(1))) WKID = 2 ! secondary
C
C get zoom factor
	ZFACT=5.0			! default
	IF (DNREA.EQ.1) THEN
	   ZFACT=DREALS(1)		! arg given
	   IF (ZFACT.LT.0.01.OR.ZFACT.GT.100.0) THEN
	      CALL MOAN(MSG_ARGRNG)	! out of range
	      GOTO 999
	   ENDIF
	ENDIF
C
C see whether it is ZOOM [n] IMAGE
C
	IF (DSTRIN) THEN
	   CALL GET_COMMAND(DSTR(:DSTRL),ZOOM_CMD_TABLE)
	   IF (MOANED) GOTO 999
	   ZOOM_IMAGE = ZFACT
	   IF (SETUP.AND..NOT.WARP_TO_IMAGE) THEN
	      WXSIZ = SCRNSX(WKID)/SCRSZX(WKID)*RASTSX(WKID)
	      IF (PIXELSIZE(1).NE.0) ZFACT = ZFACT *
     &		(WINDOW(2)-WINDOW(1))/(WXSIZ*PIXELSIZE(1)*SETSCA)
	   ELSE
C
C estimate a ZFACT to give us what we want - ADJUST does the rest
	      IF (IMAGE_ZOOM.NE.0) THEN
	         ZFACT = ZFACT*IMAGE_VIEW/IMAGE_ZOOM
	      ENDIF
	   ENDIF
	ENDIF
C
C set up value to be considered as zero
C
	ZEROWIN=MAX(ABS(LIMITS(2)-LIMITS(1)),ABS(LIMITS(4)-LIMITS(3)))
	ZEROWIN=ZEROWIN*1E-6		! surely nobody wants a window
					! as small as this
C
C work out new window size
C
	X = CSXY(1)			! zoom about cursor
	Y = CSXY(2)
	IF (SETUP.AND.HADIMG) THEN	! use saved image window
	   WXSIZ=(WINIMG(2)-WINIMG(1))/ZFACT	! x window size
	   WYSIZ=(WINIMG(4)-WINIMG(3))/ZFACT	! y window size
C
C transform cursor to image space
	   CALL TRNUSE(X,Y,SETCOF,SET_TRANSFORM)
	ELSE
	   WXSIZ=(WINDOW(2)-WINDOW(1))/ZFACT	! x window size
	   WYSIZ=(WINDOW(4)-WINDOW(3))/ZFACT	! y window size
	ENDIF
C
C don't try to produce a silly small window
	IF (WXSIZ.LE.ZEROWIN.OR.WYSIZ.LE.ZEROWIN) THEN
	   CALL MOAN(MSG_WINTOOSMALL)
	   GOTO 999
	ENDIF
C
C adjust window to same aspect ratio as screen
	IF (NODISP) GOTO 100
C
C but not if drawing (non-warped) images -
C a non-square pixel size may make a non-screen-shaped window desirable -
C see also ADJUST
	IF (.NOT.OVERLAYS_INUSE.OR.
     &		(SETUP.AND..NOT.WARP_TO_IMAGE)) GOTO 6
	DO 5 OV=1,MAXOVER
	   IF (.NOT.OVERLAY_IMAGE(OV)) GOTO 5
	   DO 4 IM=1,MAXIMAGE
	      IF (IMAGE_TYPE(IM).NE.0.AND.O_IMSEL(IM,OV)
     &					) GOTO 100 ! drawing an image
4	   CONTINUE
5	CONTINUE
C
C NB use WINDOW as temporary
6	WINDOW(3) = SCRNSY(WKID)/SCRNSX(WKID)
	IF (WYSIZ/WXSIZ.GT.WINDOW(3)) THEN
	   WXSIZ = WYSIZ/WINDOW(3)
	ELSE
	   WYSIZ = WXSIZ*WINDOW(3)
	ENDIF
C
C set new window centred around cursor
C
100	WINDOW(1) = MAX(X-0.5*WXSIZ,LIMITS(1))
	WINDOW(2) = MIN(WINDOW(1)+WXSIZ,LIMITS(2))
	WINDOW(1) = MAX(WINDOW(2)-WXSIZ,LIMITS(1))
	WINDOW(3) = MAX(Y-0.5*WYSIZ,LIMITS(3))
	WINDOW(4) = MIN(WINDOW(3)+WYSIZ,LIMITS(4))
	WINDOW(3) = MAX(WINDOW(4)-WYSIZ,LIMITS(3))
C
C get rid of cursor
	CURS = .FALSE.
	CALL RFDRAW
C
C redraw picture
	CALL FLVIEW
C
C want cursor back on, but leave its position unchanged
C Change old cursor position to force RFDRAW to re-write cursor
	CURS = .TRUE.
	OCSXY(1) = CSXY(1)+1.0	! any value not equal to CSXY(1)
	SETING = .FALSE.	! force ABANDN to remain in SETUP state
	PNTING = .FALSE.	! force ABANDN to remain in PAINT state
	IF (SINDEX.NE.STATE_CONSTRUCT) CALL ABANDN
        SETING = .FALSE.
	IF (SINDEX.EQ.STATE_SETUP) SETING = .TRUE.
	PNTING = .FALSE.
	IF (SINDEX.EQ.STATE_PAINT) THEN
	   PNTING = .TRUE.
	   NDMODE = END_PAINT
	ENDIF
	GOTO 1000
C
C error exit
999	CALL IGNCMD
C
1000	ZOOM_IMAGE = 0.0	! flag not doing ZOOM [n] IMAGE now
	RETURN
	END
