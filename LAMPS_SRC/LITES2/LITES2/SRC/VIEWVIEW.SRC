C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1992-03-23 18:12:48.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE VIEWVIEW
C
***	MODULE	VIEWVIEW
***	IDENT	23MR92
C
C Copyright Laser Scan Laboratories Ltd., Cambridge, England.
C Author Ron Russell	16-July-1986
C
C To render the features in the part of the IFF file within bounds 
C contained in WINDOW.
C
	IMPLICIT NONE
C
***	PARAMETER/CMN:MOANMESS/
***	PARAMETER/CMN:SECTOR/
***	PARAMETER/CMN:PACK/
C
***	COMMON/CMN:CNSTRN/
***	COMMON/CMN:DRAWIN/
***	COMMON/CMN:MASTER/
***	COMMON/CMN:OPTION/
***	COMMON/CMN:SECMAP/
***	COMMON/CMN:SORT/
C
C functions for SCNSEC etc
	EXTERNAL VIEWDRW,SAVEDP
	LOGICAL	 HADBREAK,SRTMEM
	LOGICAL	 LIB$EXTZV
C
C w/s
	INTEGER	I,J
	INTEGER	XLIM,YLIM
	LOGICAL	SAV_DRAW_PRIORITY
C
C clear 'involved' array
C
	CALL VIOCLR(%VAL(INVLVD),INVLVD_SIZE,0)
C
C do not use 'prioritised' drawing
	SAV_DRAW_PRIORITY = DRAW_PRIORITY
	DRAW_PRIORITY = .FALSE.
C
C and flag the 'involved' sectors
C
	YLIM = (WINDOW(4)-YOFF)/YSECTW
	IF (YLIM.GE.XRANGE) YLIM = XRANGE-1
	XLIM = (WINDOW(2)-XOFF)/XSECTW
	IF (XLIM.GE.YRANGE) XLIM = YRANGE-1
C
	DO 30 J=
     &      IFIX((WINDOW(3)-YOFF)/YSECTW)*YRANGE,YLIM*YRANGE,YRANGE
	   DO 30 I=IFIX((WINDOW(1)-XOFF)/XSECTW)+1,XLIM+1
	      CALL LIB$INSV(1,I+J,1,%VAL(INVLVD))
CCCCC	      INVLVD(I+J) = .TRUE.
   30	CONTINUE
C
C set up constraints for RELVNT
	PNFCNS = .FALSE.		! no NFs to be ignored
	AUXCNS = .FALSE.		! ditto
C
C clear DRAFLG bit in all packs in involved sectors
35	DO 40 I=1,TOPSEC
	   IF (LIB$EXTZV(I,1,%VAL(INVLVD))) CALL CLRSEC(DRAFLG,I)
   40	CONTINUE
C
C and off we go
	IF (SRTOPT) THEN		! want sorted by FSN
C
C make a pass saving the pack addresses
	   IF (SRTMEM()) THEN	! get memory to sort in
	      CALL MOAN(MSG_CANTSORT)
	   ELSE
	      DO 50 I=1,TOPSEC
	         IF (LIB$EXTZV(I,1,%VAL(INVLVD))) 
     &	                     CALL SCNSEC(I,SAVEDP,DRAFLG)
C
C if we have run out of sorting memory, need to start again by clearing flags
C and getting more memory
	         IF (SORPTR .GE. SORLIM) THEN
	            SORFAC = SORFAC + (SORFAC * SORFAC_INC)
	            GOTO 35
	         ENDIF
	      IF (HADBREAK()) GOTO 70 ! CTRL/C typed - abandon
   50         CONTINUE
	      CALL VIEWSAV		! sort and draw them
	   ENDIF
	ELSE				! just normal order
C
C make a pass actually rendering
	   DO 60 I=1,TOPSEC
	      IF (LIB$EXTZV(I,1,%VAL(INVLVD))) 
     &	                     CALL SCNSEC(I,VIEWDRW,DRAFLG)
	      IF (HADBREAK()) GOTO 70 ! CTRL/C typed - abandon
   60	   CONTINUE
	ENDIF
C
70	CONTINUE
	DRAW_PRIORITY = SAV_DRAW_PRIORITY
	RETURN
	END
