	SUBROUTINE VIEW_BFF(ACTION)
C
***	MODULE	VIEW_BFF
***	IDENT	14FE92
C
C Copyright Laser Scan Laboratories Ltd., Cambridge, England.
C
C Created 					RWR	13-December-1989
C
C clears  or flushes  the coordinate buffer from STDBFA
C ACTION = 0 -> clear buffer
C ACTION = 1 -> flush buffer keeping continuity point
C ACTION = 2 -> final flush of buffer
C 
C
	IMPLICIT NONE
C
***	COMMON/CMN:STDBFC/
C
C arguments
C
	INTEGER		ACTION		! what to do
C
C equivalence things onto STDBFC common block - SEE ALSO VIEW_BFA.SRC
	INTEGER		VIEW_BFM
C
	VIEW_BFM = STDBFM/2
C
C This is a jacket routine that calls the real routine with the arrays
C from the common block
C
	CALL VIEW_BFF_SUB(ACTION,VIEW_BFM,%VAL(STDBFZ_ADDR),
     &	                  %VAL(STDBFX_ADDR),STDBFP)
C
	RETURN
	END


	SUBROUTINE VIEW_BFF_SUB(ACTION,VIEW_BFM,ZZ,XXYY,STDBFP)
C
***	MODULE	VIEW_BFF_SUB
***	IDENT	14FE92
C
C Copyright Laser Scan Laboratories Ltd., Cambridge, England.
C
C Created 					RWR	13-December-1989
C
C clears  or flushes  the coordinate buffer from STDBFA
C ACTION = 0 -> clear buffer
C ACTION = 1 -> flush buffer keeping continuity point
C ACTION = 2 -> final flush of buffer
C 
C
	IMPLICIT NONE
C
***	PARAMETER/CMN:MOANMESS/
C
***	COMMON/LSL$CMNFRT:FRTCOM/
***	COMMON/CMN:VIEW/
C
C arguments
C
	INTEGER		ACTION		! what to do
	INTEGER		VIEW_BFM
C
	INTEGER		ZZ(2,VIEW_BFM)		! treat as integer to allow
	REAL		XXYY(2,VIEW_BFM)
	INTEGER		STDBFP
C
C function
	INTEGER		CALLR
C
C w/s
	INTEGER		RETCOD
	INTEGER		DUMMY
	INTEGER		VC
	EQUIVALENCE	(VC,VIEW_CURRENT)
C
C if flush call then get the buffer out
C
	IF (ACTION.GT.0) THEN
C
C pass closed fill areas
	   IF (FRTGT.EQ.ARETYP.AND.STDBFP.LT.VIEW_BFM.AND.
     &	       (XXYY(1,STDBFP).NE.XXYY(1,1).OR.
     &	        XXYY(2,STDBFP).NE.XXYY(2,1))) THEN
	      STDBFP = STDBFP+1
	      XXYY(1,STDBFP) = XXYY(1,1)
	      XXYY(2,STDBFP) = XXYY(2,1)
 	      ZZ(1,STDBFP) = ZZ(1,1)
	      ZZ(2,STDBFP) = ZZ(2,1)
	   ENDIF
C
	   RETCOD = CALLR(VIEW_ID(VC),
     &	                  VIEW_LEVEL(VC),
     &	                  VIEW_DTILUN,
     &	                  FRTGT,
     &	                  FRTCOL,
     &	                  FRTCOL,
     &	                  DUMMY,
     &	                  XXYY,
     &	                  ZZ,
     &	                  STDBFP,
     &	                  .FALSE.,
     &	                  VIEW_Z_INTERP_METHOD,
     &	                  VIEW_BOT_STRAIGHT,
     &	                  VIEW_TOP_STRAIGHT,
     &	              %VAL(VIEW_ADDRESSES(XVISA_RENDER_SOLID_OBJECT)))
C
	   IF ((.NOT.RETCOD).AND.(RETCOD.NE.VIEW_VISA__OUTSIDEVIEW)) THEN
	      CALL MOAN(MSG_VISLIBERR)
	      CALL LITES2_SIGNAL(RETCOD)
	   ENDIF
	ENDIF
C
	IF (ACTION.EQ.1) THEN			! continuity flush
	   XXYY(1,1) = XXYY(1,STDBFP)		! copy last point
	   XXYY(2,1) = XXYY(2,STDBFP)		! for continuity
	   ZZ(1,1)   = ZZ(1,STDBFP)
	   ZZ(2,1)   = ZZ(2,STDBFP)
	   STDBFP = 1				! one continuity point
	ELSE
	   STDBFP = 0				! buffer is now empty
	ENDIF
C
C that's all
C
	RETURN
	END
