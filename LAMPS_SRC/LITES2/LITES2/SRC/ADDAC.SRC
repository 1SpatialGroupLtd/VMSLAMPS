	SUBROUTINE ADDAC(ACD)
C
***	IDENT	13OC89
***	MODULE	ADDAC
C
C Copyright Laser-Scan Laboratories Ltd., Cambridge, England
C
C Author Clarke Brunt, 22 July 1984
C
C To insert an AC (or TC/CH) into the AC data structure, descriptor ACD
C Text length, type, value, and text must be already present in ACBUFL
C
	IMPLICIT NONE
C
***	PARAMETER/CMN:ACS/
C
***	COMMON/CMN:ACS/
C
C arguments
	INTEGER*4	ACD(ACDLEN)	! AC desriptor block
C
C function called
	LOGICAL		GET_MEM
C
C workspace
	INTEGER*4	ADDR		! for address of new ACD
C 
C Get address for new entry
	IF (GET_MEM(AC_ZONE,ADDR,ACLENB)) GOTO 999	! failed
C
C Initialise dynamic string descriptor
	CALL INIDSC(%VAL(ADDR+4*(AC_L_DESC-1)))
C
C now construct entry to put in it
	IF (ACBUFL(AC_L_TYPE).GT.0) THEN	! it's an AC
	   IF (ACD(ACD_FSTAC).EQ.0) THEN
C
C No existing first AC, so this one is the first
C Chain it after TCs
	      ACD(ACD_FSTAC) = ADDR
	      ACD(ACD_LSTAC) = 0
	      IF (ACD(ACD_FSTTC).NE.0) ACD(ACD_LSTAC) = ACD(ACD_LSTTC)
	   ENDIF
C
C Chain AC after last AC (next pointer is in first slot)
	   IF (ACD(ACD_LSTAC).NE.0) THEN
	      CALL PUTLNG(ADDR,%VAL(ACD(ACD_LSTAC)))
	   ENDIF
C
C Now set pointers in buffer itself
	   ACBUFL(AC_L_PREPTR) = ACD(ACD_LSTAC)	! pointer to previous
	   ACD(ACD_LSTAC) = ADDR		! new last AC
	   ACBUFL(AC_L_NXTPTR) = 0		! pointer to next
C
C increment number of IFF words
	   ACD(ACD_ACWORD) = ACD(ACD_ACWORD)+4+(ACBUFW(AC_W_TXTLEN)+1)/2
C
	ELSE					! it's a TC
	   IF (ACD(ACD_FSTTC).EQ.0) THEN
C
C No existing first TC, so this one is the first
	      ACD(ACD_FSTTC) = ADDR 		! address of first TC
	      ACD(ACD_LSTTC) = 0			! no previous TC
	   ELSE
C
C Chain after last TC (next pointer is in first slot)
	      CALL PUTLNG(ADDR,%VAL(ACD(ACD_LSTTC)))
	   ENDIF
C
C Now set pointers in buffer itself
	   ACBUFL(AC_L_PREPTR) = ACD(ACD_LSTTC)	! pointer to previous
	   ACD(ACD_LSTTC) = ADDR		! new last TC
	   ACBUFL(AC_L_NXTPTR) = ACD(ACD_FSTAC)	! chain on to first AC
	   IF (ACD(ACD_FSTAC).NE.0) THEN ! set previous pointer in AC
	      CALL PUTLNG(
     &		ACD(ACD_LSTTC),%VAL(ACD(ACD_FSTAC)+4*(AC_L_PREPTR-1)))
	   ENDIF
C
C increment number of IFF words
	   ACD(ACD_TCWORD) = ACD(ACD_TCWORD)+1+(ACBUFW(AC_W_TXTLEN)+1)/2
	ENDIF
	ACD(ACD_NAC) = ACD(ACD_NAC)+1	! count it
	CALL MOVAC(ACBUFL,%VAL(ADDR))	! insert in AC sector
	CURAC = ADDR			! this AC now current
	ACD(ACD_CUR) = ADDR		! and current for this ACD
C
999	RETURN
	END
