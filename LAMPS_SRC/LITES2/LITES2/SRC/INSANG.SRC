	LOGICAL FUNCTION INSANG(FIRST,ARC,PT)
C
***	IDENT	11OC89
***	MODULE	INSANG
C
C	Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C	Created					RWR	 26-Mar-1987
C
C Description
C
C	Logical function that adds an angle to the list of angles that
C	a circle arc is clipped into
C
C	It returns .TRUE. if there has been a collapse, otherwise .FALSE.
C
C	It is the responsibility of the calling program to ensure
C	that REG is valid, and that it has at least two points
C	(three	are more sensible)
C
	IMPLICIT NONE
C
C common and parameter blocks
C
***	PARAMETER/CMN:AUXDEF/
***	PARAMETER/CMN:CONSTS/
***	PARAMETER/CMN:REGPAR/
C
***	COMMON/CMN:MASTER/
***	COMMON/CMN:REGCMN/
C
C Arguments
C (input)
C
	LOGICAL		FIRST
	REAL		ARC(AUXLEN)	! arc being clipped
	REAL		PT(2)		! point on arc
C
C functions
C
	LOGICAL		GETPPT
C
C Local Variables
C
	INTEGER*4	CURPPT		! counter
	INTEGER*4	LSTPPT
	REAL		CURANG,LSTANG	! angles at current and last PPT
	REAL		ANG		! angle to PT
	INTEGER		PPTADR
	REAL		DANG
C
C assume disaster
C
	INSANG = .TRUE.
	DANG   = ABS(LINWDTH/ARC(RADI))
C
C if list is empty, put angle to first and last point in list, relative
C to first point
C
	IF (FIRST) THEN
	   IF (GETPPT(LSTINT)) GOTO 900		! disaster
	   CALL PUTLNG(ARC(TOTI),%VAL(LSTINT+OFFX))
	   CALL PUTLNG(0,%VAL(LSTINT))
C
C now put zero as start of arc, and put it in front
C
	   IF (GETPPT(PPTADR)) GOTO 900		! disaster
	   CALL PUTLNG(0.0,%VAL(PPTADR+OFFX))
	   CALL PUTLNG(LSTINT,%VAL(PPTADR))
	   LSTINT = PPTADR
	   FIRST = .FALSE.
	ENDIF
C
C get angle to this point from centre of arc
C
	ANG = ATAN2(PT(2)-ARC(YCENI),PT(1)-ARC(XCENI))
	IF (ANG.LT.0.0) ANG = ANG+TWOPI
	ANG = ANG - ARC(STAI)			! angle relative to start
	IF (ARC(TOTI).GT.0.0.AND.ANG.LT.0.0) THEN
	   ANG = ANG+TWOPI
	ELSEIF (ARC(TOTI).LT.0.0.AND.ANG.GT.0.0) THEN
	   ANG = ANG-TWOPI
	ENDIF
C
C don't add an angle = to zero, we have put this in already
C
	IF (ABS(ANG).LT.DANG) THEN
	   INSANG = .FALSE.
	   GOTO 900
	ENDIF
C
C insert this angle in order in list
C
	CALL PUTLNG(%VAL(LSTINT+OFFX),CURANG)
	CALL PUTLNG(%VAL(LSTINT),CURPPT)
	LSTPPT = LSTINT
C
   10	CONTINUE
	IF (CURPPT.EQ.0) THEN	! at end of list (should not happen)
	                        ! - just ignore this point
	   INSANG = .FALSE.
	   GOTO 900
	ENDIF
C
C extract angle from current PPT
C
	LSTANG = CURANG
	CALL PUTLNG(%VAL(CURPPT+OFFX),CURANG)
C
C does angle fall between the two we have?
	IF (ANG.GE.MIN(LSTANG,CURANG).AND.ANG.LT.MAX(LSTANG,CURANG)) THEN
C
C yes, so insert it here
C
	   IF (GETPPT(PPTADR)) GOTO 900		! disaster
	   CALL PUTLNG(ANG,%VAL(PPTADR+OFFX))
	   CALL PUTLNG(PPTADR,%VAL(LSTPPT))
	   CALL PUTLNG(CURPPT,%VAL(PPTADR))
	   INSANG = .FALSE.
C
C no, so go and get next item from list
C
	ELSE
	   LSTPPT = CURPPT
	   CALL PUTLNG(%VAL(CURPPT),CURPPT)
	   GOTO 10
	ENDIF
C
C
  900	CONTINUE
	RETURN
	END
