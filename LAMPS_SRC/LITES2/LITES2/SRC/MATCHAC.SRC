	LOGICAL FUNCTION MATCHAC
C
***	IDENT	26OC93
***	MODULE	MATCHAC
C
C	Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C	Created					CCB	25-Oct-1993
C
C	Read MATCH AC selections from command line.
C	Based on RDSEL.
C
C	Integers can be terminated by a space, ',', tab, group or
C		 end of line.
C	Groups   can only consist of alphabetic characters and '_' and
C		 can be terminated by a space, integer, ',', or end of
C		 line
C		  
C	Ranges 	 consist of two integers connected by a '-'
C	
C	Errors are indicated on the screen, when returns .TRUE.
C
	IMPLICIT NONE
C
***     PARAMETER/CMN:ACS/
***     PARAMETER/CMN:CHARS/
***	PARAMETER/LSL$CMNLSL:LSLLIBMSG/
***     PARAMETER/CMN:MOANMESS/
***	PARAMETER/LSL$CMNLSL:READSTR/
C
***	COMMON/CMN:ACS/
***	COMMON/LSL$CMNLSL:CMDCOM/
***	COMMON/CMN:DOUT/
***	COMMON/CMN:FCS/
***	COMMON/CMN:FILES/
***	COMMON/LSL$CMNFRT:FRTACD/
***	COMMON/LSL$CMNLSL:TXTC/
C
C Functions called
	LOGICAL*1	ALPHA,NUMERIC,RDCHS
	INTEGER		CPYSTR
	INTEGER		READSTR
	LOGICAL		ACDFND_NAME
C
C Local Variables
	BYTE		CHAR		! next character in line
	INTEGER		IERR,RET
C
	IERR = 0			! assume success
C
C can't decode until FRT file (or at least default ACDs) has been read
	IF (.NOT.HADFRT) THEN
	   IF (.NOT.HADACD) THEN
	      CALL FRT_ACDINI
	      HADACD = .TRUE.
	   ENDIF
	ENDIF
C
C copy into TXTBUF, instead of SETAUXing, as ACDFND_NAME resets decoding
C back to TXTBUF
	TXTPTR = DSTRL
	TXTPTR = CPYSTR(DSTR(:DSTRL),TXTDSC)
	CALL BSLN
C
	CALL VIOCLR(SELBUF,4096)	! clear temporary buffer
C
C loop to read each part of the string
C
10	IF (RDCHS(CHAR)) GOTO 1000	! line completed
	IF (CHAR.EQ.',') GOTO 10	! ignore terminators
	IF (NUMERIC(CHAR)) THEN
	   CALL BSCH					! put char back
							! in buffer
	   CALL ADDRANGE(32767,4096,SELBUF,IERR)	! get FCs from
							! ranges or nos
	ELSEIF (ALPHA(CHAR).OR.CHAR.EQ.UND) THEN
	   CALL BSCH					! put char back
	   DSTRL = READSTR(DSTR,,ON_CMD)		! DSTR as temp
	   IF (ACDFND_NAME(DSTR(:DSTRL),RET)) THEN
	      IF (RET.EQ.LSL__UNEXPCMD) THEN
	         CALL MOAN(MSG_ATTRNOTFND,CMDNST)
	      ELSE
	         CALL ERRCMD('attribute')
	      ENDIF
	      IERR = -1
	   ELSE
	      CALL LIB$INSV(1,ACD_CODE,1,SELBUF)
	   ENDIF
	ELSE
	   CALL MOAN(MSG_CMDLIBUXC,CHAR)
	   IERR=-1
	ENDIF
C
	IF (IERR.GE.0) GOTO 10		! if all OK, try next part	
C
1000	IF (IERR.GE.0) CALL VIOMV3(SELBUF,4096,%VAL(MATAC_ADDR))
	MATCHAC = (IERR.LT.0)
	RETURN
	END
