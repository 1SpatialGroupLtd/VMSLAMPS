C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1994-10-17 10:44:04.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE INITRK(TRACK)
C
***	IDENT	17OC94
***	MODULE	INITRK
C
C	Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C	Created					RWR	14-Jan-1985
C
C	Subroutine to set up a tracking areas.
C
	IMPLICIT NONE
C
C Arguments
	INTEGER*4	TRACK		! counter through tracking areas
C
***	PARAMETER/CMN:EFNLUN/
***	PARAMETER/CMN:MACMEN/
***     PARAMETER/CMN:MOANMESS/		! moan constants
***	PARAMETER/CMN:TRNTYP/
C
***	COMMON/CMN:MAPS/
***	COMMON/CMN:OTRANS/
***	COMMON/CMN:TRACKS/		! data about tracking areas
***     COMMON/CMN:WORKS/		! info about worksatation
C
C Functions called
	LOGICAL		TRNSET
C
C Local Variables
	CHARACTER*2	CPTN(4)		! corner point names (all 4)
	INTEGER*4	DEVICE		! device where point digitised
					! = BITLIN for bitpad
					! = DIGLIN for digitiser table
	INTEGER*4	BUTTON		! number of puck button
	INTEGER*4	I,J		! counters
	REAL		XERR,YERR	! allowable X and Y error
	LOGICAL		ABORT		! flag for abort
	LOGICAL		EXSTSU		! flag to use existing values
C
	DATA	CPTN/'NW','SW','SE','NE'/
	DATA	XERR,YERR/2*100.0/	! tracking size
					! (in tracking area units)
C
C assume we will fail
C
	TRADEF(TRACK)=.FALSE.
C
C check whether w/s initialised for this tracking area
C
	IF (.NOT.TABINI.AND.TRADEV(TRACK).EQ.DIGLIN.OR.
     &	    .NOT.BITINI.AND.TRADEV(TRACK).EQ.BITLIN)
     &	               GOTO 999			! don't do anything
C
C say what we are doing
C
   10	CONTINUE
	CALL INFORM(MSG_BLANK)
	IF (TRADEV(TRACK).EQ.BITLIN) THEN	! set up on bitpad
	   CALL INFORM(MSG_TRABITSETUP)
	ELSE					! set up on table
	   CALL INFORM(MSG_TRATABSETUP)
	ENDIF
C
C read coordinates from digitising table/bitpad
C
	DO 20, I=1,4
   15	   CONTINUE
	   CALL PING				! attract attention
	   CALL INFORM(MSG_TRADIG,CPTN(I))
C
C	   get coordinates
C
	   CALL GTDGXY(DEVICE,BUTTON,TRCRPT(1,I,TRACK),EXSTSU,ABORT)
C
C	   check for abort and existing setup
C
	   IF (ABORT) THEN
	      CALL INFORM(MSG_SETUPABORT)
	      TRADEF(TRACK)=.FALSE.
	      GOTO 999
	   ELSEIF (EXSTSU) THEN
	      IF (OTRDEF(TRACK)) THEN		! old values defined
C
C	         check that device of stored values is correct
C
	         IF (TRADEV(TRACK).EQ.OTRDEV(TRACK)) THEN
	            CALL INFORM(MSG_ACCPREVVAL)	! accept old values
	            GOTO 50
	         ELSE
	            CALL MOAN(MSG_DIFFDEVICE)
	            GOTO 10
	         ENDIF
	      ELSE				! no old values
	         CALL MOAN(MSG_NOEXSTVAL)
	         CALL LEARN(MSG_DGNEWVALS)
	         GOTO 10
	      ENDIF
	   ENDIF
C
C 	   check for correct device
C
	   IF (DEVICE.NE.TRADEV(TRACK)) THEN
	      CALL MOAN(MSG_WRNGDEV)
	      GOTO 10
	   ENDIF
   20	CONTINUE
C
C compute transformation parameters and check that they are OK 
C (always use AFFINE to set up tracking area)
	IF (TRNSET(TRNTYP_AFFINE,TRCRPT(1,1,TRACK),TRCOEF(1,1,TRACK),
     &	               XERR,YERR,.FALSE.)) GOTO 10
C
C store limits of this tracking area (in table coordinates)
C
	DO 45, I=1,4
	   DO 40, J=1,2
	      TRLMTS(J,I,TRACK)=TRCRPT(J,I,TRACK)
   40	   CONTINUE
   45	CONTINUE
C
	OTRDEF(TRACK) = .TRUE.		! store in common block/file
	OTRDEV(TRACK) = DEVICE
C
C Return
C
   50	CONTINUE
	TRADEF(TRACK)=.TRUE.
	CALL INFORM(MSG_BLANK)		! leave blank line, if finished
					! with table
  999	CONTINUE
	RETURN
	END
