C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1996-09-03 18:16:26.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
        SUBROUTINE SAVSEL
C
***     IDENT   03SE96
***     MODULE  SAVSEL
C
C	Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C	Written					CCB	26-Jan-1990
C
C	LITES2 cartographic editor SAVE SELECTIONS command.
C
	IMPLICIT NONE
C
***	PARAMETER/LSL$CMNLSL:LSLLIBMSG/
***	PARAMETER/CMN:MOANMESS/
***	PARAMETER/LSL$CMNLSL:READSTR/
***	COMMON/CMN:BTMAPDIS/
***	COMMON/CMN:DMACRD/
***	COMMON/CMN:DOUT/
***     COMMON/CMN:DTYPED/
***     COMMON/CMN:FCS/			! FCS data
***	COMMON/CMN:GLOBAL/
***     COMMON/CMN:LAYERS/		! layer data
***	COMMON/CMN:MAPS/		! map data
C
C Functions called
	EXTERNAL	SAVE_SELECT_CMD_TABLE
	INTEGER		READSTR
	INTEGER		EXPAND
C
C Local Variables
	CHARACTER*(FSM)	MSTR
	INTEGER		MLEN
	INTEGER		IERR
	LOGICAL	MAPS
	LOGICAL	LAYERS
	LOGICAL	FCS
	LOGICAL	FSNS
	INTEGER*4	I,J			! counters
C
C We expect a string of the form "macroname [option option...]"
C where option is one of the SAVE_SELECT commands e.g. FC, ALL
C
C Find the macroname, and save it
	CALL SETAUX(%REF(DSTR),DSTRL)
	MLEN = READSTR(MSTR,0,ON_CMD,.TRUE.,IERR)
	IF (.NOT.IERR) THEN
	   CALL MOAN(MSG_ILLEGNAME,'macro',DSTR(:DSTRL))
	   GOTO 999
	ENDIF
C
C get the rest of the line
C if nothing on line, then assume ALL
	DSTRL = READSTR(DSTR,0,ON_EOL)
	DSTRIN = .FALSE.
	IF (DSTRL.EQ.0) GOTO 150
C
C read options
	MAPS = .FALSE.
	LAYERS = .FALSE.
	FCS = .FALSE.
	FSNS = .FALSE.
100	CALL GET_COMMAND(DSTR(:DSTRL),SAVE_SELECT_CMD_TABLE)
	IF (MOANED) GOTO 999
C
	GOTO (110,120,130,140,150), DPRIN
110	MAPS = .TRUE.
	GOTO 199
120	LAYERS = .TRUE.
	GOTO 199
130	FCS = .TRUE.
	GOTO 199
140	FSNS = .TRUE.
	GOTO 199
150	MAPS = .TRUE.
	LAYERS = .TRUE.
	FCS = .TRUE.
	FSNS = .TRUE.
C
199	IF (DSTRIN) GOTO 100	! try another option
C
C Try DOMACR with the macroname - if MOANED give up
	DSTRL = MLEN
	DSTR(:DSTRL) = MSTR(:DSTRL)
	CALL DOMACR
	IF (MOANED) GOTO 999
C
C Write the selections into the macro
C by putting the strings into DTYP(1) and calling STOCMD
	IF (MAPS) THEN
	   DTYPL(1) = EXPAND('%W%S',%REF(DTYP(1)),'%select all maps')
	   CALL STOCMD
	   IF (.NOT.SAMAPS) THEN
	      CALL VIOCLR(SELBUF,MAXMAP/8+1,0)
	      DO 210, I=0,MAPTOP ! maps go from 0->MAPTOP
		 IF (MAP_EXIST(I).AND.MAPSEL(I)) CALL LIB$INSV(
     &					1,I+1,1,SELBUF)
 210	      CONTINUE
	      COML = EXPAND('%WS%S',COMSTR,'%select map ')
	      CALL DISPLBTMP(-1,-1,-1,MAXMAP,SELBUF)
	   ENDIF
	ENDIF
C
	IF (LAYERS) THEN
	   DTYPL(1) = EXPAND('%W%S',%REF(DTYP(1)),'%select all layers')
	   CALL STOCMD
	   IF (.NOT.SALAYS) THEN
	      CALL VIOCLR(SELBUF,TOPLAY/8+1,0)
	      DO 310, I=0,MAXLAY-1
		 J=OVNOS(I)
		 IF (J.LT.0) GOTO 310
		 IF (OVSEL(I)) CALL LIB$INSV(1,J,1,SELBUF)
 310	      CONTINUE
	      COML = EXPAND('%WS%S',COMSTR,'%select layer ')
	      CALL DISPLBTMP(-1,-1,-1,TOPLAY,SELBUF)
	   ENDIF
	ENDIF
C
	IF (FCS) THEN
	   DTYPL(1) = EXPAND('%W%S',%REF(DTYP(1)),'%select all fcs')
	   CALL STOCMD
	   IF (.NOT.SAFCS) THEN
	      COML = EXPAND('%WS%S',COMSTR,'%select fc ')
	      CALL DISPLBTMP(-1,-1,-1,MAXFC,FCMAP)
	   ENDIF
	ENDIF
C
	IF (FSNS) THEN
	   DTYPL(1) = EXPAND('%W%S',%REF(DTYP(1)),'%select all fsns')
	   CALL STOCMD
	   IF (.NOT.SAFSNS) THEN
	      COML = EXPAND('%WS%S',COMSTR,'%select fsn ')
	      CALL DISPLBTMP(-1,-1,-1,MAXFSN,FSNMAP)
	   ENDIF
	ENDIF
C
C End the macro
	CALL DOENDM
	GOTO 1000
C
999	CALL IGNCMD
C
1000	RETURN
        END
