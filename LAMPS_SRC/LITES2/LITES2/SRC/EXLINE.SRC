C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1994-09-14 12:12:40.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE EXLINE(ERRMES)
C
***	IDENT	14SE94
***	MODULE	EXLINE
C
C	Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C	Created					RWR	14-Mar-1985
C
C	LITES2 cartographic editor EXAMINE LINE command.
C
	IMPLICIT NONE
C
C Arguments
	LOGICAL		ERRMES		! .TRUE. if error message to be 
					! output, .FALSE. if not
C
	INCLUDE	'LSL$CMNIFF:CB.STR'
***	PARAMETER/CMN:AUXDEF/
***	PARAMETER/CMN:CONSTS/
***     PARAMETER/CMN:MOANMESS/		! moan constants
***	PARAMETER/CMN:PACK/
C
***	COMMON/CMN:DRAWIN/
***	COMMON/LSL$CMNFRT:FRTCOM/
***	COMMON/CMN:STRIKE/
C
C functions
	REAL	ANGLE_BEARING
C
C Local Variables
	INTEGER		I		! index
	REAL		DX,DY
	REAL		ANGLE, LENGTH
	CHARACTER*11	INVSTR
C
	IF (FOPAK(PAKGT).NE.LINTYP .AND.
     &	    FOPAK(PAKGT).NE.CURTYP .AND.
     &	    FOPAK(PAKGT).NE.STRTYP .AND.
     &	    FOPAK(PAKGT).NE.ARETYP) THEN	! no linear found object
	   IF (ERRMES) CALL MOAN(MSG_NOTLINE)
	ELSE
	   INVSTR = ' '
	   IF (FOLST.EQ.1) THEN		! one point (symbol string)
	      LENGTH = 0.0
	      ANGLE = 0.0
	   ELSE
	      I = FOVRT-FOVO			! index on FOXY
	      IF (FOVRT.EQ.FOLST) I = I-1	! back up if last vertex
	      DX = FOXY(1,I+1)-FOXY(1,I)	! vector along feature
	      DY = FOXY(2,I+1)-FOXY(2,I)
	      LENGTH=SQRT(DX**2+DY**2)
	      ANGLE = ATAN2(DY,DX)
	      IF (ANGLE.LT.0.0) ANGLE=ANGLE+TWOPI
	      ANGLE=ANGLE/PI*180		! convert to degrees
	      IF (.NOT.FONVRT.AND.(FOFLG(I+1).AND.1).EQ.0)
     &						INVSTR = '(invisible)'
	   ENDIF
	   CALL INFORM(MSG_LINECHAR,LENGTH/SCLFRT,LENGTH,INVSTR)
	   IF (UNIT.EQ.3) CALL INFORM(MSG_UNIFAC,LENGTH*UNIT_FACTOR,UNIT_DESC)
	   CALL INFORM(MSG_LINEANGBRG,ANGLE,ANGLE_BEARING(ANGLE))
	ENDIF
C
	RETURN
	END
