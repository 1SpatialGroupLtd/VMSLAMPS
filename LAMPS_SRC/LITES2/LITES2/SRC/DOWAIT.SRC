C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1992-03-17 15:12:02.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE DOWAIT
C
***	IDENT   17MR92
***	MODULE  DOWAIT
C
C	Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C	Written					CCB	14-DEC-1984
C
C	LITES2 cartographic editor WAIT command.
C
	IMPLICIT NONE
C
***     COMMON/CMN:DOUT/
***	COMMON/CMN:VAREFN/
C
C functions called
	INTEGER*4	SYS$SETIMR
	INTEGER*4	SYS$CANTIM
	INTEGER*4	SYS$WAITFR
C
C local variables
	INTEGER*4	DAYTIM(2)	! binary wait time
	INTEGER*4	ERROR
C
	IF (DREALS(1).LE.0.0) GOTO 9000		! do nothing
	IF (DREALS(1).GT.60.0) DREALS(1) = 60.0	! maximum wait
	DAYTIM(1) = -10 000 000*DREALS(1)	! to delta ticks
	DAYTIM(2) = -1				! upper longword
C
C set the timer, setting CLCFLG when time expires
	ERROR = SYS$SETIMR(%VAL(CLCFLG),DAYTIM,,%VAL(CLCFLG),)
	IF (.NOT.ERROR) THEN
	   CALL LITES2_SIGNAL(ERROR)
	   GOTO 9000
	ENDIF
C
C wait for the flag (may also be set by CTRL/C etc.)
	ERROR = SYS$WAITFR(%VAL(CLCFLG))
	IF (.NOT.ERROR) THEN
	   CALL LITES2_SIGNAL(ERROR)
	ENDIF
C
C cancel the timer, in case it is still running
	ERROR = SYS$CANTIM(%VAL(CLCFLG),)
	IF (.NOT.ERROR) THEN
	   CALL LITES2_SIGNAL(ERROR)
	ENDIF
C
C and ensure that we leave the event flag clear
	CALL SYS$CLREF(%VAL(CLCFLG))
C
9000	RETURN
	END
