C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1987-10-26 18:20:32.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE COLLSTR(TO_ADDR,FROM_ADDR,NOSPACE)
C
***	IDENT	26OC87
***	MODULE	COLLSTR
C
C	Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C	Created					RWR	26-OCT-1987
C
C to collapse two (dynamic) strings into one, if necessary putting a
C space in between them.
C Passes strings as the address of there descriptors, to allow
C fortran to deal with dynamic strings
C
	IMPLICIT NONE
C
***	PARAMETER/CMN:CHARS/
C
C Arguments
C
	INTEGER*4	TO_ADDR		! destination string
	INTEGER*4	FROM_ADDR	! source string
	LOGICAL		NOSPACE		! .TRUE. if no spaces to be added
C
C Local Variables
C
	INTEGER*4	DUMMY
	INTEGER*2	LENGTH		! length of source string
	CHARACTER*1	CH1,CH2		! last character of destination
					! string, and first character of
					! source string
C
C easy if no spaces required
	IF (NOSPACE) THEN		! don't put in a space
	   CALL STR$APPEND(%VAL(TO_ADDR),%VAL(FROM_ADDR))
C
C insert a space if there is not one there already
C
	ELSE
C
C get end of first string, and start of second
C
	   CALL STR$ANALYZE_SDESC(%VAL(TO_ADDR),LENGTH,DUMMY)
	   DUMMY = LENGTH			! I*2 -> I*4
	   CALL STR$RIGHT(CH1,%VAL(TO_ADDR),DUMMY)
	   CALL STR$LEFT(CH2,%VAL(FROM_ADDR),1)
C
C if there is a 
	   IF (CH1.EQ.BLANK.OR.CH1.EQ.TABC.OR.
     &	       CH2.EQ.BLANK.OR.CH2.EQ.TABC) THEN
	      CALL STR$APPEND(%VAL(TO_ADDR),%VAL(FROM_ADDR))
	   ELSE
	      CALL STR$CONCAT(%VAL(TO_ADDR),%VAL(TO_ADDR),BLANK,
     &	                        %VAL(FROM_ADDR))
	   ENDIF
	ENDIF
C
	RETURN
	END
