	LOGICAL FUNCTION CLIP(XY1,M1,XY2,M2)
C
***	MODULE	CLIP
***	IDENT	24JL86
C
C Copyright Laser Scan Laboratories Ltd., Cambridge, England.
C Authors many and varied but mainly Paul Hardy based on algorithms
C by P. Woodsford and P.Cross, with tidies by R.Fairbairns
C
C Created July 1980
C
C ammended for LITES2 use by R.W. Russell	24-Jul-1986
C
C to clip a straight line to rectangular boundaries.
C function value is TRUE if no visible result.
C
	IMPLICIT NONE
C
	REAL XY1(2),XY2(2)	! coords of ends of line
	INTEGER M1,M2		! 0,1=> end is unchanged,changed
C
***	COMMON/CMN:CLIP/	! contains boundaries
C
	PARAMETER X=1,Y=2	! for clarity
C w/s
	REAL P(2,2)		! our copies of the points
	REAL D(2)		! DX,DY is line vector
	REAL R			! temp variable
	INTEGER M(2)		! copy of ends info
	INTEGER DEP,INDEP	! X or Y depending which axis considered
	INTEGER HIGH,LOW	! 1 or 2 to indicate ends of line
C
C set everything up
	CLIP=.FALSE.			! assume visible result
	M(1)=0				! neither end moved yet
	M(2)=0
	IF(.NOT.ENCLIP) GOTO 40		! clipping disabled
	P(X,1)=XY1(X)			! take copy of args
	P(Y,1)=XY1(Y)
	P(X,2)=XY2(X)
	P(Y,2)=XY2(Y)
	D(X)=XY2(X)-XY1(X)			! calculate vector
	D(Y)=XY2(Y)-XY1(Y)
C
C now loop for both axes
	DO 30 DEP=X,Y
	   INDEP=3-DEP			! independent axis
	   LOW=1			! guess which end lowest
	   IF(D(INDEP).LT.0.0) LOW=2	! upside down
	   HIGH=3-LOW			! the other end
	   IF(P(INDEP,HIGH).LT.CLIPLO(INDEP)) GOTO 50	! out the bottom
	   IF(P(INDEP,LOW ).GT.CLIPHI(INDEP)) GOTO 50	! out the top
	   IF(D(INDEP).EQ.0.0) GOTO 30	! parallel to frame this axis
C
C here to consider low end
	   R=P(INDEP,LOW)-CLIPLO(INDEP)	! distance from frame
	   IF(R.GE.0.0) GOTO 20		! inside frame
C
C clip low end
	   P(DEP,LOW)=P(DEP,LOW)-R*D(DEP)/D(INDEP) ! similar triangles
	   P(INDEP,LOW)=CLIPLO(INDEP)	! push onto frame
	   M(LOW)=1			! moved this end
C
C now lets consider the high end
20	   R=CLIPHI(INDEP)-P(INDEP,HIGH) ! distance from frame
	   IF(R.GE.0.0) GOTO 30		! inside frame
C
C clip high end
	   P(DEP,HIGH)=P(DEP,HIGH)+R*D(DEP)/D(INDEP) ! similar triangles
	   P(INDEP,HIGH)=CLIPHI(INDEP)	! push onto frame
	   M(HIGH)=1			! moved this end
C
30	   CONTINUE			! loop for both axes
C
C copy args back
	XY1(X)=P(X,1)
	XY1(Y)=P(Y,1)
	XY2(X)=P(X,2)
	XY2(Y)=P(Y,2)
40	M1=M(1)
	M2=M(2)
	RETURN
C
C here with all invisible
50	CLIP=.TRUE.
	GOTO 40
C
C
	END
