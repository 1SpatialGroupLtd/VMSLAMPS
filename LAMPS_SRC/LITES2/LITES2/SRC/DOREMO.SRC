C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1991-02-27 10:38:26.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
        SUBROUTINE DOREMO
C
***     IDENT   27FE91
***     MODULE  DOREMO
C
C       Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C       Written                                 CCB	24-SEP-1984
C
C	LITES2 cartographic editor REMOVE command.
C
        IMPLICIT NONE
C
	INCLUDE	'LSL$CMNIFF:CB.STR'
***	PARAMETER/CMN:AUXDEF/
***	PARAMETER/CMN:EFNLUN/
***     PARAMETER/CMN:MOANMESS/
***	PARAMETER/CMN:PACK/
***	PARAMETER/CMN:STAPAR/
***     PARAMETER/CMN:START/
C
***	COMMON/CMN:CB/
***	COMMON/CMN:DEFINE/
***	COMMON/LSL$CMNFRT:FRTCOM/
***	COMMON/CMN:INDEX/
***	COMMON/CMN:MAPS/
***	COMMON/CMN:OIIH/
***	COMMON/CMN:OPTION/
***	COMMON/CMN:STATE/
***	COMMON/CMN:STRIKE/
C
C functions called
	EXTERNAL DELPAK
	LOGICAL	STRTER
C
C workspace
	INTEGER*2	IECODE,IELEN
C
C are we CONSTRUCTing
	IF (SINDEX.EQ.STATE_CONSTRUCT) THEN
C
C attempt to remove a point from the construction
	   IF (STRTER(START_REMOVE,START_VISIBLE)) GOTO 998	! failed
	   GOTO 999
	ENDIF
C
C Trying to remove a point from line feature
C Must be on line and on a vertex to REMOVE
	IF (.NOT.(FONLIN.AND.FONVRT)) THEN
	   CALL MOAN(MSG_NOTONVRT)
	   CALL LEARN(MSG_USEVERT)
	   GOTO 998
	ENDIF
C
C Must be at least 3 points to remove one (or 2 for symbol strings)
	IF ((FOLST.LT.3.AND.FOPAK(PAKGT).NE.STRTYP).OR.FOLST.LT.2) THEN
	   CALL MOAN(MSG_INSUFPTS)
	   GOTO 998
	ENDIF
C
C is map read only?
	IF (MAPRO(FOPAK(PAKMAP))) THEN
	   CALL MOAN(MSG_MAPREADONLY,FOPAK(PAKMAP)+1)
	   GOTO 998
	ENDIF
C
C Delete old segment (remove from screen)
	CALL LDSG(FOPAK,.TRUE.)
C
C set edited flag if required
	IF (EDTOPT) CALL SETEDT(FOPAK)
C
C update os map header?
	IF (OS_MH_EDIT) CALL OS_MH_UPDATE(FOPAK,FOFS)
C
C update ACs if required
	IF (FOAC.GT.0.AND.DEFINITION(F_GEOCHANGE).GT.0)
     &	         CALL ACFSET(FOPAK,FOAC,DEFINITION(F_GEOCHANGE))
C
C get the vertex to be removed into memory
	CALL GETVRT(FOPAK,FOVRT,FOVRT)
C
C remove the vertex
C if was first vertex of CB, then next must definitely be pen down
	IF (CBROW.EQ.1) CBH.FLAGS = CBH.FLAGS.AND.1
C
	CALL EIHMK(1)			! mark the CB entry
	CALL IFFNXT(IECODE,IELEN)	! step on to next
	CALL IFFVOM			! void the old entry
C
	IF (CBH.NROW.GT.1) THEN		! if CB had more than one point
	   CALL VIOMV3( CBD.R(CBROW*CBH.NCOL+1),	! next row
     &			(CBH.NROW-CBROW)*CBH.NCOL*4,	! size (bytes)
     &			CBD.R((CBROW-1)*CBH.NCOL+1) )	! this row
	   CBH.NROW = CBH.NROW-1
	   CALL IFFCB(CBH,CBD)		! write amended CB into void
	ENDIF
	CALL EIHMK(0)			! remove mark
C
C invalidate idices for GETVRT
	RIPNF = -1
C
C re-flush the feature
	CALL SCNFTR(FOPAK(PAKLNK), DELPAK)	! delete packs
	FOPAK(PAKFLG) = 0			! clear flags
	CALL FLUFTR(FOPAK)			! flush
C
C Abandon
	CALL ABANDN
	GOTO 999
C
C error exit
998	CALL IGNCMD
C
999	RETURN
        END
