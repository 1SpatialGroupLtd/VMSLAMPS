C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1993-03-01 15:49:22.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
        LOGICAL FUNCTION GEOG_GRID_RANGE(POINTS,MAP)
C
***	MODULE GEOG_GRID_RANGE
***	IDENT 01MR93
C
C Copyright Laser-Scan Laboratories Ltd.,Cambridge,England
C 
C Author    Ron Russell				 24-Aug-1988
C
C       This function computes a transformed range by transforming
C	a grid of points covering the input range
C	It returns .TRUE. for success
C
	IMPLICIT NONE
C
***	PARAMETER/CMN:EFNLUN/
***     PARAMETER/CMN:MOANMESS/		! moan constants
C
***	COMMON/CMN:MAPS/
C
C arguments
C
C (input)
	INTEGER		POINTS
	INTEGER		MAP	! map whose range is to be converted
				! to LITES2 space
C
C function
	LOGICAL		GEOG_TRANS_ARRAY
C
C w/s          
	REAL*4		XY(2)
	INTEGER		I,J,SPAN
	REAL*4		RNGE(4)
	REAL*4		XDIFF,YDIFF
	REAL*4		XRANGE,YRANGE
C
C assume failure
	GEOG_GRID_RANGE = .FALSE.
C
	SPAN = POINTS + 1
C
	XRANGE = RANGE(2,MAP) - RANGE(1,MAP)
	YRANGE = RANGE(4,MAP) - RANGE(3,MAP)
C
	XDIFF = XRANGE/SPAN
	YDIFF = YRANGE/SPAN
C
	RNGE(1) = 1E38			! initialise range
	RNGE(2) = -1E38
	RNGE(3) = 1E38
	RNGE(4) = -1E38
C
C go up the sides
	DO 20, I = 0,1
	   DO 20 J = 0,SPAN
	      XY(1) = RANGE(1,MAP) + I*XRANGE
	      XY(2) = RANGE(3,MAP) + J*YDIFF
	      IF (GEOG_TRANS_ARRAY(MAP_SYS(MAP),MAP_ZONE(MAP),
     &	                           MAP_PARAMS(1,MAP),MAP_UNIT(MAP),
     &	                           MAPORG(1,MAP),LITES2SYS,LITES2ZONE,
     &	                           LITES2PAR,LITES2UNIT,LITES2ORG,
     &                             1,XY)) THEN
	         RNGE(1) = MIN(RNGE(1),XY(1))
	         RNGE(2) = MAX(RNGE(2),XY(1))
	         RNGE(3) = MIN(RNGE(3),XY(2))
	         RNGE(4) = MAX(RNGE(4),XY(2))
	      ENDIF
	   CONTINUE
20	CONTINUE
C
C and along the top and bottom
	DO 30, I = 0,1
	   DO 30 J = 0,SPAN
	      XY(1) = RANGE(1,MAP) + J*XDIFF
	      XY(2) = RANGE(3,MAP) + I*YRANGE
	      IF (GEOG_TRANS_ARRAY(MAP_SYS(MAP),MAP_ZONE(MAP),
     &	                           MAP_PARAMS(1,MAP),MAP_UNIT(MAP),
     &	                           MAPORG(1,MAP),LITES2SYS,LITES2ZONE,
     &	                           LITES2PAR,LITES2UNIT,LITES2ORG,
     &                             1,XY)) THEN
	         RNGE(1) = MIN(RNGE(1),XY(1))
	         RNGE(2) = MAX(RNGE(2),XY(1))
	         RNGE(3) = MIN(RNGE(3),XY(2))
	         RNGE(4) = MAX(RNGE(4),XY(2))
	      ENDIF
	   CONTINUE
30	CONTINUE
C
	IF (RNGE(1).LT.RNGE(2).AND.RNGE(3).LT.RNGE(4)) THEN
	   RANGE(1,MAP) = RNGE(1)
	   RANGE(2,MAP) = RNGE(2)
	   RANGE(3,MAP) = RNGE(3)
	   RANGE(4,MAP) = RNGE(4)
	   GEOG_GRID_RANGE = .TRUE.
	ENDIF
C
  	RETURN
   	END
