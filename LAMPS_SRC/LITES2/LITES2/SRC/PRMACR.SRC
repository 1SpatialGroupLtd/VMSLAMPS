C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1992-03-24 14:20:00.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE PRMACR(MNUM,TOTERM,MACDSW,MACDSL,ABORT)
C
***	IDENT	24MR92
***	MODULE	PRMACR
C
C	Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C	Created					RWR	15-Nov-1984
C
C	Subroutine to print out contents of a macro.
C
C	Note: the calling routine should ensure that the macro
C	      is not empty.
C
	IMPLICIT NONE
C
***	PARAMETER/CMN:CHARS/		! character constants
***     PARAMETER/CMN:MACMEN/		! macros, menus and puck buttons
***     PARAMETER/CMN:MERPAR/		! macro error constants
***     PARAMETER/CMN:MOANMESS/		! moan constants
C
***	COMMON/CMN:MACRO/		! data about macros
***	COMMON/LSL$CMNLSL:TXTC/
C
C Arguments
	INTEGER*4	MNUM		! number of macro
	LOGICAL*1	TOTERM		! write to terminal, else file
	INTEGER*2	MACDSW(4,*)	! array of macro descriptors
	INTEGER*4	MACDSL(2,*)	! the same array as longwords
	LOGICAL		ABORT		! return .t. if aborted
C
C Functions called
	INTEGER*4	READ_STRING	! see MAR:RDCH.MAR
	LOGICAL		HADBREAK	! had a CTRL/C?
C
C Local Variables
	INTEGER*2	SAVPTR		! saved DCPTR
C
	CHARACTER*(*)	INDENT
	PARAMETER	(INDENT='        ')
C
	ABORT = .FALSE.
C
C set up auxiliary buffer
	CALL DCPSAV(SAVPTR)
	CALL SETAUX(%VAL(MACDSL(2,MNUM)),MACDSW(1,MNUM))
C
C read each command in turn and output it
10	IF (DCPTR.GT.MACDSW(1,MNUM)) GOTO 20
	TXTPTR=TXTLIM
	TXTPTR=READ_STRING(TXTDSC,TERM)
	IF (TXTPTR.GT.0) THEN
	   IF (TOTERM) THEN
	      CALL INFORM(MSG_MACEXP,INDENT,TXTDSC)
	      IF (HADBREAK()) THEN
	         ABORT = .TRUE.
	         GOTO 20
	      ENDIF
	   ELSE
	      CALL FLWSTR(TXTDSC)
	   ENDIF
	ENDIF
	GOTO 10
C
C reset buffer
20	CALL BSLN
	CALL DCPSET(SAVPTR)
C
	RETURN
	END
