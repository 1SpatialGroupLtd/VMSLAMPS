C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1987-02-17 10:01:44.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	INTEGER FUNCTION FINSTR(STRING,TYPE)
C
***	MODULE	FINSTR
***	IDENT	17FE87
C
C Copyright Laser Scan Laboratories Ltd., Cambridge, England.
C
C To extract a (quoted?) string from decoding line
C Returns length of string
C
	IMPLICIT NONE
C
***	PARAMETER/CMN:CHARS/
***	PARAMETER/CMN:MOANMESS/
***	PARAMETER/LSL$CMNLSL:READSTR/
C
C arguments
	CHARACTER*(*)	STRING		! destination string
	CHARACTER*(*)	TYPE		! for MOAN message
C
C functions called
	LOGICAL		RDCHS
	INTEGER		READSTR
	INTEGER		READ_STRING	! see MAR:RDCH.MAR
C
C workspace
	BYTE		CH
C
	FINSTR = 0			! default
	IF (RDCHS(CH)) GOTO 999		! nothing there
	IF (CH.EQ.DQOT) THEN		! quoted string
	   FINSTR = READSTR(STRING,DQOT,ON_CHAR2,.FALSE.)
	   IF (.NOT.RDCHS(CH)) CALL MOAN(
     &				MSG_EXTRACHARS,TYPE,STRING(1:FINSTR))
	ELSE				! read to end of line
	   CALL BSCH
	   FINSTR = READ_STRING(STRING,TERM)
	ENDIF
C
999	RETURN
	END
