C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1989-01-27 09:46:40.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL FUNCTION PLANE(XY,Z,COEFFS)
C
***	MODULE	PLANE
***	IDENT	27JA89
C
C Copyright Laser Scan Laboratories Ltd., Cambridge, England.
C Author  R.W. Russell					26-Jan-1989
C
C To calculate the coefficients of the plane defined by 3 XYZ points.
C Returns .TRUE. for success, .FALSE. if no Z values available.
C
C the equation of the plane is:
C     ax + by + cz + d = 0.0
C
C See A programmer's geometry, page 114 for algorithm and formulae
C
C if there are missing heights, then they are replaced by the mean of
C the existing ones. This is obviously wrong, but gives a solution.
C
	IMPLICIT NONE
C
	INCLUDE	'LSL$CMNIFF:CB.STR'
***	PARAMETER/CMN:CONSTS/
C
C arguments
	REAL		XY(2,3)		! xy position of pts
	REAL		Z(3)		! z values of points
	REAL		COEFFS(4)	! definition of plane
C
C w/s
	REAL		XKJ,YKJ,ZKJ,XLJ,YLJ,ZLJ
	REAL		XJ,XK,XL
	REAL		YJ,YK,YL
	REAL		ZJ,ZK,ZL
	INTEGER		ZJI,ZKI,ZLI
	EQUIVALENCE	(ZJ,ZJI),(ZK,ZKI),(ZL,ZLI)
	INTEGER		COUNT
	LOGICAL		CASE1
	REAL		TOTAL
	REAL		THETA
	REAL		DKJ,DLJ
	REAL		LTD
	PARAMETER	(LTD = 1.0E-6)
C
	PLANE = .FALSE.
C
C copy into local variables, so they can be altered and examined
C (note: origin is J, the centre of our three points)
	XJ = XY(1,2)
	XK = XY(1,1)
	XL = XY(1,3)
C
	YJ = XY(2,2)
	YK = XY(2,1)
	YL = XY(2,3)
C
	ZJ = Z(2)
	ZK = Z(1)
	ZL = Z(3)
C
C examine and mean z's
	COUNT = 0
	TOTAL = 0.0
	IF (ZJI.NE.IFF_ABSENT) THEN
	   COUNT = COUNT + 1
	   TOTAL = TOTAL + ZJ
	ENDIF
	IF (ZKI.NE.IFF_ABSENT) THEN
	   COUNT = COUNT + 1
	   TOTAL = TOTAL + ZK
	ENDIF
	IF (ZLI.NE.IFF_ABSENT) THEN
	   COUNT = COUNT + 1
	   TOTAL = TOTAL + ZL
	ENDIF
C
	IF (COUNT.EQ.0) GOTO 999
C
C fill in any missing z's
	IF (COUNT.LT.3) THEN
	   TOTAL = TOTAL/COUNT
	   IF (ZJI.EQ.IFF_ABSENT) ZJ = TOTAL
	   IF (ZKI.EQ.IFF_ABSENT) ZK = TOTAL
	   IF (ZLI.EQ.IFF_ABSENT) ZL = TOTAL
	ENDIF
C
C differences in coordinates
	XKJ = XK - XJ
	YKJ = YK - YJ
	XLJ = XL - XJ
	YLJ = YL - YJ
C
C and distances
	DKJ = SQRT(XKJ**2+YKJ**2)
	DLJ = SQRT(XLJ**2+YLJ**2)
C
C valid vectors?
	IF (DKJ.LT.LTD.AND.DLJ.LT.LTD) GOTO 999
C
C work out sine of angle between vectors (cross product)
	THETA = (XKJ*YLJ-XLJ*YKJ)/(DKJ*DLJ)
C
C if this is small, see if we have case 1 or case 2
C case 1 is where KL is a diameter, case 2 is when L and K are coincident
	IF (ABS(THETA).LT.LTD) THEN
C
C look at dot product ( - cosine) for which quadrant angle between
C vectors is - but don't bother to normalise
	   THETA = XKJ*XLJ + YKJ*YLJ
	   CASE1 = THETA.LT.1
C
C work out angle of K from J
	   THETA = ATAN2(YKJ,XKJ)
C
C and normal
	   THETA = THETA + PIBI2
C
C CASE1 - move J to circumference with Z mean of K and L
	   IF (CASE1) THEN
	      XJ = XJ + DKJ*COS(THETA)
	      YJ = YJ + DKJ*SIN(THETA)
	      ZJ = (ZK+ZL)/2.0
C
C CASE2 - move L to circumference, normal to K-J, with height of J
	   ELSE
	      XL = XJ + DKJ*COS(THETA)
	      YL = YJ + DKJ*SIN(THETA)
	      ZL = ZJ
	   ENDIF
	ENDIF
C
C calculate equation of plane
	XKJ = XK - XJ
	YKJ = YK - YJ
	ZKJ = ZK - ZJ
C
	XLJ = XL - XJ
	YLJ = YL - YJ
	ZLJ = ZL - ZJ
C
	COEFFS(1) = YKJ*ZLJ - ZKJ*YLJ
	COEFFS(2) = ZKJ*XLJ - XKJ*ZLJ
	COEFFS(3) = XKJ*YLJ - YKJ*XLJ
	COEFFS(4) = -(XJ*COEFFS(1)+YJ*COEFFS(2)+ZJ*COEFFS(3))
C
C success
	PLANE = .TRUE.
C
999	RETURN
	END

