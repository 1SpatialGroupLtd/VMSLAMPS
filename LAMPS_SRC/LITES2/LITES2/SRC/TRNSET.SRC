	LOGICAL FUNCTION TRNSET(TRANS,PTS,COEFFS,XEXT,YEXT,WARN)
C
***	MODULE	TRNSET
***	IDENT	28SE94
C
C Copyright Laser-Scan Laboratories Limited, Cambridge, England.
C
C Author: R.W. Russell 				12-Jan-1988
C
C This routine sets up a transformation for a table or bitpad setup
C
C if TRANS is set to TRNTYP_ORTHOG we use the formulae:-
C
C	 X=a0+a1*x-a2*y	.........	RWR2PT
C	 Y=a3+a2*x+a1*y
C
C if TRANS is set to TRNTYP_AFFINE we use the formulae:-
C
C	 X=a0+a1*x+a2*y .........	GENTRN
C	 Y=b0+b1*x+b2*y
C
C if TRANS is set to TRNTYP_EXTENDED we use the formulae:-
C
C	 X=a0+a1*x+a2*y+a3*x*y ....	DM4PT
C	 Y=b0+b1*x+b2*y+b3*x*y
C
C these are all reduced to the DM4PT form for use (in TRNUSE)
C
C
C if TRANS is set to TRNTYP+PROJECTIVE we use the formulae:-
C
C	 X = (a0*x + a1*y + a2) / (a6*x + a7*y +1) ..	PROJ4PT
C        Y = (a3*x + a4*y + a5) / (a6*x + a7*y +1)
C
C function returns .TRUE. for failure
C
	IMPLICIT	NONE
C
C arguments 
	INTEGER		TRANS		! type of transformation to use
	REAL		PTS(4,4)	! measured & target coordinates
	REAL*8		COEFFS(4,2)	! returned transform coeffs
	REAL		XEXT,YEXT	! X and Y extents
	LOGICAL		WARN		! check results greater than 10%
					! of absolute limit out
C
***	PARAMETER/CMN:MOANMESS/
***	PARAMETER/CMN:TRNTYP/
C
***	COMMON/CMN:DRAWIN/
***	COMMON/CMN:OPTION/
***	COMMON/CMN:PTOLERANCE/
***	COMMON/LSL$CMNLSL:TXTC/
C
	EXTERNAL	SETUP_TRANSFORMATION_CMD_TABLE
C
C working storage
C
	REAL	  	RESID(2,4)	! X,Y residuals (target space)
	REAL	  	XMAX,YMAX	! max residuals    "      "
	REAL	  	XRMS,YRMS	! RMS residuals    "      "
	REAL*8		GCPCOEF(3,2)	! coefficients for GENTRN
	REAL*8		COEF2P(4)	! coefficients for RWR2PT
	REAL*8		CPCOEF(4,2)	! coefficients for DM4PT
	COMMON	/CPCOM/ CPCOEF
	INTEGER		I,J	
C
C functions
	LOGICAL		GENTRN
	LOGICAL		CPSET		! (DM4PT)
	LOGICAL		RWR2PT
	LOGICAL		TRNTST
	LOGICAL		PROJ4PT
C
C assume failure
	TRNSET = .TRUE.
C
C check to see if coords are in correct order
	IF (TRNTST(PTS)) THEN
	   CALL MOAN(MSG_CPTSWRONG)
	   GOTO 999
	ENDIF
C
C compute transformation parameters and check that they are OK 
C
	IF (TRANS.EQ.TRNTYP_ORTHOG) GOTO 100
	IF (TRANS.EQ.TRNTYP_AFFINE) GOTO 200
	IF (TRANS.EQ.TRNTYP_LASERAID) GOTO 300
	IF (TRANS.EQ.TRNTYP_PROJECTIVE) GOTO 400
C
C Orthogonal transformation
100	CONTINUE
	IF (RWR2PT(4,PTS,COEF2P,RESID,XMAX,YMAX,XRMS,YRMS)) THEN
	   CALL MOAN(MSG_BADCPTS)
	   GOTO 999
	ELSEIF (WARN.AND.(XMAX.GT.XEXT*RESID_LIMIT.OR.
     &	            YMAX.GT.YEXT*RESID_LIMIT)) THEN
	   CALL MOAN(MSG_POORCRNPTS)
	   GOTO 999
	ELSE
	   COEFFS(1,1)=COEF2P(1)	! a0+a1x-a2y
	   COEFFS(2,1)=COEF2P(2)	! b1+a2x+a1y
	   COEFFS(3,1)=-COEF2P(3)
	   COEFFS(4,1)=0.0
	   COEFFS(1,2)=COEF2P(4)
	   COEFFS(2,2)=COEF2P(3)
	   COEFFS(3,2)=COEF2P(2)
	   COEFFS(4,2)=0.0
	 ENDIF
C
	GOTO 900
C
C Affine transformation
200	CONTINUE
	IF (GENTRN(4,PTS,GCPCOEF,RESID,XMAX,YMAX,XRMS,YRMS)) THEN
	   CALL MOAN(MSG_BADCPTS)
	   GOTO 999				! start again
	ELSEIF (WARN.AND.(XMAX.GT.XEXT*RESID_LIMIT.OR.
     &	                  YMAX.GT.YEXT*RESID_LIMIT)) THEN
	   CALL MOAN(MSG_POORCRNPTS)
	   GOTO 999
	ELSE
	   DO 210, I=1,3
	      DO 210, J=1,2
	         COEFFS(I,J)=GCPCOEF(I,J)
	      CONTINUE
210	   CONTINUE
	   COEFFS(4,1)=0.0			! no x*y term
	   COEFFS(4,2)=0.0
	ENDIF
C
	GOTO 900
C
C Laseraid transformation
300	CONTINUE
	IF (CPSET(PTS)) THEN
	   CALL MOAN(MSG_BADCPTS)
	   GOTO 999				! start again
	ELSE
	   DO 310, I=1,4
	      DO 310, J=1,2
	         COEFFS(I,J)=CPCOEF(I,J)
	      CONTINUE
310	   CONTINUE
	ENDIF
C
	GOTO 900
C
C Projective transformation
400	CONTINUE
	IF (PROJ4PT(PTS,COEFFS)) THEN
	   CALL MOAN(MSG_BADCPTS)
	   GOTO 999				! start again
	ENDIF
C
	GOTO 900
C
C success exit
900	CONTINUE
C
C warning required?
	IF (WARN.AND.
     &	      (TRANS.EQ.TRNTYP_ORTHOG.OR.TRANS.EQ.TRNTYP_AFFINE)) THEN
	   IF (XMAX.GE.XEXT*RESID_WARN.OR.YMAX.GE.YEXT*RESID_WARN) THEN
	      CALL INFORM(MSG_TABSETWARN1)
	      CALL INFORM(MSG_TABSETWARN2,XMAX,YMAX,
     &	               XMAX/SCLFRT,YMAX/SCLFRT)
	   ENDIF
	ENDIF
	TRNSET = .FALSE.
C
C diagnostic output
	if (diaopt) then
	   txtptr = 10		! long enough
	   j = 0		! context
	   call find_cmdname(setup_transformation_cmd_table,
     &				trans,txtdsc,i,j)
           txtptr = i		! returned length
	   call writef(
     &	         'Results of table setup (%S transformation)',txtdsc)
	   call writef
	   call writef('Digitised points              IFF values')
	   do 550, i= 1,4
	      call writef('Pt %N X= %G0.8 Y= %G0.8   X= %G0.8 Y= %G0.8 ',
     &		   i,pts(1,i),pts(2,i),pts(3,i),pts(4,i))
550	   continue
	   if (trans.eq.trntyp_orthog.or.trans.eq.trntyp_affine) then
	      call writef
	      call writef('Residuals at these points (IFF units)')
	      do 570, i= 1,4
	         call writef('Pt %N X= %G0.8 Y= %G0.8',i,resid(1,i),
     &	                     resid(2,i))
570	      continue
	      call writef
	      call writef('Max residual X= %G0.8, Y=%G0.8',XMAX,YMAX)
	      call writef('RMS          X= %G0.8, Y=%G0.8',XRMS,YRMS)
	      call writef('Allowable max residual X= %G0.8, Y= %G0.8',
     &	                     xext*resid_limit,yext*resid_limit)
	   endif
	   call writef
	   call writef('Transformation coefficients')
	   call writef
	   if (trans.eq.trntyp_projective) then
	      call writef('X = (a0*x + a1*y + a2) / (a6*x + a7*y +1)')
	      call writef('Y = (a3*x + a4*y + a5) / (a6*x + a7*y +1)')
	   else
	      call writef('X = a0 + a1*x + a2*y + a3*x*y')
	      call writef('Y = b0 + b1*x + b2*y + b3*x*y')
	   endif
	   call writef
	   call writef('a0= %G0.8, a1= %G0.8, a2= %G0.8, a3= %G0.8',
     &	         coeffs(1,1),coeffs(2,1),coeffs(3,1),coeffs(4,1))
	   if (trans.eq.trntyp_projective) then
	      call writef('a4= %G0.8, a5= %G0.8, a6= %G0.8, a7= %G0.8',
     &	         coeffs(1,2),coeffs(2,2),coeffs(3,2),coeffs(4,2))
	   else
	      call writef('b0= %G0.8, b1= %G0.8, b2= %G0.8, b3= %G0.8',
     &	         coeffs(1,2),coeffs(2,2),coeffs(3,2),coeffs(4,2))
	   endif
	endif
C
999	CONTINUE
C
	RETURN
	END
