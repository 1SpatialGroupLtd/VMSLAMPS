	SUBROUTINE DELCTX(VERIFY)
C
***	IDENT	09MY96
***	MODULE	DELCTX
C
C Copyright Laser-Scan Laboratories Ltd., Cambridge, England
C
C Author Ron Russell					10-Nov-1986
C
C To delete the current CTX, from a text that is being modified,
C by removing it from chain
C
	IMPLICIT NONE
C
C argument
	LOGICAL		VERIFY		! type out home CTX?
C
	INCLUDE	'LSL$CMNIFF:CB.STR'
***	PARAMETER/CMN:AUXDEF/
***	PARAMETER/CMN:CTXS/
***	PARAMETER/CMN:PACK/
***	PARAMETER/CMN:MOANMESS/
C
***	COMMON/CMN:CTXS/
***	COMMON/CMN:OIIH/
C
C workspace
	INTEGER*4	PREV,NEXT
C
	CALL PUTLNG(%VAL(COICTXD(CTXD_HOME)+CTX_O_NXTPTR),NEXT)
	CALL PUTLNG(%VAL(COICTXD(CTXD_HOME)+CTX_O_PREPTR),PREV)
C
C re-chain
	IF (PREV.NE.0) CALL PUTLNG(NEXT,%VAL(PREV+CTX_O_NXTPTR))
	IF (NEXT.NE.0) CALL PUTLNG(PREV,%VAL(NEXT+CTX_O_PREPTR))
C
C fix up first and last pointers
	IF (COICTXD(CTXD_HOME).EQ.COICTXD(CTXD_FSTCTX)) THEN
	   COICTXD(CTXD_FSTCTX) = NEXT
	ENDIF
	IF (COICTXD(CTXD_HOME).EQ.COICTXD(CTXD_LSTCTX)) THEN
	   COICTXD(CTXD_LSTCTX) = PREV
	ENDIF
C
C Free old CTX
	COICTXD(CTXD_NCTX) = COICTXD(CTXD_NCTX)-1	! now one less
	CALL FREE1CTX(%VAL(COICTXD(CTXD_HOME)))	! free dynamic string
	CALL DELDEF(%VAL(COICTXD(CTXD_HOME)+CTX_O_ATTR))! list of attbts
C
C release space
	CALL FREE_MEM(CTX_ZONE,COICTXD(CTXD_HOME),CTXLENB)
C
C Get next CTX into buffer
	IF (NEXT.NE.0) THEN
	   COICTXD(CTXD_CUR) = NEXT
	ELSE
	   COICTXD(CTXD_CUR) = PREV	! none, so try previous
	ENDIF
C
	CALL THISCTX(COICTXD)
	CALL LOADCOI(VERIFY)		! transfer to COI variables
					! and make home
C
	RETURN
	END
