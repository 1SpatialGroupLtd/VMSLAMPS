C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1991-03-17 18:31:22.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
        SUBROUTINE DOWORK
C
***     IDENT   17MR91
***     MODULE  DOWORK
C
C       Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C       Written                                 PGH	15-OCT-1984
C
C	LITES2 cartographic editor WORKSTATION command.
C
        IMPLICIT NONE
C
***     PARAMETER/CMN:MOANMESS/
***     PARAMETER/CMN:STAPAR/
C
***     COMMON/CMN:DOUT/
***	COMMON/CMN:IMAGE/
***	COMMON/CMN:OVERLAY/
***	COMMON/CMN:STATE/
***     COMMON/CMN:WORKS/
C
	EXTERNAL NASTY
C
C function called
	INTEGER		ACT_CREATE_DISPLAY
	INTEGER		ACT_CREATE_OVERLAY
	LOGICAL		LSCR
	LOGICAL*1	TSTWK
C
C workspace
	LOGICAL*1	AVAIL
	INTEGER		OK
	INTEGER		NULL
	CHARACTER*1	NULLC
	INTEGER		PLANES
	INTEGER		MSG
	INTEGER		I
C
C Dispatch according to secondary command
	GOTO (100,200,300,400), DSECN
C
C Secondary command number out of range
	CALL MSGCMD(NASTY,MSG_ERRSECIND)
	GOTO 9990
C
C WORKSTATION COLOUR i r g b
C Call device dependent routine to set the colour.
C If returns true, then colour cannot be set
100	IF (SINDEX.EQ.STATE_INITIAL) GOTO 9980
	IF (LSCR(DINTS(1),DREALS(1),DREALS(2),DREALS(3))) THEN
	   CALL MOAN(MSG_COLNOTSET)
	   GOTO 9990
	ENDIF
	GOTO 9999
C
C WORKSTATION VIEWPORT number xmin xmax ymin ymax
C 
200	IF (SINDEX.NE.STATE_INITIAL) GOTO 9980
C
	IF (DINTS(1).LE.0 .OR. DINTS(1).GT.WSMAX) THEN
	   CALL MOAN(MSG_INVALWNUMBER,DINTS(1),WSMAX)
	   GOTO 9990
	ENDIF
C
C make values lie between 1 and 0
	DREALS(1)= MAX(DREALS(1),0.0)
	DREALS(2) = MIN(DREALS(2),1.0)
	DREALS(3) = MAX(DREALS(3),0.0)
	DREALS(4) = MIN(DREALS(4),1.0)
C
C test to see upper values are not less than lower values
	IF ((DREALS(1).GE.DREALS(2)) .OR. (DREALS(3).GE.DREALS(4))) THEN
	   CALL MOAN(MSG_INVALVPORT)
	   GOTO 9990
	ENDIF
	WKVSWX(DINTS(1)) = DREALS(1)
	WKVNEX(DINTS(1)) = DREALS(2)
	WKVSWY(DINTS(1)) = DREALS(3)
	WKVNEY(DINTS(1)) = DREALS(4)
	GOTO 9999
C
C WORKSTATION TYPE number type
C 
300	IF (SINDEX.NE.STATE_INITIAL) GOTO 9980
	IF (DINTS(1).LE.0 .OR. DINTS(1).GT.WSMAX) THEN
	   CALL MOAN(MSG_INVALWNUMBER,DINTS(1),WSMAX)
	   GOTO 9990
	ENDIF
	WTYPES(DINTS(1)) = DINTS(2)
	GOTO 9999
C
C
C WORKSTATION OVERLAY number overlay planes [offset]
C 
400	IF (DNINT.LT.3) THEN
	   CALL MOAN(MSG_CMDLIBEOL,'command',
     &			DPRI(:DPRIL)//' '//DSEC(:DSECL) )
	   GOTO 9990
	ENDIF
C
	IF (DINTS(1).LE.0 .OR. DINTS(1).GT.WSMAX) THEN
	   CALL MOAN(MSG_INVALWNUMBER,DINTS(1),WSMAX)
	   GOTO 9990
	ENDIF
C
	IF (DINTS(2).LE.0 .OR. DINTS(2).GT.MAXOVER) THEN
	   CALL MOAN(MSG_OVERRNG,1,MAXOVER)
	   GOTO 9990
	ENDIF
C
	IF (DINTS(3).LE.0) THEN
	   CALL MOAN(MSG_PLANES)
	   GOTO 9990
	ENDIF
C
	IF (DNINT.GE.4) THEN
	   IF (DINTS(4).LT.0) THEN
	      CALL MOAN(MSG_PLANEOFF)
	      GOTO 9990
	   ENDIF
	ELSE
	   DINTS(4) = -1
	ENDIF
C
C has the 'display' been created yet?
	IF (DISPLAY_PLANES(DINTS(1)).LT.0) THEN
	   AVAIL = TSTWK(DINTS(1),WTYPES(DINTS(1)),NULL,NULLC,PLANES)
	   IF (.NOT.AVAIL) THEN
	      MSG = MSG_PRINOTAVL
	      IF (DINTS(1).EQ.2) MSG = MSG_SECNOTAVL
	      CALL MOAN(MSG)
	      GOTO 9990
	   ENDIF
	   IF (PLANES.LE.0) THEN
	      CALL MOAN(MSG_NOOVER)
	      GOTO 9990
	   ENDIF
	   IF (PLANES.GT.MAXPLANES) PLANES = MAXPLANES
	   DISPLAY_PLANES(DINTS(1)) = PLANES
C
C test the other workstation, to see if they share overlays
	   AVAIL = TSTWK(3-DINTS(1),WTYPES(3-DINTS(1)),NULL,NULLC,PLANES)
	   IF (AVAIL.AND.PLANES.GT.0) THEN
	      OVERLAY_SHARE = .TRUE.
	      DISPLAY_PLANES(3-DINTS(1)) = DISPLAY_PLANES(DINTS(1))
	   ENDIF
	ENDIF
C
C create the display with required number of planes
	IF (.NOT.DISPLAY_EXISTS(DINTS(1))) THEN
C
C perhaps reduce number of planes if a DISPLAY COLOURS command
C has been used
	   IF (DISPLAY_COLS(DINTS(1)).GT.0) THEN
403	      IF (2**(DISPLAY_PLANES(DINTS(1))-1).LT.
     &			DISPLAY_COLS(DINTS(1)) ) GOTO 404
	      DISPLAY_PLANES(DINTS(1)) =
     &			DISPLAY_PLANES(DINTS(1))-1
	      GOTO 403
	   ENDIF
C
C create ACTLIB display structure for this display
404	   OK = ACT_CREATE_DISPLAY(DISPLAY_PTR(DINTS(1)),
     &				   DISPLAY_PLANES(DINTS(1)) )
	   IF (.NOT.OK) THEN
	      CALL NASTY(MSG_INTERNALERROR)
	      CALL LITES2_SIGNAL(OK)
	      GOTO 9990
	   ENDIF
	   DISPLAY_EXISTS(DINTS(1)) = .TRUE.
	   IF (OVERLAY_SHARE) THEN
	      DISPLAY_PTR(3-DINTS(1)) = DISPLAY_PTR(DINTS(1))
	      DISPLAY_EXISTS(3-DINTS(1)) = .TRUE.
	   ENDIF
C
C nb OVERLAYS only allowed on one workstation (not both)
	   OVERLAY_WORKSTATION = DINTS(1)
	   DISPLAY_CURRENT = DINTS(1)
	   OVERLAYS_INUSE = .TRUE.		! now using overlays
	   DO 405 I=1,MAXOVER
	      OVERLAY_PLANES(I,DINTS(1)) = 0
	      IF (OVERLAY_SHARE) OVERLAY_PLANES(I,3-DINTS(1)) = 0
405	   CONTINUE
	ENDIF
C
C arguments basically OK, so try so create the overlay
	IF (OVERLAY_PLANES(DINTS(2),DINTS(1)).GT.0) THEN
	   CALL MOAN(MSG_OVEXISTS,DINTS(2))
	   CALL LEARN(MSG_USEOVDEL)
	   GOTO 9990
	ENDIF
C
C create overlay
	OK = ACT_CREATE_OVERLAY(DISPLAY_PTR(DINTS(1)),
     &			OVERLAY_PTR(DINTS(2),DINTS(1)),
     &			DINTS(3),DINTS(4) )
	IF (.NOT.OK) THEN
	   CALL MOAN(MSG_BADOVER)
	   CALL LSL_PUTMSG(OK)
	   GOTO 9990
	ENDIF
C
	OVERLAY_CURRENT = DINTS(2)	! OVERLAY NUMBER it
	OVERLAY_PLANES(OVERLAY_CURRENT,DINTS(1)) = DINTS(3)
	OVERLAY_OFFSET(OVERLAY_CURRENT,DINTS(1)) = DINTS(4)
	IF (OVERLAY_SHARE) THEN
	   OVERLAY_PTR(DINTS(2),3-DINTS(1)) =
     &		OVERLAY_PTR(DINTS(2),DINTS(1))
	   OVERLAY_PLANES(OVERLAY_CURRENT,3-DINTS(1)) = DINTS(3)
	   OVERLAY_OFFSET(OVERLAY_CURRENT,3-DINTS(1)) = DINTS(4)
	ENDIF
	CALL OVERLAY_SELEAL		! and SELECT ALL it
	DO 410 I=1,MAXIMAGE		! clear image selections
	   O_IMSEL(I,OVERLAY_CURRENT) = .FALSE.
410	CONTINUE
	GOTO 9999
C
9980    CALL MSGCMD(MOAN,MSG_CMDNOTVALID)
9990	CALL IGNCMD
9999	RETURN
        END
