C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1994-05-17 17:51:54.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
        SUBROUTINE DOABOR
C
***     IDENT   17MY94
***     MODULE  DOABOR
C
C       Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C       Written                                 RWR	 5-July-1990
C
C	LITES2 cartographic editor ABORT command.
C
        IMPLICIT NONE
C
***     PARAMETER/CMN:MOANMESS/         ! moan constants
C
C Common Blocks
C
***	COMMON/CMN:DOUT/
***	COMMON/CMN:DVAR/
***	COMMON/CMN:GLOBAL/
***	COMMON/CMN:VARIABLE/
C
	EXTERNAL NASTY
C
C local variables
	INTEGER*4	CURADR		! buffer address
	INTEGER*4	CURCHS		! buffer length
	INTEGER*2	CURPTR		! buffer decode pointer
	INTEGER*4	CURINP		! input line external ?
	INTEGER*4	CURARGL		! argument string length
C
C functions
	LOGICAL		RSPINP,FRMFIL
C
C Dispatch according to secondary command
	GOTO ( 100,200,300,400,500,600), DSECN
C
C Secondary command number out of range
C
C---Secondary command number out of range
C
	IF (DSECN.EQ.0) GOTO 600	! ABORT is ABORT ALWAYS
	CALL MSGCMD(NASTY,MSG_ERRSECIND)
	GOTO 999
C
C ABORT INPUT - simulate a CTRL/C (but do not output message in HADCTRLC)
100	CONTINUE
	CTRLC = CTRLC_ABORT
	GOTO 1000
C
C ABORT TRUE - abort line/macro if JMPFLG
200	CONTINUE
	IF (JMPFLG) GOTO 600
	GOTO 1000
C
C ABORT FALSE
300	CONTINUE
	IF (.NOT.JMPFLG) GOTO 600
	GOTO 1000
C
C ABORT FILE - only if currently reading from file
400	CONTINUE
C
C check if reading from file
	IF (FRMFIL()) THEN
C
C pop the stack, until CURINP is TRUE - at this stage we have presumably
C deleted the input line from the file
410	   CONTINUE
	   CALL POPSTK(CURADR,CURCHS,CURPTR,CURINP,CURARGL,DSTR)
	   IF (.NOT.CURINP) GOTO 410
C
C close the file
	   CALL CLOFIL
CCCCCC	   CALL INFORM(MSG_CMDFILABA)
	ELSE
C
C not reading from file
	   CALL MOAN(MSG_CMDNOTCURR)
	   GOTO 999
	ENDIF
	GOTO 1000
C
C ABORT RESPOND - same as CANCEL RESPOND
500	CONTINUE
C
C Check that the RESPOND command has been given
	IF (.NOT. RSPINP()) THEN	! not had RESPOND
	   CALL MOAN(MSG_CMDNOTGIVEN,'RESPOND')
	   GOTO 999
	ELSE
C
C go back to interactive input next time thru command decoder
	   CANC_RESP = .TRUE.
	ENDIF
	GOTO 1000
C
C ABORT ALWAYS - abort line/macro
600	CONTINUE
C
C get line off stack - use DSTR as scratch
	CALL POPSTK(CURADR,CURCHS,CURPTR,CURINP,CURARGL,DSTR)
C
C ignore rest of line by going to the end and replacing it
	CURPTR=CURCHS+1
	CALL PSHSTK(CURADR,CURCHS,CURPTR,CURINP,CURARGL,DSTR)
	GOTO 1000
C
999	CALL IGNCMD
C
1000	CONTINUE
        RETURN
        END
