C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1987-11-13 16:06:48.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE FADDAC
C
***	MODULE	FADDAC
***	IDENT	13NO87
C
C Copyright Laser Scan Laboratories Ltd., Cambridge, England.
C Author: Ron Russell
C Date  : 13-Nov-1987
C
C To add the values of a ACs specified in the list of F_ADD definitions
C
	IMPLICIT NONE
C
***	PARAMETER/CMN:ACS/
C
***	COMMON/CMN:ACS/
***	COMMON/CMN:DEFINE/
C
C functions
	LOGICAL		LIB$EXTZV
C
C w/s
	INTEGER		ADDR
C
	ADDR = DEFINITION(F_ADD)    ! use the F_ADD list of definitions
10	CONTINUE
	IF (ADDR.LE.0) GOTO 999		! finished
C
C check if flag bit has been set
	IF (LIB$EXTZV(31,1,%VAL(ADDR+DEF_TYP))) THEN
	   CALL LIB$INSV(0,31,1,%VAL(ADDR+DEF_TYP))	! clear it
	ELSE
C
C output the AC
	   CALL IFFAC(%VAL(ADDR+DEF_TYP),%VAL(ADDR+DEF_VALUE))
	ENDIF
	CALL PUTLNG(%VAL(ADDR),ADDR)
	GOTO 10
C
999	RETURN
	END
