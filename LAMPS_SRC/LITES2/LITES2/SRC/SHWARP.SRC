	SUBROUTINE SHWARP
C
***	IDENT	21SE94
***	MODULE	SHWARP
C
C	Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C	Created					CCB	15-Sep-1994
C
C	LITES2 cartographic editor SHOW WARP command
C
C
	IMPLICIT NONE
C
***     PARAMETER/CMN:MOANMESS/
***	COMMON/LSL$CMNLSL:TXTC/
***	COMMON/CMN:SETUP/
C
	EXTERNAL	WARP_TRANSFORM_CMD_TABLE
C
C workspace
	INTEGER	I,J,N,CONTEXT
	REAL	XY(2)
C
	IF (SETUP) THEN
	   TXTPTR = 10		! long enough
	   CONTEXT = 0
	   CALL FIND_CMDNAME(WARP_TRANSFORM_CMD_TABLE,
     &		SET_TRANSFORM+1,TXTDSC,N,CONTEXT)
	   TXTPTR = N
	   CALL WRITEF('Warping is on, using %S transformation',TXTDSC)
	ELSE
	   CALL TTWSTR('Warping is off')
	ENDIF
C
	TXTPTR = 10		! long enough
	CONTEXT = 0
	CALL FIND_CMDNAME(WARP_TRANSFORM_CMD_TABLE,
     &		WARP_TRANSFORM+1,TXTDSC,N,CONTEXT)
	TXTPTR = N
	CALL WRITEF('Current warp transform is set to %S',TXTDSC)
	IF (WARP_TO_IMAGE) THEN
	   CALL TTWSTR('Warping map to image')
	ELSE
	   CALL TTWSTR('Warping image to map')
	ENDIF
	N = MAX(WARP_N(1),WARP_N(2))
	IF (N.EQ.0) THEN
	   CALL TTWSTR('No control points gave been specified')
	ELSE
	   CALL TTWSTR('Control points:   Map    Image   Residual')
CCC		      ('              X  -x.xxxx -x.xxxx -x.xxxx
	ENDIF
	DO 10 I=1,N
	   CALL WRITEF('%N',I)
	   IF (I.LE.WARP_N(1).AND.I.LE.WARP_N(2).AND.WARP_FITTED) THEN
	      XY(1) = WARP_POINTS(1,I)
	      XY(2) = WARP_POINTS(2,I)
	      CALL TRNUSE(XY(1),XY(2),WARP_COF,WARP_TRANSFORM)
	   ENDIF
	   DO 10 J=1,2
	      CALL EXPAND('              %C ',ICHAR('w')+J)
	      IF (I.LE.WARP_N(1)) THEN
	         CALL APPEND('%G7.5',WARP_POINTS(J,I))
	      ELSE
	         CALL APPEND('    -   ')
	      ENDIF
	      IF (I.LE.WARP_N(2)) THEN
	         CALL APPEND(' %G7.5',WARP_POINTS(J+2,I))
	      ELSE
	         CALL APPEND('    -   ')
	      ENDIF
	      IF (I.LE.WARP_N(1).AND.I.LE.WARP_N(2).AND.WARP_FITTED) THEN
	         XY(J) = XY(J) - WARP_POINTS(J+2,I)
	         CALL APPEND(' %G7.5',XY(J))
	      ENDIF
	      CALL TTWLIN
10	CONTINUE
C
	IF (WARP_FITTED) THEN
	   IF (WARP_DIRTY) THEN
	      CALL TTWSTR(
     &	'Control points have been changed since fit was calculated')
	      CALL TTWSTR(
     &	'RMS residuals are those at the time the fit was calculated')
	   ENDIF
	   CALL WRITEF('RMS residuals: %G0.5 %G0.5',WARP_RMS(1),WARP_RMS(2))
	ELSE
	   CALL TTWSTR('Fit has not been calculated')
	ENDIF
C
	RETURN
	END
