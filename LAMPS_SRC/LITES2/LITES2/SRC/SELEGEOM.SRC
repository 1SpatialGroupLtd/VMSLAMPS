	SUBROUTINE SELEGEOM(SELECT,N)
C
***	IDENT	21OC93
***	MODULE	SELEGEOM
C
C	Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C	Created					RWR	 7-Oct-1985
C
C Description
C
C	LITES2 cartographic editor SELECT *GEOMETRY command.
C
	IMPLICIT NONE
C
***     PARAMETER/CMN:MOANMESS/		! moan constants
C
***     COMMON/CMN:DOUT/		! command decoding output
***	COMMON/CMN:MASTER/
***	COMMON/CMN:OPTION/
***     COMMON/CMN:GEOM/		! data about geometries
C
C arguments
C
	LOGICAL		SELECT		! select or deselect
	INTEGER*4	N		! ingeometry  = 1
					! cutgeometry = 2
					! outgeometry = 3
C
C Functions called
	LOGICAL		GEOM_TYPE
C
C Local Variables
	INTEGER*4	GEOM		! geometry
	INTEGER		G_TYPE,G_COUNT
C
	GEOM=DINTS(1)
C
C check for valid geometry
	IF (SELECTED_GEOM .NE. 0 .AND. GEOM .NE. SELECTED_GEOM) THEN
	   CALL MOAN(MSG_ONLYONESELECT,SELECTED_GEOM)
	   CALL LEARN(MSG_ONLYONEGEOMSEL)
	   GOTO 1000
	ENDIF
C
	IF (.NOT.GEOM_TYPE(GEOM,G_TYPE,G_COUNT)) GOTO 1000
C
	IF (G_TYPE .NE. 2) THEN
	   CALL MOAN(MSG_GEOMONLYVALID,'Selection','area')
	   GOTO 1000
	ENDIF
C
	SELECTED_GEOM = GEOM
C
C if doing deselect, and currently all selected, set all selected flags
	IF (.NOT.SELECT .AND. SAGEOMS) THEN
	   SELECT_IN_GEOM = .TRUE.
	   SELECT_CUT_GEOM = .TRUE.
	   SELECT_OUT_GEOM = .TRUE.
	ENDIF
C
	IF (N .EQ. 1) THEN
	   SELECT_IN_GEOM = SELECT
	ELSEIF (N.EQ.2) THEN
	   SELECT_CUT_GEOM = SELECT
	ELSEIF (N.EQ.3) THEN
	   SELECT_OUT_GEOM = SELECT
	ENDIF
C
	SAGEOMS = SELECT_IN_GEOM.AND.SELECT_CUT_GEOM.AND.SELECT_OUT_GEOM
C
	IF (SAGEOMS) THEN
	   SELECTED_GEOM = 0
	   SELECT_IN_GEOM = .FALSE.
	   SELECT_CUT_GEOM = .FALSE.
	   SELECT_OUT_GEOM = .FALSE.
	ENDIF
C
C selections have been changed
C
	CHASEL = .TRUE.
C
1000	RETURN
	END
