C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1997-11-17 14:50:18.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE DRWSAV
C
***	IDENT	17NO97
***	MODULE	DRWSAV
C
C Copyright Laser-Scan Laboratories Ltd., Cambridge, England
C
C Author Clarke Brunt, 20-Mar-1985
C
C To sort and draw list of features
C (Called from FLVIEW)
C
	IMPLICIT NONE
C
***	PARAMETER/CMN:GKSPAR/
***	PARAMETER/CMN:PACK/
C
***	COMMON/CMN:DRAWIN/
***	COMMON/CMN:OPTION/
***	COMMON/CMN:PLOT/
***	COMMON/CMN:SORT/
***	COMMON/CMN:WORKS/
C
C function called
	LOGICAL		HADBREAK
C
C workspace
	INTEGER*4	ADR,I
	INTEGER*4	PACK(PAKLEN)
	INTEGER*4	LONG(2)	! only declared 2 for GESC below
	INTEGER*2	WORD(2)
	EQUIVALENCE	(LONG,WORD)
	INTEGER*2	LAST_PRIO
C
C Sort array
	CALL LSORT(	%VAL(SORADR),		! table
     &			SORPTR,			! count
     &			%VAL(SORADR+SORPTR*8) )	! stack
C
C clear memory of last priority drawn
	LAST_PRIO = -1
C
C Loop through, taking pack addresses from array
	DO 10 I=SORADR+4,SORADR+SORPTR*8,8
	   CALL PUTLNG(%VAL(I),ADR)	! pack address into ADR
C
C set the feature code to use, if using SORT PRIORITY
	   IF (SORIFF .EQ. SORT_BY_PRIORITY) THEN
	      CALL PUTLNG(%VAL(I-4),LONG)
	      PRIO_FC = WORD(1)
C
C if the priority has changed, then may need to send an escape
C to the plotter
	      IF (PLOT_ON.AND.PLOT_SEP_ESC.NE.0) THEN
	         IF (WORD(2).NE.LAST_PRIO) THEN
	            LAST_PRIO = WORD(2)
C
C N.B. beware GESC doing anything untoward in the primary GKS, as well as
C the plotter GKS - OK for GKSMOTIFLIB (the only one supported at present)
	            LONG(1) = 0
	            CALL GESC(PLOT_SEP_ESC+1000,LONG) ! pass LONG as dummy
	         ENDIF
	      ENDIF
	   ENDIF
	   CALL GETPAK(PACK,%VAL(ADR))	! retrieve pack
	   CALL LSVIS(PACK,GVISI)	! and set it visible
	   IF (USESEG) CALL SETFTR(SEGFLG,PACK(PAKLNK))
	   IF (HADBREAK()) GOTO 20	! CTRL/C typed - abandon
10	CONTINUE
C
C finished, maybe do another plot separator escape
20	IF (PLOT_ON.AND.PLOT_SEP_ESC.NE.0) THEN
	   LONG(1) = 0
	   CALL GESC(PLOT_SEP_ESC+1000,LONG)
	ENDIF
C
	RETURN
	END
