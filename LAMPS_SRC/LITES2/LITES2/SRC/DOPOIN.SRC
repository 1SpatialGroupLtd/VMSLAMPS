C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1996-05-09 12:01:58.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE DOPOIN
C
***	IDENT   09MY96
***	MODULE  DOPOIN
C
C	Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C	Written					RJH	25-SEP-1984
C	Created dummy				RJH     18-SEP-1984
C
C Description
C
C	LITES2 cartographic editor POINT command.
C
	IMPLICIT NONE
	INCLUDE	'LSL$CMNIFF:CB.STR'
***	PARAMETER/CMN:ACS/
***	PARAMETER/CMN:AUXDEF/
***	PARAMETER/CMN:CTXS/
***	PARAMETER/CMN:MOANMESS/
***	PARAMETER/CMN:PACK/
***	PARAMETER/CMN:STAPAR/
C
***	COMMON/CMN:ACS/
***	COMMON/CMN:ATTBTS/
***	COMMON/LSL$CMNFRT:FRTCOM/
***	COMMON/CMN:CTXS/
***	COMMON/CMN:DOUT/
***	COMMON/CMN:MASTER/		! odds and ends
***	COMMON/CMN:MODIFY/
***	COMMON/CMN:OIIH/
***	COMMON/CMN:OPTION/
***	COMMON/CMN:STATE/
***	COMMON/CMN:STRIKE/
C
C w/s
	INTEGER		I
C
	EXTERNAL	MOAN
C
C functions called
	LOGICAL	CHKLIN
	LOGICAL	THISCTX
C
C dealing with texts?
C
	IF (.NOT.FO.AND.SINDEX.EQ.STATE_MODIFY) GOTO 100
C
C otherwise must have a found object
C
	IF (.NOT.FO) THEN
	   CALL MOAN(MSG_NOFEATURE)
	   GOTO 999
	ENDIF
C
C a text?
C
	IF (FOPAK(PAKGT).EQ.TEXTYP) GOTO 100
C
	IF (CHKLIN(.TRUE.)) THEN	! linear found object
	   IF (DINTS(1).LE.0.OR.DINTS(1).GT.FOLST) THEN
	      CALL MOAN(MSG_NOVERTEX,DINTS(1))
	      GOTO 999
	   ENDIF
	   FOVRT = DINTS(1)		! move to vertex
	   FONVRT = .TRUE.			! on a vertex
	   CALL VERTEX(0.0)		! common code
	   GOTO 1000
	ELSE
	   GOTO 999
	ENDIF
C
C Dealing with texts
C
C don't operate on symbols
100	IF (SINDEX.EQ.STATE_MODIFY.AND.COIPAK(PAKGT).NE.TEXTYP) THEN
	   CALL MSGCMD(MOAN,MSG_CMDONLYTEXT)
	   GOTO 999
	ENDIF
C
C only valid if COMOPT has been enabled
C
	IF (.NOT.COMOPT) THEN
	   CALL MSGCMD(MOAN,MSG_ONLYWITHCOMP)
	   GOTO 999
	ENDIF
C
C check for valid vertex
	IF (SINDEX.NE.STATE_MODIFY) THEN
	   I = FTRCTXD(CTXD_NCTX)
	ELSE
	   I = COICTXD(CTXD_NCTX)
	ENDIF
C
	IF (DINTS(1).LE.0.OR.DINTS(1).GT.I) THEN
	   CALL MOAN(MSG_NOVERTEX,DINTS(1))
	   GOTO 999
	ENDIF
C
C load first CTX
C
	IF (SINDEX.EQ.STATE_MODIFY) THEN
	   COICTXD(CTXD_CUR) = COICTXD(CTXD_FSTCTX)
	   CALL THISCTX(COICTXD)
	ELSE
	   FTRCTXD(CTXD_CUR) = FTRCTXD(CTXD_FSTCTX)
	   CALL THISCTX(FTRCTXD)
	ENDIF
C
C move onto required point
	DO 200, I=1,DINTS(1)-1
	   IF (SINDEX.EQ.STATE_MODIFY) THEN
	      CALL NEXTCTX(COICTXD,.FALSE.)
	   ELSE
	      CALL NEXTCTX(FTRCTXD,.FALSE.)
	   ENDIF
200	CONTINUE
C
C move cursor and make home
	IF (SINDEX.EQ.STATE_MODIFY) THEN
	   SUBTXT = .TRUE.			! in part state
	   CALL VTSTAT
	   CALL LOADCOI(.TRUE.)	! transfer to COI variables
				! and make home
	ELSE
	   FTRCTXD(CTXD_HOME) = FTRCTXD(CTXD_CUR)! make this one home
C
C load FO variables (and verify)
	   CALL LOADFO(.TRUE.)
C
C move cursor
	   CSXY(1) = CTXBUFR(CTX_L_X)
	   CSXY(2) = CTXBUFR(CTX_L_Y)
	   IF (ZOPT) CALL GETZ(CSZI,FONATT,FOATTC,FOATTV(1,1))
	   CSSTIL = .FALSE.		! cursor has moved
	ENDIF
	GOTO 1000
C
C
C error exit
999	CALL IGNCMD
1000	RETURN
	END
