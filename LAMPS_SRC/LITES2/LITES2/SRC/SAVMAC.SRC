C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1994-05-18 14:35:36.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
        SUBROUTINE SAVMAC
C
***     IDENT   18MY94
***     MODULE  SAVMAC
C
C       Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C       Written                                 RWR	23-Apr-1985
C
C	LITES2 cartographic editor SAVE MACRO command.
C
        IMPLICIT NONE
C
***	PARAMETER/CMN:EFNLUN/
***     PARAMETER/CMN:MACMEN/		! macros, menus and puck buttons
***	PARAMETER/CMN:MERPAR/		! error codes from macro reading
***     PARAMETER/CMN:MOANMESS/         ! moan constants
***	PARAMETER/LSL$CMNLSL:LSLLIBMSG/ ! lsllib message file
C
***	COMMON/CMN:DIN/
***	COMMON/CMN:DFILRD/		! command filename details
***	COMMON/CMN:DMACRD/		! macro reading results
***	COMMON/CMN:DOUT/
***	COMMON/CMN:DVAR/
***	COMMON/CMN:MACRO/		! data about macros
***	COMMON/LSL$CMNLSL:TXTC/
C
C Functions called
	INTEGER		LIB$EXTV
	INTEGER*4	GETMAC		! gets macro name
	LOGICAL		PARFILN		! parses filename
	LOGICAL 	FLWOPN,FLWSTR
	INTEGER*2	GET_VARWORD
C
C Local Variables
	INTEGER*4	IER,RETCOD	! return codes
	CHARACTER*(NFM)	FLNAM		! file name
	INTEGER		LN		! length of file name
	LOGICAL		ABORT		! PRMACR aborted ?
C
C check macro name
C
	IER = GETMAC(DSTR(1:DSTRL),.FALSE.)	! get macro name
	IF (IER.NE.0) THEN 		! error, so complain
	   CALL ERRMAC(IER,'macro')	! and exit
	   GOTO 850
	ENDIF
C
	CALL MACSTR			! form name in TXTDSC
C
C check if macro is 'hidden' (read from encrypted file)
C
	IF (LIB$EXTV(DMACN-1,1,%VAL(MACENC_ADDR))) THEN
	   CALL MOAN(MSG_MACHIDDEN,TXTDSC)
	   GOTO 850
	ENDIF
C
C check for empty macro
C
	IF (GET_VARWORD(%VAL(MACDSW_ADDR),1,DMACN).LE.0) THEN	! empty macro
	   CALL MOAN(MSG_EMPTYMACRO,TXTDSC)
	   GOTO 850
	ENDIF
C
C get file name
C
	RETCOD = PARFILN(FLNAM,LN,TXTDSC,COMTEM,.FALSE.)
	IF (.NOT.RETCOD) THEN
	   CALL MOAN(MSG_ERRFILENAME,TXTDSC)
	   CALL LITES2_SIGNAL(RETCOD)
	   GOTO 850
	ENDIF
C
C and open it
C
	RETCOD = FLWOPN(PRTLUN,FLNAM,IER)
	IF (.NOT.RETCOD)THEN
	   CALL NASTY(MSG_FLWOPNERR,FLNAM,PRTLUN)
	   CALL LITES2_SIGNAL(RETCOD)
	   IF (RETCOD .EQ. LSL__SYSOPEN) CALL LITES2_SIGNAL(IER)
	   GOTO 850
	ENDIF	
	CALL FLWSEL(PRTLUN)			! select it
C
C write out macro
C
	CALL FLWRTF('%%MACRO %S',TXTDSC)
	CALL PRMACR(DMACN,.FALSE.,
     &		%VAL(MACDSW_ADDR),%VAL(MACDSL_ADDR),ABORT)
	CALL FLWSTR('%ENDMACRO')
C
C and close file
C
	CALL FLWCLO(PRTLUN)
	GOTO 900
C
850	CALL IGNCMD
C
900	RETURN
        END
