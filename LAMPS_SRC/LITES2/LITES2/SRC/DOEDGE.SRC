	SUBROUTINE DOEDGE
C
***	IDENT   12OC89
***	MODULE  DOEDGE
C
C	Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C	Written					RWR	13-May-1985
C
C Description
C
C	LITES2 EDGEMATCH command
C
	IMPLICIT NONE
C
	INCLUDE	'LSL$CMNIFF:CB.STR'
***	PARAMETER/CMN:AUXDEF/
***	PARAMETER/CMN:EFNLUN/
***	PARAMETER/CMN:LICPAR/
***	PARAMETER/CMN:MOANMESS/		! moan constants
***	PARAMETER/CMN:PACK/
C
***	COMMON/CMN:DOUT/
***	COMMON/CMN:DRAWIN/
***	COMMON/CMN:EDGE/
***	COMMON/CMN:MASTER/
***	COMMON/CMN:OPTION/
***	COMMON/CMN:STRIKE/
C
C functions
C
	LOGICAL		LICENSED
C
C Local Variables
C
	LOGICAL*1	SAVEND,SAVVER
	REAL		SVEFCR
	INTEGER		I
C
C check that this facility is licenced
C
	IF (.NOT.LICENSED(LOCK_EDGE)) GOTO 1000
C
C get line to edge match to  (use defined base line at present)
C
	IF (.NOT.BASEDG) THEN
	   CALL MOAN(MSG_NOBASEDEF)
	   GOTO 1000
	ENDIF
C
C get time and date of this edge match
C
	CALL TIME(EDGETIME)
	CALL DATE(EDGEDATE)
C
C stop verifying found features
C
	SAVVER=VEROPT			! verifying features
	VEROPT=.FALSE.
C
C save match settings, and clear them so that all features will be found
C
	SMATFSN=MATFSN
	SMATFC =MATFC
	SMATMAP=MATMAP
	SMATLAY=MATLAY
	SMATPC =MATPC
	SMATAC =MATAC
	MATFSN=.FALSE.
	MATFC =.FALSE.
	MATMAP=.FALSE.
	MATLAY=.FALSE.
	MATPC =.FALSE.
	MATAC =.FALSE.
C
C set up tolerance for edgmatching
C
	EDGTOL=TOLEDG*SCLFRT
	SVEFCR=EFCRIT			! save find radius
	EFCRIT=EDGTOL			! and set it to edgmatcing
C
C set up value to be considered as zero
C
	ZEROTOL=MAX(ABS(LIMITS(2)-LIMITS(1)),ABS(LIMITS(4)-LIMITS(3)))
	ZEROTOL=ZEROTOL*1E-7
C
C set propagating flag if required
C
	PRPING=PRPTOL.GT.0.0
C
C save setting of ENDOPT, and set it for finding ends
C
	SAVEND=ENDOPT
	ENDOPT=.TRUE.		
C
C get list of implicated sectors into EDGSEC
C
	CALL SECEDG
C
C  now we are edgmatching, so tell other routines
C
	EDGING=.TRUE.
	FSHCTR=.TRUE.		! external control of flag setting
				! in FLUSH
C
C problem file should be closed
C
	FLEOPN=.FALSE.
	FERROR=.FALSE.		! no error
C
C Dispatch according to secondary command
	GOTO (100,200,300), DSECN
C
C Secondary command number out of range
C
	CALL NASTY(MSG_ERRSECIND,DPRI(1:DPRIL))
	GOTO 950
C
C Secondary command JOIN
C
100	I=JOIN_TYP
	GOTO 900
C
C Secondary command OFF
200	I=TIE_TYP
	GOTO 900
C
C Secondary command EXTEND
300	CALL EDGEXT
	GOTO 930
C
C
C edgmatch along EDGLNE
C
900	CALL EDGMAT(I)
C
C deal with file
C
930	IF (FLEOPN) THEN
	   CALL FLWSEL(EDGLUN)		! select file
	   CALL FLWRTF('%%MESSAGE  No more problems')
	   CALL FLWCLO(EDGLUN)		! close file
	   CALL INFORM(MSG_BLANK)
	   CALL INFORM(MSG_EDGEREVIEW)
	   CALL INFORM(MSG_BLANK)
	ELSEIF (.NOT.FERROR) THEN	! did not open file
	   CALL OPEFILE			! open it now
	   IF (.NOT.FERROR) THEN
	      CALL FLWSEL(EDGLUN)
	      CALL FLWRTF('%%MESSAGE')
	      CALL FLWRTF('%%MESSAGE No problems with this base')
	      CALL FLWCLO(EDGLUN)
	   ENDIF
	   CALL INFORM(MSG_BLANK)
	   CALL INFORM(MSG_NOPROBLEM)
	ENDIF
C
C exit
950	ENDOPT=SAVEND			! reset saved values
	EFCRIT=SVEFCR
	VEROPT=SAVVER			! verifying features
C
	EDGING=.FALSE.			! reset flags
	FSHCTR=.FALSE.
	PRPING=.FALSE.
	INSPIR=.FALSE.			! cancel any spiral search
C
	MATFSN=SMATFSN			! reset match settings
	MATFC =SMATFC
	MATMAP=SMATMAP
	MATLAY=SMATLAY
	MATPC =SMATPC
	MATAC =SMATAC
C
1000	RETURN
	END
