C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1992-02-14 16:19:22.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
 	SUBROUTINE VIEW_BFA(NCOORD,XYIN,ZIN)
C
***	MODULE	VIEW_BFA
***	IDENT	14FE92
C
C Copyright Laser Scan Laboratories Ltd, Cambridge, England.
C
C Created					RWR	13-December-1989
C
C Routine to buffer coordinates up before passing them on to
C solid rendering routine
C
	IMPLICIT NONE
C
	INTEGER		NCOORD		! number of coords in input buffer.
	REAL 		XYIN(2,NCOORD)
	INTEGER 	ZIN(2,NCOORD)	! z coords (as integers)
C
***	COMMON/CMN:STDBFC/
C
C equivalence things onto STDBFC common block - SEE ALSO VIEW_BFF.SRC
	INTEGER		VIEW_BFM
C
	VIEW_BFM = STDBFM/2
C
C this is a jacket routine, that calls the routine that does the work
C passing it the buffers to work on.
C
	CALL VIEW_BFA_SUB(NCOORD,XYIN,ZIN,VIEW_BFM,
     &	                  %VAL(STDBFZ_ADDR),%VAL(STDBFX_ADDR),STDBFP)
C
	RETURN
C
	END


	SUBROUTINE VIEW_BFA_SUB(NCOORD,XYIN,ZIN,VIEW_BFM,ZZ,XXYY,STDBFP)
C
***	MODULE	VIEW_BFA_SUB
***	IDENT	14FE92
C
C Copyright Laser Scan Laboratories Ltd, Cambridge, England.
C
C Created					RWR	13-December-1989
C
C Routine to buffer coordinates up before passing them on to
C solid rendering routine
C
	IMPLICIT NONE
C
	INTEGER		NCOORD		! number of coords in input buffer.
	REAL 		XYIN(2,NCOORD)
	INTEGER 	ZIN(2,NCOORD)	! z coords (as integers)
	INTEGER		VIEW_BFM
	INTEGER		ZZ(2,VIEW_BFM)	! treat as integer
	REAL		XXYY(2,VIEW_BFM)
	INTEGER		STDBFP
C
C W/s.
	INTEGER		I			! pointer to X/YIN.
C
C Fill up the output buffer.
	DO 20 I=1,NCOORD
C Add another coord to the buffer.
	   STDBFP=STDBFP+1
	   XXYY(1,STDBFP) = XYIN(1,I)
	   XXYY(2,STDBFP) = XYIN(2,I)
	   ZZ(1,STDBFP)   = ZIN(1,I)
	   ZZ(2,STDBFP)   = ZIN(2,I)
C
C Is the output buffer full - if so then output it 
C preserving continuity point
	   IF (STDBFP.GE.VIEW_BFM) CALL VIEW_BFF(1)
20	CONTINUE
C
	RETURN
C
	END
