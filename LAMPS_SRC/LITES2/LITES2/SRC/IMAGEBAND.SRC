	LOGICAL FUNCTION IMAGEBAND(IM,BAND,BANDCOL,STRL,STR)
C
***	IDENT	05SE89
***	MODULE	IMAGEBAND
C
C	Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C	Created					CCB	23-Apr-1989
C
C Add new band to image classification
C
	IMPLICIT NONE
C
***	PARAMETER/CMN:MOANMESS/
***	COMMON/CMN:IMAGE/
C
C arguments
	INTEGER		IM		! image number
	REAL		BAND(2)		! band range
	INTEGER		BANDCOL		! band colour index
	INTEGER		STRL		! length of string (may be 0)
	CHARACTER*(*)	STR		! string
C
C workspace
	INTEGER	I
	REAL	TBAND(2,MAXBAND)
	INTEGER	TBANDCOL(MAXBAND)
	INTEGER	TNBAND
	LOGICAL	INNEW,DONE
C
	IMAGEBAND = .FALSE.
	TNBAND = 0
	DONE = .FALSE.
	INNEW = .FALSE.
C
	DO 100 I=1,IMAGE_NBAND(IM)
10	   IF (INNEW) THEN
C
C inside new band
C if new band supercedes old band, then lose old band
	      IF (BAND(2).GE.IMAGE_BAND(2,I,IM)) GOTO 100
C
C so end of new band is lower than end of current band
	      INNEW = .FALSE.
	      TBAND(2,TNBAND) = BAND(2)
	      DONE = .TRUE.
	      IF (BAND(2).GE.IMAGE_BAND(1,I,IM)) THEN
C
C new band ends inside or at start of current band, so if
C colour is different then amend current band, otherwise
C merge the bands
	         IF (BANDCOL.NE.IMAGE_BANDCOL(I,IM)) THEN
	            IF (TNBAND.EQ.MAXBAND) GOTO 9990
	            TNBAND = TNBAND+1
	            TBAND(1,TNBAND) = BAND(2)
	            TBANDCOL(TNBAND) = IMAGE_BANDCOL(I,IM)
	            CALL STR$COPY_DX(IMAGE_TSTR(1,TNBAND),
     &	                             IMAGE_BANDSTR(1,I,IM))
	         ENDIF
	         TBAND(2,TNBAND) = IMAGE_BAND(2,I,IM)
	         GOTO 100
	      ENDIF
	   ENDIF
	   IF (.NOT.DONE.AND..NOT.INNEW.AND.
     &			BAND(1).LE.IMAGE_BAND(1,I,IM)) THEN
C
C insert low end of new band
	      IF (TNBAND.EQ.MAXBAND) GOTO 9990
	      TNBAND = TNBAND+1
	      TBAND(1,TNBAND) = BAND(1)
	      TBANDCOL(TNBAND) = BANDCOL
	      IF (STRL.GT.0) THEN
	         CALL STR$COPY_DX(IMAGE_TSTR(1,TNBAND),STR(1:STRL))
	      ELSE
	         CALL STR$FREE1_DX(IMAGE_TSTR(1,TNBAND))
	      ENDIF
	      INNEW = .TRUE.
	      GOTO 10
	   ENDIF
C
C insert low end of old band
	   IF (TNBAND.EQ.MAXBAND) GOTO 9990
	   TNBAND = TNBAND+1
	   TBAND(1,TNBAND) = IMAGE_BAND(1,I,IM)
	   TBANDCOL(TNBAND) = IMAGE_BANDCOL(I,IM)
	   CALL STR$COPY_DX(IMAGE_TSTR(1,TNBAND),IMAGE_BANDSTR(1,I,IM))
	   IF (DONE.OR.BAND(1).GT.IMAGE_BAND(2,I,IM)) THEN
C
C insert high end of old band
	      TBAND(2,TNBAND) = IMAGE_BAND(2,I,IM)
	   ELSE
C
C new band begins inside current band, so if colour is different, then
C end current band and begin new one
	      IF (BANDCOL.NE.TBANDCOL(TNBAND)) THEN
	         TBAND(2,TNBAND) = BAND(1)
	         IF (TNBAND.EQ.MAXBAND) GOTO 9990
	         TNBAND = TNBAND+1
	         TBAND(1,TNBAND) = BAND(1)
	         TBANDCOL(TNBAND) = BANDCOL
	         IF (STRL.GT.0) THEN
	            CALL STR$COPY_DX(IMAGE_TSTR(1,TNBAND),STR(1:STRL))
	         ELSE
	            CALL STR$FREE1_DX(IMAGE_TSTR(1,TNBAND))
	         ENDIF
	      ENDIF
	      INNEW = .TRUE.
	      GOTO 10
	   ENDIF
100	CONTINUE
C
C finish off new band if not done already
	IF (.NOT.DONE) THEN
	   IF (.NOT.INNEW) THEN
	      IF (TNBAND.EQ.MAXBAND) GOTO 9990
	      TNBAND = TNBAND+1
	      TBAND(1,TNBAND) = BAND(1)
	      TBANDCOL(TNBAND) = BANDCOL
	      IF (STRL.GT.0) THEN
	         CALL STR$COPY_DX(IMAGE_TSTR(1,TNBAND),STR(1:STRL))
	      ELSE
	         CALL STR$FREE1_DX(IMAGE_TSTR(1,TNBAND))
	      ENDIF
	   ENDIF
	   TBAND(2,TNBAND) = BAND(2)
	ENDIF
C
C replace structure
	CALL CPYPAK(2*TNBAND,TBAND,IMAGE_BAND(1,1,IM))
	CALL CPYPAK(TNBAND,TBANDCOL,IMAGE_BANDCOL(1,IM))
	DO 200, I = 1,TNBAND
	   CALL STR$COPY_DX(IMAGE_BANDSTR(1,I,IM),IMAGE_TSTR(1,I))
200	CONTINUE
	IMAGE_NBAND(IM) = TNBAND
	GOTO 9999
C
9990	CALL MOAN(MSG_STRING,'Too many bands defined')
	IMAGEBAND = .TRUE.
C
9999	RETURN
	END
