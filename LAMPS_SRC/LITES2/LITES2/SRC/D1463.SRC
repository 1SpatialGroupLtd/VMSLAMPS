	SUBROUTINE D1463
C
***	MODULE	D1463
***	IDENT	19JL88
C
	IMPLICIT NONE
C
***	PARAMETER/CMN:MOANMESS/
C
C Created by Alan Wylie 5-Feb-1980
C From the Ordnance Survey CORAL66 squaring program
C
C Control squaring process
C 1) Repeat until no line segments have been picked up on a pass:-
C	zeroise maximum line length
C	call D1464 to identify a datum line for current pass
C	zeroise sums of line lengths and linear misalignments
C	call D1465 to find lines in tolerance with datum
C	if any such lines found:-
C	   call D1466 to recompute coefficients of datum line
C	   call D1467 to bring other line segments accepted on current
C	   pass into alignment with datum
C 2) Call D1468 to recompute end points of all line segments
C
***	COMMON/CMN:D14IFC/
***	COMMON/CMN:D14CMN/
***	COMMON/CMN:OPTION/
C
C w/s
	INTEGER ND	! number of datum passes
	INTEGER	NPER	! number of 'perp' sides
	INTEGER	NPAR	! number of 'parallel' sides
	INTEGER	NOTHER	! number of 'other' sides
	INTEGER	NMOVED	! number of sides moved this pass
C
	ND = 0
	NPAR = 0
	NPER = 0
C loop for all data (bases)
10	CONTINUE
	   MAXLA=0.0
	   CALL D1464	! find a datum line
	   ND = ND+1
	   SUMLA=0.0
	   SUMM=0.0
	   D14PER = 0	! no perpendiculars yet this pass
	   D14PAR = 0	! or parallels
	   CALL D1465	! find lines in tolerance with datum
	   NMOVED = D14PER + D14PAR
	   IF (NMOVED.GT.0) THEN
	      CALL D1466	! recompute coeffs of datum
	      CALL D1467	! bring acceptable lines into tolerance
	      IF ((NMOVED.GT.1).OR.(USING_BASE.AND.(NMOVED.GT.0))) THEN
	         IF (USING_BASE) THEN
		    CALL INFORM(MSG_SQREP,D14PAR,D14PER,ND,NDATUM)
	         ELSE
		    CALL INFORM(MSG_SQREPB,D14PAR,D14PER,ND,NDATUM)
	         ENDIF
	      ENDIF
	   ENDIF
	IF (USING_BASE) THEN
	   NPER = NPER + D14PER
	   NPAR = NPAR + D14PAR
	ELSE
	   IF (NMOVED.GT.1) NPER = NPER + D14PER
	   IF (NMOVED.GT.1) NPAR = NPAR + D14PAR
	ENDIF
	NDONE = NDONE + NMOVED	! this number of lines squared
	IF ((NDONE.GE.(D14NPT-1)).OR.
     &      (.NOT.FIXOPT.AND.BASESQ.AND.(BASNUM.EQ.BASIND))) GOTO 20
	GOTO 10
C
20	IF (D14NIV.GT.0)
     &    CALL INFORM(MSG_SQINV,D14NIV)
	NOTHER = D14NPT - NPER - NPAR - D14NIV - 1
	IF (NOTHER.GT.0) CALL INFORM(MSG_SQUNSQ,NOTHER)
	CALL D1468	! recompute end points of all lines
C
	RETURN
	END
