	SUBROUTINE SHMACR
C
***	IDENT	17MY94
***	MODULE	SHMACR
C
C	Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C	Created					RWR	 8-Nov-1984
C
C Description
C
C	Routine to list a particular macro, or to give a list of
C	all available macros.
C
	IMPLICIT NONE
C
***     PARAMETER/CMN:MACMEN/
***     PARAMETER/CMN:MOANMESS/		! moan constants
C
***	COMMON/CMN:DMACRD/		! macro reading results
***     COMMON/CMN:DOUT/		! command decoding output
***	COMMON/CMN:MACRO/		! data about macros
***	COMMON/CMN:MENUS/
***	COMMON/LSL$CMNLSL:TXTC/
C
C Functions called
	INTEGER		LIB$EXTV
	INTEGER*4	GETMAC		! gets macro name
	LOGICAL		PRTMAC		! lists available macros/menus
	INTEGER*2	GET_VARWORD
	INTEGER*4	GET_VARLONG
C
C Local Variables
	INTEGER*4	IER		! return code
	INTEGER*4	DESC(2)		! string descriptor
	LOGICAL		ABORT		! PRMACR aborted ?
C
	IF (DSTRIN) THEN		! command line entered with
					! argument, so look for macro
	   IER = GETMAC(DSTR(1:DSTRL),.FALSE.)
	   IF (IER.EQ.0) THEN 		! no error, so list macro
C
	      CALL MACSTR		! form name in TXTDSC
C
C check if macro is 'hidden' (read from encrypted file)
C
	      IF (LIB$EXTV(DMACN-1,1,%VAL(MACENC_ADDR))) THEN
	         CALL INFORM(MSG_MACHIDDEN,TXTDSC)
	      ELSE
C
C output empty macro message, or expansion of the macro
C
	         IF (GET_VARWORD(%VAL(MACDSW_ADDR),1,DMACN).LE.0) THEN 
		    CALL INFORM(MSG_EMPTYMACRO,TXTDSC)	! empty macro
	         ELSE
		    IF (GET_VARWORD(%VAL(MANDSW_ADDR),1,DMACN).LE.0) THEN
	               CALL INFORM(MSG_MACROEXPANSION,TXTDSC)
	            ELSE
	               DESC(1) = GET_VARLONG(%VAL(MANDSL_ADDR),1,DMACN)
	               DESC(2) = GET_VARLONG(%VAL(MANDSL_ADDR),2,DMACN)
	               CALL INFORM(MSG_MACROEXPANDESC,TXTDSC,DESC)
	            ENDIF
		    CALL INFORM(MSG_BLANK)
C
C Print macro on screen
C
		    CALL PRMACR(DMACN,.TRUE.,
     &			%VAL(MACDSW_ADDR),%VAL(MACDSL_ADDR),ABORT)
	         ENDIF
	      ENDIF
	   ELSE				! error
	      CALL ERRMAC(IER,'macro')
	      CALL IGNCMD
	   ENDIF
	ELSE				! no macro name on command line
	   IF (PRTMAC(%VAL(MACTAB_ADDR),.TRUE.)) THEN ! print macro names or
	      CALL MOAN(MSG_NOMACRO)	! complain if there are none
	   ENDIF
	ENDIF
C
	RETURN
	END
