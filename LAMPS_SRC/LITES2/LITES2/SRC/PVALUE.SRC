C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1990-07-10 14:28:14.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	INTEGER FUNCTION PVALUE(STRING,N,ACTION)
C
***	IDENT   10JL90
***	MODULE  PVALUE
C
C	Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C	Written         			CCB	6-JUL-1990
C
C	ACTION = 1
C	Get value for N'th macro parameter - return length
C
C	ACTION = 2
C	Get value whole parameter list - return length
C
C	ACTION = 3
C	Return number of parameters
C
	IMPLICIT NONE
C
***	PARAMETER/CMN:CHARS/
***	PARAMETER/LSL$CMNLSL:READSTR/
C
***	COMMON/CMN:DVAR/
***	COMMON/CMN:VARIABLE/
***	COMMON/LSL$CMNLSL:WINDEF/
C
C functions called
	INTEGER		READSTR
	LOGICAL		RDCHS
C
C arguments
	CHARACTER*(*)	STRING	! the result string
	INTEGER		N	! which argument
	INTEGER		ACTION	! which result
C
C workspace
	INTEGER		I,L
	BYTE		CH
	INTEGER		LENGTH
	INTEGER*4	ADDR
	INTEGER*2	PTR
	INTEGER*2	SAVORIG
	INTEGER*4	SAVTXB(2)
	LOGICAL*1	SAVWIN
C
	PVALUE = 0		! assume null string
C
C Get argument line - either from common if called from SUBVAR in command
C decoding, else from the stack
	IF (VARGLOC.NE.0) THEN
	   ADDR = VARGLOC
	   LENGTH = VARGLEN
	ELSE
	   ADDR = DSTACK(6,DSPTR)
	   LENGTH = DSTACK(5,DSPTR).AND.65535
	ENDIF
C
	IF (LENGTH.EQ.0) GOTO 999	! no arguments - return null
C
	IF (ACTION.EQ.2) THEN
	   PVALUE = LENGTH
	   CALL STR$COPY_R(STRING,LENGTH,%VAL(ADDR))
	   GOTO 999
	ENDIF
C
C save line decoding context, including auxiliary buffer
	CALL DCPSAV(PTR)		! save TXTBUF pointer
	SAVORIG = ORIGTP
	SAVTXB(1) = AUXTXB(1)
	SAVTXB(2) = AUXTXB(2)
	SAVWIN = WINDEF
C
	CALL SETAUX(%VAL(ADDR),LENGTH)	! set auxiliary buffer
	I = 0
C
10	IF (RDCHS(CH)) GOTO 20
	IF (CH.EQ.DQOT) THEN			! double quoted string
	   L = READSTR(STRING,DQOT,ON_CHAR2,.FALSE.)
	ELSE					! terminate by space
	   CALL BSCH
	   L = READSTR(STRING,SPACE,ON_SPACE,.TRUE.)
	ENDIF
	I = I+1
	IF ((ACTION.EQ.1.AND.I.LT.N).OR.ACTION.EQ.3) GOTO 10
	PVALUE = L				! return string length
C
20	IF (ACTION.EQ.3) PVALUE = I		! return number of strings
C
	CALL DCPSET(PTR)			! restore decoding
	ORIGTP = SAVORIG
	AUXTXB(1) = SAVTXB(1)
	AUXTXB(2) = SAVTXB(2)
	WINDEF = SAVWIN
C
999	RETURN
	END
