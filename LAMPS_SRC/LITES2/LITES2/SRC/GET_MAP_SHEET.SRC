C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1996-05-09 10:40:04.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
        LOGICAL FUNCTION GET_MAP_SHEET(STR,STRL,SCALE,POS)
C
***	MODULE GET_MAP_SHEET
***	IDENT 09MY96
C
C Copyright Laser-Scan Laboratories Ltd.,Cambridge,England
C 
C Author    Ron Russell				 24-Oct-1989
C
C This function returns a sheet name from a user supplied routines
C It returns .TRUE. for success
C
	IMPLICIT NONE
C
***	PARAMETER/CMN:EFNLUN/
***	PARAMETER/CMN:MOANMESS/
C
	INCLUDE	'($SSDEF)'
C
***	COMMON/CMN:MAPS/
***	COMMON/LSL$CMNIFF:MD2DES/
***	COMMON/CMN:SHEET/
***	COMMON/CMN:TRANSFORM/
C
C arguments
C
C (input)
	INTEGER		SCALE		! scale passed to users routine
	REAL*8		POS(2)		! absolute position
C
C (output)
	CHARACTER*(*)	STR		! string returned
	INTEGER		STRL		! and its length
C
C functions
	LOGICAL		CALLR
	LOGICAL		SETUP_USER
	LOGICAL		GEOG_TRANS
	LOGICAL		TRNALL
	LOGICAL		GET_SHEET_OSGB
C
C w/s
	REAL*8		GEOG(2)		! geographical position (as degrees)
	REAL*8		TEMP
C
C assume failure
	GET_MAP_SHEET=.FALSE.
C
C check if logical name has been set up.
	IF (TRNALL(MAP_SHEET_LOG_NAME,TEMP).EQ.SS$_NOLOGNAM) THEN
C
C if not, use internal routine
	   GET_MAP_SHEET = GET_SHEET_OSGB(STR,STRL,SCALE,POS)
	   GOTO 999
	ENDIF
C
C is shared image mapped yet?
	IF (.NOT.MAP_SHEET_SETUP) THEN
	   MAP_SHEET_SETUP = SETUP_USER(MAP_SHEET_LOG_NAME,
     &	                      MAP_SHEET_MAX_ROUTINES,
     &	                      MAP_SHEET_NAMES,MAP_SHEET_ADDRESSES,
     &	                      'MAP_SHEET routine',
     &	                      'user supplied routine to get sheet name',
     &	                      'VARIABLE SYSTEM MAP_SHEET',
     &	                      MAP_SHEET_MAPPED)
	   IF (.NOT.MAP_SHEET_SETUP) GOTO 999
	ENDIF
C
C if got routine that works on grid, then call that
	IF (MAP_SHEET_ADDRESSES(XGET_SHEET_GRID).GT.0) THEN
	   STRL = LEN(STR)
	   GET_MAP_SHEET =  CALLR(STR,STRL,SCALE,POS,
     &	               %VAL(MAP_SHEET_ADDRESSES(XGET_SHEET_GRID)))
C
C if got routine that works on geog, then get geographicals, and then
C call it
	ELSEIF (MAP_SHEET_ADDRESSES(XGET_SHEET_GEOG).GT.0) THEN
C
C note: outunit is in seconds
	   IF (GEOG_TRANS(POS,LITES2SYS, LITES2ZONE, 
     &	                  LITES2PAR, LITES2UNIT,
     &	                  GEOG,OUTSYS,OUTZONE,PAROUT,OUTUNIT)) THEN
C
C results come back as LONGITUDE LATITUDE - reverse them to LAT LONG (in secs)
	      TEMP = GEOG(1)/3600D0
	      GEOG(1) = GEOG(2)/3600D0
	      GEOG(2) = TEMP
C
C and call user written routine
	      STRL = LEN(STR)
	      GET_MAP_SHEET =  CALLR(STR,STRL,SCALE,GEOG,
     &	               %VAL(MAP_SHEET_ADDRESSES(XGET_SHEET_GEOG)))
	   ENDIF
	ELSE
	   CALL MOAN(MSG_NOSHEETROUTINE)
	ENDIF
C
  999	RETURN
   	END
