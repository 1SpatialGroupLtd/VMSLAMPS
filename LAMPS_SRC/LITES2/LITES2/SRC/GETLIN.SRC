	SUBROUTINE GETLIN	
C
***	IDENT	18MY94
***	MODULE	GETLIN
C
C	Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C	Created					RJH	25-JUL-1984
C
C Description
C
C    This subroutine is part of the LITES2 Command Interface, and its
C purpose is to set up the appropriate command decoding input buffer.
C
	IMPLICIT NONE
C
***     PARAMETER/CMN:CHARS/		! character constants
***	PARAMETER/CMN:EFNLUN/		! line input constants
C
***     COMMON/CMN:DIN/			! command decoding input
***     COMMON/CMN:DVAR/		! command decoding variables
***     COMMON/CMN:GLOBAL/		! global variables
***     COMMON/CMN:LVAR/		! line input variables
***	COMMON/LSL$CMNLSL:TXTC/
C
C Functions called
C
	INTEGER*4	READ_STRING	! see MAR:RDCH.MAR
C
C Local Variables
C
	INTEGER		LINFIL		! input line from command file ?
	LOGICAL		BLALIN		! no commands on input line ?
	LOGICAL		ENDFIL		! command file closed ?
C
C Get a new line from interactive devices, terminal or command file
C
100	BLALIN = .FALSE.
	CALL NEWLIN(LINFIL,ENDFIL)
C
C Check for errors
C
	IF (MOANED) THEN
	   IF (LINFIL) DNEW = .FALSE.	! try previously stacked line
	ELSE
C
C Check if end of file reached
C
	   IF (ENDFIL) THEN
	      DNEW = .FALSE.		! try previously stacked line
C
C Copy the line into the current input buffer, stripping off comments,
C and if the line is not blank, save its details on the stack
C
	   ELSE
	      CALL BSLN				! init. decoding pointer
	      DCHS(DTOP) = READ_STRING(DLINE(DTOP),CMT)	! copy line into
	      BLALIN = (DCHS(DTOP) .EQ. 0)		! check if blank
	      IF (.NOT. BLALIN) THEN
C
C if line is from a command file, then add command file arguments
	         IF (LINFIL) THEN
	            CALL PSHSTK(%LOC(DLINE(DTOP)),DCHS(DTOP),0,LINFIL,
     &				DFARG(1,DTOP).AND.65535,DFARG(1,DTOP))
	         ELSE
	            CALL PSHSTK(%LOC(DLINE(DTOP)),DCHS(DTOP),0,1,0,' ')
	         ENDIF
		 IF (MOANED) DNEW = .FALSE.	! try prev. stacked line
	      ENDIF
	   ENDIF
	ENDIF
C
C Repeat if the line was blank and no (severe) CTRL/C
C
	IF (BLALIN) THEN
	   IF (CTRLC.EQ.CTRLC_OFF) GOTO 100	! no CTRL/C at all
	   IF (CTRLC.EQ.CTRLC_BREAK) THEN	! not severe
	      CALL HADCTRLC			! so clear event flag
	      GOTO 100
	   ENDIF
	ENDIF
C
C Return
C
	RETURN
	END
