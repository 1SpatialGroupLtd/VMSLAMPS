	SUBROUTINE COLAPS(TYPE,COND)
C
***	MODULE	COLAPS
***	IDENT	21NO89
C
C Copyright Laser Scan Laboratories Ltd., Cambridge, England.
C Author  Paul Hardy, 24 February 1984
C
C LITES2 collapse handler
C
	IMPLICIT NONE
C
C argument
	INTEGER	TYPE	! collapse number
	INTEGER	COND	! condition that caused collapse (optional)
C
	INCLUDE 'sys$library:forsysdef($ssdef)'
	INCLUDE '($LIBDEF)'
	INCLUDE '($OTSDEF)'
	INCLUDE '($STRDEF)'
C
C functions
	LOGICAL		HAVE_I_AN_ARG
	INTEGER*4	LIB$MATCH_COND
C
C w/s
	INTEGER		I
	LOGICAL*1	DATEV(9), TIMEV(8) ! buffers for date and time
	LOGICAL		DEBUG
C
	CALL WRITEF
	CALL WRTVER			! announce version in use
	CALL WRITEF
	CALL DATE(DATEV)		! get date
	CALL TIME(TIMEV)		! and time
	DATEV(5) = DATEV(5)+32		! lowercase the second two
	DATEV(6) = DATEV(6)+32		! letters of the month
	CALL WRITEF('Collapse on %A9 at %A5', DATEV, TIMEV)
	CALL WRITEF
	CALL JPINFO			! info about process (user,etc)
	CALL WRITEF
C
C now the actual collapse
C
	CALL WRITEF('*** LITES2 collapse number %N',TYPE)
C
C do we want to go into debug, or must we exit?
	DEBUG = .TRUE.
	IF (HAVE_I_AN_ARG(2)) THEN
C
C at the momemt only look for insufficient virtual memory
	   I = LIB$MATCH_COND(COND,LIB$_INSVIRMEM,STR$_INSVIRMEM,
     &	                           OTS$_INSVIRMEM)
	   DEBUG = I.EQ.0
C
C and signal the error
	   CALL LITES2_SIGNAL(COND)
	ENDIF
C
	IF (DEBUG) THEN
	   CALL LIB$SIGNAL(%VAL(SS$_DEBUG))	! go into debug
	ELSE
	   CALL WRITEF
	   CALL WRITEF('Cannot continue - EXIT forced')
           CALL SYS$EXIT(%VAL(COND))
	ENDIF
C
	END
