	INTEGER FUNCTION EXPVAR(S,TYPE)
C
***	IDENT	20MR92
***	MODULE	EXPVAR
C
C	Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C	Created					CCB	 7-Jan-1986
C
C To expand the ASCII representation of the current variable.
C Returns number of characters expanded.
C CPYSTR will generate a MOAN if string overflows.
C
	IMPLICIT NONE
C
***	COMMON/LSL$CMNLSL:EXPC/
***	COMMON/CMN:VARIABLE/
C
C arguments
	CHARACTER*(*)	S		! value if string
	INTEGER		TYPE		! type of variable
C
C function called
	INTEGER		CPYSTR
C
C workspace
	INTEGER		N		! value if integer
	REAL		R		! value if real
	INTEGER		LEN		! length if string
	INTEGER		I
C
	CALL VALVAR(TYPE,N,R,S,LEN)
	GOTO (100,200,300,400),TYPE	! branch on type
	GOTO 999			! eh?
C
C Integer
100	CALL EXPAND('%^L%N',N)		! expand integer value
	EXPVAR = CPYSTR(EXPDSC,S)	! copy into return string
	GOTO 999
C
C Real
200	CALL EXPAND('%G0.8',R)		! expand real value
250	EXPVAR = CPYSTR(EXPDSC,S)	! copy into return string
C
C check for LSLLIB positive exponent e.g. 0.1E 012 and change the
C space into '+', so that string does not appear as 2 macro parameters
	I = INDEX(S(:EXPVAR),'E ')
	IF (I.NE.0) S(I+1:I+1) = '+'
	GOTO 999
C
C String (done already by VALVAR)
300	EXPVAR = LEN			! just return length
	GOTO 999
C
C Double
400	CALL EXPAND('%^D%G0.15',R)	! expand double value
	GOTO 250
C
999	RETURN
	END
