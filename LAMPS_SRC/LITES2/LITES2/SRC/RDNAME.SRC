C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1992-01-29 12:20:00.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE RDNAME(INDEX,STRNG)
C
***	IDENT	29JA92
***	MODULE	RDNAME
C
C	Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C	Created					RWR	 25-June-1990
C
C to return the index of the given command in the command table
C arguments in command table are ignored, and on commad are faulted
C
C this is a bit of an odd way to achieve this - it would be better if
C LSLLIB provided a way, but all it provides is RDCOMM
C
	IMPLICIT NONE
C
***	PARAMETER/CMN:MACMEN/
***	PARAMETER/CMN:MOANMESS/
***	PARAMETER/LSL$CMNLSL:LSLLIBMSG/
***	PARAMETER/LSL$CMNLSL:READSTR/
C
***     COMMON/LSL$CMNLSL:CMDCOM/	! CMDLIB command handling
***	COMMON/LSL$CMNLSL:EXCEPTION/
***	COMMON/CMN:MACRO/
***	COMMON/CMN:VARIABLE/
C
C Arguments
	INTEGER		INDEX		! index of command - 0 if not there
	CHARACTER*(*)	STRNG		! command
C
C functions
	INTEGER		RDCOMM
	LOGICAL		RDCHS
C
C Local Variables
	BYTE		CH
	INTEGER*2	PTR
	CHARACTER*(*)	TYPE		! type of table (for messages)
	PARAMETER	(TYPE = 'variable')
C
C set auxiliary buffer onto the string
	IF (LEN(STRNG).LE.0) THEN
	   INDEX = 0
	ELSE
	   CALL DCPSAV(PTR)			! save TXTBUF pointer
	   CALL SETAUX(%REF(STRNG),LEN(STRNG))
C
C Find variable number
	   INDEX = RDCOMM(%VAL(VARTAB_ADDRESS))
	   IF (INDEX.LE.0) THEN
C
C did we expect an argument?
	      IF (ERRNUM.EQ.LSL__UNEXPEOL) THEN
	         INDEX = -CMDNUM
C
C an unknown command is valid, other errors are not
	      ELSEIF (ERRNUM.NE.LSL__UNEXPCMD) THEN
	         INDEX = 0
	         CALL ERRCMD(TYPE)
	      ELSE
	         INDEX = 0
	      ENDIF
	   ELSE
C
C did we get an argument?
	      IF (CMDACT.GT.0) CALL MOAN(MSG_ARGNOTPERMIT,TYPE,CMDFST)
	   ENDIF
C
C check for nothing else on line
	   IF (.NOT. RDCHS(CH)) CALL MOAN(MSG_CMDLIBUXC,CH)
	   CALL BSLN				! restore TXTBUF
	   CALL DCPSET(PTR)
	ENDIF
C
	RETURN
	END
