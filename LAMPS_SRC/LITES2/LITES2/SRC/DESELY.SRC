C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1996-09-03 18:16:24.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE DESELY(SA,SLCT,SEL)
C
***	IDENT	03SE96
***	MODULE	DESELY
C
C	Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C	Created					RWR	 7-Nov-1984
C
C Description
C
C	LITES2 cartographic editor DESELECT LAYERS command.
C
C	This subroutine works with two bit maps. One is used to read
C	the selections, the other as a mask of the existing layers.
C
	IMPLICIT NONE
C
***     PARAMETER/CMN:MOANMESS/		! moan constants
C
***     COMMON/CMN:DOUT/		! command decoding output
***	COMMON/CMN:FCS/			! for bitmap arrays
***     COMMON/CMN:LAYERS/		! data about layers
***     COMMON/CMN:MASTER/
C
C Arguments
	LOGICAL*1	SA		! .TRUE. when all layers selected
	LOGICAL*1	SLCT		! .TRUE. in LAYER select mode
	LOGICAL*1	SEL(0:MAXLAY-1) ! true if layer selected
C
C Functions called
	LOGICAL		LIB$EXTV
C
C workspace
	INTEGER*4	LAYMAX		! maximum no of words in bitmap
	PARAMETER	(LAYMAX=TOPLAY/32+1)	! for layers
C
	INTEGER*4	I,J		! counters
	INTEGER*4	OFFSET,WORD	! variables to access bit maps
	INTEGER*4	IER		! for checking subroutine return
	LOGICAL		SOMSEL		! any alterations to make?
C
C Clear SELBUF and SELBUFA
	CALL VIOCLR(SELBUF,LAYMAX*4,0)
	CALL VIOCLR(SELBUFA,LAYMAX*4,0)
C
C Set up SELBUFA with existing layers
	DO 10, I=0,MAXLAY-1
	   J=OVNOS(I)
	   IF (J.LT.0) GOTO 10		! no more layers
	   WORD=J/32
	   OFFSET=J-WORD*32
	   CALL LIB$INSV(1,OFFSET,1,SELBUFA(WORD+1))
10	CONTINUE
C
C Read deselections from string passed in end of command line (in DOUT)
	CALL RDSEL(TOPLAY,DSTR(1:DSTRL),.FALSE.,LAYMAX,SELBUF,IER)
	IF (IER.LT.0) GOTO 1000		! illegal input
C
C Don't deselect maps that don't exist, and prepare a list of these
	SOMSEL=.FALSE.
	DO 30, I=1,LAYMAX
	   IF ((SELBUF(I).AND.SELBUFA(I)).NE.0) SOMSEL = .TRUE.
	   SELBUFA(I)=SELBUF(I).AND..NOT.SELBUFA(I)
30	CONTINUE
C
C Write out layers that were deselected, but have not been read in yet
	CALL DISPLBTMP(MSG_LAYSNTSEL,-1,MSG_STRING,TOPLAY,SELBUFA)
C
C if no layers to deselect, give up
	IF (.NOT.SOMSEL) GOTO 1000
C
C Make deselections
	SA=.FALSE.		! now layers are not all selected
	DO 40,  I=0,MAXLAY-1
	   J=OVNOS(I)
	   IF (J.LT.0) GOTO 40		! no more layers
	   IF (SEL(I)) THEN		! presently selected
	      WORD=J/32
	      OFFSET=J-WORD*32
	      IF (LIB$EXTV(OFFSET,1,SELBUF(WORD+1))) SEL(I) = .FALSE.
	   ENDIF
40	CONTINUE
C
C selections have been changed, and now we are in layer select mode
	CHASEL = .TRUE.
	SLCT=.TRUE.
C
1000	RETURN
	END
