	LOGICAL FUNCTION SUBSTX(S1,L1,S2,L2)
C
***	IDENT   02JN89
***	MODULE  SUBSTX
C
C	Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C	Written         			RWR	16-JAN-1984
C
C Description
C
C	LITES2 cartographic editor SUBSTITUTE TEXT routine.
C	Substitute string S2 length L2 for string S1 length L1 in text.
C
	IMPLICIT NONE
C
C Included Parameter Files
	INCLUDE	'LSL$CMNIFF:CB.STR'
***	PARAMETER/CMN:AUXDEF/
***	PARAMETER/CMN:CTXS/
***     PARAMETER/CMN:MOANMESS/
***	PARAMETER/CMN:PACK/
***	PARAMETER/CMN:STAPAR/
C
C Common Blocks
C
***	COMMON/CMN:CTXS/
***	COMMON/CMN:DEFINE/
***	COMMON/LSL$CMNFRT:FRTCOM/
***	COMMON/CMN:MODIFY/
***	COMMON/CMN:OIIH/
***	COMMON/CMN:STATE/
***	COMMON/CMN:STRIKE/
C
C arguments
C
	CHARACTER*(*)	S1,S2
	INTEGER		L1,L2
C
C functions called
C
	INTEGER		MINDEX
	LOGICAL		COIDLE		! get into MODIFY state
	INTEGER		STR$COMPARE_EQL
C
C working storage
C
	EXTERNAL	MOAN
C
	INTEGER		I
	INTEGER		END_POS
	INTEGER		ADDR		! address of current CTX
	INTEGER		STAADR,FINADR	! start and end addresses
C
C zero length dummy descriptor
	INTEGER		DESC(2)
	DATA		DESC/0,0/
C
C start of subroutine
C
	SUBSTX = .TRUE.			! assume failure
C
C get addresses of CTXs
C
	IF (SINDEX.EQ.STATE_TEXT) THEN	! look at whole of feature
	   STAADR = FTRCTXD(CTXD_FSTCTX)
	   FINADR = FTRCTXD(CTXD_LSTCTX)
	ELSEIF(SUBTXT) THEN
	   STAADR = COICTXD(CTXD_HOME)
	   FINADR = COICTXD(CTXD_HOME)
	ELSE
	   STAADR = COICTXD(CTXD_FSTCTX)
	   FINADR = COICTXD(CTXD_LSTCTX)
	ENDIF
C
C search for first string
C
	ADDR = STAADR
   10	CONTINUE
	IF (L1.EQ.0) THEN			! null string
	   I = 1				! matches at start
	ELSE
	   I = MINDEX(%VAL(ADDR+CTX_O_DESC),S1(1:L1))
	ENDIF
	IF (I.NE.0) THEN			! found substring
	   IF (SINDEX.EQ.STATE_TEXT) THEN
	      FTRCTXD(CTXD_HOME) = ADDR
	   ELSE
	      COICTXD(CTXD_HOME) = ADDR
	   ENDIF
	   GOTO 20
	ENDIF
C
C is there another CTX to try?
C
	IF (ADDR.EQ.FINADR) THEN		! not found anything
	   CALL MOAN(MSG_STRNOTFOUND,S1(1:L1))
	   GOTO 999
	ELSE
	   CALL PUTLNG(%VAL(ADDR+CTX_O_NXTPTR),ADDR)
	   GOTO 10
	ENDIF
C
   20	CONTINUE
C
C check for resultant zero length string
	IF (I.EQ.1.AND.L2.EQ.0.AND.
     &	    STR$COMPARE_EQL(%VAL(ADDR+CTX_O_DESC),S1(1:L1)).EQ.0) THEN
	   CALL MOAN(MSG_TEXTTOOSHORT)
	   GOTO 999
	ENDIF
C
C if not in MODIFY state, get into it
C
	IF (SINDEX.EQ.STATE_TEXT) THEN
	   IF (COIDLE(.TRUE.)) GOTO 999		! (deleting original)
	ENDIF
C
C replace old text with new 
C
	END_POS = I+L1-1
C
C if not null string being replaced
	IF (L2.GT.0) THEN
	   CALL STR$REPLACE(%VAL(COICTXD(CTXD_HOME)+CTX_O_DESC),! dest
     &	                 %VAL(COICTXD(CTXD_HOME)+CTX_O_DESC),	! src
     &	                 I,END_POS,
     &	                 S2(1:L2))		! replacement
	ELSE
	   CALL STR$REPLACE(%VAL(COICTXD(CTXD_HOME)+CTX_O_DESC),! dest
     &	                 %VAL(COICTXD(CTXD_HOME)+CTX_O_DESC),	! src
     &	                 I,END_POS,
     &	                 DESC)		! replacement
	ENDIF
C
C use concatenate, to avoid subrng
C
C this is now home CTX - load buffer, and COI variables
C
	COICTXD(CTXD_CUR) = COICTXD(CTXD_HOME)
	CALL THISCTX(COICTXD)
	CALL LOADCOI(.TRUE.)
C
C redraw new text next time RFDRAW is called and verify text on screen
C
	MODMOD=.TRUE.
	FLG_GEOCHANGE = .TRUE.			! geometrical change
C
	SUBSTX = .FALSE.			! success
999	CONTINUE
	RETURN
	END
