C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1993-08-23 10:56:48.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE DOMOVE
C
***	IDENT   23AU93
***	MODULE  DOMOVE
C
C	Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C	Written					RWR	7-Jan-1985
C
C Description
C
C	LITES2 cartographic editor MOVE command.
C
	IMPLICIT NONE
C
	INCLUDE	'LSL$CMNIFF:CB.STR'
***	PARAMETER/CMN:AUXDEF/
***	PARAMETER/CMN:END/		! possible values for NDMODE
***     PARAMETER/CMN:MOANMESS/         ! moan constants
***	PARAMETER/CMN:PACK/
***	PARAMETER/CMN:STAPAR/		! state constants
C
***	COMMON/CMN:DEFINE/
***	COMMON/LSL$CMNFRT:FRTCOM/
***	COMMON/CMN:MASTER/
***	COMMON/CMN:MODIFY/
***	COMMON/CMN:OIIH/		! current construction
***	COMMON/CMN:OPTION/
***	COMMON/CMN:RFCTRL/
***	COMMON/CMN:STATE/		! state variables
***	COMMON/CMN:STRIKE/
***	COMMON/CMN:VARIAT/
C
C Functions called
	LOGICAL		CHKPRT
	LOGICAL		COIDLE
C
C Local Variables
	REAL		DX,DY		! difference in X and Y
C
C If doing part feature operations and had OFFSET,
C TRANSFORM or FILTER  then moan
	IF ((SINDEX.EQ.STATE_ON) .AND. (CHOFF.OR.CHTRAN.OR.CHFILT)) THEN
	   CALL MOAN(MSG_ILLEGLCMDSEQ)
	   GO TO 998
	ENDIF
C
C If LINE state, or ON state and END_WHOLE, then take feature into hand
C and start to move it.
C If ON state and END_PART, then just remember MOVE command until END.
	IF (SINDEX.EQ.STATE_LINE.OR.SINDEX.EQ.STATE_CIRCLE
     &	         .OR.SINDEX.EQ.STATE_ON) THEN
	   IF (NDMODE.NE.END_PART) THEN
	      IF (CHKPRT(.TRUE.)) GOTO 998	! map read-only?
	      CALL HANDLE		! take feature into hand
	      CALL SETSTA(STATE_EDIT)	! EDIT state
	      NDMODE = END_WHOLE	! WHOLE feature operation
	      CHCSXY(1) = CSXY(1)	! save cursor position
	      CHCSXY(2) = CSXY(2)
	      CALL PUTLNG(CSXY(3),CHCSXY(3))
	   ENDIF
	   CHPOS = .TRUE.		! change position
	   GOTO 999
	ENDIF
C
C	if in TEXT or SYMBOL state, get into MODIFY state
C
	IF (SINDEX.EQ.STATE_SYMBOL.OR.SINDEX.EQ.STATE_TEXT) THEN
	   IF (COIDLE(.TRUE.)) GOTO 998	! map is read-only
	ENDIF
C
C here we are in MODIFY state
C
C zap rubber band lines
	RUBLIN(1) = .FALSE.
	RUBCHG = .TRUE.
C 
C compute relative alignment if required
C
	IF (COIPAK(PAKGT).EQ.SCATYP) THEN
	   DX=COIXY(1,3)-COIXY(1,2)
	   DY=COIXY(2,3)-COIXY(2,2)
	ENDIF
C
C  position cursor at origin of feature
C
	CSXY(1)=COIXY(1,2)
	CSXY(2)=COIXY(2,2)	
	IF (ZOPT) CALL GETZ(CSXY(3),COINATT,COIATTC,COIATTV(1,2))
	CSSTIL=.FALSE.
	FONLIN=.FALSE.
C
C apply relative alignment, if required
C
	IF (COIPAK(PAKGT).EQ.SCATYP) THEN
	   COIXY(1,3)=COIXY(1,2)+DX
	   COIXY(2,3)=COIXY(2,2)+DY
	ENDIF
C
C now expecting an END command
C
	IF (NDMODE.EQ.END_STRETCH) CALL FRECUR
	NDMODE=END_MOVE
C
C set flag to let MODCHK update any attributes
	FLG_MOD_MOVE = .TRUE.
C
C perhaps also checking for a far move
	IF (DEFINITION(P_FAR_MOVE) .NE. 0) THEN
	   CHCSXY(1) = CSXY(1)	! save cursor position
	   CHCSXY(2) = CSXY(2)
	   CALL PUTLNG(CSXY(3),CHCSXY(3))
	   FLG_MOD_FAR_MOVE = .TRUE.
	ENDIF
C
C set MODMOD for RFDRAW (may want to refresh differently when moving)
C
	MODMOD=.TRUE.
	FLG_GEOCHANGE = .TRUE.		! geometrical change
	GOTO 999
C
C error exit
998	CALL IGNCMD
C
999	RETURN
	END
