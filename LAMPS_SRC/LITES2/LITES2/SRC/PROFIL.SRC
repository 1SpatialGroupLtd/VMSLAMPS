C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1996-05-13 10:56:16.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE PROFIL
C
***	IDENT	13MY96
***	MODULE	PROFIL
C
C	Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C	Created					RJH	04-DEC-1984
C
C Description
C
C    This subroutine is part of the LITES2 Command Interface, and its
C purpose is to read and parse a filename command.
C
	IMPLICIT NONE
C
***     PARAMETER/CMN:CHARS/		! character constants
***     PARAMETER/CMN:MOANMESS/		! moan constants
***	PARAMETER/LSL$CMNLSL:READSTR/
C
***	COMMON/CMN:DFILRD/		! command filename details
C
C Local Parameters
C
	LOGICAL		VERNUM		! filename version numbers
	PARAMETER	(VERNUM=.TRUE.)	! allowed
C
C Functions called
C
	INTEGER*4	READSTR		! CMDLIB - reads string
	INTEGER		READ_STRING
	LOGICAL		RDCHS
	LOGICAL		PARFILN		! parses filename
C
C Local Variables
C
	INTEGER*4	STRLEN		! length of string to parse
	LOGICAL		ERROR		! error ?
	BYTE		CH
	CHARACTER*(NFM)	STR		! string to parse
C
C Initialisation
C
	STR = BLANK
C
C Read string from input line
C
	STRLEN = READSTR(STR,0,ON_SPACE,.TRUE.)
C
C Check if a string was found
C
	ERROR = ((STRLEN .EQ. 0) .OR. (STR .EQ. BLANK))
C
C If no string, output message, otherwise parse the string
C
	IF (ERROR) THEN
	   CALL MOAN(MSG_NOCMDFILE)
	ELSE
	   ERROR = PARFILN(COMFIL,LENFIL,STR,COMTEM,VERNUM)
	   IF (.NOT.ERROR) THEN
	      CALL MOAN(MSG_ERRFILENAME,'command')
	      CALL LITES2_SIGNAL(ERROR)
	   ELSE
	      COMARGL = 0
	      IF (.NOT.RDCHS(CH)) THEN
	         CALL BSCH
	         COMARGL = READ_STRING(COMARG,TERM)
	      ENDIF
	      NEWFIL = .TRUE.		! set flag
	   ENDIF
	ENDIF
C
	RETURN
	END
