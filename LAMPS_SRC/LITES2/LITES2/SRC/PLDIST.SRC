C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1985-05-08 10:57:24.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	REAL FUNCTION PLDIST(PT,LINE,WHERE)
C
***	IDENT	08MY85
***	MODULE	PLDIST
C
C	Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C	Created					RWR	 7-May-1985
C
C Description
C
C	Subroutine to return the shortest distance from a point to a
C	line.  If this distance is the perpendicular from the point to
C	the line WHERE is set to 0; if it is the distance to the first
C	point of the line WHERE is set to 1 and if to the second point
C	of the line, 2.
C
C	For a line K,L and a point J:
C
C	t=-[(xK-xJ)*(xL-xK)+(yK-yJ)*(yL-yK)]/((xL-xK)**2+(yL-yK )**2)
C	
C	If t is in the range 0 - 1, the perpendicular from the point
C	to the line, cuts the line between K and L.  If t < 0, then it 
C	passes the line at the K end, and if t > 1 at the L end.
C
C	If t is truncated to the range 0 - 1, then the formula
C
C	R=SQRT([(xK-xJ)+t*(xL-xK)]**2+[yK-yJ)+t*(yL-yK)]**2)
C
C	gives the distance in all three cases.
C
	IMPLICIT NONE
C
C Arguments
C
	REAL	PT(2)		! coords of point
	REAL	LINE(2,2)	! coords of end of vector
	INTEGER	WHERE		! where shortest distance is to
				! = 0;  between end of lines
				! = 1;  to first point of line
				! = 2;  to second point of line
C
C Local Variables
C
	REAL	DLINEX,DLINEY	! x & y difference in line
	REAL	DPTLNX,DPTLNY	! x & y differecne between point
				! and start of line
	REAL	T		! ratio in which normal cuts line (qv)
	REAL	DENOM		! temporary
C
C Start of subroutine
C
	DLINEX=LINE(1,2)-LINE(1,1)
	DLINEY=LINE(2,2)-LINE(2,1)
	DPTLNX=LINE(1,1)-PT(1)
	DPTLNY=LINE(2,1)-PT(2)
C
C case when two end of line are coincident
C
	IF (DLINEX.EQ.0.0.AND.DLINEY.EQ.0.0) THEN
	   WHERE=1
	   PLDIST=SQRT(DPTLNX**2+DPTLNY**2)
	ELSE
	   DENOM=DLINEX**2+DLINEY**2
	   T=-(DPTLNX*DLINEX+DPTLNY*DLINEY)/DENOM
	   IF (T.LT.0.0) THEN
	      WHERE=1			! nearest 1st point of line
	      T=0.0
	   ELSEIF (T.GT.1.0) THEN
	      WHERE=2			! nearest 2nd point of line
	      T=1.0
	   ELSE
	      WHERE=0			! in between
	   ENDIF
	   PLDIST=SQRT((DPTLNX+T*DLINEX)**2+(DPTLNY+T*DLINEY)**2)
	ENDIF
C
	RETURN
	END
