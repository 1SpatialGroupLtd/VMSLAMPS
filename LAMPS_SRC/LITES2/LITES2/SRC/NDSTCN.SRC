C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1992-03-02 12:59:08.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL FUNCTION NDSTCN(FINAL)
C
***	IDENT	02MR92
***	MODULE	NDSTCN
C
C	Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C	Created					RWR	21-Dec-1984
C
C Function to deposit the symbol/text currently held in COIxxx
C variables in IFF file and sectors
C
	IMPLICIT NONE
C
	INCLUDE	'LSL$CMNIFF:CB.STR'
***	PARAMETER/CMN:ACS/
***	PARAMETER/CMN:CTXS/
***	PARAMETER/CMN:AUXDEF/
***	PARAMETER/CMN:EFNLUN/
***	PARAMETER/CMN:GKSPAR/
***	PARAMETER/CMN:MOANMESS/
***	PARAMETER/CMN:PACK/
***     PARAMETER/CMN:STAPAR/
C
***	COMMON/CMN:ACS/
***	COMMON/CMN:CTXS/
***	COMMON/CMN:ATTBTS/
***	COMMON/CMN:CSTRCT/
***	COMMON/CMN:DRAWIN/
***	COMMON/LSL$CMNFRT:FRTCOM/
***	COMMON/CMN:MAPS/
***	COMMON/CMN:MODIFY/
***	COMMON/CMN:OIIH/
***     COMMON/CMN:STATE/		! state variables
***	COMMON/CMN:STRIKE/
C argument
	LOGICAL		FINAL		! true if object to be dropped
					! after being deposited
C
C Functions called
	LOGICAL		STRTFT
	INTEGER		GENNF
C
C Local Variables
	INTEGER*4	SAVIND		! saved value of COIIND
	INTEGER*4	SAVNATT		! saved value of COINATT		
	INTEGER		I
	INTEGER		TEMPFC
C
	NDSTCN=.FALSE.			! assume success
C
C check for output map read only
	IF (MAPRO(COIPAK(PAKMAP))) THEN
	   CALL MOAN(MSG_MAPREADONLY,COIPAK(PAKMAP)+1)
	   CALL LEARN(MSG_CHMAP)
	   NDSTCN=.TRUE.
	   GOTO 900
	ENDIF
C
C generate an FSN, if there is no old one to use
	IF (COIPAK(PAKFSN).LT.0.OR..NOT. FINAL) THEN
	   IF (NEWFEAT.AND.FINAL.AND.CONFSN.NE.0) THEN
	      COIPAK(PAKFSN) = CONFSN		! from SET FSN
	   ELSE
	      COIPAK(PAKFSN) = GENNF(COIPAK)
	   ENDIF
	ENDIF
C
C update maximum NF for map (if GENNF used, then will have been done
C already, but no harm to do again)
	IF (COIPAK(PAKFSN).GT.MAXNF(COIPAK(PAKMAP)))
     &			MAXNF(COIPAK(PAKMAP)) = COIPAK(PAKFSN)
C
C for texts, use COIFC as the first word of the FS entry,
C but first see if single text component has same TS entry as COIFC
C If not, make COIFC the same
	IF (COIPAK(PAKGT).EQ.TEXTYP) THEN
C
C If single TS is different from FC, alter the feature code
	   IF (COICTXD(CTXD_NCTX).EQ.1) THEN
	      CALL PUTLNG(%VAL(COICTXD(CTXD_FSTCTX)+CTX_O_TS),TEMPFC)
	      IF (COIFC.NE.TEMPFC) THEN
	         CALL INFORM(MSG_ALTEREDFC,COIFC,TEMPFC)
	         COIFC = TEMPFC
	      ENDIF
	   ENDIF
C
	   CONFS(1) = COIFC
	ENDIF
C
C for texts with only one text component, make sure that CONFS is same
C as TS entry
	IF (COIPAK(PAKGT).EQ.TEXTYP.AND.COICTXD(CTXD_NCTX).EQ.1) THEN
C
C ensure that CTXBUF is loaded with single text component
C
	   CURCTX = -1
	   COICTXD(CTXD_CUR) = COICTXD(CTXD_FSTCTX)
	   CALL THISCTX(COICTXD)
	   DO 100, I=1,3
	      CONFS(I+1) = CTXBUFW(CTX_W_TS1 + I)
100	   CONTINUE
	ENDIF
C
C at the moment, alignments are only used for scaled symbols. All
C other features are output with one coordinate and an angle.
C This is the way the information is stored internally.
	IF (COIPAK(PAKGT).EQ.ORITYP.OR.COIPAK(PAKGT).EQ.TEXTYP) THEN
	   COIIND=2			! ie one point
	   HADRO=.TRUE.
	ENDIF
C
C start feature, but first remember how many coordinates there are
C as STRTFT overwrites this. Also count of attributes (what about 
C overflow flag COIOVR ?)
	SAVIND=COIIND
	SAVNATT = COINATT
	IF (STRTFT(IHPAK,CONTC,CONFS,CONAC,CONTH)) THEN
	   NDSTCN=.TRUE.
C
C output rest of feature
	ELSE
C
C delete original segment of feature if MODIFY rather than COPY
	   IF (DELOIH.AND.FINAL) CALL LDSG(IHPAK,.TRUE.) ! del original
	   IF (FINAL) CALL DELPACKCTXD(.TRUE.)	! any joined features
C
	   COIIND=SAVIND
	   COINATT = SAVNATT
	   IF (COIPAK(PAKGT).EQ.TEXTYP) THEN
	      CALL PUTCTX(COICTXD)
	   ELSE
	      COMTXT = .FALSE.
	      CALL FLUSH(2)
	   ENDIF
C
C if feature not yet drawn, draw it now
C create segment and draw it (if not done already)
	   IF (.NOT.OIDRAW) THEN
	      IF (COILST.NE.0) THEN	! feature not deleted by FLUSH
	         CALL LCRSG(COIPAK)
	         IF (IAND(COIPAK(PAKFLG),LIMFLG).NE.0)
     &					CALL LSVIS(COIPAK,GINVIS)
	         CALL DRAFTR(COIPAK)
	         CALL LCLSG
	      ENDIF
	      OIDRAW = .TRUE.
	   ENDIF
C
	   MODMOD=.TRUE.	! altered feature being modified	
C
C delete original feature if MODIFY rather than COPY
	   IF (DELOIH.AND.FINAL) CALL DELFT(IHPAK,IHEF)	! del original
	   IF (FINAL) CALL DELPACKCTXD(.FALSE.) ! any joined features
C
C update os map header?  (COIFS has been set by STRTFT)
	   IF (OS_MH_EDIT) CALL OS_MH_UPDATE(COIPAK,COIFS)
	ENDIF
C
900	RETURN
	END
