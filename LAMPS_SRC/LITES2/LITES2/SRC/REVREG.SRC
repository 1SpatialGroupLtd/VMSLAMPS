	LOGICAL FUNCTION REVREG(REG)
C
***	IDENT	20MR90
***	MODULE	REVREG
C
C	Copyright LaserScan Laboratories Ltd., Cambridge, England
C
C to reverse the order of the edges of a region
C Returns .TRUE. for failure
C
C Author R.W. Russell			20-March-1990
C
	IMPLICIT	NONE
C
C arguments (input)
C
	INTEGER*4	REG		! region to list
C
***	PARAMETER/CMN:MOANMESS/
***	PARAMETER/CMN:REGPAR/
C
***	COMMON/CMN:REGCMN/
C
C functions
C
	LOGICAL		ADDPPT
C
C local workspace
C
	INTEGER		CURPPT		! address of current PPT
	INTEGER		TEMPPPT
C
	REVREG = .TRUE.
C
C check for valid region
	IF (.NOT.REGDEF(REG)) GOTO 1000
C
C make sure back pointer in first PPT is null
	CALL PUTLNG(0,%VAL(REGPTR(1,REG)+OFFPREV))	! no back pointer
	CURPPT = REGPTR(3,REG)			   ! first PPT of new region
C
C make the region empty (ie, only one PPt in it)
	REGPTR(1,REG) = REGPTR(2,REG)
	CALL PUTLNG(0,%VAL(REGPTR(1,REG)+OFFPREV))	! no back pointer
	REGPTR(3,REG) = 0
C
100	CONTINUE
	IF (ADDPPT(%VAL(CURPPT+OFFX),REG)) GOTO 1000
	IF (CURPPT.EQ.REG_PPT_FLAG) REG_PPT_FLAG = REGPTR(3,REG)
	CALL PUTLNG(%VAL(CURPPT+OFFPREV),TEMPPPT)
	CALL FREE_MEM(REG_ZONE,CURPPT,PPTLEN)
	IF (TEMPPPT.GT.0) THEN
	   CURPPT = TEMPPPT
	   GOTO 100
	ENDIF
C
900	CONTINUE
C
	REGAREA(REG) = -REGAREA(REG)
	REVREG = .FALSE.		! success
C
1000	CONTINUE
	RETURN
	END

