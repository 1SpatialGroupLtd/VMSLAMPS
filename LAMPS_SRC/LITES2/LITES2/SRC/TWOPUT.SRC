C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1987-10-12 13:56:30.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE TWOPUT(STRDSC)
C
***	IDENT   12OC87
***	MODULE  TWOPUT
C
C	Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C	Written					PGH	 14-DEC-1984
C
C	LITES2 cartographic editor terminal output routine
C	OTERM in /GLOBAL/ should be set to indicate whether SYS$OUPUT
C	is a terminal.
C
	IMPLICIT NONE
C
	INTEGER*4	STRDSC(2)	! string descriptor
C
***	PARAMETER/CMN:EFNLUN/
C
***	COMMON/CMN:GLOBAL/
***	COMMON/CMN:WORKS/
C
	INCLUDE	'($IODEF)'
C
C functions called
	INTEGER*4	LIB$PUT_OUTPUT
	INTEGER*4	SYS$ASSIGN
	INTEGER*4	SYS$QIOW
C
C local variables
	INTEGER*4	IERR		! system error code
	INTEGER		LENGTH		! length of string
	INTEGER*4	CCLONG		! carriage control longword
	LOGICAL*1	CCBYTE(4)	! same as bytes
	EQUIVALENCE	(CCLONG,CCBYTE)
C
C If this is first call then assign channel
	IF (.NOT.TTOINI) THEN
	   IF (OTERM) THEN		! is a terminal
	      IERR = SYS$ASSIGN('SYS$OUTPUT',TTOCHN,,)
	      IF (.NOT.IERR) THEN
	         CALL LIB$SIGNAL(%VAL(IERR))	! can't WRITEF!
	         GOTO 999
	      ENDIF
	   ENDIF
	   TTOINI = .TRUE.
	ENDIF
C
C if a terminal, do fancy carriage control stuff
	IF (OTERM) THEN
C
C set up carriage control
C
C If not input or output since last prompt, then newline before output,
C otherwise just a cr before.
C Normal output has newline after
C Prompt has nothing after
C Bell has no carriage controls at all
C
	   LENGTH = STRDSC(1).AND.65535
	   CCLONG = 0
	   IF (.NOT.TTOBEL) THEN
	      IF (TTODON.OR.TTIDON) THEN
	         CCBYTE(3) = 141		! cr before
	      ELSE
	         CCBYTE(3) = 1			! newline before
	      ENDIF
	      IF (TTOPRO) THEN
	         TTOCUR = LENGTH		! new cursor position
	      ELSE
	         CCBYTE(4) = 1			! newline after
	         TTOCUR = 0
	      ENDIF
	   ENDIF
C
C do the write
C
	   IERR = SYS$QIOW(	%VAL(TTOEFN),		! efn
     &			   	%VAL(TTOCHN),		! channel
     &				%VAL(IO$_WRITEVBLK),	! functions
     &				,			! iosb
     &				,			! astadr
     &				,			! astprm
     &				%VAL(STRDSC(2)),	! p1 =buffer
     &				%VAL(LENGTH),		! p2 = size
     &				,			! p3 = unused
     &				%VAL(CCLONG),		! p4 = car. ctrl
     &				,			! p5 = unused
     &				)			! p6 = unused
C
	   IF (.NOT.IERR) CALL LIB$SIGNAL(%VAL(IERR))	! can't WRITEF!
	ELSE
C
C not a terminal
	   IF (.NOT.(TTOBEL.OR.TTOPRO))	THEN	! no bell or prompt
	      IERR = LIB$PUT_OUTPUT(STRDSC)
	      IF (.NOT.IERR) CALL LIB$SIGNAL(%VAL(IERR))! can't WRITEF!
	   ENDIF
	ENDIF
C
C set flags for prompts
C TTODON set false if this is a prompt, otherwise true
C TTIDON set false if this is a prompt
	IF (.NOT.TTOBEL) THEN
	   TTODON = .NOT.TTOPRO
	   IF (TTOPRO) TTIDON = .FALSE.
	   TTOPRO = .FALSE.		! prompt is a one shot
	ENDIF
C
999	RETURN
	END
