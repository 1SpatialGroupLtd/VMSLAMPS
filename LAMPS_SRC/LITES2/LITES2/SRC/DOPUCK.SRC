C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1994-05-25 15:04:08.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE DOPUCK
C
***	IDENT	25MY94
***	MODULE	DOPUCK
C
C	Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C	Created					RWR	14-Dec-1984
C
C	LITES2 cartographic editor PUCK command.
C
	IMPLICIT NONE
C
***     PARAMETER/CMN:MACMEN/		! macros, menus and puck buttons
C
***	COMMON/CMN:MACRO/		! data about macros
C
C this is a jacket routine that calls the real routine with the address
C of two arrays, to make accessing these arrays in the real routine
C easier
C
	CALL PUCK(%VAL(MACDSL_ADDR),%VAL(MANDSL_ADDR))
C
	RETURN
	END


	SUBROUTINE PUCK(MACDSL,MANDSL)
C
***	IDENT	07FE92
***	MODULE	PUCK
C
C	Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C	Created					RWR	14-Dec-1984
C
C	LITES2 cartographic editor PUCK command.
C
	IMPLICIT NONE
C
***     PARAMETER/CMN:MACMEN/		! macros, menus and puck buttons
***     PARAMETER/CMN:MOANMESS/		! moan constants
***	PARAMETER/CMN:STAPAR/
C
***     COMMON/CMN:DOUT/		! command decoding output
***     COMMON/CMN:DVAR/
***	COMMON/CMN:MACRO/		! data about macros
***	COMMON/CMN:MENUS/		! data about menus and puck
***	COMMON/CMN:STATE/
***	COMMON/CMN:WORKS/		! data about workstations
C
C arguments
	INTEGER*4	MACDSL(2,*)
	INTEGER*4	MANDSL(2,*)
C
C Functions called
	LOGICAL		INIMEN		! initialises menu macros
C
C Local Variables
	INTEGER*4	I		! counter
C
C check length of string
	IF (DSTRL.LT.1.OR.DSTRL.GT.MNNLEN) THEN
	   CALL MOAN(MSG_TOOLONGMENNAM,MNNLEN)
	   GOTO 998
	ENDIF
C
C check if puck already defined for this device
	DO 10, I=1,PUKTOP
	   IF (DINTS(1).EQ.PUKDEV(I)) THEN
	      CALL MOAN(MSG_PUKALDEF,PUKNAM(I)(1:PUKLEN(I)),PUKDEV(I))
	      GOTO 998
	   ENDIF
10	CONTINUE
C
C check if there is space for this puck
	IF (PUKTOP.EQ.MAXPUK) THEN
	   CALL MOAN(MSG_TOOMANYPUK,MAXPUK)
	   GOTO 998
	ENDIF
C
C check for sensible number of buttons
	IF (DINTS(2).LT.1) THEN
	   CALL MOAN(MSG_ILLEGLNOBOXES)
	   GOTO 998
	ENDIF
C
C check for too many buttons
	IF (DINTS(2)+FREBAS.GT.MAXPTR) THEN
	   CALL MOAN(MSG_TOOMANYBOXES,MAXPTR-FREBAS)
	   CALL LEARN(MSG_INCREASEMAX,'menu squares',MAXMENUSQU_LOG_NAME)
	   GOTO 998
	ENDIF
C
C if DSTR is not in macro command table and it is a valid macro
C name, then add it
	IF (INIMEN(.FALSE.)) GOTO 998
C
C set up other data for this puck
	PUKTOP=PUKTOP+1
	MNPTOP=MNPTOP+1				! to access MENINF
C
C in common /MACRO/
C
C initialise dynamic descriptors
	DO 20 I=1,DINTS(2)
	   CALL INIDSC(MACDSL(1,I+FREBAS))
	   CALL INIDSC(MANDSL(1,I+FREBAS))
	   CALL LIB$INSV((DENC.GT.0),I+FREBAS-1,1,%VAL(MACENC_ADDR))
20	CONTINUE
C
	MENINF(PTSIZE,MNPTOP)=DINTS(2)		! number of ptrs used in
						! this puck
	MENINF(PTBASE,MNPTOP)=FREBAS		! base for this puck in
						! list of pointers
	PUKBAS(PUKTOP)=FREBAS			! copy for TRNTIP
	FREBAS=FREBAS+DINTS(2)			! new base of free space
						! in list of pointers
C
C now data about puck
	PUKBUT(PUKTOP)=DINTS(2)			! total number of
						! buttons
	PUKNAM(PUKTOP)=DSTR(1:DSTRL)		! name of puck
	PUKLEN(PUKTOP)=DSTRL			! length of name
	PUKDEV(PUKTOP)=DINTS(1)			! device puck is on
	GOTO 999
C
998	CALL IGNCMD
999	RETURN
	END
