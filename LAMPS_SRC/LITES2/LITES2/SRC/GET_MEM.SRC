C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1989-10-13 16:36:20.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL FUNCTION GET_MEM(ZONE,ADDR,LENGTH)
C
***	IDENT	13OC89
***	MODULE	GET_MEM
C
C Copyright Laser-Scan Laboratories Ltd., Cambridge, England
C
C Author Ron Russell					10-Oct-1989
C
C To get a portion of memory a specified number of bytes long
C Returns .TRUE. if fails, or .FALSE. if succeeds.
C
	IMPLICIT NONE
C
***	PARAMETER/CMN:MOANMESS/
C
C argument
C
	INTEGER*4	ZONE		! zone to get memory from
	INTEGER*4	ADDR		! to return address in
	INTEGER*4	LENGTH		! number of bytes to get
C
C function called
C
	INTEGER*4	LIB$GET_VM
C
C workspace
C
	INTEGER*4	COND
C
C Obtain piece of memory
	COND = LIB$GET_VM(LENGTH,ADDR,ZONE)
C
	IF (.NOT.COND) THEN		! failed
	   CALL NASTY(MSG_INSVIRMEM)
	   CALL LITES2_SIGNAL(COND)
	   GET_MEM = .TRUE.
	ELSE				! success
C
	   GET_MEM = .FALSE.		! succeeded
	ENDIF
C
	RETURN
	END
