C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1984-12-03 17:06:06.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL FUNCTION SPECH(TESTCH)
C
***	IDENT	03DE84
***	MODULE	SPECH
C
C	Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C	Created					RJH	20-NOV-1984
C
C Description
C
C    This function is part of the LITES2 Command Interface, and its
C purpose is to check the next character on the current line. If the
C next character is the one given, the command decoding pointer is
C left at its position after reading, otherwise it is reset to its
C position on entry to the function.
C    The function takes the value true if the character is found.
C
	IMPLICIT NONE
C
C Included Parameter Files
C
***     PARAMETER/CMN:CHARS/		! character constants
C
C Arguments
C
	BYTE		TESTCH		! character to test
C
C Functions called
C
	LOGICAL		RDCHS		! VIOLIB - reads a character
C
C Local variables
C
	INTEGER*4	BEGPTR		! ptr. to start of command
	LOGICAL		EOLN		! end of line ?
	LOGICAL		FOUND		! found the character ?
	BYTE		NXTCH		! next character
C
C Start of Function
C
	CALL DCPSAV(BEGPTR)		! save pointer
	EOLN = RDCHS(NXTCH)		! get next non-space/no-tab char
	FOUND = (NXTCH .EQ. TESTCH)	! test it
	IF (.NOT. FOUND) CALL DCPSET(BEGPTR)	! back to start
C
C Assign function value
C
	SPECH = FOUND
C
C Return
C
	RETURN
	END
