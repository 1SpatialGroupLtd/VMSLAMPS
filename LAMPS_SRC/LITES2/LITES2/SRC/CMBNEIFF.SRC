	SUBROUTINE CMBNEIFF(ILUN,OLUN,MAP)
C
***	IDENT   12JA96
***	MODULE  CMBNEIFF
C
C	Copyright Laser-Scan Ltd., Cambridge, England.
C
C	Written					RWR	4-DEC-1989
C
C	Adds all entries at OVERLAY level and below in Input file
C	to Output file (correcting coordinates by OFFSET)
C
	IMPLICIT NONE
C
C arguments
	INTEGER		ILUN,OLUN	! IFF luns for two files
	INTEGER		MAP		! map number (-1 = don't know)
C
C NOTE: when doing projection changes on the fly, the projection
C for the input file should have been set up in the CURR_ variables
C by the calling routine. In this case we always output to LITES2
C coordinate space
C
	INCLUDE	'LSL$CMNIFF:CB.STR'
***	PARAMETER/CMN:AUXDEF/
***	PARAMETER/CMN:EFNLUN/
***	PARAMETER/CMN:MOANMESS/		! moan constants
***	PARAMETER/CMN:PACK/
C
***	COMMON/CMN:CB/
***	COMMON/CMN:CNSTRN/
***	COMMON/CMN:DRAWIN/
***	COMMON/LSL$CMNIFF:IFFHAN/
***	COMMON/LSL$CMNIFF:IFFSTR/
***	COMMON/CMN:MAPS/
***	COMMON/CMN:STRIKE/
C
C functions called
	LOGICAL		GEOG_TRANS_ARRAY
C
C w/s
	INTEGER*2	IECODE,IELEN	! IFF entry info
	INTEGER*2	LAYNO
	INTEGER*4	LNOPOS
	INTEGER*4	NFPTR		! pointer to start of feature
	INTEGER*4	FSN
	INTEGER*2	ISQ
	LOGICAL		ISRELEVANT
	INTEGER		PACK(PAKLEN)	/PAKLEN*0/
C
	PACK(PAKMAP) = MAP
	FSN = 0				! zero longword FSN
C
C Skip to first NO
C
	CALL IFFSEL(ILUN)
	CALL IFFRWD
	CALL IFFNXC('NO',IELEN)		! get to first NO
	IF (IELEN.EQ.-1) THEN
	   CALL NASTY(MSG_IFFPOSNO)	! error in positioning to NO
	   CALL COLAPS(MSG_IFFPOSNO)
	   GOTO 999			! give up
	ENDIF
	GOTO 500			! NO entry
C
C loop through all entries
10	CALL IFFNXT(IECODE,IELEN)
	IF (IELEN.EQ.-1) THEN
	   CALL NASTY(MSG_UNEXPEIFF)
	   CALL COLAPS(MSG_UNEXPEIFF)
	   GOTO 999
	ENDIF
C
C deal separately with the entries we are interested in, and copy
C everthing else.
	IF (IECODE.EQ.'NF') GOTO 300
	IF (IECODE.EQ.'NO') GOTO 500
	IF (IECODE.EQ.'EO') GOTO 550
	IF (IECODE.EQ.'VO') GOTO 10
	IF (IECODE.EQ.'EM') GOTO 999
C
C anything we are not interested in we just copy
	IF (NFPTR.EQ.0) THEN		! nothing yet this feature
	   CALL IFFSEL(OLUN)
	   NFPTR = LPOSE		! remember start of feature
	   CALL IFFSEL(ILUN)
	ENDIF
C
	CALL EIHCPY(OLUN)
	GOTO 10
C
C*************************************************************
C
C NF entry - read and write the NF
C
300	CALL EIHRI(FSN,1,1)
	PACK(PAKFSN) = FSN
C
C NB - only map and FSN are filled in the PACK
C (hopefully all that the relevant routine is interested in)
C This is the only selection performed in this routine - all
C the others are done when reprocessed with TDYIFF.
	IF (SELOUT.AND.RELVNTAD.NE.0) THEN
	   CALL CALLR(PACK,ISRELEVANT,%VAL(RELVNTAD))
	   IF (.NOT.ISRELEVANT) GOTO 320
	ENDIF
	CALL IFFSEL(OLUN)
	IF (NFPTR.EQ.0) NFPTR = LPOSE	! remember start of feature
	ISQ=0
	CALL IFFNF(FSN,ISQ)
	CALL IFFSEL(ILUN)
C
C now loop round all entries within the feature, copying all that
C is not to be transformed
C
310	CALL IFFNXT(IECODE,IELEN)
	IF (IELEN.EQ.-1) THEN
	   CALL NASTY(MSG_UNEXPEIFF)
	   CALL COLAPS(MSG_UNEXPEIFF)
	   GOTO 999
	ENDIF
C
	IF (IECODE.EQ.'CB') GOTO 350
	IF (IECODE.EQ.'EF') GOTO 450
	IF (IECODE.EQ.'VO') GOTO 310
C
	CALL EIHCPY(OLUN)
	GOTO 310
C
C throw feature away
320	CALL IFFNXC('EF',IELEN)		! skip what remains on input
	CALL IFFSEL(OLUN)
	IF (NFPTR.NE.0) CALL IFFUPP(0,LPOSM,LPOSH,NFPTR)! zap output
	NFPTR = 0			! not in a feature now
	CALL IFFSEL(ILUN)
	GOTO 10
C
C --------------------------------------------------------------
C CB entry - transform each pair of coords
C
350	CALL EIHRCB_HEAD(CBH)
	CALL EIHRCB_DATA(CBD)
	IF (USE_ORG .OR. DO_FLY_TRANS) THEN
	   CALL IFS_CB_READ(CBH,CBD,RIXY,2,COLHXY,1,CBH.NROW)
	   IF (DO_FLY_TRANS) THEN
	      IF (.NOT.GEOG_TRANS_ARRAY(CURR_SYS,CURR_ZONE,
     &	                            CURR_PARAMS,CURR_UNIT,CURR_ORG,
     &	                            LITES2SYS,LITES2ZONE,LITES2PAR,
     &	                            LITES2UNIT,LITES2ORG,
     &	                            CBH.NROW,RIXY)) GOTO 310
	   ELSE
	      CALL ADDORG(ORGXY,RIXY,CBH.NROW)
	   ENDIF
	   CALL IFS_CB_WRITE(CBH,CBD,RIXY,2,COLHXY,1,CBH.NROW)
	ENDIF
C
C write it out
	CALL IFFSEL(OLUN)
	CALL IFFCB(CBH,CBD)
	CALL IFFSEL(ILUN)
	GOTO 310
C
C ---------------------------------------------------------------
C EF entry
450	CALL IFFSEL(OLUN)
	CALL IFFEF
	NFPTR = 0			! not in a feature now
	CALL IFFSEL(ILUN)
	GOTO 10				! end of feature and inner loop
C
C --------------------------------------------------------------
C NO entry
500	CALL EIHRI(LAYNO,1,1)
	CALL IFFSEL(OLUN)
	LNOPOS=LPOSE
	CALL IFFNO(LAYNO,0,0)
	CALL IFFSEL(ILUN)
	NFPTR = 0			! no current feature
	GOTO 10
C
C------------------------------------------------------------------
C
C EO entry
550	CALL IFFSEL(OLUN)
	CALL IFFUNO(LNOPOS)
	CALL IFFEO
	CALL IFFSEL(ILUN)
	GOTO 10
C
C --------------------------------------------------------------

999	RETURN
	END
