C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1996-05-10 17:10:00.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE DOPROJ
C
***	IDENT	10MY96
***	MODULE  DOPROJ
C
C	Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C	Written					RWR	1-Feb-1993
C
C Description
C
C	LITES2 cartographic editor PROJECTION command.
C
	IMPLICIT NONE
C
***	PARAMETER/CMN:EFNLUN/
***	PARAMETER/CMN:MOANMESS/
***	PARAMETER/CMN:STAPAR/
C
***	COMMON/CMN:DOUT/
***	COMMON/CMN:FILES/		! filename details
***	COMMON/CMN:GLOBAL/
***	COMMON/LSL$CMNIFF:IFFHAN/	! IFF library interface
***	COMMON/CMN:MAPS/
***	COMMON/LSL$CMNIFF:MD2DES/
***	COMMON/CMN:STATE/
***	COMMON/CMN:TRANSFORM/
C
	EXTERNAL	MOAN,NASTY
	EXTERNAL 	PROJECTION_OUTPUT_CMD_TABLE
	EXTERNAL 	PROJECTION_RANGE_CMD_TABLE
C
C functions
	LOGICAL		PARFILN		! parses a filename
	LOGICAL		CALLR
	LOGICAL		SETUP_GEOG
C
C working storage
	INTEGER*4	RETCOD		! file parse return code
	INTEGER*2	IELEN		! for reading from IFF
C
C Despatch according to secondary command
	GOTO ( 100, 200, 300), DSECN
C
C Secondary command number out of range
	CALL MSGCMD(NASTY,MSG_ERRSECIND)
	GOTO 9998
C
C Secondary command FILE
C
100	CONTINUE
C
C must be in initial state
	IF (SINDEX .NE. STATE_INITIAL ) THEN
	   CALL MSGCMD(MOAN,MSG_CMDNOTVALID)
	   GOTO 9998
	ENDIF
C
C if no file name is given, then get out of this mode
	IF (DSTRL .LE. 0) THEN
	   DO_FLY_TRANS = .FALSE.
	   MD_OK = .FALSE.
	   GEOG_INI = .FALSE.
 	   GOTO 9999
	ENDIF
C
C with file name, open the IFF file for read, and read the map
C descriptor
C
C Parse IFF filename
	RETCOD = PARFILN(DSTR,DSTRL,DSTR(:DSTRL),IFFTEM//';0',.TRUE.) 
	IF (.NOT.RETCOD) THEN
	   CALL MOAN(MSG_ERRFILENAME,'IFF')
	   CALL LITES2_SIGNAL(RETCOD)
	   GOTO 9998
	ENDIF
C
C Open IFF file
	CALL IFFOPN(INLUN,DSTR(:DSTRL),0)	! read only
	IF (IERCD .NE. 0) THEN
	   CALL MOAN(MSG_IFFOPEN,0,DSTR(:DSTRL))
	   GOTO 9998
	ENDIF
C
C read the map descriptor
	CALL IFFNXC('MD',IELEN)
	IF (IELEN.EQ.-1) THEN
	   CALL MOAN(MSG_MISSENT,'MD')
	   CALL IFFCLO(INLUN)
	   GOTO 9998
	ENDIF
C
	IF (IELEN.EQ.MD2LEN) THEN
	   CALL EIHRI(MD2ARR,MD2LEN,1)
	ELSE
	   CALL MOAN(MSG_NOMDSETUP)
	   CALL IFFCLO(INLUN)
	   GOTO 9998
	ENDIF
C
C is map descriptor set?
	IF (MATV2.NE.2.OR.MD2PRJ.EQ.0) THEN
	   CALL MOAN(MSG_NOMDSETUP)
	   CALL IFFCLO(INLUN)
	   GOTO 9998
	ENDIF
C
C close the file
	CALL IFFCLO(INLUN)
C
C is shared image mapped yet?
	IF (.NOT.GEOG_SETUP) GEOG_SETUP = SETUP_GEOG()
C
	IF (.NOT.GEOG_SETUP) GOTO 9998
C
C initialise the parameters that specify the characteristics of
C the LITES2 coordinate space
C
	CALL CALLR(MD2ARR,LITES2SYS,LITES2ZONE,LITES2PAR,LITES2UNIT,
     &	           %VAL(GEOG_ADDRESSES(XGCTP_PARINIT)))
C
C remember this map descriptor
	CALL CPYPAK(MD2LEN/2,MD2ARR,FIRSTMD2ARR)
C
C and some parts out of it
	FIRSTSPH = MD2SPH
	FIRSTUSP(1) = MD2USP(1)
	FIRSTUSP(2) = MD2USP(2)
	FIRSTPRJ = MD2PRJ
	FIRSTUNT = MD2UNT
C
C get the scale and the origin for LITES2 coordinate space
	LITES2SCL    = MD2SCL
C 
	GEOG_INI = .TRUE.
	MD_OK = .TRUE.
C
C we are now doing transformations on the fly
C
	DO_FLY_TRANS = .TRUE.

	GOTO 9999
C
C secondary command OUTPUT - find out if it is ON or OFF
C
200	CONTINUE
	CALL GET_COMMAND(DSTR(:DSTRL),PROJECTION_OUTPUT_CMD_TABLE)
	IF (MOANED) GOTO 9998
	IF (DPRIN.GT.2) THEN	! Tertiary command number out of range
	   CALL MSGCMD(NASTY,MSG_ERRTERIND)
	   GOTO 9998
	ENDIF
	PROJ_TRANS_OUTPUT = (DPRIN .EQ. 1)
	GOTO 9999
C
C
C secondary command RANGE - find out what kind of range calculations to do
C
300	CONTINUE
	CALL GET_COMMAND(DSTR(:DSTRL),PROJECTION_RANGE_CMD_TABLE)
	IF (MOANED) GOTO 9998
	IF (DPRIN .EQ. 1) THEN
	   RANGE_TRANS_TYPE = RANGE_TRANS_CORNER
	ELSEIF (DPRIN .EQ. 2) THEN
	   RANGE_TRANS_TYPE = RANGE_TRANS_SIDE
	   IF (DNINT .EQ. 1) THEN
	      IF (DINTS(1).LE.0) THEN
	         CALL MOAN(MSG_NEGARGS)
	      ELSE
	         RANGE_SIDE_POINTS = DINTS(1)
	      ENDIF
	   ENDIF
	ELSEIF (DPRIN .EQ. 3) THEN
	   RANGE_TRANS_TYPE = RANGE_TRANS_DATA
	ELSE			! Tertiary command number out of range
	   CALL MSGCMD(NASTY,MSG_ERRTERIND)
	   GOTO 9998
	ENDIF
	GOTO 9999
C
9998	CALL IGNCMD
C
9999	RETURN
	END

