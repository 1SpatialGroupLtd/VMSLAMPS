C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1989-10-05 16:55:56.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL FUNCTION REG_BOX(REG)
C
***	IDENT   05OC89
***	MODULE  REG_BOX
C
C	Copyright Laser-Scan Ltd., Cambridge, England.
C
C	Created					RWR	 12-Jul-1989
C
C generate a region that is a box around the featue
C returns FALSE for success
C
	IMPLICIT NONE
C
	INCLUDE	'LSL$CMNIFF:CB.STR'
***	PARAMETER/CMN:MOANMESS/
***	PARAMETER/CMN:STAPAR/
***	PARAMETER/CMN:AUXDEF/
***	PARAMETER/CMN:PACK/
C
***	COMMON/CMN:OIIH/
***	COMMON/CMN:STATE/
***	COMMON/CMN:STRIKE/
C
C argument
	INTEGER		REG		! region to create
C
C Local Variables
C
	REAL		CRNRS(4)
	REAL		XY(2)
	INTEGER		I
	REAL		X(4),Y(4)
	REAL		HEIGHT,LENGTH
C
C functions
	LOGICAL		ADDPPT		! add a PPT
C
C assume failure
	REG_BOX = .TRUE.
C
C check for modify state, with no found object, in which case use
C box around feature being modified
	IF (SINDEX.EQ.STATE_MODIFY.AND..NOT.FO) THEN
	   LENGTH=COIAUX(MAXXI)-COIAUX(MINXI)
	   HEIGHT=COIAUX(MAXYI)-COIAUX(MINYI)
	   X(1)=COIXY(1,2) + COIAUX(MINXI)*COIAUX(COSI)-
     &	                     COIAUX(MINYI)*COIAUX(SINI)
	   Y(1)=COIXY(2,2) + COIAUX(MINXI)*COIAUX(SINI)+
     &	                     COIAUX(MINYI)*COIAUX(COSI)
	   X(2)=X(1)+COIAUX(COSI)*LENGTH
	   Y(2)=Y(1)+COIAUX(SINI)*LENGTH
	   X(3)=X(2)-COIAUX(SINI)*HEIGHT
	   Y(3)=Y(2)+COIAUX(COSI)*HEIGHT
	   X(4)=X(1)-COIAUX(SINI)*HEIGHT
	   Y(4)=Y(1)+COIAUX(COSI)*HEIGHT
C
	   CRNRS(1) = X(1)
	   CRNRS(2) = X(1)
	   CRNRS(3) = Y(1)
	   CRNRS(4) = Y(1)
C
	   DO 10, I=2,4
	      CRNRS(1) = MIN(CRNRS(1),X(I))
	      CRNRS(2) = MAX(CRNRS(2),X(I))
	      CRNRS(3) = MIN(CRNRS(3),Y(I))
	      CRNRS(4) = MAX(CRNRS(4),Y(I))
10	   CONTINUE
C
C else must have found object
	ELSEIF (.NOT.FO) THEN
	   CALL MOAN(MSG_NOFEATURE)
	   GOTO 900  
	ELSE
	   CALL LITES2_BOX(CRNRS)
	ENDIF
C
C ll corner
	XY(1) = CRNRS(1)
	XY(2) = CRNRS(3)
	IF (ADDPPT(XY,REG)) GOTO 900
C
C ul corner
	XY(2) = CRNRS(4)
	IF (ADDPPT(XY,REG)) GOTO 900
C
C ur corner
	XY(1) = CRNRS(2)
	IF (ADDPPT(XY,REG)) GOTO 900
C
C lr corner
	XY(2) = CRNRS(3)
	IF (ADDPPT(XY,REG)) GOTO 900
C
C success
	REG_BOX = .FALSE.
	GOTO 900	
C
900	RETURN
	END
