C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1993-06-01 14:05:06.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL FUNCTION NDWIND
C
***     IDENT   01JN93
***     MODULE  NDWIND
C
C       Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C       Written                                 CCB	19-Jan-1988
C
C	LITES2 cartographic editor END WINDOW routine
C	Returns FALSE if successful
C
        IMPLICIT NONE
C
***	PARAMETER/CMN:MOANMESS/
C
***	COMMON/CMN:DRAWIN/
***	COMMON/CMN:MASTER/
***	COMMON/CMN:OPTION/
***	COMMON/CMN:RFCTRL/
***	COMMON/CMN:SETUP/
***	COMMON/CMN:WORKS/
C
C function called
	LOGICAL		NDREGI
C
C w/s
	REAL		ZEROWIN
	INTEGER		I
C
	NDWIND = .TRUE.			! assume failure
	GOTO (2010,2020,2030),NDMODE
C
C unknown END mode
	CALL NASTY(MSG_BADNDMODE)
	GOTO 9800
C
C NDMODE=1 (MAP), NDMODE=2 (SCREEN)
2010	CONTINUE
2020	CONTINUE
C
C set up value to be considered as zero
C
	ZEROWIN=MAX(ABS(LIMITS(2)-LIMITS(1)),ABS(LIMITS(4)-LIMITS(3)))
	ZEROWIN=ZEROWIN*1E-6		! surely nobody wants a window
					! smaller than this
C
C
C if box not valid, then re-draw either screen as now (SCREEN), or
C whole map (MAP)
C and if got a stored image window (and its WINDOW SCREEN), then set
C that as the new WINDOW
	IF (WINXY(1).GE.CSXY(1) .OR. WINXY(2).GE.CSXY(2) ) THEN
	   IF (SETUP.AND.HADIMG.AND.NDMODE.EQ.2) CALL CPYPAK(
     &						4,WINIMG,WINDOW)
	   IF (NDMODE.EQ.1) HADIMG = .FALSE.	! zap saved image window
	ELSE
C
C adjust window to same aspect ratio as screen
	   IF (.NOT.NODISP) THEN
	      I = 1			! assume primary
	      IF (WKAC(2).AND.(.NOT.WKAC(1).OR.WKSUPP(1))) I = 2
C
C don't try to produce a silly small window
	      IF (CSXY(1)-WINXY(1).LE.ZEROWIN .OR.
     &		  CSXY(2)-WINXY(2).LE.ZEROWIN) THEN
	         CALL MOAN(MSG_WINTOOSMALL)
	         CALL LEARN(MSG_SELARGWIN)
	         GOTO 9800
	      ENDIF
C
C NB use WINDOW as temporary
	      WINDOW(1) = CSXY(1)-WINXY(1)
	      WINDOW(2) = CSXY(2)-WINXY(2)
C
	      IF (.NOT.NAROPT) THEN	! NARROW - accept window shape
	         WINDOW(3) = SCRNSY(I)/SCRNSX(I)
	         IF (WINDOW(2)/WINDOW(1).GT.WINDOW(3)) THEN
	            CSXY(1) = WINXY(1)+WINDOW(2)/WINDOW(3)
	         ELSE
	            CSXY(2) = WINXY(2)+WINDOW(1)*WINDOW(3)
	         ENDIF
	      ENDIF
	   ENDIF
	   WINDOW(1) = MAX(LIMITS(1),WINXY(1))
	   WINDOW(2) = MIN(LIMITS(2),CSXY(1))
	   WINDOW(3) = MAX(LIMITS(3),WINXY(2))
	   WINDOW(4) = MIN(LIMITS(4),CSXY(2))
	   HADIMG = .FALSE.		! zap saved image window
	ENDIF
C
C get rid of cursor and refresh box
	CURS = .FALSE.
	RUBLIN(1) = .FALSE.
	RUBCHG = .TRUE.
	CALL RFDRAW
C
C redraw picture
	CALL FLVIEW
C
C set ready to re-intialise cursor
	INTCUR = .FALSE.
	CURS = .TRUE.
	NDMODE = 0			! so that ABAWIN works
	NDWIND = .FALSE.		! success
	GOTO 9800
C
C NDMODE=3 (REGION)
2030	NDWIND = NDREGI()
	GOTO 9800
C
9800	RETURN
	END
