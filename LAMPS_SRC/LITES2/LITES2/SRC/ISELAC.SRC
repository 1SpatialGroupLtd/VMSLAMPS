	LOGICAL FUNCTION ISELAC
C
***	IDENT	14SE89
***	MODULE	ISELAC
C
C	Copyright LaserScan Laboratories Ltd., Cambridge, England
C
C True if feature satisfies AC selection criteria
C Called with IFF file positioned on the FS entry
C
C Author Clarke Brunt				8-Jun-1988
C
	IMPLICIT	NONE
C
***	PARAMETER/CMN:ACS/
***	PARAMETER/CMN:MOANMESS/
C
***	COMMON/CMN:ACSEL/
***	COMMON/LSL$CMNFRT:FRTACD/
C
C workspace
	STRUCTURE /ACR/
	   INTEGER*2		TYPE
	   INTEGER*4		VAL
	   CHARACTER*(ACMAX)	T
	END STRUCTURE
	RECORD/ACR/	ACR
C
	INTEGER	GROUP,AC
	INTEGER*2 IECODE,IELEN
	INTEGER	ACTYPE
	INTEGER	L
	LOGICAL*1 OK(MAX_ACSEL,MAX_ACGROUP)
	INTEGER	LOC
C
C functions
	INTEGER	FNDAC
	LOGICAL	TSTAC
	LOGICAL	RDLONG
C
	ISELAC = .FALSE.			! assume not selected
C
C Clear array of logicals for each selection
	CALL VIOCLR(OK,MAX_ACGROUP*MAX_ACSEL,0)
C	
C scan for ACs
10	CALL IFFNXT(IECODE,IELEN)
	IF (IELEN.EQ.-1) THEN
	   CALL NASTY(MSG_UNEXPEIFF)
	   CALL COLAPS(MSG_UNEXPEIFF)
	   GOTO 999
	ENDIF
	IF (IECODE.EQ.'VO') GOTO 10	! ignore voids
	IF (IECODE.NE.'AC') GOTO 30	! no more ACs
C
	L = MIN(IELEN,3+(ACMAX+1)/2)	! length of text part
	CALL EIHR(ACR,L,1)	! read whole AC
	ACTYPE = ACR.TYPE.AND.'FFFF'X! convert type to unsigned long
	L = (L-3)*2			! bytes
	IF (L.GT.0) THEN
	   IF (ICHAR(ACR.T(L:L)).EQ.0) L = L-1
	   CALL STR$UPCASE(ACR.T(:L),ACR.T(:L))
	ENDIF
C
C for each AC selection group
	DO 25 GROUP=1,MAX_ACGROUP
	   AC = FNDAC(NACSEL(GROUP),ACSEL(1,GROUP),ACTYPE)
	   IF (AC.EQ.0) GOTO 25		! nothing for this AC type
	   IF (.NOT.ACSEL(AC,GROUP).PRES) THEN	! wanted absent
	      OK(AC,GROUP) = .TRUE.		! mark had one
	      GOTO 25
	   ENDIF
	   CALL ACDFND(ACTYPE,.FALSE.)	! look up type in FRT
	   IF (.NOT.TSTAC(ACSEL(AC,GROUP),ACR.VAL,ACD_DATA_TYPE)
     &						) GOTO 25	! reject
	   OK(AC,GROUP) = .TRUE.		! this selection OK
C
C check the text if required
20	   AC = AC+1
	   IF (AC.GT.NACSEL(GROUP)) GOTO 25
	   IF (ACSEL(AC,GROUP).TYPE.NE.ACTYPE) GOTO 25
C
C look up selected string in AC text
	   LOC = 1			! assume match at first character
	   IF (ACSEL(AC,GROUP).TXTL.GT.0) THEN
	      IF (L.EQ.0) THEN
	         LOC = 0		! no match
	      ELSE
	         LOC = INDEX(ACR.T(:L),
     &			ACSEL(AC,GROUP).TXT(:ACSEL(AC,GROUP).TXTL))
	      ENDIF
	   ENDIF
	   IF ((LOC.NE.0).NEQV.(ACSEL(AC,GROUP).PRES)) THEN
	      IF (LOC.NE.0) OK(AC,GROUP) = .TRUE.
	      GOTO 25
	   ENDIF
	   IF (LOC.NE.0) THEN		! text was found
C
C is the value after the text relevant?
	      IF (ACSEL(AC,GROUP).SLCT) THEN	! yes
	         CALL SETAUX(%REF(ACR.T),L)
	         CALL SETWIN(LOC+ACSEL(AC,GROUP).TXTL,)
	         IF (RDLONG(ACR.VAL)) GOTO 25	! reject
	         IF (.NOT.TSTAC(ACSEL(AC,GROUP),ACR.VAL,ACD_DATATYPE_I)
     &						) GOTO 25 ! reject
	      ENDIF
	      OK(AC,GROUP) = .TRUE.	! this selection OK
	   ENDIF
	   GOTO 20			! try next text selection
25	CONTINUE
	GOTO 10				! try next AC from IFF file
C
C check that at least one group is satisfied
30	DO 40 GROUP=1,MAX_ACGROUP
C
C groups with no selections are not relevant
	   IF (NACSEL(GROUP).GT.0) THEN
	      DO 35 AC=1,NACSEL(GROUP)
C
C check for unsatified selection
	         IF (OK(AC,GROUP).NEQV.ACSEL(AC,GROUP).PRES) GOTO 40
35	      CONTINUE
	      GOTO 50		! this group OK so skip the rest
	   ENDIF
40	CONTINUE
	GOTO 999
C
50	ISELAC = .TRUE.			! selected
C
999	RETURN
	END
