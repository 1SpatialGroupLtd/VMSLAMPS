C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1988-01-04 13:20:38.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
        LOGICAL FUNCTION ADDDEF(LIST,TYPE,VALUE,ADDED)
C
***     IDENT   04JA88
***     MODULE  ADDDEF
C
C       Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C       Written                                 RWR	4-Dec-1987
C
C	function to add a value to a list of definitions. If there
C	is already a definition with the specified type on the list,
C	then the new value overwrites the old one
C	Returns TRUE for success, and FALSE when collapsed
C
        IMPLICIT NONE
C
***	COMMON/CMN:DEFINE/
C
C arguments
	INTEGER		LIST		! the header of the list
	INTEGER		TYPE		! the attribute type
	INTEGER		VALUE		! the value to add
	LOGICAL		ADDED		! a new definition has been added
					! false when old one overwritten
C
C functions
	LOGICAL		GETDEF
C
C w/s
C
	INTEGER		ADDR		! address of definition	
	INTEGER		NXTADDR		! address of next definition
	INTEGER		CURRTYPE	! type of current definition
	INTEGER		TEMP		! address of new definition (PPT)
C
	ADDDEF = .TRUE.
	ADDED  = .FALSE.
C
C get start of relevant linked list
	ADDR    = %LOC(LIST)
	NXTADDR = ADDR
C
10	CONTINUE
	IF (NXTADDR.LE.0) THEN			! at end of list
	   IF (GETDEF(TEMP)) THEN		! collapsed
	      ADDDEF = .FALSE.
	      GOTO 999
	   ENDIF
C
C fill up this definition
	   CALL PUTLNG(TYPE,%VAL(TEMP+DEF_TYP))
	   CALL PUTLNG(VALUE,%VAL(TEMP+DEF_VALUE))
C
C and put at end of list
	   CALL PUTLNG(0,%VAL(TEMP))
	   CALL PUTLNG(TEMP,%VAL(ADDR))
	   ADDED = .TRUE.
	   GOTO 999
	ENDIF
C
C get type of this definition
	CALL PUTLNG(%VAL(NXTADDR+DEF_TYP),CURRTYPE)
C
C if this is the one that we are looking for, then overwrite it
	IF (CURRTYPE.EQ.TYPE) THEN
	   CALL PUTLNG(VALUE,%VAL(NXTADDR+DEF_VALUE))
	   GOTO 999
	ENDIF
C
C try next definition
	ADDR = NXTADDR
	CALL PUTLNG(%VAL(NXTADDR),NXTADDR)
	GOTO 10
C
999	CONTINUE
        RETURN
        END
