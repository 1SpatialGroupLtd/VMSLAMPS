C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1993-07-20 16:32:16.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE SHIMAG
C
***	IDENT	20JL93
***	MODULE	SHIMAG
C
C	Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C	Created					CCB	11-Mar-1988
C
C	LITES2 cartographic editor SHOW IMAGES command.
C
	IMPLICIT NONE
C
***     PARAMETER/LSL$CMNDTI:DTIPAR/
***     PARAMETER/CMN:MOANMESS/		! moan constants
***	PARAMETER/CMN:STAPAR/
C
***     COMMON/CMN:DOUT/
***     COMMON/CMN:DRAWIN/
***     COMMON/CMN:IMAGE/
***     COMMON/CMN:STATE/
C
C functions
	INTEGER	SIGCHS
C
C workspace
	INTEGER	I,L,B,E
	INTEGER	FIRST,LAST
	LOGICAL	EXIST,HAD_EDIT
	CHARACTER*12 SEL
	DATA	SEL/' (selected) '/
	CHARACTER*2 COR(0:3)
	DATA	COR/'SW','NW','NE','SE'/
	INTEGER	DIR
	CHARACTER*5 TYPE(-1:0)
	DATA	TYPE/'Area','Point'/
	CHARACTER*13 EDIT(-1:0)
	DATA	EDIT/'Open for edit','Read only'/
	INTEGER	LENGTH
	INTEGER	DUMMY
	REAL	SCFRT
C
	FIRST = 1
	LAST = MAXIMAGE
	IF (DNINT.EQ.1) THEN		! argument given
	   IF (DINTS(1).LE.0.OR.DINTS(1).GT.MAXIMAGE) THEN
	      CALL MOAN(MSG_IMAGRNG,1,MAXIMAGE)
	      GOTO 9990
	   ENDIF
C
	   IF (IMAGE_TYPE(DINTS(1)).EQ.0) THEN
	      CALL MOAN(MSG_IMNOTEXIST,DINTS(1))
	      GOTO 9990
	   ENDIF
C
	   FIRST = DINTS(1)
	   LAST = DINTS(1)
	ELSE
	   CALL SHSEIM(0)		! show IMAGE SELECTions
	   CALL INFORM(MSG_BLANK)
	ENDIF
C
	EXIST = .FALSE.
	HAD_EDIT = .FALSE.
	DO 10 I=FIRST,LAST
	   IF (IMAGE_TYPE(I).EQ.0) GOTO 10	! doesn't exist
	   EXIST = .TRUE.
	   L = 1
	   IF (IMAGE_CURRENT.EQ.I) L = LEN(SEL)
	   E = SIGCHS(EDIT(IMAGE_EDIT(I)))
	   CALL INFORM(MSG_IMAGE1,I,SEL(:L),IMAGE_TYPES(IMAGE_TYPE(I)),
     &				IMAGNAM(I)(:SIGCHS(IMAGNAM(I))),
     &				EDIT(IMAGE_EDIT(I))(:E))
	   CALL INFORM(MSG_IMAGE2,IMAGE_COLUMNS(I),IMAGE_ROWS(I))
	   L = SIGCHS(TYPE(IMAGE_AREA(I)))
	   CALL INFORM(MSG_IMAGE3,TYPE(IMAGE_AREA(I))(:L),
     &			IMAGE_UORIGIN(1,I),IMAGE_UORIGIN(2,I),
     &			IMAGE_PIXELSIZE(1,I),IMAGE_PIXELSIZE(2,I))
	   DIR = 0
	   IF (IMAGE_DIRECTION(I).EQ.DTI_ORDER_ANTICLOCKWISE) DIR='ANTI'
	   CALL INFORM(MSG_IMAGE4,
     &	   	IMAGE_BASE(I),IMAGE_NUMBER(I),COR(IMAGE_CORNER(I)),DIR)
	   IF (IMAGE_EDIT(I)) THEN
	      HAD_EDIT = .TRUE.
	      CALL EXPAND('Using IMAGE SUBSAMPLE ')
	      IF (IMAGE_SUBPRI(I)) THEN
	         CALL APPEND('PRIORITY %N',IMAGE_PRIVAL(I))
	      ELSE
	         CALL APPEND('FAST')
	      ENDIF
	      CALL TTWLIN
	      CALL WRITEF('IMAGE FOREGROUND %N, BACKGROUND %N',
     &			IMAGE_FORE(I),IMAGE_BACK(I))
	   ENDIF
	   CALL EXPAND('Range %G0.7 %G0.7',
     &		IMAGE_RANGE(1,I),IMAGE_RANGE(2,I))
	   IF (IMAGE_CLASSIFY(I)) CALL APPEND(
     &		'  Step %G0.7  First colour %N',
     &		IMAGE_STEP(I),IMAGE_FIRST(I))
	   CALL TTWLIN
	   IF (IMAGE_CLASSIFY(I)) THEN
	      DO 5 B=1,IMAGE_NBAND(I)
	         CALL STR$ANALYZE_SDESC(IMAGE_BANDSTR(1,B,I),LENGTH,DUMMY)
	         CALL EXPAND('Band %G0.7',IMAGE_BAND(1,B,I))
	         IF (IMAGE_BAND(1,B,I).NE.IMAGE_BAND(2,B,I)) THEN
	            CALL APPEND(' to %G0.7',IMAGE_BAND(2,B,I))
	         ENDIF
	         CALL APPEND(', colour %N',IMAGE_BANDCOL(B,I))
	         IF (LENGTH.GT.0) THEN
	            CALL APPEND(' -- %S',IMAGE_BANDSTR(1,B,I) )
	         ENDIF
	         CALL TTWLIN
5	      CONTINUE
	   ENDIF
	   CALL INFORM(MSG_BLANK)
10	CONTINUE
	IF (HAD_EDIT) THEN
	   SCFRT = 1
	   IF (SINDEX.NE.STATE_INITIAL) SCFRT = SCLFRT
	   CALL EXPAND('IMAGE BRUSH ')
	   IF (IMAGE_BRUSH_CIRCLE) THEN
	      CALL APPEND(
     &	'circular, diameter %G0.5 (mms) %G0.5 (IFF units)',
     &	IMAGE_BRUSH_SIZE(1),IMAGE_BRUSH_SIZE(1)*SCFRT)
	   ELSE
	      CALL APPEND(
     &	'rectangular, size %G0.5x%G0.5 (mms) %G0.5x%G0.5 (IFF units)',
     &	IMAGE_BRUSH_SIZE(1),IMAGE_BRUSH_SIZE(2),
     &	IMAGE_BRUSH_SIZE(1)*SCFRT,IMAGE_BRUSH_SIZE(2)*SCFRT)
	   ENDIF
	   CALL TTWLIN
	   CALL EXPAND('Image pixels connect ')
	   IF (IMAGE_CONNECT_DIAG) THEN
	      CALL APPEND('diagonally and')
	   ELSE
	      CALL APPEND('only')
	   ENDIF
	   CALL APPEND(' by their sides')
	   CALL TTWLIN
	   CALL INFORM(MSG_BLANK)
	ENDIF
	IF (.NOT.EXIST) CALL INFORM(MSG_NOIMAGES)
	GOTO 9999
C
9990	CALL IGNCMD
9999	RETURN
	END
