C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1989-10-11 17:01:48.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE SHBASE
C
***	MODULE	SHBASE
***	IDENT	11OC89
C
C Copyright Laser Scan Laboratories Ltd., Cambridge, England
C
C Written					RWR	14-Mar-l985
C
C to show the bases that have been set up
C
	IMPLICIT NONE
C
***	PARAMETER/CMN:CONSTS/
***	PARAMETER/CMN:MOANMESS/
C
***	COMMON/CMN:D14IFC/
***	COMMON/CMN:EDGE/
***	COMMON/CMN:ORIENT/
C
C w/s
C
	INTEGER		I
	REAL		DX,DY,ANGLE
C
C
	IF (.NOT.BASESQ.AND..NOT.BASEDG.AND..NOT.BASORI) THEN
	   CALL MOAN(MSG_NOBASEDEF)
	ELSE
	   IF (BASESQ) THEN
	      CALL INFORM(MSG_BLANK)
	      DO 10, I=1,BASNUM
	         DY=BASEND(2,I)-BASSTR(2,I)
	         DX=BASEND(1,I)-BASSTR(1,I)
	         ANGLE=ATAN2(DY,DX)
	         IF (ANGLE.LT.0.0) ANGLE=ANGLE+TWOPI
	         ANGLE=ANGLE/PI*180		! convert to degrees
	         CALL INFORM(MSG_REPBASE,I,ANGLE)	! report
   10	      CONTINUE
	   ENDIF
C
	   IF (BASEDG) THEN
	      DY=EDGLNE(2,2)-EDGLNE(2,1)
	      DX=EDGLNE(1,2)-EDGLNE(1,1)
	      ANGLE=ATAN2(DY,DX)
	      IF (ANGLE.LT.0.0) ANGLE=ANGLE+TWOPI
	      ANGLE=ANGLE/PI*180		! convert to degrees
	      CALL INFORM(MSG_BLANK)
	      CALL INFORM(MSG_BASEMSG,'Edgematching',ANGLE)  ! report
	   ENDIF
C
	   IF (BASORI) THEN
	      DY=ORIBAS(2,2)-ORIBAS(2,1)
	      DX=ORIBAS(1,2)-ORIBAS(1,1)
	      ANGLE=ATAN2(DY,DX)
	      IF (ANGLE.LT.0.0) ANGLE=ANGLE+TWOPI
	      ANGLE=ANGLE/PI*180		! convert to degrees
	      CALL INFORM(MSG_BLANK)
	      CALL INFORM(MSG_BASEMSG,'Orienting',ANGLE)   ! report
	   ENDIF
	ENDIF
C
	RETURN
	END
