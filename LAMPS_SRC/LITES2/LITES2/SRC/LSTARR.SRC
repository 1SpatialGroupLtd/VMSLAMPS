	SUBROUTINE LSTARR(LIST,NUM,ATT,VAL,ADD)
C
***	IDENT	22DE88
***	MODULE	LSTARR
C
C	Copyright Laser-Scan Laboratories Ltd., Cambridge, England
C
C to copy list of definitions into attribute arrays
C
C Author R.W. Russell			 10-Dec-1987
C
	IMPLICIT	NONE
C
	INCLUDE	'LSL$CMNIFF:CB.STR'
***	PARAMETER/CMN:MOANMESS/
C
***	COMMON/CMN:DEFINE/
***	COMMON/CMN:MASTER/
C
C Allow 19 attributes, so that they will overflow (and produece a
C message) when they are written
	INTEGER		MAXATT
	PARAMETER	(MAXATT = IFF_MAXCBCOL - 2 + 1)
C
C arguments
C (in)
	INTEGER*4	LIST	! head of definition to copy from
C (out)
	INTEGER*4	NUM	! number of attributes
	INTEGER*4	ATT(MAXATT) ! array of attributes
	INTEGER*4	VAL(MAXATT) ! array of values
	LOGICAL		ADD	! when true, add list to existing array
				! if existing value is not on
				! PRIVILEGED POINT list
C
C w/s
	INTEGER		ADDR
	INTEGER		I
	INTEGER		CURTYP
	INTEGER		CURVAL
C
C function
	LOGICAL 	CHK_PRIV_LIST
C
C initialise search of list
	ADDR = LIST
C
	IF (.NOT.ADD) THEN	! initialise array
	   NUM = 0
C
10	   CONTINUE
	   IF (ADDR.EQ.0) GOTO 999	! finished
	   IF (NUM.EQ.MAXATT) THEN
	      GOTO 999
	   ENDIF
	   CALL PUTLNG(%VAL(ADDR+DEF_VALUE),CURVAL)
	   IF (CURVAL.NE.IFF_ABSENT) THEN
	      NUM = NUM+1
	      CALL PUTLNG(%VAL(ADDR+DEF_TYP),ATT(NUM))
	      VAL(NUM) = CURVAL
	   ENDIF
	   CALL PUTLNG(%VAL(ADDR),ADDR)
	   GOTO 10
C
C add a list to the array (overwrite existing types)
	ELSE
C
20	   CONTINUE
	   IF (ADDR.EQ.0) GOTO 999	! finished
C
C get a current entry from list
	   CALL PUTLNG(%VAL(ADDR+DEF_TYP),CURTYP)
C
C is it there already
	   DO 30, I = 1,NUM
	      IF (CURTYP.EQ.ATT(I)) THEN
C
C don't overwite the value of this attribute if it is on PRIVILEGED POINT
C list
	         IF (PRIV_PT_LIST.GT.0) THEN
	            IF (CHK_PRIV_LIST(PRIV_PT_LIST,1,ATT(I),VAL(I))) THEN
	               GOTO 40
	            ENDIF
	         ENDIF
C
C overwrite the value
	         CALL PUTLNG(%VAL(ADDR+DEF_VALUE),VAL(I))
	         GOTO 40
	      ENDIF
30	   CONTINUE
C
C not in existing array, so add it
	   IF (NUM.EQ.MAXATT) THEN
	      GOTO 999
	   ENDIF
	   CALL PUTLNG(%VAL(ADDR+DEF_VALUE),CURVAL)
	   IF (CURVAL.NE.IFF_ABSENT) THEN
	      NUM = NUM+1
	      ATT(NUM) = CURTYP
	      VAL(NUM) = CURVAL
	   ENDIF
40	   CONTINUE
	   CALL PUTLNG(%VAL(ADDR),ADDR)
	   GOTO 20
	ENDIF	   	   
C
999	RETURN
	END
