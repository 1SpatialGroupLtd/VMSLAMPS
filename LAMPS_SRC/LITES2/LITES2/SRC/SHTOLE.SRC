	SUBROUTINE SHTOLE
C
***	MODULE	SHTOLE
***	IDENT	03SE92
C
C Copyright Laser Scan Laboratories Ltd., Cambridge, England
C
C Written					RWR	12-Mar-l985
C
C to show the settings set up by the TOLERANCE command
C
	IMPLICIT NONE
C
	INCLUDE	'LSL$CMNIFF:CB.STR'
***     PARAMETER/CMN:CHARS/		! character constants
***	PARAMETER/CMN:AUXDEF/
***	PARAMETER/CMN:CONSTS/
***	PARAMETER/CMN:MOANMESS/
***	PARAMETER/CMN:PACK/
***	PARAMETER/CMN:STAPAR/
C
***	COMMON/CMN:DOUT/
***	COMMON/CMN:DRAWIN/		! output drawing control
***	COMMON/CMN:D14IFC/
***	COMMON/CMN:EDGE/
***	COMMON/CMN:FOLLOW/
***	COMMON/CMN:GLOBAL/
***	COMMON/CMN:MASTER/
***	COMMON/CMN:STATE/
***	COMMON/CMN:STRIKE/
C
C w/s
C
	EXTERNAL	SHOW_PART_CMD_TABLE
	REAL		SCFRT,SCALE,DIST
	LOGICAL		HAD_THIRD
C
	IF (SINDEX.EQ.STATE_INITIAL) THEN	! SCLDIS not set up yet
	   SCALE=1
	   SCFRT=1
	ELSE
	   SCFRT=SCLFRT
	   SCALE=SCLDIS
	ENDIF
C
C check any argument
	IF (DSTRIN) THEN
	   CALL GET_COMMAND(DSTR(:DSTRL),SHOW_PART_CMD_TABLE)
	   IF (MOANED) THEN
	      CALL IGNCMD
	      GOTO 900
	   ENDIF
	   HAD_THIRD = .TRUE.
	ELSE
	   HAD_THIRD = .FALSE.
	ENDIF
C
C output second half?
	IF (HAD_THIRD.AND.DPRIN.EQ.2) GOTO 10
C
	CALL INFORM(MSG_DISTSQUARE)
C
C SQWT	    -  squaring tolerance    - warning issued when point moved
C	    -  more than this distance (mms)
C
	CALL INFORM(MSG_TOLSQWT,SQWT,SQWT*SCFRT)
C
C SQBT	    -  squaring tolerance    - warning issued if base length
C	    -  below this distance (mms)
C
	CALL INFORM(MSG_TOLSQBT,SQBT,SQBT*SCFRT)
C
C SQMT	    -  squaring tolerance    - maximum distance pt moved (mms)
C
	CALL INFORM(MSG_TOLSQMT,SQMT,SQMT*SCFRT)
C
C SQLT	    -  squaring tolerance    - minimum length of line (mms)
C
	CALL INFORM(MSG_TOLSQLT,SQLT,SQLT*SCFRT)
C
C SBMT	    -  squaring tolerance    - as OSSQMT but for based squaring
C
	CALL INFORM(MSG_TOLSBMT,SBMT,SBMT*SCFRT)
C
C SBLT	    -  squaring tolerance    - as OSSQMT but for based squaring
C
	CALL INFORM(MSG_TOLSBLT,SBLT,SBLT*SCFRT)
C
C SQCT	    -  squaring tolerance    - tolerance to test if feature is
C	                               closed for OS squaring
C
	CALL INFORM(MSG_TOLSQCT,TSQCT/SCFRT,TSQCT)
C
C SQPL	    -  squaring tolerance    - tolerance to test for parallel
C	                               line segments
C
	CALL INFORM(MSG_TOLSQPL,SQPL/PI*180,SQPL)
C
C angular tolerance
C
	CALL INFORM(MSG_TOLANG,TOLRNC/PI*180,TOLRNC)
C
C Circle and curve tolerances
C
	CALL INFORM(MSG_BLANK)
	CALL INFORM(MSG_CTOLMESS)
C
C CIRDRAW -  segment length for drawn circles
C
	CALL INFORM(MSG_TOLCIRDRAW)
	CALL INFORM(MSG_TOLCIRCUR,CIDNUM(1),CIDNUM(1)*SCFRT,
     &				   CIDNUM(2),CIDNUM(2)*SCFRT,
     &				   CIDIFF(3) )
C
C CIRGEN  -  segment length for generated circles
C
	CALL INFORM(MSG_TOLCIRGEN)
	CALL INFORM(MSG_TOLCIRCUR,CIGNUM(1),CIGNUM(1)*SCFRT,
     &				  CIGNUM(2),CIGNUM(2)*SCFRT,
     &				  CIGIFF(3) )
C
C CURDRAW -  segment length for drawn curves
C
	CALL INFORM(MSG_TOLCURDRAW)
	CALL INFORM(MSG_TOLCIRCUR,DRAMM(1),DRAMM(1)*SCFRT,
     &				  DRAMM(2),DRAMM(2)*SCFRT,
     &				  DRAMM(3) )
C
C CURGEN  -  segment length for generated curves
C
	CALL INFORM(MSG_TOLCURGEN)
	CALL INFORM(MSG_TOLCIRCUR,GENMM(1),GENMM(1)*SCFRT,
     &				  GENMM(2),GENMM(2)*SCFRT,
     &				  GENMM(3) )
C
C EDGE TOLERANCE - tolerance for edgematching
C
10	CONTINUE
	IF (HAD_THIRD.AND.DPRIN.EQ.1) GOTO 900
	CALL INFORM(MSG_BLANK)
	CALL INFORM(MSG_TOLEDGE,TOLEDG,TOLEDG*SCFRT)
C
C PROPOGATE TOLERANCE - tolerance for propogating discrepancies
C
	CALL INFORM(MSG_PRPTOL,PRPTOL,PRPTOL*SCFRT)
C
C FAR_MOVE TOLERANCE - tolerance for setting FAR_MOVEs
C
	CALL INFORM(MSG_FAR_MOVE_TOL,FAR_MOVE_MM,FAR_MOVE_IFF)
C
C FIND TOLERANCE - find radius
C
	DIST=DFCRIT*SCALE
	IF (ZOOMNG) THEN
	   CALL INFORM(MSG_TOLFINDHEAD,'zoomed')
	ELSE
	   CALL INFORM(MSG_TOLFINDHEAD,'fixed')
	ENDIF
	CALL INFORM(MSG_TOLFIND,'    ',DFCRIT,DIST/SCFRT,DIST)
C
C OFFSET PROPORTION
C
	CALL INFORM(MSG_OFFSETPROP,OFFPROP)
C
C JUSTIFY PROPORTION
C
	CALL INFORM(MSG_JUSTIFYPROP,JSTPROP)
C
C EXPAND PROPORTION
C
	CALL INFORM(MSG_EXPANDPROP,EXPROP)
C
C BUNCH FILTERING constraints
C
	CALL INFORM(MSG_BUNCHTOLHDR,BUNCHMM(1),BUNCHMM(1)*SCFRT)
	CALL INFORM(MSG_BUNCHTOL1,BUNCHMM(3),BUNCHMM(3)*SCFRT)
	CALL INFORM(MSG_BUNCHTOL2,BUNCHMM(2),BUNCHMM(2)*SCFRT)
C
C FOLLOW control
	CALL INFORM(MSG_FOLLOWTOLHDR,FOLLOW_TIME)
	CALL INFORM(MSG_FOLLOWTOL1,FOLLOW_EMMDIST,FOLLOW_EMMDIST*SCFRT)
	CALL INFORM(MSG_FOLLOWTOL2,FOLLOW_HMMDIST,FOLLOW_HMMDIST*SCFRT)
	CALL INFORM(MSG_FOLLOWTOL3,FOLLOW_SMMDIST,FOLLOW_SMMDIST*SCFRT)
C
900	RETURN
	END
