	SUBROUTINE CLRRSP
C
***	IDENT	09MY96
***	MODULE	CLRRSP
C
C	Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C	Created					RWR	19-AUG-1988
C
C to clear all pending commands, back to where RESPOND was called from,
C provoked by an error while RESPONDing
C
	IMPLICIT NONE
C
***     PARAMETER/CMN:EFNLUN/		! LITES2 logical units
***     PARAMETER/CMN:MOANMESS/		! moan constants
C
***	COMMON/CMN:AFTER/
***     COMMON/CMN:DIN/			! command decoding input
***     COMMON/CMN:DVAR/		! command decoding variables
C
C Functions called
	LOGICAL		ENDLIN		! end of current input line ?
	LOGICAL		MACEXE		! executing any macros ?
	LOGICAL		MACINT		! a macro issued interactively ?
	LOGICAL		BOTFRM
C
C Local Variables
	LOGICAL		INMAC		! executing any macros ?
	LOGICAL		SINMAC		! a macro issued interactively ?
C
C Set various logicals
C
	INMAC = MACEXE()
	SINMAC = MACINT()
C
C Check if any macros are currently being executed
C
	IF (INMAC .AND. .NOT. SINMAC) THEN
	   CALL INFORM(MSG_MACEXEABA)
	ENDIF
C
C Check if the only pending commands are on the interactive input
C line and if the end of this line has not been reached
C
	IF (BOTFRM()) THEN
	   IF (.NOT. ENDLIN()) CALL INFORM(MSG_INPLINABA)
	ENDIF
C
C Reset stack
C
	CALL UWDSTK
	CALL FRASTK
C
	DTOP = DSAV + 1
C
	DNEW = .TRUE.
C
C Output the relevant message to guide the user
C
	IF (INMAC .AND. .NOT. SINMAC) THEN
	   CALL LEARN(MSG_RETINTERACT)
	ELSE
	   CALL LEARN(MSG_READYNXTCMD)
	ENDIF
C
C put AFTER ERROR command on stack, if required,
C and were in macro or command file
C
CCCC	IF (ON_ERROR) THEN
CCCC	   IF ((INFIL.OR.INMAC).AND.AFTER_ERROR_LEN.GT.0) THEN
CCCC	      CALL SETEXT(AFTER_ERROR(1:AFTER_ERROR_LEN))
CCCC	      DNEW = .FALSE.		! and say it is on the stack!
CCCC	   ENDIF
CCCC	ENDIF
C
	RETURN
	END
