C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1987-06-09 14:09:52.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE RDSEL(BUFTOP,STRING,ACCGRP,BUFLEN,SELBUFF,IERR)
C
***	IDENT	09JN87
***	MODULE	RDSEL
C
C	Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C	Created					RWR	31-Oct-1984
C
C Description
C
C	LITES2 subroutine that takes a string, consisting of integers,
C	integer ranges and groups (as defined in an open FRT file)
C	that define feature codes and returns a bit map that has
C	bits corresponding to these FCs set. Groups cannot be accepted
C	if ACCGRP is set to .FALSE.
C
C	Integers can be terminated by a space, ',', tab, group or
C		 end of line.
C	Groups   can only consist of alphabetic characters and '_' and
C		 can be terminated by a space, integer, ',', or end of
C		 line
C		  
C	Ranges 	 consist of two integers connected by a '-'
C	
C	Errors are indicated on the screen, when the return code
C	       is set to -1 and the contents of the bit-map are
C	       unreliable
C
	IMPLICIT NONE
C
***     PARAMETER/CMN:CHARS/
***     PARAMETER/CMN:MOANMESS/
C
C Arguments
C
C    input
	INTEGER*4	BUFTOP		! top value in bit map
	CHARACTER*(*)	STRING		! string to interpret
	LOGICAL		ACCGRP		! .TRUE. if accept groups
					! of FCs from FRT
					! .FALSE. if to accept only
					! integers and ranges
	INTEGER*4	BUFLEN		! length of bit map (32 bit
					! words)
C    input/output
	INTEGER*4	SELBUFF(BUFLEN) ! bit map;  on output has
					! additional bits defined
					! in STRING set
C   output
	INTEGER*4	IERR		! return code
					! = 0 for success
					! =-1 for error in interpreting
					!     string
C
C Functions called
	LOGICAL*1	ALPHA,NUMERIC,RDCHS
C
C Local Variables
	BYTE		CHAR		! next character in line
	INTEGER*2	SAVPTR		! to make TXTBUF secure
C
	IERR=-1				! assume error (empty string is
					! error, but should not happen)
C
C set  up auxiliary buffer
	CALL DCPSAV(SAVPTR)		! save pointer to TXTBUF
	CALL SETAUX(%REF(STRING),LEN(STRING))
C
C loop to read each part of the string
C
10	IF (RDCHS(CHAR)) GOTO 1000	! line completed
	IF (CHAR.EQ.',') GOTO 10	! ignore terminators
	IF (NUMERIC(CHAR)) THEN
	   CALL BSCH					! put char back
							! in buffer
	   CALL ADDRANGE(BUFTOP,BUFLEN,SELBUFF,IERR)	! get FCs from
							! ranges or nos
	ELSEIF ((ALPHA(CHAR).OR.CHAR.EQ.UND).AND.ACCGRP) THEN
	   CALL BSCH					! put char back
							! in buffer
	   CALL ADDGROUP(BUFLEN,SELBUFF,IERR)		! get FCs from
							! FRT file
	ELSE
	   CALL MOAN(MSG_CMDLIBUXC,CHAR)
	   IERR=-1
	ENDIF					! at end of this if
						! block IERR is set
C
	IF (IERR.GE.0) GOTO 10		! if all OK, try next part	
C
C Reset to txtbuf and return
C
1000	CALL BSLN
	CALL DCPSET(SAVPTR)
	RETURN
	END
