C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1993-02-05 16:51:46.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE INISCL
C
***	MODULE	INISCL
***	IDENT	05FE93
C
C Copyright Laser Scan Laboratories Ltd., Cambridge, England
C Author Clarke Brunt
C
C Written July 1984
C calculation of SCLFRT refined		4-Mar-1985	RWR
C
C To initialise scaling
C Everything including SCLDIS should maybe be reset if drawing at a
C new scale, but for now leave them unchanged.
C
	IMPLICIT NONE
C
	INCLUDE	'LSL$CMNIFF:CB.STR'
***	PARAMETER/CMN:AUXDEF/
***	PARAMETER/CMN:EFNLUN/
***	PARAMETER/CMN:MOANMESS/
***	PARAMETER/CMN:PACK/
C
***	COMMON/CMN:D14IFC/
***	COMMON/CMN:DRAWIN/
***	COMMON/CMN:MAPS/
***	COMMON/CMN:MASTER/
***	COMMON/LSL$CMNIFF:MD2DES/
***	COMMON/CMN:OPTION/
***	COMMON/CMN:SCALES/
***	COMMON/CMN:STRIKE/
***	COMMON/CMN:TRANSFORM/
C
C functions called
C
	REAL	SCFRSS		! scale from screen size
	REAL*4	CURTOL		! calculates curve tolerance
C w/s
C
C SCLFRT is such that FRT units (mm) * SCLFRT = IFF units
C
	IF (HADSF) THEN
	   SCLFRT=1/SCAFAC	! use data from SCALE FACTOR
	   SCAMAP=1
	ELSEIF (HADSA) THEN
	   SCLFRT=SCFRSS()	! use LIMITS and size of screen
	   SCAMAP=1
	ELSEIF (HADSM.AND.HADSS) THEN
	   SCLFRT=SCASOU/SCAMAP	! (SCAMAP may be default of 1000)
	ELSEIF (HADSM.AND.EXTOPT.AND.MAPTOP.GE.0.AND.MAPSCL(0).GT.0)THEN
	   IF (DO_FLY_TRANS) THEN
	      SCLFRT=LITES2SCL/SCAMAP
	   ELSE
	      SCLFRT=MAPSCL(0)/SCAMAP
	   ENDIF
C
C when no SCALE commands have been given, but EXTERNAL is enabled
C use scale of first map and assume IFF units are in metres 
C (OS case by default)
C
	ELSEIF (EXTOPT.AND.MAPTOP.GE.0) THEN
	   IF (DO_FLY_TRANS) THEN
	      IF (LITES2SCL.LE.0) THEN
	         SCLFRT=1
	         CALL MOAN(MSG_ILLEGLEXTSC,LITES2SCL)
	      ELSE
	         SCLFRT=LITES2SCL/1000.0
	      ENDIF
	   ELSE
	      IF (MAPSCL(0).LE.0) THEN
	         SCLFRT=1
	         CALL MOAN(MSG_ILLEGLEXTSC,MAPSCL(0))
	      ELSE
	         SCLFRT=MAPSCL(0)/1000.0
	      ENDIF
	   ENDIF
C
C if all else has failed use scale factor 1
C
	ELSE
	   SCLFRT=1
	ENDIF
C
C Calculate circle and curve tolerances in IFF units
C
	CIDIFF(1) = CIDNUM(1)*SCLFRT	! drawn circle
	CIDIFF(2) = CURTOL(CIDNUM(2),SCLFRT)
	CIGIFF(1) = CIGNUM(1)*SCLFRT	! generated circle
	CIGIFF(2) = CURTOL(CIGNUM(2),SCLFRT)
C
C Calculate FAR_MOVE tolerance in IFF units
C
	FAR_MOVE_IFF = FAR_MOVE_MM * SCLFRT
C
C Calculate default squaring tolerances for D14* routines that use 
C tolerances from common blocks. These are used as IFF units (and
C defaulted as such in BLKDAT), but are specified to LITES2 in sheet mm
C
	SQCT = TSQCT/SCLFRT
C
C temporarily set EFCRIT here
C DFCRIT is find radius in screen mm
C EFCRIT is find radius in IFF units
	EFCRIT = DFCRIT*SCLDIS
C
CCC	IF (.NOT.NODISP) THEN
C
C convey nominal linewidth to FRTLIB
	   CALL SRISLW(NOMLW*SCLDIS/SCLFRT)
C
C convey information about units to FRTLIB
C One screen mm. = SCLDIS world units (IFF units)
C One sheet mm. = SCLFRT world units (IFF units)
	   CALL SRIUNI(1.0/SCLDIS,SCLFRT,0.0,1.0/SCLDIS)
CCC	ENDIF
C
	RETURN
	END
