C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1987-12-22 15:53:38.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE MOVCTX(FROM,TO)
C
***	MODULE	MOVCTX
***	IDENT	22DE87
C
C Copyright Laser Scan Laboratories Ltd., Cambridge, England.
C Author: Ron Russell					29-Oct-1986
C
C To move an CTX buffer from one location to another
C
	IMPLICIT NONE
C
	INCLUDE	'($DSCDEF)'
***	PARAMETER/CMN:CTXS/
***	COMMON/CMN:CTXS/
C
C arguments
	INTEGER*4	FROM(CTXLENL)		! source
	INTEGER*4	TO(CTXLENL)		! destination
C
C Workspace
	INTEGER		I
	INTEGER*4	TDESCL
	INTEGER*2	TDESCW(2)
	BYTE		TDESCB(4)
	EQUIVALENCE	(TDESCL,TDESCW,TDESCB)
	INTEGER*4	FDESCL
	INTEGER*2	FDESCW(2)
	EQUIVALENCE	(FDESCL,FDESCW)
C
C Copy the static bits
	TO(CTX_L_NXTPTR) = FROM(CTX_L_NXTPTR)
	TO(CTX_L_PREPTR) = FROM(CTX_L_PREPTR)
	DO 10, I=CTX_L_TH,CTXLENL-1	! and from TH to list of attbts
	   TO(I) = FROM(I)
   10	CONTINUE	
C
C copy the list of attributes
	CALL COPYDEF(FROM(CTX_L_ATTR),TO(CTX_L_ATTR))	
C
C If destination string is not dynamic, then set length in it
C (Beware passing any destination whose length is not writable!)
	TDESCL = TO(CTX_L_DESC)
	IF (TDESCB(4).NE.DSC$K_CLASS_D) THEN
	   FDESCL = FROM(CTX_L_DESC)
	   TDESCW(1) = MIN(FDESCW(1),CTXMAX)	! truncate to 80 chars
	   TO(CTX_L_DESC) = TDESCL
	ENDIF
C
C And the (possibly) dynamic string
	CALL STR$COPY_DX(TO(CTX_L_DESC),FROM(CTX_L_DESC))
C
	RETURN
	END
