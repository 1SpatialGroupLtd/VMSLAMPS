C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1985-04-11 17:29:38.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL FUNCTION MARGIN( POSN, XX, YY, LOCN, ROTN )
C
***	IDENT	11AP85
***	MODULE	MARGIN
C
C	Copyright LaserScan Laboratories Ltd., Cambridge, England
C
C Author TJ Ibbs, 10 February 1984
c ammended for LITES2 by Ron Russell,  11-Feb-1985
C
	IMPLICIT NONE
C
C a subroutine to take a marginal position number, and define how
C the text should be placed...
C
C It returns TRUE if there is no such position defined, and FALSE
C if the variables passed have been set appropriately
C
***	PARAMETER/CMN:CONSTS/
C
C we are passed
C
	INTEGER*4	POSN	! Margin position number
C
C we return
C
	REAL		XX,YY	! location of text (mm on map)
	INTEGER*4	LOCN	! location number for text box
	REAL		ROTN	! rotation of text (radians)
C
C this is all empirical knowledge - reference DMB sheet 3.4 POSMTEXT
C
C for once, assume success
C
	MARGIN = .FALSE.
C
C default rotation is zero - horizontal
C
	ROTN = 0		! (degrees and radians)
C
C so, let us decide it
C
	IF ( POSN.LT.1 ) THEN
C
	   MARGIN = .TRUE.
C
	ELSEIF ( POSN.LE.19 ) THEN
C					1 to 19
	   XX = POSN*20
	   YY = -4
	   LOCN = 5
C
	ELSEIF ( POSN.LE.38 ) THEN
C					20 to 38
	   XX = 404
	   YY = (POSN-19)*20
	   LOCN = 3
	   ROTN = 270*PI/180
C
	ELSEIF ( POSN.LE.57 ) THEN
C					39 to 57
	   XX = (58-POSN)*20
	   YY = 404
	   LOCN = 3
C
	ELSEIF ( POSN.LE.76 ) THEN
C					58 to 76
	   XX = -4
	   YY = (77-POSN)*20
	   LOCN = 3
	   ROTN = 90*PI/180
C
	ELSEIF ( POSN.LE.95 ) THEN
C					77 to 95
	   XX = (POSN-76)*20
	   YY = -9
	   LOCN = 5
C
	ELSEIF ( POSN.LE.114 ) THEN
C					96 to 114
	   XX = 409
	   YY = (POSN-95)*20
	   LOCN = 3
	   ROTN = 270*PI/180
C
	ELSEIF ( POSN.LE.133 ) THEN
C					115 to 133
	   XX = (134-POSN)*20
	   YY = 409
	   LOCN = 3
C
	ELSEIF ( POSN.LE.152 ) THEN
C					134 to 152
	   XX = -9
	   YY = (153-POSN)*20
	   LOCN = 3
	   ROTN = 90*PI/180
C
	ELSEIF ( POSN.EQ.153 ) THEN
C					153
	   XX = 0
	   YY = -4
	   LOCN = 5
C
	ELSEIF ( POSN.EQ.154 ) THEN
C					154
	   XX = 0
	   YY = -9
	   LOCN = 5
C
	ELSEIF ( POSN.EQ.155 ) THEN
C					155
	   XX = 0
	   YY = 404
	   LOCN = 3
C
	ELSEIF ( POSN.EQ.156 ) THEN
C					156
	   XX = 0
	   YY = 409
	   LOCN = 3
C
	ELSE
C
	   MARGIN = .TRUE.
C
	ENDIF
	RETURN
	END
