	SUBROUTINE GETROUTINE(LOG,ENTRY_POINT,ADDRESS,ERRMSG,WHINGE)
C
***	IDENT	16DE94
***	MODULE	GETROUTINE
C
C	Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C	Created					CCB	9-Jan-1987
C
C Description
C
C	Routine to get the address of an entry point in an external
C	routine (if present).
C
	IMPLICIT NONE
C
***	PARAMETER/CMN:MOANMESS/
C
C arguments
	CHARACTER*(*)	LOG		! logical name that points
					! to shared image
	CHARACTER*(*)	ENTRY_POINT	! entry point in shared image
	INTEGER		ADDRESS		! address of entry point;
					! = 0 if image not mapped
	CHARACTER*(*)	ERRMSG		! use routine is to be put to
					! (for error message)
	LOGICAL		WHINGE		! complain if key not found
C
	INCLUDE '($LIBDEF)'
	INCLUDE '($SSDEF)'
C
C functions called
C
	INTEGER*4	LIB$FIND_FILE
	INTEGER*4	LIB$FIND_IMAGE_SYMBOL
	INTEGER*4	LIB$MATCH_COND
	INTEGER*4	TRNALL
C
C Local Variables
C
	INTEGER*4	CONTEXT		! context for LIB$FIND_FILE
	INTEGER*4	IERR		! error code
	CHARACTER*(1)	TEMP		! file specification
C
	EXTERNAL	EXP_HAND_FIMS_USER
C
	ADDRESS = 0			! assume no routine
C
C check if logical name has been set up. If it has not, don't do
C anything, otherwise signal any error
	IF (TRNALL(LOG,TEMP).EQ.SS$_NOLOGNAM) GOTO 999
C
C Check whether file exists first
C (use same default as LIB$FIND_IMAGE_SYMBOL)
C
	CONTEXT = 0			! clear context
	IERR = LIB$FIND_FILE(
     &			LOG,TEMP,CONTEXT,'SYS$SHARE:.EXE')
	CALL LIB$FIND_FILE_END(CONTEXT)
C
C now get entry point of routine in shared image
C
	IF (IERR) THEN			! file was found
	   CALL LIB$ESTABLISH(EXP_HAND_FIMS_USER) ! set condition handler
	   IERR = LIB$FIND_IMAGE_SYMBOL(
     &	               LOG,ENTRY_POINT,ADDRESS)
	   IF (.NOT.IERR) THEN
C
C condition handler outputs message for all but LIB$_KEYNOTFOU
	      IF (LIB$MATCH_COND(IERR,LIB$_KEYNOTFOU)) THEN
	        IF (WHINGE) THEN
	          CALL LSL_PUTMSG(IERR)
	        ELSE
	          IERR = 1	! avoid message below
	          ADDRESS = 0
	        ENDIF
	      ENDIF
	   ENDIF
	ELSE
	  CALL LSL_PUTMSG(IERR)
	ENDIF
C
	IF (.NOT.IERR) THEN
	   CALL MOAN(MSG_ROUTNOTUSED,ERRMSG,LOG)
	   ADDRESS = 0
	ENDIF
C
999	RETURN
	END
