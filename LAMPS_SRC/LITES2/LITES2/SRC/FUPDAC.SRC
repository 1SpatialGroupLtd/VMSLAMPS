C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1988-12-14 14:23:36.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE FUPDAC(LIST,TYPE,VALUE,FLAG)
C
***	MODULE	FUPDAC
***	IDENT	14DE88
C
C Copyright Laser Scan Laboratories Ltd., Cambridge, England.
C Author: Ron Russell
C Date  : 13-Nov-1987
C
C To update the value of a AC with a value specified in a list of
C definitions
C
	IMPLICIT NONE
C
***	PARAMETER/CMN:ACS/
C
***	COMMON/CMN:ACS/
***	COMMON/CMN:DEFINE/
***	COMMON/CMN:MASTER/
C
C arguments
	INTEGER*4 	LIST		! pointer to list of definitions
	INTEGER*2	TYPE		! type of AC. Note I*2, in case
					! a I*2 is passed
	INTEGER		VALUE		! the value to update
	LOGICAL		FLAG		! when TRUE, mark any of the
					! elements in the list of
					! definitions that are updated
					! in top bit
C
C w/s
	INTEGER		DEFTYP		! type in DEFINITION
	INTEGER		ADDR		! address of current definition
C
C function
	LOGICAL 	CHK_PRIV_LIST
C
C is this AC on the privileged point list?
	IF (PRIV_PT_LIST.GT.0) THEN
	   IF (CHK_PRIV_LIST(PRIV_PT_LIST,1,TYPE,VALUE)) GOTO 999
	ENDIF
C
	ADDR = LIST
10	CONTINUE
	IF (ADDR.LE.0) GOTO 999		! finished
	CALL PUTLNG(%VAL(ADDR+DEF_TYP),DEFTYP)
	IF (DEFTYP.EQ.TYPE) THEN
	   CALL PUTLNG(%VAL(ADDR+DEF_VALUE),VALUE)	! update value
	   IF (FLAG) CALL LIB$INSV(1,31,1,%VAL(ADDR+DEF_TYP))
C
C finished; DEFTYP can only occur once in a list
	   GOTO 999
	ENDIF
C
C move onto next elememt in list
	CALL PUTLNG(%VAL(ADDR),ADDR)
	GOTO 10
C
999	RETURN
	END
