C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1987-06-10 13:48:28.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE PTINARC(AUX,PTX,PTY,INARC,LTDANG)
C
***	MODULE	PTINARC
***	IDENT	10JN87
C
C Copyright Laser Scan Laboratories Ltd., Cambridge, England.
C Author  Ron Russell
C
C To find the relationship between a point and a circle arc
C
C AUX is the auxiliary array containing info about the arc.
C PTX, PTY is the point to be considered
C INARC returns the relationship of the point to the arc
C viz: = -2 outside first point
C      = -1 on first point
C      =  0 within 
C      =  1 on second point
C      =  2 outside second point
C
C LTDANG is an approximation to zero (as an angle)
C
	IMPLICIT NONE
C
***	PARAMETER/CMN:AUXDEF/
***	PARAMETER/CMN:CONSTS/
C
C arguments
	REAL	AUX(AUXLEN)
	REAL*8	PTX,PTY
	INTEGER INARC
	REAL*8	LTDANG
C
C w/s
	REAL*8	ANG
	REAL*8	TEMPANG
	REAL*8	TEMP
C
C
	IF (ABS(AUX(TOTI)).GE.TWOPI) THEN	! full circle always cut
	   INARC= 0
	   GOTO 900
	ENDIF
C	
	ANG = ATAN2(PTY-DBLE(AUX(YCENI)),PTX-DBLE(AUX(XCENI)))
	IF (ANG.LT.0.0) ANG = ANG + TWOPI
C
	TEMPANG = ABS(ANG-DBLE(AUX(STAI)))
	IF (TEMPANG.LE.LTDANG.OR.(TWOPI-TEMPANG).LE.LTDANG) THEN
	   INARC = -1
C
C it might actually be closer to far end of arc, if total angle is small
C
	   IF (ABS(AUX(TOTI)).LT.LTDANG) THEN
	      IF (TEMPANG.GT.PIBI2) TEMPANG = ABS(TEMPANG-TWOPI)
	      TEMP = DBLE(AUX(STAI)) + DBLE(AUX(TOTI))
	      IF (TEMP.LT.0.0) TEMP = TEMP+TWOPI
	      IF (TEMP.GE.TWOPI) TEMP = TEMP - TWOPI
	      IF (ABS(TEMP-ANG).LT.ABS(TEMPANG-ANG)) INARC = 1
	   ENDIF
	ELSE
	   ANG = ANG - DBLE(AUX(STAI))		! point referred to start
C
C get in same sense as ARC
C
	   IF (AUX(TOTI).GT.0.0.AND.ANG.LT.0.0) THEN
	      ANG = ANG + TWOPI
	   ELSEIF (AUX(TOTI).LT.0.0.AND.ANG.GT.0.0) THEN
	      ANG = ANG - TWOPI
	   ENDIF
C
C check for on far end
C
	   IF (ABS(DBLE(AUX(TOTI))-ANG).LE.LTDANG) THEN
	      INARC = +1
C
C check for within arc
C
	   ELSEIF (ABS(DBLE(AUX(TOTI))).GT.ABS(ANG)) THEN
	      INARC = 0
C
C is it before start or after end?
C if it is in first half of remainder of circle, then it is past end;
C otherwise it is before start
C
	   ELSE
	      IF (ABS(ANG).LT.
     &	          (ABS(DBLE(AUX(TOTI)))+
     &	               0.5*(TWOPI-ABS(DBLE(AUX(TOTI)))))) THEN
	         INARC = 2
	      ELSE
	         INARC = -2
	      ENDIF
	   ENDIF
	ENDIF
C
900	RETURN
	END
