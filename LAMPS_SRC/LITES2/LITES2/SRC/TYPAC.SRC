	SUBROUTINE TYPAC
C
***	MODULE	TYPAC
***	IDENT	10MY96
C
C Copyright Laser Scan Laboratories Ltd., Cambridge, England.
C Author: Clarke Brunt
C
C Coded 13.xii.84
C
C To type the current AC
C
	IMPLICIT NONE
C
***	PARAMETER/CMN:ACS/
***	PARAMETER/CMN:MOANMESS/
C
***	COMMON/LSL$CMNFRT:FRTACD/
***	COMMON/CMN:ACS/
***	COMMON/LSL$CMNLSL:TXTC/
C
C local variables
	INTEGER*2	TYPAC2	
	CHARACTER*(ACD_FORMAT_MAX+2) F
	INTEGER		F_LEN
C
C functions
	LOGICAL		IS_REAL_AC
	LOGICAL		ACDFND
	INTEGER		EXPAND
	INTEGER		PROCESS_CTRL
C
	IF (ACBUFL(AC_L_TYPE).LT.0) THEN	! it's a TC/CH
	   TXTPTR = PROCESS_CTRL(ACBUFL(AC_L_DESC),TXTBUF,MAX_TXTLIM)
	   IF (ACBUFL(AC_L_TYPE).EQ.-2) THEN
	      CALL INFORM(MSG_CH,TXTDSC)
	   ELSE
	      CALL INFORM(MSG_TC,TXTDSC)
	   ENDIF
	ELSE					! it's an AC
C
C try to get a name for the AC from the ACD table
	   IF (.NOT.ACDFND(ACBUFL(AC_L_TYPE),.FALSE.)) THEN
C
	      IF (ACD_DATA_TYPE.EQ.ACD_DATATYPE_C) THEN
	         F     = '"'//ACD_FORMAT(1:ACD_FORMAT_LEN)//'"'
	         F_LEN = ACD_FORMAT_LEN + 2
	      ELSE
	         F     = ACD_FORMAT(1:ACD_FORMAT_LEN)
	         F_LEN = ACD_FORMAT_LEN
	      ENDIF
	      TXTPTR = EXPAND(
     &           '%WAC %S '//F(1:F_LEN)//' "',
     &	         TXTBUF,ACD_NAME(:ACD_NAME_LEN),ACBUFL(AC_L_ACVAL))
	      TXTPTR = TXTPTR + PROCESS_CTRL(ACBUFL(AC_L_DESC),
     &			TXTBUF(TXTPTR+1),MAX_TXTLIM-TXTPTR-1)
	      TXTPTR = TXTPTR+1
	      TXTBUF(TXTPTR) = '"'
C
C write out this message
	      CALL INFORM(MSG_STRING,TXTDSC)
	   ELSE
C
C treat as unknown name
	      TXTPTR = PROCESS_CTRL(ACBUFL(AC_L_DESC),TXTBUF,MAX_TXTLIM)
	      TYPAC2= ACBUFL(AC_L_TYPE)		! I*4 -> I*2
	      IF (IS_REAL_AC(TYPAC2)) THEN
	         CALL INFORM(MSG_REALAC,
     &	          ACBUFL(AC_L_TYPE),ACBUFL(AC_L_ACVAL),TXTDSC)
	      ELSE
	         CALL INFORM(MSG_AC,
     &	          ACBUFL(AC_L_TYPE),ACBUFL(AC_L_ACVAL),TXTDSC)
	      ENDIF
	   ENDIF
	ENDIF
C
	RETURN
	END
