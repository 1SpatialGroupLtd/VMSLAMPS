	LOGICAL FUNCTION CLOSIF( MAP )
C
***	IDENT	10SE90
***	MODULE	CLOSIF
C
C Copyright Laser-Scan Laboratories Ltd., Cambridge, England
C
C Author Clarke Brunt, 5 September 1984
C
C To close a map, freeing its LUN
C
	IMPLICIT NONE
C
***	PARAMETER/CMN:EFNLUN/
***	PARAMETER/CMN:MOANMESS/
C
***	COMMON/LSL$CMNIFF:IFFHAN/
***	COMMON/CMN:MAPS/
C
C argument
C
	INTEGER		MAP		! map number to close
C
C w/s
	INTEGER		SAVOVL		! save overlay number
	INTEGER		LMAP		! local copy of map
C
	CLOSIF = .TRUE.			! assume failure
C
C Make a copy of argument MAP. This is in case we are passed MAPNO(LUN)
C as our argument, which we then change with disastrous results.
	LMAP = MAP
C
C terminate file (unless read-only)
	IF (.NOT.MAPRO(LMAP)) THEN
C
C make sure the file is selected
C Don't use SELIF, because that might have called us indirectly.
C The map presumably isn't current, since we are closing it.
	   CALL IFFSEL( MAPLUN(MAP) )
	   IF (IERCD.NE.0) THEN
	      CALL NASTY(MSG_IFFSEL,MAP+1,MAPNAM(1,MAP))
	      MAPCUR = -1		! no current selection
	      GOTO 999
	   ENDIF
C
C remember the writing position, for re-opening
	   LPOSFT(LMAP) = LPOSE
C
C and the status of LPOSF
	   LPOSF_SAV(LMAP) = LPOSF
C
C terminate overlay if necessary, but preserve open layer
C ready for OPENIF
	   IF (MAPOVL(LMAP).GE.0) THEN
	      MAPCUR = MAP		! map selected
	      SAVOVL = MAPOVL(LMAP)
	      CALL ENDOV
	      MAPOVL(LMAP) = SAVOVL
	   ENDIF
C
C add an EM,EJ
	   CALL IFFEM
	   CALL IFFEJ
	ENDIF
C
	MAPCUR = -1			! no current selection
C
C close the file
	CALL IFFCLO( MAPLUN(LMAP) )
	IF (IERCD.NE.0.AND.IERCD.NE.'LOST') THEN
	   CALL NASTY(MSG_IFFCLOSE,LMAP+1,MAPNAM(1,LMAP))
	   GOTO 999
	ENDIF
C
C deallocate the LUN
	MAPNO(MAPLUN(LMAP)) = -1
	MAPLUN(LMAP) = 0
C
	CLOSIF = .FALSE.		! succeeded
C
999	RETURN
	END
