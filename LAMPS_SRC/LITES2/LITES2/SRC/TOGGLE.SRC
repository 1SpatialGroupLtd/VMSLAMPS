	SUBROUTINE TOGGLE(FLIP,STATE)
C
***	IDENT   11NO93
***	MODULE  TOGGLE
C
C	Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C	Written					RWR	19-Apr-1984
C
C	LITES2 cartographic editor ENABLE,DISABLE,TOGGLE command.
C
	IMPLICIT NONE
C
***	PARAMETER/CMN:LICPAR/
***	PARAMETER/CMN:MOANMESS/
***	PARAMETER/CMN:STAPAR/
***	PARAMETER/CMN:REGPAR/
***	PARAMETER/CMN:ACS/
C
***	COMMON/CMN:ACS/
***     COMMON/CMN:DOUT/
***	COMMON/CMN:DRAWIN/
***	COMMON/LSL$CMNFRT:FRTCOM/
***	COMMON/CMN:GLOBAL/
***	COMMON/CMN:MASTER/
***	COMMON/LSL$CMNIFF:MD2DES/
***	COMMON/CMN:MODIFY/
***     COMMON/CMN:OPTION/
***	COMMON/CMN:RFCTRL/
***	COMMON/CMN:REGCMN/
***	COMMON/CMN:SORT/
***	COMMON/CMN:STATE/
***	COMMON/CMN:TRANSFORM/
***	COMMON/CMN:WORKS/
***	COMMON/CMN:VTCTRL/
C
	EXTERNAL	MOAN,NASTY
C
C arguments
	LOGICAL		FLIP		! if true, then flip
	LOGICAL		STATE		! else set to state
C
C functions called
	LOGICAL		BALINIT
	LOGICAL		SCRINIT
	LOGICAL		BUTINIT
	LOGICAL		DSRINIT
	LOGICAL		KRSINIT
	CHARACTER*3	ONOFF
	INTEGER*4	LIB$FREE_VM_PAGE
	LOGICAL		LICENSED
	LOGICAL		TSTSEG
	EXTERNAL	ENABLE_KRISS_CMD_TABLE
	LOGICAL		INIT_SCAN_MEM
C
C workspace
	LOGICAL		RESULT
	INTEGER		I
C
C statement function
	LOGICAL		OPT
	LOGICAL		OPTION
	OPT(OPTION) = (STATE.AND..NOT.FLIP).OR.(FLIP.AND..NOT.OPTION)
C
C Despatch according to secondary command
C
	GOTO ( 100, 200, 300, 400, 500, 600, 700, 800, 900,1000,
     &	       1100,1200,1300,1400,1500,1600,1700,1800,1900,2000,
     &	       2100,2200,2300,2400,2500,2600,2700,2800,2900,3000,
     &	       3100,3200,3300,3400,3500,3600,3700,3800,3900,4000,
     &	       4100,4200,4300,4400,4500,4600,4700,4800,4900,5000,
     &	       5100,5200,5300,5400,5500,5600,5700,5800,5900,6000
     &		), DSECN
C
C Secondary command number out of range
C
	CALL MSGCMD(NASTY,MSG_ERRSECIND)
	GOTO 8900
C
C Secondary command QUIET
100	RESULT=OPT(QUIOPT)
	QUIOPT=RESULT
	GOTO 9000
C
C Secondary command PME
200	RESULT=OPT(PMEOPT)
	PMEOPT=RESULT
	GOTO 9000
C
C Secondary command EXTERNAL
300	IF (SINDEX.NE.STATE_INITIAL) GOTO 8800
	RESULT=OPT(EXTOPT)
	EXTOPT=RESULT
	GOTO 9000
C
C Secondary command ALIGNMENT
400	RESULT=OPT(APPOPT)
	APPOPT=RESULT
	GOTO 9000
C
C Secondary command POSITIONING
500	RESULT=OPT(POSOPT)
	POSOPT=RESULT
	IF (SINDEX.EQ.STATE_MODIFY.OR.SINDEX.EQ.STATE_TEXT) THEN
	   MODMOD=.TRUE.		! redraw any found text or
	ENDIF				! text being constucted
	GOTO 9000
C
C Secondary command STATUS (only on VT100 compatable terminals)
600	IF (.NOT.VT100) THEN
	   CALL INFORM(MSG_NOTVT100)
	   GOTO 8900
	ENDIF
C
	RESULT=OPT(STAOPT)
	IF (DNINT .EQ. 1) THEN
	   VTFRST = .FALSE.		! now fiddled with status
	   CALL STATUS(RESULT,DINTS(1))
	ELSE
	   CALL STATUS(RESULT,VTSTTS)
	ENDIF
	STAOPT=RESULT
	GOTO 9000
C
C Secondary command POINT
700	IF (SINDEX.NE.STATE_INITIAL) GOTO 8800
	RESULT=OPT(POIOPT)
	POIOPT=RESULT
	GOTO 9000
C
C Secondary command ENDS
800	RESULT=OPT(ENDOPT)
	ENDOPT=RESULT
	GOTO 9000
C
C Secondary command IFFMAP
900	RESULT=OPT(MAPOPT)
	MAPOPT=RESULT
	GOTO 9000
C
C Secondary command TABLE
1000	IF (SINDEX.NE.STATE_INITIAL) GOTO 8800
	RESULT=OPT(TABOPT)
	TABOPT=RESULT
	GOTO 9000
C
C Secondary command GRAPHICS
1100	IF (SINDEX.NE.STATE_INITIAL) GOTO 8800
	RESULT=OPT(GRAOPT)
	GRAOPT=RESULT
	GOTO 9000
C
C Secondary command PRIMARY
1200	IF (SINDEX.NE.STATE_INITIAL) GOTO 8800
	RESULT=OPT(PRIOPT)
	PRIOPT=RESULT
	GOTO 9000
C
C Secondary command SECONDARY
1300	IF (SINDEX.NE.STATE_INITIAL) GOTO 8800
	RESULT=OPT(SECOPT)
	SECOPT=RESULT
	GOTO 9000
C
C Secondary command BITPAD
1400	IF (SINDEX.NE.STATE_INITIAL) GOTO 8800
	RESULT=OPT(BITOPT)
	BITOPT=RESULT
	GOTO 9000
C
C Secondary command DIAGNOSTICS
1500	RESULT=OPT(DIAOPT)
	DIAOPT=RESULT
	IF (GEOG_SETUP) 			! tell GCTPLIB
     &	      CALL CALLR(DIAOPT,DIAOPT,%VAL(GEOG_ADDRESSES(XGCTP_PRINT)))
	GOTO 9000
C
C Secondary command LEARNER
1600	RESULT=OPT(LEAOPT)
	LEAOPT=RESULT
	GOTO 9000
C
C Secondary command INTERPOLATION
1700	RESULT=OPT(CUROPT)
	CUROPT=RESULT
	GOTO 9000
C
C Secondary command PATTERN
1800	RESULT=OPT(PATOPT)
	PATOPT=RESULT
	GOTO 9000
C
C Secondary command THICK
1900	RESULT=OPT(THKOPT)
	THKOPT=RESULT
	FRTHKS=.NOT.THKOPT	! FRTLIB version
	GOTO 9000
C
C Secondary command HEIGHT
2000	IF (SINDEX.NE.STATE_INITIAL) GOTO 8800
	RESULT=OPT(HEIOPT)
	HEIOPT=RESULT
	GOTO 9000
C
C Secondary command ECHO
2100	RESULT=OPT(ECHOPT)
	ECHOPT=RESULT
	GOTO 9000
C
C Secondary command CONTINUE
2200	RESULT=OPT(CONOPT)
	CONOPT=RESULT
	GOTO 9000
C
C Secondary command TRACEBACK
2300	RESULT=OPT(TRAOPT)
	TRAOPT=RESULT
	GOTO 9000
C
C Secondary command MONITOR
2400	IF (SINDEX.NE.STATE_INITIAL) GOTO 8800
	RESULT=OPT(MONOPT)
	MONOPT=RESULT
	GOTO 9000
C
C Secondary command NOW
2500	RESULT=OPT(NOWOPT)
	NOWOPT=RESULT
	GOTO 9000
C
C Secondary command SORT
2600	RESULT=OPT(SRTOPT)
	SRTOPT=RESULT
C
C Free sorting memory area if no longer required
	IF (SORBLK.NE.0.AND..NOT.SRTOPT) THEN
	   I = LIB$FREE_VM_PAGE(SORBLK,SORADR)
	   IF (.NOT.I) CALL LITES2_SIGNAL(I)
	   SORBLK = 0
	ENDIF
	GOTO 9000
C
C Secondary command BALL
2700	RESULT=OPT(BALOPT)
	BALOPT=RESULT
	IF (SINDEX.NE.STATE_INITIAL) BALINI = BALINIT(BALOPT)
	GOTO 9000
C
C Secondary command BIG
2800	RESULT=OPT(BIGOPT)
	BIGOPT=RESULT
	GOTO 3010
C
C Secondary command BLINK
2900	RESULT=OPT(BNKOPT)
	BNKOPT=RESULT
3010	OCSXY(1) = CSXY(1)+1.0		! force cursor re-write
	GOTO 9000
C
C Secondary command CLEAR
3000	RESULT=OPT(CLEOPT)
	CLEOPT=RESULT
	GOTO 9000
C
C Secondary command SEGMENTS
3100	RESULT=OPT(SEGOPT)
	SEGOPT=RESULT
	IF (TSTSEG()) THEN
	   UPDATE_SEG = .TRUE.
	   NEW_USESEG = SEGOPT
	ENDIF
	GOTO 9000
C
C Secondary command EXIT
3200	RESULT=OPT(EXIOPT)
	EXIOPT=RESULT
	GOTO 9000
C
C Secondary command NARROW
3300	RESULT=OPT(NAROPT)
	NAROPT=RESULT
	GOTO 9000
C
C Secondary command SUBSTITUTION
3400	RESULT=OPT(SUBOPT)
	SUBOPT=RESULT
	GOTO 9000
C
C Secondary command BRIEF
3500	RESULT=OPT(BRIOPT)
	BRIOPT=RESULT
	GOTO 9000
C
C Secondary command VERIFY
3600	RESULT=OPT(VEROPT)
	VEROPT=RESULT
	GOTO 9000
C
C Secondary command AND
3700	RESULT=OPT(ANDOPT)
	CHASEL = ANDOPT.NEQV.RESULT
	ANDOPT=RESULT
	IF (ANDOPT.AND.MRSEL) THEN	! can't find anything!
	   CALL PING
	   CALL INFORM(MSG_MRSELWARN)
	   CALL INFORM(MSG_MRSELWARN1)
	ENDIF
	GOTO 9000
C
C Secondary command SCRUB
3800	RESULT=OPT(SCBOPT)
	SCBOPT=RESULT
	GOTO 9000
C
C Secondary command INFORM
3900	RESULT=OPT(INFOPT)
	INFOPT=RESULT
	GOTO 9000
C
C Secondary command COMPOSITE
4000	IF (.NOT.LICENSED(LOCK_COMPOSITE)) GOTO 8900
	IF (SINDEX.NE.STATE_INITIAL) GOTO 8800
	RESULT=OPT(COMOPT)
	COMOPT=RESULT
	GOTO 9000
C
C Secondary command SCREENMENU
4100	RESULT=OPT(SCROPT)
	SCROPT=RESULT
	IF (SINDEX.NE.STATE_INITIAL) SCRINI = SCRINIT(SCROPT)
	GOTO 9000
C
C Secondary command FLAGS
4200	RESULT=OPT(EDTOPT)
	EDTOPT=RESULT
	IF(.NOT.EDTOPT) THEN
	   IF (DATOPT) THEN
	     DATOPT = .FALSE.
	     CALL INFORM(MSG_DATDISAB)
           ENDIF
	ENDIF
	CHASEL = .TRUE.			!what is relevant may change
	GOTO 9000
C
C Secondary command HWTEXT
4300	RESULT=OPT(HWTOPT)
	HWTOPT=RESULT
	GOTO 9000
C
C secondary command DATE
4400    RESULT=OPT(DATOPT)
	IF (RESULT)THEN
	  IF (.NOT.EDTOPT) THEN
	     CALL MOAN(MSG_CMDNEEDSFLG)
	     GOTO 8900
	  ENDIF
	ENDIF
C
C optional argument for ac number
	IF (DNINT .EQ. 1) THEN
	   ACEDTP = DINTS(1)
	ENDIF
C
	DATOPT=RESULT
	GOTO 9000
C
C Secondary command DESCRIPTOR
4500	RESULT=OPT(DESOPT)
	DESOPT=RESULT
	GOTO 9000
C
C Secondary command BUTTON
4600	RESULT=OPT(BUTOPT)
	BUTOPT=RESULT
	IF (SINDEX.NE.STATE_INITIAL) BUTINI = BUTINIT(BUTOPT)
	GOTO 9000
C
C Secondary command BELL
4700	RESULT=OPT(BELOPT)
	BELOPT=RESULT
	GOTO 9000
C
C Secondary command FIXED
4800	RESULT=OPT(FIXOPT)
	FIXOPT=RESULT
	GOTO 9000
C
C Secondary command Z
4900	IF (.NOT.LICENSED(LOCK_Z)) GOTO 8900
	IF (SINDEX.NE.STATE_INITIAL.AND.SINDEX.NE.STATE_READY) GOTO 8800
	RESULT=OPT(ZOPT)
	ZOPT=RESULT
	GOTO 9000
C
C Secondary command SD (DSR)
5000	RESULT=OPT(DSROPT)
	DSROPT=RESULT
	IF (SINDEX.NE.STATE_INITIAL) DSRINI = DSRINIT(DSROPT)
	GOTO 9000
C
C Secondary command SI (KRISS)
5100	CONTINUE
C
C get tertiary command
	DPRIN = 0	! no tertiary command
	IF (DSTRL.GT.0) THEN
	   CALL GET_COMMAND(DSTR(:DSTRL),ENABLE_KRISS_CMD_TABLE)
	   IF (MOANED) GOTO 8900
	ENDIF
	RESULT=OPT(KRSOPT)
	IF (DPRIN.NE.0) THEN
	   CALL KRSINIT(RESULT,DPRIN)
	   GOTO 9999
	ENDIF
	KRSOPT=RESULT
	IF (SINDEX.NE.STATE_INITIAL) KRSINI = KRSINIT(KRSOPT,0)
	CALL VTSTAT	! just in case need new KRISS status
	GOTO 9000
C
C Secondary command BOX
5200	RESULT=OPT(BOXOPT)
	BOXOPT=RESULT
	GOTO 9000
C
C Secondary command VECTOR
5300	RESULT=OPT(VECOPT)
	VECOPT=RESULT
	GOTO 9000
C
C Secondary command BLANK
5400	IF (DNINT.GT.0) THEN		! store colour value if valid
	   IF (DINTS(1).LT.0) THEN
	      CALL MOAN(MSG_NEGARGS)
	      GOTO 8900
	   ELSE
	      BLANK_COL = DINTS(1)
	   ENDIF
	ENDIF
	RESULT=OPT(BLAOPT)
	BLAOPT=RESULT
	GOTO 9000
C
C Secondary command IFFLOCK
5500	RESULT=OPT(LOKOPT)
	LOKOPT=RESULT
	GOTO 9000
C
C Secondary command CHECKS
5600	RESULT=OPT(CHKOPT)
	CHKOPT=RESULT
	GOTO 9000
C
C Secondary command SAME
5700	RESULT=OPT(SAMOPT)
	SAMOPT=RESULT
	GOTO 9000
C
C Secondary command ENCLOSING
5800	IF (SINDEX.NE.STATE_INITIAL) GOTO 8800
	RESULT=OPT(ENCOPT)
	IF (.NOT.INIT_SCAN_MEM(RESULT)) THEN
	   ENCOPT = .FALSE.
	   GOTO 8900
	ENDIF
	ENCOPT=RESULT
	GOTO 9000
C
C Secondary command MESSAGE
5900	RESULT=OPT(MESOPT)
	MESOPT=RESULT
	GOTO 9000
C
C Secondary command FILL
6000	RESULT=OPT(FILOPT)
	FILOPT=RESULT
	GOTO 9000
C
C command not valid in state... exit
8800	CALL MSGCMD(MOAN,MSG_CMDNOTVALID)
C
C error exit
8900	CALL IGNCMD
	GOTO 9999
C
C success exit
9000	IF (LEAOPT.AND.FLIP)
     &	   CALL LEARN(MSG_STRING,DSEC(1:DSECL)//' now '//ONOFF(RESULT))
C
9999	RETURN
	END
