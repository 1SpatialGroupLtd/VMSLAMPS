	SUBROUTINE TRNFLN
C
***	IDENT	21NO89
***	MODULE	TRNFLN
C
C	Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C	Created					RWR	23-Jan-1985
C
C Description
C
C	To build the terminal specific names
C
	IMPLICIT NONE
C
	INCLUDE '($SSDEF)'
***	PARAMETER/CMN:MOANMESS/
C
***     COMMON/CMN:SAVFLE/
***	COMMON/CMN:WORKS/
C
C Functions called
	INTEGER*4	TRNALL
	INTEGER*4	LIB$SKPC
	INTEGER*4	LIB$FIND_FILE
	INTEGER*4	SIGCHS
	INTEGER		EXPAND
C
C Local Variables
	INTEGER*4	I,J		! indices into string
	INTEGER*4	IERR		! error code
	CHARACTER*(80)	TEMP
C
	SETUPF=.TRUE.	! assume setup file exists
C
C try to translate LOGTERM - the user selected terminal name
C
	IERR = TRNALL(LOGTERM,WSNAM)
	IF (IERR.EQ.SS$_NORMAL) GOTO 10
C
C translate 'SYS$COMMAND'
C
	IERR = TRNALL('SYS$COMMAND',WSNAM)
	IF (IERR.NE.SS$_NORMAL) THEN
	   CALL NASTY(MSG_FLDTOTRANS,'SYS$COMMAND')
	   CALL COLAPS(MSG_FLDTOTRANS,IERR)   
	   SETUPF=.FALSE.
	ENDIF
C
   10	CONTINUE
	WSFEXS=SETUPF			! no chance of w/s init file!
	USEFUN=.FALSE.			! don't use decode function
C
C if all ok, find first non underline, and position of ":"
C
	IF (SETUPF) THEN
	   I=LIB$SKPC('_',WSNAM)
	   J=INDEX(WSNAM,':')
	   IF (J.EQ.0) J=SIGCHS(WSNAM)+1
	   WSNAM=WSNAM(I:J-1)
	   WSNAML=SIGCHS(WSNAM)
C
C	   and form file names
C
	   OTRFLE=STUDIR//':'//WSNAM(1:WSNAML)//STUEXT
	   WSIFLE=WSFDIR//':'//WSNAM(1:WSNAML)//WSFEXT
	   JOUFLE=JOUDIR//':'//WSNAM(1:WSNAML)//JOUEXT
	   JL=SIGCHS(JOUFLE)
	   PROBFLE=PROBDIR//':'//WSNAM(1:WSNAML)//PROBEXT
C
C now find if w/s initialisation file exists
C
	   I=0				! clear context
	   IF (LIB$FIND_FILE(WSIFLE,TEMP,I)) THEN
	      WSFEXS=.TRUE.
	   ELSE
	      WSFEXS=.FALSE.
	   ENDIF
	   CALL LIB$FIND_FILE_END(I)
	ENDIF
C
	SETUPS = SETUPF		! save copy of SETUPF for RESTORE
C
C form names of auxiliary input lines
C these take the form LSL$LITES2AUX,
C                     LSL$LITES2AUX_2 etc
C
	AUX_NAME_LEN(1) = EXPAND('%WS%S',AUX_NAME(1),AUX_INPUT_LOG)
	DO 20, I = 2,AUX_LINES
	   AUX_NAME_LEN(I) = EXPAND('%WS%S%N',AUX_NAME(I),
     &	                            AUX_INPUT_LOG//'_',I)
   20	CONTINUE
C
C these are active (at the moment), if they logically translate
	DO 30, I = 1,AUX_LINES
	   IF (TRNALL(AUX_NAME(I)(1:AUX_NAME_LEN(I)),TEMP)) THEN
	      AUX_ACTIVE(I) = .TRUE.
	   ENDIF
   30	CONTINUE
	RETURN
	END
