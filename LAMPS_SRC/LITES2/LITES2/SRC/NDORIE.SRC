C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1996-05-09 11:54:02.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL FUNCTION NDORIE
C
***	MODULE	NDORIE
***	IDENT	09MY96
C
C Copyright Laser Scan Laboratories Ltd., Cambridge, England.
C
C Author  Ron Russell			 3-Feb-1986
C
C To write out a feature that has been oriented
C
	IMPLICIT NONE
C
	INCLUDE 'LSL$CMNIFF:CB.STR'
***	PARAMETER/CMN:AUXDEF/
***	PARAMETER/CMN:EFNLUN/
***	PARAMETER/CMN:MOANMESS/
***	PARAMETER/CMN:PACK/
C
***	COMMON/CMN:CSTRCT/
***	COMMON/CMN:DEFINE/
***	COMMON/CMN:MAPS/
***	COMMON/CMN:MASTER/
***	COMMON/CMN:OIIH/
***	COMMON/CMN:ORIENT/
***	COMMON/CMN:STRIKE/
***	COMMON/CMN:VARIAT/		! variations for CHANGE
C
C
C functions 
C
	LOGICAL		CHANGE,STRTFT
	INTEGER		GENNF
C
C w/s
C
	INTEGER		I
	INTEGER		V1
	INTEGER*2	FS(4)
	REAL		X,Y
	INTEGER		OPER
	INTEGER		NATT
	LOGICAL		FAR_MOVE
	REAL		DX,DY
C
	NDORIE = .TRUE.				! assume failure
	FAR_MOVE = .FALSE.
C
C is map read only?
C
	IF (MAPRO(IHPAK(PAKMAP))) THEN
	   CALL MOAN(MSG_MAPREADONLY,IHPAK(PAKMAP)+1)
	   GOTO 999
	ENDIF
C
C
	OPER = DEFINITION(P_TRANSFORM)
	IF (OPER.EQ.0) OPER = DEFINITION(P_OTHER)
C
C copy header data from feature in hand into COI variables
C
	CALL CPYPAK(PAKLEN,IHPAK,COIPAK)
	COIPAK(PAKFLG)=0			! not deleted pack
	COIPAK(PAKSEG)=0			! need new segment
C
	FS(1)=COIPAK(PAKFC)
	FS(2)=IHFS(2)
	FS(3)=IHFS(3)
	FS(4)=IHFS(4)
C
C generate an FSN
C
	COIPAK(PAKFSN)=GENNF(COIPAK)
C
C put the original feature into limbo
C
	LIMBO = .TRUE.			! put into limbo
	IF (CHANGE(IHPAK)) THEN		! change the object in hand
	   CALL NOCHAN			! failed, so cancel change
	   GOTO 999
	ENDIF
C
C start the feature
C
	FLG_GEOCHANGE = .TRUE.
	IF (STRTFT(IHPAK,IHTC,FS,IHAC,IHTH)) GOTO 999
C
C  transform and output ST entries
C
	V1=1				! start at first vertex
   10	CONTINUE
	CALL GETVRT(IHPAK,V1,IHLST)	! get a load of vertices
C
C orient and output them
C
	DO 30, I=1,RITOP
	   X=RIXY(1,I)
	   Y=RIXY(2,I)
	   RIXY(1,I)=AFACTOR*X-BFACTOR*Y+CONST1
	   RIXY(2,I)=BFACTOR*X+AFACTOR*Y+CONST2
	   IF (DEFINITION(P_FAR_MOVE) .GT. 0) THEN
	      DX = X - RIXY(1,I)
	      DY = Y - RIXY(2,I)
	      FAR_MOVE = (DX**2 + DY**2) .GT. FAR_MOVE_IFF**2
	   ENDIF
	   IF ((RIFLG(I).AND.1).EQ.0) THEN	! pen up
	      CALL FLUSH(1)
	      OIENDS=0
	   ENDIF
	   NATT = RINATT
	   CALL LSTARR(OPER,NATT,RIATTC,RIATTV(1,I),.TRUE.)
	   IF (FAR_MOVE)
     &	      CALL LSTARR(DEFINITION(P_FAR_MOVE),NATT,
     &	                  RIATTC,RIATTV(1,I),.TRUE.)
	   CALL ADCORD(RIXY(1,I),NATT,RIATTC,RIATTV(1,I))
   30	CONTINUE
C
C all done?
C
	V1=V1+RITOP
	IF (V1.LE.IHLST) GOTO 10
C
C end the feature
C
	CALL ENDFT
C
	NDORIE = .FALSE.
C
999	RETURN
	END
