	LOGICAL FUNCTION NXTITM
C
***	MODULE	NXTITM
***	IDENT	22FE89
C
C Copyright Laser Scan Laboratories Ltd., Cambridge, England.
C Author: Clarke Brunt
C based on that in LITES1 by R. Fairbairns
C
C To make the 'next item' the found item after a find command
C
C Function result is FALSE if there is a next item to look at
C
	IMPLICIT NONE
C
	INCLUDE	'LSL$CMNIFF:CB.STR'
***	PARAMETER/CMN:ACS/
***	PARAMETER/CMN:AUXDEF/
***	PARAMETER/CMN:CTXS/
***	PARAMETER/CMN:EFNLUN/
***	PARAMETER/CMN:MOANMESS/
***	PARAMETER/CMN:PACK/
C
***	COMMON/CMN:ACS/
***	COMMON/CMN:CTXS/
***	COMMON/LSL$CMNFRT:FRTCOM/
***	COMMON/CMN:LAYERS/
***	COMMON/CMN:MAPS/
***	COMMON/CMN:MASTER/
***	COMMON/CMN:OPTION/
***	COMMON/CMN:RFCTRL/
***	COMMON/CMN:STRIKE/
C
C function called
	LOGICAL	PLANE
C
C workspace
	INTEGER	I
	REAL	TMP1,TMP2
	INTEGER	TMP1I,TMP2I
	EQUIVALENCE (TMP1,TMP1I),(TMP2,TMP2I)
	REAL	XY(2,3)
	INTEGER	Z(3)
C
C if this is a second call, and there's only one item found,
C  reject the call
	NXTITM = .TRUE.
	IF (HITITE.NE.0.AND.HITITC.EQ.1) GOTO 999
C
C step to 'next' hit item
	HITITE = HITITE+1
	IF (HITITE.GT.HITITC) HITITE = 1
C
	NXTITM = .FALSE.
	HITITP = QUORD(HITITE)
C
	IF (ROLING.AND.FNDMDE.EQ.1) THEN		! intersect
	   FOCXY(1) = OBJCXY(1,HITITP)			! cursor
	   FOCXY(2) = OBJCXY(2,HITITP)
	   CALL PUTLNG(OBJCXY(3,HITITP),FOCXY(3))
	   FOVRT = OBJPAK(PAKVRT,HITITP)		! vertex number
	   FONVRT = OBJNVT(HITITP)			! on vertex?
	   CALL HAULIN(0)				! adjust
	   IF (VEROPT.AND.VERFEA) THEN
	      CALL INFORM(MSG_VERINT,
     &	                OBJPAK(PAKFSN,HITITP),
     &			OBJPAK(PAKMAP,HITITP)+1,
     &			OBJPAK(PAKFC,HITITP),
     &			OVNOS(OBJPAK(PAKOVL,HITITP)) )
	   ENDIF
	   GOTO 900
	ENDIF
C
C get the vertices in
	CALL HAULIN(HITITP)
C
C verify the object
	IF (VEROPT.AND.VERFEA) THEN
	   CALL VRFEAT
C
C for text features, give more information
	   IF (FOPAK(PAKGT).EQ.TEXTYP) THEN
	      CALL VERFCTX(FTRCTXD,VERTXT)
	   ENDIF
	ENDIF
C
C verify AC's and TC's
	IF (VEROPT.AND.VERAC) THEN
	   CALL GETAC(FOPAK,FOTC,FOAC)
	   CALL VERFAC(FTRACD)		! verify them
	ENDIF
C
C Position the cursor
900	IF (JOINNG) THEN		! target for join or tie
	   JOIFST = (FOVRT.EQ.1)	! join to first? or last?
	   CSXY(1) = (FOCXY(1)+IHXY(1,IHVRT-IHVO))/2.0
	   CSXY(2) = (FOCXY(2)+IHXY(2,IHVRT-IHVO))/2.0
C
C why not use IHCXY? - As I don't Know, I will use IHCXY(3) for Z
C as I don't have point attributes for entry in hand. RWR 27-Jan-1989
C
C set Z, if required and possible
	   IF (ZOPT) THEN
	      CALL PUTLNG(FOCXY(3),TMP1)
	      CALL PUTLNG(IHCXY(3),TMP2)
	      IF (TMP1I.EQ.IFF_ABSENT.AND.TMP2I.EQ.IFF_ABSENT) THEN
	         CSZI = IFF_ABSENT
	      ELSEIF (TMP1I.EQ.IFF_ABSENT) THEN
	         CSZI = TMP2I
	      ELSEIF (TMP2I.EQ.IFF_ABSENT) THEN
	         CSZI = TMP1I
	      ELSE
	         CSXY(3) = (TMP1 + TMP2)/2.0
	      ENDIF
C
C set up planes for forcing
	      XY(1,1) = FOCXY(1)
	      XY(2,1) = FOCXY(2)
	      Z(1) = FOCZI
	      XY(1,2) = IHCXY(1)
	      XY(2,2) = IHCXY(2)
	      Z(2) = IHCZI
	      XY(1,3) = XY(1,1)
	      XY(2,3) = XY(2,1)
	      Z(3) = Z(1)
	      FORCE_C_SETUP = PLANE(XY,Z,FORCE_COEFFS)
	      IF (CSZI.NE.IFF_ABSENT) THEN
	         FORCE_H_SETUP = .TRUE.
	         FORCE_HEIGHT = CSXY(3)
	      ENDIF
	   ELSE
	      CSZI = IFF_ABSENT
	   ENDIF
C
C set up second half of rubber band
	   RUBCHG = .TRUE.
	   RUBLIN(2) = .TRUE.
	   I = 2
	   IF (.NOT.JOIFST) I = FOVRT-FOVO-1
	   RUBARR(1,2) = FOXY(1,I)
	   RUBARR(2,2) = FOXY(2,I)
	ELSE
	   CSXY(1) = FOCXY(1)
	   CSXY(2) = FOCXY(2)
	   CALL PUTLNG(FOCXY(3),TMP1)
	   IF (TMP1I.NE.IFF_ABSENT) CSXY(3) = TMP1
	   FONLIN = .TRUE.		! cursor on feature
	ENDIF
	POSCMD=.TRUE.
C
999	CONTINUE
	RETURN
	END
