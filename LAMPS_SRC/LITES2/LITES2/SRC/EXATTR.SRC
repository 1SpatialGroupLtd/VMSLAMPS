C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1996-05-09 11:54:58.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE EXATTR
C
***	IDENT	09MY96
***	MODULE	EXATTR
C
C	Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C	Created					RWR	 7-Dec-1987
C
C Description
C
C	LITES2 cartographic editor EXAMINE ATTRIBUTE command.
C
	IMPLICIT NONE
C
	INCLUDE	'LSL$CMNIFF:CB.STR'
***	PARAMETER/CMN:AUXDEF/
***	PARAMETER/CMN:MOANMESS/
***	PARAMETER/CMN:PACK/
C
***	COMMON/CMN:DOUT/
***	COMMON/LSL$CMNFRT:FRTACD/
***	COMMON/LSL$CMNFRT:FRTCOM/
***	COMMON/CMN:STRIKE/
C
C functions called
	INTEGER		EXPAND
	LOGICAL		ATTDECOD
C
C Local Variables
	CHARACTER*80	STRNG
	INTEGER		SLEN
	INTEGER		ACTYPE		! the attribute number
	INTEGER		OUTSTR_L	! the length of the string
	CHARACTER*1	OUTSTR		! the output string
	INTEGER		ACVALUE		! the value (as an integer)
	LOGICAL		GOT_VALUE
	INTEGER		I
	LOGICAL		HAD_OUTPUT
	CHARACTER*(ACD_FORMAT_MAX+2) F	! format for error message
	INTEGER		F_LEN		! its length
C
C is there a "rest of line" argument
	IF (DSTRL.GT.0) THEN
C
C decode the ACD type; don't want value
	   IF (.NOT.ATTDECOD(DSTR(1:DSTRL),ACTYPE,OUTSTR_L,OUTSTR,
     &	                 ACVALUE,.FALSE.,GOT_VALUE)) GOTO 998
C
C don't want value
	   IF (GOT_VALUE) THEN
	      CALL MOAN(MSG_VALNOTREQD)
	      GOTO 998
	   ENDIF
	ENDIF
C
	HAD_OUTPUT = .FALSE.
C
C look at all attributes
	DO 100, I = 1,FONATT
	   STRNG = ' '					! empty string
	   IF (DSTRL.EQ.0.OR.FOATTC(I).EQ.ACTYPE) THEN
C
C absent value?
	      IF (FOATTV(I,FOVRT-FOVO).EQ.IFF_ABSENT) GOTO 100
C
C fill ACD common block
	      CALL ACDFND(FOATTC(I),.FALSE.)
C
C get format
	      IF (ACD_DATA_TYPE.EQ.ACD_DATATYPE_C) THEN
	         F     = '"'//ACD_FORMAT(1:ACD_FORMAT_LEN)//'"'
	         F_LEN = ACD_FORMAT_LEN + 2
	      ELSE
	         F     = ACD_FORMAT(1:ACD_FORMAT_LEN)
	         F_LEN = ACD_FORMAT_LEN
	      ENDIF
C
C fill in name or number of attribute
	      IF (ACD_CODE.EQ.-1) THEN
	         CALL EXPAND('%WS(%N)',STRNG,FOATTC(I))
	      ELSE
	         CALL EXPAND('%WS%S',STRNG,ACD_NAME(1:ACD_NAME_LEN))
	      ENDIF
C
C and the value
	      SLEN = EXPAND('%WS'//F(1:F_LEN),
     &	                     STRNG(ACD_NAME_MAX+1:),FOATTV(I,FOVRT-FOVO))
	      SLEN = SLEN + ACD_NAME_MAX
	      CALL INFORM(MSG_STRING,'       '//STRNG(1:SLEN))
	      HAD_OUTPUT = .TRUE.
	   ENDIF
100	CONTINUE
C
C nothing to output?
	IF (.NOT.HAD_OUTPUT) THEN
	   IF (DSTRL.GT.0) THEN
	      IF (ACD_CODE.EQ.-1) THEN
	         SLEN = EXPAND(
     &	              '%WSAttribute %N not present at this point',
     &	               STRNG,ACTYPE)
	      ELSE
	         SLEN = EXPAND(
     &	              '%WSAttribute %S not present at this point',
     &	               STRNG,ACD_NAME(1:ACD_NAME_LEN))
	      ENDIF
	   ELSE
	      SLEN = EXPAND('%WSNo attributes present at this point',
     &	               STRNG)
	   ENDIF
	   CALL INFORM(MSG_STRING,STRNG(1:SLEN))
	ENDIF
C
	GOTO 999
C
C
998	CONTINUE
	CALL IGNCMD
C
999	CONTINUE
	RETURN
	END
