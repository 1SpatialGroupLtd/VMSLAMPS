C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1996-05-10 10:26:08.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
        SUBROUTINE DISPLAY_CREATE(DISP)
C
***     IDENT   10MY96
***     MODULE  DISPLAY_CREATE
C
C       Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C       Written                                 CCB	4-Apr-1989
C
C	Create a GKS display
C
        IMPLICIT NONE
C
***     PARAMETER/CMN:GKSPAR/
***     PARAMETER/CMN:MOANMESS/
C
***     COMMON/CMN:DRAWIN/
***     COMMON/CMN:OVERLAY/
C
C argument
	INTEGER	DISP
C
C Local Variables
	INTEGER		ERRIND,DCUNIT
C
	CALL DISPLAY_SPECIFY(DISP)
C 
C create the display using GKS (cf code in INIGKS)
	CALL GOPWK(DISP,1,DISPLAY_WTYPE(DISP))
C
C INIWK (if needed) may need amending
CCC	CALL INIWK(DISP) ! device dependent initialistation
C
C set the deferral state
	CALL GSDS(DISP,GASTI,GSUPPD)
C
C set polyline representation 1, solid, normal thickness, colour 1
C only relevant for any BUNDLED attribtues
	CALL GSPLR(DISP,1,1,1.0,1)
C
C inquire maximum display surface
	CALL GQMDS(DISPLAY_WTYPE(DISP),
     &	  ERRIND,DCUNIT,DISPLAY_SIZX(DISP),DISPLAY_SIZY(DISP),
     &	                DISPLAY_RASX(DISP),DISPLAY_RASY(DISP))
C
C set workstation window to be the entire map
	CALL GSWKWN(DISP,0.0,NDCX*WFACX,0.0,NDCY*WFACY)
C
C and workstation viewport to be whole screen
	CALL GSWKVP(DISP,0.0,DISPLAY_SIZX(DISP),0.0,DISPLAY_SIZY(DISP))
C
	RETURN
        END
