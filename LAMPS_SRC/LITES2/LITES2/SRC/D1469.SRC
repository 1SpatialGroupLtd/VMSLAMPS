	SUBROUTINE D1469
C
***	MODULE	D1469
***	IDENT	06MR89
C
	IMPLICIT NONE
C
C Created by Alan Wylie 5-Feb-1980
C From the Ordnance Survey CORAL66 squaring program
C
C Recompute end points of all line segments
C 1) Zeroise pointer to first line in subunit of figure
C 2) For each entry in the line array:-
C      Copy over the 3 line equation coefficients for the geometry
C      routines (to A1,A2,A3)
C      Unless the line segment indicated is an invisible L.S.,or
C      the last for the feature,copy over the 3 coeffs for the
C      following segment (to B1,B2,B3),compute the meeting point of
C      the 2 lines,and store back in the work area to replace the
C      original intersection.
C      Otherwise call D1469A to recompute the point of closure for
C      closed features/subunits,D1469B to recompose the 2 end points
C      for open features/subunits. If in mid feature,step the pointer
C      over the invisible line segment and reset the pointer to
C      "first line in subunit" to current line segment
C
***	COMMON/CMN:D14IFC/
***	COMMON/CMN:D14CMN/
C
	INTEGER D14MET
	LOGICAL D14PRL
	INTEGER TWAPTR
C
C functions
	LOGICAL	D14CLO
C
	FIRST14=0
	TWAPTR=0
C Start of do loop
5	CONTINUE
	   A1=COEFA1(TWAPTR)
	   A2=COEFA2(TWAPTR)
	   A3=COEFA3(TWAPTR)
	   IF (.NOT.(TWAPTR.LT.D14NPT-2
     &		     .AND.LILEN(TWAPTR+1).GT.0)) GOTO 30
	      IF ((STATUS(TWAPTR+1).AND.8).NE.0) GOTO 20
		 B1=COEFA1(TWAPTR+1)
		 B2=COEFA2(TWAPTR+1)
		 B3=COEFA3(TWAPTR+1)
C
C if coefficients have been set up
	         IF ((A1.NE.0.0.OR.A2.NE.0.0).AND.
     &	             (B1.NE.0.0.OR.B2.NE.0.0)) THEN
C
C and lines are not parallel
	            IF (.NOT.D14PRL(A1,A2,B1,B2,SQPL)) THEN
C
C and they intersect
	               IF (D14MET().EQ.0) THEN
C
C this is intersection point
	                  D14WRK(X,TWAPTR+1)=X4
	                  D14WRK(Y,TWAPTR+1)=Y4
	               ENDIF
	            ENDIF
	         ENDIF
20	      CONTINUE
	      GOTO 80
30	   CONTINUE
	      IF (D14CLO(TWAPTR+1,FIRST14)) THEN
	         IF ((STATUS(TWAPTR+1).AND.8).NE.0) GOTO 20
	         CALL D1469A(TWAPTR)
	      ELSE
	         CALL D1469B(TWAPTR)
	      ENDIF
C
	      D14WRK(X,FIRST14)=X4
	      D14WRK(Y,FIRST14)=Y4
C
	      IF (.NOT.(TWAPTR.LT.D14NPT-2)) GOTO 60
		 TWAPTR=TWAPTR+1
		 FIRST14=TWAPTR+1
60	      CONTINUE
70	   CONTINUE
C End of do loop
80	TWAPTR=TWAPTR+1
	IF (TWAPTR.LE.D14NPT-2) GOTO 5
C
	RETURN
	END
