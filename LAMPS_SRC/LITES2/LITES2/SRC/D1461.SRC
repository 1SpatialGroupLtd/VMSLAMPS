C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1988-07-12 12:02:48.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE D1461
C
***	MODULE	D1461
***	IDENT	12JL88
C
	IMPLICIT NONE
C
C Created by Alan Wylie 5-Feb-1980
C From the Ordnance Survey CORAL66 squaring program
C
C Check co-ordinates for invisible line segments
C 1) Copy first digitised co-ordinates into stores (X2,Y2) for
C     geometry routines
C 2) For each subsequent digitised point input:-
C	copy (X2,Y2) to (X1,Y1)
C	transfer over current point as (X2,Y2)
C	call D1462 to check for length of line and invisibles
C 3) Call D1463 to run squaring process
C
C now uses D14INV instead of call to D14B8
C
***	COMMON/CMN:D14IFC/
***	COMMON/CMN:D14CMN/
***	COMMON/CMN:OPTION/
C
	INTEGER TWAPTR
C
	NDONE = 0		! no lines of feature squared yet
	X2=D14WRK(X,0)
	Y2=D14WRK(Y,0)
	DO 20 TWAPTR=0,D14NPT-2
	   X1=X2
	   Y1=Y2
	   X2=D14WRK(X,TWAPTR+1)
	   Y2=D14WRK(Y,TWAPTR+1)
	   CALL D1462(TWAPTR)	! check for short or invisible
C
C mark the intersection of two short lines as fixed
C (2 IF statments to avoid array access problems)
	   IF (FIXOPT.AND.TWAPTR.GE.1) THEN
	      IF (LILEN(TWAPTR-1).LT.SQLEN.AND.
     &	          LILEN(TWAPTR).LT.SQLEN) THEN
	         STATUS(TWAPTR) = STATUS(TWAPTR).OR.8
	      ENDIF
	   ENDIF
C
C is this point fixed? - if so, set bits 4 and 5 of status word
	   IF (FIXOPT.AND.D14FXD(TWAPTR))
     &	      STATUS(TWAPTR) = STATUS(TWAPTR).OR.24
20	CONTINUE
C
C is last point fixed?
	IF (FIXOPT.AND.D14FXD(D14NPT-1))
     &	      STATUS(D14NPT-1) = STATUS(D14NPT-1).OR.24
C
	CALL D1463	! run squaring process
C
	RETURN
	END
