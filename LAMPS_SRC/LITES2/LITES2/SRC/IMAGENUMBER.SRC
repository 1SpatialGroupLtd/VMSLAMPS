C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1994-09-21 11:46:26.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	INTEGER FUNCTION IMAGENUMBER(PIX)
C
***	IDENT	21SE94
***	MODULE	IMAGENUMBER
C
C	Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C	Created					CCB	13-Oct-1988
C
C Which selected image is the cursor in (0 if none)
C
	IMPLICIT NONE
C
***	PARAMETER/CMN:EFNLUN/
***	COMMON/CMN:IMAGE/
***	COMMON/CMN:MAPS/
***	COMMON/CMN:MASTER/
***	COMMON/CMN:SETUP/
***	COMMON/CMN:WORKS/
C
C arguments
	INTEGER	PIX(2)		! pixel number
C
C workspace
	INTEGER	IM
	REAL	TXY(2)
C
C if IMAGE SETUP used, then transform cursor position to the actual
C coordinate system in use on the screen
	TXY(1) = CSXY(1)
	TXY(2) = CSXY(2)
	IF (SETUP) CALL TRNUSE(TXY(1),TXY(2),SETCOF,SET_TRANSFORM)
C
C For each possible image (in reverse order) ...
	DO 100 IM=MAXIMAGE,1,-1
	   IF (IMAGE_TYPE(IM).EQ.0) GOTO 100	! doesn't exist
	   IF (.NOT.IMSEL(IM)) GOTO 100		! not selected
C
C get required pixel
	   PIX(1) =
     &		NINT((TXY(1)+LITES2ORG(1)-IMAGE_ORIGIN(1,IM))/
     &			IMAGE_PIXELSIZE(1,IM)) + 1
	   PIX(2) =
     &		NINT((TXY(2)+LITES2ORG(2)-IMAGE_ORIGIN(2,IM))/
     &			IMAGE_PIXELSIZE(2,IM)) + 1
C
C check if within image
	   IF (PIX(1).LE.0.OR.PIX(1).GT.IMAGE_COLUMNS(IM)) GOTO 100
	   IF (PIX(2).LE.0.OR.PIX(2).GT.IMAGE_ROWS(IM)) GOTO 100
	   GOTO 1000
100	CONTINUE	! end of images
	IM = 0		! not in any
C
1000	IMAGENUMBER = IM
	RETURN
	END
