	SUBROUTINE DIGEDGE(SETUP_SET,CPTS,ABORT,EXSTSU)
C
***	IDENT	10MY96
***	MODULE	DIGEDGE
C
C	Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C	Created					RWR	 8-Feb-1985
C
C Description
C
C	Subroutine to do edge type setup, and to return corner points
C	of map
C
	IMPLICIT NONE
C
C Arguments
C
	INTEGER*4	SETUP_SET
	REAL		CPTS(4,4)	! corner point values as follows
					! x1,y1,x2,y2 NW
					! x1,y1,x2,y2 SW
					! x1,y1,x2,y2 SE
					! x1,y1,x2,y2 NE  where
					! x1,y1 are digitiser coords
					! x2,y2 are coords from IFF file
	LOGICAL		ABORT		! flag for abort
	LOGICAL		EXSTSU		! flag to use existing set up
C
C Included Parameter Files
C
***     PARAMETER/CMN:EFNLUN/		! event flags and luns
***	PARAMETER/CMN:MACMEN/
***     PARAMETER/CMN:MOANMESS/		! moan constants
C
C Common Blocks
C
***     COMMON/CMN:MAPS/		! all about the maps
***	COMMON/CMN:OPTION/
***	COMMON/CMN:OTRANS/
***	COMMON/CMN:PTOLERANCE/
C
C Local Variables
C
	INTEGER		SET		! counter
	INTEGER		I,J		! counters
	REAL	  	CPXY(2,4,2*MAX_EDGE_SET) ! computed corners
	INTEGER		COLUMN(MAX_EDGE_SET)
	INTEGER		COL1,COL2,COL3,COL4,COL5	! counters
	INTEGER		OK_COUNT
	INTEGER		INDEX
	REAL		MIN_DIFF
C
C note: maximum number of possible combinations of results is
C       ((2*MAX_EDGE_SET)!)/(MAX_EDGE_SET!*MAX_EDGE_SET!)
C
	INTEGER		EDGE_ARRAY_SIZE
	PARAMETER	(EDGE_ARRAY_SIZE=252)	
C
	INTEGER		ENTRY(EDGE_ARRAY_SIZE)
	REAL		SDIFFS(EDGE_ARRAY_SIZE)
C
C check that values used for setup are reasonable - already checked
C
	IF (EDGE_POINT.GT.MAX_EDGE_POINT	! number of points/edge
     &	    .OR.EDGE_POINT.LT.2
     &	    .OR.EDGE_SET.GT.MAX_EDGE_SET	! number of SETs
     &	    .OR.EDGE_SET.LT.1) THEN	! ok cont
	   CALL NASTY(MSG_INPVALUES,'EDGESETUP')
	   CALL COLAPS(MSG_INPVALUES)		! go into debug
	   ABORT=.TRUE.				! allow to continue
	   GOTO 999				! with no map setup
C
C check that corner points define a rectangular area
C
	ELSEIF((CPTS(3,4)-CPTS(3,1)).NE.(CPTS(3,3)-CPTS(3,2)).OR.
     &	       (CPTS(4,1)-CPTS(4,2)).NE.(CPTS(4,4)-CPTS(4,3))) THEN
	   CALL MOAN(MSG_NONRECTCPTS)
	   CALL LEARN(MSG_USE4PT)
	   ABORT=.TRUE.				! continue with
	   GOTO 999				! no map setup
	ENDIF
C
C write header
C
	CALL INFORM(MSG_BLANK)
	CALL INFORM(MSG_EDGESETUP,IFFNAM(1,MAP_SETUP(SETUP_SET)))
C
C digitise points on each side the required number of times
C
	DO 10, SET=1,EDGE_SET
	   CALL EDGESET(SETUP_SET,SET,CPXY(1,1,SET),ABORT,EXSTSU)
C
C check for ABORT, or use existing setup
	   IF (ABORT.OR.EXSTSU) GOTO 999
   10	CONTINUE
C
	SET = EDGE_SET
C
C check if Sets are OK
  100	CONTINUE
	OK_COUNT = 0
	DO 200, COL1=1,SET-EDGE_SET+1
	   COLUMN(1) = COL1
	   IF (EDGE_SET.EQ.1) THEN
	      CALL CHCK_CPTS(1,OK_COUNT,COLUMN,CPXY,ENTRY,SDIFFS)
	      GOTO 200
	   ENDIF
	   DO 199, COL2=COL1+1,SET-EDGE_SET+2
	      COLUMN(2) = COL2
	      IF (EDGE_SET.EQ.2) THEN
	         CALL CHCK_CPTS(2,OK_COUNT,COLUMN,CPXY,ENTRY,SDIFFS)
	         GOTO 199
	      ENDIF
	      DO 198, COL3=COL2+1,SET-EDGE_SET+3
	         COLUMN(3) = COL3
	         IF (EDGE_SET.EQ.3) THEN
	            CALL CHCK_CPTS(3,OK_COUNT,COLUMN,CPXY,ENTRY,SDIFFS)
	            GOTO 198
	         ENDIF
	         DO 197, COL4=COL3+1,SET-EDGE_SET+4
	            COLUMN(4) = COL4
	            IF (EDGE_SET.EQ.4) THEN
	               CALL CHCK_CPTS(4,OK_COUNT,COLUMN,CPXY,
     &	                     ENTRY,SDIFFS)
	               GOTO 197
	            ENDIF
	            DO 196,COL5=COL4+1,SET-EDGE_SET+5
	               COLUMN(5) = COL5
	               CALL CHCK_CPTS(5,OK_COUNT,COLUMN,CPXY,
     &	                        ENTRY,SDIFFS)
196	            CONTINUE
197	         CONTINUE
198	      CONTINUE
199	   CONTINUE
200	CONTINUE
C
C if none are accepatble, try another set
C
	IF (OK_COUNT.EQ.0) THEN
	   IF (SET.EQ.2*MAX_EDGE_SET) THEN
	      ABORT = .TRUE.
	      CALL MOAN(MSG_NOMORESETS,2*MAX_EDGE_SET)
	      GOTO 999
	   ELSE
	     SET = SET+1
	      CALL INFORM(MSG_BLANK)
	      CALL INFORM(MSG_ANOTHERSET)
	      CALL EDGESET(SETUP_SET,SET,CPXY(1,1,SET),ABORT,EXSTSU)
C
C check for ABORT, or use existing setup
	      IF (ABORT.OR.EXSTSU) GOTO 999
	      GOTO 100
	   ENDIF
C
C otherwise get the best set from the arrays
C
	ELSE
	   MIN_DIFF = 1E37
	   DO 300,I = 1,OK_COUNT
	      IF (SDIFFS(I).LT.MIN_DIFF) THEN
	         INDEX = I
	         MIN_DIFF = SDIFFS(I)
	      ENDIF
  300	   CONTINUE
	ENDIF
C
C save number of points and sets
	MAP_EDGE_POINT(SETUP_SET) = EDGE_POINT
	MAP_EDGE_SET(SETUP_SET)   = EDGE_SET
C
C fill in observed CPTS entries
C
	DO 500,J = 1,4
	   DO 500,I = 1,2
	      CPTS(I,J) = 0.0
	   CONTINUE
500	CONTINUE
C
C list sets that will be used, if additional ones have been observed
	IF (SET.GT.EDGE_SET) THEN
	   CALL INFORM(MSG_BLANK)
	   CALL DISPLBTMP(MSG_SETUSED,-1,MSG_STRING,
     &	               2*MAX_EDGE_SET,ENTRY(INDEX))
	ENDIF
C
C sum sets
C
	DO 600, SET = 1,2*MAX_EDGE_SET
	   IF (BTEST(ENTRY(INDEX),SET)) THEN
	      if (diaopt) call writef('Including set %^L%N in mean',set)
	      DO 590, J=1,4
	         DO 590, I= 1,2
	            CPTS(I,J) = CPTS(I,J) + CPXY(I,J,SET)
	         CONTINUE
590	      CONTINUE
	   ENDIF
600	CONTINUE
C
C take mean
C
	IF (EDGE_SET.GT.1) THEN
	   DO 700, J=1,4
	      DO 700,I=1,2
	         CPTS(I,J) = CPTS(I,J)/EDGE_SET
	      CONTINUE
700	   CONTINUE
	ENDIF
C
  999	CONTINUE
	RETURN
	END
