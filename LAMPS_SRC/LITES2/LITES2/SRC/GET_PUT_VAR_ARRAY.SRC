C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1992-01-29 10:03:10.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
C Routines to set and extract values from the variable data array,
C which is an array of descriptors that has the space allocated at
C run time. There are functions to retrieve a byte, a word and
C a long word from a particular descriptor, and corresponding
C subroutines to insert these values into the array.
C
C	Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C	Created					RWR	 29-Jan-1992
C

	BYTE FUNCTION GET_VARBYTE(ARRAY,I,CMD)
C
***	IDENT	29JA92
***	MODULE	GET_VARBYTE
C
C Description
C
C to return a byte from the specified descriptor in the array
C
	IMPLICIT NONE
C
C arguments
C
	BYTE	ARRAY(8,*)
	INTEGER	I			! byte to retrieve
	INTEGER	CMD			! the descriptor to retrieve it from
C
	GET_VARBYTE = ARRAY(I,CMD)

	RETURN
	END

CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC

	INTEGER*2 FUNCTION GET_VARWORD(ARRAY,I,CMD)
C
***	IDENT	29JA92
***	MODULE	GET_VARWORD
C
C Description
C
C to return a WORD from the specified descriptor in the array
C
	IMPLICIT NONE
C
C arguments
C
	INTEGER*2	ARRAY(4,*)
	INTEGER		I  		! word to retrieve
	INTEGER		CMD		! the descriptor to retrieve it from
C
	GET_VARWORD = ARRAY(I,CMD)

	RETURN
	END

CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC

	INTEGER*4 FUNCTION GET_VARLONG(ARRAY,I,CMD)
C
***	IDENT	29JA92
***	MODULE	GET_VARLONG
C
C Description
C
C to return a long-word from the specified descriptor in the array
C
	IMPLICIT NONE
C
C arguments
C
	INTEGER*4	ARRAY(2,*)
	INTEGER		I  		! long-word to retrieve
	INTEGER		CMD		! the descriptor to retrieve it from
C
	GET_VARLONG = ARRAY(I,CMD)

	RETURN

	END

CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC

	SUBROUTINE PUT_VARBYTE(ARRAY,I,CMD,BBBB)
C
***	IDENT	29JA92
***	MODULE	PUT_VARBYTE
C
C Description
C
C to deposit a byte in the specified descriptor in the array
C
	IMPLICIT NONE
C
C arguments
C
	BYTE		ARRAY(8,*)
	INTEGER		I  		! the position in the descriptor
	INTEGER		CMD		! the descriptor to deposit in
	BYTE		BBBB		! the value to deposit
C
	ARRAY(I,CMD) = BBBB

	RETURN

	END

CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC

	SUBROUTINE PUT_VARWORD(ARRAY,I,CMD,WWWW)
C
***	IDENT	29JA92
***	MODULE	PUT_VARWORD
C
C Description
C
C to deposit a word in the specified descriptor in the array
C
	IMPLICIT NONE
C
C arguments
C
	INTEGER*2	ARRAY(4,*)
	INTEGER		I  		! the position in the descriptor
	INTEGER		CMD		! the descriptor to deposit in
	INTEGER*2	WWWW		! the value to deposit
C
	ARRAY(I,CMD) = WWWW

	RETURN

	END



CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC

	SUBROUTINE PUT_VARLONG(ARRAY,I,CMD,LLLL)
C
***	IDENT	29JA92
***	MODULE	PUT_VARLONG
C
C Description
C
C to deposit a long word in the specified descriptor in the array
C
	IMPLICIT NONE
C
C arguments
C
	INTEGER*4	ARRAY(2,*)
	INTEGER		I  		! the position in the descriptor
	INTEGER		CMD		! the descriptor to deposit in
	INTEGER*4	LLLL		! the value to deposit
C
	ARRAY(I,CMD) = LLLL

	RETURN

	END


