	LOGICAL FUNCTION SECREG(REG)
C
***	IDENT	25MY90
***	MODULE	SECREG
C
C	Copyright LaserScan Laboratories Ltd., Cambridge, England
C
C to sector the edges of a region, and calculate its area
C Returns .TRUE. for failure
C
C Author R.W. Russell			22-June-1989
C
	IMPLICIT	NONE
C
C arguments (input)
C
	INTEGER*4	REG		! region to list
C
***	PARAMETER/CMN:MOANMESS/
***	PARAMETER/CMN:REGPAR/
***	PARAMETER/CMN:SECTOR/
C
***	COMMON/CMN:OPTION/
***	COMMON/CMN:REGCMN/
***	COMMON/CMN:SECMAP/
C
C functions
C
	INTEGER		LISECS
	LOGICAL		GET_MEM
	INTEGER		GETARR
C
C local workspace
C
	REAL		LINE(2,2)	! coordinates of current line
	REAL		XSTART,YSTART
	INTEGER		CURPPT		! address of current PPT
	INTEGER		I
	LOGICAL		FINISHED
	INTEGER		NOSECS
C
	SECREG = .TRUE.
C
C check for valid region
	IF (.NOT.REGDEF(REG)) GOTO 1000
C
C diagnostic output
	IF (DIAOPT) CALL WRITEF('Sectoring region %N',REG)
C
C get space for bitmap, if it does not exist
	IF (REGMAP(REG).LE.0) THEN
	   IF (GET_MEM(REG_ZONE,REGMAP(REG),REGMAP_SIZE)) GOTO 1000
	ENDIF
C
C clear out bitmap
	CALL VIOCLR(%VAL(REGMAP(REG)),REGMAP_SIZE)
C
C and area
	REGAREA(REG) = 0D0
C
C initialise scan
	FINISHED = .FALSE.
	CURPPT=REGPTR(1,REG)
	CALL PUTLNG(%VAL(CURPPT+OFFX),XSTART)
	CALL PUTLNG(%VAL(CURPPT+OFFY),YSTART)
	LINE(1,2)=XSTART
	LINE(2,2)=YSTART
	REGLIM(1,REG) = XSTART
	REGLIM(2,REG) = XSTART
	REGLIM(3,REG) = YSTART
	REGLIM(4,REG) = YSTART
C
C  loop to sector each vector of region
100	CONTINUE
	IF (FINISHED) GOTO 900		! end of region
	LINE(1,1)=LINE(1,2)
	LINE(2,1)=LINE(2,2)
C
C get next point from region, or if at end of region, use the start
C point
	CALL PUTLNG(%VAL(CURPPT),CURPPT)
	IF (CURPPT.NE.REGPTR(2,REG)) THEN
	   CALL PUTLNG(%VAL(CURPPT+OFFX),LINE(1,2))
	   CALL PUTLNG(%VAL(CURPPT+OFFY),LINE(2,2))
C
C update bounding box
	   REGLIM(1,REG) = MIN(REGLIM(1,REG),LINE(1,2))
	   REGLIM(2,REG) = MAX(REGLIM(2,REG),LINE(1,2))
	   REGLIM(3,REG) = MIN(REGLIM(3,REG),LINE(2,2))
	   REGLIM(4,REG) = MAX(REGLIM(4,REG),LINE(2,2))
	ELSE
	   FINISHED=.TRUE.
	   LINE(1,2)=XSTART
	   LINE(2,2)=YSTART
	ENDIF
C
C sector this line and set bitmap
	NOSECS=LISECS(LINE)	! sector vector
	DO 200, I=1,NOSECS	! set bits in bitmap
	   CALL LIB$INSV(1,GETARR(%VAL(SECTRS),I),1,%VAL(REGMAP(REG)))
200	CONTINUE
C
	REGAREA(REG) = REGAREA(REG)
     &	               + DPROD(LINE(1,1)-XSTART,LINE(2,2)-YSTART)
     &	               - DPROD(LINE(1,2)-XSTART,LINE(2,1)-YSTART)
C
C get next point
	GOTO 100
C
900	CONTINUE
	REGAREA(REG) = -REGAREA(REG)*0.5D0
	REGDEF(REG) = REGDEF(REG).OR.REGDEF_SEC	! region is now sectored
C
	SECREG = .FALSE.		! success
C
1000	CONTINUE
	RETURN
	END

