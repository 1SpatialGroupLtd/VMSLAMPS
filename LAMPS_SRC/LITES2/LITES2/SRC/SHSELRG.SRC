C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1989-10-11 10:13:04.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE SHSELRG
C
***	IDENT	11OC89
***	MODULE	SHSELRG
C
C	Copyright LaserScan Laboratories Ltd., Cambridge, England
C
C to output list of regions that have been selected
C
C Author R.W. Russell				 4-Oct-1985
C
	IMPLICIT	NONE
C
C parameter and common blocks
C
***	PARAMETER/CMN:MOANMESS/
***	PARAMETER/CMN:REGPAR/
C
***	COMMON/CMN:OPTION/
***	COMMON/CMN:REGCMN/
C
C working storage
C
	INTEGER*4	I			! loop counter
	LOGICAL		EXIST,ALL,NONE		! temporary flags
	CHARACTER*2	MSG1
	CHARACTER*3	MSG2,MSG3
	CHARACTER*3	FUNC
	INTEGER		FUNCL
	INTEGER		SELNUM
C
C
	EXIST=.FALSE.
	ALL=.TRUE.
	NONE=.TRUE.
C
C find out if any regions are defined, and if there are, are they all
C selected
C
	DO 10, I=1,MAX_REG
	   IF (REGDEF(I)) THEN		! this region exists
	      EXIST=.TRUE.
	      IF ((REGDEF(I).AND.REGDEF_ALLSELECTED).NE.
     &	                         REGDEF_ALLSELECTED) ALL=.FALSE.
	      IF ((REGDEF(I).AND.REGDEF_ALLSELECTED).NE.0) NONE=.FALSE.
	      IF (.NOT.ALL.AND..NOT.NONE) GOTO 20
	   ENDIF
   10	CONTINUE
C
C
   20	CONTINUE
	IF (.NOT.EXIST) THEN		! no regions defined
	   CALL INFORM(MSG_NOREGDEF)
	ELSEIF (ALL) THEN		! all are selected
	   CALL INFORM(MSG_ALLREGIONS)
	ELSEIF (NONE) THEN
	   CALL INFORM(MSG_NOREGS)	! no regions are selected
	ELSE
	   CALL INFORM(MSG_FOLREGS)
	   SELNUM=0
	   DO 30, I=1,MAX_REG
	      IF ((REGDEF(I).AND.REGDEF_ALLSELECTED).NE.0) THEN! selected
	         IF (REGDEF(I)) THEN	! output data about this one
	            IF ((REGDEF(I).AND.REGDEF_IN).EQ.0) THEN
	               MSG1='--'
	            ELSE
	               MSG1='IN'
	               SELNUM=SELNUM+1
   	            ENDIF
	            IF ((REGDEF(I).AND.REGDEF_CUT).EQ.0) THEN
	               MSG2='---'
	            ELSE
	               MSG2='CUT'
	               SELNUM=SELNUM+1
	            ENDIF
	            IF ((REGDEF(I).AND.REGDEF_OUT).EQ.0) THEN
	               MSG3='---'
	            ELSE
	               MSG3='OUT'
	               SELNUM=SELNUM+1
	            ENDIF
	            CALL INFORM(MSG_SELREGION,I,MSG1,MSG2,MSG3)
	         ENDIF
	      ENDIF
   30	   CONTINUE
	IF (SELNUM.GT.1) THEN
	   IF (ANDOPT) THEN
	      FUNC='AND'
	      FUNCL=3
	   ELSE
	      FUNC='OR'
	      FUNCL=2
	   ENDIF
	   CALL INFORM(MSG_REGFUNC,FUNC(1:FUNCL))
	   ENDIF
	ENDIF
C
C debug output
C
	IF (DIAOPT) THEN
	   CALL WRITEF(' ')
	   CALL WRITEF('***********  DEBUG  ************')
	   IF (SAREGS) THEN
	      CALL WRITEF('   SAREGS is .TRUE.')
	   ELSE
	      CALL WRITEF('   SAREGS is .FALSE.')
	   ENDIF
	   IF (MRSEL) THEN
	      CALL WRITEF('   MRSEL is .TRUE.')
	   ELSE
	      CALL WRITEF('   MRSEL is .FALSE.')
	   ENDIF
	   CALL WRITEF('********************************')
	ENDIF
C
	END

