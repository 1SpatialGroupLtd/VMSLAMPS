C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1991-02-09 18:43:06.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE SHFILL
C
***	IDENT	09FE91
***	MODULE	SHFILL
C
C	Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C	Created					CCB	5-Jan-1987
C
C	LITES2 cartographic editor SHOW FILL command.
C
	IMPLICIT NONE
C
***     PARAMETER/CMN:MOANMESS/
C
***     COMMON/CMN:DOUT/
***	COMMON/CMN:FILES/
***	COMMON/LSL$CMNFRT:FRTFIL/
C
C Function called
	LOGICAL		FILFND
C
	EXTERNAL	LEARN
C
C Local Variables
	INTEGER		I,FIRST,LAST,PTR
C
C cannot do anything without FRT file
	IF (.NOT.HADFRT) THEN
	   CALL MOAN(MSG_NOFILENAME,'FRT')
	   CALL MSGCMD(LEARN,MSG_REQFRTNAME)
	   GOTO 1000
	ENDIF
C
C or if FRT contained no fills
	IF (FILCNT.LT.1) THEN
	   CALL MOAN(MSG_NOFILLS)
	   GOTO 1000
	ENDIF
C
C check for integer in command line
	IF (DNINT.EQ.1) THEN		! command line entered with
					! argument, so look for fill
C
C check for valid fill
	   IF (DINTS(1).GE.-1.OR.DINTS(1).LT.-32768) THEN ! illegal
	      CALL MOAN(MSG_ILLEGLFIL)			  ! fill	
	      GOTO 1000
	   ENDIF
	   IF (FILFND(DINTS(1))) THEN
	      CALL MOAN(MSG_PAFNOTFND,DINTS(1))	! no such fill
	      GOTO 1000
	   ENDIF
	   FIRST = FILIND
	   LAST = FILIND
	ELSE
C
C write out all fills
	   FIRST = 1
	   LAST = FILCNT
	ENDIF
C
C write out header
	CALL INFORM(MSG_BLANK)
	CALL INFORM(MSG_FILHEAD)
	CALL INFORM(MSG_BLANK)
C
C and each fill
C FILINT_LOC is pointer to INTEGER*2 (3,*) array
C Set PTR to first element, then write out all three for each fill
	PTR = FILINT_LOC+(FIRST-1)*3*2
C
	DO 10, I=FIRST,LAST
	  CALL INFORM(MSG_FILOUTPUT,%VAL(PTR),%VAL(PTR+2),%VAL(PTR+4))
	  PTR = PTR+6
10	CONTINUE
C
1000	RETURN
	END
