C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1988-07-11 13:16:28.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE D1464
C
***	MODULE	D1464
***	IDENT	11JL88
C
	IMPLICIT NONE
C
C Created by Alan Wylie 5-Feb-1980
C From the Ordnance Survey CORAL66 squaring program
C amended by PGH on 14-Feb-1983 for based squaring
C
C find a base either from the list of given bases if BASESQ, or
C
C Find the unprocessed entry with the largest LILEN and put 
C that value in MAXLA,and it's position in DATUM
C
***	COMMON/CMN:D14IFC/
***	COMMON/CMN:D14CMN/
C
	INTEGER TWAPTR
C
	MAXLA = 0.0
	DATUM = -1
	USING_BASE = BASESQ.AND.(BASIND.LT.BASNUM)
	IF (USING_BASE) THEN
	   BASIND = BASIND + 1
	   IF (BASIND.GT.BASNUM) GOTO 50
	   DATCOS = BASCOS(BASIND)
	   DATSIN = BASSIN(BASIND)
	   NDATUM = BASIND
	ELSE
	   DO 30 TWAPTR=0,D14NPT-2
	      IF ((STATUS(TWAPTR).AND.1).EQ.0) THEN
	         IF (LILEN(TWAPTR).GT.MAXLA) THEN
		    MAXLA=LILEN(TWAPTR)
		    DATUM=TWAPTR
	            NDATUM = TWAPTR + 1
		    DATCOS = ORCOS(DATUM)
		    DATSIN = ORSINE(DATUM)
	         ENDIF
C
C if both ends of this line are privileged, then use it as base
	         IF (((STATUS(TWAPTR).AND.16).NE.0).AND.
     &	             ((STATUS(TWAPTR+1).AND.16).NE.0)) GOTO 35
	      ENDIF
30	   CONTINUE
	   GOTO 50
C
C there was an unsquared line that had privileged points at both ends
C - look for the longest such line
C
35	   CONTINUE
	   MAXLA = 0.0
	   DO 40 TWAPTR=0,D14NPT-2
	      IF (((STATUS(TWAPTR).AND.1).EQ.0).AND.
     &	          ((STATUS(TWAPTR).AND.16).NE.0).AND.
     &	          ((STATUS(TWAPTR+1).AND.16).NE.0)) THEN
	         IF (LILEN(TWAPTR).GT.MAXLA) THEN
		    MAXLA=LILEN(TWAPTR)
		    DATUM=TWAPTR
	            NDATUM = TWAPTR + 1
		    DATCOS = ORCOS(DATUM)
		    DATSIN = ORSINE(DATUM)
	         ENDIF
	      ENDIF
40	   CONTINUE
	ENDIF
C
50	RETURN
	END
