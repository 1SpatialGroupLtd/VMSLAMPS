C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1988-06-28 14:03:30.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE DISP_PRIV_ATTR(LIST,NEED_VALUE)
C
***     IDENT   28JN88
***     MODULE  DISP_PRIV_ATTR
C
C       Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C       Written                                 RWR	28-JUN-1988
C
C to display the ACTYPE, and if required, the values
C that are on privileged list
C
        IMPLICIT NONE
C
***	PARAMETER/CMN:CHARS/
***	PARAMETER/CMN:MOANMESS/
C
***	COMMON/CMN:DEFINE/
***	COMMON/LSL$CMNFRT:FRTACD/
C
C arguments
	INTEGER		LIST		! header of list of these items
	LOGICAL		NEED_VALUE	! has value to be set?
C
C w/s
	INTEGER*4	ADDR
	INTEGER		ACTYPE,ACVALUE
	CHARACTER*60	STRNG
C
	ADDR = LIST
C
10	CONTINUE
	IF (ADDR.EQ.0) GOTO 1000
C
C get data for this item
	CALL PUTLNG(%VAL(ADDR+PRIV_PRI),ACTYPE)
	IF (NEED_VALUE) CALL PUTLNG(%VAL(ADDR+PRIV_SEC),ACVALUE)
	CALL PUTLNG(%VAL(ADDR),ADDR)
C
C look for actype in ACD
	CALL ACDFND(ACTYPE,.FALSE.)
C
C fill up output string with AC name (or if that fails its type)
	IF (ACD_CODE.NE.-1) THEN
	   CALL EXPAND('%WS%S',STRNG,ACD_NAME(1:ACD_NAME_LEN))
	ELSE
	   CALL EXPAND('%WS%N',STRNG,ACTYPE)
	ENDIF
C
C add the value, if required
	IF (NEED_VALUE) 
     &	      CALL EXPAND('%WS'//ACD_FORMAT(1:ACD_FORMAT_LEN),
     &	               STRNG(16:),ACVALUE)
C
C and write it out
	CALL INFORM(MSG_STRING,'       '//STRNG)
C
	GOTO 10
C
1000	CONTINUE
        RETURN
        END
