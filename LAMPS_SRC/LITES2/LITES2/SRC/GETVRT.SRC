	SUBROUTINE GETVRT( PACK, V1, V2 )
C
***	MODULE	GETVRT
***	IDENT	10MY96
C
C Copyright Laser Scan Laboratories Ltd., Cambridge, England.
C Author  Clarke Brunt
C
C Coded 17.viii.84
C
C To read vertices V1 to V2 (if possible) of the feature pointed at
C by PACK into the RIXY array.
C RIVO and RITOP indicate which vertices actually read.
C An index of ST positions within the feature is maintained for
C possible use in future calls (especially if reading backwards).
C
C There are similarities between this routine and HAULIN, which
C reads in the found object.
C
	IMPLICIT NONE
C
	INCLUDE	'LSL$CMNIFF:CB.STR'
***	PARAMETER/CMN:AUXDEF/
***	PARAMETER/CMN:EFNLUN/
***	PARAMETER/CMN:MOANMESS/
***	PARAMETER/CMN:PACK/
C
***	COMMON/CMN:CB/
***	COMMON/LSL$CMNIFF:IFFHAN/
***	COMMON/LSL$CMNIFF:IFFSTR/
***	COMMON/CMN:INDEX/
***	COMMON/CMN:MAPS/
***	COMMON/CMN:STRIKE/
C
C arguments
	INTEGER*4	PACK(PAKLEN)	! PACK for feature
	INTEGER		V1		! first vertex wanted
	INTEGER		V2		! last vertex wanted
C
C functions
	LOGICAL		GEOG_TRANS_ARRAY
C
C w/s
	INTEGER I,ROW,ATT	! temporary
	INTEGER VCOPY		! number of points to copy
	INTEGER	IGNORE		! number of points not wanted
	INTEGER*2 IECODE,IELEN	! for IFF reading
	INTEGER	NVRTS		! number of vertices wanted
	INTEGER	STVO		! vertex offset of ST
	INTEGER ST		! IFF address of ST
	LOGICAL REV		! copying backwards
C
	RITOP = 0			! nothing in RIXY
	RINATT = 0			! no attributes
	REV = (V2.LT.V1)		! we are going backwards
	NVRTS = MIN0( IABS(V2-V1)+1 , RIFULL )	! number of vertices
	RIVO = V1-1			! vertex offset
	IF (REV) RIVO = RIVO-NVRTS+1
	STVO = 0			! zero vertex offset
C
C get correct map
	CALL SELIF(PACK(PAKMAP))
C
C use the index provided that it is for this feature
	IF (MAPCUR.EQ.RIMAP .AND. PACK(PAKPNF).EQ.RIPNF) THEN
C
C search the index for a good ST to start from
	   DO 50 I=2,RISTI
	      IF (RISTV(I).GT.RIVO) GOTO 55	! got one
50	   CONTINUE
	   I = RISTI+1			! fallen off end
55	   ST = RISTP(I-1)		! pointer to ST
	   STVO = RISTV(I-1)		! its vertex offset
C
C position onto the selected ST
	   CALL IFFPKE(IECODE,IELEN,ST)
	   IF (IECODE.NE.'CB') THEN
	      CALL NASTY(MSG_BADPST)
	      CALL COLAPS(MSG_BADPST)
	      GOTO 999
	   ENDIF
	ELSE
C
C prepare to create the index
	   RIMAP = MAPCUR	! current map number
	   RIPNF = PACK(PAKPNF)	! and NF pointer
	   RISTI = 0		! nothing in the index
C
C position to start of feature
	   CALL IFFPKE(IECODE,IELEN,RIPNF)
	   IF(IECODE.NE.'NF'.AND.IECODE.NE.'TC'.AND.IECODE.NE.'CH'
     &					.AND.IECODE.NE.'VO') THEN
	      CALL NASTY(MSG_BADPNF)
	      CALL COLAPS(MSG_BADPNF)
	      GOTO 999
	   ENDIF
C
C find the first ST
	   CALL IFFNXC('CB',IELEN)
	   IF (IELEN.EQ.-1) THEN
	      CALL NASTY(MSG_NOMOREST)
	      CALL COLAPS(MSG_NOMOREST)
	      GOTO 999
	   ENDIF
	ENDIF
C
C so we now have an ST in hand
60	CALL EIHRCB_HEAD(CBH)
C
C see whether it needs inserting in the index
	IF (RISTI.EQ.0) GOTO 63
	IF (STVO.LE.RISTV(RISTI)) GOTO 66
C
C if the index is full, then compress it
	IF (RISTI.EQ.INDFUL) CALL CMPIND(RISTP,RISTV,RISTI)
63	RISTI = RISTI+1
	RISTP(RISTI) = LPOSH		! ST position
	RISTV(RISTI) = STVO		! vertex offset
C
C do we need any points from this ST?
66	IF (STVO+CBH.NROW.GT.RIVO) THEN		! yes
	   IGNORE = MAX0(0,RIVO-STVO)		! number not wanted
	   VCOPY = MIN0(NVRTS,CBH.NROW-IGNORE)	! number to get
	   CALL EIHRCB_DATA(CBD)
	   CBROW = IGNORE+1			! remember eg for NDEDIT
	   IF (SIMPLE_XY) THEN			! just ST format
	      CALL VIOMV3( CBD.R(2*IGNORE+1), 8*VCOPY, RIXY(1,RITOP+1) )
C
C clear out attributes
	      IF (RINATT.GT.0) THEN
	         DO 67 ROW=RITOP+1,RITOP+VCOPY
	            DO 67 ATT=1,RINATT
	               RIATTV(ATT,ROW) = IFF_ABSENT
67	         CONTINUE
	      ENDIF
	   ELSE
C
C obtain X,Y and other attributes
	      CALL GETATT(RIXY,RINATT,STR_MAX_ATTR+1,RIATTC,
     &	                     RIATTV,RITOP,IGNORE+1,IGNORE+VCOPY)
	   ENDIF
C
C add origin of map, or transform into LITES2 space, if required
	   IF (DO_FLY_TRANS) THEN
	      IF (.NOT.GEOG_TRANS_ARRAY(CURR_SYS,CURR_ZONE,CURR_PARAMS,
     &	                            CURR_UNIT,CURR_ORG,
     &	                            LITES2SYS,LITES2ZONE,LITES2PAR,
     &	                            LITES2UNIT,LITES2ORG,
     &	                            VCOPY,RIXY(1,RITOP+1))) GOTO 999
	   ELSEIF (USE_ORG) THEN
	      CALL ADDORG(ORGXY,RIXY(1,RITOP+1),VCOPY)
	   ENDIF
C
C get the column that Z is in, as it is rather special
	   DO 80, I = 1,RINATT
	      IF (RIATTC(I).EQ.IFF_C_Z) THEN
	         RI_Z_COL = I
	         GOTO 81
	      ENDIF
80	   CONTINUE
C
C no Z's present
	   RI_Z_COL = -1
81	   CONTINUE
	   DO 69 I=RITOP+1,RITOP+VCOPY
	      RIFLG(I) = 1			! all flags visible
69	   CONTINUE
	   IF (IGNORE.EQ.0) RIFLG(RITOP+1) = CBH.FLAGS.AND.1
	   RITOP = RITOP+VCOPY
	   NVRTS = NVRTS-VCOPY
	   IF (NVRTS.LE.0) GOTO 70		! finished
	ENDIF
	STVO = STVO+CBH.NROW
C
C step on to next ST
68	CALL IFFNXT(IECODE,IELEN)
	IF (IECODE.EQ.'VO') GOTO 68
	IF (IECODE.NE.'CB') THEN
	   CALL NASTY(MSG_NOMOREST)
	   CALL COLAPS(MSG_NOMOREST)
	   GOTO 999
	ENDIF
	GOTO 60
C
C everything read
70	CONTINUE
C
999	RETURN
	END
