	SUBROUTINE ABANDN
C
***	IDENT	17MR95
***	MODULE	ABANDN
C
C	Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C	Created					RJH     25-SEP-1984
C
C Description
C
C Routine to perform the work of ABANDON. Called both by DOABAN and
C from several other places requiring an abandon operation.
C
	IMPLICIT NONE
C
	INCLUDE	'LSL$CMNIFF:CB.STR'
***	PARAMETER/CMN:ACS/
***	PARAMETER/CMN:AUXDEF/
***	PARAMETER/CMN:END/
***	PARAMETER/CMN:PACK/
***	PARAMETER/CMN:STAPAR/
C
***	COMMON/CMN:ACS/
***	COMMON/CMN:ATTBTS/
***	COMMON/CMN:CSTRCT/
***	COMMON/CMN:DRAWIN/
***	COMMON/CMN:DEFINE/
***	COMMON/CMN:D14IFC/
***	COMMON/CMN:IMAGE/
***	COMMON/CMN:MASTER/
***	COMMON/CMN:MODIFY/
***	COMMON/CMN:OIIH/
***	COMMON/CMN:OPTION/
***	COMMON/CMN:RFCTRL/
***	COMMON/CMN:STATE/
***	COMMON/CMN:STRIKE/
***	COMMON/CMN:WORKS/
C
	IF (SINDEX.EQ.STATE_CONSTRUCT.OR.
     &	    (SINDEX.EQ.STATE_ON.AND.NDMODE.EQ.END_INCLUDE)) THEN
	   CALL ABACON ! abandon construct
	ENDIF
	IF (SINDEX.EQ.STATE_EDIT.AND.
     &		(NDMODE.EQ.END_MEND_MANUAL.OR.NDMODE.EQ.END_MEND_AUTO)
     &				) CALL ABAMND	! finish mending
	IF (SINDEX.EQ.STATE_PAINT.AND.PNTING) THEN
C
C if this is an ABANDON (rather then END), and there is some image
C editing to recover, then recover it
	   IF (NDMODE.EQ.END_PAINT.AND.IM_CACHE_PTR.NE.0
     &				) CALL IMAGE_RECOVER(IMAGE_CURRENT)
	   IF (IMAGE_BRUSH_CURSOR) THEN
	      RFCTYP = IMAGE_SAV_CTYP
	      RFCARG(1) = IMAGE_SAV_CARG(1)
	      RFCARG(2) = IMAGE_SAV_CARG(2)
	      RFBIG = .NOT.BIGOPT
	   ENDIF
	ENDIF
	CALL DROP			! drop any found object
	CALL DROBIH			! drop any object in hand
	CALL NOCHAN			! cancel pending changes
	OIDRAW = .TRUE.			! draw output items
	HADTX=.FALSE.			! when finished modifying text
	HADRO=.FALSE.			! and symbols
	CALL FRECUR			! free cursor
	JOINNG = .FALSE.		! not joining or tieing
	IF (FTRACD(ACD_NAC).GT.0) CALL FREEAC(FTRACD)	! free feature's ACs
	IF (FOMACD(ACD_NAC).GT.0) CALL FREEAC(FOMACD)
	IF (IHMACD(ACD_NAC).GT.0) CALL FREEAC(IHMACD)
	ACMAP = -1			! ACs therein invalid
	RUBLIN(1) = .FALSE.		! no rubber band lines
	RUBLIN(2) = .FALSE.
	RUBCHG = .TRUE.			! rubber banding (maybe) changed
	UNIT = 0			! cancel any unit command
	CONFSN = 0			! cancel SET FSN
	FORCE_C_SETUP = .FALSE.		! no values for FORCE SLOPE and 
	FORCE_H_SETUP = .FALSE.		! FORCE FLAT
C
C initialise base finding mechanism for squaring
	BASNUM=0
	BASESQ=.FALSE.
C
C initialise generated circle, arc and polygon construction
	CONGEN = .FALSE.
	CONCIR = .FALSE.
	CONCLO = .FALSE.
	CONCEN = .FALSE.
C
C rectangle construction
	CONRECT = .FALSE.
	CONDIAG = .FALSE.
	CONSIDE = .FALSE.
C
C initialise generated curve construction variables
	CONCUR = .FALSE.
	CONINT = .FALSE.
C
C no longer inserting an intersection
	INSRTING = .FALSE.
C
C no longer streaming
	IF (FOLLOWING) CALL ENDFOLL
C
C feature has had no geometrical or code changes made
	FLG_GEOCHANGE  = .FALSE.
	FLG_CODECHANGE = .FALSE.
	FLG_ADD        = .FALSE.
	FLG_USER       = .FALSE.
C
C clear flags for modifications of text and symbols by cursor
	FLG_MOD_MOVE      = .FALSE.
	FLG_MOD_FAR_MOVE  = .FALSE.
	FLG_MOD_TRANSFORM = .FALSE.
C
C remove object being modified from refresh picture
	IF (SINDEX.EQ.STATE_MODIFY) THEN
	   MODMOD=.TRUE.
	   SUBTXT=.FALSE.		! start next time with whole text
	ENDIF
C
C save abandoning windowing until after everything else has been done
C so that the refresh picture is drawn correctly
	IF (SINDEX.EQ.STATE_WINDOW) CALL ABAWIN
C
	NDMODE = 0			! not ENDing anything
C
C set state
	IF (SINDEX.EQ.STATE_WINDOW.AND.SETING) THEN
	   CALL SETSTA(STATE_SETUP)
	ELSEIF (SINDEX.EQ.STATE_AC.AND.ACINIT) THEN
	   CALL SETSTA(STATE_INITIAL)
	ELSEIF (.NOT.((SINDEX.EQ.STATE_SETUP.AND..NOT.SETING).OR.
     &	              (SINDEX.EQ.STATE_PAINT.AND..NOT.PNTING).OR.
     &	              (SINDEX.EQ.STATE_INITIAL))) THEN
	   SETING = .FALSE.
	   PNTING = .FALSE.
	   CALL SETSTA(STATE_READY)
	ENDIF
C
	RETURN
	END
