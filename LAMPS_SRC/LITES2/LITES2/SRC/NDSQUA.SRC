C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1992-09-16 10:20:22.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL FUNCTION NDSQUA
C
***	MODULE	NDSQUA
***	IDENT	16SE92
C
C Copyright Laser Scan Laboratories Ltd., Cambridge, England.
C
C Author  Ron Russell			 8-Mar-1985
C
C To write out a feature that has been squared
C
	IMPLICIT NONE
C
***	PARAMETER/CMN:AUXDEF/
***	PARAMETER/CMN:EFNLUN/
***	PARAMETER/CMN:MOANMESS/
***	PARAMETER/CMN:PACK/
***	PARAMETER/CMN:PROCESS/
C
	INCLUDE 'LSL$CMNIFF:CB.STR'
C
***	COMMON/CMN:CSTRCT/
***	COMMON/CMN:D14IFC/
***	COMMON/CMN:DEFINE/
***	COMMON/CMN:MAPS/
***	COMMON/CMN:MASTER/
***	COMMON/CMN:OIIH/
***	COMMON/CMN:STRIKE/
***	COMMON/CMN:VARIAT/		! variations for CHANGE
C
C
C functions 
C
	LOGICAL		CHANGE,STRTFT
	INTEGER		GENNF
C
C w/s
C
	INTEGER		I,J,K,L			! loop counter
	INTEGER*2	FS(4)
	INTEGER		OPER
	INTEGER		OPERFM
	REAL		DX,DY
C
	NDSQUA = .TRUE.				! assume failure
C
C is map read only?
C
	IF (MAPRO(IHPAK(PAKMAP))) THEN
	   CALL MOAN(MSG_MAPREADONLY,IHPAK(PAKMAP)+1)
	   GOTO 999
	ENDIF
C
C copy data from feature in hand into COI variables
C
	CALL CPYPAK(PAKLEN,IHPAK,COIPAK)
	COIPAK(PAKFLG)=0			! not deleted pack
	COIPAK(PAKSEG)=0			! need new segment
C
	FS(1)=COIPAK(PAKFC)
	FS(2)=IHFS(2)
	FS(3)=SQTYPE
	FS(4)=IHFS(4)
C
C generate an FSN
C
	COIPAK(PAKFSN)=GENNF(COIPAK)
C
C put the original feature into limbo
C
	LIMBO = .TRUE.			! put into limbo
	IF (CHANGE(IHPAK)) THEN		! change the object in hand
	   CALL NOCHAN			! failed, so cancel change
	   GOTO 999
	ENDIF
C
C start the feature
C
	FLG_GEOCHANGE = .TRUE.		! geometrical change
	IF (STRTFT(IHPAK,IHTC,FS,IHAC,IHTH)) GOTO 999
C
C set up operation to obey
	IF (SQTYPE.EQ.ANGLE_SQUARED) THEN
	   OPER = DEFINITION(P_ANGLESQUARE)
	ELSEIF (SQTYPE.EQ.PART_SQUARED) THEN
	   OPER = DEFINITION(P_PARTSQUARE)
	ELSEIF (SQTYPE.EQ.WHOLE_SQUARED) THEN
	   OPER = DEFINITION(P_SQUARE)
	ENDIF
C
C if squaring operation is not set up, then use OTHER operation
	IF (OPER.EQ.0) OPER = DEFINITION(P_OTHER)
C
C for far move
	OPERFM = DEFINITION(P_FAR_MOVE)   
C
C deal with far moves separately, as they are more complicated. They
C need to get the original points to compared the squared points with.
C
	IF (OPERFM .EQ.0) THEN
C
C output ST entries
C
	   DO 10, I=1,D14NPT
C
C get original attributes of this point
	      CALL LSTARR(D14AT1(I),CONATT,COATTC,COATTV,.FALSE.)
C   
C add attributes from OPERATION command
	      CALL LSTARR(OPER,CONATT,COATTC,COATTV,.TRUE.)
	      CALL ADCORD(D14WK1(1,I),CONATT,COATTC,COATTV)
	      IF (D14IV1(I)) THEN		! next line is invisible
	         CALL FLUSH(1)		! so flush up to this pt
	         OIENDS=0			! and next line is invisible
	      ENDIF
   10	   CONTINUE
	ELSE
	   J=1
   15	   CONTINUE
	   CALL GETVRT(IHPAK,J,D14NPT_INITIAL)
	   DO 20, I=1,RITOP
	      K = I+RIVO
	      L = D14PT1(K)
	      IF (L.EQ.0) GOTO 20		! this point removed
C
C get original attributes of this point
	      CALL LSTARR(D14AT1(L),CONATT,COATTC,COATTV,.FALSE.)
C   
C add attributes from OPERATION command
	      CALL LSTARR(OPER,CONATT,COATTC,COATTV,.TRUE.)
C
C check for a far move
	      DX = D14WK1(1,L)-RIXY(1,I)
	      DY = D14WK1(2,L)-RIXY(2,I)
	      IF ((DX**2 + DY**2) .GT. FAR_MOVE_IFF**2)
     &	         CALL LSTARR(OPERFM,CONATT,COATTC,COATTV,.TRUE.)
C
C output point
	      CALL ADCORD(D14WK1(1,L),CONATT,COATTC,COATTV)
	      IF (D14IV1(L)) THEN		! next line is invisible
	         CALL FLUSH(1) 			! so flush up to this pt
	         OIENDS=0			! and next line is invisible
	      ENDIF
   20	   CONTINUE
	   J=J+RITOP
	   IF (J.LE.D14NPT_INITIAL) GOTO 15	! read some more points
	ENDIF
C
C end the feature
C
	CALL ENDFT
C
	NDSQUA = .FALSE.
C
C that's all
999	RETURN
	END
