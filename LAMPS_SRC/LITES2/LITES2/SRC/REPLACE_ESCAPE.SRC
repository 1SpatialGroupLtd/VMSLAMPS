C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1990-06-12 15:43:34.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE REPLACE_ESCAPE(INLEN,STR,OUTLEN)
C
***	IDENT	12JN90
***	MODULE	REPLACE_ESCAPE
C
C	Copyright Laser-Scan Ltd., Cambridge, England.
C
C	Created					RWR	7-June-1990
C
C to replace any escaped characters (ie characters preceded by a '$') by
C the character that is offset by 128 from it.
C NOTE1: '$$' is left in the string, as is any trailing $
C NOTE2: use dynamic output string and system services, in case STR is
C	 a dynamic string
C
	IMPLICIT NONE
C
C Arguments
C
	INTEGER		INLEN		! length of input string
	INTEGER		STR(2)		! (dynamic) string
	INTEGER		OUTLEN		! number of characters in output string
C
	INCLUDE	'($DSCDEF)'
C
C Local Variables
	INTEGER		I
	INTEGER		ICH
	LOGICAL		HAD_ESCAPE
	CHARACTER	CH
C
	INTEGER		STRING(2)
	BYTE		STRB(4)
	EQUIVALENCE	(STRB,STRING)
	DATA		STRB/0,0,0,DSC$K_CLASS_D/
C
	HAD_ESCAPE = .FALSE.
	OUTLEN = 0
	CALL STR$FREE1_DX(STRING)	! make empty
C
	DO 10, I=1,INLEN
	   CALL STR$POS_EXTR(CH,STR,I,I)
	   IF (CH.EQ.'$') THEN
	      IF (HAD_ESCAPE) THEN
	         OUTLEN = OUTLEN+2
	         CALL STR$CONCAT(STRING,STRING,'$$')
	         HAD_ESCAPE = .FALSE.
	      ELSE
	         HAD_ESCAPE = .TRUE.
	         IF (I.EQ.INLEN) THEN
	            OUTLEN = OUTLEN+1
	            CALL STR$CONCAT(STRING,STRING,'$')
	         ENDIF
	      ENDIF
	   ELSE
	      OUTLEN = OUTLEN+1
	      IF (HAD_ESCAPE) THEN
	         ICH = ICHAR(CH) + 128
	         CALL STR$CONCAT(STRING,STRING,CHAR(ICH))
	         HAD_ESCAPE = .FALSE.
	      ELSE
	         CALL STR$CONCAT(STRING,STRING,CH)
	      ENDIF
	   ENDIF
10	CONTINUE	         
C
	CALL STR$COPY_DX(STR,STRING)
	RETURN
	END
