C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1986-02-16 17:19:22.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE FINRST(COMARG)
C
***	IDENT	16FE86
***	MODULE	FINRST
C
C	Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C	Created					RJH	08-AUG-1984
C
C    This subroutine is part of the LITES2 Command Interface, and its
C purpose is to read rest of command arguments to primary or secondary
C commands. 
C    Note that only one of filename or rest of command is allowed.
C Leading spaces or tabs are ignored, and trailing spaces or tabs are
C included in the string.
C
	IMPLICIT NONE
C
***     PARAMETER/CMN:ARGPAR/		! argument constants
***     PARAMETER/CMN:CHARS/		! character constants
***     PARAMETER/CMN:MOANMESS/		! moan constants
C
***     COMMON/CMN:DOUT/		! command decoding output
C
C Arguments
	INTEGER*4	COMARG		! argument type
C
	EXTERNAL	MOAN		! moan message
C
C Functions called
	INTEGER*4	READ_STRING	! see MAR:RDCH.MAR
	LOGICAL		RDCHS
C
C Workspace
	LOGICAL		EOLN		! end of line ?
	BYTE		NXTCH		! next character
C
C Skip leading spaces and tabs
C
	EOLN = RDCHS(NXTCH)
	IF (.NOT. EOLN) CALL BSCH
C
C Read up to command terminator (#).
C As a window has been set on the command line, # will never appear; 
C however, reading is forced up to the end of line, including trailing
c spaces and tabs.
C
	DSTRL = READ_STRING(DSTR,TERM)
C
C Check for error
C
	IF (DSTRL .EQ. 0) THEN
	   IF (COMARG .EQ. ARGRST) THEN
	      CALL MSGCMD(MOAN,MSG_EXPRESTCMD)
	   ENDIF
	ELSE
	   DSTRIN = .TRUE.
	ENDIF
C
	RETURN
	END
