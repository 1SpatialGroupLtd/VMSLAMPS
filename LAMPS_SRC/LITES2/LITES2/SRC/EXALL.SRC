	SUBROUTINE EXALL
C
***	IDENT	09MY96
***	MODULE	EXALL
C
C	Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C	Created					RWR	24-Oct-1984
C
C	LITES2 cartographic editor EXAMINE ALL command.
C
	IMPLICIT NONE
C
	INCLUDE	'LSL$CMNIFF:CB.STR'
***	PARAMETER/CMN:ACS/
***	PARAMETER/CMN:AUXDEF/
***	PARAMETER/CMN:EFNLUN/
***     PARAMETER/CMN:MOANMESS/
***	PARAMETER/CMN:PACK/
C
***	COMMON/CMN:ACS/
***	COMMON/CMN:DRAWIN/
***	COMMON/LSL$CMNFRT:FRTCOM/
***	COMMON/CMN:LAYERS/
***	COMMON/CMN:MAPS/
***	COMMON/CMN:OPTION/
***	COMMON/CMN:STRIKE/
C
C Functions called
	INTEGER*2	LIB$EXTZV
	REAL*8		AREA
	REAL		EXLENG
	REAL		EXDIST
	REAL		ANGLE
C
C Local variables
	INTEGER*2	LOCAT		! locating point of text
	REAL		R
	REAL*8		RR
	REAL		CRNRS(4)
	CHARACTER*80	STRNG
C
	CALL INFORM(MSG_MAP,FOPAK(PAKMAP)+1,		! map
     &			IFFNAM(1,FOPAK(PAKMAP)))
	CALL INFORM(MSG_LAYER,OVNOS(FOPAK(PAKOVL)))	! layer
	CALL INFORM(MSG_FSN,FOPAK(PAKFSN))		! FSN
	CALL EXFC					! FC
	CALL INFORM(MSG_GRAPHTYP,FOPAK(PAKGT))		! Graphical type
	CALL EXWDTH(FOPAK(PAKFC),.FALSE.)		! width
	CALL EXPATT(FOPAK(PAKFC),.FALSE.)		! pattern
	CALL EXSEC(FOPAK(PAKFC),.FALSE.)		! secondary
	CALL EXSIZE(FOPAK(PAKFC),.FALSE.)		! size
	IF (FOPAK(PAKGT).EQ.TEXTYP) THEN
C
C text feature:
C 1) height of text
	   IF (HEIOPT.AND.POIOPT) THEN
	      CALL INFORM(MSG_TXTPOINT,FOTH)		! pointsize
	   ELSE
	      IF (HEIOPT) THEN
	         R=FOTH/100.0
	      ELSE
	         CALL FRTFND(FOPAK(PAKFC))
	         R = FRTSIZ
	      ENDIF
	      CALL INFORM(MSG_TXTHEIGHT,R,R*SCLFRT)	! height
	   ENDIF
C
C 2) category
	   CALL INFORM(MSG_TXTCLASS,LIB$EXTZV(6,6,FOFS(3)))
C
C 3) location
	   IF (POSOPT) THEN
	      LOCAT=FOFS(3).AND.'F'X	! get bottom 4 bits of flag word
	      IF (LOCAT.GT.8) LOCAT=0	! there are only 8 possible
	      CALL INFORM(MSG_TXTLOC,LOCAT)
	   ENDIF
C
C 4) style
	   CALL INFORM(MSG_TXTFONT,LIB$EXTZV(4,2,FOFS(3)))
	ENDIF
C
	CALL EXVERT					! vertex
	CALL GETAC(FOPAK,FOTC,FOAC)			! get ACs
	CALL VERFAC(FTRACD)				! type them
	IF (FOPAK(PAKGT).NE.TEXTYP) THEN		! PC
	   CALL INFORM(MSG_PC,LIB$EXTZV(0,14,FOFS(3)))
	ENDIF 
	CALL EXLINE(.FALSE.)				! line
	R = EXLENG()			! length of feature
	CALL INFORM(MSG_FEATURELENGTH,R/SCLFRT,R)
	RR = AREA()
	IF ((FOPAK(PAKGT).GT.TEXTYP.OR.FOPAK(PAKGT).LT.UNOTYP).AND.
     &			FONLIN) THEN
	   R = EXDIST()
	   CALL INFORM(MSG_DIST,R/SCLFRT,R)
	ENDIF
	CALL INFORM(MSG_FEATUREAREA,
     &			REAL(RR)/(SCLFRT**2),REAL(RR))
	CALL LITES2_BOX(CRNRS)
	CALL INFORM(MSG_BOXROUNDFT)
C
C note: have to build up string by myself, to get numbers columnated
	CALL EXPAND('%WSIFF Units',STRNG)
	CALL EXPAND('%WS%G0.8',STRNG(20:35),CRNRS(1))
	CALL EXPAND('%WS%G0.8',STRNG(36:51),CRNRS(2))
	CALL EXPAND('%WS%G0.8',STRNG(52:67),CRNRS(3))
	CALL EXPAND('%WS%G0.8',STRNG(68:80),CRNRS(4))
	CALL INFORM(MSG_STRING,STRNG)
C
	CALL EXPAND('%WSSheet mm',STRNG)
	CALL EXPAND('%WS%G0.8',STRNG(20:35),CRNRS(1)/SCLFRT)
	CALL EXPAND('%WS%G0.8',STRNG(36:51),CRNRS(2)/SCLFRT)
	CALL EXPAND('%WS%G0.8',STRNG(52:67),CRNRS(3)/SCLFRT)
	CALL EXPAND('%WS%G0.8',STRNG(68:80),CRNRS(4)/SCLFRT)
	CALL INFORM(MSG_STRING,STRNG)
C
C angle for text and symbols
	IF (FOPAK(PAKGT).GE.UNOTYP.AND.FOPAK(PAKGT).LE.TEXTYP) THEN
	   R = ANGLE()
	   CALL INFORM(MSG_TXTSYMANGLE,R)
	ENDIF
C
	RETURN
	END
