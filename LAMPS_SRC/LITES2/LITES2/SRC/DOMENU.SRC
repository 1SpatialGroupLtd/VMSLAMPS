	SUBROUTINE DOMENU
C
***	IDENT	25MY94
***	MODULE	DOMENU
C
C	Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C	Created					RWR	28-Nov-1984
C
C	LITES2 cartographic editor MENU command.
C
	IMPLICIT NONE
C
***     PARAMETER/CMN:MACMEN/		! macros, menus and puck buttons
C
***	COMMON/CMN:MACRO/		! data about macros
C
C this is a jacket routine that calls the real routine with the address
C of two arrays, to make accessing these arrays in the real routine
C easier
C
	CALL MENU(%VAL(MACDSL_ADDR),%VAL(MANDSL_ADDR))
C
	RETURN
	END


	SUBROUTINE MENU(MACDSL,MANDSL)
C
***	IDENT	07FE92
***	MODULE	MENU
C
C	Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C	Created					RWR	28-Nov-1984
C
C	LITES2 cartographic editor MENU command.
C
	IMPLICIT NONE
C
***     PARAMETER/CMN:MACMEN/		! macros, menus and puck buttons
***     PARAMETER/CMN:MOANMESS/		! moan constants
***	PARAMETER/CMN:STAPAR/
C
***     COMMON/CMN:DOUT/		! command decoding output
***     COMMON/CMN:DVAR/
***	COMMON/CMN:MACRO/		! data about macros
***	COMMON/CMN:MENUS/		! data about menus and puck
***	COMMON/CMN:STATE/
C
C arguments
	INTEGER*4	MACDSL(2,*)
	INTEGER*4	MANDSL(2,*)
C
C Functions called
	LOGICAL		INIMEN		! initialises menu macros
C
C Local Variables
	INTEGER		I
	INTEGER*4	NOBOXS		! number of boxes in this
					! definition
C
	NOBOXS=DINTS(1)*DINTS(2)
C
C check length of string
	IF (DSTRL.LT.1.OR.DSTRL.GT.MNNLEN) THEN
	   CALL MOAN(MSG_TOOLONGMENNAM,MNNLEN)
	   GOTO 998
	ENDIF
C
C check if space for this menu
	IF (MENTOP.EQ.MAXMEN) THEN
	   CALL MOAN(MSG_TOOMANYMEN,MAXMEN)
	   GOTO 998
	ENDIF
C
C check for sensible number of boxes in x and in y
	IF (DINTS(1).LT.1.OR.DINTS(2).LT.1) THEN
	   CALL MOAN(MSG_ILLEGLNOBOXES)
	   GOTO 998
	ENDIF
C
C check for too many boxes
	IF (NOBOXS+FREBAS.GT.MAXPTR) THEN
	   CALL MOAN(MSG_TOOMANYBOXES,MAXPTR-FREBAS)
	   CALL LEARN(MSG_INCREASEMAX,'menu squares',MAXMENUSQU_LOG_NAME)
	   GOTO 998
	ENDIF
C
C if DSTR is not in macro command table and it is a valid macro
C name, then add it
	IF (INIMEN(.TRUE.)) GOTO 998
C
C set up other data for this menu
	MENTOP=MENTOP+1
	MNPTOP=MNPTOP+1				! to access MENINF
C
C in common /MACRO/
C
C initialise dynamic descriptors
	DO 10 I=1,NOBOXS
	   CALL INIDSC(MACDSL(1,I+FREBAS))
	   CALL INIDSC(MANDSL(1,I+FREBAS))
	   CALL LIB$INSV((DENC.GT.0),I+FREBAS-1,1,%VAL(MACENC_ADDR))
10	CONTINUE
C
	MENINF(PTSIZE,MNPTOP)=NOBOXS		! number of ptrs used in
						! this menu
	MENINF(PTBASE,MNPTOP)=FREBAS		! base for this menu in
						! list of pointers
	FREBAS=FREBAS+NOBOXS			! new base of free space
						! in list of pointers
C
C now data about menu
	BOXINX(MENTOP)=DINTS(1)			! no of boxes in x
	BOXMAX(MENTOP)=NOBOXS			! total number of boxes
C
	MNCRPT(3,1,MENTOP)=1			! coords of menu,
	MNCRPT(4,1,MENTOP)=1+DINTS(2)		! in menu units
	MNCRPT(3,2,MENTOP)=1
	MNCRPT(4,2,MENTOP)=1
	MNCRPT(3,3,MENTOP)=1+DINTS(1)
	MNCRPT(4,3,MENTOP)=1
	MNCRPT(3,4,MENTOP)=1+DINTS(1)
	MNCRPT(4,4,MENTOP)=1+DINTS(2)
C
	MENNAM(MENTOP)=DSTR(1:DSTRL)		! name of menu
	MENLEN(MENTOP)=DSTRL			! length of name
C
C if in READY state, still need SETUP AGAIN command
C
	IF (SINDEX.EQ.STATE_READY) CALL INFORM(MSG_NXTSETUP)
	GOTO 999
C
998	CALL IGNCMD
999	RETURN
	END
