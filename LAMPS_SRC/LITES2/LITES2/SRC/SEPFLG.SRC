C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1996-05-09 11:15:46.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE SEPFLG(ALLFLG,SEPARG,SEPSTA,MSGSTR)
C
***	IDENT	09MY96
***	MODULE	SEPFLG
C
C	Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C	Created					RJH	14-AUG-1984
C
C Description
C
C    This subroutine is part of the LITES2 Command Interface, and its
C purpose is to separate the argument flags from the state permission
C flags for the current command.
C    The first argument passed to the subroutine is a longword
C containing user flags returned by CMDLIB. This longword contains state
C permission flags as well as argument flags. Bits 0-7 are reserved for 
C actual arguments to the command and only one of these should be set. 
C The  subroutine checks this, taking only the first one found to be
C set, and moaning if others have been set. Bits 8 and 9 are reserved 
C for use as conditions for teh command and can be set together
C with one of the others. Longwords containing the argument flags and 
C the state permission flags are returned.
C    The last argument passed to the subroutine is a string containing 
C the current command and it is used for error messages.
C
	IMPLICIT NONE
C
C Included Parameter Files
C
***     PARAMETER/CMN:ARGPAR/		! argument constants
***     PARAMETER/CMN:MOANMESS/		! moan constants
C
C Arguments
C
	INTEGER*4	ALLFLG		! user flags from command table
	INTEGER*4	SEPARG		! argument types
	INTEGER*4	SEPSTA		! valid states for command
	CHARACTER*(*)	MSGSTR		! command string for moans
C
C Function called
C
	LOGICAL		LIB$FFS		! find first set bit
C
C Local Variables
C
	INTEGER*4	I		! counter
	LOGICAL		OTHER		! this flag arg. to command ?
	LOGICAL		GOTARG		! had 1 argument to command ?
	LOGICAL		MORE		! more than 1 arg. to command ?
C
C Initialisation
C
	SEPARG = 0			! no flags set
	SEPSTA = ALLFLG			! state flags same as user flags
	GOTARG = .FALSE.
	MORE = .FALSE.
C
C Find argument flags
C
10	IF (.NOT.LIB$FFS(0,ARGMAX+1,SEPSTA,I)) GOTO 20	! no bits set
	SEPSTA = IBCLR(SEPSTA,I)		! clear bit
	OTHER = ((I .NE. ARGFUL) .AND. (I .NE. ARGPRV))
	IF (GOTARG .AND. OTHER) THEN		! had flag & got another
	   MORE = .TRUE.			! too many flags
	ELSE					! flags OK so far
	   SEPARG = IBSET(SEPARG,I)		! set arg. type bit
	   GOTARG = OTHER			! got valid arg. flag
	ENDIF
	GOTO 10					! look for another bit
C
C Output message if more than one argument type flag (other than the
C type in full and priviledge flags) was specified
C
20	IF (MORE) CALL NASTY(MSG_TOOMANYARGS,MSGSTR)
C
	RETURN
	END
