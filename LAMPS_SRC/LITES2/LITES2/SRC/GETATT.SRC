	LOGICAL FUNCTION GETATT(XY,NATT,MATT,ATTC,ATTV,NROW,FIRST,LAST)
C
***	MODULE	GETATT
***	IDENT	10MY96
C
C Copyright Laser Scan Laboratories Ltd., Cambridge, England.
C Author  Clarke Brunt
C
C To extract X,Y, and other attributes from the common CB data
C structure into separate XY and attribute arrays.
C Used by e.g. GETVRT to fill RIXY and RIATT etc.
C Returns true if too many attributes
C Used by IFFBDY, GETVRT, and HAULIN
C
	IMPLICIT NONE
C
	INCLUDE	'LSL$CMNIFF:CB.STR'
C
***	COMMON/CMN:CB/
C
C arguments
	REAL		XY(2,*)		! destination for X and Y
	INTEGER		NATT		! number of columns used
	INTEGER		MATT		! number of columns in arrays
	INTEGER		ATTC(*)		! column headers
	INTEGER		ATTV(MATT,*)	! attribute values
	INTEGER		NROW		! rows already in XY and ATTV
	INTEGER		FIRST		! rows to extract
	INTEGER		LAST		! i.e. row numbers in the CB
C
C w/s
	INTEGER N,COL,ROW,ATT,IVAL,COLH
	REAL	RVAL
	INTEGER	IND(IFF_MAXCBCOL-1),INDXY(2)
	INTEGER	SWITCH
C
	GETATT = .FALSE.			! no overflow yet
C
C set pointer array (IND) to all absent
	DO 100 ATT=1,NATT
	   IND(ATT) = 0
100	CONTINUE
	INDXY(1) = 0
	INDXY(2) = 0
C
C for each fixed attribute, then for each varying column in the CB,
C check if we have a column in ATTV, and if not, create one
	SWITCH = -1		! fixed attributes first
101	IF (SWITCH.LT.0) THEN
	   N = CBH.NATT
	ELSE
	   N = CBH.NCOL
	ENDIF
	DO 105 COL=1,N
	   IF (SWITCH.LT.0) THEN
	      COLH = CBH.ATT(COL).ATTC
	   ELSE
	      COLH = CBH.COLH(COL)
	   ENDIF
	   IF (COLH.EQ.IFF_C_X) THEN
	      INDXY(1) = COL*SWITCH
	   ELSEIF (COLH.EQ.IFF_C_Y) THEN
	      INDXY(2) = COL*SWITCH
	   ELSE
	      DO 102 ATT=1,NATT
	         IF (ATTC(ATT).EQ.COLH) GOTO 104
102	      CONTINUE
	      IF (NATT.GE.MATT) THEN
	         GETATT = .TRUE.	! overflow
	         GOTO 105
	      ENDIF
	      NATT = NATT+1		! add new column
	      ATTC(NATT) = COLH
	      DO 103 ROW=1,NROW		! fill in absent value
	         ATTV(NATT,ROW) = IFF_ABSENT
103	      CONTINUE
	      ATT = NATT
104	      IND(ATT) = COL*SWITCH
	   ENDIF
105	CONTINUE
	SWITCH = -SWITCH
	IF (SWITCH.GT.0) GOTO 101
C
C now extract X,Y, and other attributes
	DO 110, ROW=FIRST,LAST
	   DO 108 ATT=1,2
	      IF (INDXY(ATT).GT.0) THEN
	         RVAL=CBD.R((ROW-1)*CBH.NCOL+INDXY(ATT))
	      ELSE
	         RVAL=CBH.ATT(-INDXY(ATT)).RATTV
	      ENDIF
	      XY(ATT,ROW+NROW-FIRST+1) = RVAL
108	   CONTINUE
	   DO 109 ATT=1,NATT
	      IF (IND(ATT).GT.0) THEN
	         IVAL=CBD.I((ROW-1)*CBH.NCOL+IND(ATT))
	      ELSEIF (IND(ATT).LT.0) THEN
	         IVAL=CBH.ATT(-IND(ATT)).IATTV
	      ELSE
	         IVAL=IFF_ABSENT
	      ENDIF
	      ATTV(ATT,ROW+NROW-FIRST+1) = IVAL
109	   CONTINUE
110	CONTINUE
C
	RETURN
	END
