C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1993-11-10 16:43:06.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE NXTCMD
C
***	IDENT	10NO93
***	MODULE	NXTCMD
C
C	Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C	Created					RJH	03-AUG-1984
C
C Description
C
C    This subroutine is part of the LITES2 Command Interface, and its
C purpose is to get the next valid command.
C    A new line is read in if required, and the next command read. This
C process is repeated until a command has been successfully read.
C
	IMPLICIT NONE
C
***     PARAMETER/CMN:MOANMESS/		! moan constants
***	PARAMETER/CMN:STAPAR/
C
***	COMMON/CMN:DFILRD/		! command filename details
***     COMMON/CMN:DVAR/		! command decoding variables
***     COMMON/CMN:GLOBAL/		! global variables
***     COMMON/CMN:LVAR/		! line input variables
***	COMMON/CMN:OPTION/		! options
***	COMMON/CMN:STATE/
C
C Functions called
C
	LOGICAL		RSPINP		! respond input ?
	LOGICAL		HADCTRLC	! CTRL/C typed ?
	LOGICAL		BOTSTK		! interactive input ?
C
C Local Variables
C
	LOGICAL		CLEAR		! clear pending commands ?
	LOGICAL		CTRL		! had control-c
	LOGICAL		ERROR		! error ?
	LOGICAL		CLEAR_RESP	! clear back to responding
C
	LAST_MOANED = MOANED		! save for system variable
100	CONTINUE
	CTRL = HADCTRLC()
	CLEAR= .FALSE.
	CLEAR_RESP = .FALSE.
	IF (MOANED.AND.RECODN.AND..NOT.CONOPT) THEN
	   CLEAR_RESP = RSPINP()
	   CLEAR = .NOT.CLEAR_RESP.AND.
     &		.NOT.(SINDEX.EQ.STATE_MACRO.AND.BOTSTK())
	ENDIF
	ERROR = MOANED
	MOANED = .FALSE.
	DIGN = .FALSE.
	DNPARS = .FALSE.
C
C Return to interactive input if necessary
C when 1) moaned (and not responding, or in recovery file
C                  or ENABLE CONTINUE,
C		   or defining macro interactively)
C      2) had a CTRL/C
C      3) had a CANCEL RESPOND command
C
	IF (CLEAR.OR.CTRL.OR.(CANC_RESP.AND.RSPINP())) THEN
	   CALL CLRCMD(CLEAR,CTRL)	! abandon all pending commands
C
C return to 2nd level ineractive input
	ELSEIF (CLEAR_RESP) THEN
	   CALL CLRRSP
	ELSE IF (ERROR) THEN
	   CALL CONMSG			! going on to next command
	ENDIF
C
C Check for error
C
	IF (MOANED) THEN
	   LAST_MOANED = MOANED		! save for system variable
	   MOANED = .FALSE.
	   CALL INFORM(MSG_ADVISEFIN)
	   CALL PING
	ENDIF
C
C Get a new line if required
C
	IF (DNEW) THEN
	   CALL GETLIN			! get new line
	ELSE IF (NEWFIL) THEN		! defining a macro ?
	   NEWFIL = .FALSE.		! reset filename flag
	ENDIF				! if defining a macro
C
C Repeat if there was an error getting the line
C
	IF (MOANED .OR.
     &	    (CTRLC.NE.CTRLC_OFF .AND. CTRLC.NE.CTRLC_BREAK)) GO TO 100
C
C Attempt to get next command, if any
C
	CALL GETCMD
C
C Journal command as typed
C
	CALL JOUCMD
C
C Repeat if a new line is required
C
	IF (DNEW .OR. DIGN .OR. MOANED) GO TO 100
C
C Return
C
	RETURN
	END
