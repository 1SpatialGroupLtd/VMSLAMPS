C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1996-05-09 11:23:32.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE DOCHAN
C
***	IDENT   09MY96
***	MODULE  DOCHAN
C
C	Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C	Written					CCB	23-NOV-1984
C
C Description
C
C	LITES2 cartographic editor CHANGE command.
C
	IMPLICIT NONE
C
	INCLUDE	'LSL$CMNIFF:CB.STR'
***	PARAMETER/CMN:AUXDEF/
***	PARAMETER/CMN:CTXS/
***	PARAMETER/CMN:END/
***	PARAMETER/CMN:EFNLUN/
***	PARAMETER/CMN:MOANMESS/
***	PARAMETER/CMN:PACK/
***	PARAMETER/CMN:STAPAR/
C
***	COMMON/CMN:CSTRCT/
***	COMMON/CMN:CTXS/
***	COMMON/CMN:DEFINE/
***     COMMON/CMN:DOUT/
***	COMMON/CMN:DRAWIN/
***	COMMON/CMN:FCS/
***	COMMON/LSL$CMNFRT:FRTCOM/
***	COMMON/CMN:LAYERS/
***	COMMON/CMN:OIIH/
***     COMMON/CMN:OPTION/
***	COMMON/CMN:MAPS/
***	COMMON/CMN:OSPTSZ/
***	COMMON/CMN:MASTER/
***	COMMON/CMN:MODIFY/
***	COMMON/CMN:STATE/
***	COMMON/CMN:STRIKE/
***	COMMON/CMN:VARIAT/
C
C working storage
C
	REAL		SIZE		! size of symbol
	REAL		XY(2)		! coordinate pair
	LOGICAL		INMOD		! .TRUE. if in MODIFY state
	LOGICAL		INSY		! .TRUE. if in symbol state
	LOGICAL		INTXT		! .TRUE. if in TEXT state
	LOGICAL		SYMBOL		! .TRUE. if FO was symbol
					! .FALSE. if it was text
	REAL		TMP		! as it says
	INTEGER		ADDR		! address of current ctx
	INTEGER		STAADR,FINADR	! addresses of first and last CTX
C
C functions called
	LOGICAL	CHKPRT,COIDLE
	INTEGER GENNF
	INTEGER	FNDOVR
	LOGICAL	FRTFND
	LOGICAL	GENCIR
C
	EXTERNAL	MOAN,INFORM
C
	INMOD=SINDEX.EQ.STATE_MODIFY
	INSY =SINDEX.EQ.STATE_SYMBOL
	INTXT=SINDEX.EQ.STATE_TEXT
	IF (INMOD) THEN
	   SYMBOL=COIPAK(PAKGT).GE.UNOTYP.AND.COIPAK(PAKGT).LE.SCATYP
	ELSEIF (INSY) THEN
	   SYMBOL=.TRUE.
	ELSEIF (INTXT) THEN
	   SYMBOL=.FALSE.
	ENDIF
C
C Dispatch according to secondary command
C
	GOTO ( 100, 200, 300, 400, 500, 600, 700, 800, 900,
     &		1000, 1100, 1200, 1300, 1400), DSECN
C
C Secondary command number out of range
C
	CALL NASTY(MSG_ERRSECIND,DPRI(1:DPRIL))
	GOTO 8900
C
C Secondary command FSN (optional number, generate if not supplied)
C
100	IF (DNINT.GT.0.AND.(DINTS(1).LT.0.OR.DINTS(1).GT.MAXFSN)) THEN
	   CALL MOAN(MSG_ILLEGLFSN,MAXFSN)
	   GOTO 8900
	ENDIF
C
C deal with text,symbol and modify state
C
	IF (INMOD.OR.INSY.OR.INTXT) THEN
	   IF (INSY.OR.INTXT) THEN		! if not in it, get into
	      IF (COIDLE(.TRUE.)) GOTO 8900	! MODIFY state
	   ENDIF
C
C cannot alter FSN when in subtext mode
C
	   IF (.NOT.SYMBOL.AND.SUBTXT) THEN
	      CALL MSGCMD(MOAN,MSG_NOTWITHCOMP)
	      GOTO 8900
	   ENDIF
C
	   IF (DNINT.EQ.0) THEN
	      COIPAK(PAKFSN) = GENNF(COIPAK)
	   ELSE
	      COIPAK(PAKFSN) = DINTS(1)
	   ENDIF
	   FLG_CODECHANGE = .TRUE.		! this is a code change
	   GOTO 9000
	ENDIF
C
C deal with other states
C
C allow old FSN to be retained if changing the map
	IF (DNINT.GT.0.AND.DINTS(1).EQ.FOPAK(PAKFSN).AND..NOT.CHMAP) THEN
	   IF (.NOT.CHFSN) GOTO 8800	! same value
	   CHFSN = .FALSE.
	ELSE
	   CHFSN = .TRUE.		! want new FSN
	   IF (DNINT.EQ.0) THEN
	      NEWFSN = GENNF(FOPAK)
	   ELSE
	      NEWFSN = DINTS(1)
	   ENDIF
	ENDIF
	GOTO 7000
C
C Secondary command FC
C
200	IF (DINTS(1).LT.0.OR.DINTS(1).GT.MAXFC) THEN
	   CALL MOAN(MSG_ILLEGLFC,MAXFC)
	   GOTO 8900
	ENDIF
C
C deal with text,symbol and modify state
C
	IF (.NOT.(INMOD.OR.INSY.OR.INTXT)) GOTO 250
	IF (FRTFND(DINTS(1))) THEN		! check that input
	   CALL MOAN(MSG_BADCODE,DINTS(1))	! is defined in FRT
	   GOTO 8900
	ENDIF
C
C preserve new size and GT, since COIDLE calls FRTFND
	NEWGT = FRTGT
	SIZE = FRTSIZ
C
C	   check for consistent graphical type
C
	IF (NEWGT.LT.UNOTYP.OR.NEWGT.GT.TEXTYP
     &	      .OR.(.NOT.SYMBOL.AND.NEWGT.NE.TEXTYP)
     &	      .OR.(SYMBOL.AND.NEWGT.EQ.TEXTYP)) THEN
	   CALL MOAN(MSG_INCONSTCODE)
	   GOTO 8900
	ENDIF
C
C	   if not in MODIFY state, get into it
C
	IF (INSY.OR.INTXT) THEN
	   IF (COIDLE(.TRUE.)) GOTO 8900
	ENDIF
C
C cannot alter FC when in subtext mode
C
	   IF (.NOT.SYMBOL.AND.SUBTXT) THEN
	      CALL MSGCMD(MOAN,MSG_NOTWITHCOMP)
	      GOTO 8900
	   ENDIF
C
C	   sort out different possible types of symbols
C
	IF (SYMBOL) THEN
	   HADRO=.FALSE.		! start with unorientated symbol
	   COIIND=2			! with one point
	ENDIF
	IF (NEWGT.EQ.SCATYP) THEN		! scaled symbol
	   IF (COIPAK(PAKGT).NE.SCATYP) THEN	! old symbol not scaled
	      SIZE=SIZE*SCLFRT			! use size from FRT
	      IF (SIZE.LE.0.0) SIZE=DFSSIZ*SCLFRT ! otherwise default
	      XY(1)=COIXY(1,2)+SIZE*COS(COIANG)	! get second
	      XY(2)=COIXY(2,2)+SIZE*SIN(COIANG)	! point
C
C add it to output array (with no attributes)
	      CONATT = 0
	      CALL ADCORD(XY,CONATT,COATTC,COATTV)
	   ENDIF
	ELSEIF (NEWGT.EQ.ORITYP) THEN 		! oriented symbol
	   HADRO=.TRUE.
C
C	      stop doing inconsistent things
C
	   IF (NDMODE.EQ.END_ALIGN.OR.NDMODE.EQ.END_STRETCH) THEN
	      IF (NDMODE.EQ.END_STRETCH) CALL FRECUR
	      NDMODE=END_CONSTRUCT
	   ENDIF
	ELSEIF (NEWGT.EQ.UNOTYP) THEN		! unoriented symbol
	   COIANG=0.0
C
C	      stop doing inconsistent things
C
	   IF (NDMODE.EQ.END_STRETCH) CALL FRECUR
	   IF (NDMODE.EQ.END_ROTATE.OR.
     &	       NDMODE.EQ.END_ALIGN.OR.
     &	       NDMODE.EQ.END_STRETCH) NDMODE=END_CONSTRUCT
	ENDIF
	IF (SYMBOL) THEN
	   CONFS(1)=DINTS(1)			! set FC in FS entry
	   COIPAK(PAKFC)=DINTS(1)		! set FC in output pack
	ELSE
C
C if there is only one text component, then PACK(PAKFC) means FC, not
C TCC, and when FC is altered, so should how it is drawn. Must also
C update the TS entry in the one CTX as this is used for drawing all
C texts
C
	   IF (COICTXD(CTXD_NCTX).EQ.1) THEN
	      COIPAK(PAKFC) = DINTS(1)
	      CALL LIB$INSV(DINTS(1),0,16,
     &	                    %VAL(COICTXD(CTXD_HOME)+CTX_O_TS))
	   ENDIF
	   COIFC = DINTS(1)			! use this for texts
	ENDIF
	COIPAK(PAKGT)=NEWGT			! and GT
	FLG_CODECHANGE = .TRUE.		! this is a code change
	MODMOD=.TRUE.				! redraw refresh picture
	GOTO 9000
C
C deal with lines, circles etc.
C
250	IF (DINTS(1).EQ.FOPAK(PAKFC)) THEN
	   IF (.NOT.CHFC) GOTO 8800	! same value
	   CHFC = .FALSE.		! cancel the change
	   REFLSH = .FALSE.		! and any re-flush
	ELSE
	   IF (FRTFND(DINTS(1))) THEN
	      CALL MOAN(MSG_BADCODE,DINTS(1))
	      GOTO 8900
	   ENDIF
C
C Allow change of GT between lines, curves, symbol strings, areas,
C circles, but not text or symbol
	   IF (FRTGT.NE.FOPAK(PAKGT)) THEN
	      IF ( FRTGT.GE.UNOTYP.AND.FRTGT.LE.TEXTYP) THEN
	         CALL MOAN(MSG_INCONSTCODE)
	         GOTO 8900
	      ENDIF
C
C Forbid part operation if old or new is a circle
	      IF (SINDEX.EQ.STATE_ON.AND.NDMODE.EQ.END_PART.AND.(FRTARC
     &	.OR.(FOPAK(PAKGT).GE.CLOTYP.AND.FOPAK(PAKGT).LE.FULTYP))) THEN
	         CALL MOAN(MSG_NOPARTCIRCLE)
	         GOTO 8900
	      ENDIF
C
C If changing to a circle type, then check this is viable
	      IF (FRTARC) THEN
	         IF (FOLST.NE.3) THEN
	            CALL MOAN(MSG_NEED3POINTS)
	            GOTO 8900
	         ENDIF
	         IF ( GENCIR(FRTGT,FOXY,COIAUX) ) GOTO 8900
	         REFLSH = .TRUE.	! will need to re-flush
	      ELSEIF
     &	   ((FOPAK(PAKGT).GE.CLOTYP.AND.FOPAK(PAKGT).LE.FULTYP) .OR.
     &	    (FOPAK(PAKGT).EQ.STRTYP.OR.FRTGT.EQ.STRTYP) .OR.
     &	    ((FOPAK(PAKGT).EQ.ARETYP.OR.FRTGT.EQ.ARETYP).AND.ENCOPT)
     &			 ) THEN
	         REFLSH = .TRUE.
	      ENDIF
C
C Prevent changing one point symbol string into a line
	      IF (FOPAK(PAKGT).EQ.STRTYP.AND.FOLST.LE.1) THEN
	         IF (FRTGT.NE.STRTYP) THEN
	            REFLSH = .FALSE.
	            CALL MOAN(MSG_ONEPOINTSTRING)
	            GOTO 8900
	         ENDIF
	      ENDIF
	   ENDIF
	   CHFC = .TRUE.			! want new FC
	   NEWFC = FRTFC
	   NEWGT = FRTGT
	ENDIF
	GOTO 7000
C
C Secondary command HEIGHT
C
300	CONTINUE
	IF (.NOT.(INTXT.OR.(INMOD.AND..NOT.SYMBOL))) THEN  ! only when
	   CALL MOAN(MSG_NOTTEXT)			   ! dealing
	   GOTO 8900					   ! with text
	ELSEIF (.NOT.HEIOPT) THEN
	   CALL MOAN(MSG_ILLEGLTXT)
	   GOTO 8900
	ELSEIF (POIOPT) THEN
	   CALL MOAN(MSG_ILLEGLMMS)
	   GOTO 8900
	ELSEIF (DREALS(1).LT.0.01) THEN
	   CALL MOAN(MSG_ILLEGMMVAL)
	   GOTO 8900
	ENDIF
C
C	if not in MODIFY state, get into it
C
	IF (INTXT) THEN
	   IF (COIDLE(.TRUE.)) GOTO 8900
	ENDIF
C
C get start and end of linked list to scan
	IF (SUBTXT) THEN			! only update home CTX
	   STAADR = COICTXD(CTXD_HOME)
	   FINADR = COICTXD(CTXD_HOME)
	ELSE
	   STAADR = COICTXD(CTXD_FSTCTX)
	   FINADR = COICTXD(CTXD_LSTCTX)
	ENDIF
C
C	insert value
C
	TMP=DREALS(1)
	CALL TSTUNT(.FALSE.,1,TMP)		! expecting mms
	CONTH=TMP*100
	ADDR = STAADR
310	CONTINUE
C update CTX
	CALL PUTLNG(CONTH,%VAL(ADDR+CTX_O_TH))
C
C try next CTX in list?
	IF (ADDR.NE.FINADR) THEN
	   CALL PUTLNG(%VAL(ADDR),ADDR)
	   GOTO 310
	ENDIF
	FLG_GEOCHANGE = .TRUE.	! this is a geomatric change
C
C tell RFDRAW something changed
	MODMOD=.TRUE.
	GOTO 9000
C
C Secondary command POINTSIZE
C
400	CONTINUE
	IF (.NOT.(INTXT.OR.(INMOD.AND..NOT.SYMBOL))) THEN ! only when
	   CALL MOAN(MSG_NOTTEXT)			   ! dealing
	   GOTO 8900					   ! with text
	ELSEIF (.NOT.HEIOPT) THEN
	   CALL MOAN(MSG_ILLEGLTXT)
	   GOTO 8900
	ELSEIF (.NOT.POIOPT) THEN
	   CALL MOAN(MSG_ILLEGLPOI)
	   GOTO 8900
	ELSEIF (DINTS(1).LT.3.OR.DINTS(1).GT.24) THEN	! point sizes in
	   CALL MOAN(MSG_ILLEGPOIRNG,3,24)		! range 3 - 24
	   GOTO 8900
	ELSEIF (OSPTSZ(DINTS(1)).LE.0.0) THEN		! not valid
	   CALL MOAN(MSG_NOPOINTSIZE)			! point value
	   CALL LEARN(MSG_VALIDPTSZ)
	   GOTO 8900
	ENDIF
C
C	if not in MODIFY state, get into it
C
	IF (INTXT) THEN
	   IF (COIDLE(.TRUE.)) GOTO 8900
	ENDIF
C
C get start and end of linked list to scan
	IF (SUBTXT) THEN			! only update home CTX
	   STAADR = COICTXD(CTXD_HOME)
	   FINADR = COICTXD(CTXD_HOME)
	ELSE
	   STAADR = COICTXD(CTXD_FSTCTX)
	   FINADR = COICTXD(CTXD_LSTCTX)
	ENDIF
C
C	insert value
C
	CONTH=DINTS(1)
	ADDR = STAADR
410	CONTINUE
C update CTX
	CALL PUTLNG(CONTH,%VAL(ADDR+CTX_O_TH))
C
C try next CTX in list?
	IF (ADDR.NE.FINADR) THEN
	   CALL PUTLNG(%VAL(ADDR),ADDR)
	   GOTO 410
	ENDIF
C
C tell RFDRAW something changed
	FLG_GEOCHANGE = .TRUE.	! this is a geomatric change
	MODMOD=.TRUE.
	GOTO 9000
C
C Secondary command CATEGORY
C
500	CONTINUE
	IF (.NOT.(INTXT.OR.(INMOD.AND..NOT.SYMBOL))) THEN ! only when
	   CALL MOAN(MSG_NOTTEXT)			   ! dealing
	   GOTO 8900					   ! with text
	ELSEIF (DINTS(1).LT.0.OR.DINTS(1).GT.63) THEN	! only if valid
	   CALL MOAN(MSG_ILLEGCLASS,0,63)		! value
	   GOTO 8900
	ENDIF
C
C	if not in MODIFY state, get into it
C
	IF (INTXT) THEN
	   IF (COIDLE(.TRUE.)) GOTO 8900
	ENDIF
C
C get start and end of linked list to scan
	IF (SUBTXT) THEN			! only update home CTX
	   STAADR = COICTXD(CTXD_HOME)
	   FINADR = COICTXD(CTXD_HOME)
	ELSE
	   STAADR = COICTXD(CTXD_FSTCTX)
	   FINADR = COICTXD(CTXD_LSTCTX)
	ENDIF
C
C	insert value
C
	ADDR = STAADR
510	CONTINUE
C update CTX
	CALL LIB$INSV(DINTS(1),6,6,%VAL(ADDR+CTX_O_TS+4))
C
C try next CTX in list?
	IF (ADDR.NE.FINADR) THEN
	   CALL PUTLNG(%VAL(ADDR),ADDR)
	   GOTO 510
	ENDIF
	FLG_CODECHANGE = .TRUE.		! this is a code change
	GOTO 9000
C
C Secondary command LOCATION
C
600	CONTINUE
	IF (.NOT.(INTXT.OR.(INMOD.AND..NOT.SYMBOL))) THEN  ! only when
	   CALL MOAN(MSG_NOTTEXT)			   ! dealing
	   GOTO 8900					   ! with text
	ELSEIF (.NOT.POSOPT) THEN	! positioning not enabled
	   CALL MOAN(MSG_NOPOSITIONING)
	   GOTO 8900
	ELSEIF (DINTS(1).LT.0.OR.DINTS(1).GT.8) THEN	! only if valid
	   CALL MOAN(MSG_ILLEGLLOC)			! value
	   GOTO 8900
	ENDIF
C
C	if not in MODIFY state, get into it
C
	IF (INTXT) THEN
	   IF (COIDLE(.TRUE.)) GOTO 8900
	ENDIF
C
C get start and end of linked list to scan
	IF (SUBTXT) THEN			! only update home CTX
	   STAADR = COICTXD(CTXD_HOME)
	   FINADR = COICTXD(CTXD_HOME)
	ELSE
	   STAADR = COICTXD(CTXD_FSTCTX)
	   FINADR = COICTXD(CTXD_LSTCTX)
	ENDIF
C
C	put value in bottom 4 bits
C
	ADDR = STAADR
610	CONTINUE
C
C update CTX
	CALL LIB$INSV(DINTS(1),0,4,%VAL(ADDR+CTX_O_TS+4))
C
C try next CTX in list?
	IF (ADDR.NE.FINADR) THEN
	   CALL PUTLNG(%VAL(ADDR),ADDR)
	   GOTO 610
	ENDIF
C
C	redraw refresh picture
C
	FLG_GEOCHANGE = .TRUE.	! this is a geomatric change
	MODMOD=.TRUE.
	GOTO 9000
C
C Secondary command STYLE
C
700	CONTINUE
	IF (.NOT.(INTXT.OR.(INMOD.AND..NOT.SYMBOL))) THEN ! only when
	   CALL MOAN(MSG_NOTTEXT)			   ! dealing
	   GOTO 8900					   ! with text
	ELSEIF (DINTS(1).LT.0.OR.DINTS(1).GT.3) THEN	! only if valid
	   CALL MOAN(MSG_ILLEGFONT,0,3)			! value
	   GOTO 8900
	ENDIF
C
C	if not in MODIFY state, get into it
C
	IF (INTXT) THEN
	   IF (COIDLE(.TRUE.)) GOTO 8900
	ENDIF
C
C get start and end of linked list to scan
	IF (SUBTXT) THEN			! only update home CTX
	   STAADR = COICTXD(CTXD_HOME)
	   FINADR = COICTXD(CTXD_HOME)
	ELSE
	   STAADR = COICTXD(CTXD_FSTCTX)
	   FINADR = COICTXD(CTXD_LSTCTX)
	ENDIF
C
C	put value in bottom 4 bits
C
	ADDR = STAADR
710	CONTINUE
C
C update CTX
	CALL LIB$INSV(DINTS(1),4,2,%VAL(ADDR+CTX_O_TS+4))
C
C try next CTX in list?
	IF (ADDR.NE.FINADR) THEN
	   CALL PUTLNG(%VAL(ADDR),ADDR)
	   GOTO 710
	ENDIF
C
	FLG_CODECHANGE = .TRUE.		! this is a code change
	GOTO 9000
C
C Secondary command CROSSREF
C
800	CONTINUE
	CALL MSGCMD(INFORM,MSG_CMDNOTIMPLE)
	GOTO 8900
C
C Secondary command DIRECTION
C
900	CONTINUE
	CALL MSGCMD(INFORM,MSG_CMDNOTIMPLE)
	GOTO 8900
C
C Secondary command LAYER
C
1000	IF (DINTS(1).LT.0.OR.DINTS(1).GT.TOPLAY) THEN
	   CALL MOAN(MSG_ILLEGLLAYER,TOPLAY)
	   GOTO 8900
	ENDIF
	NEWLAY = FNDOVR(DINTS(1))	! returns internal number
	IF (NEWLAY.LT.0) THEN
	   CALL MOAN(MSG_LAYNOTEXIST,DINTS(1))
	   GOTO 8900
	ENDIF
C
C deal with text,symbol and modify state
C
	IF (INMOD.OR.INSY.OR.INTXT) THEN
	   IF (INSY.OR.INTXT) THEN	! not in MODIFY mode, so get
	      IF (COIDLE(.TRUE.)) GOTO 8900	! in it
	   ENDIF
C
C cannot alter LAYER when in subtext mode
C
	   IF (.NOT.SYMBOL.AND.SUBTXT) THEN
	      CALL MSGCMD(MOAN,MSG_NOTWITHCOMP)
	      GOTO 8900
	   ENDIF
C
	   COIPAK(PAKOVL)=NEWLAY
	   FLG_CODECHANGE = .TRUE.		! this is a code change
	   GOTO 9000
	ENDIF
C
C deal with other possible states
C
	IF (NEWLAY.EQ.FOPAK(PAKOVL)) THEN
	   IF (.NOT.CHLAY) GOTO 8800	! same value
	   CHLAY = .FALSE.
	ELSE
	   CHLAY = .TRUE.		! change layer to NEWLAY
	ENDIF
	GOTO 7000
C
C Secondary command MAP
C
1100	IF (DINTS(1).LE.0.OR.DINTS(1).GT.MAXMAP) THEN
	   CALL MOAN(MSG_ILLEGLMAP,MAXMAP)
	   GOTO 8900
	ENDIF
	NEWMAP = DINTS(1)-1		! internal number
	IF (NEWMAP.GT.MAPTOP.OR..NOT.MAP_EXIST(NEWMAP)) THEN
	   CALL MOAN(MSG_MAPNOTEXIST,DINTS(1))
	   GOTO 8900
	ENDIF
C
C deal with text,symbol and modify state
C
	IF (INMOD.OR.INSY.OR.INTXT) THEN
	   IF (MAPRO(NEWMAP))THEN		 ! check map read/write
	      CALL MOAN(MSG_MAPREADONLY,DINTS(1))
	      GOTO 8900
	   ENDIF
	   IF (INSY.OR.INTXT) THEN		! if not in MODIFY mode
	      IF (COIDLE(.TRUE.)) GOTO 8900	! get into it
	   ENDIF
C
C cannot alter MAP when in subtext mode
C
	   IF (.NOT.SYMBOL.AND.SUBTXT) THEN
	      CALL MSGCMD(MOAN,MSG_NOTWITHCOMP)
	      GOTO 8900
	   ENDIF
C
	   FLG_CODECHANGE = .TRUE.		! this is a code change
	   COIPAK(PAKMAP) = NEWMAP		! update constr. map
	   COIPAK(PAKFSN) = -1			! need new FSN
	   GOTO 9000
	ENDIF
C
C deal with other possible states
C
	IF (NEWMAP.EQ.FOPAK(PAKMAP)) THEN
	   IF (.NOT.CHMAP) GOTO 8800
	   CHMAP = .FALSE.
C
C if were retaining the old FSN in a CHANGE MAP operation, then cancel
C the FSN change completely
	   IF (CHFSN.AND.NEWFSN.EQ.FOPAK(PAKFSN)) CHFSN = .FALSE.
	ELSE
	   IF (MAPRO(NEWMAP)) THEN
	      CALL MOAN(MSG_MAPREADONLY,DINTS(1))
	      GOTO 8900
	   ENDIF
	   CHMAP = .TRUE.			! change map
	ENDIF
	GOTO 7000
C
C Secondary command PC
C
1200	IF (INTXT.OR.(INMOD.AND..NOT.SYMBOL)) THEN
	   CALL MOAN(MSG_NOPCINTEXT)		! no PC's in text
	   GOTO 8900
	ENDIF
	IF (DINTS(1).LT.0.OR.DINTS(1).GT.16383) THEN
	   CALL MOAN(MSG_ILLEGLPC,16383)	! PC's fit in 14 bits
	   GOTO 8900
	ENDIF
C
C deal with text,symbol and modify state
C
	IF (INMOD.OR.INSY.OR.INTXT) THEN
C
C	   if not in MODIFY state, get into it
C
	   IF (INSY) THEN
	      IF (COIDLE(.TRUE.)) GOTO 8900
	   ENDIF
C
C	   insert value
C
	   CALL LIB$INSV(DINTS(1),0,14,CONFS(3))	! set PC
	   FLG_CODECHANGE = .TRUE.		! this is a code change
	   GOTO 9000
	ENDIF
C
C deal with other possible states
C
	IF (DINTS(1).EQ.(FOFS(3).AND.16383)) THEN
	   IF (.NOT.CHPC) GOTO 8800	! same value
	   CHPC = .FALSE.
	ELSE
	   CHPC = .TRUE.			! want new PC
	   NEWPC = DINTS(1)
	ENDIF
	GOTO 7000
C
C Secondary command <CC,TCC>
C
1300	CONTINUE
C
C only valid if dealing with texts
C
	IF (.NOT.(INTXT.OR.(INMOD.AND..NOT.SYMBOL))) THEN ! only when
	   CALL MOAN(MSG_NOTTEXT)			   ! dealing
	   GOTO 8900					   ! with text
	ENDIF
C
C valid feature code?
C
	IF (DINTS(1).LT.0.OR.DINTS(1).GT.MAXFC) THEN
	   CALL MOAN(MSG_ILLEGLFC,MAXFC)
	   GOTO 8900
	ENDIF
C
	IF (FRTFND(DINTS(1))) THEN		! check that input is
	   CALL MOAN(MSG_BADCODE,DINTS(1))	! is defined in FRT
	   GOTO 8900
	ENDIF
C
C   check for consistent graphical type
C
	IF (.NOT.FRTTEX) THEN
	   CALL MOAN(MSG_INCONSTCODE)
	   GOTO 8900
	ENDIF
C
C	if not in MODIFY state, get into it
C
	IF (INTXT) THEN
	   IF (COIDLE(.TRUE.)) GOTO 8900
	ENDIF
C
	CONFS(1)=DINTS(1)			! set TCC in TS entry
	COIPAK(PAKFC)=DINTS(1)			! set TCC in output pack
C
C get start and end of linked list to scan
	IF (SUBTXT) THEN			! only update home CTX
	   STAADR = COICTXD(CTXD_HOME)
	   FINADR = COICTXD(CTXD_HOME)
	ELSE
	   STAADR = COICTXD(CTXD_FSTCTX)
	   FINADR = COICTXD(CTXD_LSTCTX)
	ENDIF
C
C and set new TCC
C
	ADDR = STAADR
1310	CONTINUE
	CALL LIB$INSV(DINTS(1),0,16,%VAL(ADDR+CTX_O_TS))
C
C try next CTX in list?
	IF (ADDR.NE.FINADR) THEN
	   CALL PUTLNG(%VAL(ADDR),ADDR)
	   GOTO 1310
	ENDIF
C
	FLG_CODECHANGE = .TRUE.		! this is a code change
	MODMOD=.TRUE.				! redraw refresh picture
	GOTO 9000
C 
C 
C Secondary command EDITED
C
1400	IF (DINTS(1).LT.0.OR.DINTS(1).GT.1) THEN
	   CALL MOAN(MSG_ILLEGFLA)
	   GOTO 8900
	ENDIF
C
C deal with text,symbol and modify state
C
	IF (INMOD.OR.INSY.OR.INTXT) THEN
	   IF (INSY.OR.INTXT) THEN		! if not in it, get into
	      IF (COIDLE(.TRUE.)) GOTO 8900	! MODIFY state
	   ENDIF
C
C cannot alter FLAG when in subtext mode
C
	   IF (.NOT.SYMBOL.AND.SUBTXT) THEN
	      CALL MSGCMD(MOAN,MSG_NOTWITHCOMP)
	      GOTO 8900
	   ENDIF
C
	ENDIF
C
C deal with other states
C
	IF (DINTS(1) .EQ. 1) THEN
	   SETEDT = .TRUE.		! set flag edited
	ELSE
	   CLREDT = .TRUE.		! clear edited flag
	ENDIF
	GOTO 7000
C
C
C Exit for valid CHANGE command
7000	IF (SINDEX.EQ.STATE_ON) GOTO 9000
C
C Complete operation here for LINE and CIRCLE state
	IF (CHKPRT(.TRUE.)) THEN	! check ready for CHPART
	   CALL NOCHAN			! cancel changes
	   GOTO 8900
	ENDIF
	CALL HANDLE				! take into hand
	CALL CHPART(.TRUE.)			! create changed feature
	CALL ABANDN
	GOTO 9000
C
C same value error
8800	CALL MOAN(MSG_SAMEVALUE)
C
C error exit
8900	CALL IGNCMD
C
C Return
9000	RETURN
	END
