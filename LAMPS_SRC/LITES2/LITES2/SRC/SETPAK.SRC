C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1989-11-07 10:24:24.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL FUNCTION SETPAK( SECTOR )
C
***	IDENT	07NO89
***	MODULE	SETPAK
C
C Copyright Laser-Scan Laboratories Ltd., Cambridge, England
C
C Author Clarke Brunt, 1 March 1984
C
C To set up the pointers in common /SECMAP/ so that NXTPAK will return
C the first pack for SECTOR.
C Return FALSE is all is well, TRUE if no packs for SECTOR.
C
	IMPLICIT NONE
C
***	PARAMETER/CMN:SECTOR/
***	COMMON/CMN:SECMAP/
C
C argument
C
	INTEGER		SECTOR		! the sector to use
	INTEGER		FIRST_BLOCK
C
C function
	INTEGER		GETARR
C
	SETPAK = .TRUE.			! assume sector empty
	FIRST_BLOCK = GETARR(%VAL(FSTBLK),SECTOR)  	! first block
	IF (FIRST_BLOCK.NE.0) THEN		! isn't empty
	   PAKBLK = FIRST_BLOCK		    	! first block
	   PAKPTR = -PAKSZ		! point one before start
	   PAKSEC = SECTOR		! sector number itself
	   LAST_PACK = GETARR(%VAL(LSTPTR),PAKSEC)
	   LAST_BLOCK = GETARR(%VAL(LSTBLK),PAKSEC)
	   SETPAK = .FALSE.		! so return false
	ENDIF
	RETURN
	END
