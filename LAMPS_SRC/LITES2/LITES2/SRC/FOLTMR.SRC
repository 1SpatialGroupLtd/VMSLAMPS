C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1989-12-15 09:23:20.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE FOLTMR(AST)
C
***	IDENT   15DE89
***	MODULE  FOLTMR
C
C	Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C	Written					RWR	14-Mar-1989
C	To set follow timer going (for stream digitising)
C
	IMPLICIT NONE
C
***	COMMON/CMN:FOLLOW/
***	COMMON/CMN:VAREFN/
***	COMMON/CMN:WORKS/
C
C argument
	EXTERNAL	AST			! callers AST routine
C
C functions called
	INTEGER*4	SYS$SETIMR
C
C w/s
	EXTERNAL	FOLAST			! timer AST routine
	INTEGER*4	DAYTIM(2)
	INTEGER*4	ERROR
C
C cancel old request (if any)
	CALL SYS$CANTIM(%VAL(FOLFLG),)
C
C and set new one
	DAYTIM(1) = -10 000 000*FOLLOW_TIME	! to delta ticks
	DAYTIM(2) = -1				! upper longword
C
	FOLLOWED = .FALSE.
C
C pass address of caller's AST routine as AST parameter
	ERROR = SYS$SETIMR(%VAL(FOLFLG),DAYTIM,FOLAST,AST)
	IF (.NOT.ERROR) CALL LITES2_SIGNAL(ERROR)
C
	RETURN
	END
C
	SUBROUTINE FOLAST(AST)
C
***	IDENT   15DE89
***	MODULE  FOLAST
C
C	Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C	Written					RWR	14-Mar-1989
C	Following timer AST routine
C
	IMPLICIT NONE
C
***	COMMON/CMN:WORKS/
C
C argument
	EXTERNAL	AST
C
	IF (%LOC(AST).NE.0) CALL AST		! call user's AST
	FOLLOWED = .TRUE.			! timed out
	RETURN
	END
C
