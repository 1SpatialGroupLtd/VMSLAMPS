C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1996-05-09 12:27:30.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL FUNCTION PARANORM(NSPACE)
C
***	IDENT   09MY96
***	MODULE  PARANORM
C
C	Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C	Written                                 RWR	 Feb-1988
C
C	Fill a paragraph of text
C	returns .TRUE. for failure, .FALSE. for success
C
	IMPLICIT NONE
C
	INCLUDE	'LSL$CMNIFF:CB.STR'
***	PARAMETER/CMN:ACS/
***	PARAMETER/CMN:AUXDEF/
***	PARAMETER/CMN:CHARS/
***	PARAMETER/CMN:CTXS/
***	PARAMETER/CMN:MOANMESS/
***	PARAMETER/CMN:PACK/
C
***	COMMON/CMN:CTXS/
***	COMMON/CMN:OIIH/
***	COMMON/CMN:PARA/
C
C arguments
	INTEGER		NSPACE		! spaces between words
C
C w/s
	REAL		PREVXY(2)
	REAL		THISXY(2)
C
C functions
	LOGICAL		NEWPARALINE
	LOGICAL		NEXTCTX
	LOGICAL		GENAUX
	LOGICAL		PARALINE
	INTEGER		TRIMSTR
C
C assume success
	PARANORM = .FALSE.
C
C*******************************************************************
C
C get coordinates of first subtext
	PREVXY(1) = CTXBUFR(CTX_L_X)
	PREVXY(2) = CTXBUFR(CTX_L_Y)
C
C remove any leading or trailing blanks from text
	IF (NSPACE.GT.0) CTXBUFW(CTX_W_TXTLEN) =
     &				TRIMSTR(CTXBUFL(CTX_L_DESC))
C
C and get the length of the sub text now
	IF (GENAUX(1,PARA_CURRXY,
     &	       CTXBUFL(CTX_L_AUX1),
     &	       CTXBUFL(CTX_L_DESC),
     &	       CTXBUFL(CTX_L_RO),
     &	       CTXBUFL(CTX_L_TH),
     &	       PARA_DUMPAK,
     &	       CTXBUFL(CTX_L_TSA))) THEN
	   CALL MOAN(MSG_FTABANDONED)
	   CALL ABANDN
	   GOTO 998
	ENDIF
C
C add this to PARA_CTXD
	CALL ADDCTX(PARA_CTXD,.FALSE.)
C
C remember its address and it length
	PARA_LINE_ADDR = PARA_CTXD(CTXD_CUR)
	PARA_LINE_LEN  = CTXBUFR(CTX_L_AUX6) - CTXBUFR(CTX_L_AUX5)
C
C loop that reads each subtext from COICTXD, and adds it to PARA_CTXD
10	CONTINUE
C
C get next CTX
	IF (NEXTCTX(COICTXD,.FALSE.)) GOTO 100
C
C remove any leading or trailing blanks from text
	IF (NSPACE.GT.0) CTXBUFW(CTX_W_TXTLEN) =
     &				TRIMSTR(CTXBUFL(CTX_L_DESC))
C
C correct FC in PACK, for GENAUXing
	PARA_DUMPAK(PAKFC) = CTXBUFW(CTX_W_TS1)
C
C and genaux to get length of string
	IF (GENAUX(1,PARA_CURRXY,
     &	       CTXBUFL(CTX_L_AUX1),
     &	       CTXBUFL(CTX_L_DESC),
     &	       CTXBUFL(CTX_L_RO),
     &	       CTXBUFL(CTX_L_TH),
     &	       PARA_DUMPAK,
     &	       CTXBUFL(CTX_L_TSA))) THEN
	   CALL MOAN(MSG_FTABANDONED)
	   CALL ABANDN
	   GOTO 998
	ENDIF
C
	THISXY(1) = CTXBUFR(CTX_L_X)
	THISXY(2) = CTXBUFR(CTX_L_Y)
C
C if this starts a new line, then output current line
	IF (NEWPARALINE(PREVXY,THISXY,PARA_LINE_LEN)) THEN
C
C output this line to PARA_CTXD
	   IF (PARALINE(PARA_CTXD,NSPACE*PARA_BLANK_LEN)) THEN
	      CALL MOAN(MSG_FTABANDONED)
	      CALL ABANDN
	      GOTO 998
	   ENDIF
	   PARA_LINE_ADDR = 0
	   PARA_LINE_LEN  = 0.0
	ENDIF
C
C add this buffer to PARA_CTXD
	CALL ADDCTX(PARA_CTXD,.FALSE.)
C
C if this is first of line, remember its address
	IF (PARA_LINE_ADDR.LE.0) THEN
	   PARA_LINE_ADDR = PARA_CTXD(CTXD_CUR)
	ELSE
	   PARA_LINE_LEN  = PARA_LINE_LEN + NSPACE*PARA_BLANK_LEN ! add space
	ENDIF
C
C add its length to total for line
	PARA_LINE_LEN = PARA_LINE_LEN +
     &	                  (CTXBUFR(CTX_L_AUX6) - CTXBUFR(CTX_L_AUX5))
C
C and save the coords
	PREVXY(1) = THISXY(1)
	PREVXY(2) = THISXY(2)
C
C and go to next one
	GOTO 10
C
C ================================================================
C
C got to end of composite text
C
100	CONTINUE
C
C if this is first of line, remember its address
	IF (PARA_LINE_ADDR.LE.0) PARA_LINE_ADDR = PARA_CTXD(CTXD_CUR)
C
C output this line to PARA_CTXD
	IF (PARALINE(PARA_CTXD,NSPACE*PARA_BLANK_LEN)) THEN
	   CALL MOAN(MSG_FTABANDONED)
	   CALL ABANDN
	   GOTO 998
	ENDIF
	GOTO 999
C
998	PARANORM = .TRUE.
C
999	CONTINUE
	RETURN
	END
