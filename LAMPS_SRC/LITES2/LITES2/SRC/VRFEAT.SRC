C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1996-05-10 18:23:04.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE VRFEAT
C
***	MODULE	VRFEAT
***	IDENT	10MY96
C
C Copyright Laser Scan Laboratories Ltd., Cambridge, England.
C Author: Ron Russell
C
C Coded 12-Feb-1986
C
C To verify the found object
C
	IMPLICIT NONE
C
	INCLUDE	'LSL$CMNIFF:CB.STR'
***	PARAMETER/CMN:AUXDEF/
***	PARAMETER/CMN:EFNLUN/
***	PARAMETER/CMN:MOANMESS/
***	PARAMETER/CMN:PACK/
***	PARAMETER/LSL$CMNLSL:TBLFLG/
C
***	COMMON/LSL$CMNFRT:FRTCOM/
***	COMMON/LSL$CMNFRT:FRTGRP/
***	COMMON/CMN:DRAWIN/
***	COMMON/CMN:LAYERS/
***	COMMON/CMN:MAPS/
***	COMMON/CMN:MASTER/
***	COMMON/CMN:OPTION/
***	COMMON/CMN:STRIKE/
***	COMMON/LSL$CMNLSL:TXTC/
C
C w/s
C
	INTEGER		I			! loop variable
	INTEGER		LOOPOF			! loop offset
	INTEGER		PC
	INTEGER		NCMD,CMDNO
	LOGICAL		HADGRP
	INTEGER		TABIND
	INTEGER*4	TABHDR
	INTEGER*2	TABHD2(2)
	EQUIVALENCE	(TABHDR,TABHD2(1))
C
C functions called
	INTEGER		LIB$EXTZV
	INTEGER 	EXPAND
	LOGICAL		GRPFC		! FRTLIB, is FC in group?
C
	TXTPTR=0			! zero TXTBUF
C
C output constant things
C
	TXTPTR=TXTPTR+EXPAND('%W%^LFSN %N Map %N Lyr %N FC %N',
     &	                     TXTBUF(TXTPTR+1),FOPAK(PAKFSN),
     &	                     FOPAK(PAKMAP)+1,OVNOS(FOPAK(PAKOVL)),
     &	                     FOFC)
C
C add any PC
C
	IF (FOPAK(PAKGT).NE.TEXTYP) THEN
	   PC=LIB$EXTZV(0,14,FOFS(3))
	ELSE
	   PC=0
	ENDIF
C
	IF (PC.GT.0) TXTPTR=TXTPTR+EXPAND('%W%^L PC %N',
     &	                                 TXTBUF(TXTPTR+1),PC)	
C
C add vertex number(s)
C
	TXTPTR=TXTPTR+EXPAND('%W%^L pnt %N',TXTBUF(TXTPTR+1),FOVRT)
	IF (FOVRT.NE.1.AND.FOVRT.EQ.FOLST) THEN		! add *
	   TXTPTR=TXTPTR+EXPAND('%W*',TXTBUF(TXTPTR+1))
	ELSEIF (.NOT.FONVRT) THEN			! add next vertex
	   TXTPTR=TXTPTR+EXPAND('%W,%^L%N',TXTBUF(TXTPTR+1),
     &	                         FOVRT+1)
	ENDIF
C
C if verifying groups, then add all groups that FC occurs in
C
	IF (VERGRP) THEN
	   TXTPTR=TXTPTR+EXPAND('%W Grp',TXTBUF(TXTPTR+1))
	   HADGRP=.FALSE.
C
C check that there are some groups
C
	   IF (GRPCNT.GT.0) THEN
C
C GRPCMT_LOC is pointer to group command table
C
	      CALL PUTLNG(%VAL(GRPCMT_LOC),TABHDR) ! get table header
	      LOOPOF=0
C
C are there userflags in command table?
C
	      IF ((TABHD2(2).AND.CMT$M_NOUFLG).EQ.0) LOOPOF=1
C
C secondary commands?
C
	      IF ((TABHD2(2).AND.CMT$M_MNEMS).NE.0) LOOPOF=LOOPOF+1
C
C get number of groups
C
	      NCMD=(TABHD2(1).AND.'7FFF'X)
C
C look at each group in turn.  If FC is in its bitmap, get group name
C and add name to TXTBUF
C
	      DO 20, I=1,NCMD
	         TABIND=I*2+LOOPOF	! longword index, start at 0
	         CMDNO=LIB$EXTZV(16,16,%VAL(GRPCMT_LOC+TABIND*4))
	         IF (GRPFC(FOPAK(PAKFC),CMDNO)) THEN
	            IF (TXTPTR.GE.68) THEN		! take new line
	               CALL INFORM(MSG_STRING,TXTDSC)
	               TXTPTR=0
	            ENDIF
	            TXTPTR=TXTPTR+EXPAND('%W %S,',TXTBUF(TXTPTR+1),
     &	                           %VAL(GRPCMT_LOC+TABIND*4))
	            HADGRP=.TRUE.
	         ENDIF
   20	      CONTINUE
	   ENDIF	
C
	   IF (HADGRP) THEN
	      TXTPTR=TXTPTR-1		! remove last ,
	   ELSE
	      TXTPTR=TXTPTR+EXPAND('%W -',TXTBUF(TXTPTR+1))   ! no groups
	   ENDIF
	ENDIF
C
C output general feature information
C
	CALL INFORM(MSG_STRING,TXTDSC)
C 
	RETURN
	END
