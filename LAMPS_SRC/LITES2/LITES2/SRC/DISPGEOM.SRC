	SUBROUTINE DISPGEOM(GEOM)
C
***	IDENT	02NO93
***	MODULE	DISPGEOM
C
C	Copyright LaserScan Laboratories Ltd., Cambridge, England
C
C to draw a geometry
C
C Author R.W. Russell			12-OCT-1993
C
	IMPLICIT	NONE
C
C arguments (input)
C
	INTEGER		GEOM		! geometry to draw
C
***	PARAMETER/CMN:ACS/
***	PARAMETER/CMN:MOANMESS/
C
***	COMMON/LSL$CMNFRT:FRTACD/
***	COMMON/LSL$CMNFRT:FRTCOM/
***	COMMON/CMN:LABELS/
***	COMMON/CMN:MASTER/
***	COMMON/CMN:GEOM/
C
C local workspace
	INTEGER		Z(2)
	INTEGER		G_TYPE,G_COUNT
	INTEGER		I,J,NUM_PTS
	INTEGER		RET_CODE
	LOGICAL		FINISHED,START
C
C check for valid geometry
	IF (GEOM.LE.0.OR.GEOM.GT.MAX_GEOM) GOTO 999
	IF (GEOMETRY(GEOM) .EQ. 0) GOTO 999
C
C get the type of the geometry
	CALL GEOM_TYPE(GEOM,G_TYPE,G_COUNT)
C
C set up correct FRT values for STDBFF
C
	FRTFC = -1			! spoiled common block
	FRTSC = 0
	FRTARE = G_TYPE .EQ. 2
C
C draw all of geometry at cursor height
C	
	Z(1) = CSZI
	Z(2) = CSZI
C
C if drawing symbols, make sure we have an appropriate symbol to use
	IF (G_TYPE .EQ. 0) THEN
	   IF (ANNOMARK.LE.0.) THEN
	      CALL MOAN(MSG_NOMARK)
	      CALL LEARN(MSG_SETMARK)
	      GOTO 999
	   ENDIF
	   FRTFLG = 0
	   FRTHW  = 0
	   FRTWID = ANNOWIDTH
	   FRTSIZ = 0.0
	   CALL SRI_SET_Z(CSZI)
	ENDIF
C
C draw each geometry separately
	DO 30, J = 1,G_COUNT
C
C empty graphics buffer
	   CALL STDBFF(0)
C
	   FINISHED=.FALSE.
	   START = .TRUE.
	   IF (FRTARE) CALL LSG_BEGIN_AREA
C
C now get the the first lot of coordinates from the (simple) geometry
 10	   CONTINUE
           CALL CALLR(%VAL(GEOMETRY(GEOM)),
     &		      %VAL(J),
     &                %VAL(START),%VAL(GEOM_MAX_PTS),
     &                NUM_PTS,GEOM_XY,GEOM_FLAGS,FINISHED,RET_CODE,
     &		      %VAL(GEOM_ADDRESSES(XGET_PTS)))
	   IF (RET_CODE .NE. 0) THEN
	      IF (RET_CODE .LE. -1) THEN
		 CALL MOAN(MSG_STRING,
     &		      'Unexpected unrecoverable error with geometry.')
	      ELSE
		 CALL CALLR(%VAL(RET_CODE),
     &		      RET_CODE,
     &		      %VAL(GEOM_ADDRESSES(XPR_MESS)))
		 CALL WRITEF
	      ENDIF
	      GOTO 999
	   ENDIF
C
	   DO 20, I = 1,NUM_PTS
C
C lines and areas
	      IF (G_TYPE .GT. 0) THEN
C
C if invisible move, flush out last bit of line
		 IF ((FRTARE .AND. GEOM_FLAGS(I) .EQ. 0) .AND.
     &		      (I .GT. 1 .OR. .NOT.START))
     &		      CALL STDBFF(2)
C
C add this point to buffer
		 CALL STDBFA(1,GEOM_XY(1,I),Z)
	      ELSE
C
C for point geometries, draw symbol at this point
		 CALL SRIPLT(ANNOMARK,GEOM_XY(1,I),GEOM_XY(2,I),
     &		             ANNOSIZ,ANNOANGLE)
	      ENDIF
 20	   CONTINUE
C
	   START = .FALSE.
	   IF (.NOT.FINISHED) GOTO 10
C
C draw it out
	   IF (G_TYPE .GT. 0) THEN
	      CALL STDBFF(2)
	      IF (FRTARE) CALL LSG_END_AREA
	   ENDIF
 30	CONTINUE
C
999	RETURN
	END
