C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1997-06-10 15:56:38.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL FUNCTION SAVEDP(PACK)
C
***	IDENT	10JN97
***	MODULE	SAVEDP
C
C Copyright Laser-Scan Laboratories Ltd., Cambridge, England
C
C Author Clarke Brunt, 20-Mar-1985
C
C SCNSEC argument for FLVIEW
C To save details of the feature pointed at by PACK, provided that it
C has not been drawn already (for sorting, and drawing)
C
C
	IMPLICIT NONE
C
	INCLUDE 'LSL$CMNIFF:CB.STR'
***	PARAMETER/CMN:PACK/
***	PARAMETER/CMN:SECTOR/
***	PARAMETER/CMN:STAPAR/
***	PARAMETER/CMN:AUXDEF/
C
***	COMMON/LSL$CMNFRT:FRTPRIO/
***	COMMON/CMN:DRAWIN/
***	COMMON/CMN:OPTION/
***	COMMON/CMN:SECMAP/
***	COMMON/CMN:SORT/
***	COMMON/CMN:FCS/
***	COMMON/CMN:STATE/
***	COMMON/CMN:OIIH/
***	COMMON/CMN:CSTRCT/
C
C arguments
	INTEGER*4	PACK(PAKLEN)	! the pack to draw
C
C functions
	LOGICAL		LIB$EXTZV
C
C workspace
	INTEGER		I
	LOGICAL		GOT_PRIORITY
	INTEGER*4	ADR
	INTEGER*4	KEY
	INTEGER*2	KEYW(2)
	BYTE		KEYB(4)
	EQUIVALENCE	(KEY,KEYW,KEYB)
	BYTE		ORDER(12)	! order to draw when sort by GT
C
	DATA	ORDER	/2,		! gt  1	- line string
     &			 2,		! gt  2	- clockwise circle arc
     &			 2,		! gt  3	- a-clockwise circle arc
     &			 2,		! gt  4	- circum-circle arc
     &			 2,		! gt  5	- full circumcircle
     &			 2,		! gt  6	- interpolated curve
     &			 3,		! gt  7	- unoriented symbol
     &			 3,		! gt  8	- oriented symbol
     &			 3,		! gt  9	- scaled symbol
     &			 4,		! gt 10	- text
     &			 3,		! gt 11	- symbol string
     &			 1/		! gt 12	- fill area
C
C Check for CONSTRUCT mode and flushed buffer
C
	IF (SINDEX.EQ.STATE_CONSTRUCT.AND.(.NOT.CONFST)) THEN
C
C If so, then skip if we are on the incomplete feature being constructed
C
	   IF (PACK(PAKMAP).EQ.COIPAK(PAKMAP).AND.
     X	       PACK(PAKPNF).EQ.COIPAK(PAKPNF)) GOTO 1000
	ENDIF
C
C NXTPAK will ignore packs that have DRAFLG set already
C
C deal with sorting by priority first, as it is most complicated
	IF (SORIFF.EQ.SORT_BY_PRIORITY) THEN
	   GOT_PRIORITY = .FALSE.
C
C DRAW_PRIORITY may not be possible on certain displays (eg segmented displays)
C FLVIEW must know if this is possible
	   IF (PRIO_MAX .GT. 0 .AND. DRAW_PRIORITY) THEN
	      CALL FRTPRIOFND(PACK(PAKFC))
	      GOT_PRIORITY = (PRIO_NUMBER .GT. 0)
	   ENDIF
C
C if no priority set up, then use default priority, and the existing FC
	   IF (.NOT.GOT_PRIORITY) THEN
C
C is the default priority selected?
	      IF (.NOT.SAPRIOS) THEN
	         IF (.NOT.LIB$EXTZV(PRIO_DEFAULT,1,PRIOMAP)) GOTO 999  
	      ENDIF
	      ADR = SORADR+SORPTR*8
	      SORPTR = SORPTR+1
	      KEY = PACK(PAKFC)
	      KEYW(2) = PRIO_DEFAULT
	      CALL PUTLNG(KEY,%VAL(ADR))		! save sort key
	      CALL PUTLNG(PAKBLK+PAKPTR,%VAL(ADR+4))	! and address
	   ELSE
	      DO 10, I = 1, PRIO_NUMBER
	         IF (SORPTR .GE. SORLIM) GOTO 11	! run out of space
C
C is the priority of this feature selected?
         	 IF (.NOT.SAPRIOS) THEN
	            IF (.NOT.LIB$EXTZV(PRIO_PRIO(I),1,PRIOMAP)) GOTO 10  
	         ENDIF
	         ADR = SORADR+SORPTR*8
	         SORPTR = SORPTR+1
	         KEY = PRIO_REP(I)			! set fc
	         KEYW(2) = PRIO_PRIO(I)			! and priority
	         CALL PUTLNG(KEY,%VAL(ADR))		! save sort key
	         CALL PUTLNG(PAKBLK+PAKPTR,%VAL(ADR+4))	! and address
10	      CONTINUE
11	      CONTINUE
	   ENDIF
	ELSE
	   ADR = SORADR+SORPTR*8
	   SORPTR = SORPTR+1
	   IF (SORIFF.EQ.SORT_BY_FSN) THEN		! sort by FSN
	      KEY = PACK(PAKFSN)
	   ELSEIF (SORIFF.EQ.SORT_BY_GT) THEN	! sort by (inverse) GT
	      KEY = PACK(PAKFC)			! with secondary key FC
	      KEYB(4) = ORDER(PACK(PAKGT))
	   ELSE					! sort by map/IFF order
	      KEY = PACK(PAKPNF)			! IFF file pointer
	      KEYB(4) = PACK(PAKMAP)		! map in top byte
	   ENDIF
	   CALL PUTLNG(KEY,%VAL(ADR))		! save sort key
	   CALL PUTLNG(PAKBLK+PAKPTR,%VAL(ADR+4))	! and address
	ENDIF
C
999	CALL SETFTR(DRAFLG,PACK(PAKLNK))        ! mark drawn
C
C stop SCNSEC scanning, if running out of sorting memory
1000	SAVEDP = SORPTR.LT.SORLIM
C
	RETURN
	END
