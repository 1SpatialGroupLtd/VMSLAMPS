C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1989-10-11 15:53:26.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL FUNCTION NEXTAC(ACD)
C
***	MODULE	NEXTAC
***	IDENT	11OC89
C
C Copyright Laser Scan Laboratories Ltd., Cambridge, England.
C Author: Clarke Brunt
C
C Coded 13.xii.84
C
C To step on to the next TC or AC in the AC sector
C
	IMPLICIT NONE
C
***	PARAMETER/CMN:ACS/
C
***	COMMON/CMN:ACS/
C
C argument
	INTEGER*4	ACD(ACDLEN)	! AC descriptor
C
C functions called
	LOGICAL		THISAC
C
C w/s
	INTEGER		ADR
C
	NEXTAC = .TRUE.			! assume there isn't one
	IF (ACD(ACD_NAC).EQ.0) GOTO 1000! there isn't!
	IF (ACD(ACD_CUR).EQ.0) THEN	! no current AC
	   ADR = ACD(ACD_FSTTC)		! address of first TC
	   IF (ADR.EQ.0) ADR = ACD(ACD_FSTAC)	! no TC's, try AC's
	ELSE
	   IF (THISAC(ACD)) GOTO 1000	! get current (shouldn't fail)
	   ADR = ACBUFL(AC_L_NXTPTR)	! pointer to next
	   IF (ADR.EQ.0) GOTO 1000	! no next one
	ENDIF
C
	CALL MOVAC(%VAL(ADR),ACBUFL)	! load into ACBUFL
	CURAC = ADR			! now current
	ACD(ACD_CUR) = ADR		! in ACD also
	NEXTAC = .FALSE.		! succeeded
C
1000	RETURN
	END
