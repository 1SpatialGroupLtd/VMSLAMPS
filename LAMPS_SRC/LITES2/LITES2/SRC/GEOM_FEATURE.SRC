C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1993-10-19 18:32:20.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
        LOGICAL FUNCTION GEOM_FEATURE(GEOM,DIM)
C
***     IDENT	19OC93
***     MODULE  GEOM_FEATURE
C
C       Copyright Laser-Scan Ltd., Cambridge, England.
C
C       Written                                 RWR 	8-Oct-1993
C
C	create a geometry from a feature
C	returns FALSE for success
C
        IMPLICIT NONE
C
	INCLUDE	'LSL$CMNIFF:CB.STR'
***	PARAMETER/CMN:AUXDEF/
***	PARAMETER/CMN:CTXS.PAR/
***     PARAMETER/CMN:MOANMESS/         ! moan constants
***	PARAMETER/CMN:PACK/
C
***     COMMON/LSL$CMNFRT:FRTCOM/
***     COMMON/CMN:GLOBAL/		! global variables
***	COMMON/CMN:GEOM/
***	COMMON/CMN:STRIKE/
C
C argument
	INTEGER*4	GEOM		! geometry (NOT number)
	INTEGER*4	DIM
C
C Functions called
	LOGICAL		GEOM_FROM_IFF	! build a geometry by reading
					! from first CB in a feature
C
C Local Variables
C
	INTEGER*2	IECODE, IELEN	! for IFF reading
	INTEGER		DIMENSION
C
C
C assume failure
	GEOM_FEATURE = .TRUE.
	DIMENSION = DIM
C
	IF (.NOT.FO) THEN
	   CALL MOAN(MSG_NOFEATURE) ! no found object
	   GOTO 900
	ENDIF
C
C get ready to set up geometry
C (use simple line, unless specified otherwise or dealing with an area,
C or symbol or text)
C
	IF (DIMENSION .EQ. -1) THEN
	   DIMENSION = 1
	   IF (FOPAK(PAKGT).EQ.ARETYP) THEN
	      DIMENSION = 2
	   ELSEIF (FOPAK(PAKGT) .GE. UNOTYP .AND. 
     &		   FOPAK(PAKGT) .LE. TEXTYP) THEN
	      DIMENSION = 0
	   ENDIF
	ENDIF
C       
C position onto start of feature in file
C
	CALL SELIF(FOPAK(PAKMAP))
	CALL IFFPKE(IECODE,IELEN,FOPAK(PAKPNF))
	IF (IECODE.NE.'NF'.AND.IECODE.NE.'TC'.AND.
     &	     IECODE.NE.'CH'.AND.IECODE.NE.'VO') THEN
	   CALL NASTY(MSG_BADPNF)
	   CALL COLAPS(MSG_BADPNF)
	   GOTO 900		! exit
	ENDIF
C       
C and create a geometry
	IF (GEOM_FROM_IFF(GEOM,DIMENSION,FOPAK(PAKGT))) GOTO 900
C       
C geometry succesfully created
	GEOM_FEATURE = .FALSE.
C
900	CONTINUE
        RETURN
        END
