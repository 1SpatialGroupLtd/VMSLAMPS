C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1989-11-09 11:03:56.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL FUNCTION CHKDUPLCMD(CMDTAB,NAME,NAME_LEN)
C
**	IDENT	09NO89
**	MODULE	CHKDUPLCMD
C
C Copyright Laser-Scan Ltd., Cambridge, England
C
C Author R.W. Russell				 9-Nov-1989
C
C to check if commands are duplicated in a command table
C returns TRUE if commands are duplicated, and returns name of first
C duplicated command
C
	IMPLICIT NONE
C
	INTEGER*4	CMDTAB(*)	! the command table
	CHARACTER*(*)	NAME    	! name of first duplicated command
	INTEGER		NAME_LEN	! and its length
C
***	PARAMETER/LSL$CMNLSL:TBLFLG/
C
C functions
	INTEGER		CMPSTR		! from LITES2
					! = 0  if strings same
					! = -1 if strings different
C
C workspace
	INTEGER*4	I		! loop variable
	INTEGER*4	LOOP_OFFSET	! loop offset
C					! =0,1 => local commands
C					!	  forbidden, permitted
C					!	  in this table
	INTEGER*4	NCMD		! number of commands
	INTEGER		TABIND		! index into command part of table
	INTEGER*4	TABHDR		! to hold table header
	INTEGER*2	TABHD2(2)	! the same
	EQUIVALENCE	(TABHDR, TABHD2(1))
C
C assume success
	CHKDUPLCMD = .FALSE.
C
C ensure the table is in order
	CALL LSL_SORTAB(CMDTAB)
C
C look at local commands
	TABHDR = CMDTAB(1)
	IF ((TABHD2(2).AND.CMT$M_NOUFLG) .EQ. 0) THEN
	  LOOP_OFFSET = 1			! local commands in this table
	ELSE
	  LOOP_OFFSET = 0			! local commands forbidden
	ENDIF
	IF ((TABHD2(2).AND.CMT$M_MNEMS) .NE. 0) THEN
	  LOOP_OFFSET = LOOP_OFFSET+1		! secondary commands table, too
	ENDIF
C
C how many commands in table?
	NCMD = (CMDTAB(1).AND.'77777'O)
	IF (NCMD.LE.0) GOTO 999
C
C and get them
	DO 20, I=2,NCMD
	   TABIND = I*2 + LOOP_OFFSET + 1	
	   IF (.NOT.CMPSTR(CMDTAB(TABIND),CMDTAB(TABIND-2))) THEN
C
C names the same
	      NAME_LEN = CMDTAB(TABIND) .AND. 'FFFF'X  ! only want 16 bits
	      CALL LIB$SCOPY_R_DX(NAME_LEN,%VAL(CMDTAB(TABIND+1)),NAME)
	      CHKDUPLCMD = .TRUE.
	      GOTO 999
	   ENDIF
20	CONTINUE
C
999	RETURN
	END
