C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1993-10-13 12:54:16.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
        SUBROUTINE DOREGI
C
***     IDENT	13OC93
***     MODULE  DOREGI
C
C       Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C       Written                                 RWR 	16-Aug-1985
C
C Description
C
C	LITES2 cartographic editor REGION command.
C
        IMPLICIT NONE
C
***	PARAMETER/CMN:LICPAR/
***     PARAMETER/CMN:MOANMESS/         ! moan constants
***	PARAMETER/CMN:REGPAR/
C
***     COMMON/CMN:DOUT/                ! cmd dec. output
***	COMMON/CMN:GLOBAL/
***	COMMON/CMN:REGCMN/
C
C Functions called
	LOGICAL		REG_FEATURE
	LOGICAL		ADDPPT
	LOGICAL		REGION_ZONE
	LOGICAL		REG_BOX
	LOGICAL		REG_TIDY
	LOGICAL		REG_IMAGE
	LOGICAL		REG_WINDOW
	LOGICAL		DEFREG
	LOGICAL		GEOM_REG
	LOGICAL		LICENSED
C
	EXTERNAL	REGION_CMD_TABLE
	EXTERNAL	NASTY
C
C Local Variables
	INTEGER		REG
	INTEGER		TERTIARY
	REAL		OFFSET
	LOGICAL		FILTER
C
	INTEGER		R_FEATURE
	INTEGER		R_POINT
	INTEGER		R_ZONE
	INTEGER		R_BOX
	INTEGER		R_TIDY
C
C NOTE: these numbers must be kept in line with REGION tertiary command
C       table
	PARAMETER	(R_FEATURE = 0,
     &			 R_POINT   = 1,
     &			 R_ZONE    = 2,
     &			 R_BOX     = 3,
     &			 R_TIDY    = 4)
C
C check for licence
	IF (.NOT.LICENSED(LOCK_REGION)) GOTO 9000
C
C get region number
	REG = DINTS(1)
C
C decode
	IF (DSTRL.LE.0) THEN		! default
	   TERTIARY = 0
C
C get tertiary command
	ELSE
	   CALL GET_COMMAND(DSTR(:DSTRL),REGION_CMD_TABLE)
	   IF (MOANED) GOTO 9000
	   TERTIARY = DPRIN
	ENDIF
C
C check for valid region number
	IF (REG.LT.1.OR.REG.GT.MAX_REG) THEN
	   CALL MOAN(MSG_INVALREGNO,REG,1,MAX_REG)
	   GOTO 9000
C
C check for region already defined (unless adding a point)
	ELSEIF (REGDEF(REG).AND.TERTIARY.NE.R_POINT) THEN
	   CALL MOAN(MSG_REGDEFINED,REG)
	   GOTO 9000
	ENDIF
C
C Dispatch according to tertiary command
	GOTO (100,200,300,400,500,600,700,800), TERTIARY + 1
C
C Tertiary command number out of range
	CALL MSGCMD(NASTY,MSG_ERRTERIND)
	GOTO 9000
C
C REGION n
C turn feature into region
100	IF (REG_FEATURE(REG)) THEN
	   REGDEF(REG) = 0
	   GOTO 9000
	ELSE
	   GOTO 8000
	ENDIF	
C
C REGION n POINT x y
C add a single point to region
200	IF (ADDPPT(DREALS,REG)) THEN	! add the point
	   REGDEF(REG) = 0
	   GOTO 9000
	ELSE
	   GOTO 8000
	ENDIF
C
C REGION n ZONE r
C create a zone around a feature
300	OFFSET = DREALS(1)
C
C debug - to stop buffer zones being filtered, add a '0' to command
	FILTER = .TRUE.
	IF (DSTRIN) THEN
	   IF (DSTR(1:DSTRL).EQ.'0') FILTER = .FALSE.
	ENDIF
C
	CALL TSTUNT(.TRUE.,1,OFFSET)		! expecting IFF units
	IF (REGION_ZONE(REG,OFFSET,FILTER)) THEN
	   REGDEF(REG) = 0
	   GOTO 9000
	ELSE
	   GOTO 8000
	ENDIF
C
C REGION n BOX
C create a box around a feature
400	IF (REG_BOX(REG)) THEN
	   REGDEF(REG) = 0
	   GOTO 9000
	ELSE
	   GOTO 8000
	ENDIF
C
C REGION n TIDY m
C tidy region n
500	CONTINUE
C
C check for licence
	IF (.NOT.LICENSED(LOCK_DEVELOPMENT)) GOTO 9000
C
	IF (.NOT.DEFREG(DINTS(1))) GOTO 9000
	IF (REG_TIDY(DINTS(1),REG)) THEN
	   REGDEF(REG) = 0
	   GOTO 9000
	ELSE
	   GOTO 8000
	ENDIF
C
C REGION n IMAGE
C Create region from raster image object
600	IF (REG_IMAGE(REG)) THEN
	   REGDEF(REG) = 0
	   GOTO 9000
	ELSE
	   GOTO 8000
	ENDIF
C
C REGION n WINDOW
C Create rect. region using cursor
700	CALL REG_WINDOW(REG)
	GOTO 8000
C
C REGION n GEOMETRY m
C Create region Geometry m
800	IF (GEOM_REG(DINTS(1),REG,.FALSE.)) THEN
	   REGDEF(REG) = 0
	   GOTO 9000
	ELSE
	   GOTO 8000
	ENDIF
C
C region successfully created/ammended
8000	CONTINUE	
C
C region is not (now) sectored
	REGDEF(REG) = REGDEF(REG).AND..NOT.REGDEF_SEC
C
C set selection bits if not in region selecting mode
C ( bit 0 will have been set to 1 by ADDPPT in any case)
	IF (.NOT.RGSLCT) REGDEF(REG)=REGDEF(REG).OR.REGDEF_ALLSELECTED
C
	CALL STSARG		! set SAREGS
	GOTO 10000
C
C error exit
9000	CALL IGNCMD
C
10000	RETURN
        END
