	SUBROUTINE SETSTA(NEWIND)	
C
***	IDENT	06NO86
***	MODULE	SETSTA
C
C	Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C	Created					RJH	09-AUG-1984
C
C LITES2 - set a new command state.
C
C The argument is an index representing the new state, and for this
C the calling routine will normally use one of the state constants. The
C routine sets new values for the current state variables in the state 
C common block.
C
	IMPLICIT NONE
C
***     PARAMETER/CMN:MOANMESS/
***     PARAMETER/CMN:STAPAR/
C
***     COMMON/CMN:GLOBAL/
***     COMMON/CMN:LVAR/
***     COMMON/CMN:OPTION/
***     COMMON/CMN:PROMPT/
***     COMMON/CMN:STATE/
***	COMMON/CMN:TIMING/
***	COMMON/CMN:WORKS/
C
C Arguments
	INTEGER*4	NEWIND		! index for new state
C
C Functions called
	INTEGER*4	CPYSTR		! copies character strings
	REAL		SECNDS		! FORTRAN timer
C
C Local Variables
	LOGICAL		ERROR		! error in argument?
C
C Initialisation
	ERROR = .FALSE.			! assume no errors
C
C stop timing previous state (if any)
	IF (SINDEX.GT.0) STATIM(SINDEX)=SECNDS(STATIM(SINDEX))
C
C Check and set state index number
	IF ((NEWIND .LE. 0) .OR. (NEWIND .GT. MAXSTA)) THEN
	   ERROR = .TRUE.
	   IF (SINDEX .NE. STATE_INITIAL) 
     &	      SINDEX = STATE_READY		! return to READY state
	ELSE
	   SINDEX = NEWIND
	ENDIF
C
C Start timing new state
	STATIM(SINDEX)=SECNDS(STATIM(SINDEX))
C
C Set state mask and string
	SMASK = STAMSK(SINDEX)
	STALEN = CPYSTR(STANAM(SINDEX)(1:STACHS(SINDEX)),STASTR)
C
C Check for error
	IF (ERROR) THEN
	   CALL NASTY(MSG_UNKSTAIND)
	   CALL LEARN(MSG_BACKTOSTATE,STASTR(1:STALEN))
	ELSE
	   IF ((RECODN .AND. WSIDN) .OR. DIAOPT) THEN
	      IF (NOWOPT) CALL INFORM(MSG_NEWSTATE,STASTR(1:STALEN))
	   ENDIF
	ENDIF
C
C set up VTxxx status line
	CALL VTSTAT
C
C want a new prompt if doing PROMPT STATE
	IF (PROSTA) TTPROM = .TRUE.
C
	RETURN
	END
