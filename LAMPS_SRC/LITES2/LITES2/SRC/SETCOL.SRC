C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1993-11-12 14:05:36.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE SETCOL
C
***	MODULE	SETCOL
***	IDENT	12NO93
C
C Copyright Laser Scan Laboratories Ltd., Cambridge, England.
C
C To set the colour
C Uses FRTCOL unless overridden by a non-negative value for OVCOL
C
	IMPLICIT NONE
C
***	PARAMETER/CMN:GKSPAR/
C
***	COMMON/LSL$CMNFRT:FRTCOM/
***	COMMON/CMN:DRAWIN/
***	COMMON/CMN:OPTION/
C
C w/s
	INTEGER		ICOL		! polyline colour index
	REAL		TAREA(2)	! data for area drawing
	INTEGER		HWL		! hardware line style to use
C
C line colour - use overriding colour if there is one, else FRTCOL
	IF (OVCOL.GE.0) THEN		! allow colour 0
	   ICOL = OVCOL
	ELSE
	   ICOL = FRTCOL
	   IF (ICOL.LE.0) ICOL = 1	! forbid colour 0 (background)
	ENDIF
C
C Set the colour
C For all except fill areas, FRTLIB text/symbol colour is set to OVCOL.
C This is usually -1 (use FRT/SCT colours), except in special cases
	IF (FRTARE.AND..NOT.(FRTSC.LT.-1.AND.PATOPT.AND.FILOPT)) THEN
	   CALL GSFACI(ICOL)		! fill area colour index
	ELSE
	   IF (.NOT.(FRTTEX.OR.FRTSYM)) THEN
	      CALL GSPLCI(ICOL)		! polyline colour index
	   ENDIF
C
C set up characteristics for special drawing of texts
	   IF (FRTTEX.AND.(BLAOPT.OR.BOXOPT)) THEN
	      IF (BOXOPT) THEN
	         CALL GSPLCI(ICOL)	! draw texts as boxes
	         CALL GSLWSC(1.0)  	! at minimum line width
	      ENDIF
C
C blank out background of texts
	      IF (BLAOPT) CALL SETBLANK
	   ENDIF
	   CALL SRICOL(OVCOL)
	ENDIF
C
C Set hatching line width and separation -
C for fill areas may want values from FRT, for symbols and texts
C set to default, in case values in SCT are not being used
	IF (FRTARE.OR.FRTTEX.OR.FRTSYM) THEN
	   TAREA(1) = NOMLW/1000.0	! thin line (device metres)
	   IF (FRTARE.AND.(FRTWID.GT.0.0.OR.FRTSIZ.GT.0.0)) THEN
C
C use values from FRT
	      IF (THKOPT) TAREA(1)=FRTWID*SCLFRT/(SCLDIS*1000)
	      TAREA(2)=FRTSIZ*SCLFRT/(SCLDIS*1000)
	   ELSE
C
C use default values
	      IF (THKOPT) TAREA(1)=HATWID*SCLFRT/(SCLDIS*1000)
	      TAREA(2)=HATSEP*SCLFRT/(SCLDIS*1000)
	   ENDIF
	   CALL GESC(3,TAREA)
	ENDIF
C
C set up hardware for drawing this feature
	HWL = FRTHWL
C
C at the moment LITES2 does not cope with hardware line styles, but
C note that it does not tell FRTLIB that it cannot do it, so FRTLIB
C may try to use them when drawing texts and symbols.
	IF (HWL.NE.1) HWL = 1
	CALL SRIGSL(HWL,FRTHW+1,0.0)	! angle of tool set to 0.0
C
	RETURN
	END
