	SUBROUTINE OS_MH_SET_FLAGS(MAP,LUN)
C
***	IDENT   10MY96
***	MODULE  OS_MH_SET_FLAGS
C
C	Copyright Laser-Scan Ltd., Cambridge, England.
C
C	Written					RWR	26-Apr-1990
C
C to update map header with any flags that have been set
C
C
	IMPLICIT NONE
C
C arguments
	INTEGER		MAP		! index into CMN:MAPS.CMN
					! (-1 for map not in common)
	INTEGER		LUN		! IFF luns for file
C
	INCLUDE	'LSL$CMNIFF:CB.STR'
***	PARAMETER/CMN:EFNLUN/
***	PARAMETER/CMN:MOANMESS/
***	PARAMETER/LSL$CMNOSMH:OSMH_NEW/
C
***	COMMON/LSL$CMNIFF:IFFHAN/
***	COMMON/LSL$CMNIFF:MHDMB/
***	COMMON/LSL$CMNIFF:MHOSGB/
***	COMMON/LSL$CMNOSMH:OSMH_NEW_MH/
***	COMMON/CMN:MAPS/
C
C w/s
	INTEGER		I
	INTEGER*2	IELEN		! IFF entry info
	BYTE		FLAGS(0:OS_MH_FLAGS-1)
C
C functions
	LOGICAL		LIB$EXTZV
	INTEGER		OSMH_NEW_GETFLD
	INTEGER		OSMH_NEW_PUTSTR
C
C don't do anything if MAP is not valid index
	IF (.NOT.OS_MH_EDIT.OR.MAP.LT.0.OR.MAP.GT.MAPTOP) GOTO 999
	IF (.NOT.MAP_EXIST(MAP)) GOTO 999
C
C Find MH entry
C
	CALL IFFSEL(LUN)
	CALL IFFRWD
C
	CALL IFFNXC('MH',IELEN)		! get to first MH
	IF (IELEN.EQ.-1) GOTO 999	! unlikely, but why worry!
C
C read first few words of map header to see what type it is
	CALL EIHRI(MHARR,MIN(IELEN,1),1)	! map header
C
C only update flags in OS type map headers
	IF (MHDESC(2).LT.2.OR.MHDESC(2).GT.4) GOTO 999
C
C type 2 map header
	IF (MHDESC(2).EQ.2) THEN
C
C check for type of map header, and corresponding length
	   IF (IELEN.NE.MHLEN) GOTO 999
C
C read map header again
	   CALL EIHRI(MHARR,MIN(IELEN,MHLEN),1)	! map header
C
C get the existing flags
	   CALL OSMH_GETCHAR(FLAGS,MHFLAG,OS_MH_FLAGS)
C
C update the individual flags
	   DO 100, I=0,OS_MH_FLAGS - 1
	      IF (LIB$EXTZV(I,1,OS_MH_FL_BMAP(1,MAP))) THEN
	         FLAGS(I) = ICHAR(OS_MH_CHAR(I))
	      ENDIF
100	   CONTINUE
C
C rewite the flags back to map header
	   CALL OSMH_PUTCHAR(FLAGS,MHFLAG,OS_MH_FLAGS)
C
C and update MH in IFF file
	   CALL EIHWI(MHARR,MHLEN,1)	! map header
C
C type 3 and 4 map headers
	ELSEIF (MHDESC(2).EQ.3.OR.MHDESC(2).EQ.4) THEN
C
C if have not set up table, complain
	   IF (.NOT.OS_MH_INITIALISED) THEN
	      CALL MOAN(MSG_NOUPDATEFLG)
	      GOTO 999
	   ENDIF
C
C read new map header
	   CALL EIHRI(MH2ARR,IELEN,1)	! map header
C
C get the existing flags
	   IF (.NOT.OSMH_NEW_GETFLD(MH_CHANGE_IND)) THEN
	      CALL MOAN(MSG_NOUPDATEFLG)
	      GOTO 999
	   ENDIF
C
C make sure that we are dealing with characters
	   IF (MH_DATATYPE.NE.OSMH_STRING) THEN
	      CALL MOAN(MSG_EXPECTINGSTR)
	      GOTO 999
	   ENDIF
C
C should be updating 8 flags; give warning if doing less (or trying to
C do more
	   IF (MH_SIZE.NE.OS_MH_FLAGS)
     &	      CALL INFORM(MSG_WRNGNOFLAGS,MIN(OS_MH_FLAGS,MH_SIZE))
C
C update the individual flags
	   DO 200, I=0,MIN(OS_MH_FLAGS,MH_SIZE) - 1
	      IF (LIB$EXTZV(I,1,OS_MH_FL_BMAP(1,MAP))) THEN
	         MH_A_VALUE(I+1:I+1) = OS_MH_CHAR(I)
	      ENDIF
200	   CONTINUE
C
C rewite the flags back to map header
	   IF (.NOT.OSMH_NEW_PUTSTR(MH_CHANGE_IND,
     &	                        MH_A_VALUE,MH_STRLEN)) THEN
	      CALL MOAN(MSG_NOUPDATEFLG)
	      GOTO 999
	   ENDIF
C
C and update MH in IFF file
	   CALL EIHWI(MH2ARR,IELEN,1)	! map header
	ENDIF
C	
999	RETURN
	END
