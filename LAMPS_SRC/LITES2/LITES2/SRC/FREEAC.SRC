	SUBROUTINE FREEAC(ACD)
C
***	IDENT	13OC89
***	MODULE	FREEAC
C
C Copyright Laser-Scan Laboratories Ltd., Cambridge, England
C
C Author Clarke Brunt, 27-Jan-1986
C
C To free the space allocated to a chain of ACs
C
	IMPLICIT NONE
C
***	PARAMETER/CMN:ACS/
C
***	COMMON/CMN:ACS/
C
C argument
	INTEGER*4	ACD(ACDLEN)	! AC descriptor
C
C workspace
	INTEGER*4	NEXT,TEMP
C
	IF (ACD(ACD_NAC).EQ.0) GOTO 999	! already empty
	NEXT = ACD(ACD_FSTTC)		! try first TC
	IF (NEXT.EQ.0) NEXT = ACD(ACD_FSTAC)	! no, so first AC
C
10	CALL FREE1AC(%VAL(NEXT))	! free string space
	TEMP = NEXT			! save current one
C
C get address of next AC (nb pointer is in first slot)
	CALL PUTLNG(%VAL(NEXT),NEXT)	! next one
	CALL FREE_MEM(AC_ZONE,TEMP,ACLENB)	! and free AC space
	IF (NEXT.NE.0) GOTO 10
C
	ACD(ACD_NAC) = 0		! empty
	ACD(ACD_FSTTC) = 0		! no first TC
	ACD(ACD_FSTAC) = 0		! no first AC
	ACD(ACD_TCWORD) = 0		! no words of TCs
	ACD(ACD_ACWORD) = 0		! no words of ACs
	GOTO 1000
C
C Check for now
999	IF (ACD(ACD_FSTTC).NE.0	.OR.
     &	    ACD(ACD_FSTAC).NE.0 .OR.
     &	    ACD(ACD_TCWORD).NE.0 .OR.
     &	    ACD(ACD_ACWORD).NE.0 ) THEN
	   CALL TTWSTR('***FREEAC Pointers non-zero')
	ENDIF
C
1000	RETURN
	END
