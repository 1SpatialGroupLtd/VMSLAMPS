	SUBROUTINE PUTAC(ACD,DOAC)
C
***	MODULE	PUTAC
***	IDENT	19DE88
C
C Copyright Laser Scan Laboratories Ltd., Cambridge, England.
C Author: Clarke Brunt
C
C To output ACs from an AC descriptor to current map
C
C If DOAC true, then ACs, else TCs.
C
	IMPLICIT NONE
C
***	PARAMETER/CMN:ACS/
C
***	COMMON/CMN:ACS/
***	COMMON/CMN:MASTER/
***	COMMON/CMN:DEFINE/
C
C arguments
	INTEGER*4 ACD(ACDLEN)		! AC descriptor
	LOGICAL*1 DOAC			! do ACs, else TCs
C
C functions
	LOGICAL	NEXTAC
	LOGICAL 	CHK_PRIV_LIST
C
C get starting AC/TC
	IF (ACD(ACD_NAC).EQ.0) GOTO 999		! none
	IF (DOAC) THEN
	   IF (ACD(ACD_FSTAC).EQ.0) GOTO 999	! no ACs
	   ACD(ACD_CUR) = ACD(ACD_FSTAC)
	ELSE
	   IF (ACD(ACD_FSTTC).EQ.0) GOTO 999	! no TCs
	   ACD(ACD_CUR) = ACD(ACD_FSTTC)
	ENDIF
	CALL THISAC(ACD)		! function cannot fail
C
50	IF (DOAC) THEN
C
C update the value of this AC, if a definition for it has been set up
C
C first, has a list of definitions from ADD_FEATURE been defined? 
C NOTE: call FUPDAC with .TRUE. to mark the definitions on the list
C       that have been dealt with. These flags are used (and cleared)
C       by FADDAC, called from STRTFT
C
	   IF (DEFINITION(F_ADD).GT.0.AND.FLG_ADD) 
     &	         CALL FUPDAC(DEFINITION(F_ADD),
     &	                     ACBUFL(AC_L_TYPE),
     &	                     ACBUFL(AC_L_ACVAL),
     &	                        .TRUE.)
C
C is this AC on the privileged point list?
C if so, do not update
	IF (PRIV_PT_LIST.GT.0) THEN
	   IF (CHK_PRIV_LIST(PRIV_PT_LIST,1,ACBUFL(AC_L_TYPE),
     &	                  ACBUFL(AC_L_ACVAL))) GOTO 100
	ENDIF
C
C now check for edits that have caused code changes
	   IF ((DEFINITION(F_CODECHANGE).GT.0).AND.FLG_CODECHANGE) 
     &	         CALL FUPDAC(DEFINITION(F_CODECHANGE),
     &	                     ACBUFL(AC_L_TYPE),
     &	                     ACBUFL(AC_L_ACVAL),
     &	                        .FALSE.)
C
C now check for edits that have caused geometrical changes
	   IF ((DEFINITION(F_GEOCHANGE).GT.0).AND.FLG_GEOCHANGE) 
     &	         CALL FUPDAC(DEFINITION(F_GEOCHANGE),
     &	                     ACBUFL(AC_L_TYPE),
     &	                     ACBUFL(AC_L_ACVAL),
     &	                        .FALSE.)
C
C now check for features created by USER routines
	   IF ((DEFINITION(F_USER).GT.0).AND.FLG_USER) 
     &	         CALL FUPDAC(DEFINITION(F_USER),
     &	                     ACBUFL(AC_L_TYPE),
     &	                     ACBUFL(AC_L_ACVAL),
     &	                        .FALSE.)
C
C now output the AC
C
100	   CALL IFFAC(ACBUFL(AC_L_TYPE),ACBUFL(AC_L_ACVAL),
     &				ACTEXT,ACBUFW(AC_W_TXTLEN))
	   IF (CURAC.EQ.ACD(ACD_LSTAC)) GOTO 999	! done
	ELSE
	   IF (ACBUFL(AC_L_TYPE).EQ.-1) THEN		! TC
	      CALL IFFTC(ACTEXT,ACBUFW(AC_W_TXTLEN))
	   ELSE						! CH
	      CALL IFFCH(ACTEXT,ACBUFW(AC_W_TXTLEN))
	   ENDIF
	   IF (CURAC.EQ.ACD(ACD_LSTTC)) GOTO 999	! done
	ENDIF
	IF (NEXTAC(ACD)) GOTO 999		! no more (eh?)
	GOTO 50
C
999	RETURN
	END
