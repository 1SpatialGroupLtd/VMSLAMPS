	SUBROUTINE LDSG(PACK,VISI)
C
***	MODULE	LDSG
***	IDENT	22MY87
C
C Copyright Laser Scan Laboratories Ltd., Cambridge, England.
C
C LITES2 GKS level routine
C Sigma 6100 version
C Delete Segment
C
C Expect to be called either:
C (a) to remove a visible segment (old version of edited feature), or
C (b) to remove a limbo segment (already invisible)
C
C VISI indicates whether the segment is presently visible or not
C
	IMPLICIT NONE
C
***	PARAMETER/CMN:GKSPAR/
***	PARAMETER/CMN:PACK/
***	PARAMETER/CMN:SIGMA6100/
C
***	COMMON/CMN:DRAWIN/
***	COMMON/CMN:RFCTRL/
***	COMMON/CMN:SEGMNT/
***	COMMON/CMN:WORKS/
C
C arguments
	INTEGER*4	PACK(PAKLEN)
	LOGICAL*1	VISI		! true if visible
C
C do nothing if no displays
	IF (NODISP) GOTO 999
C
C do nothing if the feature is not in the segment store
	IF (USESEG.AND.((PACK(PAKFLG).AND.SEGFLG).EQ.0)) GOTO 999
C
	CALL STDINI			! remove cursor
C
	IF (USESEG) THEN
C
C Sigma 6100 does not remove highlighting of a deleted segment
C so we must do it explicitly
	   IF (PACK(PAKSEG).EQ.RFFSEG) THEN	! found object
	      CALL GSHLIT(RFFSEG,GNORML)
	      RFFSEG = 0
	      IF (RFLSEG) THEN
	         CALL GSHLIT(FL_SEG,GNORML)
	         CALL GDSG(FL_SEG)
	         RFLSEG = .FALSE.
	      ENDIF
	      RFCURS = .NOT.CURS		! force refresh update
	   ELSEIF (PACK(PAKSEG).EQ.RFHSEG.AND.	! object in hand
     &			.NOT.RFHSEP) THEN	! not separate segment
	      CALL GSHLIT(RFFSEG,GNORML)
	      RFHSEG = 0
	      RFCURS = .NOT.CURS		! force refresh update
	   ENDIF
C
C set Sigma 6100 selective erase for this operation
	   CALL WSSELM(.TRUE.)
C
C for true GKS environment, would be just...
	   CALL GDSG(PACK(PAKSEG))
C
C and unset selective erase again
	   CALL WSSELM(.FALSE.)
	ELSE
C
C but instead, we have
C if already invisible, then can't do anything more
	   IF (.NOT.VISI) GOTO 999
C
	   OVCOL = 0			! overriding colour
	   CALL DRAFTR(PACK)		! re-draw
	   OVCOL = -1			! unset overriding colour
	ENDIF
C
C May have to de-allocate the segment number here eventually
C
999	RETURN
	END
