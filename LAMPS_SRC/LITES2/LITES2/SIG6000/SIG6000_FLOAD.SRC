	SUBROUTINE FLOAD
C
***	MODULE	FLOAD
***	IDENT	26AP91
C
	IMPLICIT NONE
C
C Copyright Laser-Scan Laboratories Ltd, Cambridge, England
C
C	Created					CCB	29-June-1985
C
C Loads fonts into Sigma6100 from FRTLIB TRI common blocks
C
***	COMMON/LSL$CMNFRT:FRTTRI/
C
C Call subroutine to do the work, and to dereference FRTLIB pointers
C
	CALL FLOAD_SUB(%VAL(TRITAB_LOC),%VAL(TRIWID_LOC),
     &				%VAL(TRIFNT_LOC),%VAL(TRIFNP_LOC))
C
	RETURN
	END
C
C
C
	SUBROUTINE FLOAD_SUB(TRITAB,TRIWID,TRIFNT,TRIFNP)
C
***	MODULE	FLOAD_SUB
***	IDENT	30AU89
C
	IMPLICIT NONE
C
C Copyright Laser-Scan Laboratories Ltd, Cambridge, England
C
C	Created					CCB	29-June-1985
C
C Loads fonts into Sigma6100 from FRTLIB TRI common blocks
C
***	COMMON/CMN:FONBLK/
***	COMMON/LSL$CMNFRT:FRTCOM/
***	COMMON/LSL$CMNFRT:FRTTRI/
C
C arguments
C
	INTEGER*2	TRITAB(*)	! characters and SCT numbers 
	REAL		TRIWID(TRIMXC,*)! widths for spacing
	INTEGER*2	TRIFNT(*)	! font numbers
	INTEGER*4	TRIFNP(*)	! font pointers
C
C Functions
	LOGICAL		TRIPLT
	INTEGER		FFIX
C
C w/s
	INTEGER		TRIFNI
	INTEGER		FONT
	INTEGER		I
	INTEGER*2	LAST
	INTEGER*2	FIRST
	INTEGER		CHARNO
	INTEGER		LOLIM
	LOGICAL*1	HADSP
C
	SRICTL = 1	! indicate load arrays to SRIPLT
	FRTFC = -1
	FRTGT = TEXTYP
	FRTSC = 1
C
	DO 5 TRIFNI=1,TRIFNC
C
	   FONT = TRIFNT(TRIFNI)	! font number
	   LOLIM = TRIFNP(TRIFNI)+1	! start of this font
	   LAST = 0
	   FIRST = -1
C
C determine first and last chars in font
	   DO 10 I=LOLIM,TRITOP
	      IF (TRITAB(I).LT.0.AND.TRITAB(I).NE.-32768) THEN
	         IF (-TRITAB(I)/1000.NE.FONT) GOTO 20	! end of font
	         IF (FIRST.LT.0) FIRST = MOD(-TRITAB(I),1000)
	         LAST = TRITAB(I)
	      ENDIF
10	   CONTINUE
C
20	   LAST = MOD(-LAST,1000)			! last char
	   IF (FIRST.GT.32) FIRST = 32			! space char
C
C Initialise the font
	   CALL WINFNT(
     &		1,FONT+10,FIRST,LAST,128,128,160,192,200,160,0,0,0)
C
C now deal with each character
	   LAST = 0
	   HADSP = .FALSE.
	   DO 25 I=LOLIM,TRITOP
	      IF (TRITAB(I).LT.0.AND.TRITAB(I).NE.-32768) THEN
	         IF (-TRITAB(I)/1000.NE.FONT) GOTO 5	! end of font
	         IF (TRITAB(I).NE.LAST) THEN
22	            CHARNO = MOD(-TRITAB(I),1000)
C
C deal with space character
	            IF (CHARNO.EQ.32) HADSP = .TRUE.	! explicit space
	            IF (CHARNO.GT.32.AND..NOT.HADSP) CHARNO = 32
	            NPL = 0
	            NUMDAT = 0
C
	            FOFLOW = .FALSE.	! clear overflow flag
	            CALL TRIPLT(CHARNO,FONT,0.0,0.0,1.0,0.0)
	            IF (FOFLOW) THEN
	               CALL WRITEF(
     &		'Character %N Font %N contains too many points',
     &						CHARNO,FONT)
	            ELSE
C
C Don't allow 128 (width 0.0) since these refuse to plot.
	               CALL WLDFNT(1,FONT+10,CHARNO,
     &			128,MAX(129,FFIX(TRIWID(CHARNO,TRIFNI))),
     &			0,NPL,NPPPL,IXX,IYY)
	            ENDIF
	            IF (CHARNO.EQ.32.AND..NOT.HADSP) THEN
	               HADSP = .TRUE.
	               GOTO 22
	            ENDIF
	            LAST = TRITAB(I)
	         ENDIF
	      ENDIF
25	   CONTINUE
5	CONTINUE
	SRICTL = 0		! switch SRIPLT back to normal
C
	RETURN
	END
C
	INTEGER FUNCTION FFIX(R)
C
***	MODULE	FFIX
***	IDENT	29JN85
C
	IMPLICIT NONE
C
C Copyright Laser-Scan Laboratories Ltd, Cambridge, England
C
C Converts real 0.0-1.0 to integer 128-192
C
C arguments
	REAL R
C
	FFIX = NINT(64.0*(R+2.0))
	RETURN
	END
