C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1991-02-09 19:43:16.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
C
C This version of TRITXT replaces that in FRTLIB.
C It either performs the normal FRTLIB function, or uses
C Sigmex hardware text.
C
C Ripped off from FRTLIB on 04FE87	- Clarke Brunt
C
C ************** BEWARE CHANGES TO FRTLIB ****************
C
	LOGICAL FUNCTION TRITXT(CHARST,THS_FONT,X,Y,SIZE,ANGLE)
C
***	MODULE	TRITXT
***	IDENT	09FE91
C
C Copyright Laser Scan Laboratories Ltd., Cambridge, England.
C Author  Paul Hardy
C
C Created					PGH	11-Oct-1983
C
C returns FALSE if it succeeds in plotting character string CHARST
C using the TRI table, at position X,Y, of size SIZE, and at angle ANGLE
C 
C
	IMPLICIT NONE
C
***	COMMON/LSL$CMNFRT:FRTTRI/
C
C args
C
	CHARACTER*(*)	CHARST		! character string
	INTEGER*2	THS_FONT	! font number (-ve for italic)
	REAL		X,Y		! position
	REAL		SIZE		! size
	REAL		ANGLE		! angle in radians
C
C functions called
	LOGICAL		TRITXT_SUB
C
	TRITXT = TRITXT_SUB(CHARST,THS_FONT,X,Y,SIZE,ANGLE,
     &			%VAL(TRIWID_LOC),%VAL(TRIFNT_LOC))
C
	RETURN
	END
C
C
C
	LOGICAL FUNCTION TRITXT_SUB(CHARST,THS_FONT,X,Y,SIZE,ANGLE,
     &		TRIWID,TRIFNT)
C
***	MODULE	TRITXT_SUB
***	IDENT	10JL86
C
C Copyright Laser Scan Laboratories Ltd., Cambridge, England.
C
	IMPLICIT NONE
C
C common
C
***	COMMON/LSL$CMNFRT:FRTCOM/
***	COMMON/LSL$CMNFRT:FRTTRI/	! for text widths
***	COMMON/CMN:OPTION/
***	COMMON/LSL$CMNFRT:SRISCL/
C
C args
C
	CHARACTER*(*)	CHARST		! character string
	INTEGER*2	THS_FONT	! font number (-ve for italic)
	REAL		X,Y		! position
	REAL		SIZE		! size
	REAL		ANGLE		! angle in radians
	REAL		TRIWID(TRIMXC,*)! widths for spacing
	INTEGER*2	TRIFNT(*)	! font numbers
C
C functions called
C
	LOGICAL		TRIFND		! find character
	LOGICAL		TRIPLT		! plot character
C
C w/s
	INTEGER		I
	INTEGER*2	FONT
	INTEGER		CHARNO		! character number
	INTEGER		FONTPT		! font pointer
	REAL		XX,YY		! temporary position
	REAL		SINA,COSA	! sine,cosine of angle
	REAL		CHWID		! character width
	LOGICAL		HADESC		! in escape character sequence
C
	INTEGER		OURCOL		! colour
	INTEGER		AFONT		! absolute font number
	CHARACTER*80	C		! interpreted string
	INTEGER		LENC		! length of string
C
C init things
C
	TRITXT_SUB = .FALSE.		! assume will succeed
	FONT   = ABS(THS_FONT)		! ignore -ve fonts here
	XX = X
	YY = Y
	SINA = SIN(ANGLE)
	COSA = COS(ANGLE)
	HADESC = .FALSE.		! not escaped yet
C
C check valid font, and get pointer to it for accessing TRIWID
C
	DO 10 FONTPT=1,TRIFNC
	   IF (TRIFNT(FONTPT).EQ.FONT) GOTO 15
10	CONTINUE
	CALL FRTWRT('Font %^W%N is not defined, text string is :',FONT)
	CALL FRTWRT('"%S"',CHARST)
	TRITXT_SUB = .TRUE.		! failed
	GOTO 999
C
C loop for each character in the string
C
15	LENC = 0
	DO 20 I=1,LEN(CHARST)
	   CHARNO = ICHAR(CHARST(I:I))
	   IF (CHARNO.EQ.0) GOTO 20	! skip nulls
	   IF (CHARST(I:I).EQ.'$') THEN	! its an escape sequence
	      HADESC = .NOT.HADESC
	      IF (HADESC) GOTO 20	! set escaped flag and wait
	   ENDIF
	   IF (HADESC) THEN
	      CHARNO = CHARNO + 128	! this char is escaped
	      HADESC = .FALSE.		! but no others
	   ENDIF
	   IF (HWTOPT) THEN		! use hardware text
	      IF (TRIFND(CHARNO,FONT)) THEN	! char not found
	         TRITXT_SUB = .TRUE.
	      ELSE
	         LENC = LENC+1			! insert into string
	         C(LENC:LENC) = CHAR(CHARNO)
	         IF (LENC.EQ.80) GOTO 200	! string is full
	      ENDIF
	   ELSE
	      IF (CHARNO.NE.32) THEN	! skip spaces
	         IF (TRIPLT(CHARNO,FONT,XX,YY,SIZE,ANGLE)) TRITXT_SUB=.TRUE.
	      ENDIF
	      CHWID = TRIWID(CHARNO,FONTPT)*SIZE	! spacing
	      XX = XX + CHWID*COSA		! add spacing vector
	      YY = YY + CHWID*SINA
	   ENDIF
20	CONTINUE
C
200	IF (HWTOPT.AND.LENC.GT.0) THEN		! plot hardware text
C
C Set up text colour, height, and angle
C
C the colour is taken from SRISYC if the user passed an overriding value
C >=0, otherwise FRTCOL if >0, otherwise 1
C
	   IF (SRISYC.GE.0) THEN
	      OURCOL = SRISYC
	   ELSEIF (FRTCOL.GT.0) THEN
	      OURCOL = FRTCOL
	   ELSE
	      OURCOL = 1
	   ENDIF
	   AFONT = FONT			! convert to long
	   CALL WSTXFP(AFONT+10,3)	! set font, stroke precision
	   CALL GSTXCI(OURCOL)
	   CALL GSCHH(SIZE)
	   CALL GSCHUP(-SINA,COSA)
	   CALL GTX(X,Y,C(1:LENC))
	ENDIF
C
C that's all
C
999	RETURN
	END
C
C Substitute routine SRIGPL
C Used when loading fonts via calls to TRIPLT
C
	SUBROUTINE SRIGPL(PTS,X,Y)
C
***	MODULE	SRIGPL
***	IDENT	29JN85
C
	IMPLICIT NONE
C
C Copyright Laser-Scan Laboratories Ltd, Cambridge, England
C
C Substitute GPL routine
C
***	COMMON/CMN:FONBLK/
C
C arguments
	INTEGER PTS
	REAL	X(PTS),Y(PTS)
C
C function called
	INTEGER		FFIX
C
C workspace
	INTEGER		I
C
	IF (SRICTL.EQ.0) THEN			! function as normal
	   CALL GPL(PTS,X,Y)
	ELSE					! loading fonts
	   IF (NPL.EQ.MXPLPC) GOTO 990		! too many polylines
	   NPL = NPL+1
	   NPPPL(NPL) = PTS
	   DO 10 I=1,PTS
	      IF (NUMDAT.EQ.MXPLPT) GOTO 990	! too many points
	      NUMDAT = NUMDAT+1
	      IXX(NUMDAT) = FFIX(X(I))
	      IYY(NUMDAT) = FFIX(Y(I))
10	   CONTINUE
	ENDIF
	GOTO 999
C
C overflow error
990	FOFLOW = .TRUE.
C
999	RETURN
	END
