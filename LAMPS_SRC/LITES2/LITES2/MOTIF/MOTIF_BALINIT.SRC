C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1993-08-03 16:47:40.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL FUNCTION BALINIT(ON)
C
***	IDENT	03AU93
***	MODULE	BALINIT
C
C	Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C	Created					CCB	19-April-1985
C
C Description
C
C	Hardware dependant version of trackerball initialisation
C	   ----   This version is for DECwindows mouse   ----
C
	IMPLICIT NONE
C
***	COMMON/CMN:MOTIF_MOUSE/
***	COMMON/CMN:WORKS/
C
	EXTERNAL	BUTTON_AST,MOUSE_AST
C
C argument
	LOGICAL*1	ON		! turn on?
C
C It is only sensible to initialise mouse if primary workstation in use.
C Returns .TRUE. if mouse is switched on.
C
	BALINIT = BALINI		! present state
C
C do nothing if bitpad enabled, since same device
	IF (BITINI) GOTO 999
	IF ((WKOP(1).OR.WKOP(2)).AND.(BALINI.NEQV.ON)) THEN
	   IF (ON) THEN
	      BUTTON_NUMBER = 0			! clear button
	      MOUSE_MOVE = .FALSE.		! clear mouse
	      CALL SET_BUTTON_AST(BUTTON_AST)	! switch on
	      CALL SET_MOUSE_AST(MOUSE_AST)	! switch on
	      BALINIT = .TRUE.
	   ELSE
	      CALL SET_BUTTON_AST(%VAL(0))	! switch off
	      CALL SET_MOUSE_AST(%VAL(0))	! switch off
	      BALINIT = .FALSE.
	   ENDIF
	ENDIF
C
999	RETURN
	END
