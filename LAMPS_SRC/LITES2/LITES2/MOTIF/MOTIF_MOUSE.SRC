C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1993-08-03 17:48:42.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
C
C Routines for dealing with DECwindows mouse and screen menu
C
	SUBROUTINE BUTTON_AST(BUTTON,X,Y,XR,YR)
C
***	IDENT	03AU93
***	MODULE	BUTTON_AST
C
C	Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C	Created					CCB	14-May-1985
C
C DECwindows mouse button AST routine
C
	IMPLICIT NONE
C
***	COMMON/CMN:MOTIF_MOUSE/
C
C argument
	INTEGER	BUTTON
	REAL	X,Y
	REAL	XR,YR
C
	IF (BUTTON_NUMBER.EQ.0) THEN
	   BUTTON_NUMBER = BUTTON-1
	   BUTTON_X = X
	   BUTTON_Y = Y
	   BUTTON_XR = XR
	   BUTTON_YR = YR
	ENDIF
C
	RETURN
	END
C
	SUBROUTINE MOUSE_AST(X,Y,XR,YR)
C
***	IDENT	14JN85
***	MODULE	MOUSE_AST
C
C	Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C	Created					CCB	14-May-1985
C
C DECwindows mouse movement AST routine
C
	IMPLICIT NONE
C
***	COMMON/CMN:MOTIF_MOUSE/
C
C arguments
	REAL	X,Y
	REAL	XR,YR
C
	MOUSE_MOVE = .TRUE.		! mouse has moved
	MOUSE_X = X
	MOUSE_Y = Y
	MOUSE_XR = XR
	MOUSE_YR = YR
C
	RETURN
	END
C
	SUBROUTINE MENU_AST(BOX)
C
***	IDENT	28AU86
***	MODULE	MENU_AST
C
C	Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C	Created					CCB	14-May-1985
C
C DECwindows menu box AST routine
C
	IMPLICIT NONE
C
***	COMMON/CMN:MOTIF_MOUSE/
C
C argument
	INTEGER*4	BOX		! menu box number
C
	IF (MENU_BOX.EQ.0) THEN		! last one has been read
	   MENU_BOX = BOX
	ENDIF
C
	RETURN
	END
C
	INTEGER FUNCTION GET_BUTTON(X,Y,XR,YR)
C
***	IDENT	14JN85
***	MODULE	GET_BUTTON
C
C	Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C	Created					CCB	14-May-1985
C
C Returns non-zero button number if one has been pressed
C
	IMPLICIT NONE
C
***	COMMON/CMN:MOTIF_MOUSE/
C
C arguments
	REAL	X,Y				! world coords
	REAL	XR,YR				! root window
C
	GET_BUTTON = BUTTON_NUMBER		! button number
	IF (BUTTON_NUMBER.NE.0) THEN
	   BUTTON_NUMBER = 0			! clear it
	   X = BUTTON_X
	   Y = BUTTON_Y
	   XR = BUTTON_XR
	   YR = BUTTON_YR
	ENDIF
C
	RETURN
	END
C
	LOGICAL FUNCTION GET_MOUSE(X,Y,XR,YR)
C
***	IDENT	14JN85
***	MODULE	GET_MOUSE
C
C	Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C	Created					CCB	14-May-1985
C
C True if mouse has moved
C Returns latest position
C
	IMPLICIT NONE
C
***	COMMON/CMN:MOTIF_MOUSE/
C
C arguments
	REAL	X,Y				! world coords
	REAL	XR,YR				! root window
C
	GET_MOUSE = MOUSE_MOVE			! has it moved
	IF (MOUSE_MOVE) THEN
	   MOUSE_MOVE = .FALSE.			! hasn't now
	   X = MOUSE_X
	   Y = MOUSE_Y
	   XR = MOUSE_XR
	   YR = MOUSE_YR
	ENDIF
C
	RETURN
	END
C
	INTEGER FUNCTION GET_MENU
C
***	IDENT	14JN85
***	MODULE	GET_MENU
C
C	Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C	Created					CCB	14-May-1985
C
C Returns non-zero menu box number if one probed
C
	IMPLICIT NONE
C
***	COMMON/CMN:MOTIF_MOUSE/
C
	GET_MENU = MENU_BOX			! menu box number
	IF (MENU_BOX.NE.0) THEN			! one was probed
	   MENU_BOX = 0				! clear it
	ENDIF
C
	RETURN
	END
C
	LOGICAL FUNCTION CREATE_MENU(IER)
C
***	IDENT	27JA87
***	MODULE	CREATE_MENU
C
C	Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C	Created					RWR	27-Jan-1987
C
C Creates menu on screen using data stored in MENUS
C Returns .TRUE. if all is well.
C
	IMPLICIT NONE
C
C argument
	INTEGER		IER		! Return code
					! 1 = size too small
C
***	PARAMETER/CMN:MACMEN/
C
***	COMMON/CMN:MACRO/
***	COMMON/CMN:MENUS/
***	COMMON/CMN:MOTIF_MOUSE/
C
	EXTERNAL	MENU_AST
C
	CREATE_MENU = .FALSE.			! assume failure
C
C check for sensible size
	IF (SCRMEN_SIZX.LE.0.0.OR.SCRMEN_SIZY.LE.0.0) THEN
	   IER = 1
	   GOTO 9999
	ENDIF	   
C
C now create the menu
	MENU_BOX = 0			! clear menu box
	CALL MENU_CREATE(SCRMEN_INX,SCRMEN_INY,
     &			 SCRMEN_SIZX,SCRMEN_SIZY,
     &			 SCRMEN_ORGX,SCRMEN_ORGY,
     &			 SCRMEN_LOC,
     &			 SCRMEN_TITLE(1:SCRMEN_LTIT),
     &			 %VAL(MANDSL_ADDR+SCRMEN_BASE*8),
     &			 MENU_AST)
C
	CREATE_MENU = .TRUE.		! all OK
	IER = 0
C
9999	RETURN
	END
