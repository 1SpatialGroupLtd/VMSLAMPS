	INTEGER*4 FUNCTION ABORTAST(CHAN)
C
***	IDENT	23MR92
***	MODULE	ABORTAST
C
C	Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C	Written				CCB	16-Mar-1992
C
C Description
C	LITES2 abort mailbox write attention AST
C	Returns system error code
C	This is DECwindows version - calls DECWAST also
C
	IMPLICIT NONE
C
	INCLUDE	'($IODEF)'
	INCLUDE	'($SSDEF)'
***     COMMON/CMN:GLOBAL/		! for flags
***	COMMON/CMN:VAREFN/		! for wait event flag
C
C argument (AST parameter)
	INTEGER	CHAN			! IO channel, passed by value
C
C functions called
	INTEGER	SYS$QIOW
	INTEGER	ABORTAST_SUB
C
C workspace
	INTEGER*2	IOSB(4)
	INTEGER		SEVERITY
C
C there has been a write to the mailbox - read what it was
	ABORTAST = SYS$QIOW(
     &			,			! efn
     &	 		CHAN,			! channel
     &			%VAL(IO$_READVBLK.OR.IO$M_NOW),	! function
     &			IOSB,			! iosb
     &			,			! astadr
     &			,			! astprm
     &			%REF(CTRLC_MESS),	! p1 = BUFFER
     &			%VAL(CTRLC_MAX_MESS),	! p2 = size
     &			,			! p3 = timeout
     &			,			! p4
     &			,			! p5
     &			)			! p6
C
	IF (.NOT.ABORTAST) GOTO 9999
C
C completed, so see what status was
	ABORTAST = IOSB(1)
C
C exit with any error other than ENDOFFILE (nothing there)
	IF (.NOT.ABORTAST.AND.ABORTAST.NE.SS$_ENDOFFILE) GOTO 9999
C
C any message counts as a CTRLC
	IF (ABORTAST.NE.SS$_ENDOFFILE) THEN
	   CTRLC_MESS_LEN = IOSB(2)
	   CALL SYS$SETEF(%VAL(CLCFLG))	! set wait event flag
C
	   SEVERITY = 0
	   IF (CTRLC_MESS_LEN.GT.0) THEN
C
C check for a severity digit at the start
	      SEVERITY = ICHAR(CTRLC_MESS(1:1)) - 48
	      IF (SEVERITY.GE.0.AND.SEVERITY.LE.9) THEN
	         IF (CTRLC_MESS_LEN.GT.0
     &			) CTRLC_MESS(:CTRLC_MESS_LEN) =
     &				CTRLC_MESS(2:CTRLC_MESS_LEN+1)
	      ENDIF
	   ENDIF
C
	   IF (SEVERITY.EQ.1) THEN	! just abort DRAW etc.
	      BREAK = BREAK_ON
C
C avoid overwriting a more severe CTRL/C which has happened already
	      IF (CTRLC.EQ.CTRLC_OFF) CTRLC = CTRLC_BREAK
	   ELSEIF (SEVERITY.EQ.2) THEN	! abort DRAW etc. and command dec.
	      BREAK = BREAK_ON
	      CTRLC = CTRLC_AST		! notify the world
	   ELSE				! as for keyboard CTRL/C
	      CTRLC = CTRLC_AST
	   ENDIF
	   CALL DECWAST			! declare DECwindows event
	ENDIF
C
C re-enable the AST
	ABORTAST = ABORTAST_SUB(CHAN)
C
9999	RETURN
	END
C
	INTEGER*4 FUNCTION ABORTAST_SUB(CHAN)
C
***	IDENT	05JL90
***	MODULE	ABORTAST_SUB
C
C	Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C	Written				CCB	16-Mar-1992
C
C Description
C	Subroutine called by ABORTAST - required so that address of
C	ABORTAST itself can be referenced.
C	Returns system error code
C
	IMPLICIT NONE
C
	INCLUDE	'($IODEF)'
C
C argument (AST parameter)
	INTEGER	CHAN			! IO channel, passed by value
C
C functions called
	INTEGER		SYS$QIOW
	EXTERNAL	ABORTAST
C
C workspace
	INTEGER*2	IOSB(4)
C
	ABORTAST_SUB = SYS$QIOW(
     &			,			! efn
     &	 		CHAN,			! channel
     &			%VAL(IO$_SETMODE.OR.IO$M_WRTATTN), ! function
     &			IOSB,			! iosb
     &			,			! astadr
     &			,			! astprm
     &			ABORTAST,		! p1 = AST address
     &			CHAN,			! p2 = AST parameter
     &			,			! p3
     &			,			! p4
     &			,			! p5
     &			)			! p6
C
	IF (.NOT.ABORTAST_SUB) GOTO 9999
C
	ABORTAST_SUB = IOSB(1)
C
9999	RETURN
	END
