C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1993-11-23 10:05:18.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
C
C Common block holding information about features identified for
C editing, i.e. struck items, found object, and object in hand,
C and also the 'current read-in object' temporarily used by
C GETVRT, IFFBDY, FIND
	INTEGER	OBJDEP,FOFULL,FOVOFF,FOCRIT,IHFULL,RIFULL
	PARAMETER	(OBJDEP=4)	! max number of struck objects
	PARAMETER	(FOFULL=1000)	! size of FOXY
	PARAMETER	(FOVOFF=FOFULL/2)	! centre of FOXY
	PARAMETER	(FOCRIT=10)	! minimum distance from ends
	PARAMETER	(IHFULL=1000)	! size of IHXY
	PARAMETER 	(RIFULL=200)	! size of RIXY
C
	INTEGER		STR_MAX_ATTR	! maximum size of CB arrays
	PARAMETER	(STR_MAX_ATTR = IFF_MAXCBCOL-2)
C
C The OBJ... arrays hold information about the (up to OBJDEP) best
C struck objects.
C They are set by FIND
C
C The FO... things concern the current found object
C They are set by HAULIN
C
C The IH... things concern the object In Hand
C They are obtained from FO... by HANDLE
C
C First the OBJ... stuff
C
C HITITC is the count of 'hits'
C HITITE is the index on QUORD for current hit item
C HITITP is a copy of QUORD(HITITE) (ie the index on OBJ...)
C WORST is the 'HITITP' for the worst object
C BEST is the 'HITITP' for the best object
	INTEGER HITITC,HITITE,HITITP,WORST,BEST
C
C QUORD is the index vector for sorting hits by their merit
C Thus QUORD(I) holds the index on OBJ... for the I'th hit
	INTEGER QUORD(OBJDEP)
C
C OBJPAK is a copy of a data pack for the object.
C	 It is copied from the sector list by FIND,
C	 but PAKPST and PAKVRT are set to the hit point.
	INTEGER*4	OBJPAK( PAKLEN, OBJDEP )
	REAL		OBJAUX(AUXLEN,OBJDEP)	! auxiliary array
	INTEGER		OBJPTR(OBJDEP)		! lengths of texts
	CHARACTER*255	OBJTXT(OBJDEP)		! texts themselves
	REAL 		HITRAD(OBJDEP)		! squares of hit radii
	REAL 		OBJCXY(3,OBJDEP)	! cursor positions
	LOGICAL 	OBJNVT(OBJDEP)		! true if on vertex
	LOGICAL		OBJSTRT(OBJDEP)		! true if at start of arc
	LOGICAL		OBJEND(OBJDEP)		! true if at end of arc
C
C now for the found object
C
	INTEGER*4	FOPAK(PAKLEN)
	REAL		FOAUX(AUXLEN)
	INTEGER		FOPTR		! length of text
	CHARACTER*255	FOTXT		! text itself
	REAL		FOCXY(3)	! cursor position
	INTEGER		FOCZI		! (as an integer)
	EQUIVALENCE	(FOCZI,FOCXY(3))
	REAL 		FOXY(2,FOFULL)	! some coordinates
	REAL		FOZ(FOFULL)
	INTEGER		FOZI(FOFULL)
	EQUIVALENCE	(FOZ,FOZI)
	INTEGER		FONATT		! number of attributes
	INTEGER		FOATTC(STR_MAX_ATTR)	! attribute codes
	INTEGER		FOATTV(STR_MAX_ATTR,FOFULL)! attribute values
	BYTE		FOFLG(FOFULL)	! flags
	INTEGER		FO_Z_COL	! z column index
	INTEGER*4	FOTC		! TC address (or 0)
	INTEGER*4	FOTCND		! end of TCs
	INTEGER*4	FOAC		! AC address (or 0)
	INTEGER*4	FOACND		! end of ACs
	INTEGER*4	FOEF		! EF address
	INTEGER		FOVO		! vertex offset of FOXY
	INTEGER		FOTOP		! last used index of FOXY
	INTEGER 	FOTH		! thickness
	INTEGER*2	FOFS(4)		! FS entry
	INTEGER		FOLST		! last vertex number
	INTEGER		FOVRT		! current vertex
	INTEGER		FOFC		! feature code of FO
	REAL		FOTHIS(3)	! coordinates of first vertex
	REAL		FOTHAT(3)	! coordinates of last vertex
	LOGICAL 	FONVRT		! true if on vertex
	LOGICAL		FOSTRT		! true when on start of arc
	LOGICAL		FOEND		! true when on end of arc
	LOGICAL 	FONLIN		! true if cursor on line
	LOGICAL 	FO		! true if we have a found object
	REAL		FOARCBX(4)	! limiting box for arc
	REAL		FOCOEFFS(4)	! plane of circle arcs
	LOGICAL		FOC_DEFINED	! set up
C
C marked position on found object for PART operations
C
	REAL		FMCXY(3)	! cursor position
	INTEGER		FMCZI		! (as an integer)
	EQUIVALENCE	(FMCZI,FMCXY(3))
	INTEGER		FMVRT		! marked vertex
	LOGICAL 	FMNVRT		! true if on vertex
	LOGICAL		FMSTRT		! true if on start of arc
	LOGICAL		FMEND		! true if on end of arc
C
C now stuff for the object in hand, which is obtained from the
C FO... stuff by HANDLE
C
	INTEGER*4	IHPAK( PAKLEN )	! a data pack
	REAL		IHAUX( AUXLEN )	! auxiliary array
	INTEGER		IHPTR		! length of text
	CHARACTER*255	IHTXT		! text itself
	REAL		IHCXY(3)	! cursor position
	INTEGER		IHCZI		! and Z as an integer
	EQUIVALENCE	(IHCXY(3),IHCZI)
	REAL		IHXY(2,IHFULL)	! coordinates
	BYTE		IHFLG(IHFULL)	! flags
	REAL		IHZ(IHFULL)	! array of Z values for clipping
	INTEGER		IHZI(IHFULL)	! integer equivalent
	EQUIVALENCE	(IHZ,IHZI)
	INTEGER*4	IHTC		! TC address (or 0)
	INTEGER*4	IHAC		! AC address (or 0)
	INTEGER*4	IHEF		! EF address
	INTEGER		IHVO		! vertex offset of IHXY
	INTEGER		IHTOP		! last used index of IHXY
	INTEGER 	IHTH		! TH value
	INTEGER*2	IHFS(4)		! FS entry
	INTEGER		IHLST		! last vertex number
	INTEGER		IHVRT		! current vertex
	INTEGER		IHFC		! feature code
	LOGICAL 	IHNVRT		! true if on vertex
	LOGICAL		IHSTRT		! true when on start of arc
	LOGICAL		IHEND		! true when on end of arc
	LOGICAL 	IH		! true if object in hand
	REAL		IHCOEFFS(4)	! plane of circle arcs
	LOGICAL		IHC_DEFINED	! set up
C
C marked position on object in hand for PART operations
C
	REAL		IMCXY(3)	! cursor position
	INTEGER		IMCZI		! and Z as an integer
	EQUIVALENCE	(IMCXY(3),IMCZI)
	INTEGER		IMVRT		! marked vertex
	LOGICAL	 	IMNVRT		! true if on vertex
	LOGICAL		IMSTRT		! true if on start of arc
	LOGICAL		IMEND		! true if on end of arc
C
C and the 'current read-in object' stuff
	REAL		RIXY(2,RIFULL+1)! coordinates
	INTEGER		RINATT		! number of attributes
	INTEGER		RIATTC(STR_MAX_ATTR+1)	! attribute codes
	INTEGER		RIATTV(STR_MAX_ATTR+1,RIFULL+1)! attribute values
	BYTE		RIFLG(RIFULL+1)	! flags
	REAL		RIZ(RIFULL+1)	! array of Z values for FIND
	INTEGER		RIZI(RIFULL+1)	! integer equivalent
	EQUIVALENCE	(RIZ,RIZI)
C
	INTEGER		RI_Z_COL	! z column number
	INTEGER		RIMAP		! current read-in map
	INTEGER		RIPNF		! and NF pointer
	INTEGER		RIVO		! vertex offset
	INTEGER		RITOP		! last used index
C
C other stuff with no better home for now
C
C CONTXY are the coordinates handed as context to GROPE
	REAL CONTXY(2)
C
C DSCRIT is a save of the last DFCRIT set in screen mm
C DFCRIT is the default find radius (in screen mm)
C EFCRIT is the 'effective' find radius in IFF units
C CRITR2 (set by GROPE) is the square of EFCRIT
	REAL 		DSCRIT
	REAL 		DFCRIT
	REAL 		EFCRIT
	REAL 		CRITR2
C
C FNDSEC is the sector we are FINDing in. Set by GROPE, used by FIND
C	 Also used by GROPE as sector to resume spiral scan in
	INTEGER		FNDSEC
C
C NFRSTN is the NF number of feature wanted by GROPE and FIND,
C and MPRSTN the (optional) map number
C 
	INTEGER 	NFRSTN
	INTEGER		MPRSTN
C
C FTXCHR is the character string we are searching for if FTXPTR non-zero
C FTXPTR is the length of the string in FTXCHR
	INTEGER		FTXPTR
	CHARACTER*255	FTXCHR
C
C SEADEL is true if doing a SEARCH DELETED
	LOGICAL		SEADEL
C
C LASPAK is the address of a pack for SEARCH LAST operation
C SEAPAK is a copy of LASPAK when actually doing SEARCH LAST, else 0
	INTEGER*4	LASPAK,SEAPAK
C
C FNDMDE is the find mode - type of find operation
	INTEGER		FNDMDE
C
C NSCND and NVRTX set by LDIST and INTSCN for the benefit of FIND
C NVRTX is TRUE if the hit is on a vertex
C NSCND is TRUE if that vertex was the second argument to LDIST
	LOGICAL 	NSCND,NVRTX
C
C ITVRT is the vertex number of the found object at intersection
C Set by INTSCN for FIND
	INTEGER		ITVRT
C
C CSSTIL is true if cursor hasn't moved. Set TRUE when a FIND is done,
C  FALSE when the cursor is moved
	LOGICAL 	CSSTIL
C
C SPIRAL is true if GROPE is to start or resume spiral search
	LOGICAL 	SPIRAL
C
C INSPIR is true if spiral search can be resumed
	LOGICAL 	INSPIR
C
C RECVRD is true if last 'find' operation was a RECOVER
	LOGICAL 	RECVRD
C
C MAT**s are true if JOIN and TIE are to match FC,FSN
	LOGICAL 	MATFC
	LOGICAL 	MATFSN
	LOGICAL 	MATLAY
	LOGICAL 	MATMAP
	LOGICAL 	MATPC
	LOGICAL		MATAC
C
C JOINNG is true during a JOIN or TIE operation
	LOGICAL 	JOINNG
C
C MENDNG is true during an internal FIND in MEND
	LOGICAL 	MENDNG
C
C FINDND is true if FIND is to find ends of lines (set by GROPE)
	LOGICAL 	FINDND
C
C JOIFST is true if joining to first end of found object (set by NXTITM)
	LOGICAL 	JOIFST
C
C SRCHNG is true if SEARCHing, rather than LOCATEing
	LOGICAL		SRCHNG
C
C SEANEA is true if doing SEARCH NEAREST
	LOGICAL		SEANEA
C
	COMMON/STRIKE/HITITC,HITITE,HITITP,WORST,QUORD,OBJPAK,OBJAUX,
     &		OBJPTR,HITRAD,OBJCXY,
     &		FOPAK,FOAUX,FOARCBX,FOPTR,FOCXY,FOTC,FOTCND,FOAC,
     &		FOACND,FOEF,FOXY,FOVO,FO_Z_COL,
     &	        FOCOEFFS,FOZ,
     &		FONATT,FOATTC,FOATTV,
     &	        FOTOP,FOTH,FOTHIS,FOTHAT,
     &		FOLST,FOVRT,FMCXY,FMVRT,
     &	        IHPAK,IHAUX,IHPTR,IHCXY,IHCOEFFS,IHZ,IHTC,IHAC,IHEF,
     &		IHXY,IHVO,IHTOP,IHTH,IHLST,IHVRT,IMCXY,IMVRT,FOFC,IHFC,
     &	        RIXY,RIZ,RINATT,RIATTC,RIATTV,RIMAP,RIPNF,RIVO,RITOP,
     &	        RI_Z_COL,
     &		CONTXY,DSCRIT,DFCRIT,EFCRIT,CRITR2,FNDSEC,NFRSTN,FTXPTR,
     &		ITVRT,LASPAK,SEAPAK,FNDMDE,
     &		FOFS,IHFS,
     &		FOC_DEFINED,IHC_DEFINED,
     &		OBJNVT,FOFLG,FONVRT,FO,FMNVRT,IHFLG,IHNVRT,IH,IMNVRT,
     &		RIFLG,NSCND,NVRTX,CSSTIL,SPIRAL,INSPIR,RECVRD,FONLIN,
     &		MATFC,MATFSN,MATLAY,MATMAP,MATPC,MATAC,
     &		JOINNG,FINDND,JOIFST,SRCHNG,SEADEL,MENDNG,
     &		OBJSTRT,OBJEND,FOSTRT,FOEND,IHSTRT,IHEND,
     &		FMSTRT,FMEND,IMSTRT,IMEND,SEANEA,
     &		BEST,MPRSTN
C
C Align BEST, MPRSTN (and maybe others?)
C
	COMMON/STRCHR/OBJTXT,FOTXT,IHTXT,FTXCHR
