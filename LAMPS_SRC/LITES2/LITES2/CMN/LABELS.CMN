C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1996-05-08 11:39:58.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
C
C Common block for labelling - REQUIRES PARAMATER FILE ACS.PAR
C                              and LSL$CMNFRT:FRTACD
C
	INTEGER		TOT_LAB_AC	! total no of possible AC labels
	PARAMETER	(TOT_LAB_AC = 20)
C
	INTEGER		TOT_LAB_ATTR	! total no of attribute labels
	PARAMETER	(TOT_LAB_ATTR = 20)
C
C type of labelling of cursor position
	INTEGER		CURS_POSITION
	INTEGER		CURS_SHEET
	INTEGER		CURS_ABSOLUTE
	INTEGER		CURS_GEOGRAPHICALS
	INTEGER		CURS_TEXT
	INTEGER		CURS_TITLE
C
	PARAMETER	(CURS_POSITION 	    = 1)
	PARAMETER	(CURS_SHEET         = 2)
	PARAMETER	(CURS_ABSOLUTE      = 3)
	PARAMETER	(CURS_GEOGRAPHICALS = 4)
	PARAMETER	(CURS_TEXT          = 5)
	PARAMETER	(CURS_TITLE         = 6)
C
C labelling Features or Points?
	LOGICAL		LABFEAT
C
	LOGICAL		NOLAB		! .TRUE. if no labelling set up
C
	LOGICAL		LABFSN		! .TRUE. if labelling FSNs
	LOGICAL		LABFC		! .TRUE. if labelling FCs
	INTEGER		LABAC(TOT_LAB_AC) ! ACs to be labelled
	INTEGER		LABATTR(TOT_LAB_ATTR,2) ! Attributes to be lab'ed
C
C what type of labelling for ACs
C
	LOGICAL		LABACV(TOT_LAB_AC)   ! .TRUE. to label value
	LOGICAL		LABACTXT(TOT_LAB_AC) ! .TRUE. to label text
C
	CHARACTER*(ACD_FORMAT_MAX+2) LABACFORMAT(TOT_LAB_AC) ! formats
	INTEGER		LABACF_LEN(TOT_LAB_AC)
	CHARACTER*(ACD_FORMAT_MAX+2) LABATTRFORMAT(TOT_LAB_ATTR) !formats
	INTEGER		LABATTRF_LEN(TOT_LAB_ATTR)
C
C flag to ensure only one AC of each type is output
C
	LOGICAL		HAD_LAB_AC(TOT_LAB_AC)
C
C values and texts of ACs (stored so that they can be output in labelling
C order, not IFF file order)
C
	INTEGER*4	LABACVAL(TOT_LAB_AC)
	BYTE		LABACBUF(ACMAX+1,TOT_LAB_AC)
C
	INTEGER		NUM_LAB_AC	! number of AC labels set up
	INTEGER		NUM_LAB_ATTR	! number of Attribute labels
C
C allow enough space for the longest possible label (including a possible
C 44 digit very large negative real value, and ACMAX character text)
	INTEGER		LTEXTL
	PARAMETER	(LTEXTL = 7+7+(46+ACMAX+1)*TOT_LAB_AC)
	CHARACTER*(LTEXTL)	LAB_TEXT	! label
C
C and for labelling attributes
C (maximum is 44 digit very large negative real value
	INTEGER		ATEXTL
	PARAMETER	(ATEXTL = 46)
	CHARACTER*(ATEXTL) LAB_ATTR(TOT_LAB_ATTR)
C
	INTEGER		LABIND		! length of LAB_TEXT
	INTEGER		LABATTIND(TOT_LAB_ATTR)	! lgths of attr labels
C
	LOGICAL		HAD_ANNOMARK	! for benifit of INPUT
	LOGICAL		MARKING		! true when marking points
	LOGICAL		WITH_SYMBOL	! true when marking with symbol
	INTEGER		NUMBER_OFFSET	! point number of end of last ST
	LOGICAL		FROM_USER	! if SETANNO is called from the user
					! routine - don't update workstation
C
C annotation characteristics set by DOANNO
C
	REAL		ANNOMMOFFX,ANNOMMOFFY	! label offsets in mms
	REAL		ANNOMMSIZ	! size in screen mms
	REAL		ANNOANGLE	! angle for labels
	REAL		ANNOCOS		! cos of angle
	REAL		ANNOSIN
	REAL		ANNOWINFAC	! size of window to use
	REAL		ANNOWIDTH	! thickness of linework in annotation
	INTEGER		ANNOFONT	! font
	INTEGER		ANNOLOCATION   	! locating point
	INTEGER		ANNOCOL		! colour
	INTEGER		ANNOVER		! overlay
	INTEGER		ANNODISP	! display
	LOGICAL		ANNOSTART	! annotate at start of feature
	LOGICAL		ANNOWINDOW	! annotate at window round cursor
	INTEGER		ANNOMARK	! symbol number used for marking
	INTEGER		ANNOMARKFC	! fc used to determine ANNOMARK
	REAL		ANNOMARK_MINX	! size of box around symbol
	REAL		ANNOMARK_MAXX
	REAL		ANNOMARK_MINY
	REAL		ANNOMARK_MAXY
	REAL		ANNOLEGEND_XSIZ	! size of colour block
	REAL		ANNOLEGEND_YSIZ
	REAL		ANNOLEGEND_XPOS	! position of legend
	REAL		ANNOLEGEND_YPOS
	LOGICAL		ANNOHWT		! hardware text
	INTEGER		ANNOHW		! hardware (as in FRT)
	INTEGER		ANNOFILL	! fill style (FRTSC for non-
					! patterened areas in FRT)
	INTEGER		ANNOAST		! interior style
	INTEGER		ANNOAIX		! style index
	INTEGER		ANNOMAC		! ANNO JOURNAL macro number
	INTEGER*4	ANNOMDSC(2)	! ANNO JOURNAL name
C
C values calculated in SETANNO
	REAL		ATTROFFY	! offset for labelling attributes
	REAL		ANNOSIZ		! size (in sheet mms, for FRTLIB)
	REAL		ANNOOFFX,ANNOOFFY ! offset
C
C for drawing legends, we need to save the overlay mask and offset
	INTEGER		ANNOTATION_MASK
	INTEGER		ANNOTATION_OFFSET
C
C saved values for annotations - if things added here, please update
C the SAVE_ANNO and RESTORE_ANNO routines
	REAL		SAVE_ANNOMMOFFX,SAVE_ANNOMMOFFY	
	REAL		SAVE_ANNOMMSIZ	
	REAL		SAVE_ANNOANGLE	
	REAL		SAVE_ANNOCOS		
	REAL		SAVE_ANNOSIN
	REAL		SAVE_ANNOWINFAC	
	REAL		SAVE_ANNOWIDTH	
	INTEGER		SAVE_ANNOFONT	
	INTEGER		SAVE_ANNOLOCATION   	
	INTEGER		SAVE_ANNOCOL		
	INTEGER		SAVE_ANNOVER		
	INTEGER		SAVE_ANNODISP	
	LOGICAL		SAVE_ANNOSTART	
	LOGICAL		SAVE_ANNOWINDOW	
	INTEGER		SAVE_ANNOMARK	
	INTEGER		SAVE_ANNOMARKFC	
	REAL		SAVE_ANNOMARK_MINX	
	REAL		SAVE_ANNOMARK_MAXX
	REAL		SAVE_ANNOMARK_MINY
	REAL		SAVE_ANNOMARK_MAXY
	REAL		SAVE_ANNOLEGEND_XSIZ	
	REAL		SAVE_ANNOLEGEND_YSIZ
	REAL		SAVE_ANNOLEGEND_XPOS	
	REAL		SAVE_ANNOLEGEND_YPOS
	LOGICAL		SAVE_ANNOHWT
C
	COMMON	/LABELS/ANNOOFFX,ANNOOFFY,ANNOMMSIZ,	! reals
     &	                ANNOMMOFFX,ANNOMMOFFY,ANNOSIZ,ATTROFFY,
     &	                ANNOWINFAC,ANNOWIDTH,
     &	                ANNOMARK_MINX,ANNOMARK_MAXX,ANNOMARK_MINY,
     &	                ANNOMARK_MAXY,
     &	                ANNOLEGEND_XSIZ,ANNOLEGEND_YSIZ,
     &	                ANNOLEGEND_XPOS,ANNOLEGEND_YPOS,
     &			ANNOANGLE,ANNOSIN,ANNOCOS,
     &	                LABACVAL,LABAC,			! integers
     &	                LABACF_LEN,
     &	                ANNOFONT,ANNOCOL,NUM_LAB_AC,LABIND,
     &	                LABFEAT,LABATTR,ANNOMARK,LABATTIND,
     &	                LABATTRF_LEN,NUM_LAB_ATTR,ANNOMARKFC,
     &	                ANNOVER,ANNODISP,
     &	                ANNOTATION_MASK,ANNOTATION_OFFSET,
     &	                ANNOLOCATION,NUMBER_OFFSET,FROM_USER,
     &			ANNOHW,ANNOMAC,ANNOMDSC,
     &			ANNOFILL,ANNOAST,ANNOAIX,
     &	                LABACBUF,LABFSN,LABFC,		! bytes
     &	                LABACV,LABACTXT,
     &	                HAD_LAB_AC,ANNOSTART,ANNOWINDOW,
     &	                NOLAB,MARKING,HAD_ANNOMARK,WITH_SYMBOL,ANNOHWT

	COMMON	/LABELSC/LAB_TEXT,LABACFORMAT,LABATTRFORMAT,LAB_ATTR

	COMMON	/SAVE_ANNO/SAVE_ANNOMMSIZ,	
     &	                   SAVE_ANNOMMOFFX,SAVE_ANNOMMOFFY,
     &	                   SAVE_ANNOWINFAC,SAVE_ANNOWIDTH,
     &	                   SAVE_ANNOMARK_MINX,SAVE_ANNOMARK_MAXX,
     &	                   SAVE_ANNOMARK_MINY,SAVE_ANNOMARK_MAXY,
     &	                   SAVE_ANNOLEGEND_XSIZ,SAVE_ANNOLEGEND_YSIZ,
     &	                   SAVE_ANNOLEGEND_XPOS,SAVE_ANNOLEGEND_YPOS,
     &	                   SAVE_ANNOANGLE,SAVE_ANNOSIN,SAVE_ANNOCOS,
     &	                   SAVE_ANNOFONT,SAVE_ANNOCOL,SAVE_ANNOMARK,
     &	                   SAVE_ANNOMARKFC,SAVE_ANNOVER,SAVE_ANNODISP,
     &	                   SAVE_ANNOLOCATION,
     &	                   SAVE_ANNOSTART,SAVE_ANNOWINDOW,SAVE_ANNOHWT
