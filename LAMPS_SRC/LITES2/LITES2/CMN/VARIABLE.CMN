C
C	LITES2 Variables common block
C
	INTEGER		FSV		! max. length of variable name
	PARAMETER	(FSV = 16)
	INTEGER		FSV2		! length of variable name + sub
	PARAMETER	(FSV2 = 32)
C
C Logical name for maximum number of variables
	CHARACTER*(*)	MAXVAR_LOG_NAME
	PARAMETER	(MAXVAR_LOG_NAME = 'LSL$LITES2_VARIABLEMAX')
C
	INTEGER		DEFAULT_MAXVAR	! number of variables
	PARAMETER	(DEFAULT_MAXVAR = 200)
C
	INTEGER*4	VARTAB_ADDRESS
	INTEGER*4	VARADR		! address of current variable
C
C NB VARSAV is words rather than longs so we can grubbily access
C a single word in INIT
	INTEGER*2	VARSAV(24)	! saved command table info.
C
	INTEGER		MAXVAR		! maximum number of variables
C
	INTEGER		DVARN		! found variable number
	CHARACTER*(FSV2) DVAR		! variable name
	INTEGER		DVARL		! variable name length
C
	INTEGER		CHCK_VARTAB	! has table to be checked for
					! duplicates?  0 = no, -1 or 1 = y
					! cleared in FINVAR, set in ADDVAR
C
	INTEGER		VARARG		! integer argument
	LOGICAL		GOT_VARARG	! integer argument present?
C
	REAL		VARARGR		! real argument
	LOGICAL		GOT_VARARGR	! real argument present?
C
	LOGICAL*1	JMPFLG		! the condition flag
C
C zone of memory to get memory for array variables and long variables
	INTEGER		VAR_ZONE
C
C descriptors for variables
	INTEGER*4	VAR_DESC_ADDRESS
C
C pointers to macro argument string during command decoding
	INTEGER*4	VARGLEN			! length
	INTEGER*4	VARGLOC			! address
C
C inquire string
	CHARACTER*255	INQSTR
C
C string for THEN and ELSE commands
	CHARACTER*255	TSTCMD
C
	COMMON/VARIABLE/MAXVAR,DVARN,DVARL,VARSAV,VARARG,VARARGR,
     &			VARADR,GOT_VARARG,GOT_VARARGR,
     &			VARTAB_ADDRESS,VAR_DESC_ADDRESS,JMPFLG,
     &	                VAR_ZONE,CHCK_VARTAB,VARGLEN,VARGLOC
C
	COMMON/VARCH/DVAR,INQSTR,TSTCMD
