C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1995-01-27 11:09:52.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
C Common block for workstation information
	INTEGER		WSMAX	! max number of workstations
	PARAMETER	(WSMAX=2)
	REAL	SCRSZX(WSMAX)	! full screen size (device units = m)
	REAL	SCRSZY(WSMAX)
	REAL	SCRNSX(WSMAX)	! used screen size (modified by
	REAL	SCRNSY(WSMAX)	! WORKSTATION VIEWPORT command)
	INTEGER	RASTSX(WSMAX)	! raster sizes (pixels)
	INTEGER	RASTSY(WSMAX)
	REAL	LWIDTH(WSMAX)	! nominal line width
	REAL    WKVSWX(WSMAX)   ! user specified workstation viewport
	REAL    WKVSWY(WSMAX)   !             "
	REAL    WKVNEX(WSMAX)   !
	REAL    WKVNEY(WSMAX)	!
	INTEGER	CONIDS(WSMAX)	! connection identifiers
	INTEGER	WTYPES(WSMAX)	! workstation types
	LOGICAL*1 WKOP(WSMAX)	! open?
	LOGICAL*1 WKAC(WSMAX)	! active?
	LOGICAL*1 WKSUPP(WSMAX)	! suppressed?
	LOGICAL*1 WKACT(WSMAX)	! temporarily (in)active? (segments)
	LOGICAL*1 ACTSAV(WSMAX)	! save for DOWIND,ABAWIN
	LOGICAL*1 USESEG	! use GKS segments?
	LOGICAL*1 UPDATE_SEG	! for toggling segments
	LOGICAL*1 NEW_USESEG	!  "     "        "
	LOGICAL*1 VECSUPP	! don't draw IFF data
	LOGICAL*1 CLEASUPP	! don't clear screen (on non segmented displays)
C
C Now some specifics about the actual workstations
C
C Specifics for WOSPLIB TEK workstation
	REAL	EFSCMP,EFSCPL	! scrub parameters (metres on screen)
	LOGICAL*1 TMOTED,TIMOUT	! timeout control
	LOGICAL*1 CSRTMO	! cursor timeout
C
C Data about digitising table
C
	INTEGER*4 DIGLIN	! line from digitiser
	PARAMETER (DIGLIN=3)
C
	LOGICAL*1 TABINI	! digitising table initialised?
				! .TRUE. if yes
	INTEGER*4 TABSUP	! type of table set up required
				! 0 = None
				! 2 = two  point
				! 4 = four point
				! 6 = OS multiple point set up
	INTEGER*4 TRNTYP	! type of transformation required
				! 2 = orthoganal
				! 3 = 3 point
				! 4 = as in laseraid
				! 1 = projective 4 point
				! defined in TRNTYP.PAR
C
C names of transformations
	CHARACTER*(13)	TR_TYPE(4)
	INTEGER		TR_TYPE_LEN(4)
C
C Some parameters for accessing TABSUP
	INTEGER	  TABSUP_2PT
	INTEGER   TABSUP_4PT
	INTEGER   TABSUP_OS
	INTEGER	  TABSUP_EDGE
C
	PARAMETER (TABSUP_2PT   =  1,
     &	           TABSUP_4PT   =  2,
     &             TABSUP_OS    =  3,
     &	           TABSUP_EDGE  =  4)
C
C names of setups
	CHARACTER*(14)	TS_TYPE(4)
	INTEGER		TS_TYPE_LEN(4)
C
	LOGICAL*1 STREAM	! want stream input?
	LOGICAL*1 POSPND	! POSITION command pending?
	REAL	  POSXY(2)	! position itself
	REAL	  TABLE_COUNTS	! size of 1 table count (in table mm)
C
C Data about bitpad
C
	INTEGER*4 BITLIN	! line from bitpad
	PARAMETER (BITLIN=2)
	LOGICAL*1 BITINI	! bitpad initialised?
C
C Data about current outstanding reads from workstation
C
	LOGICAL*1	TTASN	! TTICHN assigned to SYS$INPUT
	INTEGER*2	TTICHN	! channel for QIOs
	INTEGER		TTBLEN
	PARAMETER	(TTBLEN=255)
	BYTE		TTBUF(TTBLEN)	! input buffer
	INTEGER*2	TTIOSB(4)	! IO status block
	LOGICAL*1	TTINIT	! .TRUE. until read occurs in
				! READY state
	LOGICAL*1	WOSPIN	! read terminal using WOSPLIB
	LOGICAL*1	TTREAD	! .TRUE. when terminal read going
	LOGICAL*1	TAREAD	! .TRUE. when table read is going
	LOGICAL*1	TTABORT	! .TRUE. if cannot read from terminal
	INTEGER*4	TTIMBK(2)	! terminator mask quadword
	INTEGER*4	TTIMSK(8)	! terminator mask
C
C prompt when asking for table position
	INTEGER		TABPROMPTMAX
	PARAMETER	(TABPROMPTMAX = 10)
	BYTE		TABPROMPT(TABPROMPTMAX)
	INTEGER		TABPROMPTL
	LOGICAL		TABPROMDECOD
C
C Data about direct table read
C
	INTEGER*4	FUNADR	! function address to use
	INTEGER*4	DTBCHN	! channel for direct table read
	INTEGER		DTBLEN
	PARAMETER	(DTBLEN=40)	! who knows how long strings
					! will be returned by table
	BYTE		DTBBUF(DTBLEN)	! input buffer
	INTEGER*2	DTBOSB(4)
	INTEGER*2	MXTYPC	! max no of chars in typeahead buffer
	LOGICAL*1	DTBREAD ! .TRUE. when direct table read going
	LOGICAL*1	DTRON	! .TRUE. when using direct table read
	LOGICAL*1	USEFUN	! whether to use user defined function
C
C Data about trackerball
C
	LOGICAL*1 	BALINI	! trackerball initialised?
C
C Data about screen menu
C
	LOGICAL*1 	SCRINI	! screen menu up?
	LOGICAL*1 	KRSMENU	! screen menu on KRISS
	LOGICAL*1 	USE_KRSMENU	! to be used next time
C
C Data about function buttons
C
	LOGICAL*1 	BUTINI	! function buttons defined?
C
C Data about KERN DSR
C
	LOGICAL*1 	DSRINI		! KERN DSR in use?
	INTEGER*2	DSROSB(4)	! IO status block
	BYTE		DSRBUF		! input buffer
	LOGICAL*1	DSRREAD		! .TRUE. when DSR read going
	LOGICAL*1 	KRSINI		! KRISS also in use
C
C Data about terminal i/o
C
	INTEGER		TTOCUR	! position of last char written
	INTEGER*2	TTOCHN	! channel for QIO to terminal
	LOGICAL*1	TTOINI	! .TRUE. if done TTO assignment
	LOGICAL*1	TTOPRO	! .TRUE. if next write is a prompt
	LOGICAL*1	TTOBEL	! .TRUE. if next write is a bell
	LOGICAL*1	TTODON	! .TRUE. if write happened since prompt
	LOGICAL*1	TTIDON	! .TRUE. if read happened since prompt
	LOGICAL*1	TTPROM	! .TRUE. if prompt wanted
C
C Data about auxiliary input lines
	INTEGER		AUX_LINES
	PARAMETER	(AUX_LINES = 4) 	! have 4 auxiliary inputs
C
	LOGICAL		AUX_SERVICED(AUX_LINES)	! QIOs been serviced?
	LOGICAL*1	AUX_ACTIVE(AUX_LINES)	! auxiliary lines on?
	INTEGER*2	AUX_CHANNEL(AUX_LINES)	! channel numbers
	LOGICAL*1	AUX_ASN(AUX_LINES)	! assigned?
	CHARACTER*80	AUX_NAME(AUX_LINES)	! logical name of devices
	INTEGER		AUX_NAME_LEN(AUX_LINES)	! and their lengths
	LOGICAL*1	AUX_READ		! are there reads up?
	INTEGER*2	AUXIOSB(4,AUX_LINES)	! IO status blocks
	BYTE		AUXBUF(TTBLEN,AUX_LINES)! input lines
C
C data for following digitising (note: nothing to do with STREAM above)
	LOGICAL*1	FOLLOWING		! when had FOLLOW START
	LOGICAL*1	FOLLOWED		! timer has gone off
	LOGICAL*1	FOLLOW_TIMING		! timer is running
	LOGICAL*1	FOLLOW_START		! START command from
						! SERV_FOLLOW routine
C
C Data for program name
	INTEGER		PNAM_LEN_MAX		! maximum string len
	PARAMETER	(PNAM_LEN_MAX=20)
	CHARACTER*(PNAM_LEN_MAX) PNAM		! name of program
	INTEGER		PNAM_LEN		! length of program name
C
C and version number
	INTEGER		VNAM_LEN_MAX
	PARAMETER	(VNAM_LEN_MAX=30)
	CHARACTER*(VNAM_LEN_MAX) VNAM
	INTEGER		VNAM_LEN
C
	COMMON/WORKS/SCRSZX,SCRSZY,SCRNSX,SCRNSY,		! real
     &		WKVSWX,WKVSWY,WKVNEX,WKVNEY,
     &	        LWIDTH,EFSCMP,EFSCPL,POSXY,TABLE_COUNTS,
     &		RASTSX,RASTSY,					! I*4s
     &		CONIDS,WTYPES,TR_TYPE_LEN,TS_TYPE_LEN,TABSUP,
     &		FUNADR,TTOCUR,AUX_NAME_LEN,PNAM_LEN,TRNTYP,
     &	        TABPROMPTL,VNAM_LEN,
     &		AUX_SERVICED,					! L*4s
     &		MXTYPC,TTICHN,TTOCHN,DTBCHN,AUX_CHANNEL,	! I*2s
     &		TTIOSB,DTBOSB,DSROSB,AUXIOSB,
     &		TTBUF,DTBBUF,DSRBUF,AUXBUF,			! L*1s
     &		TABPROMPT,TABPROMDECOD,WKOP,WKAC,WKSUPP,
     &	        WKACT,ACTSAV,USESEG,
     &		TABINI,STREAM,POSPND,BITINI,TTASN,TTINIT,
     &		TTABORT,
     &		WOSPIN,TTREAD,TAREAD,TTPROM,BALINI,TTOINI,
     &		TTOPRO,TTODON,TMOTED,TIMOUT,CSRTMO,TTOBEL,
     &	        DTBREAD,DTRON,USEFUN,TTIDON,
     &		SCRINI,BUTINI,NEW_USESEG,UPDATE_SEG,
     &		AUX_ACTIVE,AUX_ASN,
     &		AUX_READ,DSRINI,FOLLOWED,FOLLOWING,FOLLOW_TIMING,
     &	        FOLLOW_START,DSRREAD,KRSINI,KRSMENU,USE_KRSMENU,
     &		VECSUPP,CLEASUPP,
     &		TTIMBK,TTIMSK
C Align last two - get rid of *1s
C
	COMMON/WORKSC/AUX_NAME,PNAM,VNAM,TR_TYPE,TS_TYPE
