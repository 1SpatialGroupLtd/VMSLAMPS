C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1994-08-23 18:22:18.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
C
C Common block for details of maps (IFF files)
C
C NB CMN:EFNLUN.PAR must be included also
C
	INTEGER		INITIAL_MAXMAP	! maximium number of maps in INITIAL
					! state
	PARAMETER	(INITIAL_MAXMAP = 9)
C
	INTEGER		MAX_SETUP	! maximium number of maps that can
					! be setup
	PARAMETER	(MAX_SETUP = INITIAL_MAXMAP)
C
	INTEGER		MAXMAP
	PARAMETER	(MAXMAP=100)	! maximum number of maps
C
	INTEGER		MAXLUN		! number of IFFLIB LUNs
	PARAMETER	(MAXLUN=MAXMAP)
C
	INTEGER		CPMAXX,CPMAXY	! maximum number of boxes
	PARAMETER	(CPMAXX=10)	! in x and y direction
	PARAMETER	(CPMAXY=10)	! for OS type setup
C
	INTEGER		CPFULL		! total number of boxes
	PARAMETER	(CPFULL=CPMAXX*CPMAXY)
C
	INTEGER		MAXREP		! maximum number times to
	PARAMETER	(MAXREP=4)	! repeat observations for
					! OS type setup
C
	INTEGER		MAX_EDGE_POINT	! max number of points/line
	INTEGER		MAX_EDGE_SET	! max number of sets
	PARAMETER	(MAX_EDGE_POINT = 10,MAX_EDGE_SET = 5)
C
	INTEGER		MHLENGTH
	PARAMETER	(MHLENGTH=2502)	! length of map header
					! should be maximum of length
					! in LSL$CMNIFF:MHDEF and MHOSGB
C
C when  parameter is altered, update the corresponding one in DEFINE.CMN
C ======================================================================
	INTEGER		OS_MH_FLAGS
	PARAMETER	(OS_MH_FLAGS=8)	! number of flags in OS map
					! descriptor
	INTEGER		OS_MH_FL_BMAP_SIZ ! size of bitmap for flags
					  ! (in bytes)
	PARAMETER	(OS_MH_FL_BMAP_SIZ = ((OS_MH_FLAGS-1)/8+1))
C
	REAL		CRNPTS(4,4,0:MAXMAP-1) ! corner points of maps,
					   ! as read from IFF files
	INTEGER		NOFEAT		! total number of features
	INTEGER		NMAPS		! number we intend to read
	INTEGER		MAPTOP		! number of maps in use
	INTEGER		MAPCUR		! currently selected one
	INTEGER		LUNLST		! top LUN to use for maps
C
C Character stuff  (dynamic descriptors)
	INTEGER		IFFNAM(2,0:MAXMAP-1)	! original IFF filenames
	INTEGER		MAPNAM(2,0:MAXMAP-1)	! working IFF filenames
C
	LOGICAL*1	MAP_EXIST(0:MAXMAP-1)	! map in use?
	INTEGER		MAPLUN(0:MAXMAP-1) ! IFF LUN (0 if none)
	INTEGER		MAXNF(0:MAXMAP-1)  ! maximum NF number
	INTEGER		LPOSFT(0:MAXMAP-1) ! IFF address for writing
C					   ! for use when file re-opened)
C					   ! i.e. preceding EO,EM,EJ
	INTEGER		LPOSF_SAV(0:MAXMAP-1) ! IFF status of LPOSF
C					   ! for use when file re-opened)
C					   ! i.e. preceding EO,EM,EJ
	INTEGER		MAPOVL(0:MAXMAP-1) ! current open layer, or -1
	INTEGER		LPOSNO(0:MAXMAP-1) ! corresponding NO position
	INTEGER		MAPNO(MAXMAP)	! map on LUN n, -1 if none
	INTEGER		SELCNT		! selection counter
	INTEGER		LUNCNT(MAXMAP) ! usage count for LUN
	REAL		RANGE(4,0:MAXMAP-1)	! RA entries
	INTEGER*4	FILEID(7,0:MAXMAP-1) ! file identifications
	INTEGER*4	MAPLCK(0:MAXMAP-1) ! lock id
	LOGICAL*1	MAPRO(0:MAXMAP-1)  ! true if read-only
	LOGICAL*1	MAPINS(0:MAXMAP-1) ! true if edit in-situ
	LOGICAL*1	MAPMAP(0:MAXMAP-1) ! true if memory mapped
	LOGICAL*1	MAPWRK(0:MAXMAP-1) ! valid workspace file?
	LOGICAL*1	MAPSEL(0:MAXMAP-1) ! true if map selected
	LOGICAL*1	MAP_TABLE(0:MAXMAP-1) ! true if map to be set on table
	LOGICAL*1	SAMAPS		! .TRUE. when all maps selected
					! .FALSE. otherwise
	LOGICAL*1	MAPSLCT		! .TRUE. when in MAP select mode
					! .FALSE. otherwise
	INTEGER		MAP_SETUP(MAX_SETUP) ! maps that have been setup
	INTEGER		MAP_SETUP_TOTAL
	LOGICAL		HAD_SETUP_CANCEL
C
C also 8 selection areas for overlays
	LOGICAL*1	O_MAPSEL(0:MAXMAP-1,8) ! true if map selected
	LOGICAL*1	O_SAMAPS(8)	! .TRUE. when all maps selected
					! .FALSE. otherwise
	LOGICAL*1	O_MAPSLCT(8)	! .TRUE. when in MAP select mode
					! .FALSE. otherwise
C
C origin and scale for each map, and current offsets
C
	REAL*8		MAPORG(2,0:MAXMAP-1)
	REAL*8		MAPSCL(0:MAXMAP-1)
C
C data about LITES2 coordinate space
	REAL*8		LITES2PAR(15)		! projection parameters
	REAL*8		LITES2SCL
	REAL*8		LITES2ORG(2)
	REAL		ORGXY(2)
	INTEGER		LITES2SYS,LITES2ZONE,LITES2UNIT
	LOGICAL		USE_ORG
C
	LOGICAL		DO_FLY_TRANS
	LOGICAL		PROJ_TRANS_OUTPUT
	LOGICAL		RANGE_PROBLEM
	REAL*8		MAP_PARAMS(15,0:MAXMAP-1)
	INTEGER		RANGE_TRANS_TYPE
	INTEGER		RANGE_SIDE_POINTS
	LOGICAL*1	MAP_RANGE_OK(0:MAXMAP-1)
	INTEGER		MAP_SYS(0:MAXMAP-1)
	INTEGER		MAP_ZONE(0:MAXMAP-1)
	INTEGER		MAP_UNIT(0:MAXMAP-1)
C
	REAL*8		CURR_PARAMS(15)
	REAL*8		CURR_ORG(2)
	INTEGER		CURR_SYS
	INTEGER		CURR_ZONE
	INTEGER		CURR_UNIT
C
C copy of first maps MH
C
	INTEGER*4	MHLEN_FIRST
	INTEGER*4	MHARR_FIRST(MHLENGTH/2)
C
C bitmap for each map, with bits set for each flag to be updated
	BYTE		OS_MH_FL_BMAP(OS_MH_FL_BMAP_SIZ,0:MAXMAP-1)
C
C group bitmap number (1-30) (in frtlib) associated with each MH_FLAG
	INTEGER		OS_MH_GRP(0:OS_MH_FLAGS-1)
C
C list of FC/text categories for each flag
	INTEGER*4	OS_MH_CAT_LIST(0:OS_MH_FLAGS-1)
C
C and associated character
	CHARACTER*1	OS_MH_CHAR(0:OS_MH_FLAGS-1)
C
C flag to say if any operations have been set
	LOGICAL		OS_MH_EDIT
C
C flag to say if translation reading has been initilaised
	LOGICAL		OS_MH_INITIALISED
C
C and one to say if actually had any of maps with new type map headers
	LOGICAL		HAD_NEW_OS_MH
C
C bit map for output revision levels of input files
	INTEGER*4	MAP_ORLEV_LEN		! number of words in bit map
	PARAMETER	(MAP_ORLEV_LEN=MAXMAP/32+1)
C
	INTEGER*4	MAP_ORLEV_B_MAP(MAP_ORLEV_LEN)
C
C data for system variable $EXIT_RANGE
C - set up in TDYIFF, used in VALVAR
	LOGICAL		HAD_EXIT_RANGE
	REAL*8		EXIT_ORGXY(2)
	REAL*8		EXIT_RANGE(4)
C
	COMMON/MAPS/MAPORG,MAPSCL,LITES2ORG,			! R*8
     &	            LITES2PAR,LITES2SCL,
     &	            CURR_PARAMS,CURR_ORG,
     &	            EXIT_ORGXY,EXIT_RANGE,MAP_PARAMS,
     &	            CRNPTS,RANGE,ORGXY,				! R*4
     &	            NOFEAT,NMAPS,MAPTOP,MAPCUR,LUNLST,		! I*4
     &		    IFFNAM,MAPNAM,
     &		    MAPLUN,MAXNF,LPOSFT,LPOSF_SAV,MAPOVL,LPOSNO,MAPNO,
     &		    SELCNT,LUNCNT,FILEID,MAP_SETUP,MAP_SETUP_TOTAL,
     &	            MAPLCK,MAP_ORLEV_B_MAP,OS_MH_GRP,OS_MH_CAT_LIST,
     &	            MHLEN_FIRST,MHARR_FIRST,MAP_SYS,MAP_ZONE,
     &	            MAP_UNIT,
     &	            LITES2SYS,LITES2ZONE,LITES2UNIT,
     &	            CURR_SYS,CURR_ZONE,CURR_UNIT,
     &	            RANGE_TRANS_TYPE,RANGE_SIDE_POINTS,
     &	            HAD_SETUP_CANCEL,				! L*4
     &	            DO_FLY_TRANS,PROJ_TRANS_OUTPUT,
     &	            RANGE_PROBLEM,USE_ORG,
     &	            OS_MH_EDIT,HAD_EXIT_RANGE,
     &	            OS_MH_INITIALISED,HAD_NEW_OS_MH,
     &		    MAPRO,MAPINS,MAPSEL,			! L*1
     &	            SAMAPS,MAPSLCT,MAPWRK,
     &		    O_MAPSEL,O_SAMAPS,O_MAPSLCT,
     &		    MAPMAP,MAP_TABLE,OS_MH_FL_BMAP,
     &		    MAP_RANGE_OK,OS_MH_CHAR,MAP_EXIST
