C
C Routines to provide MENU support on VAXstation II
C
	SUBROUTINE MENU_CREATE(
     &			XBOX,YBOX,WIDTH,HEIGHT,XPOS,YPOS,TITLE,AST)
C
***	MODULE	MENU_CREATE
***	IDENT	04AU93
C
C Copyright Laser Scan Laboratories Ltd., Cambridge, England.
C
C Define a menu
C
	IMPLICIT NONE
C
	INCLUDE	'SYS$LIBRARY:UISUSRDEF'
C
***	COMMON/CMN:UIS_MENU001/
C
C arguments
	INTEGER		XBOX	! number of boxes in X
	INTEGER		YBOX	! number of boxes in Y
	REAL		WIDTH	! width in cm	
	REAL		HEIGHT	! height in cm
	REAL		XPOS	! position in X cm
	REAL		YPOS	! position in Y cm
	CHARACTER*(*)	TITLE	! title for menu
	INTEGER		AST	! routine to call when box probed
C
	EXTERNAL	MENU_MOVE,MENU_EXIT,MENU_BUTTON
C
C functions called
	INTEGER		UIS$CREATE_DISPLAY
	INTEGER		UIS$CREATE_WINDOW
C
C workspace
	INTEGER		PLACEMENT
	PARAMETER	(PLACEMENT=WDPL$M_BOTTOM.OR.WDPL$M_RIGHT)
	INTEGER		ATTR(7)
	REAL		RATTR(7)
	EQUIVALENCE	(ATTR,RATTR)
	DATA		ATTR/
     &		WDPL$C_ABS_POS_X,0,
     &		WDPL$C_ABS_POS_Y,0,
     &		WDPL$C_ATTRIBUTES,WDPL$M_NOKB_ICON,
     &		WDPL$C_END_OF_LIST/
C
C Use supplied routine AST is called as CALL AST(BOXNO) whenever
C a box in the menu is probed. BOXNO is INTEGER.
C
C Create display for menu
	VD_ID = UIS$CREATE_DISPLAY(0.0,0.0,FLOAT(XBOX),FLOAT(YBOX),
     &							WIDTH,HEIGHT)
	CALL UIS$DISABLE_DISPLAY_LIST(VD_ID)
C
C Set up position attributes
	RATTR(2) = XPOS
	RATTR(4) = YPOS
C
C Create window on display
	WD_ID = UIS$CREATE_WINDOW(
     &			VD_ID,'SYS$WORKSTATION',TITLE,,,,,,,ATTR)
C
C Prevent deletion and resizing
	CALL UIS$SET_CLOSE_AST(WD_ID)
	CALL UIS$SET_RESIZE_AST(VD_ID,WD_ID)
C
C Set up attribute block 1 for text annotations
	CALL UIS$SET_FONT(VD_ID,0,1,
     &		'DTABER0003WK00PG0001UZZZZ02A000')
C
C Set up attribute block 2 for box highlighting area fill
	CALL UIS$SET_FONT(VD_ID,0,2,'UIS$FILL_PATTERNS')
	CALL UIS$SET_FILL_PATTERN(VD_ID,2,2,PATT$C_FOREGROUND)
	CALL UIS$SET_WRITING_MODE(VD_ID,2,2,UIS$C_MODE_COMP)
C
C save attributes of menu
	BOXX = XBOX
	BOXY = YBOX
C
C initialise things
	CURBOX = 0		! no highlighted box
	CALL MENU_MOVE		! in case pointer in menu already
C
C set up AST's for pointer movement and buttons
	CALL UIS$SET_POINTER_AST(VD_ID,WD_ID,MENU_MOVE,,,,,,MENU_EXIT)
	CALL MENU_INIT_AST(AST)
C
	RETURN
	END
C
	SUBROUTINE MENU_INIT_AST(AST)
C
***	MODULE	MENU_INIT_AST
***	IDENT	11SE86
C
C Copyright Laser Scan Laboratories Ltd., Cambridge, England.
C
C Initialise screen menu AST
C
	IMPLICIT NONE
C
***	COMMON/CMN:UIS_MENU001/
C
	EXTERNAL	MENU_BUTTON
C
C arguments
	INTEGER		AST	! address of AST
C
	CALL UIS$SET_BUTTON_AST(VD_ID,WD_ID,MENU_BUTTON,%LOC(AST),KEYBUF)
	RETURN
	END
C
C
	SUBROUTINE MENU_ANNOTATE(BOX,TEXT)
C
***	MODULE	MENU_ANNOTATE
***	IDENT	11SE86
C
C Copyright Laser Scan Laboratories Ltd., Cambridge, England.
C
C Annotate a menu box
C
	IMPLICIT NONE
C
***	COMMON/CMN:UIS_MENU001/
C
C arguments
	INTEGER		BOX	! box to annotate
	CHARACTER*(*)	TEXT	! the text
C
C workspace
	INTEGER	XB,YB
	REAL	X,Y
C
	YB = (BOX-1)/BOXX
	XB = BOX-YB*BOXX-1
C
	IF (CURBOX.NE.0) CALL MENU_HIGHLIGHT
	X = XB+0.1
	Y = BOXY-YB-0.2
	CALL UIS$TEXT(VD_ID,1,TEXT,X,Y)
	IF (CURBOX.NE.0) CALL MENU_HIGHLIGHT
	RETURN
	END
C
C
	SUBROUTINE MENU_DELETE
C
***	MODULE	MENU_DELETE
***	IDENT	11SE86
C
C Copyright Laser Scan Laboratories Ltd., Cambridge, England.
C
C Delete a menu
C
	IMPLICIT NONE
C
***	COMMON/CMN:UIS_MENU001/
C
	CALL UIS$DELETE_DISPLAY(VD_ID)
	RETURN
	END
C
	SUBROUTINE MENU_MOVE
C
***	MODULE	MENU_MOVE
***	IDENT	11SE86
C
C Copyright Laser Scan Laboratories Ltd., Cambridge, England.
C
C AST routine called when pointer moves within menu
C
	IMPLICIT NONE
C
***	COMMON/CMN:UIS_MENU001/
C
C function called
	LOGICAL	UIS$GET_POINTER_POSITION
	INTEGER	MENU_BOX
C
C workspace
	REAL	X,Y
	INTEGER	BOX
C
	IF (UIS$GET_POINTER_POSITION(VD_ID,WD_ID,X,Y)) THEN
	   BOX = MENU_BOX(X,Y)
	   IF (BOX.NE.CURBOX) THEN
	      IF (CURBOX.NE.0) CALL MENU_HIGHLIGHT
	      CURBOX = BOX
	      CALL MENU_HIGHLIGHT
	   ENDIF
	ENDIF
	RETURN
	END
C
	SUBROUTINE MENU_EXIT
C
***	MODULE	MENU_EXIT
***	IDENT	11SE86
C
C Copyright Laser Scan Laboratories Ltd., Cambridge, England.
C
C AST routine called when pointer exits from menu
C
	IMPLICIT NONE
C
***	COMMON/CMN:UIS_MENU001/
C
	IF (CURBOX.NE.0) CALL MENU_HIGHLIGHT
	CURBOX = 0
C
	RETURN
	END
C
	SUBROUTINE MENU_BUTTON(AST)
C
***	MODULE	MENU_BUTTON
***	IDENT	11SE86
C
C Copyright Laser Scan Laboratories Ltd., Cambridge, England.
C
C AST routine called when button pressed in menu
C
	IMPLICIT NONE
C
***	COMMON/CMN:UIS_MENU001/
C
C Argument is used supplied AST routine
C
C Only call if button 1 depressed
	IF (KEYBUF.LT.0.AND.((KEYBUF.AND.3).EQ.0).AND.
     &			CURBOX.NE.0) CALL AST(CURBOX)
C
	RETURN
	END
C
	INTEGER FUNCTION MENU_BOX(X,Y)
C
***	MODULE	MENU_BOX
***	IDENT	11SE86
C
C Copyright Laser Scan Laboratories Ltd., Cambridge, England.
C
C Calculate menu box
C
	IMPLICIT NONE
C
***	COMMON/CMN:UIS_MENU001/
C
C Arguments
	REAL	X,Y
C
C Workspace
	INTEGER	XB,YB
C
	XB = X
	IF (XB.EQ.BOXX) XB = XB-1
	YB = Y
	IF (YB.EQ.BOXY) YB = YB-1
C
	MENU_BOX = (BOXY-YB-1)*BOXX + XB + 1
C
	RETURN
	END
C
	SUBROUTINE MENU_HIGHLIGHT
C
***	MODULE	MENU_HIGHLIGHT
***	IDENT	11SE86
C
C Copyright Laser Scan Laboratories Ltd., Cambridge, England.
C
C Highlight current menu box
C
	IMPLICIT NONE
C
***	COMMON/CMN:UIS_MENU001/
C
C Workspace
	REAL	X(4),Y(4)
	INTEGER	XB,YB
C
	YB = (CURBOX-1)/BOXX
	XB = CURBOX-YB*BOXX-1
C
	X(1) = XB
	Y(1) = BOXY-YB
	X(2) = X(1)+1.0
	Y(2) = Y(1)
	X(3) = X(2)
	Y(3) = Y(2)-1.0
	X(4) = X(1)
	Y(4) = Y(3)
C
	CALL UIS$PLOT_ARRAY(VD_ID,2,4,X,Y)
C
	RETURN
	END
