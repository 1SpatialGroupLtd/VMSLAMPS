C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1993-08-04 14:30:54.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
C
C Routines for dealing with VAXstation function button box
C
	SUBROUTINE FBUT_AST(BUTTON)
C
***	IDENT	04AU93
***	MODULE	FBUT_AST
C
C	Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C	Created					RWR	14-Apr-1987
C
C Vaxstation function button AST routine
C
	IMPLICIT NONE
C
***	COMMON/CMN:UIS_MOUSE/
***	COMMON/CMN:VAREFN/
C
C argument
	INTEGER*4	BUTTON		! button number
C
	IF (FBUT_NO.EQ.0) THEN		! last one has been read
	   FBUT_NO = BUTTON + 1
	   CALL SYS$SETEF(%VAL(BUTFLG))	! set event flag
	ENDIF
C
	RETURN
	END
C
	INTEGER FUNCTION GET_FBUT
C
***	IDENT	14JN85
***	MODULE	GET_FBUT
C
C	Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C	Created					RWR	14-Apr-1987
C
C Returns non-zero button number if one has been pressed
C
	IMPLICIT NONE
C
***	COMMON/CMN:UIS_MOUSE/
***	COMMON/CMN:VAREFN/
C
	GET_FBUT = FBUT_NO			! button number
	IF (FBUT_NO.NE.0) THEN			! one was pressed
	   FBUT_NO = 0				! clear it
	   CALL SYS$CLREF(%VAL(BUTFLG))		! clear event flag
	ENDIF
C
	RETURN
	END
C
	LOGICAL FUNCTION DEFINE_BUTS(IER)
C
***	IDENT	19DE89
***	MODULE	DEFINE_BUTS
C
C	Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C	Created					RWR	27-Jan-1987
C
C defines the GPX function buttons
C Returns .TRUE. if all is well.
C
	IMPLICIT NONE
C
C argument
	INTEGER		IER		! Return code
C
***	PARAMETER/CMN:MACMEN/
C
***	COMMON/CMN:MENUS/
***	COMMON/CMN:UIS_MOUSE/
C
	EXTERNAL	FBUT_AST
C
C functions used
	INTEGER		B_BOX_SET_AST
C
	INTEGER		I
	INTEGER		MASK
C
	DEFINE_BUTS = .FALSE.			! assume failure
C
C now set up the buttons
	IER = B_BOX_SET_AST(FBUT_AST)
	IF (.NOT.IER) GOTO 9999
C
C initialise common block, and clear event flag
	FBUT_NO = 1
	CALL GET_FBUT
C
C see if there is a puck set up on device 5, and if so light up
C functioning buttons
	DO 10, I = 1,PUKTOP
	   IF (PUKDEV(I).EQ.5) THEN
	      CALL LIB$INSV(-1,0,PUKBUT(I),MASK)
	      CALL B_BOX_WRITE(MASK)
	      GOTO 20
	   ENDIF	      
   10	CONTINUE
C
   20	DEFINE_BUTS = .TRUE.		! all OK
C
9999	CONTINUE
	RETURN
	END
C
C
	LOGICAL FUNCTION DELETE_BUTS(IER)
C
***	MODULE	DELETE_BUTS
***	IDENT	11SE86
C
C Copyright Laser Scan Laboratories Ltd., Cambridge, England.
C
C Delete function  buttons
C
C Returns .TRUE. if all is well.
C
	IMPLICIT NONE
C
C argument
	INTEGER		IER		! Return code
C
C functions used
	INTEGER		B_BOX_SET_AST
C
	DELETE_BUTS = .FALSE.			! assume failure
C
C extinguish all the buttons
C
	CALL B_BOX_WRITE(0)
C
C now cancel the buttons
	IER = B_BOX_SET_AST(0)
	IF (IER) DELETE_BUTS = .TRUE.
C
	RETURN
	END
