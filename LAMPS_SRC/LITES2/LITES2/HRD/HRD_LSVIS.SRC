	SUBROUTINE LSVIS(PACK,IVIS)
C
***	MODULE	LSVIS
***	IDENT	03MY85
C
C Copyright Laser Scan Laboratories Ltd., Cambridge, England.
C
C LITES2 GKS level routine
C Set visibility of segment
C
C Expect to be called:
C (a) to set the currently open segment invisible (before putting
C     any primitives in it) when constructing a limbo item, or
C (b) to set a non-open segment invisible (deleting),
C     or visible (recovering).
C
C Version for single workstation (LDLIB type)
C
	IMPLICIT NONE
C
***	PARAMETER/CMN:GKSPAR/
***	PARAMETER/CMN:PACK/
C
***	COMMON/CMN:DRAWIN/
***	COMMON/CMN:SEGMNT/
***	COMMON/CMN:WORKS/
C
C arguments
	INTEGER*4	PACK(PAKLEN)
	INTEGER		IVIS
C
C do nothing if no displays
	IF (NODISP) GOTO 999
C
C for true GKS environment, would be just...
CCCCC	CALL GSVIS(PACK(PAKSEG),IVIS)
C
C but instead, we have
C
C are we setting the visibility of the currently open segment?
C In fact just test that a segment is open - we never set the visibility
C of one segment while another is open.
	IF (SEGCUR.NE.0) THEN	! yes
	   IF (IVIS.EQ.GVISI) GOTO 999		! visible - do nothing
C
C mark current segment invisible
	   SEGVIS = .FALSE.
C
C set display scrubbing
	   IF (WKAC(1)) THEN
	      CALL DISMOD(0)	! turn off refresh to make SCRUB work
	      CALL SCRUB(EFSCMP,EFSCPL)
	   ENDIF
C
	ELSE
C
C setting visibility of an existing (not open) segment
	   IF (IVIS.EQ.GVISI) THEN		! visible
C
C just re-draw normally
	      CALL DRAFTR(PACK)
C
	   ELSE					! invisible
C
C set display scrubbing
	      IF (WKAC(1)) THEN
	         CALL DISMOD(0)	! turn off refresh to make scrub work
	         CALL SCRUB(EFSCMP,EFSCPL)
	      ENDIF
C
	      OVCOL = 0			! set overriding colour
	      CALL DRAFTR(PACK)		! redraw
	      OVCOL = -1		! unset overriding colour
C
C set display not scrubbing
	      IF (WKAC(1)) CALL SCRUB(0.0,0.0)
	   ENDIF
	ENDIF
C
999	RETURN
	END
