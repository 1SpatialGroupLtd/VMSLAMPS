C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1986-01-06 13:51:54.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE RFBAND(WKID)
C
***	IDENT	06JA86
***	MODULE	RFBAND
C
C	Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C	Created					CCB	10-April-1985
C
C	To refresh rubber band lines
C	WINDOW state treated as a special case - draw a box
C Version for single workstation (LDLIB type)
C
	IMPLICIT NONE
C
***	PARAMETER/CMN:STAPAR/
C
***     COMMON/CMN:MASTER/
***     COMMON/CMN:RFCTRL/
***	COMMON/CMN:STATE/
C
C Arguments
	INTEGER		WKID		! workstation identifier
C
C Local Variables
	REAL		X(3),Y(3)	! temporary coords
C
C transform coordinates
	IF (RUBLIN(1)) THEN
	   CALL GKSW2D(1,RUBARR(1,1),RUBARR(2,1),X(1),Y(1))
	   CALL MOVTO(X(1),Y(1))
	   IF (SINDEX.EQ.STATE_WINDOW) THEN
	      CALL GKSW2D(1,CSXY(1),CSXY(2),X(2),Y(2))
	      IF (X(2).GT.X(1).AND.Y(2).GT.Y(1)) THEN
	         CALL LINTO(X(1),Y(2))
	         CALL LINTOC
	         CALL LINTO(X(2),Y(1))
	         CALL LINTO(X(1),Y(1))
	      ELSE
	         CALL LINTOC
	      ENDIF
	   ELSE
	      CALL LINTOC
	   ENDIF
	ELSE
	   CALL MOVTOC
	ENDIF
	IF (RUBLIN(2)) THEN
	   CALL GKSW2D(1,RUBARR(1,2),RUBARR(2,2),X(3),Y(3))
	   CALL LINTO(X(3),Y(3))
	ENDIF
C
	RETURN
	END
