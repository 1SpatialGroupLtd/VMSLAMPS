C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1989-12-13 11:18:40.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL FUNCTION LSCR(INDEX,R,G,B)
C
***	MODULE	LSCR
***	IDENT	13DE89
C
C Copyright Laser Scan Laboratories Ltd., Cambridge, England.
C
C LITES2 GKS level routine
C Set colour representation
C
	IMPLICIT NONE
C
***	COMMON/CMN:WORKS/
C
C arguments
	INTEGER		INDEX		! colour index
	REAL		R,G,B		! red, green, blue
C
C workspace
	INTEGER		I
	INTEGER*4	COL
	BYTE		COLB(4)
	EQUIVALENCE	(COL,COLB)
	INTEGER*4	C
	BYTE		CB
	EQUIVALENCE	(C,CB)
C
	LSCR = .TRUE.			! assume failed
C
	IF (.NOT.WKOP(2)) GOTO 999	! no ARGS
C
	IF (INDEX.LT.-2.OR.INDEX.GT.15) GOTO 999
	IF (R.LT.0.0.OR.R.GT.1.0) GOTO 999
	IF (G.LT.0.0.OR.G.GT.1.0) GOTO 999
	IF (B.LT.0.0.OR.B.GT.1.0) GOTO 999
C
C load byte array with colours (0-255)
	C = R*255.0
	COLB(1) = CB
	C = G*255.0
	COLB(2) = CB
	C = B*255.0
	COLB(3) = CB
C
	IF (INDEX.GE.0) THEN		! ordinary colour
	   COLB(4) = 0			! no blink
	   CALL VSSGSC(INDEX,COL)
	   IF (INDEX.NE.0) THEN		! don't alter background refresh
	      COLB(4) = 1		! blink for 'refresh'
	      CALL VSSGSC(INDEX+16,COL)
	   ENDIF
	ELSEIF (INDEX.EQ.-1) THEN
	   COLB(4) = 1			! set 'transient refresh' colour
	   DO 10 I=32,63
	      CALL VSSGSC(I,COL)
10	   CONTINUE
	ELSEIF (INDEX.EQ.-2) THEN	! set 'background refresh' colour
	   COLB(4) = 1
	   CALL VSSGSC(16,COL)
	ENDIF
	LSCR = .FALSE.			! success
C
999	RETURN
	END
C
	LOGICAL FUNCTION LSCRS(WKID,N,R,G,B)
C
***	MODULE	LSCRS
***	IDENT	09MR88
C
C Copyright Laser Scan Laboratories Ltd., Cambridge, England.
C
C LITES2 GKS level routine
C Set colour representation for colours 0:N-1
C
	IMPLICIT NONE
C
***	COMMON/CMN:WORKS/
C
C arguments
	INTEGER		WKID		! workstation identifier
	INTEGER		N		! number of colours
	REAL		R(*),G(*),B(*)	! red, green, blue
C
C workspace
	INTEGER		NN
C
	LSCRS = .FALSE.			! assume success
C
	DO 20 NN=1,N
	   CALL LSCR(NN-1,R(NN),G(NN),B(NN))
20	CONTINUE
	RETURN
	END
C
C
	SUBROUTINE	LQCR(WKID,CI,TYPE,ERRIND,RED,GREEN,BLUE)
C
**	MODULE	LQCR
**	IDENT	13DE89
C
C Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C Created					RWR	13-Dec-1989
C
C LITES2 GKS level routine
C Inquire colour representation
C
	IMPLICIT NONE
C
C Arguments:
	INTEGER	WKID			! workstation-identifier
	INTEGER	CI			! colour index
	INTEGER	TYPE			! type of values (unused)
	INTEGER	ERRIND			! error indicator
	REAL	RED,GREEN,BLUE		! colour values
C
C call GKS routine
	CALL GQCR(WKID,CI,TYPE,ERRIND,RED,GREEN,BLUE)
C
	RETURN
	END
