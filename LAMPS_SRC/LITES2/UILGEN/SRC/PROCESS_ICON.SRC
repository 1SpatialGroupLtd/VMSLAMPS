C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1989-12-21 14:58:30.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	INTEGER*4 FUNCTION PROCESS_ICON(ICON_NAME,HEIGHT)
C
***	MODULE	PROCESS_ICON
***	IDENT	21DE89
C
C	Copyright (C), Laser-Scan Ltd., Cambridge, England
C
C	Created					CCB  18-Nov-1989
C
C ......................................................................
C
C Process a .ICON file, producing UIL code.
C
	IMPLICIT NONE
C
C Parameters:
	INCLUDE		'LSL$CMNLSL:LSLLIBMSG.PAR'
	INCLUDE		'LSL$CMNUILGEN:UILGENMSG.PAR'
C
C Arguments:
	CHARACTER*(*)	ICON_NAME	! input, name for icon
	INTEGER		HEIGHT		! output, height of icon
C
C functions
	LOGICAL	RDCH,RDCHS,RDLONG,RDLHEX
	INTEGER	LIB$EXTZV
C
C W/s:
	BYTE	CH
	INTEGER	WIDTH
	INTEGER	B
	INTEGER	DONE
	INTEGER	N_PER_LINE
	INTEGER	I,J,K
C
	PROCESS_ICON = LSL__NORMAL
C
	CALL FLWSTR('value')
	CALL FLWRTF('   %S : icon (',ICON_NAME)
	CALL FLRLIN
	CALL FLRLIN
	CALL BSLN
	CALL RDCH(CH)
	CALL RDLONG(WIDTH)
	CALL RDLONG(HEIGHT)
	CALL FLRLIN
	CALL BSLN
C
	N_PER_LINE = (WIDTH+7)/8
C
	DO 200 J=1,HEIGHT
	   DONE = 0
	   CALL EXPAND('   "')
	   DO 100 I=1,N_PER_LINE
50	      IF (RDCHS(CH)) THEN
	         CALL FLRLIN
	         CALL BSLN
	         GOTO 50
	      ENDIF
	      CALL BSCH
	      CALL RDLHEX(B)
	      DO 70 K=0,7
	         IF (LIB$EXTZV(K,1,B)) THEN
	            CALL APPEND('*')
	         ELSE
	            CALL APPEND(' ')
	         ENDIF
	         DONE = DONE+1
	         IF (DONE.GE.WIDTH) GOTO 100
70	      CONTINUE
100	   CONTINUE
	   CALL APPEND('"')
	   IF (J.LT.HEIGHT) CALL APPEND(',')
	   CALL FLWSTR
200	CONTINUE
	CALL FLWSTR('   );')
	GOTO 10000
C
!!!!!!!!!9999	PROCESS_CDL = UILGEN__ABORT
C
10000	RETURN
	END
