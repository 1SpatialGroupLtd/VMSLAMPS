C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1990-05-04 12:31:58.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE WRITE_CALLBACK(REASON,PROC)
C
***	MODULE	WRITE_CALLBACK
***	IDENT	04MY90
C
C	Copyright (C), Laser-Scan Laboratories Ltd., Cambridge, England
C
C	Created						CCB 19-Nov-1989
C
C .....................................................................
C
C Routine write callback list for an object
C
	IMPLICIT NONE
C
	INCLUDE		'LSL$CMNLSL:EXPC.CMN'
	INCLUDE		'LSL$CMNUILGEN:UILGEN.CMN'
C
C functions
	INTEGER		SIGCHS	! LSLLIB - significant characters
	INTEGER		EXPAND
	INTEGER		APPEND
C
C arguments
	CHARACTER*(*)	REASON	! callback reason
	CHARACTER*(*)	PROC	! callback procedure
C
C workspace
	CHARACTER*256	L_DO	! local copy of DO_STR
	INTEGER		L_LEN
	INTEGER	SAVIND
	INTEGER	RET,IND
	CHARACTER*1 CH,DELIM
	LOGICAL	INSTR
	INTEGER	I,I1,L
	CHARACTER*(25)	ROUTINES(10) /
     &	   'send %;','exit;','send %;display %;reset %;',
     &	   'send %;display %;','display %;reset %;',
     &	   'send %;toggle off %;','send %;toggle on %;',
     &	   'set %;exit;','send %;exit;','display %;'/
	LOGICAL	DO,LIST
C
	LIST = .FALSE.
	GOTO 1
C	
	ENTRY	WRITE_LIST
	LIST = .TRUE.
C
1	DO = .FALSE.
	SAVIND = INDENT
	IF (LIST) THEN
	   L = EXPLEN		! stuff in EXPBUF already
	ELSE
	   L = EXPAND('%S = procedure %S("',REASON,PROC)
	ENDIF
C
	IF (.NOT.HAD_DO) GOTO 100
C
	DO 10 I=1,DO_LEN
	   IF (L.GT.70-2*INDENT) THEN
	      CALL APPEND('" &')
C
C don't ADD EXPDSC directly because EXPAND will see any % in the string
	      CALL ADD('%S',EXPDSC)
	      L = EXPAND('"')
	      INDENT = 1
	   ENDIF
	   CH = DO_STR(I:I)
	   IF (CH.EQ.'"'.OR.CH.EQ.''''.OR.CH.EQ.'\') CALL APPEND('\')
	   IF (CH.EQ.'%') CALL APPEND('%%')	! adds single %
	   L = APPEND(CH)
10	CONTINUE
	GOTO 800
C
	ENTRY	WRITE_DO
	IF (HAD_DO) RETURN
	DO = .TRUE.
C
C transform RETCOD into an index into list of routine names
100	RET = RETCOD				! code 1 is correct
	IF (RET.EQ.0) RET = 1			! 0 is equivalent
	IF (RET.GE.991) RET = RET-989		! amend 991-999
C
C make copy of DO_STR
	L_LEN = DO_LEN
	L_DO(:L_LEN) = DO_STR(:DO_LEN)
C
	DELIM = CHAR(0)
	IND = 1
	IF (RET.EQ.3.OR.RET.EQ.4) THEN
	   DELIM = L_DO(1:1)
	   IND = 2
	ENDIF
C
C modify the copy for certain codes
	IF (RET.EQ.3) THEN
	   I1 = INDEX(L_DO(2:L_LEN),DELIM)
	   IF (L_DO(L_LEN:L_LEN).NE.DELIM) THEN
	      L_LEN = L_LEN+1
	      L_DO(L_LEN:L_LEN) = DELIM
	   ENDIF
	   I = L_LEN-I1-1
	   L_DO(L_LEN+1:L_LEN+I) = L_DO(I1+2:L_LEN)
	   L_LEN = L_LEN+I
	ELSEIF (RET.EQ.5) THEN
	   L_LEN = L_LEN+1
	   L_DO(L_LEN:L_LEN) = DELIM
	   L_DO(L_LEN+1:2*L_LEN) = L_DO(:L_LEN)
	   L_LEN = 2*L_LEN
	ELSEIF (RET.EQ.6.OR.RET.EQ.7) THEN
	   L_LEN = L_LEN+1
	   L_DO(L_LEN:L_LEN) = DELIM
	   L_DO(L_LEN+1:L_LEN+NAMLEN) = NAME(:NAMLEN)
	   L_LEN = L_LEN+NAMLEN
	ENDIF
C
	INSTR = .FALSE.
C
	IF (DO) GOTO 1000
C
	DO 20 I=1,SIGCHS(ROUTINES(RET))
15	   IF (L.GT.70-2*INDENT) THEN
	      CALL APPEND('" &')
	      CALL ADD('%S',EXPDSC)
	      L = EXPAND('"')
	      INDENT = 1
	   ENDIF
	   IF (.NOT.INSTR) THEN
	      CH = ROUTINES(RET)(I:I)
	      IF (CH.EQ.'%') THEN
	         INSTR = .TRUE.
	         GOTO 15
	      ENDIF
	   ELSE
	      IF (IND.GT.L_LEN) THEN
	         INSTR = .FALSE.
	         GOTO 20
	      ENDIF
	      CH = L_DO(IND:IND)
	      IND = IND+1
	      IF (CH.EQ.DELIM) THEN
	         INSTR = .FALSE.
	         GOTO 20
	      ENDIF
	      IF (CH.EQ.';') CALL APPEND(';')
	   ENDIF
	   IF (CH.EQ.'"'.OR.CH.EQ.''''.OR.CH.EQ.'\') CALL APPEND('\')
	   IF (CH.EQ.'%') CALL APPEND('%%')
	   L = APPEND(CH)
	   IF (INSTR) GOTO 15
20	CONTINUE
C
800	IF (LIST) THEN
	   CALL APPEND('";')
	ELSE
	   CALL APPEND('");')
	ENDIF
	CALL ADD('%S',EXPDSC)
	INDENT = SAVIND
	RETURN
C
1000	CALL EXPAND('do "')
	DO 1020 I=1,SIGCHS(ROUTINES(RET))
1015	   IF (.NOT.INSTR) THEN
	      CH = ROUTINES(RET)(I:I)
	      IF (CH.EQ.'%') THEN
	         INSTR = .TRUE.
	         GOTO 1015
	      ENDIF
	   ELSE
	      IF (IND.GT.L_LEN) THEN
	         INSTR = .FALSE.
	         GOTO 1020
	      ENDIF
	      CH = L_DO(IND:IND)
	      IND = IND+1
	      IF (CH.EQ.DELIM) THEN
	         INSTR = .FALSE.
	         GOTO 1020
	      ENDIF
	      IF (CH.EQ.';') CALL APPEND(';')
	      IF (CH.EQ.'?') CALL APPEND('?')
	      IF (CH.EQ.'"') CALL APPEND('"')
	   ENDIF
	   IF (CH.EQ.'%') CALL APPEND('%%')
	   CALL APPEND(CH)
	   IF (INSTR) GOTO 1015
1020	CONTINUE
	CALL FLWAPP('"')
	RETURN
C	
	END
C
C
C
	SUBROUTINE WRITE_CREATE(GROUP,ON,MENU,TYPE)
C
***	MODULE	WRITE_CREATE
***	IDENT	01DE89
C
C	Copyright (C), Laser-Scan Laboratories Ltd., Cambridge, England
C
C	Created						CCB 19-Nov-1989
C
C .....................................................................
C
C Routine to write a create callback for an object
C
	IMPLICIT NONE
C
C arguments
	INTEGER		GROUP	! choice group
	LOGICAL		ON	! choice button on
	CHARACTER*(*)	MENU	! parent menu of button
	CHARACTER*(*)	TYPE	! type of create callback
C
C workspace
	INTEGER	GRP
C
	GRP = GROUP
	IF (ON) GRP = -GRP
	CALL ADD('choice_proc("%S %N \"%S\"");',TYPE,GRP,MENU)
C
	RETURN
	END
C
C
C
	SUBROUTINE WRITE_NAME(TYPE)
C
***	MODULE	WRITE_NAME
***	IDENT	01DE89
C
C	Copyright (C), Laser-Scan Laboratories Ltd., Cambridge, England
C
C	Created						CCB 19-Nov-1989
C
C .....................................................................
C
C Routine to write a name create callback for a widget
C
	IMPLICIT NONE
C
	INCLUDE		'LSL$CMNUILGEN:UILGEN.CMN'
C
C argument
	CHARACTER*(*)	TYPE		! type of widget
C
	IF (WLEN.GT.0) THEN
	   CALL ADD('create_proc("%S \"%S\"");',TYPE,WNAME(:WLEN))
	   WLEN = 0
	ELSE
	   CALL ADD('create_proc("%S");',TYPE)
	ENDIF
C
	RETURN
	END
C
	SUBROUTINE WRITE_COLOR(BACK,FORE)
C
***	MODULE	WRITE_COLOR
***	IDENT	01DE89
C
C	Copyright (C), Laser-Scan Laboratories Ltd., Cambridge, England
C
C	Created						CCB 19-Nov-1989
C
C .....................................................................
C
C Routine to write color arguments for object
C
	IMPLICIT NONE
C
	INCLUDE		'LSL$CMNUILGEN:UILGEN.CMN'
C
C arguments
	LOGICAL	BACK,FORE
C
	IF (BACK.AND.CLEN(1).GT.0) CALL ADD(
     &		'XmNbackground = color_%S;',COL(1)(:CLEN(1)))
	IF (FORE.AND.CLEN(2).GT.0) CALL ADD(
     &		'XmNforeground = color_%S;',COL(2)(:CLEN(2)))
	RETURN
	END
