		Notes on SSPI interface for VIAK LITES2
		---------------------------------------

Introduction
------------
The original stereoplotter interface to LITES2 was written for a Kern DSR
analytical device. A new version of the Stereoplotter interface routines has
now been written for VIAK, to handle input from an analogue device (Zeiss).
This is connected to the VAXstation host via an RS232 serial line from a PC
which provides the intelligence to handle tasks such as the transformation from
model into world coordinate space. The interface is referred to as  SSPI for
"Serial StereoPlotter Input". 

Format
------
The interface routines are written to expect one serial line record for each
event on the stereoplotter, corresponding to a button press. Each record should
contain a coordinate triplet followed by a button number (X,Y,Z,B). The
coordinates are read by a Fortran internal file read, using the format
(3D20.0,I2). This allows up to 20 digits of X,Y,Z and 2 digits of button number
in the range 0 to 99. Fields should be separated by commas, unless they are of
the correct fixed length. A typical record might then be: 

123456.789,987654.123,123.5,1

Each record should be terminated by a valid VMS record terminator, usually
the carriage return character.

Coordinate Systems
------------------
LITES2 usually uses an X,Y coordinate space which is relative to a local
origin, usually the bottom left corner of the map being edited. This is the
coordinate system displayed by the SHOW POSITION command, and is the actual
coordinates stored for each feature in the IFF file. However, LITES2 also knows
about a world coordinate system, which relates all the various maps of a series
to one another and to the ground. This is referred to as the LITES2 absolute
coordinate system, and is related to the local system by addition of an origin
offset, held in the MD (Map Descriptor) entry of the IFF file(s) being edited.
The values of the offset can be displayed by the LITES2 commands:

SHOW VARIABLE $MDOFFSET1
SHOW VARIABLE $MDOFFSET2

The coordinates returned by the stereoplotter are assumed by LITES2 to be in
the LITES2 absolute coordinate space, not the local space. The origin offset
from the MD is subtracted from the X,Y coordinates before storing them in the
IFF file. No offset is subtracted from the Z coordinate.


Files
-----
The interface routines are built as a shared image which is activated at run
time by LITES2 if the DSR option is enabled. The image filename is
LITES2SSPISHR.EXE. The sources are in file DSR_SSPI.F, with an include file as
DSR_SSPI_CMN.CMN, a test program as TEST_SSPI.F, and a command file SSPI.COM to
build them all. Sources will not usually be provided to customers. This
document is SSPI.NOTES.

The test program TEST_SSPI.EXE can be useful while debugging a serial line
connection. When run, it makes the same series of routine calls as LITES2,
and reports any errors. It also reports valid records and their contents.

Entry Points
------------
The calling sequence expected from LITES2 by the routines is:

	DSR_INIT	called once to initialise
	DSR_START	called to set up asynchronous read
	DSR_TRN		called on read event to return button number
	DSR_READ	called on read event to return X,Y,Z
	(loop back to DSR_START)
	DSR_MOVE	is supplied as a No-Op in this version

Environment
-----------
For the interface to function, the following two logical names must be set up,
usually in the LITES2 package initialisation file LSL$COM:LITES2INI.COM.

LSL$LITES2_SSPI			must point to the serial device eg LTA9281:
LSL$LITES2_KERN_ROUTINES	must point to LITES2SSPISHR.EXE

Also within a LITES2 initialisation file, the following commands
should be given:

ENABLE GRAPHICS			! needed for any interaction
ENABLE DSR			! turn on DSR functions
ENABLE Z			! use 3D coordinates
PUCK 6 3 DSRPUCK		! expect 3 buttons on DSR device (6)
MACRO DSRPUCK1#ENDMACRO		! define button 0 as null (just position cursor)
MACRO DSRPUCK2#START#ENDMACRO	! define button 1 as Start
MACRO DSRPUCK3#END#ENDMACRO	! define button 2 as End

Actions
-------
If the above commands have been executed correctly, then once the IFF file has
been loaded, any input events arriving down the serial line will be decoded
by LITES2 as combined positioning and command events. The position information
is interpreted as described under Coordinate Systems above, and is converted
into an appropriate LITES2 POSITION command.

The button number maps on to an invocation of a macro named DSRPUCKn where n is
the button number plus 1. Hence button 0 invokes DSRPUCK1, etc. To see the
events happening, eg for debugging, give the LITES2 command ENABLE ECHO.

Known Restrictions
------------------
1) If the coordinates returned to LITES2 by the interface are valid in
structure but lie outside the current LITES2 X,Y range, then the position
is ignored, and no error message is produced. 

2) If the initialisation of the serial line fails, a valid error message is
produced, but this is then followed by a spurious one about a missing  file
ABSOR.DAT, which can be ignored.

3) The current version of the interface will work with either LITES2 V3.2 or
LITES2 V3.1, but not earlier versions.

4) It is only usable in conjunction with the VAXstation graphics (UIS) version
of LITES2. It will in the future be  available on the DECwindows (Motif)
version of LITES2.

Paul Hardy, LSL,
18/5/90
