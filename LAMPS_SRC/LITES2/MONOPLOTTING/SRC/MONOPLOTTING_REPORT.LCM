! MONOPLOTTING_REPORT.LCM
!
! Created 					RWR	27-Sep-1994
! Layout standardised 				PGH	17-Oct-1994
!
! This implements an example report on warping for OSGB Monoplotting.
!
! Note that this is an example template file, for the user to adapt to fit the 
! local environment. As such, variable names and macro names may need to be 
! changed to avoid conflicts.
!
!
! first a macro to help us define macros by cancelling any previous ones
!
%ASK STATUS MACRO _WARP_CLEAR
%TEST $ASK_INT 1 .NE. 0
%THEN %CANCEL MACRO _WARP_CLEAR
%MACRO _WARP_CLEAR
   %ASK STATUS '$P1 '$P2
   %TEST $ASK_INT 1 .NE. 0
   %THEN %CANCEL '$P1 '$P2
%ENDMACRO

! cancel any global variables that exist

_WARP_CLEAR VARIABLE _WARP_I
_WARP_CLEAR VARIABLE _WARP_N
_WARP_CLEAR VARIABLE _WARP_R
_WARP_CLEAR VARIABLE _WARP_S
_WARP_CLEAR VARIABLE _WARP_TEMP_STR
_WARP_CLEAR VARIABLE _WARP_WRITE
_WARP_CLEAR VARIABLE _WARP_FILE_NAME
_WARP_CLEAR VARIABLE _WARP_OPTLEAR

! cancel any macros that exist

_WARP_CLEAR MACRO _WARP_SH_COEFFS
_WARP_CLEAR MACRO _WARP_SH_POINTS
_WARP_CLEAR MACRO _WARP_MESSAGE
_WARP_CLEAR MACRO _WARP_GET_NAME
_WARP_CLEAR MACRO _WARP_MAPS
_WARP_CLEAR MACRO _WARP_IMAGES
_WARP_CLEAR MACRO _WARP_HEADER
_WARP_CLEAR MACRO _WARP_WRT_CFFS
_WARP_CLEAR MACRO _WARP_EXT_TRANS
_WARP_CLEAR MACRO _WARP_PROJ_TRANS
_WARP_CLEAR MACRO _WARP_DESC_TRANS

! create global variables

%DECLARE INTEGER    _WARP_I
%DECLARE INTEGER    _WARP_N
%DECLARE INTEGER    _WARP_OPTLEAR
%DECLARE REAL       _WARP_R
%DECLARE CHARACTER  _WARP_S
%DECLARE CHARACTER  _WARP_TEMP_STR
%DECLARE CHARACTER  _WARP_WRITE
%DECLARE CHARACTER  _WARP_FILE_NAME

! Macro to ouput messages to screen and/or file

%MACRO _WARP_MESSAGE
   %MESSAGE '$PLINE'
   %TEST _WARP_WRITE
   %THEN FILE WRITE '$PLINE'
%ENDMACRO

! Macro to show the coefficients

%MACRO _WARP_SH_COEFFS
   _WARP_MESSAGE
   %LET _WARP_I = 1
.LOOP:
   %TEST $P1 .EQ. 1
   %THEN   %LET _WARP_TEMP_STR = '$WARP_COEFFS_MAP '_WARP_I
   %TEST $P1 .EQ. 1
   %ELSE   %LET _WARP_TEMP_STR = '$WARP_COEFFS_IMAGE '_WARP_I
   %LET _WARP_S = A'_WARP_I =    '_WARP_TEMP_STR
   _WARP_MESSAGE '_WARP_S
   %LET _WARP_I = '_WARP_I + 1
   %TEST _WARP_I < 9
   %JTRUE .LOOP
   _WARP_MESSAGE
%ENDMACRO

! Macro to show the points

%MACRO _WARP_SH_POINTS
   _WARP_MESSAGE
   %LET _WARP_N = '$WARP_IMAGE_N
   %TEST _WARP_N .GT. '$WARP_MAP_N
   %THEN %LET _WARP_N = '$WARP_MAP_N
   %TEST _WARP_N .LT. 1
   %THEN _WARP_MESSAGE "No control points defined"
   %TEST _WARP_N .LT. 1
   %ABORT TRUE
   %LET _WARP_I = 1
   _WARP_MESSAGE Control Points
   _WARP_MESSAGE
   %LET _WARP_S = Pt  Map  X               Y
   %LET _WARP_S = '_WARP_S              Image  X              Y
   %LET _WARP_S = '_WARP_S             Residual X             Y
   _WARP_MESSAGE '_WARP_S
   _WARP_MESSAGE
.LOOP:
   %ASK STRING PAD  3 '_WARP_I
   %LET _WARP_S = "'$ASK_CHAR 1"
   %ASK STRING PAD 17 '$WARP_MAP_X '_WARP_I
   %LET _WARP_S = "'_WARP_S '$ASK_CHAR 1"
   %ASK STRING PAD 17 '$WARP_MAP_Y '_WARP_I
   %LET _WARP_S = "'_WARP_S '$ASK_CHAR 1"
   %ASK STRING PAD 17 '$WARP_IMAGE_X '_WARP_I
   %LET _WARP_S = "'_WARP_S '$ASK_CHAR 1"
   %ASK STRING PAD 17 '$WARP_IMAGE_Y '_WARP_I
   %LET _WARP_S = "'_WARP_S '$ASK_CHAR 1"
   %TEST $WARP_FITTED
   %JFALSE .OUTPUT
   %ASK STRING PAD 17 '$WARP_RESIDUAL_X '_WARP_I
   %LET _WARP_S = "'_WARP_S '$ASK_CHAR 1"
   %ASK STRING PAD 17 '$WARP_RESIDUAL_Y '_WARP_I
   %LET _WARP_S = "'_WARP_S '$ASK_CHAR 1"
.OUTPUT:
   _WARP_MESSAGE '_WARP_S
   %LET _WARP_I = '_WARP_I + 1
   %TEST _WARP_I <= '_WARP_N
   %JTRUE .LOOP
   _WARP_MESSAGE
   %TEST $WARP_FITTED
   %ABORT FALSE
   %ASK STRING PAD 70 " "
   %LET _WARP_S = "'$ASK_CHAR 1 rms  "
   %ASK STRING PAD 17 '$WARP_RMS_X
   %LET _WARP_S = "'_WARP_S '$ASK_CHAR 1"
   %LET _WARP_S = "'_WARP_S '$WARP_RMS_Y"
   _WARP_MESSAGE "'_WARP_S"
%ENDMACRO

! Macro to get a filename

%MACRO _WARP_GET_NAME
   %INQUIRE _WARP_FILE_NAME "Enter name of file:   "
%ENDMACRO

! Macro to show open maps

%MACRO _WARP_MAPS
   _WARP_MESSAGE
   %TEST $MAPTOTAL < 1
   %ABORT TRUE
   _WARP_MESSAGE "The following maps were open:"
   _WARP_MESSAGE
   %LET _WARP_I = 1
   %LET _WARP_N = 0
.LOOP:
   %TEST $MAPSTATUS '_WARP_I' .EQ. 0
   %JTRUE .TEST
   %ASK STRING PAD  3 '_WARP_I'
   %LET _WARP_S = "'$ASK_CHAR 1"
   %LET _WARP_S = "'_WARP_S '$MAPNAME '_WARP_I "
   _WARP_MESSAGE '_WARP_S'   
   %LET _WARP_N = '_WARP_N + 1
.TEST:
   %LET _WARP_I = '_WARP_I + 1
   %TEST _WARP_N < '$MAPTOTAL
   %JTRUE .LOOP
   _WARP_MESSAGE
%endmacro

! Macro to show open images

%MACRO _WARP_IMAGES
   _WARP_MESSAGE
   %LET _WARP_N = 0
   %LET _WARP_I = 1
.COUNT_LOOP:
   %TEST $IMAGE_EXIST '_WARP_I'
   %THEN %LET _WARP_N = '_WARP_N + 1
   %LET _WARP_I = '_WARP_I + 1
   %TEST _WARP_I < 9
   %JTRUE .COUNT_LOOP
!
   %TEST _WARP_N .EQ. 0
   %ABORT TRUE
   _WARP_MESSAGE "The following images were open:"
   _WARP_MESSAGE
   %LET _WARP_I = 1
.LOOP:
   %TEST $IMAGE_EXIST '_WARP_I'
   %JFALSE .TEST
   %ASK STRING PAD  3 '_WARP_I'
   %LET _WARP_S = "'$ASK_CHAR 1"
   %LET _WARP_S = "'_WARP_S '$IMAGENAME '_WARP_I "
   _WARP_MESSAGE '_WARP_S'   
.TEST:
   %LET _WARP_I = '_WARP_I + 1
   %TEST _WARP_I <= 8
   %JTRUE .LOOP
   _WARP_MESSAGE
%ENDMACRO

! Macro to show header for report

%MACRO _WARP_HEADER
   %LET _WARP_S = "Report of transformation carried out by '$user' "
   %LET _WARP_S = "'_WARP_S' on '$DATETIME"
   _WARP_MESSAGE '_WARP_S'
   _WARP_MAPS
   _WARP_IMAGES
%ENDM

! Macro to show transformation formulae

%MACRO _WARP_EXT_TRANS
   _WARP_MESSAGE
   _WARP_MESSAGE X = a1 + a2*x + a3*y + a4*xy
   _WARP_MESSAGE Y = a5 + a6*x + a7*y + a8*xy
   _WARP_MESSAGE
%ENDMACRO

! Macro to show transformation formulae

%MACRO _WARP_PROJ_TRANS
   _WARP_MESSAGE
   _WARP_MESSAGE X = (a1*x + a2*y + a3) / (a7*x + a8*y + 1)
   _WARP_MESSAGE Y = (a4*x + a5*y + a6) / (a7*x + a8*y + 1)
   _WARP_MESSAGE
%ENDMACRO

! Macro to describe transformation 

%MACRO _WARP_DESC_TRANS
   _WARP_MESSAGE
   _WARP_MESSAGE Warping with the '$WARP_TRANSFORM' transformation, which uses the formulae:
   %TEST $WARP_TRANSFORM .NE. "PROJECTIVE"
   %THEN _WARP_EXT_TRANS
   %TEST $WARP_TRANSFORM .NE. "PROJECTIVE"
   %ELSE _WARP_PROJ_TRANS
   _WARP_MESSAGE "to transform from one coordinate system to the other"
   _WARP_MESSAGE
%ENDMACRO

! Macro to show coefficients of transformation 

%MACRO _WARP_WRT_CFFS
   _WARP_DESC_TRANS
   _WARP_MESSAGE Coefficients for Transforming from Map to Image:
   _WARP_SH_COEFFS 1
   %TEST $WARP_TRANSFORM .EQ. "PROJECTIVE"
   % OR   $WARP_TRANSFORM .eq. "EXTENDED"
   %THEN %LET _WARP_TEMP_STR = " (approximate only)"
   %ELSE %LET _WARP_TEMP_STR = ""
   %LET _WARP_S = Coefficients for Transforming from Image to Map
   %LET _WARP_S = '_warp_s''_warp_temp_str':
   _WARP_MESSAGE '_warp_s'
   _WARP_SH_COEFFS 2
%ENDMACRO

! Now do the work

%SPAWN SET TERM/WIDTH=132	! need wide screen

%LET _WARP_OPTLEAR = '$OPTLEAR
%DISABLE LEARN
%INQUIRE _WARP_WRITE "Do you want to write the report to file?  "
%TEST _WARP_WRITE
%THEN _WARP_GET_NAME
%TEST _WARP_WRITE
%THEN %FILE CREATE 1 '_WARP_FILE_NAME

_WARP_HEADER
_WARP_SH_POINTS
%TEST $WARP_FITTED
%THEN _WARP_WRT_CFFS
%TEST $WARP_FITTED
%ELSE _WARP_MESSAGE Warping using '$warp_transform Transformation
%ELSE _WARP_MESSAGE

! tidy up

%TEST _WARP_WRITE
%THEN %FILE CLOSE 1

_WARP_CLEAR VARIABLE _WARP_I
_WARP_CLEAR VARIABLE _WARP_N
_WARP_CLEAR VARIABLE _WARP_R
_WARP_CLEAR VARIABLE _WARP_S
_WARP_CLEAR VARIABLE _WARP_TEMP_STR
_WARP_CLEAR VARIABLE _WARP_WRITE
_WARP_CLEAR VARIABLE _WARP_FILE_NAME

_WARP_CLEAR MACRO _WARP_SH_COEFFS
_WARP_CLEAR MACRO _WARP_SH_POINTS
_WARP_CLEAR MACRO _WARP_MESSAGE
_WARP_CLEAR MACRO _WARP_GET_NAME
_WARP_CLEAR MACRO _WARP_MAPS
_WARP_CLEAR MACRO _WARP_IMAGES
_WARP_CLEAR MACRO _WARP_HEADER
_WARP_CLEAR MACRO _WARP_WRT_CFFS
_WARP_CLEAR MACRO _WARP_EXT_TRANS
_WARP_CLEAR MACRO _WARP_PROJ_TRANS
_WARP_CLEAR MACRO _WARP_DESC_TRANS

%CANCEL MACRO _WARP_CLEAR

%TEST _WARP_OPTLEAR
%CANCEL VARIABLE _WARP_OPTLEAR
%THEN ENABLE LEARN

!
! end of MONOPLOTTING_REPORT.LCM
!
