enable continue ! keep going regardlesssetup four	! quick setup for demomessagemessage >> first we read in the mapwait 1messagemessage   *iff litesdemo   iff litesdemomessagemessage >> We select a window by positioning the cursor at themessage >> lower left cornerwait 3message   POS  .3499177E 003  .4747115E 002messagemessage >> give the WINDOW SCREEN commandwait 3messagemessage   *win   winmessagemessage >> move the cursor to the upper right positionwait 4message   POS  .4476139E 003  .1481619E 003messagemessage >> and give the END commandmessagewait 4message   *end   endmessagemessage >> To look at the characteristics of a feature, move the cursormessage >> over it,message   POS  .4354442E 003  .1294894E 003wait 3messagemessage >> find it with the FIND command, and examine its attributesmessage >> with the EXAMINE ALL commandwait 4messagemessage   *fin   finmessage   *exa all   exa allmessagemessage >> The crosshair can be be moved along a found line with the NEXT commandwait 2messagemessage   *next   nextwait 4messagemessage >> the PREVIOUS commandmessagemessage   *previous   previouswait 4messagemessage >> or can be located between vertices by the FRACTION commandmessagewait 4message   *frac .6666   frac .6666wait 4messagemessage >> The feature can be split in 2 at this point by the SPLIT commandmessagewait 3message   *split   splitmessagemessage >> This has created 2 features as can be seen  when we give themessage >> FIND command, twice in the same placemessagewait 3message   *fin   finwait 15message   *fin   finwait 15messagemessage >> Found features can be deleted by the DELETE commandmessagewait 4message   *delete   deletewait 4messagemessage >> and deleted features can be recovered using the RECOVER commandmessage >> followed by the END command, when we confirm that it is the featuremessage >> that we wantmessagewait 4message   *recover   recoverwait 4message   *end   endmessagemessage >> The features that are displayed can be selected, for examplemessage >> we may not want to display the grid which is in layer 11message >> so we give the DESELECT LAYERS commandmessagewait 4message   *deselect layer 11   deselect layer 11messagemessage >> We can select any particular features codes to displaymessage >> - we will select all features except textmessagewait 4message   *select fc 0-27,29-400   select fc 0-27,29-400messagemessage >> and we can operate on whole groups of feature codesmessage >> we will not show symbolsmessagewait 4message   *deselect fc symbols   deselect fc symbolsmessagemessage >> to see what we have selected we give the SHOW SELECTIONS commandmessagewait 3message   *show selections   show selectionswait 4messagemessage >> and now we can redraw the screenmessagewait 3message   *draw screen   draw screenmessagemessage >> To delete part of a line, position the cursor near the featuremessage >> and find the featuremessagewait 4   POS  .450417E 003  .1278134E 003message   *fin   finmessagemessage >> give the DELETE PART commandmessagewait 4message   *delete part   delete partmessagemessage >> and move to the end of the part of the feature to be deletedmessagewait 4   POS  453 120messagemessage >> Finally give the END commandmessagewait 4message   *end   endmessagemessage >> The deleted feature will now be recoveredmessagewait 4message   *recover   recovermessage   *end   endmessagemessage >> To change the feature code of a feature,message >> we first find itmessage   POS  .4271162E 003  .1199154E 003wait 4message   *find   finmessagemessage >> and then change the feature code with the CHANGE FC commandmessagewait 4message   *change fc 108   change fc 108messagemessage >> To construct a new feature we first set up a line feature codemessage >> using the SET FC command, and we see the status line is updatedmessagewait 4message   *set fc 30   set fc 30messagemessage >> Then the feature is constructed using a series of START commandsmessagewait 4   POS  .4026238E 003  .1385060E 003message   *sta   sta   POS  .4026238E 003  .1341453E 003message   *sta   sta   POS  .4167225E 003  .1340797E 003message   *sta   sta   POS  .4164274E 003  .1439487E 003message   *sta   sta   POS  .4116405E 003  .1439159E 003message   *sta   sta   POS  .4118044E 003  .1397847E 003message   *sta   stamessagemessage >> The cursor can be moved to the first point with the CLOSE commandmessagewait 4message   *close   closemessagemessage >> The construction is completed with the END commandmessagewait 4message   *end   endmessagemessage >> This feature has a process code of 0.message >> This can be seen by finding it and giving the EXAMINE PC commandmessagewait 4message   *fin   finmessage   *exa pc   exa pcmessagemessage >> A found feature can be squared, by giving the SQUARE PARTmessage >> command, and if the squaring is acceptable the END commandmessagewait 4message   *square part   square partmessage   *end   endmessagemessage >> Note that this feature now has the proper process code attatchedmessagewait 4message   *fin   finmessage   *exa pc   exa pcmessagemessage >> To square a feature as soon as it has been constructed wemessage >> set a process in the current construction attribute set.message >> This is the name of a previously defined macro.messagewait 4message   *set process ossq   set process ossqmessagemessage >> We can look at the current attribute set with the SHOW ATTRIBUTEmessage >> command.messagewait 4message   *show attribute   show attributemessagemessage >> Now when we finish constructing a feature, the macro OSSQ willmessage >> will be obeyed, and the feature will be automatically squaredmessagewait 4   POS  .4079027E 003  .1269648E 003message   *sta   sta   POS  .4228866E 003  .1270631E 003message   *sta   sta   POS  .4230177E 003  .1197515E 003message   *sta   sta   POS  .4164274E 003  .1194564E 003message   *sta   sta   POS  .4165258E 003  .1230303E 003message   *sta   sta   POS  .4082633E 003  .1230303E 003message   *sta   stamessage   *close   closemessage   *end   endmessagemessage >> We can select features for display by FSNmessage >> We will now display only those features that we have worked withmessage >> or createdmessagewait 4messagemessage >> First we select everything with the SELECT ALL commandmessage >> and then those FSNs that we wantmessagewait 4message   *select all   select allmessage   *select fsn 548,1237-1243   select fsn 548,1237-1243message   *draw screen   draw screenmessagemessage >> To join two features together we must position on the endmessage >> of a feature   -  find it and give the LAST commandmessagewait 4   POS  .4503954E 003  .1283746E 003message   *fin   finmessage   *last   lastmessagemessage >> Now we give the JOIN command and find another feature by its endmessagewait 4message   *join   joinmessage   *fin   finmessagemessage >> The two features are JOINED when we give the END commandmessagewait 4message   *end   endmessagemessage >> We will do that again, without stopping!!messagewait 4message   *fin   finmessage   *last   lastmessage   *join   joinmessage   *fin   finmessage   *end   endmessagemessage >> Now for a bridgemessagewait 4   pos  .4544283e 003  .1175547e 003messagemessage >> Find a featuremessagewait 4message   *fin   finmessagemessage >> Now give the BRIDGE command. messagewait 4   bridgemessage   *bridgemessagemessage >> Note that we are now in CONSTRUCT state.message >> We now construct our bridge, with a series of START commandsmessagewait 4   pos  .4570841e 003  .1182433e 003message   *start   start   pos  .4569857e 003  .1214237e 003message   *start   start   pos  .4556087e 003  .1253582e 003message   *start   start   pos  .4539693e 003  .1292271e 003message   *start   start   pos  .4504610e 003  .1290632e 003messagemessage >> To end the bridge, we FIND the original feature again and give message >> the END commandmessagewait 4   pos  .4501987e 003  .1291287e 003message   *fin   finmessage   *end   endmessagemessage >> Now we will look at text commandsmessage >> First draw all the features in our windowmessagewait 4message   *select all   select allmessage   draw screen*   draw screenmessagemessage >> Find a TEXT featuremessagewait 4   pos  .4533791e 003  .6476664e 002message   *fin   finmessagemessage >> Note that we are now in TEXT statemessage >> We will now move the text to a new positionmessagewait 4message   *move   move   pos  .4675105e 003  .6371743e 002messagemessage >> We can change its justification with the CHANGE LOCATION commandmessagewait 4message *change location 5change location 5messagemessage >> And back againmessagewait 4message *change location 6change location 6messagemessage >> We can rotate it with the cursormessagewait 4   rotatemessage   *rotate   pos  .4727238e 003  .6158624e 002messagemessage >> and when we are happy with its position and orientation ENDmessagewait 4message   *end   endmessagemessage >> We can make it smallermessagewait 4message   *smaller   smallermessagemessage >> and againmessagewait 4message   *smaller   smallermessagemessage >> change the actual text with the SUBSTITUTE commandmessagewait 4message  *substitute 58 57   substitute 58 57messagemessage >> We are now finished modifying the text, and so we can deposit itmessage >> with an END commandmessagewait 4message   *end   endmessagemessage >> That is the end of this automatic demo. The screen will bemessage >> redrawn and control will return to the operatormessagewait 4   draw screenmessagemessage >> Thank you for your attentionmessagedisable continue