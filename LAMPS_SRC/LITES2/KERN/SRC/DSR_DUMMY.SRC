C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1993-01-06 14:23:24.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
C
C DUMMY DSR routines for testing
C
	LOGICAL FUNCTION DSR_INIT
C
***	IDENT	06JA93
***	MODULE	DSR_INIT
C
C	Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C	Created					CCB	 2-Mar-1989
C
C	Function to initialise DSR
C	Returns .TRUE. if successful, .FALSE. otherwise
C
	IMPLICIT NONE
C
C workspace
	LOGICAL	OK
C
	CALL TTWSTR('...DSR_INIT')
	DSR_INIT = .TRUE.	! assume OK
	IF (.NOT.DSR_INIT) GOTO 9990
	GOTO 9999
C
9990	DSR_INIT = .FALSE.
C
9999	RETURN
	END
C
	SUBROUTINE DSR_MOVE(X,Y,Z,WAIT)
C
***	IDENT	02MR89
***	MODULE	DSR_MOVE
C
C	Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C	Created					CCB	 2-Mar-1989
C
C	Move DSR to position
C
	IMPLICIT NONE
C
C arguments
	REAL*8	X,Y,Z
	LOGICAL	WAIT
C
	CALL EXPAND('...DSR_MOVE to %G0.7 %G0.7 %G0.7',X,Y,Z)
	IF (WAIT) CALL APPEND(' wait')
	CALL TTWLIN
	RETURN
	END
C
	SUBROUTINE DSR_READ(X,Y,Z)
C
***	IDENT	02MR89
***	MODULE	DSR_READ
C
C	Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C	Created					CCB	 2-Mar-1989
C
C	Read DSR position
C
	IMPLICIT NONE
C
C arguments
	REAL*8	X,Y,Z
C
	CALL TTWSTR('...DSR_READ')
	X = 0
	Y = 0
	Z = 0
C
	RETURN
	END
C
	LOGICAL FUNCTION DSR_START(EFN,IOSB,AST,BUFF)
C
***	IDENT	02MR89
***	MODULE	DSR_START
C
C	Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C	Created					CCB	 2-Mar-1989
C
C	Function to put up a read to DSR
C	Returns .TRUE. if successful, .FALSE. otherwise (error in QIO)
C
	IMPLICIT NONE
C
C overlay on KERN P2PLIB Pascal common block
	INTEGER*4	P3_IO
	COMMON/P3_IO/	P3_IO
C
C Arguments
	INTEGER*4	EFN		! event flag to wait for
	INTEGER*2	IOSB(4)
	EXTERNAL	AST
	BYTE		BUFF		! buffer for output	
C
	DSR_START=.TRUE.			! assume OK
	CALL TTWSTR('...DSR_START')
	CALL SYS$CLREF(%VAL(EFN))
	IOSB(1) = 0
C
9999	RETURN
	END
C
	INTEGER FUNCTION DSR_TRN(CH)
C
***	IDENT	02MR89
***	MODULE	DSR_TRN
C
C	Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C	Created					CCB	 2-Mar-1989
C
C	Translate a character from DSR P3 to button number
C
	IMPLICIT NONE
C
C Arguments
	BYTE		CH		! the character
C
	DSR_TRN = -1			! assume naff
	CALL TTWSTR('...DSR_TRN')
C
C pedals return 16-19 for left down/up, right down/up
	IF (CH.GE.'A'.AND.CH.LE.'D') THEN
	   DSR_TRN = 84-CH
	ELSEIF (CH.GE.'0'.AND.CH.LE.'9') THEN
	   DSR_TRN = CH-'0'
	ELSEIF (CH.EQ.127) THEN
	   DSR_TRN = 10
	ELSEIF (CH.EQ.':') THEN
	   DSR_TRN = 11
	ELSEIF (CH.EQ.'E') THEN
	   DSR_TRN = 12
	ELSEIF (CH.EQ.13) THEN
	   DSR_TRN = 13
	ELSEIF (CH.EQ.'-') THEN
	   DSR_TRN = 14
	ELSEIF (CH.EQ.'.') THEN
	   DSR_TRN = 15
	ENDIF
C
9999	RETURN
	END
