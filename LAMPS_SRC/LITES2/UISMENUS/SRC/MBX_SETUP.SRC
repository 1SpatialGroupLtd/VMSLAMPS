C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1989-08-04 12:25:20.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL*4 FUNCTION MBX_SETUP(LOGICAL_NAME,LOGICAL_NAME_LEN)
C
***	MODULE	MBX_SETUP
***	IDENT	02AU89
C
C	Copyright (C), Laser-Scan Laboratories Ltd., Cambridge, England
C
C	Created						AC  19-Oct-1988
C
C ......................................................................
C
C Routine to create a mailbox with the specified name
C
	IMPLICIT NONE
C
C Parameters:
	INTEGER		SS$_NORMAL
	EXTERNAL	SS$_NORMAL
C
C Common:
	INCLUDE		'LSL$CMNUISMENUS:UISMENUSMSG.PAR'
C
C Argument:
	CHARACTER*(*)	LOGICAL_NAME
	INTEGER		LOGICAL_NAME_LEN
C
C W/s:
	INTEGER		CHANNEL
	LOGICAL*4	STATUS
C
C Functions:
	LOGICAL*4	SYS$CREMBX
C
C ......................................................................
C                                                                     
C assume everything is going to be fine
	MBX_SETUP = .TRUE.
C
C attempt to create mailbox with correct logical name
	STATUS=SYS$CREMBX(,CHANNEL,,,,,LOGICAL_NAME(1:LOGICAL_NAME_LEN))
C
C if not successful....
	IF (.NOT.STATUS) THEN
C
C then attempt to say why and note failure
	   CALL LSL_PUTMSG(UISMEN__FAILCREATE,
     &			   LOGICAL_NAME(1:LOGICAL_NAME_LEN))
	   CALL LSL_ADDMSG(STATUS)
	   MBX_SETUP = .FALSE.
	ENDIF
C
C finished...
	RETURN
	END

