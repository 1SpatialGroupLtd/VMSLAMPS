C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1989-08-04 11:37:20.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL*4 FUNCTION SETUP_COMM(LOGICAL_NAME,LOGICAL_NAME_LEN,
     &					MBX_ID)
C
***	MODULE	SETUP_COMM
***	IDENT	02AU89
C
C	Copyright (C), Laser-Scan Laboratories Ltd., Cambridge, England
C
C	Created						AC  19-Oct-1988
C
C ......................................................................
C
C Routine that attempts to establish communication with a previously 
C setup mailbox
C
	IMPLICIT NONE
C
C Parameter:
	INCLUDE		'LSL$CMNUISMENUS:UISMENUSMSG.PAR'
C
C Argument:
	CHARACTER*(*)	LOGICAL_NAME	     ! logical name by which
	INTEGER		LOGICAL_NAME_LEN     ! the mailbox is recognised
	INTEGER		MBX_ID		     ! ID used by MBXLIB
C
C W/s:
	BYTE		TEXT(256)		! pass name as NULL
C						! terminated array
C
C Functions:
	INTEGER		MBX$S_INIT_WRITE	! init MBXLIB
C
C ......................................................................
C
C assume everything is going to be just fine
 	SETUP_COMM = .TRUE.
C
C make up NULL terminated byte array containing logical name
	CALL EXPAND('%W%S',TEXT,LOGICAL_NAME)
	TEXT(LOGICAL_NAME_LEN+1) = 0
C
C attempt to set up channel connecting to mailbox
	MBX_ID = MBX$S_INIT_WRITE(TEXT,255,-1,-1)
	IF (MBX_ID.EQ.0) THEN
	   CALL LSL_PUTMSG(UISMEN__FAILMBX,TEXT)
	   SETUP_COMM = .FALSE.
	ENDIF
C
C Finished....
	RETURN
	END

