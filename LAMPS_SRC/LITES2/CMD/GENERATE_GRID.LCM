!
! An example LITES2 command file to draw a grid on a map
!
! get into Ready state
%ABANDON
!
! see if layer 0 exists, if not create it
%TEST $LAYER_EXIST 0
%ELSE %CREATE LAYER 0
!
! set FC and layer for grid
%SET FC 0
%SET LAYER 0
!
! create some variables
%DECLARE INTEGER __SUBSOPT
%DECLARE INTEGER __LLX
%DECLARE INTEGER __LLY
%DECLARE INTEGER __URX
%DECLARE INTEGER __URY
%DECLARE REAL	 __TEMP
%DECLARE INTEGER __ITEMP
%DECLARE INTEGER __X
%DECLARE INTEGER __Y
%DECLARE INTEGER __XA
%DECLARE INTEGER __YA
%DECLARE INTEGER __DX
%DECLARE INTEGER __DY
%DECLARE INTEGER __GRIDSIZE
%DECLARE INTEGER __MINX
%DECLARE INTEGER __MAXX
%DECLARE INTEGER __MINY
%DECLARE INTEGER __MAXY
%DECLARE INTEGER __TEXT_REQD
%DECLARE INTEGER __TEXT_VALUE
%DECLARE INTEGER __CLIPPED
%DECLARE CHARACTER __ANSWER
%DECLARE REAL	 __TEXT_OFFSET
%DECLARE REAL	 __START_POS
%DECLARE REAL	 __END_POS
%DECLARE INTEGER __FINISH
!
! define some macros to do grid drawing
%MACRO __GRID_GENA
%TEST __TEXT_REQD
%THEN %POS '__START_POS '__Y
%THEN SET LOCATION 7
%THEN TEXT '__TEXT_VALUE
%THEN %END
%THEN %POS '__X '__Y
%START
%POS '__XA '__Y
%END
%TEST __TEXT_REQD
%THEN %POS '__END_POS '__Y
%THEN SET LOCATION 1
%THEN TEXT '__TEXT_VALUE
%THEN %END
%LET __Y ='__Y +'__GRIDSIZE
%LET __TEXT_VALUE = '__Y + '$MDOFFSET2
%TEST __Y .GT. '__MAXY
%ELSE %POS '__X '__Y
%JFALSE __GRID_GENA
%TEST __CLIPPED
%THEN %LET __Y  = '__MINY
%THEN %LET __YA = '__MAXY
%ELSE %LET __Y  = '__LLY
%ELSE %LET __YA = '__URY
%LET __X = '__MINX
%LET __TEXT_VALUE = '__X + '$MDOFFSET1
%LET __START_POS = '__Y  - '__TEXT_OFFSET
%LET __END_POS   = '__YA + '__TEXT_OFFSET
%JUMP __GRID_GENB
%ENDMACRO
!
!
%MACRO __GRID_GENB
%TEST __TEXT_REQD
%THEN %POS '__X '__START_POS
%THEN SET LOCATION 7
%THEN TEXT '__TEXT_VALUE
%THEN %ROTATE TO +90
%THEN %END
%POS '__X '__Y
%START
%POS '__X '__YA
%END
%TEST __TEXT_REQD
%THEN %POS '__X '__END_POS
%THEN SET LOCATION 1
%THEN TEXT '__TEXT_VALUE
%THEN %ROTATE TO +90
%THEN %END
%LET __X='__X +'__GRIDSIZE
%LET __TEXT_VALUE = '__X + '$MDOFFSET1
%TEST __X .GT. '__MAXX
%JFALSE __GRID_GENB
%ENDMACRO
!
!
%MACRO __GRID_ABORT
%LET __FINISH = -1
%ENDMACRO
!
%MACRO __TEXT_HEIGHT
%INQUIRE __ANSWER "Are text heights specified in mm? (Y for mm; N for points; Q - Quit) : "
%TEST __ANSWER = "Q"
%JTRUE __GRID_ABORT
%TEST __ANSWER
%ENABLE CONTINUE
%THEN %INQUIRE __ITEMP "Height of text (sheet mms) : "
%THEN %SET HEIGHT '__ITEMP
%TEST $MOANED
%JTRUE __TEXT_HEIGHT
%TEST __ANSWER
%ELSE %INQUIRE __ITEMP "Height of text (points) : "
%ELSE %SET PSIZE '__ITEMP
%TEST $MOANED
%JTRUE __TEXT_HEIGHT
%DISABLE CONTINUE
%ENDMACRO
!
%MACRO __TEXT_INQ
%ENABLE CONTINUE
%INQUIRE __ANSWER  "Text Feature Code to use (Q for quit) : "
%TEST __ANSWER = "Q"
%JTRUE __GRID_ABORT
%ENABLE CONTINUE
%LET __ITEMP = '__ANSWER
%TEST $MOANED
%JTRUE __TEXT_INQ
%SET TEXT '__ITEMP
%TEST $MOANED
%JTRUE __TEXT_INQ
%TEST $OPTHEIG
%THEN __TEXT_HEIGHT
%INQUIRE __TEXT_OFFSET "Distance of text from grid (sheet mms) : "
%LET __TEXT_OFFSET = '__TEXT_OFFSET / '$MMFACTOR
%DISABLE CONTINUE
%ENDMACRO
!
!
%MACRO __GRID_FINISH
!
! clear up, by resetting things to what they were
%DISABLE CONTINUE
%TEST __SUBSOPT
%ELSE %DISABLE SUBSTITUTION
%CANCEL VARIABLE __SUBSOPT
%CANCEL VARIABLE __LLX
%CANCEL VARIABLE __LLY
%CANCEL VARIABLE __URX
%CANCEL VARIABLE __URY
%CANCEL VARIABLE __TEMP
%CANCEL VARIABLE __ITEMP
%CANCEL VARIABLE __X
%CANCEL VARIABLE __Y
%CANCEL VARIABLE __XA
%CANCEL VARIABLE __YA
%CANCEL VARIABLE __DX
%CANCEL VARIABLE __DY
%CANCEL VARIABLE __GRIDSIZE
%CANCEL VARIABLE __MINX
%CANCEL VARIABLE __MAXX
%CANCEL VARIABLE __MINY
%CANCEL VARIABLE __MAXY
%CANCEL VARIABLE __TEXT_REQD
%CANCEL VARIABLE __CLIPPED
%CANCEL VARIABLE __ANSWER
%CANCEL VARIABLE __TEXT_VALUE
%CANCEL VARIABLE __TEXT_OFFSET
%CANCEL VARIABLE __START_POS
%CANCEL VARIABLE __END_POS
%CANCEL VARIABLE __FINISH
!
%CANCEL MACRO __GRID_GENA
%CANCEL MACRO __GRID_GENB
%CANCEL MACRO __TEXT_INQ
%CANCEL MACRO __TEXT_HEIGHT
%CANCEL MACRO __GRID_ABORT
%CANCEL MACRO __GRID_GENERATE
%CANCEL MACRO __GRID_FINISH
%ENDMACRO
!
! now to do the work
!
%MACRO __GRID_GENERATE
%LET __FINISH = 0
! switch on symbol substitution
%TEST $OPTSUBS
%THEN %LET __SUBSOPT = -1
%ELSE %LET __SUBSOPT = 0
%ENABLE SUBSTITUTION
!
! calculate "range" of map from the LIMITS (which are
! the range +5% all round)
%LET __TEMP = ('$LIMITS2 - '$LIMITS1)/22
%LET __LLX = ('$LIMITS1 + '__TEMP) + 0.5
%LET __URX = ('__LLX + '__TEMP * 20) + 0.5
!
%LET __TEMP = ('$LIMITS4 - '$LIMITS3)/22
%LET __LLY = ('$LIMITS3 + '__TEMP) + 0.5
%LET __URY = ('__LLY + '__TEMP * 20) + 0.5
!
! get the grid interval to use
%MESSAGE
%INQUIRE __GRIDSIZE "Grid interval :  "
%LET __GRIDSIZE = ABS('__GRIDSIZE)
!
! should grid be clipped?
%INQUIRE __ANSWER "Should grid be clipped? (Y/N) : "
%TEST __ANSWER
%THEN %LET __CLIPPED = -1
%ELSE %LET __CLIPPED = 0
!
! should grid be annotated?
%INQUIRE __ANSWER "Should grid be annotated? (Y/N) : "
%TEST __ANSWER
%THEN %LET __TEXT_REQD = -1
%ELSE %LET __TEXT_REQD = 0
%THEN __TEXT_INQ
%TEST __FINISH
%JTRUE __GRID_FINISH
!
! calculate the size of the grid
!
%LET __ITEMP = (('__LLX  + '$MDOFFSET 1 ) + 0.5) / '__GRIDSIZE
%LET __MINX = '__ITEMP  * '__GRIDSIZE - '$MDOFFSET 1
%TEST __MINX.LT.'__LLX'
%THEN %LET __MINX = '__MINX + '__GRIDSIZE
!
%LET __ITEMP = (('__LLY + '$MDOFFSET 2) + 0.5) / '__GRIDSIZE
%LET __MINY = '__ITEMP  * '__GRIDSIZE - '$MDOFFSET 2
%TEST __MINY.LT.'__LLY'
%THEN %LET __MINY = '__MINY + '__GRIDSIZE
!
%LET __ITEMP = (('__URX + '$MDOFFSET 1) + 0.5) / '__GRIDSIZE
%LET __MAXX = '__ITEMP  * '__GRIDSIZE - '$MDOFFSET 1
%TEST __MAXX.GT.'__URX'
%THEN %LET __MAXX = '__MAXX - '__GRIDSIZE
!
%LET __ITEMP = (('__URY + '$MDOFFSET 2) + 0.5) / '__GRIDSIZE
%LET __MAXY = '__ITEMP  * '__GRIDSIZE - '$MDOFFSET 2
%TEST __MAXY.GT.'__URY'
%THEN %LET __MAXY = '__MAXY - '__GRIDSIZE
!
! check for sensible values
%TEST __MAXX.LE.'__MINX'
%OR   __MAXY.LE.'__MINY'
%AND  __CLIPPED
%THEN %MESSAGE
%THEN %MESSAGE No complete grid square of that size in map
%THEN %RASP
%JTRUE __GRID_GENERATE
!
! initialise grid drawing
%LET __Y = '__MINY
%LET __TEXT_VALUE = '__Y + '$MDOFFSET2
%TEST __CLIPPED
%THEN %LET __X  = '__MINX
%THEN %LET __XA = '__MAXX
%ELSE %LET __X  = '__LLX
%ELSE %LET __XA = '__URX
%LET __START_POS = '__X  - '__TEXT_OFFSET
%LET __END_POS   = '__XA + '__TEXT_OFFSET
%POS '__X '__Y
!
! and draw grid
__GRID_GENA
%JUMP __GRID_FINISH
%ENDMACRO
!
! now do the work
__GRID_GENERATE
