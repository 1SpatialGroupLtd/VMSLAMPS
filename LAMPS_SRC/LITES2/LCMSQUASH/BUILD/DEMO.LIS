     1   enable continue ! keep going regardless
% Name not declared: enable
     2   setup four	! quick setup for demo
% Name not declared: setup
     3   message
% Name not declared: message
     4   message >> first we read in the map
     5   wait 1
% Name not declared: wait
     6   message
     7   message   *iff litesdemo
     8      iff litesdemo
% Name not declared: iff
     9   message
    10   message >> We select a window by positioning the cursor at the
    11   message >> lower left corner
    12   wait 3
    13   message
    14      POS  .3499177E 003  .4747115E 002
% Name not declared: POS
    15   message
    16   message >> give the WINDOW SCREEN command
    17   wait 3
    18   message
    19   message   *win
    20      win
% Name not declared: win
    21   message
    22   message >> move the cursor to the upper right position
    23   wait 4
    24   message
    25      POS  .4476139E 003  .1481619E 003
    26   message
    27   message >> and give the END command
    28   message
    29   wait 4
    30   message   *end
    31      end
% Name not declared: end
    32   message
    33   message >> To look at the characteristics of a feature, move the cursor
    34   message >> over it,
    35   message
    36      POS  .4354442E 003  .1294894E 003
    37   wait 3
    38   message
    39   message >> find it with the FIND command, and examine its attributes
    40   message >> with the EXAMINE ALL command
    41   wait 4
    42   message
    43   message   *fin
    44      fin
% Name not declared: fin
    45   message   *exa all
    46      exa all
% Name not declared: exa
    47   message
    48   message >> The crosshair can be be moved along a found line with the NEXT command
    49   wait 2
    50   message
    51   message   *next
    52      next
% Name not declared: next
    53   wait 4
    54   message
    55   message >> the PREVIOUS command
    56   message
    57   message   *previous
    58      previous
% Name not declared: previous
    59   wait 4
    60   message
    61   message >> or can be located between vertices by the FRACTION command
    62   message
    63   wait 4
    64   message   *frac .6666
    65      frac .6666
% Name not declared: frac
    66   wait 4
    67   message
    68   message >> The feature can be split in 2 at this point by the SPLIT command
    69   message
    70   wait 3
    71   message   *split
    72      split
% Name not declared: split
    73   message
    74   message >> This has created 2 features as can be seen  when we give the
    75   message >> FIND command, twice in the same place
    76   message
    77   wait 3
    78   message   *fin
    79      fin
    80   wait 15
    81   message   *fin
    82      fin
    83   wait 15
    84   message
    85   message >> Found features can be deleted by the DELETE command
    86   message
    87   wait 4
    88   message   *delete
    89      delete
% Name not declared: delete
    90   wait 4
    91   message
    92   message >> and deleted features can be recovered using the RECOVER command
    93   message >> followed by the END command, when we confirm that it is the feature
    94   message >> that we want
    95   message
    96   wait 4
    97   message   *recover
    98      recover
% Name not declared: recover
    99   wait 4
   100   message   *end
   101      end
   102   message
   103   message >> The features that are displayed can be selected, for example
   104   message >> we may not want to display the grid which is in layer 11
   105   message >> so we give the DESELECT LAYERS command
   106   message
   107   wait 4
   108   message   *deselect layer 11
   109      deselect layer 11
% Name not declared: deselect
   110   message
   111   message >> We can select any particular features codes to display
   112   message >> - we will select all features except text
   113   message
   114   wait 4
   115   message   *select fc 0-27,29-400
   116      select fc 0-27,29-400
% Name not declared: select
   117   message
   118   message >> and we can operate on whole groups of feature codes
   119   message >> we will not show symbols
   120   message
   121   wait 4
   122   message   *deselect fc symbols
   123      deselect fc symbols
   124   message
   125   message >> to see what we have selected we give the SHOW SELECTIONS command
   126   message
   127   wait 3
   128   message   *show selections
   129      show selections
% Name not declared: show
   130   wait 4
   131   message
   132   message >> and now we can redraw the screen
   133   message
   134   wait 3
   135   message   *draw screen
   136      draw screen
% Name not declared: draw
   137   message
   138   message >> To delete part of a line, position the cursor near the feature
   139   message >> and find the feature
   140   message
   141   wait 4
   142      POS  .450417E 003  .1278134E 003
   143   message   *fin
   144      fin
   145   message
   146   message >> give the DELETE PART command
   147   message
   148   wait 4
   149   message   *delete part
   150      delete part
   151   message
   152   message >> and move to the end of the part of the feature to be deleted
   153   message
   154   wait 4
   155      POS  453 120
   156   message
   157   message >> Finally give the END command
   158   message
   159   wait 4
   160   message   *end
   161      end
   162   message
   163   message >> The deleted feature will now be recovered
   164   message
   165   wait 4
   166   message   *recover
   167      recover
   168   message   *end
   169      end
   170   message
   171   message >> To change the feature code of a feature,
   172   message >> we first find it
   173   message
   174      POS  .4271162E 003  .1199154E 003
   175   wait 4
   176   message   *find
   177      fin
   178   message
   179   message >> and then change the feature code with the CHANGE FC command
   180   message
   181   wait 4
   182   message   *change fc 108
   183      change fc 108
% Name not declared: change
   184   message
   185   message >> To construct a new feature we first set up a line feature code
   186   message >> using the SET FC command, and we see the status line is updated
   187   message
   188   wait 4
   189   message   *set fc 30
   190      set fc 30
% Name not declared: set
   191   message
   192   message >> Then the feature is constructed using a series of START commands
   193   message
   194   wait 4
   195      POS  .4026238E 003  .1385060E 003
   196   message   *sta
   197      sta
% Name not declared: sta
   198      POS  .4026238E 003  .1341453E 003
   199   message   *sta
   200      sta
   201      POS  .4167225E 003  .1340797E 003
   202   message   *sta
   203      sta
   204      POS  .4164274E 003  .1439487E 003
   205   message   *sta
   206      sta
   207      POS  .4116405E 003  .1439159E 003
   208   message   *sta
   209      sta
   210      POS  .4118044E 003  .1397847E 003
   211   message   *sta
   212      sta
   213   message
   214   message >> The cursor can be moved to the first point with the CLOSE command
   215   message
   216   wait 4
   217   message   *close
   218      close
% Name not declared: close
   219   message
   220   message >> The construction is completed with the END command
   221   message
   222   wait 4
   223   message   *end
   224      end
   225   message
   226   message >> This feature has a process code of 0.
   227   message >> This can be seen by finding it and giving the EXAMINE PC command
   228   message
   229   wait 4
   230   message   *fin
   231      fin
   232   message   *exa pc
   233      exa pc
   234   message
   235   message >> A found feature can be squared, by giving the SQUARE PART
   236   message >> command, and if the squaring is acceptable the END command
   237   message
   238   wait 4
   239   message   *square part
   240      square part
% Name not declared: square
   241   message   *end
   242      end
   243   message
   244   message >> Note that this feature now has the proper process code attatched
   245   message
   246   wait 4
   247   message   *fin
   248      fin
   249   message   *exa pc
   250      exa pc
   251   message
   252   message >> To square a feature as soon as it has been constructed we
   253   message >> set a process in the current construction attribute set.
   254   message >> This is the name of a previously defined macro.
   255   message
   256   wait 4
   257   message   *set process ossq
   258      set process ossq
   259   message
   260   message >> We can look at the current attribute set with the SHOW ATTRIBUTE
   261   message >> command.
   262   message
   263   wait 4
   264   message   *show attribute
   265      show attribute
   266   message
   267   message >> Now when we finish constructing a feature, the macro OSSQ will
   268   message >> will be obeyed, and the feature will be automatically squared
   269   message
   270   wait 4
   271      POS  .4079027E 003  .1269648E 003
   272   message   *sta
   273      sta
   274      POS  .4228866E 003  .1270631E 003
   275   message   *sta
   276      sta
   277      POS  .4230177E 003  .1197515E 003
   278   message   *sta
   279      sta
   280      POS  .4164274E 003  .1194564E 003
   281   message   *sta
   282      sta
   283      POS  .4165258E 003  .1230303E 003
   284   message   *sta
   285      sta
   286      POS  .4082633E 003  .1230303E 003
   287   message   *sta
   288      sta
   289   message   *close
   290      close
   291   message   *end
   292      end
   293   message
   294   message >> We can select features for display by FSN
   295   message >> We will now display only those features that we have worked with
   296   message >> or created
   297   message
   298   wait 4
   299   message
   300   message >> First we select everything with the SELECT ALL command
   301   message >> and then those FSNs that we want
   302   message
   303   wait 4
   304   message   *select all
   305      select all
   306   message   *select fsn 548,1237-1243
   307      select fsn 548,1237-1243
   308   message   *draw screen
   309      draw screen
   310   message
   311   message >> To join two features together we must position on the end
   312   message >> of a feature   -  find it and give the LAST command
   313   message
   314   wait 4
   315      POS  .4503954E 003  .1283746E 003
   316   message   *fin
   317      fin
   318   message   *last
   319      last
% Name not declared: last
   320   message
   321   message >> Now we give the JOIN command and find another feature by its end
   322   message
   323   wait 4
   324   message   *join
   325      join
% Name not declared: join
   326   message   *fin
   327      fin
   328   message
   329   message >> The two features are JOINED when we give the END command
   330   message
   331   wait 4
   332   message   *end
   333      end
   334   message
   335   message >> We will do that again, without stopping!!
   336   message
   337   wait 4
   338   message   *fin
   339      fin
   340   message   *last
   341      last
   342   message   *join
   343      join
   344   message   *fin
   345      fin
   346   message   *end
   347      end
   348   message
   349   message >> Now for a bridge
   350   message
   351   wait 4
   352      pos  .4544283e 003  .1175547e 003
% Name not declared: pos
   353   message
   354   message >> Find a feature
   355   message
   356   wait 4
   357   message   *fin
   358      fin
   359   message
   360   message >> Now give the BRIDGE command. 
   361   message
   362   wait 4
   363      bridge
% Name not declared: bridge
   364   message   *bridge
   365   message
   366   message >> Note that we are now in CONSTRUCT state.
   367   message >> We now construct our bridge, with a series of START commands
   368   message
   369   wait 4
   370      pos  .4570841e 003  .1182433e 003
   371   message   *start
   372      start
% Name not declared: start
   373      pos  .4569857e 003  .1214237e 003
   374   message   *start
   375      start
   376      pos  .4556087e 003  .1253582e 003
   377   message   *start
   378      start
   379      pos  .4539693e 003  .1292271e 003
   380   message   *start
   381      start
   382      pos  .4504610e 003  .1290632e 003
   383   message
   384   message >> To end the bridge, we FIND the original feature again and give 
   385   message >> the END command
   386   message
   387   wait 4
   388      pos  .4501987e 003  .1291287e 003
   389   message   *fin
   390      fin
   391   message   *end
   392      end
   393   message
   394   message >> Now we will look at text commands
   395   message >> First draw all the features in our window
   396   message
   397   wait 4
   398   message   *select all
   399      select all
   400   message   draw screen*
   401      draw screen
   402   message
   403   message >> Find a TEXT feature
   404   message
   405   wait 4
   406      pos  .4533791e 003  .6476664e 002
   407   message   *fin
   408      fin
   409   message
   410   message >> Note that we are now in TEXT state
   411   message >> We will now move the text to a new position
   412   message
   413   wait 4
   414   message   *move
   415      move
% Name not declared: move
   416      pos  .4675105e 003  .6371743e 002
   417   message
   418   message >> We can change its justification with the CHANGE LOCATION command
   419   message
   420   wait 4
   421   message *change location 5
   422   change location 5
   423   message
   424   message >> And back again
   425   message
   426   wait 4
   427   message *change location 6
   428   change location 6
   429   message
   430   message >> We can rotate it with the cursor
   431   message
   432   wait 4
   433      rotate
% Name not declared: rotate
   434   message   *rotate
   435      pos  .4727238e 003  .6158624e 002
   436   message
   437   message >> and when we are happy with its position and orientation END
   438   message
   439   wait 4
   440   message   *end
   441      end
   442   message
   443   message >> We can make it smaller
   444   message
   445   wait 4
   446   message   *smaller
   447      smaller
% Name not declared: smaller
   448   message
   449   message >> and again
   450   message
   451   wait 4
   452   message   *smaller
   453      smaller
   454   message
   455   message >> change the actual text with the SUBSTITUTE command
   456   message
   457   wait 4
   458   message  *substitute 58 57
   459      substitute 58 57
% Name not declared: substitute
   460   message
   461   message >> We are now finished modifying the text, and so we can deposit it
   462   message >> with an END command
   463   message
   464   wait 4
   465   message   *end
   466      end
   467   message
   468   message >> That is the end of this automatic demo. The screen will be
   469   message >> redrawn and control will return to the operator
   470   message
   471   wait 4
   472      draw screen
   473   message
   474   message >> Thank you for your attention
   475   message
   476   disable continue
% Name not declared: disable
 
------------------------------------------------------------------
                             DIAGNOSTICS
------------------------------------------------------------------
The following variable or macro names were not declared.
If the some of the names are present in the lists following this
 one, then the names were used prior to declaration.
		POS
		bridge
		change
		close
		delete
		deselect
		disable
		draw
		enable
		end
		exa
		fin
		frac
		iff
		join
		last
		message
		move
		next
		pos
		previous
		recover
		rotate
		select
		set
		setup
		show
		smaller
		split
		square
		sta
		start
		substitute
		wait
		win
------------------------------------------------------------------
The following macro names were defined:
------------------------------------------------------------------
The following variable names were declared:
------------------------------------------------------------------
