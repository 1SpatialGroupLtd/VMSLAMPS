!	FILE	XGIS_AP_HAR.LCM
!	IDENT	'27MY92'
!
! Copyright ©             Laser-Scan Ltd., Cambridge, England.
!
! Created							PP  12-Jun-1990
!
! MOD	In _HA_PLOT_INFO check that the overlay chosen for
!	annotations exists.					JMC 27-May-1992
! MOD	Make sure correct version number is put into title 
!	block.							JMC 27-May-1992
! MOD	.TMP file deleted after CANCEL PLOT			NJP 11-May-1992
!
! MOD	Default submit time truncated to hrs/mins		TJH 07-May-1992
!
! MOD	Use _X_CONFIRM						SGH  6-May-1992
! MOD	BOX_HAR_PLOTTERS now FETCHed rather than ADDed		TJH 23-Apr-1992
!
! MOD	Modified _HA_STANDARD_PLT to handle legend and windowed
!	plot toggles, and the new optional plotter setup
!	parameters. 	 					JMC 09-Apr-1992
!
! MOD	Modified _HA_SET_SIZE to allow for plot rotations
!	when the plotter type is postscript. 	 		JMC 09-Apr-1992
!
! MOD	Modified _HA_PLOT_CLOSE so that when the plotter type is
!	postscript the created plot file is joined with the temp 
!	file containing the plot rotation. 	 		JMC 09-Apr-1992
!
! MOD	Modified _HA_SELECT_QUE to handle the new optional
!	parameters from the plotter setup file. Compatibility
!	with setup files containing only the 6 standard
!	parameters has been maintained.		 		JMC 02-Apr-1992
!
! MOD	_HA_PLTSPEC modified to use new optional parameters.	JMC 02-Apr-1992
!
! MOD	Rewritten _HA_GET_PLOTTERS using _HA_GET_REC to read 
!	optional parameters  from plotter setup file and allow 
!	comments and blank lines. Compatability with files in
!	old format maintained.					JMC 02-Apr-1992
!
! MOD	New macro _HA_GET_REC.					JMC 02-Apr-1992
!
! MOD	All variable declarations done before any assignments
!	made, so that command file executes faster.		JMC 02-Apr-1992
!
! MOD	windowed plot added and included in std plot.		JMC 10-Mar-1992
!
! MOD	Job time menu added to _HA_SELECT_QUE			TJH 20-Feb-1992
!
! MOD	New macro _HA_SELECT_QUE to test whether a specified 
!	queue for a plotter is a batch or print queue and create 
!	a suitable job to submit. 				JMC 02-Oct-1991
!
! MOD	Added PLOT PIXELS command to set plot resolution.	JMC 09-Dec-1991
! MOD	Added resolution and aspect to plot summary.		JMC 09-Dec-1991
! MOD	Plot close message changed to reflect button label
!	(SPR 1491)						TJH 30-Jan-1992
! MOD	/PARAMS qualifier for PRINT can now have extra 
!	parameters added to it via logical name 
!	LSL$PRINT_PARAMS_DEFN.
!	(SPR 1494)						JMC 04-Feb-1992
!
! Description:
!
!	XGIS macros - Hardcopy application
!
!-----------------------------------------------------------------------------
_X_CHECKS OFF

%ABANDON
!
%DECLARE INTEGER HA_MENU		! 1=Define, 2=Execute
%DECLARE REAL HA_XSIZE			! plot output size
%DECLARE REAL HA_YSIZE
%DECLARE REAL HA_SPEC_XSIZE		! user specified plot output size
%DECLARE REAL HA_SPEC_YSIZE
%DECLARE REAL HA_MAX_XSIZE		! plotter size
%DECLARE REAL HA_MAX_YSIZE
%DECLARE INTEGER HA_ASIZE		! A series sizes (-1 for user-specified)
!
%DECLARE INTEGER HA_AUTO_SCALE		! flag for type of scaling
%DECLARE INTEGER HA_SCALE_VAL		! scale factor
%DECLARE INTEGER HA_SEQ_NUM		! sequence number for generated files
!
%DECLARE CHARACTER HA_PLT_NAME		! name of plotter
%DECLARE CHARACTER HA_PLT_TYPE		! command file for specified plotter
%DECLARE CHARACTER HA_QUEUE		! plotter queue name
%DECLARE CHARACTER HA_DEVICE		! plotter device name
%DECLARE CHARACTER HA_COL_LUT		! colour table
%DECLARE CHARACTER HA_ANNO_FILE		! annotation commands
%DECLARE CHARACTER HA_TEMP_FILE		! temporary command file name
%DECLARE CHARACTER HA_RECALL_FILE	! saved plotfile name
%DECLARE CHARACTER HA_PRINT_CMD		! optional PRINT command for plotter
%DECLARE CHARACTER HA_PREFIX_PLT	! optional prefix plotfile
%DECLARE CHARACTER HA_SUFFIX_PLT	! optional suffix plotfile
%DECLARE CHARACTER HA_X_EDGE_OFF	! edge offset in x
%DECLARE CHARACTER HA_Y_EDGE_OFF	! edge offset in y
%DECLARE REAL HA_EDGE_OFF_DFLT		! default edge offset
%DECLARE INTEGER HA_MAX_OPTIONS		! max options in plotter setup file
!
! variables for title block and annotations
%DECLARE CHARACTER HA_TITLE
%DECLARE CHARACTER HA_PRODUCT
%DECLARE CHARACTER HA_DEPT
%DECLARE CHARACTER HA_USER
%DECLARE INTEGER HA_TITLE_FLG
%DECLARE INTEGER HA_BORDER_FLG
%DECLARE INTEGER HA_SCALE_FLG		
%DECLARE INTEGER HA_ARROW_FLG		
%DECLARE INTEGER HA_LEGEND_FLG		
%DECLARE INTEGER HF_ELEMENT
!
%DECLARE INTEGER HA_ASPECT		! aspect 0=LANDSCAPE, 1=PORTRAIT
%DECLARE INTEGER HA_PLOT_NUM		! no of copies
!
%DECLARE INTEGER HA_ACOL_COL		! colour for plot annotations
%DECLARE INTEGER HA_ACOL_OVER		! overlay for plot annotations
%DECLARE INTEGER HA_MAXF
!
%DECLARE REAL HA_ORIGIN_X		! plot origin in x
%DECLARE REAL HA_ORIGIN_Y		! plot origin in y
%DECLARE INTEGER HA_PLOTFILE_ONLY	! flag plot to file only
%DECLARE CHARACTER HA_PLOTFILE_NAME	! file name of plotfile
%DECLARE CHARACTER HA_RESOLUTION	! plot resolution
%DECLARE CHARACTER HA_PRINT_PARAMS	! definition of PRINT/PARAMS qualifier
%DECLARE INTEGER HA_WINDOWED_PLOT	! flag plots of narrow windows
!
! annotation macros
!
@XGIS_AP_HAR_PDL
!
%LET HA_TEMP_FILE = LSL$XGIS_SITE_ROOT:[COM]XGIS_HAR_TMP_'$PID.COM
%LET HF_ELEMENT=1
!
%LET HA_ACOL_OVER=1
%LET HA_ACOL_COL=1
!
%LET HA_PRINT_PARAMS = ""
%LET HA_WINDOWED_PLOT = 0
!
! In the plotter dependent LCM HA_XSIZE and HA_YSIZE should be set to the 
! limits of the plotters maximum image area if the largest paper size 
! that the plotter supports has been selected.
!
%LET HA_SPEC_XSIZE = 100.0
%LET HA_SPEC_YSIZE = 100.0
%LET HA_PLOT_NUM = 1
%LET HA_USER = '$UIC
!
%LET HA_PRINT_CMD = ""
%LET HA_PREFIX_PLT = ""
%LET HA_SUFFIX_PLT = ""
%LET HA_X_EDGE_OFF = ""
%LET HA_Y_EDGE_OFF = ""
%LET HA_EDGE_OFF_DFLT = 3.5
%LET HA_MAX_OPTIONS = 5
!
%FILE SELECT 1
%FILE WRITE FETCH BOX_HAR_DEFPLOT;FETCH BOX_HAR_EXECUTE;FETCH BOX_HAR_INFO
%FILE WRITE FETCH BOX_HAR_PLOTTERS;FETCH BOX_HAR_TITLE;FETCH BOX_HAR_ANNO_LIST
%FILE WRITE FETCH BOX_HAR_OUTSIZE;FETCH BOX_HAR_ANNO_COL
%FILE WRITE FETCH BOX_HAR_PLOTFILE_LIST;FETCH BOX_HAR_PLTSCAL
%FILE WRITE FETCH BOX_HAR_RES
%FILE WRITE TOGGLE OFF TOG_HAR_ACTIVE
!
%MACRO _HA_ACOL
   %LET I='$P2
   %TEST $P1="COL"
      %JTRUE .COL
.OVER:
! check overlay defined
   %TEST X_PLANES 'I > 0
      %THEN %LET HA_ACOL_OVER='I
      %ABORT TRUE
   %FILE SELECT 1
   %FILE WRITE TOGGLE OFF TOG_HAR_ANN_OV'I;TOGGLE ON TOG_HAR_ANN_OV'HA_ACOL_OVER
   %JUMP _X_WARN "Overlay not defined" L

.COL:
! check colour is valid for this overlay
   %TEST I <= 'X_COLOURS 'HA_ACOL_OVER
      %JFALSE _X_WARN "Colour out of range for this overlay" L
   %LET HA_ACOL_COL='I

%ENDMACRO
!
%MACRO _HA_TEST
   %FILE SELECT 1
   %JUMP .'$P1
!
.ACTIVE:
   %TEST X_HA_PLOT_STATUS = 0
      %THEN %FILE WRITE TOGGLE OFF TOG_HAR_ACTIVE
      %JTRUE _X_ERROR GEN "A plot has not been opened"
!
   %TEST X_HA_PLOT_STATUS = 1
      %JTRUE _X_ERROR GEN "Plot already active"
!
   %LET X_HA_PLOT_STATUS = 1
   %ABORT
!
.INACTIVE:
   %TEST X_HA_PLOT_STATUS = 0
      %THEN %FILE WRITE TOGGLE OFF TOG_HAR_INACTIVE
      %JTRUE _X_ERROR GEN "A plot has not been opened"
!
   %TEST X_HA_PLOT_STATUS = 2
      %JTRUE _X_ERROR GEN "Plot already inactive"
!
   %LET X_HA_PLOT_STATUS = 2
%ENDMACRO
!
%MACRO _HA_SET_SCALE
! small macro for checking scale input and removing input menu when OK
   %TEST $PCOUNT<>1
      %JTRUE .ERROR
   %ASK STRING ISREAL '$P1
   %TEST $ASK_INT1
      %JFALSE .ERROR
   %LET HA_SCALE_VAL='$P1
   %TEST HA_SCALE_VAL>0.0
      %JFALSE .ERROR
   %FILE SELECT 1
   %FILE WRITE REMOVE BOX_HAR_PLTSCAL
   %ABORT ALWAYS
.ERROR:
   _X_WARN "Invalid scale input: '$PLINE" L
%ENDMACRO
!
%MACRO _HA_SET_SIZE
!
! Set HA_XSIZE and HA_YSIZE from HA_ASIZE and HA_SPEC_XSIZE, HA_SPEC_YSIZE
!
   %TEST HA_ASIZE<0
      %THEN %LET HA_XSIZE='HA_SPEC_XSIZE
      %THEN %LET HA_YSIZE='HA_SPEC_YSIZE
      %JTRUE .CHECK_SIZE
!
! A-size plot
   %LET _REAL1=148.7*(2.0^((6-'HA_ASIZE)*0.5))
   %LET _REAL2=148.7*(2.0^((5-'HA_ASIZE)*0.5))
!
! make sure HA_XSIZE is larger for landscape (aspect=0), HA_YSIZE for portrait
!
   %LET I=1
   %TEST HA_ASPECT = 0
   %AND _REAL1 < '_REAL2
      %THEN %LET I=2
   %TEST HA_ASPECT = 1
   %AND _REAL2 < '_REAL1
      %THEN %LET I=2
   %LET HA_XSIZE='_REAL 'I
   %LET I=3-'I
   %LET HA_YSIZE='_REAL 'I
!
.CHECK_SIZE:
   %TEST HA_PLT_TYPE = PS
      %JTRUE .PS
   %LET I=0
   %TEST HA_XSIZE > 'HA_MAX_XSIZE
      %THEN %LET HA_XSIZE='HA_MAX_XSIZE
      %THEN %LET I=1
   %TEST HA_YSIZE > 'HA_MAX_YSIZE
      %THEN %LET HA_YSIZE='HA_MAX_YSIZE
      %THEN %LET I=1
   %JUMP .EXIT
!
.PS:
!
! To propely check the size, we need to see if the orientation of the plotter
! axes matches the orientation selected by the user. If it is not we
! temporarily swap the axes accordingly, because later, when the plot file
! is created, the plot axes will be rotated to match the selected orientation.
!
   %LET I=0
!
! Is plot axes landscape or portrait?
   %LET CH = ""
   %TEST HA_MAX_XSIZE > 'HA_MAX_YSIZE
      %THEN %LET CH = L ! landscape
      %ELSE %LET CH = P ! Portrait
!
   %LET _REAL1 = 'HA_MAX_XSIZE
   %LET _REAL2 = 'HA_MAX_YSIZE
!
! If user chose landscape but plotter axes is portrait then temporarily 
! swap axes
   %TEST HA_ASPECT = 0
   %AND CH = P
      %THEN %LET _REAL1 = 'HA_MAX_YSIZE
      %THEN %LET _REAL2 = 'HA_MAX_XSIZE
!
! ... or if user chose landscape but plotter axes is landscape ortrait then 
! temporarily  swap axes.
   %TEST HA_ASPECT = 1
   %AND CH = L
      %THEN %LET _REAL1 = 'HA_MAX_YSIZE
      %THEN %LET _REAL2 = 'HA_MAX_XSIZE
!
! now check the size.
   %TEST HA_XSIZE > '_REAL1
      %THEN %LET HA_XSIZE='_REAL1
      %THEN %LET I=1
   %TEST HA_YSIZE > '_REAL2
      %THEN %LET HA_YSIZE='_REAL2
      %THEN %LET I=1
!
.EXIT:
!
%ENDMACRO
!
%MACRO _HA_PLOT
!
   %TEST $RESPOND
      %JTRUE _X_ERROR RESPOND
!
   %TEST X_HA_PLOT_STATUS <> 0
      %JTRUE _X_ERROR GEN "A plot is already open"
!
! prompt user to draw window if windowed plot option is on.
   %TEST HA_WINDOWED_PLOT
      %THEN %ENABLE NARROW
      %THEN %FILE SELECT 1
      %THEN %FILE WRITE ADD BOX_HAR_DRAW_WIND
      %THEN %RESPOND
!
! convert A size or user defined size to mm
   _HA_SET_SIZE
!
   %LET HA_SEQ_NUM = 'HA_SEQ_NUM + 1
!
   _X_STATUS WORKING
!
   %LET HF_HT='ANNO_SIZE		! annotation size in screen mm
   %ANNOTATION SIZE 'HF_HT
   %LET HF_PITCH=1.333333
!
! initialise user routine variables
!
   %ROUT 102 2
!
! set up plot data
! first record window extent
!
   %ROUT 102 50 '$WINDOW1 '$WINDOW3 '$WINDOW2 '$WINDOW4 'UT_SCREEN_HEIGHT
!
! then paper size and scale factor (0=autoscale)
!
   %TEST HA_AUTO_SCALE
      %THEN %LET HA_SCALE_VAL=0
   %ROUT 102 51 'HA_XSIZE 'HA_YSIZE 'HA_SCALE_VAL
!
! get extended plot size
!
   %ROUTINE 102 52 0 0 100 100 1
   %TEST HA_ANNO_FILE=""
      %JTRUE .TITLE
   %ROUT 102 53 'HA_ANNO_FILE
   %TEST HF_OK
      %JFALSE _X_ERROR GEN "Error processing user annotation file"
!
.TITLE:
   %TEST HA_TITLE_FLG
      %THEN %ROUTINE 102 53 LSL$XGIS_SHORT_ROOT:[LOOKUP]XGIS_TITLE.PDL
   %TEST HF_OK
      %JFALSE _X_ERROR GEN "Error processing title annotation file"
   %TEST HA_BORDER_FLG
      %THEN %ROUTINE 102 53 LSL$XGIS_SHORT_ROOT:[LOOKUP]XGIS_BORDER.PDL
   %TEST HF_OK
      %JFALSE _X_ERROR GEN "Error processing border annotation file"
   %TEST HA_ARROW_FLG
      %THEN %ROUTINE 102 53 LSL$XGIS_SHORT_ROOT:[LOOKUP]XGIS_ARROW.PDL
   %TEST HF_OK
      %JFALSE _X_ERROR GEN "Error processing North arrow annotation file"
   %TEST HA_SCALE_FLG 
      %THEN %ROUTINE 102 53 LSL$XGIS_SHORT_ROOT:[LOOKUP]XGIS_SCALE.PDL
   %TEST HF_OK
      %JFALSE _X_ERROR GEN "Error processing scale annotation file"
   %TEST HA_LEGEND_FLG 
      %THEN %ROUTINE 102 53 LSL$XGIS_SHORT_ROOT:[LOOKUP]XGIS_LEGEND.PDL
   %TEST HF_OK
      %JFALSE _X_ERROR GEN "Error processing legend annotation file"
!
.SETUP_SCALE:
   %ROUT 102 82
   %LET HA_SCALE_VAL='HF_I
   %LET HA_ORIGIN_X='HF_X
   %LET HA_ORIGIN_Y='HF_Y
!
! does plot exceed addressable area
!
   %LET _REAL1='$WINDOW1 - ('HA_SCALE_VAL * 'HA_ORIGIN_X * 0.001)
   %TEST _REAL1 <= '$LIMITS1
      %THEN _X_MESSAGE "Annotated plot exceeds addressable area"
      %JTRUE _X_WARN "Reduce plotted area or re-load with increased margin" L

   %LET _REAL3='$WINDOW3 - ('HA_SCALE_VAL * 'HA_ORIGIN_Y * 0.001)
   %TEST _REAL3 <= '$LIMITS3
      %THEN _X_MESSAGE "Annotated plot exceeds addressable area"
      %JTRUE _X_WARN "Reduce plotted area or re-load with increased margin" L

   %LET _REAL2='$WINDOW1 + ('HA_SCALE_VAL * ('HF_Z - 'HA_ORIGIN_X) * 0.001)
   %TEST _REAL2 >= '$LIMITS2
      %THEN _X_MESSAGE "Annotated plot exceeds addressable area"
      %JTRUE _X_WARN "Reduce plotted area or re-load with increased margin" L

   %LET _REAL4='$WINDOW3 + ('HA_SCALE_VAL * ('HF_W - 'HA_ORIGIN_Y) * 0.001)
   %TEST _REAL4 >= '$LIMITS4
      %THEN _X_MESSAGE "Annotated plot exceeds addressable area"
      %JTRUE _X_WARN "Reduce plotted area or re-load with increased margin" L
!
! for fixed scale, compare calculated plot size with HA_XSIZE,HA_YSIZE
!
   %TEST HA_AUTO_SCALE
      %JTRUE .OPEN
!
   %LET _REAL1='HF_Z/'HA_XSIZE
   %LET _REAL2='HF_W/'HA_YSIZE
   %TEST _REAL1<'_REAL2
      %THEN %LET _REAL1='_REAL2
! _REAL1 is the factor by which the plot is too big
   %TEST _REAL1<=1.0
      %JTRUE .OPEN
   %LET _INT1=(('_REAL1-1.0)*100.0)+0.99

   _X_CONFIRM  "Plot is '_INT1% too large - continue??"

   %TEST OK
      %ELSE %LET X_HA_PLOT_STATUS=0
      %ABORT FALSE
!
.OPEN:

! set up the plotter specific options

   %TEST DEBUG
      %ELSE %DISABLE INFORM
   @XGIS_'HA_PLT_TYPE'_PLT_OPEN
   %ENABLE INFORM
!
! create the plot file
   %PLOT OPEN
   %PLOT SIZE 'HA_XSIZE 'HA_YSIZE
!
   %TEST HA_RESOLUTION = HIGH
      %THEN %PLOT PIXELS 16000
   %TEST HA_RESOLUTION = MEDIUM
      %THEN %PLOT PIXELS 6000
   %TEST HA_RESOLUTION = LOW
      %THEN %PLOT PIXELS 1000
!
   %PLOT SCALE 'HA_SCALE_VAL
   %PLOT POSITION 0
   %PLOT ORIGIN 'HA_ORIGIN_X 'HA_ORIGIN_Y
   %PLOT ANNO SCREEN			! scale annotation as on screen
   %PLOT ON
!
! draw screen and leave plot open, with clipping on.
!
   %DRAW SCREEN
   %PLOT CLIP 1
   %LET X_HA_PLOT_STATUS = 1
   %PLOT OFF		! annotation operations will set PLOT ON as required
!
   %MESSAGE
   %MESSAGE "Plot is now open and active. When you have put all required"
   %MESSAGE "details for plotting on the screen use ""Close plot..."" to create the plot."
   %MESSAGE
   _X_STATUS READY
   %FILE WRITE TOGGLE OFF TOG_HAR_INACTIVE;TOGGLE ON TOG_HAR_ACTIVE
%ENDMACRO

%MACRO _HA_DISPLAY_ERR
   %ENABLE CONTINUE
   %DISPLAY NUMBER 3
   %TEST $MOANED
      %ELSE %DISPLAY DELETE
   %DISABLE CONTINUE
   %DISPLAY NUMBER 1
   %ANNOTATION DISPLAY 1
   _XGIS_DEFAULT
%ENDMACRO

%MACRO _HA_PLOT_CLOSE
!
   %TEST $RESPOND
      %JTRUE _X_ERROR RESPOND
!
   %TEST X_HA_PLOT_STATUS = 0
      %JTRUE _X_ERROR GEN "A plot has not been opened"

   _X_CONFIRM "Do you really want to close this plot??"

   %TEST OK
      %ABORT FALSE

   _X_STATUS WORKING
!
! set annotation overlay and colour for border, arrow, etc
   %ANNOTATION OVERLAY 'HA_ACOL_OVER
   %ANNOTATION COLOUR 'HA_ACOL_COL
!
! create preview window
!
   %TEST HF_PREVIEW
      %JFALSE .SAVE_MAXF

   %AFTER ABORT _HA_DISPLAY_ERR
   %AFTER ERROR _HA_DISPLAY_ERR
   _HF_PREVIEW

.SAVE_MAXF:
   %LET HA_MAXF='$MAXFSN1
   %PLOT CLIP 0
   %PLOT ON
!
   %TEST HA_BORDER_FLG
      %THEN _HF_PROCESS LSL$XGIS_SHORT_ROOT:[LOOKUP]XGIS_BORDER.PDL
   %TEST HA_ARROW_FLG
      %THEN _HF_PROCESS LSL$XGIS_SHORT_ROOT:[LOOKUP]XGIS_ARROW.PDL
   %TEST HA_TITLE_FLG
      %THEN _HF_PROCESS LSL$XGIS_SHORT_ROOT:[LOOKUP]XGIS_TITLE.PDL
   %TEST HA_SCALE_FLG 
      %THEN _HF_PROCESS LSL$XGIS_SHORT_ROOT:[LOOKUP]XGIS_SCALE.PDL
   %TEST HA_LEGEND_FLG 
      %THEN _HF_PROCESS LSL$XGIS_SHORT_ROOT:[LOOKUP]XGIS_LEGEND.PDL
   %TEST HA_ANNO_FILE<>""
      %THEN _HF_PROCESS 'HA_ANNO_FILE
!
! are the next two lines necessary?
!
   %TEST X_HA_PLOT_STATUS <> 0
      %THEN %PLOT OFF

   %PLOT CLOSE
!
! If the plotter type is postscript then join the temp file containing the
! rotation with the plot file.
!
   %ASK STRING PAD 1 " "		! initialise $ASK_CHAR1
   %TEST HA_PLT_TYPE = PS
      %THEN %ASK STRING FILE_FIND LSL$XGIS_RESULT_ROOT:[PLOTFILES]'HA_PLOTFILE_NAME'.'HA_PLT_TYPE';
      %THEN %ASK STRING PARSE '$ASK_CHAR1' VERSION
      %THEN %FILE CREATE 2 'HA_TEMP_FILE 
      %THEN %FILE SELECT 2
      %THEN %FILE WRITE $ APPEND LSL$XGIS_RESULT_ROOT:[PLOTFILES]'HA_PLOTFILE_NAME'.'HA_PLT_TYPE';'$ASK_CHAR1' -
      %THEN %FILE WRITE   LSL$XGIS_RESULT_ROOT:[PLOTFILES]'HA_PLOTFILE_NAME'_'$PID'.TMP
      %THEN %FILE WRITE $ DELETE LSL$XGIS_RESULT_ROOT:[PLOTFILES]'HA_PLOTFILE_NAME'.'HA_PLT_TYPE';'$ASK_CHAR1'
      %THEN %FILE WRITE $ RENAME LSL$XGIS_RESULT_ROOT:[PLOTFILES]'HA_PLOTFILE_NAME'_'$PID'.TMP -
      %THEN %FILE WRITE   LSL$XGIS_RESULT_ROOT:[PLOTFILES]'HA_PLOTFILE_NAME.'HA_PLT_TYPE';'$ASK_CHAR1'
      %THEN %FILE WRITE $ DELETE 'HA_TEMP_FILE';*
      %THEN %FILE CLOSE 2
      %THEN %SPAWN @'HA_TEMP_FILE
!
   %DISABLE NARROW
   %LET X_HA_PLOT_STATUS = 0
!
   %TEST $MAXFSN1='HA_MAXF
      %JTRUE .RESET_FC
!
! delete any features constructed for annotation purposes
!
   _X_SEL_SAVE
!
   %SELECT ALL
   %SELECT MAP 1
   %DESELECT FSN 1,'HA_MAXF
!
   %ENABLE CONTINUE
   %TEST DEBUG # %ELSE %DISABLE INFORM
   %SEARCH ALL
   %TEST $FOUND
      %JFALSE .END_DEL
.NEXT_DEL:
   %DELETE
   %SEARCH NEXT
   %TEST $FOUND
      %JTRUE .NEXT_DEL
!
.END_DEL:
   %DISABLE CONTINUE
   %ENABLE INFORM

   _X_SEL_RESTORE		! restore selections
!
.RESET_FC:			! reset construction FC
   %TEST $GT_FC 'X_SET_FC=10
      %THEN %SET TEXT 'X_SET_FC'
      %ELSE %SET FC 'X_SET_FC
!
   %TEST DEBUG
      %ELSE %DISABLE INFORM
   @XGIS_'HA_PLT_TYPE'_PLT_CLOSE
   %ENABLE INFORM
!
   %PING
   %MESSAGE
   %TEST HA_QUEUE = "NOQUEUE"
   %OR HA_PLOTFILE_ONLY
      %THEN %MESSAGE Plot file 'HA_PLOTFILE_NAME created.
      %ELSE %MESSAGE Plot queued to queue 'HA_QUEUE for plotting on the 'HA_PLT_NAME plotter
   %MESSAGE
!
   %TEST HF_PREVIEW
      %JFALSE .END
   %FILE SELECT 1
   %FILE WRITE ADD BOX_HAR_PREVIEW_END
   %RESPOND

   %DISPLAY NUMBER 3
   %DISPLAY DELETE
   %DISPLAY NUMBER 1
   %AFTER ABORT _XGIS_DEFAULT
   %AFTER ERROR _XGIS_DEFAULT
!
.END:
   _X_STATUS READY
   %FILE WRITE TOGGLE OFF TOG_HAR_INACTIVE;TOGGLE OFF TOG_HAR_ACTIVE
   %ANNOTATION LOCATION 0
   %JUMP _XGIS_END
%ENDMACRO
!
%MACRO _HA_PLOT_CANCEL
!
   %TEST $RESPOND
      %JTRUE _X_ERROR RESPOND
!
   %TEST X_HA_PLOT_STATUS = 0
      %JTRUE _X_ERROR GEN "A plot has not been opened"

   _X_CONFIRM "Do you really want to cancel current plot??"

   %TEST OK
      %ABORT FALSE

   %PLOT CLOSE
   %LET X_HA_PLOT_STATUS = 0
   %TEST HA_QUEUE = "NOQUEUE"
   %OR HA_PLOTFILE_ONLY
      %THEN %ROUTINE 101 49 LSL$XGIS_RESULT_ROOT:[PLOTFILES]'HA_PLOTFILE_NAME.'HA_PLT_TYPE;
      %THEN %ROUTINE 101 49 LSL$XGIS_RESULT_ROOT:[PLOTFILES]'HA_PLOTFILE_NAME'_'$PID'.TMP;
   %FILE SELECT 1
   %FILE WRITE TOGGLE OFF TOG_HAR_INACTIVE;TOGGLE OFF TOG_HAR_ACTIVE
   %JUMP _X_WARN "Current plot has been cancelled" L
%ENDMACRO
!
%MACRO _HA_PLOT_INFO
!
   %TEST X_HA_PLOT_STATUS <> 0
      %JTRUE _X_ERROR GEN "A plot is already open"
!
! See if the chosen annotation overlay exists. If not tell user to choose one that does.
   %TEST X_PLANES 'HA_ACOL_OVER > 0
      %ELSE _X_ERROR GEN "Overlay selected for plot annotations does not exist."
      %ELSE %MESSAGE "Select another overlay/colour combination from the"
      %ELSE %MESSAGE "ANNOTATION option of the DEFINE PLOT task."
      %ABORT FALSE
!
   %TEST HA_QUEUE = NOQUEUE
   %AND HA_PLOTFILE_ONLY = 0
      %THEN _X_WARN "Plotter 'HA_PLT_NAME has no queue so a plotfile will be created." L
!
! Set default plot file spec (NAME only) if none given
   %TEST HA_PLOTFILE_NAME = ""
      %THEN %LET HA_PLOTFILE_NAME = XGIS_'$PID'
!
! Report values specified in Define Plot
!
   %FILE SELECT 1
   %FILE WRITE LABEL LABEL "'HA_PLOT_NUM" TXT_HAR_PLOT_NUMBER
!
   %TEST HA_PLOTFILE_ONLY
   %OR HA_QUEUE = NOQUEUE
      %THEN %LET STRING="YES - Filename is: 'HA_PLOTFILE_NAME"
      %ELSE %LET STRING="NO"
   %FILE WRITE LABEL LABEL "'STRING" TXT_HAR_PLOTFILE
      %THEN %LET STRING="NO"
      %ELSE %LET STRING="YES - Queue is 'HA_QUEUE"
   %FILE WRITE LABEL LABEL "'STRING" TXT_HAR_QUEUE
!
   _HA_SET_SIZE
!
   %TEST HA_ASIZE>=0
      %THEN %LET STRING="A'HA_ASIZE"
      %ELSE %LET STRING="'HA_XSIZE x 'HA_YSIZE (mm)"
!
   %TEST HA_ASIZE<0
   %AND I=1
      %THEN %RASP
      %THEN %LET STRING="'STRING' (reduced to plotter size)"
!
   %FILE WRITE LABEL LABEL "'STRING" TXT_HAR_PAPERSIZE
!
   %FILE WRITE LABEL LABEL "'HA_RESOLUTION" TXT_HAR_RES
!
   %TEST HA_AUTO_SCALE
      %THEN %FILE WRITE LABEL LABEL "Auto Scale" TXT_HAR_SCALE
      %ELSE %FILE WRITE LABEL LABEL "'HA_SCALE_VAL" TXT_HAR_SCALE
!
   %TEST HA_ASPECT
      %THEN %FILE WRITE LABEL LABEL "Portrait" TXT_HAR_ASPECT
      %ELSE %FILE WRITE LABEL LABEL "Landscape" TXT_HAR_ASPECT
!
   %FILE WRITE LABEL LABEL "'HA_PLT_NAME" TXT_HAR_PLOTTER
!
   %FILE WRITE ADD BOX_HAR_INFO
%ENDMACRO
!
%MACRO _HA_GET_PLOTTERS
!
   %FILE SELECT 1
   %FILE WRITE LIST CLEAR LST_HAR_PLOTTERS
!
! Open plotter setup file.
   %ASK STRING TRNLNM LSL$XGIS_PLOTTER_SETUP
   %FILE OPEN 2 '$ASK_CHAR1
!
   %LET I=0		! Initialise count of plotters			
!
! Save "!" in a variable so it can be detected in strings
   %ASK CHARACTER 33
   %LET EXCLAMATION_MARK='$ASK_CHAR1
!
! load each plotter into the list box
!
   %LET _INT2=0
.NEXT_PLOTTER:
!
! Initialise variables which will hold the optional parameters.
   %LET _CHAR1 = "NULL"	! PRINT command
   %LET _CHAR2 = "NULL"	! Prefix plot file
   %LET _CHAR3 = "NULL"	! Suffix plot file
   %LET _CHAR4 = "NULL"	! X edge offset
   %LET _CHAR5 = "NULL"	! Y edge offset
   %LET I='I+1		! count of plotters
   %FILE SELECT 2
!
! Get the records holding parameters for each plotter.
   _HA_GET_REC HA_PLT_NAME HA_PLT_TYPE HA_QUEUE HA_DEVICE HA_MAX_XSIZE	HA_MAX_YSIZE OPTIONS
!
! Exit if end of file.
   %TEST $EOF
      %JTRUE .EXIT
!
   %JUMP .NEXT_PLOTTER
!
.EXIT:
   %FILE CLOSE 2
   %FILE SELECT 1
   %TEST I<1
      %THEN %FILE WRITE LIST CLEAR LST_HAR_PLOTTERS
      %JTRUE _X_ERROR GEN "Hardcopy setup file is empty. See system manager."
%ENDMACRO
!
%MACRO _HA_GET_REC
!
! Macro to get parameters for current plotter being read from plotter
! setup file.
!
! Parameter variables:
!	P1 - HA_PLT_NAME	! identifying name for plotter   
!	P2 - HA_PLT_TYPE	! .LCM
!	P3 - HA_QUEUE		! Print or batch queue
!	P4 - HA_DEVICE		! device name
!	P5 - HA_MAX_XSIZE	! X extent
!	P6 - HA_MAX_YSIZE	! Y extent
! Parameter:
!	P7 - OPTIONS		! optional parameters
!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!
   %LET N = 0		 ! Initialise count of parameters
!
.NEXT_REC:
!
   %LET N = 'N + 1
   %TEST N > 7		 ! If we've done the OPTIONS parameter exit.
      %JTRUE .EXIT
   %LET STRING = '$P'N	 ! save current parameter.
   %LET _INT1 = 0	 ! initialise optional parameters flag
   %LET M = 0		 ! Initialise count of options
!
   %TEST _INT2
      %ELSE %FILE READ
      %ELSE %LET CH  = '$FILELINE
!
.NEXT_LINE:
!
! Exit if EOF.
   %TEST $EOF
      %JTRUE .EXIT
!
! lookf for ! 
   %ASK STRING INDEX "'CH" "'EXCLAMATION_MARK"
!
! If found in first column we know its a comment, so get next line.
   %TEST $ASK_INT1 = 1
      %THEN %FILE READ
      %THEN %LET CH  = '$FILELINE
      %JTRUE .NEXT_LINE
!
   %LET J = '$ASK_INT1 - 1
   %ASK STRING PAD 1 " "		! initialise $ASK_CHAR1
!
! If a "!" was found then extract preceding characters and trim
   %TEST J > 0
      %THEN %ASK STRING EXTRACT 1 'J "'CH"
      %THEN %ASK STRING TRIM "'$ASK_CHAR1"
! ...otherwise just trim whole line.
         %ELSE %ASK STRING TRIM "'CH"
      %ASK STRING UPCASE "'$ASK_CHAR1"
!
! If null then this is a blank line
   %TEST $ASK_CHAR1 = ""
      %THEN %FILE READ
      %THEN %LET CH  = '$FILELINE
      %JTRUE .NEXT_LINE
!
! Start of the optional plot parameters?
   %TEST $ASK_CHAR1 = "OPTIONS"
      %THEN %FILE READ
      %THEN %LET CH  = '$FILELINE
      %THEN %LET _INT1 = 1 	! set optional parameters flag
      %JTRUE .NEXT_LINE
!
! End of options, so as this will be the last record for this plotter, exit.
   %TEST $ASK_CHAR1 = "END_OPTIONS"
      %THEN %FILE READ
      %THEN %LET CH  = '$FILELINE
      %THEN %LET _INT1 = 0
      %THEN %LET M = 0
      %JTRUE .EXIT
!
! If we're currently doing OPTIONS haven't found it for current plotter
! this must be the last record for this plotter so we exit.
   %TEST STRING = OPTIONS
   %AND _INT1 = 0
      %THEN %LET STRING = ""
      %THEN %LET _INT2 = 1
      %JTRUE .EXIT
!
! If we're reading options then increment the options count
   %TEST _INT1
      %THEN %LET M = 'M + 1
   %TEST M > 'HA_MAX_OPTIONS
      %JTRUE _X_ERROR FAIL "Too many items in an OPTIONS entry in hardcopy setup file. See system manager."
   %TEST M > 0
      %THEN %LET _CHAR'M = '$ASK_CHAR1 	! assign option to _char"n"
      %THEN %FILE READ
      %THEN %LET CH = '$FILELINE
      %JTRUE .NEXT_LINE
!
   %LET 'STRING = '$ASK_CHAR1
   %LET _INT2 = 0
   %JUMP .NEXT_REC
!
.EXIT:
!
! Add to list box so long as all parameters have been considered
   %TEST N = 7
      %THEN %FILE SELECT 1
      %THEN %FILE WRITE LIST ADD "'HA_PLT_NAME" "SEND _HA_PLTSPEC 'HA_DEVICE ""'HA_PLT_NAME"" 'HA_PLT_TYPE 'HA_QUEUE 'HA_MAX_XSIZE 'HA_MAX_YSIZE '_CHAR1 '_CHAR2 '_CHAR3 '_CHAR4 '_CHAR5" LST_HAR_PLOTTERS
!
   %LET M = 0
   %LET _INT1 = 0
!
%ENDMACRO
!
%MACRO _HA_PLTSPEC
   %LET HA_DEVICE='$P1
   %LET HA_PLT_NAME='$P2
   %LET HA_PLOTFILE_NAME = ""
   %LET HA_PLT_TYPE = '$P3
   %LET HA_QUEUE = '$P4
   %LET HA_MAX_XSIZE = '$P5
   %LET HA_MAX_YSIZE = '$P6
   %LET HA_PRINT_CMD = '$P7
   %LET HA_PREFIX_PLT = '$P8
   %LET HA_SUFFIX_PLT = '$P9
   %LET HA_X_EDGE_OFF = '$P10
   %LET HA_Y_EDGE_OFF = '$P11
%ENDMACRO
!
%MACRO _HA_GET_FILENAME 
!
   %TEST $RESPOND
      %JTRUE _X_ERROR RESPOND
!
   %LET STRING = "'HA_PLOTFILE_NAME "
   %FILE SELECT 1
   %FILE WRITE ADD BOX_HAR_PLOTFILE
   %FILE WRITE TEXT VALUE "'HA_PLOTFILE_NAME " TXT_HAR_PLT_FILENAME
   %RESPOND
!
   %TEST STRING = " "
      %JTRUE .EXIT
   %AFTER ERROR _HA_FILENAME_ERR
   %ASK STRING PARSE "'STRING" NODE
   %TEST $ASK_CHAR1 = ""
      %JFALSE .SPEC_ERROR
   %ASK STRING PARSE "'STRING" DEVICE
   %TEST $ASK_CHAR1 = ""
      %JFALSE .SPEC_ERROR
   %ASK STRING PARSE "'STRING" DIRECTORY
   %TEST $ASK_CHAR1 = ""
      %JFALSE .SPEC_ERROR
   %ASK STRING PARSE "'STRING" TYPE
   %TEST $ASK_CHAR1 = ""
      %JFALSE .SPEC_ERROR
   %ASK STRING PARSE "'STRING" VERSION
   %TEST $ASK_CHAR1 = ""
      %JFALSE .SPEC_ERROR
   %JUMP .EXIT
!
.SPEC_ERROR:
   %MESSAGE Error - filename must be the NAME spec only
   %JUMP _HA_GET_FILENAME 
!
.EXIT:
   %ASK STRING UPCASE 'STRING
   %LET STRING = '$ASK_CHAR1
   %LET HA_PLOTFILE_NAME = 'STRING
   %AFTER ERROR _XGIS_DEFAULT
%ENDMACRO
!
%MACRO _HA_FILENAME_ERR
   _X_WARN "ERROR - Invalid filename" L
   _HA_GET_FILENAME
%ENDMACRO
!
%MACRO _HA_COPY
   %LET N = 'HA_PLOT_NUM
.NEXT_COPY:
   %FILE WRITE "'$P1"
   %TEST N > 1
      %THEN %LET N = 'N - 1
      %JTRUE .NEXT_COPY
%ENDMACRO
!
%MACRO _HA_STANDARD_PLT
!
! first toggle off current settings
   %FILE SELECT 1
   %TEST HA_ASIZE>=0
      %THEN %FILE WRITE TOGGLE OFF TOG_HAR_A'HA_ASIZE
      %ELSE %FILE WRITE TOGGLE OFF TOG_HAR_SPEC
   %FILE WRITE TOGGLE OFF TOG_HAR_AUTO_SCALE;TOGGLE OFF TOG_HAR_SPEC_SCALE
   %FILE WRITE TOGGLE OFF TOG_HAR_SCALE_200;TOGGLE OFF TOG_HAR_SCALE_500
   %FILE WRITE TOGGLE OFF TOG_HAR_SCALE_1250;TOGGLE OFF TOG_HAR_SCALE_2500
   %FILE WRITE TOGGLE OFF TOG_HAR_SCALE_10000;TOGGLE OFF TOG_HAR_SCALE_25000
   %FILE WRITE TOGGLE OFF TOG_HAR_SCALE_50000;TOGGLE OFF TOG_HAR_SCALE_100000
   %FILE WRITE TOGGLE OFF TOG_HAR_PORTRAIT;TOGGLE OFF TOG_HAR_LANDSCAPE
   %FILE WRITE TOGGLE OFF TOG_HAR_HIGHRES;TOGGLE OFF TOG_HAR_MEDRES
   %FILE WRITE TOGGLE OFF TOG_HAR_LOWRES
!
! read and set menus for standard plot
   %FILE OPEN 2 LSL$XGIS_SHORT_ROOT:[LOOKUP]XGIS_STANDARD_PLOT.DAT
!
! A series size (-1 for user defined)
   %FILE READ
   %TEST $EOF#%JTRUE .EXIT
   %LET HA_ASIZE = '$FILELINE
!
   %FILE READ
   %TEST $EOF#%JTRUE .EXIT
   %TEST HA_ASIZE<0
      %THEN %LET HA_SPEC_XSIZE = '$FILELINE
      %ELSE %LET HA_SPEC_XSIZE = 100
!
   %FILE READ
   %TEST $EOF#%JTRUE .EXIT
   %TEST HA_ASIZE<0
      %THEN %LET HA_SPEC_YSIZE = '$FILELINE
      %ELSE %LET HA_SPEC_YSIZE = 100
!
   %FILE SELECT 1
   %LET I=('HA_SPEC_XSIZE+9.9)/10
   %FILE WRITE SCALE VALUE 'I SCL_HAR_HSIZE
   %LET I=('HA_SPEC_YSIZE+9.9)/10
   %FILE WRITE SCALE VALUE 'I SCL_HAR_VSIZE
   %TEST HA_ASIZE < 0
      %THEN %FILE WRITE TOGGLE ON TOG_HAR_SPEC
      %ELSE %FILE WRITE TOGGLE ON TOG_HAR_A'HA_ASIZE
!
! Standard scale
   %FILE SELECT 2
   %FILE READ
   %TEST $EOF
      %JTRUE .EXIT
   %LET HA_SCALE_VAL = '$FILELINE
   %FILE SELECT 1
   %TEST HA_SCALE_VAL = 0
      %THEN %LET HA_AUTO_SCALE = 1
      %THEN %FILE WRITE TOGGLE ON TOG_HAR_AUTO_SCALE
      %JTRUE .ASPECT
   %LET HA_AUTO_SCALE = 0
   %TEST HA_SCALE_VAL = 200
      %THEN %FILE WRITE TOGGLE ON TOG_HAR_SCALE_200
      %JTRUE .ASPECT
   %TEST HA_SCALE_VAL = 500
      %THEN %FILE WRITE TOGGLE ON TOG_HAR_SCALE_500
      %JTRUE .ASPECT
   %TEST HA_SCALE_VAL = 1250
      %THEN %FILE WRITE TOGGLE ON TOG_HAR_SCALE_1250
      %JTRUE .ASPECT
   %TEST HA_SCALE_VAL = 2500
      %THEN %FILE WRITE TOGGLE ON TOG_HAR_SCALE_2500
      %JTRUE .ASPECT
   %TEST HA_SCALE_VAL = 10000
      %THEN %FILE WRITE TOGGLE ON TOG_HAR_SCALE_10000
      %JTRUE .ASPECT
   %TEST HA_SCALE_VAL = 25000
      %THEN %FILE WRITE TOGGLE ON TOG_HAR_SCALE_25000
      %JTRUE .ASPECT
   %TEST HA_SCALE_VAL = 50000
      %THEN %FILE WRITE TOGGLE ON TOG_HAR_SCALE_50000
      %JTRUE .ASPECT
   %TEST HA_SCALE_VAL = 100000
      %THEN %FILE WRITE TOGGLE ON TOG_HAR_SCALE_100000
      %JTRUE .ASPECT
   %FILE WRITE TOGGLE ON TOG_HAR_SPEC_SCALE
   %FILE WRITE TEXT VALUE "'HA_SCALE_VAL" TXT_HAR_SPEC_SCALE
!
.ASPECT:
   %FILE SELECT 2
   %FILE READ
   %TEST $EOF#%JTRUE .EXIT
   %LET HA_ASPECT = '$FILELINE
   %FILE SELECT 1
   %TEST HA_ASPECT
      %THEN %FILE WRITE TOGGLE ON TOG_HAR_PORTRAIT
      %ELSE %FILE WRITE TOGGLE ON TOG_HAR_LANDSCAPE
!
! annotation settings
   %FILE SELECT 2
   %FILE READ
   %TEST $EOF#%JTRUE .EXIT
   %LET HA_TITLE_FLG = '$FILELINE
   %FILE READ
   %TEST $EOF#%JTRUE .EXIT
   %LET HA_BORDER_FLG = '$FILELINE
   %FILE READ
   %TEST $EOF#%JTRUE .EXIT
   %LET HA_ARROW_FLG = '$FILELINE
   %FILE READ
   %TEST $EOF#%JTRUE .EXIT
   %LET HA_SCALE_FLG = '$FILELINE
   %FILE READ
   %TEST $EOF#%JTRUE .EXIT
   %LET HA_ANNO_FILE = '$FILELINE
   %FILE READ
   %TEST $EOF#%JTRUE .EXIT
   %LET HA_TITLE = '$FILELINE
!
   %FILE READ
   %TEST $EOF#%JTRUE .EXIT
   %LET HA_PRODUCT = '$FILELINE
   %ASK STRING LENGTH "'HA_PRODUCT'"
   %LET L = '$ASK_INT1
   %ASK STRING INDEX "'HA_PRODUCT'" V1.2
   %LET N = '$ASK_INT1 - 1
   %ASK STRING PAD 1 " "		! initialise $ASK_CHAR1
   %TEST N <> 0
      %THEN %ASK STRING EXTRACT 1 'N "'HA_PRODUCT'"
      %LET _CHAR1 = "'$ASK_CHAR1'"
      %THEN %LET M = 'N + 5
      %THEN %ASK STRING EXTRACT 'M 'L "'HA_PRODUCT'"
      %LET _CHAR2 = "'$ASK_CHAR1'"
      %THEN %LET HA_PRODUCT = '_CHAR1''X_VERSION''_CHAR2'
!
   %FILE READ
   %TEST $EOF#%JTRUE .EXIT
   %LET HA_DEPT = '$FILELINE
   %FILE READ
   %TEST $EOF#%JTRUE .EXIT
   %LET HA_ACOL_OVER = '$FILELINE
   %FILE READ
   %TEST $EOF#%JTRUE .EXIT
   %LET HA_ACOL_COL = '$FILELINE
!
! update menus
   %FILE SELECT 1
   %TEST HA_TITLE_FLG=1
      %THEN %FILE WRITE TOGGLE ON TOG_HAR_TB
      %ELSE %FILE WRITE TOGGLE OFF TOG_HAR_TB
   %TEST HA_BORDER_FLG=1
      %THEN %FILE WRITE TOGGLE ON TOG_HAR_BORD
      %ELSE %FILE WRITE TOGGLE OFF TOG_HAR_BORD
   %TEST HA_ARROW_FLG=1
      %THEN %FILE WRITE TOGGLE ON TOG_HAR_ARRO
      %ELSE %FILE WRITE TOGGLE OFF TOG_HAR_ARRO
   %TEST HA_SCALE_FLG=1
      %THEN %FILE WRITE TOGGLE ON TOG_HAR_SCAL
      %ELSE %FILE WRITE TOGGLE OFF TOG_HAR_SCAL
   %TEST HA_ANNO_FILE=""
      %THEN %FILE WRITE TOGGLE OFF TOG_HAR_ANNO
      %ELSE %FILE WRITE TOGGLE ON TOG_HAR_ANNO
      %ELSE %FILE WRITE LIST SELECT "'HA_ANNO_FILE" LST_HAR_ANNO_LIST
!
   %FILE WRITE TEXT VALUE "'HA_TITLE " TXT_HAR_TITLE
   %FILE WRITE TEXT VALUE "'HA_PRODUCT " TXT_HAR_PROD
   %FILE WRITE TEXT VALUE "'HA_DEPT " TXT_HAR_DEPT
!
   %FILE WRITE TOGGLE OFF TOG_HAR_ANN_OV1;TOGGLE OFF TOG_HAR_ANN_OV2
   %FILE WRITE TOGGLE OFF TOG_HAR_ANN_OV3;TOGGLE OFF TOG_HAR_ANN_OV4
   %FILE WRITE TOGGLE ON TOG_HAR_ANN_OV'HA_ACOL_OVER
!
   %FILE SELECT 2
   %FILE READ
   %TEST $EOF#%JTRUE .EXIT
   %LET HA_PLOTFILE_ONLY = '$FILELINE
   %FILE SELECT 1
   %TEST HA_PLOTFILE_ONLY
      %THEN %FILE WRITE TOGGLE ON TOG_HAR_PF_ONLY
      %ELSE %FILE WRITE TOGGLE OFF TOG_HAR_PF_ONLY
!
   %FILE SELECT 2
   %FILE READ
   %TEST $EOF#%JTRUE .EXIT
   %LET HA_PLT_NAME='$FILELINE				! PLOTTER
   %FILE SELECT 1
   %FILE WRITE LIST SELECT "'$FILELINE" LST_HAR_PLOTTERS
!
   %FILE SELECT 2
   %FILE READ
   %TEST $EOF#%JTRUE .EXIT
   %LET HA_PLT_TYPE = '$FILELINE
!
   %FILE READ
   %TEST $EOF#%JTRUE .EXIT
   %LET HA_QUEUE = '$FILELINE
!
   %FILE READ
   %TEST $EOF#%JTRUE .EXIT
   %LET HA_DEVICE = '$FILELINE
!
   %FILE READ
   %TEST $EOF#%JTRUE .EXIT
   %LET HA_MAX_XSIZE = '$FILELINE
!
   %FILE READ
   %TEST $EOF#%JTRUE .EXIT
   %LET HA_MAX_YSIZE = '$FILELINE
!
   %FILE READ
   %TEST $EOF#%JTRUE .EXIT
   %LET HA_RESOLUTION = '$FILELINE
!
   %FILE SELECT 1
   %TEST HA_RESOLUTION = HIGH
      %THEN %FILE WRITE TOGGLE ON TOG_HAR_HIGHRES
      %ELSE %FILE WRITE TOGGLE OFF TOG_HAR_HIGHRES
   %TEST HA_RESOLUTION = MEDIUM
      %THEN %FILE WRITE TOGGLE ON TOG_HAR_MEDRES
      %ELSE %FILE WRITE TOGGLE OFF TOG_HAR_MEDRES
   %TEST HA_RESOLUTION = LOW
      %THEN %FILE WRITE TOGGLE ON TOG_HAR_LOWRES
      %ELSE %FILE WRITE TOGGLE OFF TOG_HAR_LOWRES
!
   %FILE SELECT 2
   %FILE READ
   %TEST $EOF#%JTRUE .EXIT
   %LET HA_WINDOWED_PLOT = '$FILELINE
!
   %FILE SELECT 1
   %TEST HA_WINDOWED_PLOT
      %THEN %FILE WRITE TOGGLE ON TOG_HAR_WIN_PLOT
      %ELSE %FILE WRITE TOGGLE OFF TOG_HAR_WIN_PLOT
!
   %FILE SELECT 2
   %FILE READ
   %TEST $EOF#%JTRUE .EXIT
   %LET HA_LEGEND_FLG = '$FILELINE
!
   %FILE SELECT 1
   %TEST HA_LEGEND_FLG
      %THEN %FILE WRITE TOGGLE ON TOG_HAR_LEGE
      %ELSE %FILE WRITE TOGGLE OFF TOG_HAR_LEGE
!
   %FILE SELECT 2
   %FILE READ
   %TEST $EOF#%JTRUE .EXIT
   %LET HA_PRINT_CMD = '$FILELINE
!
   %FILE READ
   %TEST $EOF#%JTRUE .EXIT
   %LET HA_PREFIX_PLT = '$FILELINE
!
   %FILE READ
   %TEST $EOF#%JTRUE .EXIT
   %LET HA_SUFFIX_PLT = '$FILELINE
!
   %FILE READ
   %TEST $EOF#%JTRUE .EXIT
   %LET HA_X_EDGE_OFF = '$FILELINE
!
   %FILE READ
   %TEST $EOF#%JTRUE .EXIT
   %LET HA_Y_EDGE_OFF = '$FILELINE
!
.EXIT:
   %FILE CLOSE 2
%ENDMACRO

%MACRO _HA_ERROR
   %FILE SELECT 1
   %JUMP .'$P1
.RANGE:
   %FILE WRITE TOGGLE OFF TOG_HAR_INACTIVE;TOGGLE OFF TOG_HAR_ACTIVE
   %LET X_HA_PLOT_STATUS = 0
   %MESSAGE
   %MESSAGE Annotation goes outside the map limits. Please reduce the
   %MESSAGE area being plotted or select other annotation options.
   %MESSAGE
   %ABORT ALWAYS
!
.SETUP:
   %FILE WRITE LIST CLEAR LST_HAR_PLOTTERS
   %JUMP _X_ERROR GEN "Hardcopy setup file has missing entry. See system manager."
%ENDMACRO
!
%MACRO _HA_PLOTFILE
!
   %FILE SELECT 1
   %FILE WRITE LIST CLEAR LST_HAR_PLOTFILE_LIST
!
.NEXT_FILE:
   %ASK STRING FILE_FIND LSL$XGIS_RESULT_ROOT:[PLOTFILES]*.'HA_PLT_TYPE;
   %TEST $ASK_CHAR1 = ""
      %JTRUE .EXIT
   %ASK STRING PARSE '$ASK_CHAR1 NAME
   %FILE WRITE LIST ADD "'$ASK_CHAR1'" "SEND %LET HA_RECALL_FILE = '$ASK_CHAR1'" LST_HAR_PLOTFILE_LIST
   %JUMP .NEXT_FILE
!
.EXIT:
   %FILE WRITE ADD BOX_HAR_PLOTFILE_LIST
%ENDMACRO
!
%MACRO _HA_RECALL
!
! create a batch operation to plot a saved plotfile
!
   %TEST HA_RECALL_FILE = ""
      %JTRUE _X_ERROR GEN "No plot file selected"
!
   %TEST X_HA_PLOT_STATUS <> 0
      %JTRUE _X_ERROR GEN "A plot is already open"
!
   %TEST HA_QUEUE=NOQUEUE
      %JTRUE _X_ERROR GEN "No queue defined for plotter 'HA_PLT_NAME'"
!
   %LET HA_SEQ_NUM = 'HA_SEQ_NUM + 1
!
   %TEST DEBUG
      %ELSE %DISABLE INFORM
   @XGIS_'HA_PLT_TYPE'_PLT_RECALL
   %ENABLE INFORM
!
%ENDMACRO
!
!------------------------------------------------------------------------------
!
! macro to test whether the specified queue is a batch or print queue
! and create a suitable job to submit.
!
! P1 - either the plot file name or recall file name
!
%MACRO _HA_SELECT_QUE
!
! Get /AFTER start time for batch job - set default
   %FILE SELECT 1
   %FILE WRITE FETCH BOX_HAR_JOB_TIME
   _X_INI_JOBTIME
   %FILE WRITE TEXT VALUE "'X_JOBTIME'" TXT_HAR_JOB_TIME
   %FILE WRITE ADD BOX_HAR_JOB_TIME
   %RESPOND
! test job start time is valid, if not just submit it now
   %ASK STRING ISDATETIME 'X_JOBTIME'
   %TEST $ASK_INT1
      %JTRUE .DATE_OK
!
   %MESSAGE  "Invalid datetime input ""'X_JOBTIME'"". Defaulting to now."
   %LET X_JOBTIME='$DATETIME'
!
! Now write the DCL file to submit the plot file to the PS batch queue
! or print queue.
!
.DATE_OK:
   %LET STRING = LSL$XGIS_SITE_ROOT:[COM]XGIS_HAR_JOB_'$PID'_'HA_SEQ_NUM'.COM
   %FILE CREATE 2 'STRING
   %FILE SELECT 2
!
! get the full file name of the plot file (including version number)
! so that it can be referenced unambiguously
   %ASK STRING FILE_FIND LSL$XGIS_RESULT_ROOT:[PLOTFILES]'$P1
   %LET _CHAR1 = '$ASK_CHAR1
   %LET _CHAR3 = ""
   %LET _CHAR4 = ""
   %TEST HA_PREFIX_PLT = ""
   %OR HA_PREFIX_PLT = "NULL"
      %ELSE _CHAR3 = LSL$XGIS_ROOT:[LOOKUP]'HA_PREFIX_PLT,
   %TEST HA_SUFFIX_PLT = ""
   %OR HA_SUFFIX_PLT = "NULL"
      %ELSE _CHAR4 = ,LSL$XGIS_ROOT:[LOOKUP]'HA_SUFFIX_PLT
!
! see whether plot queue is a print queue or a batch queue.
!
   %ROUTINE 101 84 "'X_JOBTIME'"		! record /AFTER time
   %ASK STRING TRNLNM LSL$XGIS_HAR_QUEUE_TYPE
   %TEST $ASK_CHAR1 = BATCH
      %JFALSE .PRINT
   %FILE WRITE $ IF F$SEARCH("SYS$LOGIN:MY_XGIS_SESSIONINI.COM") .NES. "" THEN @SYS$LOGIN:MY_XGIS_SESSIONINI.COM
   %FILE WRITE $ ALLOCATE 'HA_DEVICE
! issue a COPY command for each copy to be plotted.
   _HA_COPY "$COPY '_CHAR3''_CHAR1''_CHAR4' 'HA_DEVICE'"
   %TEST $P2 = KEEP_FILE
      %ELSE %FILE WRITE $ DELETE '_CHAR1
   %FILE WRITE $ DEALLOCATE 'HA_DEVICE
   %FILE WRITE $ DELETE 'STRING';
   %FILE CLOSE 2
   %SPAWN $SUBMIT/QUEUE='HA_QUEUE/AFTER="'X_JOBTIME'"/LOG'X_BAT_OPT'/NOTIFY 'STRING'/DELETE
.PRINT:
   %TEST $P2 = KEEP_FILE
      %THEN %LET _CHAR2 = ""
      %ELSE %LET _CHAR2 = DELETE/
!
! See if an optional PRINT command was specified in plotter setup for this 
! plotter. If not then use default print command.
   %TEST HA_PRINT_CMD = ""
   %OR HA_PRINT_CMD = "NULL"
      %THEN %LET HA_PRINT_CMD = $PRINT/'_CHAR2'NOTIFY/QUEUE='HA_QUEUE/PARAMS=(PAGE_SIZE=A'HA_ASIZE''HA_PRINT_PARAMS')
   %TEST $ASK_CHAR1 = PRINT
      %THEN %FILE WRITE 'HA_PRINT_CMD'/'_CHAR2'NOTIFY/QUEUE='HA_QUEUE/AFTER="'X_JOBTIME'"/COPIES='HA_PLOT_NUM '_CHAR3''_CHAR1''_CHAR4'
      %THEN %FILE WRITE $ DELETE 'STRING';
      %THEN %FILE CLOSE 2
      %THEN %SPAWN $@'STRING'
!
   %TEST $ASK_CHAR1 <> BATCH
   %AND $ASK_CHAR1 <> PRINT
      %THEN _X_ERROR GEN "Queue 'HA_QUEUE is not a print or batch queue - see system manager"
!
%ENDMACRO
!
%MACRO _HA_SET_MENU
   %LET HF_ELEMENT='$P1
   %FILE SELECT 1
   %FILE WRITE SCALE VALUE 'HF_OX '$P1 SCL_HAR_ANNO_OX
   %FILE WRITE SCALE VALUE 'HF_OY '$P1 SCL_HAR_ANNO_OY
%ENDMACRO

%FILE SELECT 1
%FILE WRITE FETCH BOX_HAR_PLOTTERS
_HA_GET_PLOTTERS
%FILE SELECT 1
_HA_STANDARD_PLT
!
! See if logical name which sets up parameters for /PARAMS qualifier for
! print command has been defined.
%ASK STRING TRNLNM LSL$XGIS_PRINT_PARAMS
%TEST $ASK_CHAR1<> ""
   %THEN %LET HA_PRINT_PARAMS = ,'$ASK_CHAR1
!
_X_STATUS READY
_X_CHECKS ON
