C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1984-09-13 17:29:44.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL FUNCTION GETSTR(KEYSTR)	
C
***	IDENT	13SE84
***	MODULE	GETSTR
C
C	Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C	Created					RJH	12-SEP-1984
C
C Description
C
C    This function was designed for use by the program COMGEN, which
C is part of the LITES2 Command Interface. The purpose of the function
C is to read the first or key string on a command table line in the
C Macro source file.
C    The string is returned as a function argument. It is expected that
C it will be either a command macro ('$CMTAB', '$CMEND', or '$CMD') or
C a semi-colon (';') indicating a comment.
C    The function returns true and a message is output if an error
C occurs while reading the Macro file, or if the end of the file is
C reached.
C
	IMPLICIT NONE
C
C Included Parameter Files
C
***     PARAMETER/CGEN:LUN/		! logical unit constants
***     PARAMETER/CGEN:LEN/		! character string lengths
***     PARAMETER/CGEN:PUNC/		! character constants
C
C Arguments
C
	CHARACTER*(K)	KEYSTR		! key string
C
C Functions called
C
	INTEGER*4	FLRLIN		! reads a line from a file
	LOGICAL		RDCHS		! reads a character
	LOGICAL		RDCH		! reads a character
C
C Local Variables
C
	INTEGER*4	RETCOD		! file I/O return code
	INTEGER*4	IERR		! system error code
	INTEGER*4	I		! counter
	LOGICAL		ERROR		! read error ?
	LOGICAL		EOF		! end of file ?
	LOGICAL		EOLN		! end of line ?
	LOGICAL		SHORT		! short string finished ?
	BYTE		NXTCH		! next character
C
C Initialisation
C
	KEYSTR = BLANK
C
C Read line from input file
C
	RETCOD = FLRLIN(,,,IERR)
C
C See if end of file or error
C
	EOF = (RETCOD .EQ. -10)
	ERROR = ((RETCOD .LT. 0) .AND. (RETCOD .NE. -10))
C
C Error messages
C
	IF (ERROR) THEN
	   CALL EXPAND('Error reading from file ')
	   CALL WRITAP('on logical unit %N',MARLUN)
	   CALL LIB$SIGNAL(%VAL(IERR))
	ELSE IF (EOF) THEN
	   CALL EXPAND('Premature end of file ')
	   CALL WRITAP('on logiocal unit %N',MARLUN)
C
C Read key string
C
	ELSE
	   I = 1
	   EOLN = RDCHS(NXTCH)
	   KEYSTR(I:I) = CHAR(NXTCH)
	   IF (NXTCH .EQ. DOLLAR) THEN		! macro
10	      I = I + 1
	      EOLN = RDCH(NXTCH)
	      SHORT = (EOLN .OR. (NXTCH .EQ. SPACE) .OR.
     &		 (NXTCH .EQ. TAB))
	      IF ((I .LE. K) .AND. (.NOT. SHORT))
     &		 KEYSTR(I:I) = CHAR(NXTCH)
	      IF ((I .LT. K) .AND. (.NOT. SHORT)) GO TO 10
	   ENDIF
	ENDIF
C
C Assign function value
C
	GETSTR = (ERROR .OR. EOF)
C
C Return
C
	RETURN
	END
