	LOGICAL FUNCTION WRTGTO(ALL)	
C
***	IDENT	31OC85
***	MODULE	WRTGTO
C
C	Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
CMOD	Substring in SRCMOA now NASTY(MSG_	RJH	11-OCT-1984
C	Created					RJH	10-SEP-1984
C
C Description
C
C    This function was designed for use by the program COMGEN, which
C is part of the LITES2 Command Interface. The purpose of the function
C is to write a 'GO TO' statement to the Fortran source file.
C    The function returns true and an error message is output if an
C error occurs while the output file is being selected or written.
C
	IMPLICIT NONE
C
C Included Parameter Files
C
***     PARAMETER/CGEN:LUN/		! logical unit constants
***     PARAMETER/CGEN:LEN/		! character string lengths
C
C Local Parameters
C
	INTEGER*4	MOALIN		! no. of moan lines
	PARAMETER	(MOALIN = 5)
C
C Arguments
C
	INTEGER*4	ALL		! total no. of commands
C
C Functions called
C
	LOGICAL		WRTBLK		! writes a block of text
	INTEGER*4	FLWSEL		! selects file for writing
	INTEGER*4	FLWLIN		! writes buffer to file
C
C Local Variables
C
	INTEGER*4	RETCOD		! file I/O return code
	INTEGER*4	IERR		! system error code
	INTEGER*4	I		! counter
	INTEGER*4	J		! counter
	LOGICAL		ERROR		! error ?
	CHARACTER*(S)	SRCMOA(MOALIN)	! moan code
C
C Data Statements
C
	DATA SRCMOA/
     &	'C',
     &	'C Unknown command number',
     &	'C',
     &	'        CALL NASTY(MSG_UNKCMDNUM)',
     &	'        RETURN'/
C
C Select file for writing
C
	RETCOD = FLWSEL(SRCLUN,IERR)
	ERROR = (RETCOD .NE. 0)
	IF (ERROR) THEN
	   CALL EXPAND('Error selecting file ')
	   CALL WRITAP('for writing on logical unit %N',SRCLUN)
	ELSE
C
C Write GO TO statement
C
	   CALL EXPAND('        GO TO (    ')
	   I = 0
	   J = 0
C
C Start of repeat loop
C
10	   I = I + 1
	   J = J + 1
	   IF (J .EQ. 10) THEN		! end of line
	      J = 0
	      RETCOD = FLWLIN(,,IERR)
	      ERROR = (RETCOD .NE. 0)
	      IF (.NOT. ERROR) CALL EXPAND('     &         ')
	   ENDIF
	   IF (.NOT. ERROR) THEN
	      CALL APPEND('%N3',I)	! append statement label
	      IF (I .NE. ALL) CALL APPEND(',')
	   ENDIF
C
C Repeat until all labels written or error
C
	   IF ((I .NE. ALL) .AND. (.NOT. ERROR)) GO TO 10
C
C Append last part of GO TO statement
C
	   IF (.NOT. ERROR) THEN
	      CALL APPEND('), DPRIN')
	      RETCOD = FLWLIN(,,IERR)
	      ERROR = (RETCOD .NE. 0)
	   ENDIF
C
C Error message
C
	   IF (ERROR) THEN
	      CALL EXPAND('Error writing buffer ')
	      CALL WRITAP('to file on logical unit %N',SRCLUN)
	   ENDIF
	ENDIF
C
C Signal error or write moan call to file
C
	IF (ERROR) THEN
	   CALL LIB$SIGNAL(%VAL(IERR))
	ELSE
	   ERROR = WRTBLK(SRCLUN,SRCMOA,MOALIN)
	ENDIF
C
C Assign function value
C
	WRTGTO = ERROR
C
C Return
C
	RETURN
	END
