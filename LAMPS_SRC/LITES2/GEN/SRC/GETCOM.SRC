C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1984-09-13 18:29:12.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL FUNCTION GETCOM(STRING,COMNO)	
C
***	IDENT	13SE84
***	MODULE	GETCOM
C
C	Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C	Created					RJH	12-SEP-1984
C
C Description
C
C    This function was designed for use by the program COMGEN, which
C is part of the LITES2 Command Interface. The purpose of the function
C is to read commands from the Macro source file.
C    On entry to this function, the string '$CMD' followed by a space
C or tab will have been read. The argument returned is a string
C containing the command. The current command number is passed to the
C function for use in error messages.
C    The function returns true and a message is output if an there
C is an error in the command table syntax.
C
	IMPLICIT NONE
C
C Included Parameter Files
C
***     PARAMETER/CGEN:LEN/		! character string lengths
***     PARAMETER/CGEN:PUNC/		! character constants
C
C Arguments
C
	INTEGER*4	COMNO		! command number
	CHARACTER*(C)	STRING		! command string
C
C Functions called
C
	LOGICAL		RDCHS		! reads a character
	LOGICAL		RDCH		! reads a character
C
C Statement functions
C
	LOGICAL		ALPHA		! alphabetic character ?
	LOGICAL		TERM		! character is a terminator ?
C
C Local Variables
C
	INTEGER*4	I		! counter
	LOGICAL		ERROR		! command table syntax error ?
	LOGICAL		EOLN		! end of line ?
	LOGICAL		DONE		! finished reading command ?
	BYTE		NXTCH		! next character
C
C Statement function dummy variables
C
	BYTE		ACH		! character
	BYTE		TCH		! character
C
C Statement function to check a character is alphabetic
C
	ALPHA(ACH) = (((ACH .GE. 'A') .AND. (ACH .LE. 'Z')) .OR.
     &		     ((ACH .GE. 'a') .AND. (ACH .LE. 'z')))
C
C Statement function to check for command terminator
C
	TERM(TCH) = ((TCH .EQ. SPACE) .OR. (TCH .EQ. TAB) .OR.
     &		    (TCH .EQ. COMMA) .OR. (TCH .EQ. RANGLE))
C
C Initialisation
C
	DONE = .FALSE.
	ERROR = .FALSE.
	STRING = BLANK
C
C Read command
C
	I = 0
	EOLN = RDCHS(NXTCH)
	IF (NXTCH .EQ. LANGLE) EOLN = RDCHS(NXTCH)
	DONE = (EOLN .OR. TERM(NXTCH))
	ERROR = DONE			! error if done already
10	IF (DONE .OR. ERROR) GO TO 20
	I = I + 1
	STRING(I:I) = CHAR(NXTCH)
	EOLN = RDCH(NXTCH)
	DONE = (EOLN .OR. TERM(NXTCH))
	IF (.NOT. DONE) ERROR = (.NOT. ALPHA(NXTCH))
	GO TO 10
20	CONTINUE
C
C  Error message
C
	IF (ERROR) THEN
	   CALL EXPAND('Error in command table syntax ')
	   CALL WRITAP('near command no. %N',COMNO)
	ENDIF
C
C Assign function value
C
	GETCOM = ERROR
C
C Return
C
	RETURN
	END
