C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1984-09-13 17:27:28.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL FUNCTION CLOFIL
C
***	IDENT	13SE84
***	MODULE	CLOFIL
C
C	Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C	Created					RJH	05-SEP-1984
C
C Description
C
C    This function was designed for use by the program COMGEN, which
C is part of the LITES2 Command Interface. The purpose of the function
C is to close all input and output files.
C    The function returns true and a message is output if an error
C occurs.
C
	IMPLICIT NONE
C
C Included Parameter Files
C
***     PARAMETER/CGEN:LUN/		! logical unit constants
C
C Functions called
C
	INTEGER*4	FLRCLO		! closes file for reading
	INTEGER*4	FLWCLO		! closes file for writing
C
C Local Variables
C
	INTEGER*4	RETCOD		! file I/O return code
	INTEGER*4	IERR		! system error code
C
C Start of function
C
	RETCOD = FLRCLO(MARLUN,IERR)
	IF (RETCOD .NE. 0) THEN
	   CALL EXPAND('Error closing file ')
	   CALL WRITAP('for reading on logical unit %N',MARLUN)
	ELSE
	   RETCOD = FLWCLO(PARLUN,IERR)
	   IF (RETCOD .NE. 0) THEN
	      CALL EXPAND('Error closing file ')
	      CALL WRITAP('for writing on logical unit %N',PARLUN)
	   ELSE
	      RETCOD = FLWCLO(SRCLUN,IERR)
	      IF (RETCOD .NE. 0) THEN
		 CALL EXPAND('Error closing file ')
		 CALL WRITAP('for writing on logical unit %N',SRCLUN)
	      ENDIF
	   ENDIF
	ENDIF
C
C Output system error message
C
	IF (RETCOD .NE. 0) CALL LIB$SIGNAL(%VAL(IERR))
C
C Assign function value
C
	CLOFIL = (RETCOD .NE. 0)
C
C Return
C
	RETURN
	END
