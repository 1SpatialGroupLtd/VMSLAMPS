C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1988-06-22 18:52:06.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	PROGRAM ICD2
C
***	MODULE	ICD2
***	IDENT	22JN88
C
C Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
	IMPLICIT NONE
C
C	Interactive Character Design (Mark 2)
C
C	Version 2 created, allows character 0	WJJ	22-Jun-1988
C	Version Numbered			SCM	26-Apr-1982
C	Character creation debugged		SCM	26-Apr-1982
C	Last edited by AJW			AJW	 6-Apr-1981
C	Taken to VAX				AJW	26-Mar-1981
C	Long hibernation
C	First written				AJW	   Sep-1979
C
C	Copyright Laserscan Laboratories Ltd.,Cambridge,England
C
	PARAMETER X=1,Y=2
C
	PARAMETER FB1 =   1,FB2 =   2,FB3 =    4,FB4 =    8
	PARAMETER FB5 =  16,FB6 =  32,FB7 =   64,FB8 =  128
	PARAMETER FB9 = 256,FB10= 512,FB11= 1024,FB12= 2048
	PARAMETER FB13=4096,FB14=8192,FB15=16384,FB16=32768
C
***	COMMON/CHRSTR2/
***	COMMON/LSL$CMNLDL:LDXPAR/
C
	REAL      XPOS,YPOS	! position of cursor
	REAL      XPOSC,YPOSC	! clipped and quantised ditto
	REAL	  XTRK,YTRK	! accumulated tracker ball posn
C
	INTEGER   I,J,K,L,M	! temporary variables
	INTEGER   CHAR		! char in hand
	INTEGER   STRTOP	! next free posn to add point
	INTEGER   C1,C2		! CHREF(1,CHAR), etc.
	INTEGER   GRIDSQ(2)	! half no of grid squares in X,Y
C
	LOGICAL   LINE		! do we draw line to cursor
	LOGICAL   REST		! do we move the rest of the char
C
	INTEGER*2 FBSTR		! keeps function button state
	INTEGER   FBSTR4
	EQUIVALENCE (FBSTR,FBSTR4)
	INTEGER*2 I2		! returned int value from LDLIB calls
C
	BYTE      TEXTIN(80)	! text read from command line
	BYTE      RECALL(4),SAVE(4),QUIT(4),CLEAR(4),GRID(4),
     &            DCPC(4),DAPC(4),DADI(4)
	BYTE      BYTE		! 1 char
C
	DATA RECALL,SAVE,QUIT,CLEAR,GRID,DCPC,DAPC,DADI
     &     /'R','E','C',' ',
     &      'S','A','V',' ',
     &      'Q','U','I',' ',
     &      'C','L','E',' ',
     &      'G','R','I',' ',
     &      'D','C','P','C',
     &      'D','A','P','C',
     &      'D','A','D','I'/
C
	DATA GRIDSQ(X),GRIDSQ(Y)/56,64/
C
C
C set up the HRD
	CALL LDINIT(127)
	CALL UNITS(0.5)
	CALL DISMOD(1)
C
C initialise
	CHAR=-1
	LINE=.TRUE.
	REST=.FALSE.
	STRTOP=1
C
C CHREF(2,I)=-1 => character does not exist
C             0 => char exists, and owns one slice of STORE
C             n => char exists, and owns n slices of STORE
C
C no chars generated yet
	DO 10 I=0,MAXCHR
	  CHREF(2,I)=-1
10	CONTINUE
C
C write some function buttons
	FBSTR=FB1 +FB2 +FB3 +
     &        FB5 +FB6 +FB7 +FB8 +
     &        FB9 +FB10+FB11+FB12+
     &        FB13+FB14+FB15
C
	CALL CSWT(0.0,0.0)
	CALL CURSOR
	CALL REFRSH
	GOTO 40
C
C ***** Start of loop
C
20	IF (CHAR.EQ.-1) GOTO 40
C
C here with char in hand
	CALL SYS$CLREF(%VAL(LDEFN))
	CALL CSAJST(XPOS,YPOS)
	CALL SYS$WAITFR(%VAL(LDEFN))
	CALL FBRD(I2)
C
30	GOTO ( 70, 80,100,20,
     &        120,220,330,400,
     &        470,480,510,540,
     &        1070,1130,1140, 20),I2
C
	CALL CLIP(XPOS,YPOS,XPOSC,YPOSC,XTRK,YTRK,GRIDSQ)
	CALL CSWT(XPOSC,YPOSC)
	CALL REFRSH
	GOTO 20
C
C
C here with no char in hand
40	CALL FBWT16( 
     &              FB5 +FB6 +
     &                             FB12
     &                                 )
C
50	CALL SYS$CLREF(%VAL(LDEFN))
	CALL SYS$WAITFR(%VAL(LDEFN))
	CALL FBRD(I2)
C
	GOTO(50,50,50,50,
     &       60,60,50,50,
     &       50,50,50,60,
     &       50,50,50,50),I2
	GOTO 50
C
60	CALL FBWT16(FBSTR)
	GOTO 30
C
C ***** Add move to end of char
C
70	STORE(3,STRTOP)=0
	GOTO 90
C
C ***** Add line to end of char
80	STORE(3,STRTOP)=1
C
90	STORE(X,STRTOP)=XPOSC-XLAST
	STORE(Y,STRTOP)=YPOSC-YLAST
	XLAST=XPOSC
	YLAST=YPOSC
	IF (CHREF(2,CHAR).GE.0) STRTOP=STRTOP+1
	CHREF(2,CHAR)=CHREF(2,CHAR)+1		! Length +1
95	CALL DRAW(CHAR,LINE,.TRUE.,.FALSE.)
	GOTO 20
C
C ***** Delete last point of char
C
100	IF (CHREF(2,CHAR) .EQ. 0) GOTO 20
	CHREF(2,CHAR)=CHREF(2,CHAR)-1
	STRTOP=STRTOP-1
	IF (CHREF(2,CHAR).GT.0) GOTO 110
	  CHREF(2,CHAR)=0
	  XLAST=0
	  YLAST=0
	  CALL DISMOD(1)
	  CALL CSWT(0.0,0.0)
	  CALL CURSOR
	  CALL REFRSH
	  GOTO 20
110	CALL DRAW(CHAR,LINE,.TRUE.,.FALSE.)
	GOTO 20
C
C ***** Ask for char to be created
C
120	CALL FBRD16(FBSTR)
C
130	WRITE(5,140)
140	FORMAT(' ','ICD - Input number to be created > ',$)
	CALL FBWT16(0)
	READ(5,150,ERR=130,END=130) I
150	FORMAT(I12)
C
	IF (I.GT.MAXCHR.OR.I.LT.0) GOTO 170
	IF (CHREF(2,I).LT.0) GOTO 180
	  WRITE(5,160)
160	  FORMAT(' ','ICD - Char already exists')
170	  CALL FBWT16(FBSTR)
	  GOTO 20
C
180	CONTINUE
C
	CALL GARBAG(STRTOP)
	CHAR=I
	XLAST=0
	YLAST=0
	CHREF(1,CHAR)=STRTOP		! STRTOP pnts to first free loc
	CHREF(2,CHAR)=0			! Length=0
C
190	WRITE(5,200)
200	FORMAT(' ','ICD - Width > ',$)
	READ(5,210,ERR=190,END=190) I
210	FORMAT(I12)
	CHREF(3,CHAR)=I
C
	CALL DISMOD(1)
	CALL FBWT16(FBSTR)
	CALL CSWT(0.0,0.0)
	CALL CURSOR
	CALL REFRSH
	GOTO 20
C
C ***** Ask for char to be edited
C
220	CALL FBRD16(FBSTR)
230	WRITE(5,240)
240	FORMAT(' ','ICD - Input number to be edited > ',$)
	CALL FBWT16(0)
	READ (5,250,ERR=230,END=230) I
250	FORMAT(I12)
C
	IF (I.GT.MAXCHR.OR.I.LT.0) GOTO 270
	IF (CHREF(2,I).GE.0) GOTO 280		! Not used yet
	  WRITE(5,260)
260	  FORMAT(' ','ICD - Not created yet')
270	  CALL FBWT16(FBSTR)
	  GOTO 20
C
280	CHAR=I
	CALL GARBAG(STRTOP)
	C1=CHREF(1,CHAR)
	C2=CHREF(2,CHAR)
	CHREF(1,CHAR)=STRTOP
C
C
C Move char to top of store
	IF (C2.EQ.0) GOTO 295
	DO 290 I=C1,C1+C2-1
	  STORE(X,STRTOP)=STORE(X,I)
	  STORE(Y,STRTOP)=STORE(Y,I)
	  STORE(3,STRTOP)=STORE(3,I)
	  STRTOP=STRTOP+1
290	CONTINUE
C
295	C1=CHREF(1,CHAR)
	C2=CHREF(2,CHAR)
	CALL DRAW(CHAR,LINE,.TRUE.,.FALSE.)
C
300	WRITE(5,310) 2*XMAX
310	FORMAT(' ','Width (',I3,') ? > ',$)
	READ(5,320,ERR=300,END=300) I
320	FORMAT(I12)
	IF (I.NE.0) CHREF(3,CHAR)=I
	CALL FBWT16(FBSTR)
	GOTO 20
C
C ***** Find point at cursor position and move it with cursor
330	CALL FINDPT(I,CHAR,XPOSC,YPOSC)		! Move point
	IF (I.GT.0) GOTO 340
	  WRITE(5,410)
	  GOTO 20
C
340	CALL FBRD16(FBSTR)
	CALL FBWT16(FB7)
C
350	CALL SYS$CLREF(%VAL(LDEFN))
	CALL CSAJST(XPOS,YPOS)
	CALL SYS$WAITFR(%VAL(LDEFN))
	CALL FBRD(I2)
C
	IF (I2.EQ.7) GOTO 390
	  J=I
	  K=XPOSC
	  L=YPOSC
	  CALL CLIP(XPOS,YPOS,XPOSC,YPOSC,XTRK,YTRK,GRIDSQ)
	  K=XPOSC-K
	  L=YPOSC-L
	  STORE(X,J)=STORE(X,J)+K
	  STORE(Y,J)=STORE(Y,J)+L
	  IF (REST) GOTO 380
360	    IF (STORE(3,J+1).NE.4) GOTO 370
	      J=J+1
	      IF (J+1.GT.CHREF(1,CHAR)+CHREF(2,CHAR)-1) GOTO 380
	      GOTO 360
370	    STORE(X,J+1)=STORE(X,J+1)-K
	    STORE(Y,J+1)=STORE(Y,J+1)-L
380	  CALL CSWT(XPOSC,YPOSC)
	  CALL DRAW(CHAR,LINE,.FALSE.,.FALSE.)
	  GOTO 350
C
390	CALL FBWT16(FBSTR)
	GOTO 20
C
C ***** Delete point at cursor position
C
400	CALL FINDPT(I,CHAR,XPOSC,YPOSC)
	IF (I.GT.0) GOTO 420
	  WRITE(5,410)
410	  FORMAT(' ','ICD - Point not found')
	  GOTO 20
C
C Last point in char ?
420	J=CHREF(2,CHAR)+CHREF(1,CHAR)-1
	IF (I.GE.J) GOTO 100
430	IF (STORE(3,I+1).NE.4) GOTO 440
	  I=I+1
	  IF (I+1.GT.CHREF(1,CHAR)+CHREF(2,CHAR)-1) GOTO 450
	  GOTO 430
440	STORE(X,I+1)=STORE(X,I+1)+STORE(X,I)
	STORE(Y,I+1)=STORE(Y,I+1)+STORE(Y,I)
450	DO 460 K=I,J
	  STORE(X,K)=STORE(X,K+1)
	  STORE(Y,K)=STORE(Y,K+1)
	  STORE(3,K)=STORE(3,K+1)
460	CONTINUE
	CHREF(2,CHAR)=CHREF(2,CHAR)-1
	CALL DRAW(CHAR,LINE,.FALSE.,.FALSE.)
	GOTO 20
C
C ***** Make point at cursor position a moveto
C
470	J=0
	GOTO 490
C
C ***** ... or a drawto
C
480	J=1
C
490	CALL FINDPT(I,CHAR,XPOSC,YPOSC)
	IF (I.GT.0) GOTO 500
	  WRITE(5,410)
	  GOTO 20
C
500	CONTINUE
	STORE(3,I)=J
	CALL DRAW(CHAR,LINE,.FALSE.,.FALSE.)
	GOTO 20
C
C ***** create two points at cursor position, and tie one to cursor
C
510	CALL FINDPT(I,CHAR,XPOSC,YPOSC)
	IF (I.GT.0) GOTO 520
	  WRITE(5,410)
	  GOTO 20
C
520	CALL FBRD16(FBSTR)
	CALL FBWT16(FB7)
C
C Move entries I and above one place up
	DO 530 K=CHREF(1,CHAR)+CHREF(2,CHAR)-1,I,-1
	  STORE(X,K+1)=STORE(X,K)
	  STORE(Y,K+1)=STORE(Y,K)
	  STORE(3,K+1)=STORE(3,K)
530	CONTINUE
	STORE(3,I)=1
C
	I=I+1
	STORE(X,I)=0
	STORE(Y,I)=0
	STORE(3,I)=1			! move
	CHREF(2,CHAR)=CHREF(2,CHAR)+1
	STRTOP=STRTOP+1
	GOTO 350
C
C ***** Ask for text from terminal
C
540	CALL FBRD16(FBSTR)
	CALL FBWT16(0)
550	WRITE(5,560)
560	FORMAT(' ','ICD > ',$)
	READ(5,570,ERR=550,END=550)TEXTIN
570	FORMAT(80A1)
C
	DO 580 I=1,3
580	  IF (TEXTIN(I).NE.RECALL(I)) GOTO 590
	GOTO 750
590	DO 600 I=1,3
600	  IF (TEXTIN(I).NE.SAVE(I)) GOTO 610
	GOTO 920
610	DO 620 I=1,3
620	  IF (TEXTIN(I).NE.QUIT(I)) GOTO 630
	GOTO 1030
630	DO 640 I=1,3
640	  IF (TEXTIN(I).NE.CLEAR(I)) GOTO 650
	GOTO 1040
650	DO 660 I=1,3
660	  IF (TEXTIN(I).NE.GRID(I)) GOTO 670
	GOTO 1060
670	DO 680 I=1,3
680	  IF (TEXTIN(I).NE.DCPC(I)) GOTO 690
	GOTO 1150
690	DO 700 I=1,3
700	  IF (TEXTIN(I).NE.DAPC(I)) GOTO 710
	GOTO 1170
710	DO 720 I=1,3
720	  IF (TEXTIN(I).NE.DADI(I)) GOTO 730
	GOTO 1160
C
C ***** Moan
C
730	WRITE(5,740)
740	FORMAT(' ','ICD - Eh?')
	CALL FBWT16(FBSTR)
	GOTO 20
C
C ***** Recall character set from file
C
750	WRITE(5,760)
760	FORMAT(' ','ICD - File name > ',$)
	READ(5,570,ERR=750,END=750)TEXTIN
C
	DO 770 I=1,80
770	  IF (TEXTIN(I).EQ.32) TEXTIN(I)=0	! Clear spaces
C
	OPEN(UNIT=1,NAME=TEXTIN,TYPE='OLD',ERR=900,
     &       CARRIAGECONTROL='LIST')
C
	DO 780 I=0,MAXCHR
780	  CHREF(2,I)=-1
C
	STRTOP=1
	CALL DISMOD(1)
	CALL CSWT(0.0,0.0)
	CALL CURSOR
	CALL REFRSH
C
790	READ(1,800,END=890,ERR=870) BYTE,I,J
800	FORMAT(X,A,I12,I12)
	IF (BYTE.EQ.'C') GOTO 810		! Character
	IF (BYTE.EQ.'P') GOTO 810		! Primary
	IF (BYTE.EQ.'L') GOTO 820		! Line
	IF (BYTE.EQ.'M') GOTO 840		! Move
	IF (BYTE.EQ.'S') GOTO 850		! Subroutine
	IF (BYTE.EQ.'E') GOTO 860		! End
	GOTO 870
C
810	IF ((I.GT.MAXCHR).OR.(I.LT.0).OR.(CHREF(2,I).GE.0)) GOTO 870
	CHREF(3,I)=J
	CHAR=I
	CHREF(1,CHAR)=STRTOP
	CHREF(2,CHAR)=0
	GOTO 790
C
820	IF (CHAR.LT.0) GOTO 870
	STORE(3,STRTOP)=1
830	STORE(1,STRTOP)=I
	STORE(2,STRTOP)=J
	STRTOP=STRTOP+1
	CHREF(2,CHAR)=CHREF(2,CHAR)+1
	GOTO 790
C
840	IF (CHAR.LT.0) GOTO 870
	STORE(3,STRTOP)=0
	GOTO 830
C
850	IF (CHAR.LT.0) GOTO 870
	STORE(1,STRTOP)=I
	STORE(2,STRTOP)=0
	STORE(3,STRTOP)=4
	CHREF(2,CHAR)=CHREF(2,CHAR)+1
	STRTOP=STRTOP+1
	GOTO 790
C
860	IF (CHAR.LT.0) GOTO 870
	IF (CHREF(2,CHAR).EQ.0) STRTOP=STRTOP+1
	CHAR=-1
	GOTO 790
C
870	WRITE(5,880)BYTE,I,J,CHAR
880	FORMAT(' ','Unexpected ',A,I12,I12,' at CHAR = ',I12)
C
890	CLOSE(UNIT=1)
	CHAR=-1
	GOTO 1020
C
900	WRITE(5,910)TEXTIN
910	FORMAT(' ','ICD - Cannot open file ',80A1)
	GOTO 1020
C
C
C ***** Store character set
C
920	IF (CHAR.LT.0) GOTO 730
930	WRITE(5,760)
	READ(5,570,ERR=930,END=930)TEXTIN
C
	DO 940 I=1,80
940	  IF (TEXTIN(I).EQ.32) TEXTIN(I)=0	! clear spaces
C
	CALL GARBAG(STRTOP)
	OPEN(UNIT=1,NAME=TEXTIN,TYPE='NEW',CARRIAGECONTROL='LIST')
C
C For each character
	DO 1010 I=0,MAXCHR
C
	  C1=CHREF(1,I)
	  C2=CHREF(2,I)
C
C Is it used yet ?
	  IF (C2.EQ.-1) GOTO 1010
C it is
C Don't distinguish between characters and primaries now
	  WRITE(1,950) 'C',I,CHREF(3,I)
CCC	  IF (I.GE.32) WRITE(1,950) 'C',I,CHREF(3,I)
CCC	  IF (I.LT.32) WRITE(1,950) 'P',I,CHREF(3,I)
950	  FORMAT(' ',A,I6,',',I6)
C
	  DO 990 J=C1,C1+C2-1
C call to primary ?
	    IF (STORE(3,J).EQ.4) GOTO 970
	    IF (STORE(3,J).EQ.1) WRITE(1,960) 'L',STORE(1,J),STORE(2,J)
	    IF (STORE(3,J).EQ.0) WRITE(1,960) 'M',STORE(1,J),STORE(2,J)
960	    FORMAT('	',A,I6,',',I6)
	    GOTO 990
970	  CONTINUE
	    WRITE(1,980) 'S',STORE(1,J)
980	    FORMAT('	',A,I6)
990	  CONTINUE
	  WRITE(1,1000) 'E'
1000	  FORMAT('	',A)
1010	CONTINUE
C
	CLOSE(UNIT=1)
1020	CALL FBWT16(FBSTR)
	GOTO 20
C
C ***** Quit
C
C
1030	CALL LDINIT(0)
	CALL EXIT
C
C ***** Clear character
C
C
1040	IF (CHAR.GE.0) GOTO 1050
	  WRITE(5,260)
	  CALL FBWT16(FBSTR)
	  GOTO 20
1050	IF (CHREF(2,CHAR).EQ.0) GOTO 1055
	  STRTOP=STRTOP-CHREF(2,CHAR)
	  CHREF(2,CHAR)=0
1055	XLAST=0
	YLAST=0
	CALL FBWT16(FBSTR)
	CALL DISMOD(1)
	CALL CSWT(0.0,0.0)
	CALL CURSOR
	CALL REFRSH
	GOTO 20
C
C ***** Draw new grid
C
C
1060	CALL DRWGRD(GRIDSQ,4)
	CALL DISMOD(1)
	CALL DRAW(CHAR,LINE,.FALSE.,.FALSE.)
	CALL REFRSH
	CALL FBWT16(FBSTR)
	GOTO 20
C
C ***** Recall primary
C
1070	CALL FBRD16(FBSTR)
1080	WRITE(5,1090)
1090	FORMAT(' ','ICD - Input number of primary (character)  > ',$)
	CALL FBWT16(0)
	READ(5,1100,ERR=1080,END=1080)I
1100	FORMAT(I12)
	IF (I.GT.MAXCHR.OR.I.LT.0) GOTO 1120
	IF (CHREF(2,I).GT.0) GOTO 1110	! Has it been created
	  WRITE(5,260)
	  CALL FBWT16(FBSTR)
	  GOTO 20
1110	CONTINUE
	STORE(X,STRTOP)=I
	STORE(Y,STRTOP)=0
	STORE(3,STRTOP)=4
	IF (CHREF(2,CHAR).GT.0) STRTOP=STRTOP+1
	CHREF(2,CHAR)=CHREF(2,CHAR)+1
	CALL DRAW(CHAR,LINE,.TRUE.,.FALSE.)
1120	CALL FBWT16(FBSTR)
	GOTO 20
C
C ***** change state of "Draw line to cursor"
C
1130	CALL FBRD16(FBSTR)		! Flip line to cursor
	IF (LINE) FBSTR=FBSTR-FB14
	LINE=.NOT.LINE
	IF (LINE) FBSTR=FBSTR+FB14
	CALL DRAW(CHAR,LINE,.FALSE.,.FALSE.)
	CALL FBWT16(FBSTR)
	GOTO 20
C
C
C ***** change state of "Move rest of char"
C
1140	CALL FBRD16(FBSTR)
	IF (REST) FBSTR4=FBSTR4-FB15
	REST=.NOT.REST
	IF (REST) FBSTR4=FBSTR4+FB15
	CALL FBWT16(FBSTR)
	GOTO 20
C
C
C ***** DCPC - Draw Char on Photo-Chromic film
C
1150	CALL DRAW(CHAR,.FALSE.,.FALSE.,.TRUE. )
	CALL DRAW(CHAR, LINE  ,.TRUE. ,.FALSE.)
	CALL FBWT16(FBSTR)
	GOTO 20
C
C
C ***** DADI - Draw All on DIazo
C
1160	CALL HRDMOD(1)		! select photochromic
	CALL DIFRAM(-1)		! drop a diazo unless there is one
	L=-1
	GOTO 1180
C
C ***** DAPC - Draw All chars on P/C
C
1170	L=0
1180	CALL UNITS(0.5/10.0)
C
	K= -1
	DO 1200 J=1,10
	  DO 1190 I=1,20
	    K=K+1
	    IF (K .GT. MAXCHR) GOTO 1205
	    IF (CHREF(2,K).LE.0) GOTO 1190
C	    in machine units ref machine origin
	    CALL ORIGIN((I-10.5)*50.0/10.0,(J-5.5)*35.0/5.0,-1)
	    CALL DRAW(K,.FALSE.,.FALSE.,.TRUE.)
1190	  CONTINUE
1200	CONTINUE
C
1205	CALL UNITS(0.5)
	CALL ORIGIN(0.0,0.0,-1)
	IF (L.EQ.0) GOTO 1210
	  CALL DIFRAM(0)		! drop diazo
	  CALL HRDMOD(0)		! set to Photo-Chromic
1210	CALL DRAW(CHAR,LINE,.TRUE.,.FALSE.)
	CALL FBWT16(FBSTR)
	GOTO 20
C
C
	END
