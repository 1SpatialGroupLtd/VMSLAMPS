	SUBROUTINE CF_SCHED(N)
C
***	MODULE CF_SCHED
***	IDENT 23MY85
C
	IMPLICIT NONE
C
C Copyright Laser Scan Laboratories Ltd., Cambridge, England
C Author R. Fairbairns
C
C Coded May 1985
C
C To compare the 'current' schedule with that saved in
C						common /OLD_SCHEDULE/
C
C argument:
	INTEGER		N		! size of the current schedule
C
C workspace
	INTEGER		THIS_PTR	! current pointer on new sched
	INTEGER		OLD_PTR		!    "	     "	  "  old   "
C
	PARAMETER	END_NODE = -1	! end-of-node marker
	PARAMETER	MATCH_LOW = -2	! pins matched - lower pin
	PARAMETER	MATCH_HI = -3	! pins matched - higher pin
C
***	PARAMETER/ARRSIZ/
***	PARAMETER/PINDEF/
C
***	COMMON/CURSHD/
***	COMMON/HEADER/
***	COMMON/OLDSHD/
C
C set things going
	THIS_PTR = 1
	OLD_PTR = 1
C
C find next node in the current schedule
100	DO WHILE (ISHED(THIS_PTR).EQ.END_NODE .AND. THIS_PTR.LE.N)
	  THIS_PTR = THIS_PTR+1
	ENDDO
C
C ... and in old schedule
	DO WHILE (OLD_SHED(OLD_PTR).EQ.END_NODE .AND. OLD_PTR.LE.OLD_N)
	  OLD_PTR = OLD_PTR+1
	ENDDO
C
C now compare a connection in (each) hand: bottom wire
200	IF (ISHED(THIS_PTR)   .EQ. OLD_SHED(OLD_PTR) .AND.
     &	    ISHED(THIS_PTR+1) .EQ. OLD_SHED(OLD_PTR+1)    ) THEN
C
C mark pins to be forgotten, lower
	  ISHED(THIS_PTR) = MATCH_LOW
	  OLD_SHED(OLD_PTR) = MATCH_LOW
	  THIS_PTR = THIS_PTR+1			! advance to next
	  OLD_PTR = OLD_PTR+1			!  connection
	  IF (ISHED(THIS_PTR).EQ.END_NODE) THEN
	    GOTO 100				! process next node
	  ELSE
	    GOTO 400				! process top wire
	  ENDIF
	ENDIF
C
C connections different: bottom wire - does one end its node?
300	IF (ISHED(THIS_PTR)   .EQ. END_NODE .OR.
     &	    OLD_SHED(OLD_PTR) .EQ. END_NODE) THEN
C
C an end: find end of both nodes (NB we assume that the whole schedule
C				     ends with an 'end_node')
	  DO WHILE (ISHED(THIS_PTR).NE.END_NODE)
	    THIS_PTR = THIS_PTR+1
	  ENDDO
	  DO WHILE (OLD_SHED(OLD_PTR).NE.END_NODE)
	    OLD_PTR = OLD_PTR+1
	  ENDDO
	  GOTO 100
	ELSE
C
C otherwise, we must leave any following top wire to be stripped and
C  replaced (at least until we find some other kind of match for it)
	  THIS_PTR = THIS_PTR+1
	  OLD_PTR  = OLD_PTR+1
C
C now we can behave as if we were starting afresh at a bottom wire
	  GOTO 200
	ENDIF
C
C compare connection in (each) hand: top wire
400	IF (ISHED(THIS_PTR)   .NE. OLD_SHED(OLD_PTR) .AND.
     &      ISHED(THIS_PTR+1) .NE. OLD_SHED(OLD_PTR+1)    ) THEN
C
C different: top wire
	  THIS_PTR = THIS_PTR+1
	  OLD_PTR = OLD_PTR+1
	  IF (ISHED(THIS_PTR)   .EQ. END_NODE .OR.
     &	      OLD_SHED(OLD_PTR) .EQ. END_NODE     ) THEN
	    DO WHILE (ISHED(THIS_PTR).NE.END_NODE)
	      THIS_PTR = THIS_PTR+1
	    ENDDO
	    DO WHILE (OLD_SHED(OLD_PTR).NE.END_NODE)
	      OLD_PTR = OLD_PTR+1
	    ENDDO
	    GOTO 100
	  ELSE
	    GOTO 200
	  ENDIF
	ENDIF
C
C top links are the same: do the bottom links following match?
C   (otherwise we must remove and replace the top link anyway)
C
C ... first ... are we at the end of a node?
	THIS_PTR = THIS_PTR+1
	OLD_PTR = OLD_PTR+1
	IF (ISHED(THIS_PTR).EQ.END_NODE) THEN		! we are
	  ISHED(THIS_PTR-1) = MATCH_HI
	  OLD_SHED(OLD_PTR-1) = MATCH_HI
	  GOTO 100					! get next node
	ENDIF
C
C otherwise, compare
	IF (ISHED(THIS_PTR+1) .EQ. OLD_SHED(OLD_PTR+1) .OR.
     &	    ISHED(THIS_PTR+1) .EQ. END_NODE .OR.
     &	    OLD_SHED(OLD_PTR+1) .EQ. END_NODE   ) THEN
C
C accept the upper connection if next (lower) one also matches
	  ISHED(THIS_PTR-1) = MATCH_HI
	  OLD_SHED(OLD_PTR-1) = MATCH_HI
C
C did we accept the upper because one of the following lowers turned
C   out not to be a lower at all, but rather to be an end?
	  IF (ISHED(THIS_PTR+1) .EQ. END_NODE .OR.
     &	      OLD_SHED(OLD_PTR+1) .EQ. END_NODE   ) THEN
C
C yes - advance to the end of the two nodes
	    DO WHILE (ISHED(THIS_PTR).NE.END_NODE)
	      THIS_PTR = THIS_PTR+1
	    ENDDO
	    DO WHILE (OLD_SHED(OLD_PTR).NE.END_NODE)
	      OLD_PTR = OLD_PTR+1
	    ENDDO
	    GOTO 100
	  ELSE
C
C accept the lower connection, too
	    ISHED(THIS_PTR) = MATCH_LOW
	    OLD_SHED(OLD_PTR) = MATCH_LOW
	    GOTO 400				! back for the following
C						!  upper connection
	  ENDIF
	ENDIF
C
C how the hell do we get out of this one?
	END
