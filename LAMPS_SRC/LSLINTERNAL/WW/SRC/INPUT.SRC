C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1985-10-04 11:21:18.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
C-------------------------------------------------------
C
C	INPUT
C
C	OBTAIN LISTING FROM INPUT STREAM
C--------------------------------------------------------
	SUBROUTINE INPUT(ISTR,N)
C
***	MODULE INPUT
***	IDENT 04OC85
C
	IMPLICIT NONE
C
	INCLUDE 'WIREWRAP.HDR'
C
C arguments:
	INTEGER		ISTR		! FORTRAN unit number of
C					!	  input schedule
	INTEGER		N		! pointer on ISHED
C
C workspace:
	INTEGER		I		! universally used (for some
C					! reason) as character read by
C					!  CHARZ
	INTEGER		ICNO		! ic number (!)
	INTEGER		II		! loop variable
	INTEGER		IP, IP2		! for reading integers
	INTEGER		J		! line pointer for CHARZ
C
C preset data
	BYTE LTRP,ZERO,NINE,LTRV,LTRG,COMMA,DASH,BRA,LTRI,LTRZ
	BYTE ONE,TWO,LTRN,LTRD,LTRC,POINT,EQUAL
	BYTE LTRA,LTRE,LTRL,LTRM,LTRR,LTRU
C
C presets
	DATA LTRP,ZERO,NINE,LTRV,LTRG,COMMA/'P','0','9','V','G',','/
	DATA DASH,BRA,LTRI,LTRZ,ONE,TWO/'-','<','I','Z','1','2'/
	DATA LTRN,LTRD,LTRC,POINT,EQUAL/'N','D','C','.','='/
	DATA LTRA,LTRE,LTRL,LTRM,LTRR,LTRU/'A','E','L','M','R','U'/
C
C force eol first (but why?)
	J=80
	CALL CHARZL(1,0)		! set CHARZ's line number
C
C central loop reading main schedule elements
10	CALL CHARZC(ISTR,I,J)
	IF(I.EQ.LTRP)GOTO 40
	IF(I.EQ.0)GOTO 120
	IF(I.GE.ZERO.AND.I.LE.NINE)GOTO 70
	IF(I.EQ.LTRV)GOTO 140
	IF(I.EQ.LTRG)GOTO 130
	IF(I.EQ.COMMA)GOTO 10
	IF(I.EQ.DASH)GOTO 10
	IF(I.EQ.BRA)GOTO 150
	IF(I.EQ.LTRI)GOTO 160
	IF (I.EQ.-10) RETURN
	IF(I.EQ.LTRZ) RETURN
	IF (I.EQ.LTRE) GOTO 250
	IF (I.EQ.LTRD) GOTO 270
	IF (I.EQ.LTRM) GOTO 300
C
C general 'bad character' error return
20	IF (I.EQ.0) THEN
	   CALL TTWSTR('Unexpected end of schedule input line')
	ELSE
	   CALL WRITEF('Unexpected %^B%C in schedule input', I)
	ENDIF
C
C complete an error message
30	CALL CHARZL(0,II)		! retrieve line number
	CALL WRITEF(' in line %^L%N:', II)
	CALL CHARZM			! output the line
	RETURN
C
C edge pin number: form is	P[1/2][A-V][1/2]	 (DEC rack)
C		   or		P[1/2][A-C][1-32]	 (Eurocard)
C		   or		P[1/2]-[1-86:P1/1-60:P2] (Multibus)
40	CALL CHARZ(ISTR,I,J)
	IF (I.EQ.ONE) then
	   IP = 0
	ELSE IF (I.NE.TWO) THEN
	   GOTO 20
	ELSE
	   IP=128
	ENDIF
C
C read edge pin letter
	CALL CHARZ(ISTR,I,J)
	IF (EUROCD) GOTO 55
	IF (MLTBUS) GOTO 50
C
C decode DEC rack edge pin number, second letter and digit
	IP=IP+MOD((I*2),128)
	CALL CHARZ(ISTR,I,J)
	IF(I.EQ.ONE)GOTO 65
	IF(I.NE.TWO)GOTO 20
	IP=IP+1
	GOTO 65
C
C read Multibus edge pin, dot and second number
50	IF (I.NE.POINT) GOTO 20
	CALL CHARZ(ISTR, I, J)
	IF (I.LT.ZERO .OR. I.GT.NINE) GOTO 20
	IP2 = I-ZERO
	CALL CHARZ(ISTR, I, J)
	IF (I.LT.ZERO .OR. I.GT.NINE) GOTO 60
	IP2 = IP2*10 + (I-ZERO)
	CALL CHARZ(ISTR, I, J)
	IF (I.LT.ZERO .OR. I.GT.NINE) THEN
	   IF (J.GT.1) J = J-1			! un-read nondigit
	ELSE
	   IP2 = IP2*10 + (I-ZERO)
	ENDIF
	GOTO 60	
C
C read Eurocard edge pin, second letter and number
55	IF (I.LT.LTRA .OR. I.GT.LTRC) GOTO 20
	IP = IP+(I-65)*32		! add <edge letter no>*32
	CALL CHARZ(ISTR, I, J)
	IF (I.LT.ZERO .OR. I.GT.NINE) GOTO 20
	IP2 = I-ZERO
	CALL CHARZ(ISTR, I, J)
	IF (I.LT.ZERO .OR. I.GT.NINE) GOTO 60
	IP2 = IP2*10 + (I-ZERO)
	CALL CHARZ(ISTR, I, J)
	IF (I.LT.ZERO .OR. I.GT.NINE) THEN
	   IF (J.GT.1) J = J-1			! un-read nondigit
	ELSE
	   IP2 = IP2*10 + (I-ZERO)
	ENDIF
C
C enter something in the table
60	IP = IP+IP2-1				! complete eurocard 'un
65	ISHED(N)=IP
	N=N+1
	IF (N.GT.MAXSHED) CALL MOAN('too many entries in schedule')
	GOTO 10
C
C digit - read ic number (up to 3 digits, terminated by a '.')
70	IP=256*MOD(I,16)
	CALL CHARZ(ISTR,I,J)
	IF(I.LT.ZERO.OR.I.GT.NINE)GOTO 80
	IP=10*IP+256*MOD(I,16)
	CALL CHARZ(ISTR,I,J)
	IF(I.LT.ZERO.OR.I.GT.NINE)GOTO 80
	IP=10*IP+256*MOD(I,16)
	CALL CHARZ(ISTR,I,J)
C
C IP is now <ic number>*256 - i.e. occupying bytes 1, 2 of long integer
80	IF (IP.LE.0 .OR. IP.GT.MAXICS*256) GOTO 280
	IF (IP.GE.25600) POS3DG = .TRUE.	! test is 'ic posn
C						!		>= 100'
	IF(I.NE.POINT)GOTO 230
	CALL CHARZ(ISTR,I,J)
	IF(I.LT.ZERO.OR.I.GT.NINE)GOTO 20
	IP2=MOD(I,16)
	CALL CHARZ(ISTR,I,J)
	IF(I.LT.ZERO.OR.I.GT.NINE)GOTO 90
	IP2=IP2*10+MOD(I,16)
C
C enter ic pin entry in schedule
90	ISHED(N)=IP+IP2
	IF (IP2.LE.64) GOTO 110
C
C another jolly little error exit
100	CALL TTWSTR('Error - pin number out of range in schedule input')
	GOTO 30
C
C entered an ic pin in schedule - check we're not full
110	N=N+1
	IF (N.GT.MAXSHED) CALL MOAN('too many entries in schedule')
	IF (I.NE.0) GOTO 10
C
C end of line - put in preliminary end of network marker
120	ISHED(N)=-1
	N=N+1
	GOTO 10
C
C G - check for GND
130	CALL CHARZ(ISTR,I,J)
	IF(I.NE.LTRN)GOTO 20
	CALL CHARZ(ISTR,I,J)
	IF(I.NE.LTRD)GOTO 20
	ISHED(N)=GND
	GOTO 110			! always returns to 10, as I='D'
C
C V - check for VCC
140	CALL CHARZ(ISTR,I,J)
	IF(I.NE.LTRC)GOTO 20
	CALL CHARZ(ISTR,I,J)
	IF(I.NE.LTRC)GOTO 20
	ISHED(N)=VCC
	GOTO 110
C
C < - simply backspace fill index
150	N=N-1
	IF(N.LE.0)N=1
	GOTO 10
C
C I - check line starts IC ..
160	CALL CHARZ(ISTR,I,J)
	IF(I.NE.LTRC)GOTO 20
C
C .. and then skip the rest of the line
170	CALL CHARZ(ISTR,I,J)
175	IF(I.NE.0)GOTO 170			! enter here to ignore
C						!  rest of line with
C						!  char in hand
C
C look for lines of the form
C		<ic position>=<ic type name>
180	CALL CHARZ(ISTR,I,J)
	IF(I.EQ.0)GOTO 180
	IF (I.EQ.-10) RETURN
	IF(I.EQ.LTRZ)RETURN
	IF(I.LT.ZERO.OR.I.GT.NINE)GOTO 20
	ICNO=MOD(I,16)
C
C MOD(I,16) is I-ZERO		isn't that clever?
C
	CALL CHARZ(ISTR,I,J)
	IF(I.LT.ZERO.OR.I.GT.NINE)GOTO 190
	ICNO=10*ICNO+MOD(I,16)
	CALL CHARZ(ISTR,I,J)
	IF (I.GE.ZERO .AND. I.LE.NINE) THEN
	   ICNO = 10*ICNO + (I-ZERO)
	   CALL CHARZ(ISTR, I, J)
	ENDIF
C
C read ic number - check it's in range and terminated by '='
190	IF (ICNO.LE.0 .OR. ICNO.GT.MAXICS) GOTO 290
	IF(I.NE.EQUAL)GOTO 20
C
C read ic name
	DO 220 II=1,10
	   IF (I.EQ.0) GOTO 210
	   CALL CHARZ(ISTR,I,J)
210	   ICLIST(ICNO,II)=I
220	CONTINUE
	GOTO 175				! skip rest of line
C
C error in ic pin designator in schedule
230	CALL WRITEF('''%^B%C'' found when ''.'' expected', I)
	GOTO 30
C
C E - check EUR[ocard]
250	CALL CHARZ(ISTR, I, J)
	IF (I .NE. LTRU) GOTO 20
	CALL CHARZ(ISTR, I, J)
	IF (I .NE. LTRR) GOTO 20
	EUROCD = .TRUE.				! remember
	MLTBUS = .FALSE.
C
C ignore the rest of the line
260	CALL CHARZ(ISTR, I, J)
	IF (I.NE.0) GOTO 260
	GOTO 10
C
C D - check DEC[rack]
270	CALL CHARZ(ISTR, I, J)
	IF (I .NE. LTRE) GOTO 20
	CALL CHARZ(ISTR, I, J)
	IF (I .NE. LTRC) GOTO 20
	EUROCD = .FALSE.
	MLTBUS = .FALSE.
	GOTO 260
C
C ic position too big - from ic pin entry
280	ICNO = IP/256
C		      - from ic list entry
290	CALL WRITEF('IC number %^L%N too large', ICNO)
	GOTO 30
C
C M - check MUL[tibus]
300	CALL CHARZ(ISTR, I, J)
	IF (I.NE.LTRU) GOTO 20
	CALL CHARZ(ISTR, I, J)
	IF (I.NE.LTRL) GOTO 20
	EUROCD = .FALSE.
	MLTBUS = .TRUE.
	GOTO 260
C
	END
