C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1986-04-02 15:50:28.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
C-----------------------------------------------
C
C	ORDER
C
C	Erase multiple node separators,
C	put each node in ascending order of pins,
C	and put nodes in order of their first pin.
C-----------------------------------------------
	SUBROUTINE ORDER(NMAX)
C
***	MODULE ORDER
***	IDENT 02AP86
C
	IMPLICIT NONE
C
C Parameter:
	INTEGER		NMAX		! high-water mark on ISHED:
C					!  we will update
C
	INCLUDE 'WIREWRAP.HDR'
C
C workspace:
	INTEGER		DESTN_POINTER	! for copying
	INTEGER		ISAVE(100)	! for holding nodes being swapped
	INTEGER		N		! general workspace pointer
	INTEGER		NEXT_NODE	! used when sorting nodes as a whole
	INTEGER		NSAVE		! pointer on ISAVE
	INTEGER		NSHED		! pointer on ISHED
	INTEGER		OTHER_NODE	! used when sorting nodes as a whole
	INTEGER		SCHEDULE_ENTRY	! what it says
	INTEGER		SOURCE_POINTER	! for copying
C
C run through and erase multiple node separators
	SOURCE_POINTER=0
	DESTN_POINTER=0
10	SOURCE_POINTER=SOURCE_POINTER+1
	DESTN_POINTER=DESTN_POINTER+1
	IF(DESTN_POINTER.GE.NMAX)GOTO 30
	ISHED(SOURCE_POINTER)=ISHED(DESTN_POINTER)
20	IF(ISHED(DESTN_POINTER).NE.-1.OR.ISHED(DESTN_POINTER+1).NE.-1)GOTO 10
	DESTN_POINTER=DESTN_POINTER+1
	IF(DESTN_POINTER.GE.NMAX)GOTO 30
	GOTO 20
30	NMAX=NMAX-DESTN_POINTER+SOURCE_POINTER
C
C put in an extra separator: this shouldn't strictly be necessary, but the rest
C  of the program seems to prefer it to be there
	ISHED(NMAX)=-1
C
C sinking-sort all nodes, using node separators as boundaries
40	N=0
50	N=N+1
	IF(N.GE.(NMAX-1))GOTO 60
	IF(ISHED(N).EQ.-1)GOTO 50
	IF(ISHED(N+1).EQ.-1)GOTO 50
	IF(ISHED(N+1).GE.ISHED(N))GOTO 50
	SCHEDULE_ENTRY=ISHED(N+1)
	ISHED(N+1)=ISHED(N)
	ISHED(N)=SCHEDULE_ENTRY
	GOTO 40
C
C now sinking-sort of the nodes as a whole
60	N=0
70	N=N+1
	IF(ISHED(N).EQ.-1)GOTO 70
C
C first pin of next node
80	NEXT_NODE=N
	SCHEDULE_ENTRY=ISHED(N)
90	N=N+1
	IF(N.GE.NMAX-1)RETURN
	IF(ISHED(N).NE.-1)GOTO 90
100	N=N+1
	IF(ISHED(N).EQ.-1)GOTO 100
C
C first pin of subsequent node
	OTHER_NODE=N
	IF(ISHED(N).GE.SCHEDULE_ENTRY)GOTO 80
C
C they are in reverse order
	NSAVE=0
	NSHED=NEXT_NODE-1
110	NSAVE=NSAVE+1
	NSHED=NSHED+1
	ISAVE(NSAVE)=ISHED(NSHED)
	IF(ISHED(NSHED).NE.-1)GOTO 110
C
C first node has been saved - copy 2nd node down
120	ISHED(NEXT_NODE)=ISHED(OTHER_NODE)
	NEXT_NODE=NEXT_NODE+1
	OTHER_NODE=OTHER_NODE+1
	IF(ISHED(NEXT_NODE-1).NE.-1)GOTO 120
C
C now follow it with what was the first node
	NSAVE=1
130	ISHED(NEXT_NODE)=ISAVE(NSAVE)
	NEXT_NODE=NEXT_NODE+1
	NSAVE=NSAVE+1
	IF(ISAVE(NSAVE).NE.-1)GOTO 130
C
C node swap completed - doesn't it make your heart sink?
	GOTO 60
C
	END
