C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1986-02-10 13:50:40.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
C--------------------------------------------------------
C
C	UNMULT
C
C	Undo multiple references
C-------------------------------------------------------
	SUBROUTINE UNMULT(NMAX)
C
***	MODULE UNMULT
***	IDENT 10FE86
C
C  Remove multiple references to Vcc, Gnd pins of an IC;
C  then merge duplicate references to the same pin, reorder
C  and clean up ISHED.
C
C D R Griffiths 5-Jan-81
C
	IMPLICIT NONE
C
	INCLUDE 'WIREWRAP.HDR'
C
C parameter:
	INTEGER		NMAX		! extent of data in the schedule
C (note that we update this)
C
C workspace:
	INTEGER		I		! loop variable
	INTEGER		ICNO		! of the thing-in-hand
	INTEGER		IPIN		! pin of the thing-in-hand
	INTEGER		J		! loop variable
	INTEGER		LAST		! previous ditto
	INTEGER		LREADY		! to be read with an initial 'A'
	INTEGER		THIS		! current pin under examination
C
C  IVCC,IGND show pins on each IC which are powered,earthed resp.
	INTEGER		IVCC(MAXICS),IGND(MAXICS)
C
C  Of course, none initially
	DO I = 1,MAXICS
	  IVCC(I) = 0
	  IGND(I) = 0
	ENDDO
C
C
	LAST = 0
	DO I = 1,NMAX-1
C
	  THIS = ISHED(I)
	  IF (THIS.LE.0 .OR. (THIS.NE.VCC .AND. THIS.NE.GND)) GOTO 40
C
C Found a GND or VCC connection. Check previous pin in net.
	  ICNO = LAST/256
	  IF (ICNO.LE.0 .OR. ICNO.GT.MAXICS) GOTO 40
C
C  It's an IC all right. Find pin number.
	  IPIN = MOD(LAST,256)
	  IF (THIS.EQ.GND) THEN
C
C  If GND, get old pin connected.
	    LREADY = IGND(ICNO)
	    IGND(ICNO) = IPIN
	  ELSE
C
C  Else VCC.
	    LREADY = IVCC(ICNO)
	    IVCC(ICNO) = IPIN
	  ENDIF
C
C If LREADY is zero, OK. If not, it is the number of a pin on
C this IC which is already connected to wherever.
	  IF (LREADY.EQ.0) GOTO 40
C
C Else replace this connection by a connection to that previous pin.
	  ISHED(I) = LREADY + 256*ICNO
40	  LAST = THIS
C
	ENDDO
C
C Now treat any duplicated pins.
	CALL MERGE(NMAX)
	CALL ORDER(NMAX)
C
C If any pin occurs twice, it will be in the same net.
C Remove it.
	LAST = 0
	J = 1
	DO I = 1,NMAX
	  THIS = ISHED(I)
	  IF (THIS.NE.LAST) THEN
	    IF (I.GT.J) ISHED(J) = ISHED(I)
	    J = J+1
	  ENDIF
	  LAST = THIS
	ENDDO
C
	NMAX = J
	RETURN
	END

