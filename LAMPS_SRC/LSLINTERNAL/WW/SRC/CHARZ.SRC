C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1988-12-22 16:42:20.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
C----------------------------------------------------
C
C	CHARZ
C
C	OBTAINS NEXT CHAR FROM INPUT STREAM
C-------------------------------------------------
	SUBROUTINE CHARZ(ISTR,I,J)
C
***	MODULE CHARZ
***	IDENT 22DE88
C
	IMPLICIT NONE
C
	INCLUDE 'WIREWRAP.HDR'
C
C parameters:
	INTEGER		ISTR		! stream number
	INTEGER		I		! to return char read
C					! (0 if end of line)
	INTEGER		J		! line pointer
C
C workspace:
	INTEGER		CHARS_COPIED	! for copying comments
	INTEGER		II		! loop variable
	INTEGER		LENGTH		! (static) length of line read
	INTEGER		LINE_NO		! (static) current line number
	BYTE		CH(80)		! (static) line buffer
	LOGICAL*1	NOTE_COMMENT	! true iff in CHARZC
C
C preset data:
	BYTE		SPACE,TAB,LWA,LWZ,UPA
	BYTE		COM1,COM2
	DATA		SPACE,TAB,LWA,LWZ,UPA /' ',9,'a','z','A'/
	DATA		COM1,COM2 /'!','|'/
C
C default state is 'ignore comment characters'
	NOTE_COMMENT = .FALSE.
10	IF(J.EQ.80)GOTO 20
	IF(J.GT.80)GOTO 30
	J=J+1
	I=CH(J)
C
C ignore spaces and tabs
	IF(I.EQ.SPACE .OR. I.EQ.TAB)GOTO 10
C
C upper-case letters
	IF (I.GE.LWA .AND. I.LE.LWZ) I = I-LWA+UPA
	IF (.NOT.NOTE_COMMENT) RETURN
C
C in CHARZC: have we a comment character here: if so, treat as
C  end-of-line so that next call will read in a new line
	IF (I.NE.COM1 .AND. I.NE.COM2) RETURN
C
C if there's anything there, copy comment body to COMBUF
C  CHARS_COPIED holds count of what's been copied so far;
C  NOTE_COMMENT remains TRUE until a non-blank character is found
	IF (J.LT.LENGTH) THEN
	  IF (COMLIM+2+LENGTH-J .GT. COMMAX) THEN
	    CALL EXPAND('Comment buffer full - comment %^B''')
	    DO II = 1,LENGTH-J
	      CALL APPEND('%C', CH(J+II))
	    ENDDO
	    CALL FLWAPP(''' ignored')
	  ELSE
	    CHARS_COPIED = 0
	    DO II = 1,LENGTH-J
	      IF (CH(J+II).NE.' ') 		! only start copying on
     &			NOTE_COMMENT = .FALSE.	!  non-blank character
	      IF (.NOT.NOTE_COMMENT) THEN
		CHARS_COPIED = CHARS_COPIED+1
		COMBUF(COMLIM+CHARS_COPIED+1) = CH(J+II)
	      ENDIF
	    ENDDO
	    IF (.NOT.NOTE_COMMENT) THEN		! something was copied
	      COMBUF(COMLIM+1) = CHARS_COPIED
	      COMLIM = COMLIM+CHARS_COPIED+1
	    ENDIF
	  ENDIF
	ENDIF
C
C index = 80: return end of line, and mark to read another next time
20	I = 0
	J = 81
	RETURN
C
C index = 81: read another line in, and return character from it
30	LINE_NO = LINE_NO+1
	READ(ISTR,40,END=50) LENGTH,CH
	J=0
	GOTO 10
C
40	FORMAT (Q,80A1)
C
C end of line: return RSX eof
50	I = -10
	RETURN
C
C======================================================================
C
	ENTRY CHARZC(ISTR,I,J)
C
C read a character, taking note of comments
	NOTE_COMMENT = .TRUE.
	GOTO 10
C
C======================================================================
C
	ENTRY CHARZM
C
C write out the contents of CHARZ's buffer on the terminal
	WRITE (6,60) (CH(II), II=1,LENGTH)
60	FORMAT (' ',<LENGTH>A1)
	RETURN
C
C======================================================================
C
	ENTRY CHARZL(ISTR,I,J)
C
C set/read line number
C ISTR=0 => return current line number in i
C     =1 => set current line number to <i>
	IF (ISTR.EQ.0) THEN
	  I = LINE_NO
	ELSE IF (ISTR.EQ.1) THEN
	  LINE_NO = I
C	ELSE ???
	ENDIF
	RETURN
C
	END
