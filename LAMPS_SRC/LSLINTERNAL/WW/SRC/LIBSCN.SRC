C-------------------------------------------------------
C
C	LIBSCN
C
C	SCANS LIBRARY FOR IC TYPES AND SCANS LIST FOR
C	IC NOS NOT GIVEN IN TYPE LIST
C	ONLY FUNCTION IS TO OUTPUT ERRORS WHERE NECESSARY
C-------------------------------------------------------
	SUBROUTINE LIBSCN(NMAX)
C
***	MODULE LIBSCN
***	IDENT 23MR84
C
	IMPLICIT NONE
C
	INCLUDE 'WIREWRAP.HDR'
C
C argument:
	INTEGER		NMAX		! extent of data in ISHED
C
	PARAMETER	MAXUNK = 50	! size of memory of unknown ics
C
C workspace:
	INTEGER		I, J, JJ, K, N	! loop variables
	INTEGER		NONBLK		! ditto
	INTEGER		ICNO		! as it says
	INTEGER		UNKICS(MAXUNK)	! ptrs to ICs already diagnosed
	INTEGER		UNKPTR		! index on unkics
C
C preset data
	BYTE		LTRX
	DATA		LTRX/'X'/
C
C initialise
	UNKPTR = 0
C
C scan whole ISHED array
	DO 30 N=1,NMAX-1
C
C -1 denotes end of node
	   IF(ISHED(N).EQ.-1)GOTO 30
	   IF (ISHED(N).EQ.VCC .OR. ISHED(N).EQ.GND) GOTO 30
	   IF(ISHED(N).LE.255)GOTO 30
	   ICNO=ISHED(N)/256
	   IF(ICLIST(ICNO,1).NE.0)GOTO 30
	   ICLIST(ICNO,1)=LTRX
	   WRITE(3,20)ICNO
20	   FORMAT(' ','What type is IC No',I4,'?')
30	CONTINUE
C
C Now check that all ICs in IC list have been found in the
C IC library (this is done by LIBSET)
	DO 50 I=1,MAXICS
	   IF (ICLIST(I,1).EQ.0 .OR. ICPTR(I).NE.0) GOTO 50
	   DO J = 1,UNKPTR
	      DO K = 1,10
		 IF (ICLIST(I,K).NE.ICLIST(UNKICS(J),K)) GOTO 33
	      ENDDO
	      GOTO 50				! moaned re. this before
33	      CONTINUE
	   ENDDO
C
C a new unknown IC
	   IF (UNKPTR.LT.MAXUNK) THEN
	      UNKPTR = UNKPTR+1
	      UNKICS(UNKPTR) = I
	   ENDIF
	   DO NONBLK=1,9
	      IF (ICLIST(I,NONBLK+1).EQ.0) GOTO 35 ! terminate on blank
	   ENDDO
	   NONBLK = 10				! no terminator
35	   WRITE (3,40) (ICLIST(I,JJ),JJ=1,NONBLK)
40	   FORMAT(' ',<NONBLK>A1,' is not in the library')
50	CONTINUE
	RETURN
C
	END
