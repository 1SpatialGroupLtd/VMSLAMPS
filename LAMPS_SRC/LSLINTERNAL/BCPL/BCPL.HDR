// BCPL library header 01-Jun-1981GLOBAL $(GLOB                        //      convention for describing file manipulation                        //      is:-                        //      D = ddname, a bcpl string holding a file title                        //      S = strpointer, a +ve value used by the library                        //      E = error, a negative result                        //      COS = current output stream                        //      CIS = current input stream                        //      [  ] = type of arguments and result                        //      (   ) = environment used by callstart           : 1     // rt  entry pointstop            : 2     // rt  exitexitstatus      : 3     //  v  exit status returned at finishsyscommand      : 4     //  v  channel for sys$commandsyserror        : 5     //  v  channel for sys$errorreadrec         : 6     // fn  (chan,ptr,siz,recno)writerec        : 7     // fn  or of (ptr,siz)binrdch         : 8     // fn  8 bit characters binwrch         : 9     // fn  8 bit character writefindinput       :10     // fn  creates input stream [d->s,e]findoutput      :11     // fn  creates output stream [d->s,e]setdef          :12     // rt sets attributes for next findselectinput     :14     // fn  selects input stream as currentselectoutput    :15     // fn  selects output stream as currentsysin           :16     //  v  default input stream (kb:/ln:cmi)sysout          :17     //  v  default output stream (kb:/ln:cmo)endread         :18     // fn  terminate current input; unset selection [(cis)]endwrite        :19     // fn  terminate current output stream [(cos)]rewind          :20     // fn  rewinds current input if possible [(cis)->s,0,e]endtoinput      :21     // fn  closes current output, and reopens for input [(cos)->s,0,e]rdch            :22     // fn  read a character from current input [(cis) ?->ch,endstreamch]wrch            :23     // fn  write a char to current output [(cos) ch->?,eom]input           :24     // fn  returns currently selected input pointer (or 0)output          :25     // fn  returns currently selected output pointer (or 0)unrdch          :26     // rt  causes rdch to return same char as last time [(cis)]stringio        :27     //  v  channel for string buffer outputstringbuffer    :28     //  v  integer pointer to buffer stringreadvec		:29	// rt  reads a vector from input streamwritevec	:30	// rt  writes a vector (addr,#words) to outputchangephase     :31     // fn  causes named program to be loaded and enteredgetcommand      :32     // rt  routine to get command parsedgetvec		:33	// fn  getvec(n) returns a vector 0..nfreevec		:34	// rt  freevec(v) returns the vector ( from getvec)statusfile      :40     // fn  return status of 'file [d->v,e]'deletefile      :41     // fn  delete 'file'; no errors [d->?]renamefile      :42     // fn  rename file1 as file2 [d1,d2->0,e]parsefile	:43	// rt  parses filespec ->(S,V) vec is set to new fspecdate            :45     // fn  returns date as given bcpl string (v=vec 5) [v->s]tod             :46     // fn  returns time of day, ditto. (v=vec 5) [v->s]time            :50     // fn  returns number of clock half ticks since startlevel           :51     // fn  returns p-pointer for use by longjumplongjump        :52     // rt  causes non-local jumpaptovec         :53     // rt  good old aptovecrbyte           :54     // fn  takes m/c type addresswbyte           :55     // rt  dittopackstring      :56     // fn  pack vec char into stringunpackstring    :57     // fn  unpack string into vectorcomparestring   :58     // fn  compares strings a,b giving a<b->-1,a=b->0,1stringlength    :59     // fn  returns length in chars of stringskiptoeol       :62     // fn  skip to end of line on ciscopytext        :63     // fn  copy text from cis to cos until char metwritedate       :66     // rt  write date on coswritetime       :67     // rt  write time on cosnewline         :70     // rt  prints a newline on current outputwriten          :71     // rt  writes a decimal numberwrited          :72     // rtwritehex        :73     // rt  writes a hex numberwriteoct        :74     // rt  writes in octalwrites          :75     // rt  write a stringwritef          :76     // rt  general purpose format driven op rtnreadn           :77     // fn  read a decimal numberterminator      :78     //  v  terminating char from readngetbyte         :80     // fnputbyte         :81     // fn  //// 90-97 reserved for debug addressesdebugroutine	:98	// rt  a suitable user exit routineuserexit        :98     // rt  user routine called after stop/finishexception       :99     // fn  user exception handler established outside start$)GLOBMANIFEST        $(man           // system manifest constantsendstreamch     = -1endrecordch     = -2bytesperword    = 4maxint          =2147483647$)man.