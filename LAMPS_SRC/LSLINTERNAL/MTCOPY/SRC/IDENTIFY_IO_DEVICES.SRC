	LOGICAL*4 FUNCTION IDENTIFY_IO_DEVICES
C
***	IDENT	15FE90
***	MODULE	IDENTIFY_IO_DEVICES

C	Copyright : Laser-Scan Laboratories Ltd., Cambridge, England

C	Created   : Andrew C Morris			18-Apr-1989

C Description
C	Finds whether input and output devices are magtape or diskfile
C
	IMPLICIT NONE
C
	INCLUDE 'LSL$CMNMTCOPY:MTCOPYMSG.PAR'
	INCLUDE 'LSL$CMNMTCOPY:MTCOPY.PAR'
C
	INCLUDE 'LSL$CMNLSL:FILENAME.CMN'
	INCLUDE 'LSL$CMNMTCOPY:MTCOPY.CMN'
C
	INCLUDE '($DCDEF)'
	INCLUDE '($DEVDEF)'
	INCLUDE '($DVIDEF)'
C
C Workspace
	INTEGER*4	STATUS
	INTEGER*4	DEV_CLASS,DEV_STATUS
C
	LOGICAL*1	WRITE_LOCKED,MOUNTED_FOREIGN,MOUNTED
C
C Functions
	INTEGER*4	LIB$EXTV
	INTEGER*4	LIB$GETDVI
	INTEGER*4	EXPFLN
	INTEGER*4	PUTFLN
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
	IDENTIFY_IO_DEVICES = .FALSE.
C
C See if input device is file or tape
C
C Check input spec.
	STATUS = PUTFLN(INPUT_DEV_SPEC(:INPUT_DEV_LEN))
	IF (.NOT.STATUS) THEN
	   CALL LSL_PUTMSG(STATUS)
	   CALL LSL_PUTMSG(MTCOPY__INVALIDINPUT,
     &	      INPUT_DEV_SPEC(:INPUT_DEV_LEN))
	   GOTO 999
	ENDIF
C If no device, assume current device is file-oriented
	IF (.NOT.HAD_DEV) THEN
	   INPUT_DEV = FILE
	   GOTO 200
	ENDIF
C
	STATUS = LIB$GETDVI(DVI$_DEVCLASS,,
     &	   INPUT_DEV_SPEC(:INPUT_DEV_LEN),DEV_CLASS)
	IF (.NOT.STATUS) THEN
	   CALL LSL_PUTMSG(STATUS)
	   CALL LSL_PUTMSG(MTCOPY__INVALIDINPUT,
     &	      INPUT_DEV_SPEC(:INPUT_DEV_LEN))
	   GOTO 999
	ELSE IF (DEV_CLASS.EQ.DC$_DISK) THEN
	   INPUT_DEV = FILE
	ELSE IF (DEV_CLASS.EQ.DC$_TAPE) THEN
	   INPUT_DEV = TAPE
	ELSE
	   CALL LSL_PUTMSG(MTCOPY__ILLEGALDEV)
	   GOTO 999
	ENDIF
C
C If is tape, check whether it is mounted and foreign
C
	IF (INPUT_DEV.EQ.TAPE) THEN
	   STATUS = LIB$GETDVI(DVI$_DEVCHAR,,
     &	      INPUT_DEV_SPEC(:INPUT_DEV_LEN),DEV_STATUS)
	   IF (.NOT.STATUS) THEN
	      CALL LSL_PUTMSG(STATUS)
	      GOTO 999
	   ELSE
	      MOUNTED = LIB$EXTV(DEV$V_MNT,1,DEV_STATUS)
	      MOUNTED_FOREIGN = LIB$EXTV(DEV$V_FOR,1,DEV_STATUS)
	      IF (.NOT.MOUNTED) THEN
	         CALL LSL_PUTMSG(MTCOPY__NOTMNTFOR)
	         GOTO 999
	      ELSE 
	         IF (.NOT.MOUNTED_FOREIGN) THEN
		    INPUT_DEV = FILE
		 ENDIF
	      ENDIF
	   ENDIF
	ENDIF
C
C Default to extension .DMT if FILE 
200	IF (INPUT_DEV.EQ.FILE .AND. .NOT.HAD_EXT) THEN
	   HAD_EXT = .TRUE.
	   STR_EXT = 'DMT'
	   LEN_EXT = 3
	   STATUS = EXPFLN(INPUT_DEV_SPEC, INPUT_DEV_LEN)
	ENDIF
C
C See if output device is file or tape
C
C Check output spec.
C
	STATUS = PUTFLN(OUTPUT_DEV_SPEC(:OUTPUT_DEV_LEN))
	IF (.NOT.STATUS) THEN
	   CALL LSL_PUTMSG(STATUS)
	   CALL LSL_PUTMSG(MTCOPY__INVALIDOUTPUT,
     &	      OUTPUT_DEV_SPEC(:OUTPUT_DEV_LEN))
	   GOTO 999
	ENDIF
C If no device, assume current device is file-oriented (write-permitted!)
	IF (.NOT.HAD_DEV) THEN
	   OUTPUT_DEV = FILE
	   GOTO 300
	ENDIF
C
	STATUS = LIB$GETDVI(DVI$_DEVCLASS,,
     &	   OUTPUT_DEV_SPEC(:OUTPUT_DEV_LEN),DEV_CLASS)
	IF (.NOT.STATUS) THEN
	   CALL LSL_PUTMSG(STATUS)
	   CALL LSL_PUTMSG(MTCOPY__INVALIDOUTPUT,
     &	      OUTPUT_DEV_SPEC(:OUTPUT_DEV_LEN))
	   GOTO 999
	ELSE IF (DEV_CLASS.EQ.DC$_DISK) THEN
	   OUTPUT_DEV = FILE
	ELSE IF (DEV_CLASS.EQ.DC$_TAPE) THEN
	   OUTPUT_DEV = TAPE
	ELSE
	   CALL LSL_PUTMSG(MTCOPY__ILLEGALDEV)
	   GOTO 999
	ENDIF
C
C If is tape, check that it is mounted foreign and not write-locked
C
	IF (OUTPUT_DEV.EQ.TAPE) THEN
	   STATUS = LIB$GETDVI(DVI$_DEVCHAR,,
     &	      OUTPUT_DEV_SPEC(:OUTPUT_DEV_LEN),DEV_STATUS)
	   IF (.NOT.STATUS) THEN
	      CALL LSL_PUTMSG(STATUS)
	      GOTO 999
	   ELSE
	      MOUNTED = LIB$EXTV(DEV$V_MNT,1,DEV_STATUS)
	      MOUNTED_FOREIGN = LIB$EXTV(DEV$V_FOR,1,DEV_STATUS)
	      WRITE_LOCKED = LIB$EXTV(DEV$V_SWL,1,DEV_STATUS)
	      IF (WRITE_LOCKED) THEN
	         CALL LSL_PUTMSG(MTCOPY__WRTLOCKED)
	         GOTO 999
	      ENDIF
	      IF (.NOT.MOUNTED) THEN
	         CALL LSL_PUTMSG(MTCOPY__NOTMNTFOR)
	         GOTO 999
	      ELSE 
	         IF (.NOT.MOUNTED_FOREIGN) THEN
		    OUTPUT_DEV = FILE
		 ENDIF
	      ENDIF
	   ENDIF
	ENDIF
C Default to extension .DMT if FILE 
300	IF (OUTPUT_DEV.EQ.FILE .AND. .NOT.HAD_EXT) THEN
	   HAD_EXT = .TRUE.
	   STR_EXT = 'DMT'
	   LEN_EXT = 3
	   STATUS = EXPFLN(OUTPUT_DEV_SPEC, OUTPUT_DEV_LEN)
	ENDIF
C
C
C good exit
900	IDENTIFY_IO_DEVICES = .TRUE.
C
999	RETURN
	END
