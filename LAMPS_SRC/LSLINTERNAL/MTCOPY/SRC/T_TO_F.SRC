C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1990-10-01 11:50:52.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL*4 FUNCTION TAPE_TO_FILE
C
***	IDENT	01OC90
***	MODULE	TAPE_TO_FILE

C	Copyright : Laser-Scan Laboratories Ltd., Cambridge, England

C	Don't stop at multiple EOF's	(bodge)		WJJ	 1-Oct-1990
C	Allow for blocks up to 64000 bytes		WJJ	14-Sep-1990
C	Created						ACM	14-Apr-1986

C Description
C	Copies data from magtape to diskfile, including tape-marks,
C	except last one (of 2) (VAX native mode version, for speed)
C
	IMPLICIT NONE
C
	INCLUDE 'LSL$CMNLSL:LSLLIBMSG.PAR'
	INCLUDE 'LSL$CMNMTCOPY:MTCOPYMSG.PAR'
C
	INCLUDE 'LSL$CMNLSL:MTIVCM.CMN'
C	INCLUDE 'LSL$CMNLSL:MTOVCM.CMN'
	INCLUDE 'LSL$CMNMTCOPY:MTCOPY.CMN'
C
C Workspace
	INTEGER*4	LBYTES,STATUS,I

	INTEGER*2	IRECNO,BYTECT,NBYTES
C
	EQUIVALENCE	(LBYTES, NBYTES)
C
	LOGICAL*1	OUTPUT,EOTAPE,EOFILE
C
C Functions
	INTEGER*4	MTINIT,MTIRDB
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
	TAPE_TO_FILE = .FALSE.
	LBYTES = 0
C
C Set up magtape
C
	STATUS = MTINIT(INPUT_DEV_SPEC(:INPUT_DEV_LEN),.FALSE.)
	IF (.NOT.STATUS) THEN
	   CALL LSL_PUTMSG(MTCOPY__CANTOPNINPUT,
     &	      INPUT_DEV_SPEC(:INPUT_DEV_LEN))
	   GOTO 999
	ENDIF
C
C
C Open output file
C
	OPEN(UNIT=1,NAME=OUTPUT_DEV_SPEC(:OUTPUT_DEV_LEN),
     &	   TYPE='NEW',FORM='UNFORMATTED',ERR=25)
	GOTO 30
C
25	CALL LSL_PUTMSG(MTCOPY__CANTOPNOUTPUT,
     &	   OUTPUT_DEV_SPEC(:OUTPUT_DEV_LEN))
	GOTO 999
C
30	NFILES = 0
	IRECNO = 0
C
35	STATUS = MTIRDB(BUFF(1),BUFLEN,NBYTES)
	IF (.NOT.STATUS) GOTO 50
	IF (NBYTES.EQ.0) GOTO 50
	IF (IRECNO.EQ.0) NFILES = NFILES + 1
C
40	WRITE(1) NBYTES, (BUFF(I), I=1,LBYTES)
	IRECNO = IRECNO+1
	GOTO 35
C
C If some error (may be file-mark)
C
50	IF (STATUS.NE.LSL__EOF) THEN
	   CALL LSL_PUTMSG(MTIERR)
	   GOTO 990
	ENDIF
CCC	IF (IRECNO.EQ.0 .AND. NFILES.NE.0) GOTO 900
	IRECNO = -1		! new input file on tape-mark
	NBYTES = 1		! special code on disk for tape-mark
	LBYTES = 1
	GOTO 40			! rejoin output code
C
C
900	TAPE_TO_FILE = .TRUE.
990	CLOSE(UNIT=1)
999	RETURN
	END
