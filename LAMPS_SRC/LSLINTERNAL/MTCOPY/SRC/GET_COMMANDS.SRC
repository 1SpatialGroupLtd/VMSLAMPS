C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1990-02-15 17:26:24.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL*4 FUNCTION GET_COMMANDS
C
***	IDENT	15FE90
***	MODULE	GET_COMMANDS
C
C	Copyright : Laser-Scan Laboratories Ltd., Cambridge, England
C	Created   : ACM					Apr 1989
C
	IMPLICIT NONE
C
	INCLUDE 'LSL$CMNMTCOPY:MTCOPYMSG.PAR'
	INCLUDE 'LSL$CMNMTCOPY:MTCOPY.PAR'
C
	INCLUDE 'LSL$CMNLSL:CLD.CMN'
	INCLUDE 'LSL$CMNMTCOPY:MTCOPY.CMN'
C
C DCL command decoding workspace
	LOGICAL*4	ABSENT,PRESENT,HAD_QUAL,NEGATED
C
C Workspace
	INTEGER*4	STATUS
C
C Functions
	INTEGER*4	DCL_STARTUP,DCL_QUAL,DCL_FILE,DCL_INT
C
C Externals
	EXTERNAL	MTCOPY_CLD	! DCL command definitions
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
C	Obtains DCL-like parameters and qualifiers for MTCOPY
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
	GET_COMMANDS = .FALSE.	! assume failure
C
C Get command line
C
	STATUS = DCL_STARTUP(
     &			'MTCOPY',		! command verb
     &			.FALSE.,		! don't split param list
     &			MTCOPY_CLD,		! CLD module name
     &			.TRUE.)			! allow error reporting
C
	IF (.NOT.STATUS) GOTO 999
C
C Get input device filespec
C
	STATUS = DCL_FILE('INPUT_DEV_SPEC',' ',ABSENT,.FALSE.,.TRUE.)
	IF (.NOT.STATUS) GOTO 999
	INPUT_DEV_SPEC = FILARY(1)(1:FIL_LEN(1))
	INPUT_DEV_LEN = FIL_LEN(1)
C
C Get output device filespec
C
	STATUS = DCL_FILE('OUTPUT_DEV_SPEC',' ',ABSENT,.FALSE.,.TRUE.)
	IF (.NOT.STATUS) GOTO 999
	OUTPUT_DEV_SPEC = FILARY(1)(1:FIL_LEN(1))
	OUTPUT_DEV_LEN = FIL_LEN(1)
C
C Get /DENSITY qualifier
C
	STATUS = DCL_INT('DENSITY',.TRUE.)
	IF (.NOT.STATUS) GOTO 999
	IF (NUMINT.GT.0) THEN
	   DENSITY = IARRAY(1)
	ELSE
	   DENSITY = 1600
	ENDIF
	IF (DENSITY.EQ.800) THEN
	   DENSITY = 0
	ELSEIF (DENSITY.EQ.1600) THEN
	   DENSITY = -1
	ELSEIF (DENSITY.EQ.6250) THEN
	   DENSITY = -2
	ELSE
	   CALL LSL_PUTMSG(MTCOPY__BADDENS)
	   GOTO 999
	ENDIF
C
C Get /REWIND_OUTPUT qualifier
C
	STATUS = DCL_QUAL('REWIND_OUTPUT',REWIND_OUTPUT,
     &	   PRESENT,NEGATED,.TRUE.)
	IF (.NOT.STATUS) GOTO 999
C
C Get /APPEND qualifier
C
	STATUS = DCL_QUAL('APPEND',APPEND,PRESENT,NEGATED,.TRUE.)
	IF (.NOT.STATUS) GOTO 999
C
	GET_COMMANDS = .TRUE.
C
999	RETURN
	END
