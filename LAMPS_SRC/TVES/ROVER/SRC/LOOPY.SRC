	SUBROUTINE LOOPY
C
***	MODULE	LOOPY
***	IDENT	13MY88
C
C Copyright Laser Scan Laboratories Limited, Cambridge, England.
C Author R.Daly.
C
C Created.					RD	 8-Sep-1983
C Modified to handle CB entries                 DRC      9-May-1988
C
C Called with an IFF FS entry in hand. Scans successive entries
C until last CB , or a CB with a 'pen up' start is found.
C Returns TRUE if last point is same as first (feature is a loop).
C Restores IFF position to that on entry.
C No errors are produced, in case of difficulty attempt to reposition
C the IFF file and let our caller discover the problem.
C
	IMPLICIT NONE
C
	INCLUDE	'LSL$CMNIFF:CB.STR'
	INCLUDE 'LSL$CMNROVER:CB.CMN'
	INCLUDE	'LSL$CMNROVER:CURFT.CMN'
	INCLUDE	'LSL$CMNIFF:IFFHAN.CMN'
	INCLUDE 'LSL$CMNIFF:IFFSTR.CMN'
C
C W/s.
	REAL START(2)		! 1st point of ft.
	REAL END(2)		! last point of ft.
	INTEGER*4 LASTCB	! address of last CB
	INTEGER*4 CURPOS	! initial position in IFF file.
	INTEGER*2 IECODE	! IFF entry read in.
	INTEGER*2 IELEN		! length of entry read in.
	INTEGER*2 IENDS		! ST ends flag
	LOGICAL*1 FIRST		! on first CB
C
C
C Remember current position in IFF file.
	CURPOS=LPOSH
C
C Find the 1st ST entry.
	CALL IFFNXC('CB',IELEN)
	FIRST=.TRUE.
	LASTCB=0
C
C Loop through the STs until the last one is found.
C First read the last point of this entry.
10	CALL EIHRCB_HEAD(CBH)
	IF(CBH.NROW.LE.0)GOTO 50
	IF (FIRST) THEN			! on our first CB
	   CALL EIHRCB_DATA(CBD)! read into scratch, and extract START
C
C get first and last point of this first CB
	   CALL IFS_CB_READ(CBH,CBD,START,2,COLHXY,1,1)
	   CALL IFS_CB_READ(CBH,CBD,END,2,COLHXY,CBH.NROW,CBH.NROW)
	   FIRST = .FALSE.		! got start point now
	ELSE
	   IF ((CBH.FLAGS.AND.1).EQ.0) GOTO 40	! pen up
	   LASTCB = LPOSH		! remember position
	ENDIF
C
20	CALL IFFNXT(IECODE,IELEN)
	IF (IELEN.EQ.-1) GOTO 40
	IF (IECODE.EQ.'VO') GOTO 20	! ignore void entries.
	IF (IECODE.EQ.'CB') GOTO 10
C
C Run out of relevant CB's so check whether a loop or not
C Go back for last point if needed
40	IF (LASTCB.NE.0) THEN
	   CALL IFFPKE(IECODE,IELEN,LASTCB)
	   CALL EIHRCB_HEAD(CBH)
	   IF (CBH.NROW.LE.0) GOTO 50	! eh?
	   CALL EIHRCB_DATA(CBD)! read into scratch
	   CALL IFS_CB_READ(CBH,CBD,END,2,COLHXY,CBH.NROW,CBH.NROW)
	ENDIF
	IF (START(1).EQ.END(1) .AND. START(2).EQ.END(2)) LOOP=.TRUE.
C
C Restore the initial IFF position.
50	CALL IFFPKE(IECODE,IELEN,CURPOS)
C
	RETURN
C
	END
