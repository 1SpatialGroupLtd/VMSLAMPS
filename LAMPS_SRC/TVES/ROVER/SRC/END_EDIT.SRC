C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1988-03-22 16:42:54.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE END_EDIT
C
***	MODULE	END_EDIT
***	IDENT	22MR88
C
C Copyright Laser-Scan Laboratories Ltd., Cambridge, England
C
C Author M.W.S. Reid
C
C 	Created					MWSR    21-Dec-1987
C
C deals with end edit command
C
	IMPLICIT NONE
C
C Parameters
	INCLUDE	'LSL$CMNDTI:DTIPAR.PAR'
C
C Common Blocks
	INCLUDE	'LSL$CMNDTI:DTIHDR.CMN'
	INCLUDE	'LSL$CMNROVER:DTICMN.CMN'
	INCLUDE	'LSL$CMNROVER:ROVCMN.CMN'
	INCLUDE	'LSL$CMNROVER:COLCMN.CMN'
	INCLUDE	'LSL$CMNROVER:RASTED.CMN'
C
C Functions
	INTEGER*4	END_BYTE	!  ends for byte
	INTEGER*4	END_WORD	! ends for word
	INTEGER*4	END_LONG	! ends for word
	INTEGER*4	END_REAL	! ends for word
	INTEGER*2	ICOL		! works out colour
C
C Local Variables
	INTEGER*2	COL		! colour to draw
	REAL    	VAL		! edited height value
	INTEGER*2	WVAL
	INTEGER*4	LVAL		! integer of above
	INTEGER*4	RET		! return code
C
C prompt and load edit pixels with input value
C have to do this according to data type
	IF (DATA_TYPE(DTICHAN) .EQ. DATA_BYTE) THEN
	   RET = END_BYTE(VAL)
	ELSEIF (DATA_TYPE(DTICHAN) .EQ. DATA_WORD) THEN
	   RET =END_WORD(VAL)
	ELSEIF (DATA_TYPE(DTICHAN) .EQ. DATA_LONG) THEN
	   RET =END_LONG(VAL)
	ELSEIF (DATA_TYPE(DTICHAN) .EQ. DATA_REAL) THEN
	   RET =END_REAL(VAL)
	ENDIF
	IF (RET) THEN
C
C colour new pixels appropriately
C zero extend to word	
	   COL= COLTAB(ICOL(DTICHAN,VAL),DTICHAN).AND. 255
	   CALL DISPLAY_EDIT
     &	   (EDIT_COORDS(1,1),N_EDIT_PTS,COL,0,COLOUR_MAP)
	   NEW_WINDOW_RANGE  = .TRUE.	! calculate new window range
	ELSE
C 
C redraw all pixels in original colour
	   IF(AREAING)THEN
	      CALL REPLACE_EDIT(EDIT_COORDS(1,1),MASTER(N_MASTER-1))
	   ELSE
	      CALL REPLACE_EDIT(EDIT_COORDS(1,1),N_EDIT_PTS)
	   ENDIF
C   	   
	ENDIF
C
C reset edited point counters
	N_EDIT_PTS = 0
	N_MASTER = 0
C	   
	CALL UPDATE_STATUS(CURPOS)
C
	HAD_EDIT = .FALSE.
	LINING = .FALSE.
	RETURN
	END
C
	INTEGER*4 FUNCTION END_BYTE(RVAL)
C
***	MODULE	END_BYTE
***	IDENT	21DE87
C
C Copyright Laser-Scan Laboratories Ltd., Cambridge, England
C
C Author M.W.S. Reid
C
C 	Created					MWSR    21-Dec-1987
C
C prompts for height value, turns it into a byte value and writes it 
C to the file in the designated pixel positions.
C
	IMPLICIT NONE
C
C argument
	REAL		RVAL		! real value read	
C
C Common Blocks
	INCLUDE	'LSL$CMNLSL:CMDCOM.CMN'
	INCLUDE	'LSL$CMNROVER:DTICMN.CMN'
	INCLUDE	'LSL$CMNROVER:ROVCMN.CMN'
	INCLUDE	'LSL$CMNROVER:RASTED.CMN'
C
C Functions
	INTEGER*4	TT_READ_NUMBER
	INTEGER*4	DTI_WRITE_BYTE_DATA
C
C Local Variables
	BYTE		BVAL		! turned it into a byte value
	INTEGER*2	WVAL		! word value
	INTEGER*4	I		! counter
	INTEGER*4	RET		! return code
	LOGICAL		BLANK		! user typed nothing
	EQUIVALENCE	(BVAL,WVAL)
C
	WVAL = 0
	IF (CMDRCT .EQ. 0) THEN
	   GOTO 10
	ELSE
	   RVAL = REALAR(1)
	   END_BYTE = .TRUE.
	   GOTO 12
	ENDIF
10	END_BYTE  = TT_READ_NUMBER(RVAL,BLANK)
	IF (BLANK) GOTO 10
12	IF (.NOT. END_BYTE) THEN 
	   GOTO 999
	ELSEIF (RVAL .LT. 0 .OR. RVAL .GT. 255) THEN
	   CALL WRITEF('%S Specifying command END',EBELL)
	   CALL WRITEF
     &	   ('Command requires a byte value in the range 0 to 255')
	   GOTO 10
	ELSE
	   WVAL = NINT(RVAL)
	   DO 20 I = 1,N_EDIT_PTS
	      END_BYTE = DTI_WRITE_BYTE_DATA(DTICHAN,BVAL,
     &				      EDIT_COORDS(1,I),
     &		                      EDIT_COORDS(2,I))
	      IF (.NOT. END_BYTE) THEN
	         CALL LSL_PUTMSG(END_BYTE)
	      ENDIF
20	   CONTINUE
	ENDIF
999	RETURN
	END
C
	INTEGER*4 FUNCTION END_WORD(RVAL)
C
***	MODULE	END_WORD
***	IDENT	21DE87
C
C Copyright Laser-Scan Laboratories Ltd., Cambridge, England
C
C Author M.W.S. Reid
C
C 	Created					MWSR    21-Dec-1987
C
C prompts for height value, turns it into a word value and writes it 
C to the file in the designated pixel positions.
C
	IMPLICIT NONE
C
C Argument
	REAL		RVAL		! real value read	
C
C Common Blocks
	INCLUDE	'LSL$CMNLSL:CMDCOM.CMN'
	INCLUDE	'LSL$CMNROVER:DTICMN.CMN'
	INCLUDE	'LSL$CMNROVER:ROVCMN.CMN'
	INCLUDE	'LSL$CMNROVER:RASTED.CMN'
C
C Functions
	INTEGER*4	TT_READ_NUMBER
	INTEGER*4	DTI_WRITE_WORD_DATA
C
C Local Variables
	INTEGER*2	WVAL		! turned it into a word value
	INTEGER*4	I		! counter
	INTEGER*4	RET		! return code
	LOGICAL		BLANK		! user typed nothing
C
	IF (CMDRCT .EQ. 0) THEN
	   GOTO 10
	ELSE
	   RVAL = REALAR(1)
	   END_WORD= .TRUE.
	   GOTO 12
	ENDIF
10	END_WORD= TT_READ_NUMBER(RVAL,BLANK)
	IF (BLANK) GOTO 10
12	IF (.NOT. END_WORD) THEN 
	   GOTO 999
	ELSEIF (RVAL .LT. -32767  .OR. RVAL .GT. 32767) THEN
	   CALL WRITEF('%S Specifying command END',EBELL)
	   CALL WRITEF
     &	   ('Command requires a word value in the range -32767 to 32766')
	   GOTO 10
	ELSE
	   WVAL = NINT(RVAL)
	   DO 20 I = 1,N_EDIT_PTS
	      END_WORD = DTI_WRITE_WORD_DATA(DTICHAN,WVAL,
     &				      EDIT_COORDS(1,I),
     &		                      EDIT_COORDS(2,I))
	      IF (.NOT. END_WORD) THEN
	         CALL LSL_PUTMSG(END_WORD)
		 GOTO 999
	      ENDIF
20	   CONTINUE
	ENDIF
999	RETURN
	END
C
	INTEGER*4 FUNCTION END_LONG(RVAL)
C
***	MODULE	END_LONG
***	IDENT	21DE87
C
C Copyright Laser-Scan Laboratories Ltd., Cambridge, England
C
C Author M.W.S. Reid
C
C 	Created					MWSR    21-Dec-1987
C
C prompts for height value, turns it into a longword value and writes 
C it  to the file in the designated pixel positions.
C
	IMPLICIT NONE
C
C Argument
	REAL		RVAL		! real value read	
C
C Common Blocks
	INCLUDE	'LSL$CMNLSL:CMDCOM.CMN'
	INCLUDE	'LSL$CMNROVER:DTICMN.CMN'
	INCLUDE	'LSL$CMNROVER:ROVCMN.CMN'
	INCLUDE	'LSL$CMNROVER:RASTED.CMN'
C
C Functions
	INTEGER*4	TT_READ_NUMBER
	INTEGER*4	DTI_WRITE_LONG_DATA
C
C Local Variables
	INTEGER*4	LVAL		! turned it into a longword 
	INTEGER*4	I		! counter
	INTEGER*4	RET		! return code
	LOGICAL		BLANK		! user typed nothing
C
	IF (CMDRCT .EQ. 0) THEN
	   GOTO 10
	ELSE
	   RVAL = REALAR(1)
	   END_LONG= .TRUE.
	   GOTO 12
	ENDIF
10	END_LONG= TT_READ_NUMBER(RVAL,BLANK)
	IF (BLANK) GOTO 10
12	IF (.NOT. END_LONG) THEN 
	   GOTO 999
	ELSE
	   LVAL = NINT(RVAL)
	   DO 20 I = 1,N_EDIT_PTS
	      END_LONG = DTI_WRITE_LONG_DATA(DTICHAN,LVAL,
     &				      EDIT_COORDS(1,I),
     &		                      EDIT_COORDS(2,I))
	      IF (.NOT. END_LONG) THEN
	         CALL LSL_PUTMSG(END_LONG)
	         GOTO 999
	      ENDIF
20	   CONTINUE
	ENDIF
999	RETURN
	END
C
	INTEGER*4 FUNCTION END_REAL(RVAL)
C
***	MODULE	END_REAL
***	IDENT	21DE87
C
C Copyright Laser-Scan Laboratories Ltd., Cambridge, England
C
C Author M.W.S. Reid
C
C 	Created					MWSR    21-Dec-1987
C
C prompts for height value, writes it 
C to the file in the designated pixel positions.
C
	IMPLICIT NONE
C
C Argument
	REAL		RVAL		! real value read	
C
C Common Blocks
	INCLUDE	'LSL$CMNLSL:CMDCOM.CMN'
	INCLUDE	'LSL$CMNROVER:DTICMN.CMN'
	INCLUDE	'LSL$CMNROVER:ROVCMN.CMN'
	INCLUDE	'LSL$CMNROVER:RASTED.CMN'
C
C Functions
	INTEGER*4	TT_READ_NUMBER
	INTEGER*4	DTI_WRITE_REAL_DATA
C
C Local Variables
	INTEGER*4	I		! counter
	INTEGER*4	RET		! return code
	LOGICAL		BLANK		! user typed nothing
C
	IF (CMDRCT .EQ. 0) THEN
	   GOTO 10
	ELSE
	   RVAL = REALAR(1)
	   END_REAL= .TRUE.
	   GOTO 12
	ENDIF
10	END_REAL= TT_READ_NUMBER(RVAL,BLANK)
	IF (BLANK) GOTO 10
12	IF (.NOT. END_REAL) THEN 
	   GOTO 999
	ELSE
	   DO 20 I = 1,N_EDIT_PTS
	      END_REAL = DTI_WRITE_REAL_DATA(DTICHAN,RVAL,
     &				      EDIT_COORDS(1,I),
     &		                      EDIT_COORDS(2,I))
	      IF (.NOT. END_REAL) THEN
	         CALL LSL_PUTMSG(END_REAL)
	         GOTO 999
	      ENDIF
20	   CONTINUE
	ENDIF
999	RETURN
	END

