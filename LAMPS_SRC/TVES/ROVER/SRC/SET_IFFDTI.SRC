C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1989-02-03 11:37:16.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE SET_IFFDTI
C
***	MODULE	SET_IFFDTI
***	IDENT	03FE89
C
C Copyright Laser-Scan Laboratories Ltd., Cambridge, England
C
C Author M.W.S. Reid
C
C 	Created					MWSR    22-Dec-1988
C
C calculates the equivalent IFF coordinates of the DTI file corners
C
	IMPLICIT NONE
C
C Parameters
***	PARAMETER/LSL$CMNDTI:DTIPAR/
C
C Arguments
C
C Common Blocks
***	COMMON/LSL$CMNDTI:DTIHDR/
***	COMMON/LSL$CMNDTI:DTIPROJ/
***	COMMON/LSL$CMNROVER:ROVCMN/
***	COMMON/LSL$CMNROVER:IFFCMN/
***	COMMON/LSL$CMNROVER:DTICMN/
***	COMMON/LSL$CMNROVER:DISCMN/
C
C Local Variables
	REAL*8		ABS_S_X_WIN,ABS_S_Y_WIN
	REAL*8		ABS_N_X_WIN,ABS_N_Y_WIN
C
	IF ((.NOT. HAD_PROJ_RECORD(DTICHAN)) .AND. 
     &       (HEADER_TYPE(DTICHAN).NE. DTI_UHL1) .AND. 
     &        (HEADER_TYPE(DTICHAN) .NE. DTI_TED4).OR. 
     &  (.NOT. HAD_ABSOLUTE).OR.(.NOT. DTILUN_INUSE(DTICHAN))) THEN
	   IFFDTI(1,1,IFFCHAN)=RANGE_VALUES(1,IFFCHAN)
	   IFFDTI(1,2,IFFCHAN)=RANGE_VALUES(3,IFFCHAN)
	   IFFDTI(2,1,IFFCHAN)=RANGE_VALUES(2,IFFCHAN)
	   IFFDTI(2,2,IFFCHAN)=RANGE_VALUES(4,IFFCHAN)
	   GOTO 999
	ENDIF
C
	IF (HEADER_TYPE(DTICHAN).EQ.DTI_TED4 .OR. 
     &     HEADER_TYPE(1).EQ.DTI_UHL1)THEN
C
C work out the absolute coordinates of the DTI window
	   ABS_S_X_WIN = LONREC(1,DTICHAN) 
	   ABS_S_Y_WIN = LATREC(1,DTICHAN) 
	   ABS_N_X_WIN = LONREC(3,DTICHAN) 
	   ABS_N_Y_WIN = LATREC(3,DTICHAN) 
C
	ELSE
C
C deal with projection record files
	   ABS_S_X_WIN = DTIPROJ_ORIGIN(1,DTICHAN)
	   ABS_S_Y_WIN = DTIPROJ_ORIGIN(2,DTICHAN)
	   IF (CUR_ROTATE(DTICHAN).EQ.DTI_ORDER_SW .OR. 
     &      CUR_ROTATE(DTICHAN) .EQ. DTI_ORDER_NE) THEN
	      ABS_N_X_WIN = 
     &        (X_EXTENT(DTICHAN)-1)*DTIPROJ_SAMPLE(1,DTICHAN)+
     &        DTIPROJ_ORIGIN(1,DTICHAN)
	      ABS_N_Y_WIN = 
     &        (Y_EXTENT(DTICHAN)-1)*DTIPROJ_SAMPLE(2,DTICHAN)+
     &        DTIPROJ_ORIGIN(2,DTICHAN)
C
	   ELSE
C
C rotated thro 90 degrees
	      ABS_N_X_WIN = 
     &        (Y_EXTENT(DTICHAN)-1)*DTIPROJ_SAMPLE(2,DTICHAN)+
     &        DTIPROJ_ORIGIN(1,DTICHAN)
	      ABS_N_Y_WIN = 
     &        (X_EXTENT(DTICHAN)-1)*DTIPROJ_SAMPLE(1,DTICHAN)+
     &        DTIPROJ_ORIGIN(2,DTICHAN)
	   ENDIF	     
	ENDIF
C
C calculate local iff values
	IFFDTI(1,1,IFFCHAN) = ABS_S_X_WIN-ORIGIN_OFFSET(1,IFFCHAN)
	IFFDTI(1,2,IFFCHAN) = ABS_S_Y_WIN-ORIGIN_OFFSET(2,IFFCHAN)
	IFFDTI(2,1,IFFCHAN) = ABS_N_X_WIN-ORIGIN_OFFSET(1,IFFCHAN)
	IFFDTI(2,2,IFFCHAN) = ABS_N_Y_WIN-ORIGIN_OFFSET(2,IFFCHAN)
C
999	RETURN
	END
