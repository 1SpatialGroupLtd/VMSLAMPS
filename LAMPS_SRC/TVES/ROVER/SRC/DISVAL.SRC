C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1989-03-17 09:21:38.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE DISVAL(QUADNO,DTI_NUM,VECTOR)
C
***	MODULE	DISVAL
***	IDENT	17MR89
C
C Copyright Laser-Scan Laboratories Ltd., Cambridge, England
C
C Author M.W.S. Reid
C
C 	Created					MWSR    24-Jul-1986
C
C Works out the display scale factor and position of a DTI matrix 
C DTI_NUM displayed in quadrant QUADNO.
C
	IMPLICIT NONE
C
C Common Blocks
	INCLUDE	'LSL$CMNROVER:GKS.CMN'
	INCLUDE	'LSL$CMNROVER:ROVCMN.CMN'
	INCLUDE	'LSL$CMNROVER:DTICMN.CMN'
	INCLUDE	'LSL$CMNROVER:DISCMN.CMN'
	INCLUDE	'LSL$CMNROVER:RASTED.CMN'
C
C arguments
	INTEGER*4	QUADNO		!quadrant number
	INTEGER*4	DTI_NUM		!DTI channel number
	LOGICAL		VECTOR		! true if called from inigks
C
C Local variables
	INTEGER*4	DIS_SIZE(2)	!matrix display area size
	INTEGER*4	N		!counter
	INTEGER		X1,Y1
	INTEGER		PX(2),PY(2)	! temps
	INTEGER*4	XSAMP, YSAMP	! local s
C
	IF (CUR_ROTATE(DTI_NUM).EQ.0.OR.CUR_ROTATE(DTI_NUM).EQ.2) THEN
	   X1 = 1
	   Y1 = 2
	   XSAMP = X_SAMPLE(DTI_NUM)
	   YSAMP = Y_SAMPLE(DTI_NUM)
	ELSE
	   YSAMP = X_SAMPLE(DTI_NUM)
	   XSAMP = Y_SAMPLE(DTI_NUM)
	   X1 = 2
	   Y1 = 1
	ENDIF
	IF (.NOT. HAD_SAMPLE) THEN
	   XSAMP = 1
	   YSAMP = 1
	ENDIF
C
C If a DTI file has not been specified then set up imaginary DTI window
C
	IF (.NOT.HADDTI(DTI_NUM)) THEN
	   MATSIZ(DTI_NUM,1) = 200
	   MATSIZ(DTI_NUM,2) = 200
	   X_SAMPLE(DTI_NUM) = 1
	   Y_SAMPLE(DTI_NUM) = 1
	ENDIF
C
	SF(DTI_NUM) = 1
C
	IF (DIVIDED.AND.BIGDIV(DTI_NUM)) THEN
C
C Centre of quadrant
	   SIGSWX(QUADNO)=NINT(
     &		(SX(QUADNO)+EX(QUADNO)+1-MATSIZ(DTI_NUM,X1))/2)
	   SIGSWY(QUADNO)=NINT(
     &		(SY(QUADNO)+EY(QUADNO)+1-MATSIZ(DTI_NUM,Y1))/2)
	ELSEIF (.NOT.DIVIDED.AND.BIGMAT(DTI_NUM)) THEN
C
C Centre of whole screen
	   SIGSWX(QUADNO)=NINT((RASTSZ(1)-MATSIZ(DTI_NUM,X1))/2.0)
	   SIGSWY(QUADNO)=NINT((RASTSZ(2)-MATSIZ(DTI_NUM,Y1))/2.0)
	ELSE
C
	   IF (DIVIDED) THEN
	      DIS_SIZE(1) = DISPEX(1)-DISPSX(1)+1
	      DIS_SIZE(2) = DISPEY(1)-DISPSY(1)+1
	   ELSE
	      DIS_SIZE(1) = DISPEX(0)-DISPSX(0)+1
	      DIS_SIZE(2) = DISPEY(0)-DISPSY(0)+1
	   ENDIF
C
C calculate scale factor
	   SF(DTI_NUM) = MIN(32,
     &  		     DIS_SIZE(1)*XSAMP/MATSIZ(DTI_NUM,X1),
     &			     DIS_SIZE(2)*YSAMP/MATSIZ(DTI_NUM,Y1))

C
C place in centre of display area
	   SIGSWX(QUADNO)=NINT((DISPSX(QUADNO)+DISPEX(QUADNO)+1-
     &				(MATSIZ(DTI_NUM,X1)/XSAMP)
     &                          *SF(DTI_NUM))/2)
	   SIGSWY(QUADNO)=NINT((DISPSY(QUADNO)+DISPEY(QUADNO)+1-
     &				(MATSIZ(DTI_NUM,Y1)/YSAMP)
     &                          *SF(DTI_NUM))/2)
	ENDIF
C
C 
C work out world coords of NE corner of display
	SIGNEX(QUADNO) = SIGSWX(QUADNO)+INT(SF(DTICHAN)
     &  *REAL(MATSIZ(DTI_NUM,X1))/REAL(XSAMP))
	SIGNEY(QUADNO) = SIGSWY(QUADNO)+INT(SF(DTICHAN)
     &  *REAL(MATSIZ(DTI_NUM,Y1))/REAL(YSAMP))
C
C set mouse pointer to be invisible if in editing mode
	IF (EDITING.OR.REGISTERING) THEN
	   IF (.NOT. VECTOR) THEN
	      PX(1) = SIGSWX(QUADNO)
	      PX(2) = SIGNEX(QUADNO)
	      PY(1) = SIGSWY(QUADNO)
	      PY(2) = SIGNEY(QUADNO)
	      CALL SET_PTR_VIS(.FALSE.,PX,PY)
	   ENDIF
	ENDIF
C
	RETURN
	END
