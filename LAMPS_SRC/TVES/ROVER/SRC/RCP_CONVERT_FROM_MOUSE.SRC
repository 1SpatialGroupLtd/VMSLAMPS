C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1989-02-09 16:56:58.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE RCP_CONVERT_FROM_MOUSE(X_COORD,Y_COORD)
C
***	IDENT	09FE89
***	MODULE	RCP_CONVERT_FROM_MOUSE
C
C	Copyright : Laser-Scan Laboratories, Cambridge, England
C	Created   : D R Catlow                   18-November-1988
C
C	Routine to convert trackerball matrix
C	coordinates into coordinates in the current 
C	units of measurement.
C
C---------------------------------------------------------------------------
C
	IMPLICIT NONE
C
***	COMMON/LSL$CMNDTI:DTIHDR/
***	COMMON/LSL$CMNDTI:DTIPROJ/
***	COMMON/LSL$CMNROVER:DTICMN/
***	COMMON/LSL$CMNROVER:RASTED/
***	COMMON/LSL$CMNROVER:ROVCMN/
***	COMMON/LSL$CMNROVER:DISCMN/
C
C	Argument
	REAL*8		X_COORD		!used to pass coordinates to be
	REAL*8		Y_COORD		!transformed, and to pass back
C					!transformed coordinates
C
C locals
	REAL*4		IN_X, IN_Y
	REAL*4		LOC_CURSX,LOC_CURSY
C-----------------------------------------------------------------------
	IN_X = X_COORD
	IN_Y = Y_COORD
C
C	Take the x,y coordinates of the RCP from the mouse position
C	and convert into the current units of measurement
C
	IF(UNTYPE(DTICHAN).NE. 1) THEN
C
C add or subtract 0.5 for registration coordinates depending on 
C current rotation
	   CALL MATRIX_POINT_FIVE(IN_X,IN_Y,
     &     CUR_ROTATE(DTICHAN),.TRUE.,LOC_CURSX, LOC_CURSY)
C
	   CALL DTI_MATRIX_TO_UNITS(DTICHAN, LOC_CURSX, 
     &     LOC_CURSY, UNTYPE(DTICHAN), CUR_ROTATE(DTICHAN),
     &         HAD_ABSOLUTE, X_COORD, Y_COORD)
	ELSE
C
C matrix coords slightly different
	   X_COORD = X_COORD-0.5
	   Y_COORD = Y_COORD-0.5
C
	ENDIF
C
999	RETURN
C
	END
