C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1988-03-17 13:35:40.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE END_INTERP
C
***	MODULE	END_INTERP
***	IDENT	17MR88
C
C Copyright Laser-Scan Laboratories Ltd., Cambridge, England
C
C Author M.W.S. Reid
C
C 	Created					MWSR    06-Jan-1987
C
C deals with the END command when using interp_edit
C
	IMPLICIT NONE
C
C
C Common Blocks
	INCLUDE	'LSL$CMNDTI:DTIPAR.PAR'
	INCLUDE	'LSL$CMNDTI:DTIHDR.CMN'
	INCLUDE	'LSL$CMNROVER:RASTED.CMN'
	INCLUDE	'LSL$CMNROVER:ROVCMN.CMN'
	INCLUDE	'LSL$CMNLSL:CMDCOM.CMN'
	INCLUDE	'LSL$CMNROVER:DTICMN.CMN'
C
C Functions
	INTEGER*4	TT_READ_NUMBER
C
C Local Variables
	LOGICAL		BLANK		! user supplied height ?
	INTEGER*4	RET		! return code
	LOGICAL		NEWHGT1		! true if edit heights of line 1
	LOGICAL		NEWHGT2		! true if edit heights of line  
	REAL		RVAL		! value supplied by user
	REAL		HGT1,HGT2	! new heights for two lines
C
C check for stupidities
	IF (FIRST_INTERP) THEN
	   IF (N_EDIT_PTS .EQ. 0) THEN
	      CALL WRITEF
     &	      ('%S no edit pixels defined',EBELL)
	      GOTO  999
	   ENDIF
	ELSE
	   IF (N_EDIT_PTS .EQ. FIRST_POS) THEN
	      CALL WRITEF
     &	     ('%S no pixels defined in second line',EBELL)
	      GOTO 999
	   ENDIF
	ENDIF
C	  
C first need to prompt for  value
	IF (CMDRCT .EQ. 0) THEN
	   GOTO 10
	ELSE
	   RVAL = REALAR(1)
	   RET = .TRUE.
	   BLANK = .FALSE.
	   GOTO 12
	ENDIF
10	RET = TT_READ_NUMBER(RVAL,BLANK)
12	IF ( RET) THEN 
	   IF(BLANK) THEN 
	      IF (FIRST_INTERP) THEN
	         NEWHGT1 = .FALSE.
	      ELSE
		 NEWHGT2 = .FALSE.
	      ENDIF
	   ELSE
C
C should put checking of value in here according to data type
	      IF (DATA_TYPE(DTICHAN) .EQ. DATA_BYTE) THEN
	         IF (RVAL .LT. 0 .OR. RVAL .GT. 255) THEN
		    CALL WRITEF('%S specifying command END',EBELL)
	            CALL WRITEF
     &	        ('Command requires byte value in the range 0 to 255')  
	            GOTO 10
		 ENDIF
	      ELSEIF (DATA_TYPE(DTICHAN) .EQ. DATA_WORD) THEN
                 IF (RVAL .LT. -32767  .OR. RVAL .GT. 32767) THEN
		    CALL WRITEF('%S specifying command END',EBELL)
     	            CALL WRITEF
     &     ('Command requires integer value in the '
     &     //'range -32767 to 32766')
	            GOTO 10
		 ENDIF
	      ENDIF
C
	      IF (FIRST_INTERP) THEN
		 HGT1  = RVAL
	         NEWHGT1 = .TRUE.
	      ELSE
		 NEWHGT2 = .TRUE.
	         HGT2 = RVAL
	      ENDIF
	   ENDIF  
C
C if its the first of the two lines then mark the position in the edit
C buffer and give instructions for digitising second line.
	   IF (FIRST_INTERP) THEN
	      FIRST_POS = N_EDIT_PTS
	      CALL WRITEF('Please define second line')
	      FIRST_INTERP = .FALSE.
	   ELSE
C
C actually do the editing
	      CALL INTERP_EDIT(EDIT_COORDS(1,1),FIRST_POS,HGT1,NEWHGT1,
     &	                       EDIT_COORDS(1,(FIRST_POS+1)),
     &			       (N_EDIT_PTS-FIRST_POS),HGT2,NEWHGT2)
	      INTERPOLATING = .FALSE.
	      FIRST_INTERP = .TRUE.
	      N_EDIT_PTS = 0
	      N_MASTER = 0
	      HAD_EDIT = .FALSE.
C
C reset the cursor
	      CALL MOVE_CURSOR(X_CURDTI,Y_CURDTI,.TRUE.,.FALSE.)
	   ENDIF
	   NEW_WINDOW_RANGE  = .TRUE.
	ELSE
C
C control z on blank so abandon everything
	   CALL REPLACE_EDIT(EDIT_COORDS(1,1),N_EDIT_PTS)
	   INTERPOLATING = .FALSE.
	ENDIF
C
999	RETURN
	END
