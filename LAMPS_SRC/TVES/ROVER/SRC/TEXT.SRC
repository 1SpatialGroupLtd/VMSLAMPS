C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1989-02-06 16:08:14.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE TEXT(DTI_NUM,QUADNO,OFF) 
C
***	MODULE	TEXT
***	IDENT	06FE89
C
C	Copyright : Laser-Scan Laboratories Ltd, Cambridge, England
C	Author    : MWSR
C
C
	IMPLICIT NONE
C
	INCLUDE	'LSL$CMNROVER:GKSPAR.PAR'
C
	INCLUDE	'LSL$CMNLSL:EXPC.CMN'
	INCLUDE	'LSL$CMNROVER:DTICMN.CMN'	!DTM stuff
	INCLUDE	'LSL$CMNROVER:GKS.CMN'
	INCLUDE	'LSL$CMNROVER:ROVCMN.CMN'	!SIGMA drawing values
	INCLUDE	'LSL$CMNROVER:DISCMN.CMN'
	INCLUDE	'LSL$CMNROVER:COLCMN.CMN'
	INCLUDE	'LSL$CMNROVER:STPCMN.CMN'
	INCLUDE	'LSL$CMNDTI:DTIHDR.CMN'
	INCLUDE	'LSL$CMNDTI:DTIPROJ.CMN'
C
C arguments
	INTEGER*4		DTI_NUM	!channel
	INTEGER*4		QUADNO		!quadrant
	LOGICAL			OFF	! overwrite in black if true
C
C Locals:
	INTEGER*4		I	!counter
	INTEGER*4		LLDEGS(4)
	INTEGER			DEGR,MINU,SECO
	LOGICAL			NEGA
	REAL			XSEP,YSEP	!line separation
	REAL			SWX,SWY		!SW corner
	REAL*8			X_OUT_SW, Y_OUT_SW
	REAL*8			X_OUT_NE, Y_OUT_NE
C
C********************************************************************
C
	IF(.NOT.TEXTON)GOTO 999
C
C
	XSEP = RASTSZ(1)/10.0
	YSEP = RASTSZ(2)/50.0
C
C Anotate with window details
	CALL LSG_PLANE_SELECT(WKID,PLANE_MASK)	!picture 1
	CALL LSG_PLANE_OFFSET(WKID,0)
	HADPIC(1) = .TRUE.
	HADPIC(2) = .TRUE.
C Set up colour of text - black or white?
	IF(OFF)THEN
	  CALL GSTXCI(0)
	ELSE
	  CALL GSTXCI(TEXTCOL)
	ENDIF
	CALL GSCHH(RASTSZ(2)/96.0)
C
C	Filename...
	CALL EXPAND('%S',
     &		DTINAM(DTI_NUM)(1:DTILEN(DTI_NUM)))
	CALL GTX(TXTX(QUADNO),TXTY(QUADNO),EXPDSC)
        CALL EXPAND('DTM area:')
	CALL GTX(TXTX(QUADNO),TXTY(QUADNO)-YSEP,EXPDSC)
C
	GOTO (110,120,140,130,120)UNTYPE(DTI_NUM)
C
110	CALL EXPAND('SW: %I5 %I5',
     &       DTI_WINDOW_SWX(DTI_NUM),DTI_WINDOW_SWY(DTI_NUM))
	CALL GTX(TXTX(QUADNO)+XSEP,TXTY(QUADNO)-YSEP,EXPDSC)
	CALL EXPAND('NE: %I5 %I5',
     &	     DTI_WINDOW_NEX(DTI_NUM),DTI_WINDOW_NEY(DTI_NUM))
	CALL GTX(TXTX(QUADNO)+XSEP,TXTY(QUADNO)-2.0*YSEP,EXPDSC)
	GOTO 150
C
120	CALL DTI_WIN_MATRIX_TO_UNITS(DTI_NUM, 
     &  DTI_WINDOW_SWX(DTI_NUM),DTI_WINDOW_SWY(DTI_NUM),
     &  DTI_WINDOW_NEX(DTI_NUM),DTI_WINDOW_NEY(DTI_NUM),
     &  UNTYPE(DTI_NUM), CUR_ROTATE(DTI_NUM), 
     &  HAD_ABSOLUTE, X_OUT_SW, Y_OUT_SW,X_OUT_NE,Y_OUT_NE)
	CALL EXPAND
     &  	   ('SW: %F10.2 %F10.2',
     &  X_OUT_SW,Y_OUT_SW)
	CALL GTX(TXTX(QUADNO)+XSEP,TXTY(QUADNO)-YSEP,EXPDSC)
	CALL EXPAND('NE: %^D%F10.2 %F10.2',X_OUT_NE,Y_OUT_NE)
	CALL GTX(TXTX(QUADNO)+XSEP,TXTY(QUADNO)-2.0*YSEP,EXPDSC)
	GOTO 150
C
130	CALL DTI_WIN_MATRIX_TO_UNITS(DTI_NUM, 
     &  DTI_WINDOW_SWX(DTI_NUM),DTI_WINDOW_SWY(DTI_NUM),
     &  DTI_WINDOW_NEX(DTI_NUM),DTI_WINDOW_NEY(DTI_NUM),
     &  UNTYPE(DTI_NUM), CUR_ROTATE(DTI_NUM), 
     &  .TRUE., X_OUT_SW, Y_OUT_SW,X_OUT_NE,Y_OUT_NE)
        CALL EXPAND('SW: ')
	CALL CVTANG(NINT(Y_OUT_SW),NEGA,DEGR,MINU,SECO)
	CALL APPEND('%P %I3 %P0%I2 %P0%I2',DEGR,MINU,SECO)
	IF(NEGA)THEN
	  CALL APPEND('S  ')
	ELSE
	  CALL APPEND('N  ')
	ENDIF
C
	CALL CVTANG(NINT(X_OUT_SW),NEGA,DEGR,MINU,SECO)
	CALL APPEND('%P %I3 %P0%I2 %P0%I2',DEGR,MINU,SECO)
	IF(NEGA)THEN
	  CALL APPEND('W  ')
	ELSE
	  CALL APPEND('E  ')
	ENDIF
	CALL GTX(TXTX(QUADNO)+XSEP,TXTY(QUADNO)-YSEP,EXPDSC)
C
	CALL CVTANG(NINT(Y_OUT_NE),NEGA,DEGR,MINU,SECO)
	CALL EXPAND('NE: ')
	CALL APPEND('%P %I3 %P0%I2 %P0%I2',DEGR,MINU,SECO)
	IF(NEGA)THEN
	  CALL APPEND('S  ')
	ELSE
	  CALL APPEND('N  ')
	ENDIF
C
	CALL CVTANG(NINT(X_OUT_NE),NEGA,DEGR,MINU,SECO)
	CALL APPEND('%P %I3 %P0%I2 %P0%I2',DEGR,MINU,SECO)
	IF(NEGA)THEN
	  CALL APPEND('W  ')
	ELSE
	  CALL APPEND('E  ')
	ENDIF
	CALL GTX(TXTX(QUADNO)+XSEP,TXTY(QUADNO)-2.0*YSEP,EXPDSC)
	GOTO 150	
C
140	CALL DTI_WIN_MATRIX_TO_UNITS(DTI_NUM, 
     &  DTI_WINDOW_SWX(DTI_NUM),DTI_WINDOW_SWY(DTI_NUM),
     &  DTI_WINDOW_NEX(DTI_NUM),DTI_WINDOW_NEY(DTI_NUM),
     &  UNTYPE(DTI_NUM), CUR_ROTATE(DTI_NUM), 
     &  .TRUE., X_OUT_SW, Y_OUT_SW,X_OUT_NE,Y_OUT_NE)
	CALL EXPAND
     &	    ('SW: %^L%I9 %I9',NINT(Y_OUT_SW/10), NINT(X_OUT_SW/10))
	CALL GTX(TXTX(QUADNO)+XSEP,TXTY(QUADNO)-YSEP,EXPDSC)
	CALL EXPAND
     &      ('NE: %^L%I9 %I9',NINT(Y_OUT_NE/10), NINT(X_OUT_NE/10))
	CALL GTX(TXTX(QUADNO)+XSEP,TXTY(QUADNO)-2.0*YSEP,EXPDSC)
	GOTO 150
C
C*********************************************************************
C
150	IF (DIRECT) GOTO 990		! don't want range+step if fast
	CALL EXPAND
     &	     ('Range: %N to %N',HLOWER(DTI_NUM),HUPPER(DTI_NUM))
	CALL GTX(TXTX(QUADNO),TXTY(QUADNO)-3.0*YSEP,EXPDSC)
	CALL EXPAND('Number of steps: %N',NSTEP(DTI_NUM))
	CALL GTX(TXTX(QUADNO)+2.0*XSEP,TXTY(QUADNO)-3.0*YSEP,EXPDSC)
C
990	CALL GUWK(WKID,GSUPP)		! update workstation
C
999	RETURN
C
	END
