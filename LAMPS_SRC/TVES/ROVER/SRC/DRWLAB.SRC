C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1988-01-13 14:07:16.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE DRWLAB
C
***	MODULE DRWLAB
***	IDENT  13JA88
C
C	Author: D R Catlow
C	Adapted for ROVER			MWSR	Jul-1986
C
C	Subroutine to draw label
C	Sets up label characteristics i.e. size, colour and angle
C
	IMPLICIT NONE
C
	INCLUDE	'LSL$CMNFRT:FRTCOM.CMN'
	INCLUDE	'LSL$CMNROVER:LABEL.CMN'
	INCLUDE	'LSL$CMNROVER:CURFT.CMN'
	INCLUDE	'LSL$CMNROVER:DRAWIN.CMN'
	INCLUDE	'LSL$CMNROVER:SCLDAT.CMN'
C
	PARAMETER  TWOPI=6.283185307
	PARAMETER  PI=3.141592654
C
	REAL		ANG
	REAL    	XDIF
	REAL            YDIF
	REAL		PLUSX		! X offset
	REAL		PLUSY		! Y offset
	REAL		TEMPX		! Temporary store
	INTEGER		FCOL		! feature colour
	INTEGER*4 STRDSC(2)	! text ft character string descriptor.
	INTEGER*2 STRDSW(2)
	EQUIVALENCE (STRDSC,STRDSW)
C
C Functions called
	LOGICAL*1       FRTFND
	LOGICAL*1       FRTFGT
C
	FCOL = FRTCOL			! save feature colour
C
C Find first graphical type 10 entry in FRT
C
	IF (.NOT.HADFGT) THEN
	   IF (FRTFGT(10,LABFC)) THEN
	      CALL TTWSTR('Labelling is disabled - no FRT GT 10 found')	
	      LABNF = .FALSE.
	      LABHGT = .FALSE.
	      GOTO 999
	   ENDIF
	   HADFGT = .TRUE.
	ENDIF
C
	IF (FRTFND(LABFC)) THEN
	   CALL TTWSTR(
     &		'Failed to find text feature code - report to LSL')
	   GOTO 998
	ENDIF
C
	IF (.NOT.HADSIZ) VLABSIZ = FRTSIZ	! default label size
C
C Set up colour
C SETCOL just to set hardware lines (since we have a text GT)
	CALL SETCOL(FRTCOL)
	IF (HADCOL) THEN
	   CALL SRICOL(LABCOL)			! labelling colour
	ELSEIF (CURCOL.LE.0) THEN
	   CALL SRICOL(MAX(FCOL,1))		! colour of feature
	ELSE
	   CALL SRICOL(CURCOL)			! overriding colour
	ENDIF
C
	PLUSX = LABOFF(1)
	PLUSY = LABOFF(2)
	ANG = 0.0				! default
C
	IF (HADANG) THEN		! angle of labelling set by user
	   ANG = LABANG*PI/180.0	! convert to radians
	ELSE
C
C Calculate angle of label using first two data points
	   XDIF = VLABX(2)-VLABX(1)
	   YDIF = VLABY(2)-VLABY(1)
	   IF (XDIF.EQ.0.0.AND.YDIF.EQ.0.0) GOTO 20
	   ANG = ATAN2(YDIF,XDIF)
	ENDIF
C
	PLUSX = LABOFF(1)*COS(ANG)-LABOFF(2)*SIN(ANG)
	PLUSY = LABOFF(1)*SIN(ANG)+LABOFF(2)*COS(ANG)
C
C Set up correct labelling position
20	VLABX(1) = VLABX(1)*SCALE
	VLABY(1) = VLABY(1)*SCALE
C
C apply any rotation to plot
	TEMPX = VLABX(1)*COSTHETA - VLABY(1)*SINTHETA + 
     &	         (PLUSX*COSTHETA - PLUSY*SINTHETA) + TOTOFX
	VLABY(1) = VLABX(1)*SINTHETA + VLABY(1)*COSTHETA + 
     *	           (PLUSX*SINTHETA + PLUSY*COSTHETA) + TOTOFY
	VLABX(1) = TEMPX
	ANG = ANG+THETA
C
C Label drawing
	IF (VLABSIZ.GT.0.0) THEN
	   STRDSW(1) = TXPTR
	   STRDSW(2) = 0
	   STRDSC(2) = %LOC(TXBUF(1))
	   CALL TRITXT(STRDSC,FRTSC,VLABX(1),VLABY(1),VLABSIZ,ANG)
	ENDIF
C
998	IF (FRTFND(FTCODE)) CONTINUE	! restore FC
C
999     RETURN
C
	END
