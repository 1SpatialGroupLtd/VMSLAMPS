C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1988-01-29 15:38:26.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	INTEGER*2 FUNCTION GET_BUTTON
C
***	MODULE	GET_BUTTON
***	IDENT	29JA88
C
C Copyright Laser-Scan Laboratories Ltd., Cambridge, England
C
C Author M.W.S. Reid
C
C 	Created					MWSR    29-Jan-1988
C
C ARGSs function button reading routine
C  returns non 0 function button number if one has been pressed
C
	IMPLICIT NONE
C
C Parameters
C
C Common Blocks
	INCLUDE	'LSL$CMNROVER:TAB.CMN'
C
C Functions
C
C Local Variables
C
	INTEGER	  	BITS		! bitwise-encoded flags for FBs
	INTEGER*4	F_BUTTON
C
C...................................................................
C
	CALL VSFBWT(F_BUTTON,0)		! turn off last button pressed
C
C If we have got this far a function button should have been pressed 
C FInd out which it was and what to do.
C
	CALL VSFBR4(BITS)
C
	IF ((BITS.AND.2).EQ.2) THEN
	   CALL VSFBWT(2,1)			! light the button
	   GET_BUTTON = 2
	ELSEIF ((BITS.AND.4).EQ.4) THEN
	   CALL VSFBWT(3,1)			! light the button
	   GET_BUTTON = 3
	ELSEIF ((BITS.AND.8).EQ.8) THEN
	   CALL VSFBWT(4,1)			! light the button
	   GET_BUTTON = 4
	ELSE
	   CALL VSFBWT(1,1)			! light the button
	   GET_BUTTON = 1
	ENDIF
C
	F_BUTTON = GET_BUTTON
C
	CALL SYS$CLREF(%VAL(EF_FB))		! clear event flag
C
	RETURN
	END
