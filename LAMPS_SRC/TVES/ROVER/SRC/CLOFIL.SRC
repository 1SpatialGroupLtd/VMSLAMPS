C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1989-02-02 11:25:40.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE CLOFIL
C
***	MODULE	CLOFIL
**	IDENT	02FE89
C
C Copyright Laser-Scan Laboratories Ltd., Cambridge, England
C
C Author M.W.S. Reid
C
C 	Created					MWSR    03-Jun-1986
CMOD	Call to CLOSE_RCP_FILE added
C
	IMPLICIT NONE
C
C Closes files Specified in the CLOSE command in program ROVER
C
	INCLUDE 'LSL$CMNROVER:RCP.CMN'
	INCLUDE	'LSL$CMNROVER:ROVCMN.CMN'
	INCLUDE	'LSL$CMNROVER:RASTED.CMN'
	INCLUDE	'LSL$CMNROVER:IFFCMN.CMN'	!has HADIFF
	INCLUDE	'LSL$CMNLSL:CMDCOM.CMN'
	INCLUDE	'LSL$CMNROVER:DIGCMN.CMN'
	INCLUDE	'LSL$CMNROVER:FPPDAT.CMN'
	INCLUDE	'LSL$CMNROVER:DTICMN.CMN'	!has HADDTI
C
C Functions
	INTEGER*4	RDCOMM
	INTEGER*4	DTI_CLOSE		!closes DTI file
C	INTEGER*4	VIO$CLOSE_SEC
	INTEGER*4	DTI_MINMAX_DATA
C
	EXTERNAL	CLO_CMD_TABLE
	INTEGER*4	CLO_CMD_TABLE
	EXTERNAL	SHOW_CMD_TABLE
	INTEGER		SHOW_CMD_TABLE
C
C Locals
	INTEGER*4	CMD
	INTEGER*4	I,IERR,ERR,RET	
C
C***********************************************************************
C
	CMD = RDCOMM(CLO_CMD_TABLE)
	IF (CMD .LE. 0) THEN
	   CALL WRITEF('%S Specifying command CLOSE',EBELL)
	   CALL WRITEF
     &     ('Command qualifiers are FILEIN, IFF, OUTPUT or RCP_FILE')
	   GOTO 1000
	END IF
	GOTO (5,50,60,100),CMD
C
C Close DTI
C
5	IF (CMDICT .EQ. 0) THEN
	   CMD = RDCOMM(SHOW_CMD_TABLE)
	   IF (CMD .EQ. 7) THEN
	      DO 10 I = 1,4
	         IF (HADDTI(I)) THEN
		    IF (EDITING) THEN
		       IF (WRITE_DTI(I)) THEN
			   RET = DTI_MINMAX_DATA(I,.TRUE.,ERR)
	                   IF (.NOT. RET) THEN
	                      CALL LSL_PUTMSG(ERR)
	                   ENDIF 
	               ENDIF
		    ENDIF
		    IERR= DTI_CLOSE(I,.FALSE.,.TRUE.,ERR)
C	            ERR = VIO$CLOSE_SEC(I)
		    CALL WRITEF('DTI File %N closed',I)
		    NUM_OPN_DTI = NUM_OPN_DTI-1
	  	    HADDTI(I) = .FALSE.
	         END IF
10	      CONTINUE
	   ELSE
	      CALL WRITEF('%S Specifying command CLOSE FILEIN',EBELL)
	      CALL WRITEF
     &	    ('Command requires up to 4 integers in the range 1 to 4'
     &       //' or the ALL qualifier')
	      GOTO 1000
	   END IF
	ELSE
C
C Here if ALL is not Specified		
C
	   DO 20 I = 1, CMDICT
	     IF (INTARG(I) .GT. 4.OR.INTARG(I) .LT. 1) THEN
	      CALL WRITEF('%S Specifying command CLOSE FILEIN',EBELL)
	      CALL WRITEF
     &	    ('Command requires up to 4 integers in the range 1 to 4'
     &       //' or the ALL qualifier')
	       GOTO 1000
	     END IF
20	   CONTINUE
C 
C
C Close each file Specified
C	
	   DO 30 I = 1, CMDICT
	     IF (.NOT.HADDTI(INTARG(I))) THEN
	      CALL WRITEF('%S Specifying command CLOSE FILEIN',EBELL)
	       CALL WRITEF('File %N is not open',INTARG(1))
	     ELSE
	       NUM_OPN_DTI = NUM_OPN_DTI - 1
	       IF (EDITING) THEN
	          IF (WRITE_DTI(INTARG(I))) THEN
		     RET = DTI_MINMAX_DATA(INTARG(I),.TRUE.,ERR)
	             IF (.NOT. RET) THEN
	                CALL LSL_PUTMSG(ERR)
	             ENDIF 
	          ENDIF
	       ENDIF
	       IERR = DTI_CLOSE(INTARG(I),.FALSE.,.TRUE.,ERR)
C	       IERR = VIO$CLOSE_SEC(INTARG(I))
	       CALL WRITEF('DTI file %N closed',INTARG(I))
	       HADDTI(INTARG(I)) = .FALSE.
	     END IF
30	   CONTINUE
	END IF
	GOTO 1000
C
C Close IFF
50	IF (.NOT.HADIFF(IFFCHAN)) THEN
	   CALL WRITEF('%S Specifying command CLOSE IFF',EBELL)
	   CALL WRITEF('No IFF file is open')
	   GOTO 1000
	END IF
	CALL IFFCLO(3)
	CALL WRITEF('Input IFF File closed')
	
	HADIFF(IFFCHAN) = .FALSE.
	GOTO 1000
C
C Close output
60	CALL CLSOUT
	GOTO 1000
C
C-----------------------------------------------------------------------
C	Close RCP_FILE
C	Check that we are in registration mode
100	IF(.NOT.REGISTERING)THEN
	  CALL WRITEF('%S Specifying command CLOSE RCP_FILE',EBELL)
	  CALL WRITEF('Command only valid in registration mode')
	  GOTO 1000
	ENDIF
C
	IF(CMDICT.EQ.0)THEN
	  CMD=RDCOMM(SHOW_CMD_TABLE)
	  IF(CMD.NE.7)THEN
	    CALL WRITEF('%S Specifying command CLOSE RCP_FILE',EBELL)
	    CALL WRITEF
     &      ('Command requires a RCP file number or the qualifier ALL')
	    GOTO 1000
	  ELSE
	    DO 150 I=1,MAX_RCP_FILES
	       IF(RCP_LUN_INUSE(I))CALL CLOSE_RCP_FILE(I)
150	    CONTINUE
	    GOTO 1000
	  ENDIF
	ELSE
	  DO 200 I=1,CMDICT
	     IF(INTARG(I).LT.0.OR.INTARG(I).GT.MAX_RCP_FILES)THEN
	       CALL WRITEF('%S Specifying command CLOSE RCP_FILE',EBELL)
	       CALL WRITEF
     &  ('Command requires a RCP file number in the range 1 to %N',
     &  MAX_RCP_FILES)
	       GOTO 1000
	     ENDIF
C
	     CALL CLOSE_RCP_FILE(INTARG(I))
200	  CONTINUE
	ENDIF
C
C----------------------------------------------------------------------------	
C
1000	RETURN
	END
