	SUBROUTINE SHOW_POSITION
C
***	MODULE	SHOW_POSITION
***	IDENT	06FE89
C
C Copyright Laser-Scan Laboratories Ltd., Cambridge, England
C
C Author M.W.S. Reid
C
C 	Created					MWSR    11-Mar-1988
C
C In edit mode shows x,y position and DTI value of cursor
C In digitise mode shows the current cursor coordinates
C
	IMPLICIT NONE
C
C Common Blocks
	INCLUDE	'LSL$CMNDTI:DTIPAR.PAR'
	INCLUDE	'LSL$CMNDTI:DTIHDR.CMN'
	INCLUDE	'LSL$CMNDTI:DTIPROJ.CMN'
	INCLUDE	'LSL$CMNROVER:IFFCMN.CMN'
	INCLUDE	'LSL$CMNROVER:RASTED.CMN'
	INCLUDE	'LSL$CMNROVER:ROVCMN.CMN'
	INCLUDE	'LSL$CMNROVER:DTICMN.CMN'
	INCLUDE	'LSL$CMNROVER:DIGCMN.CMN'
	INCLUDE	'LSL$CMNROVER:DISCMN.CMN'
C
C Functions
C
C Local Variables
	BYTE		BVAL		! byte value
	INTEGER*2	WVAL		! word value
	INTEGER*4	LVAL		! longword value
	REAL*8			SWX,SWY		!SW corner
	INTEGER*4		DEGR		!degree part of latlong
	INTEGER*4		MINU		!minute part of latlong
	INTEGER*4		SECO		!seconds part of latlong
	LOGICAL			NEGA		!neg latlong value
C
	EQUIVALENCE             (BVAL,WVAL)
C
	IF (.NOT. (EDITING .OR. DIGITISING)) THEN
C
	   CALL WRITEF('%S Specifying command SHOW POSITION',EBELL)
	   CALL WRITEF
     &     ('Command only valid in EDIT or DIGITISE modes')
	   GOTO 999
	ENDIF
C
	CALL WRITEF(' ')
	IF (EDITING) THEN
	   CALL WRITEF('Editing Cursor Position:')
C
C output according to units
	   GOTO(100,200,300,400,200)UNTYPE(DTICHAN)
C
C matrix units
100	   CALL WRITEF('X:    %N       Y:    %N',
     &     NINT(X_CURDTI),NINT(Y_CURDTI))
	   GOTO 600
C
C metres or projection
200	   CALL DTI_MATRIX_TO_UNITS(DTICHAN,REAL(NINT(X_CURDTI)),
     &     REAL(NINT(Y_CURDTI)),UNTYPE(DTICHAN),CUR_ROTATE(DTICHAN),
     &     HAD_ABSOLUTE,SWX,SWY)
C
	   CALL WRITEF('X:  %^D%F10.2  Y:  %F10.2',SWX,SWY)
	   GOTO 600
C
C 
C seconds
300	   CALL DTI_MATRIX_TO_UNITS(DTICHAN,REAL(NINT(X_CURDTI)),
     &     REAL(NINT(Y_CURDTI)),UNTYPE(DTICHAN),CUR_ROTATE(DTICHAN),
     &     .TRUE.,
     &     SWX,SWY)
	   CALL WRITEF('Latitude:  %I10  Longitude:  %I10',NINT(SWY/10),
     &     NINT(SWX/10))
	   GOTO 600
C
C degrees
400	   CALL DTI_MATRIX_TO_UNITS(DTICHAN,REAL(NINT(X_CURDTI)),
     &     REAL(NINT(Y_CURDTI)),UNTYPE(DTICHAN),
     &     CUR_ROTATE(DTICHAN),.TRUE.,
     &     SWX,SWY)
	   CALL EXPAND('Latitude:  ')
	   CALL DTI_CVTANG(NINT(SWY/10),
     &	   NEGA,DEGR,MINU,SECO)
	   CALL APPEND('%P %I3 %P0%I2 %P0%I2',DEGR,MINU,SECO)
	   IF(NEGA)THEN
	   CALL APPEND('S  ')
	   ELSE
	   CALL APPEND('N  ')
	   ENDIF
     	   CALL APPEND('Longitude:  ')
	   CALL DTI_CVTANG(NINT(SWX/10),
     &	   NEGA,DEGR,MINU,SECO)
	   CALL APPEND('%P %I3 %P0%I2 %P0%I2',DEGR,MINU,SECO)
	   IF(NEGA)THEN
	      CALL APPEND('W  ')
	   ELSE
	      CALL APPEND('E  ')
	   ENDIF
	   CALL TTWLIN
	   GOTO 600
C
C output DTI value according to the data type
600	   IF (DATA_TYPE(DTICHAN) .EQ. DATA_BYTE) THEN
	      WVAL = NINT(CUR_DTI_VAL)
	      CALL WRITEF('DTI Value: %^W%I5',WVAL)
	   ELSEIF (DATA_TYPE(DTICHAN) .EQ. DATA_WORD) THEN
	      WVAL = NINT(CUR_DTI_VAL)
	      CALL WRITEF('DTI Value: %^W%I5',WVAL)
	   ELSEIF (DATA_TYPE(DTICHAN) .EQ. DATA_LONG) THEN
	      LVAL = NINT(CUR_DTI_VAL)
	      CALL WRITEF('DTI Value: %I6',LVAL)
	   ELSEIF (DATA_TYPE(DTICHAN) .EQ. DATA_REAL) THEN
	      CALL WRITEF('DTI Value: %F6',CUR_DTI_VAL)
	   ENDIF
	ELSE
C
C digitising
	   IF (HAD_ABSOLUTE) THEN
	      SWX=0.0
	      SWY = 0.0
	   ELSE
	      SWX = OUTPUT_ORIGIN(1)
	      SWY = OUTPUT_ORIGIN(2)     
	   ENDIF
	   CALL WRITEF('Digitising Cursor Position')
	   CALL WRITEF('X:   %F9.2   Y:   %F9.2',
     &     (X_IFF+SWX),(Y_IFF+SWY))
	ENDIF

999	RETURN
	END
