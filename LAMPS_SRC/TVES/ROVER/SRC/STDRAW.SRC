C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1988-01-13 12:54:46.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE STDRAW
C
***	MODULE	STDRAW
***	IDENT	13JA88
C
C Copyright Laser Scan Laboratories Ltd., Cambridge, England.
C Author  R. Daly.
C
C Created					RD	23-Jun-1983
C
C Routine to do the actual plotting of the data by calling the
C appropriate GKS routines in the GKS-lookalike library.
C
	IMPLICIT NONE
C
	INCLUDE	'LSL$CMNROVER:CURFT.CMN'
	INCLUDE	'LSL$CMNROVER:LABEL.CMN'
	INCLUDE	'LSL$CMNROVER:DRAWIN.CMN'
	INCLUDE	'LSL$CMNROVER:FPPDAT.CMN'
	INCLUDE	'LSL$CMNLSL:EXPC.CMN'
	INCLUDE	'LSL$CMNFRT:FRTCOM.CMN'
	INCLUDE	'LSL$CMNROVER:SCLDAT.CMN'
C
C W/s.
	INTEGER I	     	! loop counter
	REAL X,Y		! origin of text
	REAL COSI,SINI		! sin and cos of angle
	INTEGER*4 STRDSC(2)	! text ft character string descriptor.
	INTEGER*2 STRDSW(2)
	EQUIVALENCE (STRDSC,STRDSW)
C
C Functions.
	LOGICAL	SRIFND,SRIPLT
	LOGICAL	TRITXT		! plots text string.
	LOGICAL	GENCIR		! plots circle
C
C What graphical type is this feature?
	GOTO (10,20,20,20,20,40,50,50,50,60,70,10),FRTGT
C
C***********************************************************************
C
C Line string or fill area.
C Loops should take care of themselves.
10	CALL ADDBLK(INDX,XCOORD(1),YCOORD(1))
	GOTO 1000
C
C***********************************************************************
C
C C'wise circle arc / antic'wise circle arc.
C Circle/arc defined by centre and 2 points on the circumference.
C Circum-circle arc / full circum-circle.
C Circle/arc defined by 3 points on the circumference.
20	IF (GENCIR()) GOTO 999
	GOTO 1000
C
C***********************************************************************
C
C Interpolated curve 
40	IF (INTLIN) THEN	! curves allowed?
	   CALL INTERP
	ELSE
	   CALL ADDBLK(INDX,XCOORD(1),YCOORD(1))	! straight line
	ENDIF
	GOTO 1000
C
C***********************************************************************
C
C Unoriented/oriented/scaled symbol.
50	IF (SIZE.LE.0.0) GOTO 1000		! safety check.
	IF (HWSYM.AND.FRTHWS) THEN	! plot h/w symbol
	   IF (SRIPLT(FRTHW,XCOORD(1),YCOORD(1),SIZE,ANGLE,FRTHWS))
     &	             GOTO 999
	ELSE
	   IF (SRIPLT(FRTSC,XCOORD(1),YCOORD(1),SIZE,ANGLE)) GOTO 999
	ENDIF
	GOTO 1000
C
C***********************************************************************
C
C Text.
C TRITXT currently takes a character variable so a string descriptor
C has to be set up.
60	IF (SIZE.LE.0.0) GOTO 1000		! safety check.
	STRDSW(1)=TXPTR				! length.
	STRDSW(2)=0				! class.
	STRDSC(2)=%LOC(TXBUF(1))		! position.
C
C calculate position of bottom left of text
	SINI=SIN(ANGLE)
	COSI=COS(ANGLE)
	X = XCOORD(1)+MINX*COSI-MINY*SINI
	Y = YCOORD(1)+MINX*SINI+MINY*COSI
	IF (TRITXT(STRDSC,FRTSC,X,Y,SIZE,ANGLE))
     &     GOTO 999
	GOTO 1000
C
C***********************************************************************
C
C Symbol string.
70	IF (SIZE.LE.0.0) GOTO 1000		! safety check.
	DO 71 I=1,INDX
	   IF (HWSYM.AND.FRTHWS) THEN	! plot h/w symbol
	      IF (SRIPLT(FRTHW,XCOORD(I),YCOORD(I),SIZE,ANGLE,FRTHWS))
     &	             GOTO 999
	   ELSE
	      IF (SRIPLT(FRTSC,XCOORD(I),YCOORD(I),SIZE,ANGLE)) GOTO 999
	   ENDIF
71	CONTINUE
	GOTO 1000
C
C***********************************************************************
C General error information.
999	CALL WRITEF('Layer %^W%I6 - Ft No %^L%I6 - ISQ %I6',
     &	 LAYNUM,FTNUM,ISQ)
C
1000	FIRST=.FALSE.	! 1st block of ft has now been through STDRAW.
C
	RETURN
	END
