	SUBROUTINE DISPLAY_READ(COLUMN,DTI_NUM,SAMPLE)
C
***	MODULE	DISPLAY_READ
***	IDENT	10FE89
C
C Copyright Laser-Scan Laboratories Ltd., Cambridge, England
C
C Author M.W.S. Reid
C
C 	Created					MWSR    18-Jan-1988
C
C reads relevant bit of DTI file for display
C
	IMPLICIT NONE
C
C argument
	INTEGER*4	COLUMN		! column number to start display
	INTEGER*4	DTI_NUM		! DTI file to work on
	INTEGER*4	SAMPLE		! sampling interval
C
C Common Blocks
	INCLUDE	'LSL$CMNDTI:DTIPAR.PAR'
C
	INCLUDE	'LSL$CMNDTI:DTIHDR.CMN'
	INCLUDE	'LSL$CMNROVER:ROVCMN.CMN'
	INCLUDE	'LSL$CMNROVER:DTICMN.CMN'
	INCLUDE	'LSL$CMNROVER:COLCMN.CMN'
	INCLUDE	'LSL$CMNROVER:GRABUF.CMN'
C
C Functions
	INTEGER*4	DTI_COPY_BYTE_DATA
	INTEGER*4	DTI_COPY_WORD_DATA
	INTEGER*4	DTI_COPY_LONG_DATA
	INTEGER*4	DTI_COPY_REAL_DATA
	INTEGER		ICOL
C
C Local Variables
	INTEGER*4	RET,ERR		! return codes
	REAL		VALUE
	INTEGER*4	I
	INTEGER*4	IDX
	INTEGER*2	WVALUE
	BYTE		BVALUE
	EQUIVALENCE	(WVALUE,BVALUE)
C
	IDX  = 0
C
C we don't have to relookup the the display colours if window 
C dimensions are
C not bigger than before, or the STEP,RANGE, COLOURS,or PLANES 
C commands have  been given, 
	IF (.NOT. RELOOKUP) THEN
C
C read from the temporary colour index file
	   RET = DTI_COPY_BYTE_DATA(COL_LUN,DTIB,.FALSE.,
     &	                           (COLUMN-COL_EXTENT(1)+1),
     &	                  (DTI_WINDOW_SWY(DTI_NUM)-COL_EXTENT(2)+1),1,
     &				   MATSIZ(DTI_NUM,2),ERR)
	ELSE
C
C read according to the datatype
	   GOTO (10,20,30,40)DATA_TYPE(DTI_NUM)
C
C byte data
10	   RET=DTI_COPY_BYTE_DATA(DTI_NUM,
     &		DTIB,.FALSE.,COLUMN,DTI_WINDOW_SWY(DTI_NUM),1,
     &		MATSIZ(DTI_NUM,2),ERR)
C
C and process into output array (leave alone if FAST)
	   IF (.NOT.DIRECT) THEN
	       DO 15 I=1,MATSIZ(DTI_NUM,2),SAMPLE
	          BVALUE = DTIB(I)
	          VALUE  = REAL(WVALUE)
		  IDX = IDX+1
	          DTIB(IDX) = COLTAB(ICOL(DTI_NUM,VALUE),DTI_NUM)
15	       CONTINUE
	   ENDIF
	   GOTO 100
C
C word data
20	   RET=DTI_COPY_WORD_DATA(DTI_NUM,
     &		DTIW,.FALSE.,COLUMN,DTI_WINDOW_SWY(DTI_NUM),1,
     &		MATSIZ(DTI_NUM,2),ERR)
C
	   DO 25 I=1,MATSIZ(DTI_NUM,2),SAMPLE
	      VALUE = FLOAT(DTIW(I))
	      IDX = IDX+1
	      DTIB(IDX) = COLTAB(ICOL(DTI_NUM,VALUE),DTI_NUM)
25	   CONTINUE
	   GOTO 100
C
C longword data	    
30	   RET=DTI_COPY_LONG_DATA(DTI_NUM,
     &		DTIL,.FALSE.,COLUMN,DTI_WINDOW_SWY(DTI_NUM),1,
     &		MATSIZ(DTI_NUM,2),ERR)
C
	   DO 35 I=1,MATSIZ(DTI_NUM,2),SAMPLE
	      VALUE = FLOAT(DTIL(I))
	      IDX = IDX+1
	      DTIB(IDX) = COLTAB(ICOL(DTI_NUM,VALUE),DTI_NUM)
35	   CONTINUE
	   GOTO 100
C
C real data	    
40	   RET=DTI_COPY_REAL_DATA(DTI_NUM,
     &		DTIR,.FALSE.,COLUMN,DTI_WINDOW_SWY(DTI_NUM),1,
     &		MATSIZ(DTI_NUM,2),ERR)
C
	   DO 45 I=1,MATSIZ(DTI_NUM,2),SAMPLE
	      IDX = IDX+1
	      DTIB(IDX) = COLTAB(ICOL(DTI_NUM,DTIR(I)),DTI_NUM)
45	   CONTINUE
	   GOTO 100
C
C  write colour byte values to temporary colour file
100	   IF (COLOUR_MAP)THEN   
	      RET=DTI_COPY_BYTE_DATA(COL_LUN,
     &		DTIB,.TRUE.,(COLUMN-DTI_WINDOW_SWX(DTI_NUM)+1),
     &          1,1,
C     &		DTIB,.TRUE.,(COLUMN-COL_EXTENT(1)+1),
C     &	        (DTI_WINDOW_SWY(DTI_NUM)-COL_EXTENT(2)+1),1,
     &		MATSIZ(DTI_NUM,2),ERR)
	   ENDIF
C
	ENDIF
C
	RETURN
	END
