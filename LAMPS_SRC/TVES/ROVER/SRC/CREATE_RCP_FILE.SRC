C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1988-11-18 16:03:46.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL FUNCTION CREATE_RCP_FILE()
C
***	IDENT	18NO88
***	MODULE	CREATE_RCP_FILE
C
C	Copyright : Laser-Scan Laboratories, Cambridge, England
C	Created   : D R Catlow                   14-November-1988
C
C	Function to create a new RCP file.
C	The filename is read from the command line.
C	Up to 4 RCP files may be opened at any one time.
C
C	Note: the actual disk file is not created until
C	program exit or until the CLOSE RCP_FILE is given.
C
	IMPLICIT NONE
C
***	COMMON/LSL$CMNROVER:RCP/
***	COMMON/LSL$CMNROVER:ROVCMN/		
C
	INCLUDE '($JPIDEF)'
C
C 	Local
	INTEGER*4	I		!counter
	INTEGER*4	RETVAL		!function return value
	INTEGER*4	RCP_LUN		!LUN for this RCP
C
	INTEGER*2	USER_LENGTH	!user name length
	INTEGER*4	ABS_TIME	!absolute binary time
	INTEGER*4	DAY_OF_WEEK	!index into DAYS
	INTEGER*2	MONTH_INDEX	!which month
	CHARACTER*3	MONTHS(12)	!months
	CHARACTER*3	DAYS(7)		!days of week
	CHARACTER*23	DATE		!date
	CHARACTER*20	USER		!user name
	CHARACTER*80	RCP_TRANSLATION !translated LSL$RCP
C
	CHARACTER*12	CREATED_STRING
	DATA		CREATED_STRING/'!Created by '/
C
	BYTE		CH		!single character
C	
	DATA            MONTHS/'Jan','Feb','Mar','Apr','May','Jun',
     &                         'Jul','Aug','Sep','Oct','Nov','Dec'/
C
	DATA		DAYS/'Mon','Tue','Wed','Thu','Fri','Sat','Sun'/
C
C	Functions
	INTEGER*4	FLROPN		!open file for read
	INTEGER*4	FLRCLO		!close the file
	INTEGER*4	RDCHS		!read a character
	INTEGER*4	TRNALL		!translate logical name
	INTEGER*4	GETFILNAM	!parse filename
C
C-----------------------------------------------------------------------
C
C	Check we are in registration mode
	IF(.NOT.REGISTERING)THEN
	  CALL WRITEF('%S Specifying command CREATE RCP_FILE',EBELL)
	  CALL WRITEF('Command only valid in REGISTRATION mode')
	  GOTO 999
	ENDIF
C
C-----------------------------------------------------------------------
C
C	Check for a file specification
	IF(RDCHS(CH))THEN
	  CALL WRITEF('%S Specifying command CREATE RCP',EBELL)
	  CALL WRITEF('RCP Filename is missing')
	  CREATE_RCP_FILE=.FALSE.
	  CALL BSLN
	  GOTO 999	  
	ENDIF
C
	CALL BSCH
C----------------------------------------------------------------------
C
C	Check that we have not exceeded the maximum number of RCP files
	IF(TOTAL_RCP_FILES.EQ.MAX_RCP_FILES)THEN
	  CALL WRITEF('%S Specifying command CREATE RCP',EBELL)
	  CALL WRITEF('Maximum number of RCP files already open')
	  CALL WRITEF('Use the CLOSE RCP command to close a file')
	  CREATE_RCP_FILE=.FALSE.
	  CALL BSLN
	  GOTO 999
	ENDIF
C
C----------------------------------------------------------------------
C
C	Get the next free RCP slot
	DO 100 I=1,MAX_RCP_FILES
	   IF(.NOT.RCP_LUN_INUSE(I))GOTO 150
100	CONTINUE
C
	CALL WRITEF('%S Specifying command CREATE RCP',EBELL)
	CALL WRITEF('No free RCP LUN')
	CREATE_RCP_FILE=.FALSE.
	GOTO 999
C
150	RCP_LUN=I
C----------------------------------------------------------------------
C
C	Check that the logical name LSL$RCP can be translated
C	and parse the RCP filename
	RETVAL = TRNALL('LSL$RCP',RCP_TRANSLATION)
C
	IF(.NOT.RETVAL)THEN
	  RETVAL = GETFILNAM(RCP_FILE_NAME(RCP_LUN),
     &                    RCP_FILE_LENGTH(RCP_LUN),
     &                    'RCP.RCP;0',
     &                    .TRUE.)
	ELSE
	  RETVAL = GETFILNAM(RCP_FILE_NAME(RCP_LUN),
     &                    RCP_FILE_LENGTH(RCP_LUN),
     &                    'LSL$RCP:RCP.RCP;0',
     &                    .TRUE.)
	ENDIF	  	  
C
C	Has the parsing been successful?
	IF(.NOT.RETVAL)THEN
	  CALL LSL_PUTMSG(RETVAL)
	  CREATE_RCP_FILE=.FALSE.
	  GOTO 999
	ENDIF
C
C	Increment count of total number of RCP files
	TOTAL_RCP_FILES=TOTAL_RCP_FILES+1
C
C----------------------------------------------------------------------
C	Get the date and time of creation
C	and the name of the user 
C	CALL LIB$GETJPI(JPI$_USERNAME,,,,USER,USER_LENGTH)
C	CALL LIB$DATE_TIME(DATE)			!get date 
C	CALL SYS$BINTIM(DATE,ABS_TIME)			!binary time
C	CALL LIB$DAY_OF_WEEK(ABS_TIME,DAY_OF_WEEK)	!day of week
C
C		
C	CALL EXPAND('%W%S %S on %S %S %S %S %S',
C     &              RCP_CREATED(RCP_LUN,1),
C     &		    CREATED_STRING,
C     &              USER(1:USER_LENGTH),
C     &	            DAYS(DAY_OF_WEEK),
C     &              DATE(4:6),
C     &		    DATE(1:2),
C     &              DATE(13:20),
C     &              DATE(8:11))
C
C----------------------------------------------------------------------
	CREATE_RCP_FILE=.TRUE.
C
C	Select this RCP file for registration
	CURRENT_RCP_FILE=RCP_LUN
	CURRENT_RCP(RCP_LUN)=1
C
C	Signal success
	RCP_LUN_INUSE(RCP_LUN)=.TRUE.
C
C	Indicate that it must be later created
	CREATE(RCP_LUN)=.TRUE.
C
C	Output confirmation message
	CALL WRITEF
     &  ('File %S created as RCP File Number %N',
     &    RCP_FILE_NAME(RCP_LUN)(1:RCP_FILE_LENGTH(RCP_LUN)),
     &    RCP_LUN)
C
C----------------------------------------------------------------------
999	RETURN
C
	END
