C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1989-01-24 11:23:20.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE DISPLAY_EDIT(PIXBUF,NUMPTS,COL,OFFSET,UPDATE_COL)
C
***	MODULE	DISPLAY_EDIT
***	IDENT	24JA89
C
C Copyright Laser-Scan Laboratories Ltd., Cambridge, England
C
C Author M.W.S. Reid
C
C 	Created					MWSR    21-Dec-1987
C
C displays line of pixels in specified colour
C
	IMPLICIT NONE
C
C arguments
	INTEGER*4	NUMPTS		! number of pixels to draw
	INTEGER*4	PIXBUF(2,NUMPTS) ! pixel coordinates
	INTEGER*2	COL		! colour to draw
	INTEGER*4	OFFSET		! plane offset
	LOGICAL		UPDATE_COL	! true if to update colour file
C
C Common Blocks
	INCLUDE	'LSL$CMNROVER:GKSPAR.PAR'
	INCLUDE	'LSL$CMNROVER:DTICMN.CMN'
	INCLUDE	'LSL$CMNROVER:ROVCMN.CMN'
	INCLUDE	'LSL$CMNROVER:RASTED.CMN'
	INCLUDE	'LSL$CMNROVER:COLCMN.CMN'
	INCLUDE	'LSL$CMNROVER:GKS.CMN'
C
C Local Variables
	INTEGER*4	I
	INTEGER*4	XSIGN
	INTEGER*4	XPOS,YPOS	! position of pixel on screen
	INTEGER*2	WCOL		! word colour
	BYTE		BCOL		! byte colour
	EQUIVALENCE	(WCOL,BCOL)

C
	WCOL = COL
C set rotation mode and find x drawing direction according to current 
C rotation settings
C first select the raster planes 
	CALL LSG_PLANE_SELECT(WKID,PLANE_MASK)
C
C offset planes 
	CALL LSG_PLANE_OFFSET(WKID,0)
C 
	DO 10 I = 1,NUMPTS
C
C work out position on screen
	   CALL SET_ROTATE(FLOAT(PIXBUF(1,I)),
     &                     FLOAT(PIXBUF(2,I)),
     &                     XPOS,
     &                     YPOS,
     &                     XSIGN)
C
	   CALL LSG_PIXEL_ARRAY(
     &		FLOAT(XPOS),FLOAT(YPOS),
     &		XSIGN,-XSIGN,1,1,1,1,
     &		SF(DTICHAN),
     &		SF(DTICHAN),
     &		BCOL)
C
C reset colour in colour file
C replace new colour in current display colour file
	      IF (UPDATE_COL) THEN
	         CALL DTI_WRITE_BYTE_DATA(COL_LUN,COL,
     &		 (PIXBUF(1,I)-COL_EXTENT(1)+1),
     &	         (PIXBUF(2,I)-COL_EXTENT(2)+1))
	      ENDIF
C
10	CONTINUE
	CALL GUWK(WKID,GSUPP)
C	
C replace cursor
	CALL MOVE_CURSOR(X_CURDTI,Y_CURDTI,.TRUE.,.FALSE.)
C	
	RETURN
	END
