	SUBROUTINE LEGEND(DTI_NUM,QUADNO,FOREGROUND)
C
***	MODULE	LEGEND
***	IDENT	17FE89
C
C	Copyright : Laser-Scan Laboratories Ltd, Cambridge, England
C	Author    : DRC
C	Created   : Dec 1984
C
CMOD    Rover Version					MWSR Jun 1986	
	IMPLICIT NONE
C
	INCLUDE	'LSL$CMNROVER:GKSPAR.PAR'
C
	INCLUDE	'LSL$CMNLSL:EXPC.CMN'
	INCLUDE	'LSL$CMNROVER:DTICMN.CMN'
	INCLUDE	'LSL$CMNROVER:GKS.CMN'
	INCLUDE	'LSL$CMNROVER:ROVCMN.CMN'
	INCLUDE	'LSL$CMNROVER:DISCMN.CMN'
	INCLUDE	'LSL$CMNROVER:COLCMN.CMN'
	INCLUDE	'LSL$CMNROVER:STPCMN.CMN'
	INCLUDE	'LSL$CMNROVER:DRAWIN.CMN'
	INCLUDE	'LSL$CMNROVER:MAPCMN.CMN'
	INCLUDE	'LSL$CMNDTI:DTIHDR.CMN'
C
C Arguments
	INTEGER*4	QUADNO
	INTEGER*4	DTI_NUM
	LOGICAL		FOREGROUND	!for picture 2 only
C
C Locals
	INTEGER*4	I
	INTEGER*4	FAC		!step sub sampling factor
	INTEGER		COL
	REAL		BOX,LINE,SPAC
	REAL		X(5),Y(5)
	REAL		TXTOFF		! text offset from legend boxes
	INTEGER*4	NVAL
C
C**********************************************************************
C
	IF (.NOT.PLOT_LEG) GOTO 400
C
	BOX = RASTSZ(2)/25.0		!size of legend box
	IF (DIVIDED) BOX = BOX/2.0	!smaller for divided screen
C	
C First draw box around the matrix display
	IF (FOREGROUND) THEN
	   CALL LSG_PLANE_SELECT(WKID,.NOT.PLANE_MASK)  ! picture 2
	   CALL LSG_PLANE_OFFSET(WKID,NOPLNS)
	ELSE
	   CALL LSG_PLANE_SELECT(WKID,PLANE_MASK)	! picture 1
	   CALL LSG_PLANE_OFFSET(WKID,0)
	ENDIF
C
	CALL GSPLCI(TEXTCOL)	!white
	CALL GSLWSC(1.0)	!thin lines
	CALL GSTXCI(TEXTCOL)	!white
	CALL GSCHH(RASTSZ(2)/96.0)	!character height
	CALL GSFAIS(GSOLID)	!solid areas
	X(1) = DISPSX(QUADNO)-1.0
	Y(1) = DISPSY(QUADNO)-1.0
	X(2) = DISPSX(QUADNO)-1.0
	Y(2) = DISPEY(QUADNO)+1.0
	X(3) = DISPEX(QUADNO)+1.0
	Y(3) = DISPEY(QUADNO)+1.0
	X(4) = DISPEX(QUADNO)+1.0
	Y(4) = DISPSY(QUADNO)-1.0
	X(5) = X(1)
	Y(5) = Y(1)
	CALL GPL(5,X,Y)
C
C X coordinates for legend
	X(1) = LEGX(QUADNO)
	X(2) = X(1)+BOX
	X(3) = X(2)+RASTSZ(1)/100.0	! for label position
C
	IF (FOREGROUND) GOTO 310
C
C****************************************************************
C	Generate legend
C
	HADPIC(1) = .TRUE.
	HADPIC(2) = .TRUE.
	Y(1) = LEGY(QUADNO)
	Y(2) = Y(1)+BOX
	IF (STEP_ONE(DTICHAN).OR. DIRECT) THEN
C
C we are dealing with a step of one so legend values are displayed
C in the middle of the legend boxes rather than the limits
	   TXTOFF = BOX/2
	ELSE
	   TXTOFF = 0
	ENDIF
C
C special legend for direct display
	IF (DIRECT) THEN
	   NVAL = MAX_WVALUE(DTI_NUM) - MIN_WVALUE(DTI_NUM)
	   FAC = MAX(1,(NVAL/12+1))
	   DO 50 I = MIN_WVALUE(DTI_NUM),MAX_WVALUE(DTI_NUM)-1,FAC
C	   DO 50 I=32,256,32
	      COL = I
	      IF (COL.EQ.256) COL = 255
	      CALL GSFACI(COL)
	      CALL LSG_FILL_RECTANGLE(X,Y)
C
C and anotate with value
C	      IF (I.EQ.32) CALL GTX(X(3),(Y(1)-TXTOFF),'  0')
 	      CALL EXPAND('%I3',COL)
	      CALL GTX(X(3),(Y(2)-TXTOFF),EXPDSC)  
	      Y(1) = Y(1)+BOX
	      Y(2) = Y(2)+BOX
50	   CONTINUE
C
C always display display upper value
	   COL = MAX_WVALUE(DTI_NUM)
	   CALL GSFACI(COL)
	   CALL LSG_FILL_RECTANGLE(X,Y)
C
C and anotate with value
 	   CALL EXPAND('%I3',COL)
	   CALL GTX(X(3),(Y(2)-TXTOFF),EXPDSC)  
	   GOTO 300
	ENDIF
C
C If a lot of steps are used we won't have room to display them all.
C A maximum of 12 steps can be displayed.
C Need to work out sub-sampling factor
	FAC = MAX(1,(NSTEP(DTI_NUM)-1)/12+1)
C
C Always display first step
	IF ((.NOT. STEP_ONE(DTICHAN)).OR. (HSTEP(DTI_NUM,1) .NE. 0))THEN
	   COL = COLTAB(3,DTI_NUM).AND.255 ! zero extend byte to long
	   CALL GSFACI(COL)
	   CALL LSG_FILL_RECTANGLE(X,Y)
	   IF ((NEGOFF(DTI_NUM) .EQ. 0).AND.(.NOT. STEP_ONE(DTICHAN))) 
     &	   THEN
C	      CALL EXPAND('%I3',HSTEP(DTI_NUM,1)-STEP(DTI_NUM,1))
	      CALL EXPAND('%I3',HLOWER(DTI_NUM))
	      CALL GTX(X(3),Y(1),EXPDSC)
	   ENDIF
 	   CALL EXPAND('%I3',HSTEP(DTI_NUM,1))
	   CALL GTX(X(3),(Y(2)-TXTOFF),EXPDSC)
	ENDIF
C	  
C Generate NSTEP legend boxes (BOX pixels square)
	IF (NSTEP(DTI_NUM).LT.2) GOTO 300
	DO 100 I=FAC,NSTEP(DTI_NUM)-1,FAC
	   IF (I.EQ.1) GOTO 100	! if FAC=1, then already done this one
	   IF (I .GT. NOCOL(DTI_NUM)) THEN
	      COL = 1
	   ELSE
	      COL = COLTAB(I+2,DTI_NUM).AND.255
	   ENDIF
	   CALL GSFACI(COL)
	   Y(1) = Y(1)+BOX
	   Y(2) = Y(2)+BOX
	   CALL LSG_FILL_RECTANGLE(X,Y)
C
C and anotate with value
 	   CALL EXPAND('%I3',HSTEP(DTI_NUM,I))
	   CALL GTX(X(3),(Y(2)-TXTOFF),EXPDSC)  
100	CONTINUE
C
C Always display last step
	COL = COLTAB(NSTEP(DTI_NUM)+2,DTI_NUM).AND.255
	CALL GSFACI(COL)
	Y(1) = Y(1)+BOX
	Y(2) = Y(2)+BOX
	CALL LSG_FILL_RECTANGLE(X,Y)
 	CALL EXPAND('%I3',HSTEP(DTI_NUM,NSTEP(DTI_NUM)))
	CALL GTX(X(3),(Y(2)-TXTOFF),EXPDSC)
C
	IF (HSTEP(DTI_NUM,NSTEP(DTI_NUM)).LT.
     &					HUPPER(DTI_NUM)) THEN
C
C White box if not enough available colours
C
	   CALL GSFACI(1)
	   Y(1) = Y(1)+BOX
	   Y(2) = Y(2)+BOX
	   CALL LSG_FILL_RECTANGLE(X,Y)
 	   CALL EXPAND('%I3',HUPPER(DTI_NUM))
	   CALL GTX(X(3),(Y(2)-TXTOFF),EXPDSC)
	ENDIF
C
C now display picture 2 colours which are available
C
300	CALL LSG_PLANE_SELECT(WKID,.NOT.PLANE_MASK) ! picture 2
	CALL LSG_PLANE_OFFSET(WKID,NOPLNS)
C
310	SPAC = 0.75*BOX
C
	CALL GSTXCI(LABECOL)
	Y(2) = LEGY(QUADNO) + 16*BOX
	Y(1) = Y(2)-BOX/4.0
	DO 350 I = 1,NUMCOL
	   CALL GSFACI(I)
	   Y(1) = Y(1)+SPAC
	   Y(2) = Y(2)+SPAC
	   CALL LSG_FILL_RECTANGLE(X,Y)
	   CALL EXPAND('%I3',I)
	   CALL GTX(X(3),Y(1),EXPDSC)
350	CONTINUE
C
	IF (.NOT.DIVIDED) THEN
	   CALL EXPAND ('Overlay Colours')
	   Y(2) = Y(2)+SPAC
	   CALL GTX(X(1),Y(2),EXPDSC)
	ENDIF
C
	CALL GUWK(WKID,GSUPP)		! update display
C
400	RETURN
C
	END
