C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1988-01-29 20:25:16.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE READ_TRKB(X,Y)
C
***	MODULE	READ_TRKB
***	IDENT	29JA88
C
C Copyright Laser-Scan Laboratories Ltd., Cambridge, England
C
C Author M.W.S. Reid
C
C 	Created					MWSR    29-Jan-1988
C
C Hardware dependent routine  - ARGS version for reading trackerbal /
C cursor position 
C into (real) coords.
C
	IMPLICIT NONE
C
C arguments
	REAL*4	X,Y
C
C Common Blocks
	INCLUDE	'LSL$CMNROVER:MOUSE.CMN'
	INCLUDE	'LSL$CMNROVER:TAB.CMN'
	INCLUDE	'LSL$CMNROVER:GKS.CMN'
C
C locals
	REAL		DX, DY		! trackerball offsets
	REAL		TRKB_SCALX	! trackerball scaling factor X
	REAL		TRKB_SCALY	! trackerball scaling factor Y
	REAL		TEMPX,TEMP2X
	REAL		TEMPY,TEMP2Y
C
	PRE_MOUSE_X = MOUSE_X
	PRE_MOUSE_Y = MOUSE_Y
C
C get the movement of the TRKB since last call of VSTBRD
	CALL VSTBRD( DX, DY )
C
	CALL SYS$CLREF(%VAL(EF_TRKB))	! clear event flag
C
C work out scaling factor
	TRKB_SCALX  = RASTSZ(1)*10
	TRKB_SCALY  = RASTSZ(2)*10
C
C and add the offsets to the current cursor position
	X = MOUSE_X + INT((DX)*TRKB_SCALX)
	Y = MOUSE_Y + INT((DY)*TRKB_SCALY)
	TEMPX = MAX(0.0,X)
	TEMPY = MAX(0.0,Y)
	TEMP2X = REAL(RASTSZ(1))
	TEMP2Y = REAL(RASTSZ(2))
	X = MIN(TEMPX,TEMP2X)
	Y = MIN(TEMPY,TEMP2Y)
C
	MOUSE_X = X
	MOUSE_Y = Y
C
	RETURN
	END
