C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1989-02-09 19:55:26.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL FUNCTION OPNFIL(UPDATE)
C
***	IDENT	09FE89
***	MODULE	OPNFIL
C
C	Copyright : Laser-Scan Laboratories, Cambridge, England
C	Author    : D R Catlow
C	
	IMPLICIT NONE
C
C parameters
	INCLUDE	'LSL$CMNDTI:DTILIBMSG.PAR'
	INCLUDE	'LSL$CMNLSL:LSLLIBMSG.PAR'
C
C commons
	INCLUDE	'LSL$CMNLSL:TXTC.CMN'
	INCLUDE	'LSL$CMNLSL:EXPC.CMN'
	INCLUDE	'LSL$CMNLSL:READSTR.PAR'
	INCLUDE	'LSL$CMNDTI:DTIHDR.CMN'
	INCLUDE	'LSL$CMNLSL:STATUS.CMN'
C
	INCLUDE	'LSL$CMNROVER:GRABUF.CMN'
	INCLUDE	'LSL$CMNROVER:ROVCMN.CMN'
	INCLUDE	'LSL$CMNROVER:DTICMN.CMN'
	INCLUDE	'LSL$CMNROVER:DISCMN.CMN'
	INCLUDE	'LSL$CMNROVER:STPCMN.CMN'
C
C arguments
	LOGICAL		UPDATE		! open for write?
C workspace
C
	INTEGER*4	PSDSTR(2)	! Pseudo string descriptor
	INTEGER*4	IERR
	INTEGER*4	RET
	LOGICAL		ERR
	INTEGER*4	FAKSTR(2)
	INTEGER*2	FAKLEN
	BYTE		FAKBUF(80)
	BYTE		CH
C
	EQUIVALENCE	(FAKLEN,FAKSTR(1))
C
C functions
	INTEGER*4	DTI_OPEN
	INTEGER*4	DTI_CREATE
	INTEGER*4	READSTR
	LOGICAL		PARFILN
	LOGICAL		RDCHS
C
C**********************************************************************
C
	FAKSTR(2)=%LOC(FAKBUF)	! set up fake string descriptor
C
	OPNFIL=.TRUE.		! Assume unsuccessful
C
C	Check for optional quotes
50	IF(RDCHS(CH))THEN
	  IF (UPDATE) THEN
	     CALL WRITEF('%S specifying command UPDATE_FILEIN',EBELL)
	  ELSE
	     CALL WRITEF('%S specifying command FILEIN',EBELL)
	  ENDIF
	  CALL WRITEF('Filename is missing')
	  CALL BSLN
	  GOTO 999	  
	ELSE
	  FAKLEN=80
	  IF(CH.EQ.34.OR.CH.EQ.39)THEN
	    FAKLEN=READSTR(FAKSTR,CH,ON_CHAR2,.FALSE.)
	  ELSE
	    CALL BSCH
	    FAKLEN=READSTR(FAKSTR,' ',ON_CHAR2,.FALSE.)
	  ENDIF
	ENDIF
C
C Get input file
	RET=PARFILN(DTINAM(DTICHAN),DTILEN(DTICHAN),FAKSTR,
     &	'LSL$DTI:.DTI',.TRUE.)
	IF(.NOT.RET)THEN
	  IF (UPDATE) THEN
	     CALL WRITEF('%S specifying command UPDATE_FILEIN',EBELL)
	  ELSE
	     CALL WRITEF('%S specifying command FILEIN',EBELL)
	  ENDIF
	  CALL LSL_PUTMSG(RET)
	  GOTO 999
	ENDIF
C
C
     	RET= DTI_OPEN
     &  (DTICHAN,DTINAM(DTICHAN),DTILEN(DTICHAN),UPDATE,ERR,.TRUE.)
	IF (.NOT.RET) THEN
	   CALL LSL_PUTMSG(RET)
	   IF(RET .EQ. DTI__SYSERR) THEN
	      CALL LSL_PUTMSG(ERR)
	   ENDIF
	   GOTO 999
	ENDIF   
C
C	Set up height limits 
C branch according to datatype
	GOTO (55,55,60,70) DATA_TYPE(DTICHAN)
C
C byte word
55	HLOWER(DTICHAN)=MIN_WVALUE(DTICHAN)
	HUPPER(DTICHAN)=MAX_WVALUE(DTICHAN)
	GOTO 80
C
C longword
C don't let longword range exceed program range limits controlled
C by dimension of COLOUR array
60	HLOWER(DTICHAN)=MAX(-32767,MIN_LVALUE(DTICHAN))
	HUPPER(DTICHAN)=MIN(32766,MAX_LVALUE(DTICHAN))
	GOTO 80
C
C real
C don't let REAL range exceed program range limits controlled
C by dimension of COLOUR array
70	HLOWER(DTICHAN)=MAX(-32767,NINT(MIN_RVALUE(DTICHAN)))
	HUPPER(DTICHAN)=MIN(32766,NINT(MAX_RVALUE(DTICHAN)))
C
80	STEP_ONE(DTICHAN) = .FALSE.
C
	OPNFIL=.FALSE.
	X_SAMPLE(DTICHAN) = 1
	Y_SAMPLE(DTICHAN) = 1
	HADDTI(DTICHAN)=.TRUE.
	WRITE_DTI(DTICHAN) = UPDATE
C
C open the colour display byte file while we're at it
	IF (COLOUR_MAP) THEN
	    CALL OPEN_COLOUR_MAP
	ENDIF	   
C
999	RETURN
	END
