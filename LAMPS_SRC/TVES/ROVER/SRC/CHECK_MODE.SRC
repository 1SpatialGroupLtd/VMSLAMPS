C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1989-03-16 11:17:42.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL FUNCTION CHECK_MODE(HOW_ALLOWED,CMSTR)
C
***	MODULE	CHECK_MODE
***	IDENT	16MR89
C
C Copyright Laser-Scan Laboratories Ltd., Cambridge, England
C
C Author M.W.S. Reid
C
C 	Created					MWSR    25-Jan-1988
CMOD	Added option 6				ACM	10-Feb-1988
C
C checks current ROVER mode and moans if incompatible with 
C specified way of being allowed
C
	IMPLICIT NONE
C
C Arguments
	INTEGER*4	HOW_ALLOWED
	CHARACTER*(*)	CMSTR
C
C Common Blocks
	INCLUDE	'LSL$CMNROVER:ROVCMN.CMN'
	INCLUDE	'LSL$CMNROVER:RASTED.CMN'
C
C Functions
C
C Local Variables
C
	CHECK_MODE = .TRUE.
	GOTO (10,20,30,40,50,60,70,80,90) HOW_ALLOWED
C
C not in edit
10	IF (EDITING) THEN
	   CALL WRITEF('%S Specifying command %S',EBELL,CMSTR)
	   CALL WRITEF
     &	   ('Command not available in EDIT mode')
	   CHECK_MODE  = .FALSE.
	ENDIF   
	GOTO 999
C
C only in edit or registration
20	IF (.NOT.(EDITING.OR.REGISTERING)) THEN
	   CALL WRITEF('%S Specifying command %S',EBELL,CMSTR)
	   CALL WRITEF
     &	   ('Command only available in EDIT or REGISTRATION mode')
	   CHECK_MODE = .FALSE.
	ENDIF
	GOTO 999
C
C not in an editing operation
30	IF (HAD_EDIT) THEN
	  CALL WRITEF('%S Specifying command %S',EBELL,CMSTR)
	  CALL WRITEF('Command not availble during edit operation')
	  CHECK_MODE =.FALSE.
	ENDIF
	GOTO 999
C
C not available in DIGITISE mode
40	IF (DIGITISING) THEN
	  CALL WRITEF('%S Specifying command %S',EBELL,CMSTR)
	  CALL WRITEF('Command not available in DIGITISE mode')
	  CHECK_MODE = .FALSE.
	ENDIF
	GOTO 999
C
C only in digitise
50	IF (.NOT. DIGITISING) THEN
	  CALL WRITEF('%S Specifying command %S',EBELL,CMSTR)
	  CALL WRITEF('Command only available in DIGITISE mode')
	  CHECK_MODE  = .FALSE.
	ENDIF
	GOTO 999
C 
C not in digitising or editing modes
60	IF (DIGITISING.OR.EDITING) THEN
	   CALL WRITEF('%S Specifying command %S',EBELL,CMSTR)
	   CALL WRITEF
     &	  ('Command not available in DIGITISE or EDIT mode')
	   CHECK_MODE  = .FALSE.
	ENDIF
	GOTO 999
C
C only in digitising or edit
C
70	IF (.NOT.(DIGITISING .OR. EDITING)) THEN
	   CALL WRITEF('%S Specifying command %S',EBELL,CMSTR)
	   CALL WRITEF
     &	   ('Command only available in EDIT or DIGITISE modes')
	   CHECK_MODE  = .FALSE.
	ENDIF	
	GOTO 999
C 
C only in registration mode
80	IF (REGISTERING)THEN
	   CALL WRITEF('%S Specifying command %S',EBELL,CMSTR)
	   CALL WRITEF
     &	   ('Command not available in REGISTRATION mode')
	   CHECK_MODE  = .FALSE.
	ENDIF	
	GOTO 999
C
C not in edit  or register
90	IF (EDITING.OR.REGISTERING) THEN
	   CALL WRITEF('%S Specifying command %S',EBELL,CMSTR)
	   CALL WRITEF
     &	   ('Command not available in EDIT or REGISTRATION modes')
	   CHECK_MODE  = .FALSE.
	ENDIF   
	GOTO 999
999	RETURN
	END

