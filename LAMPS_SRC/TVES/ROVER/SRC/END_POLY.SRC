C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1988-08-18 12:35:44.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE END_POLY
C
***	MODULE	END_POLY
***	IDENT	18AU88
C
C Copyright Laser-Scan Laboratories Ltd., Cambridge, England
C
C Author M.W.S. Reid
C
C 	Created					MWSR    05-Jan-1988
C
C deals with the POLY_COMPLETE command in ROVER
C
	IMPLICIT NONE
C
C Parameters
C
C Common Blocks
	INCLUDE	'LSL$CMNDTI:DTIHDR.CMN'
	INCLUDE	'LSL$CMNROVER:ROVCMN.CMN'
	INCLUDE	'LSL$CMNROVER:COLCMN.CMN'
	INCLUDE	'LSL$CMNROVER:RASTED.CMN'
C
C Functions
C
C Local Variables
	INTEGER*4	NEWX,NEWY	! temp coords
	INTEGER*4	N_NEWPTS	! no of new pts
	INTEGER*4	POLY_BUF(2,MAXEDT) ! polygon vertices
	INTEGER*4	I		! counter
C
	IF (N_EDIT_PTS .GT. 0) THEN
	   IF (N_EDIT_PTS .GT. 2) THEN
	      IF (EDIT_COORDS(1,N_EDIT_PTS).NE. EDIT_COORDS(1,1) .OR.
     &	      EDIT_COORDS(2,N_EDIT_PTS) .NE.EDIT_COORDS(2,1))THEN
C
C close the polygon if not done bay the operator
	         NEWX = EDIT_COORDS(1,1)
	         NEWY = EDIT_COORDS(2,1)
	         CALL JOIN_PIX(EDIT_COORDS(1,N_EDIT_PTS),
     &	                    EDIT_COORDS(2,N_EDIT_PTS),
     &	                    NEWX,NEWY,
     &		            N_NEWPTS,
     &		            EDIT_COORDS(1,(N_EDIT_PTS+1)))
C
C indicate new edit pixels on the screen
	         CALL DISPLAY_EDIT(EDIT_COORDS(1,(N_EDIT_PTS+1)),
     &			  N_NEWPTS,CURSOR_COL,NOPLNS,.FALSE.)
C 
C update count of edited points
	         N_EDIT_PTS = N_EDIT_PTS + N_NEWPTS
	         N_MASTER = N_MASTER+1
	         MASTER(N_MASTER) = N_EDIT_PTS
	      ENDIF
C
C create new array with filled polygon
	      DO 10 I = 1,N_MASTER
		 POLY_BUF(1,I) = EDIT_COORDS(1,MASTER(I))
	 	 POLY_BUF(2,I) = EDIT_COORDS(2,MASTER(I))
10	      CONTINUE
	      CALL POLY_EDIT(POLY_BUF(1,1)
     &	      ,N_MASTER,EDIT_COORDS(1,(N_EDIT_PTS+1)),N_NEWPTS)
C
C update count of edited points
	      N_EDIT_PTS = N_EDIT_PTS + N_NEWPTS
	      N_MASTER = N_MASTER+1
	      MASTER(N_MASTER) = N_EDIT_PTS
	   ENDIF
C
C do the editing 
	   CALL END_EDIT
	ENDIF
C
	AREAING =.FALSE.
	RETURN
	END
