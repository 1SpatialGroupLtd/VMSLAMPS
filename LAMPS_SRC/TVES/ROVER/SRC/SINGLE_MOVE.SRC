C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1992-10-06 12:35:20.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE SINGLE_MOVE(DIRECTION)
C
***	MODULE	SINGLE_MOVE
***	IDENT	06OC92
C
C Copyright Laser-Scan Ltd., Cambridge, England
C
C Author M.W.S. Reid
C
C 	Created					MWSR 07-Jan-1988
C
C moves cursor one pixel up down left or right regardless of
C rotation 
C
	IMPLICIT NONE
C
C Common Blocks
C	INCLUDE	'LSL$CMNROVER:GKSPAR.PAR'
C	INCLUDE	'LSL$CMNROVER:GKS.CMN'
	INCLUDE	'LSL$CMNROVER:DTICMN.CMN'
	INCLUDE	'LSL$CMNROVER:ROVCMN.CMN'
	INCLUDE	'LSL$CMNROVER:RASTED.CMN'
	INCLUDE	'LSL$CMNROVER:DISCMN.CMN'
C
***	COMMON/LSL$CMNDTI:DTIHDR/
C
C Argument
	INTEGER*4	DIRECTION
C
C Local Variables
	INTEGER*4	X_DTI,Y_DTI		! DTI coords
C
C	      U  D  L  R
	GOTO (10,20,30,40), DIRECTION
C
C UP
10	GOTO (12,18,16,14), CUR_ROTATE(DTICHAN)+1
C
12	X_DTI = X_CURDTI 
	Y_DTI = Y_CURDTI+1 
	GOTO 900
14	X_DTI = X_CURDTI+1 
	Y_DTI = Y_CURDTI 
	GOTO 900
16	X_DTI = X_CURDTI 
	Y_DTI = Y_CURDTI-1 
	GOTO 900
18	X_DTI = X_CURDTI-1 
	Y_DTI = Y_CURDTI 
	GOTO 900 
C
C DOWN
20	GOTO (22,28,26,24), CUR_ROTATE(DTICHAN)+1
C
22	X_DTI = X_CURDTI 
	Y_DTI = Y_CURDTI-1 
	GOTO 900
24	X_DTI = X_CURDTI-1 
	Y_DTI = Y_CURDTI 
	GOTO 900
26	X_DTI = X_CURDTI 
	Y_DTI = Y_CURDTI+1 
	GOTO 900
28	X_DTI = X_CURDTI+1 
	Y_DTI = Y_CURDTI 
	GOTO 900
C
C LEFT
30	GOTO (32,38,36,34), CUR_ROTATE(DTICHAN)+1
C
32	X_DTI = X_CURDTI-1 
	Y_DTI = Y_CURDTI 
	GOTO 900
34	X_DTI = X_CURDTI 
	Y_DTI = Y_CURDTI+1 
	GOTO 900
36	X_DTI = X_CURDTI+1 
	Y_DTI = Y_CURDTI 
	GOTO 900
38	X_DTI = X_CURDTI 
	Y_DTI = Y_CURDTI-1 
	GOTO 900
C
C RIGHT
40	GOTO (42,48,46,44), CUR_ROTATE(DTICHAN)+1 
C
42	X_DTI = X_CURDTI+1 
	Y_DTI = Y_CURDTI 
	GOTO 900
44	X_DTI = X_CURDTI 
	Y_DTI = Y_CURDTI-1 
	GOTO 900
46	X_DTI = X_CURDTI-1 
	Y_DTI = Y_CURDTI 
	GOTO 900
48	X_DTI = X_CURDTI 
	Y_DTI = Y_CURDTI+1 
	GOTO 900
C
900	IF (X_DTI .LT. DTI_WINDOW_SWX(DTICHAN)) GOTO 999
	IF (Y_DTI .LT. DTI_WINDOW_SWY(DTICHAN)) GOTO 999
	IF (X_DTI .GT. DTI_WINDOW_NEX(DTICHAN)) GOTO 999
	IF (Y_DTI .GT. DTI_WINDOW_NEY(DTICHAN)) GOTO 999
C
	CALL MOVE_CURSOR(REAL(X_DTI),REAL(Y_DTI),.FALSE.,.FALSE.)
C
999	CALL SET_DTI_POSITION(REAL(X_DTI),REAL(Y_DTI))
C
	RETURN
	END
C
