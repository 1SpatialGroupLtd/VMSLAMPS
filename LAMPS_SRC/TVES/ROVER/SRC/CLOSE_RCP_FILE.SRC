C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1988-11-18 10:25:36.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL	FUNCTION CLOSE_RCP_FILE(RCP_LUN)
C
***	IDENT	18NO88
***	MODULE	CLOSE_RCP_FILE
C
C	Copyright : Laser-Scan Laboratories, Cambridge, England
C	Created   : D R Catlow                   14-November-1988
C
C	Function to close a RCP file.
C
C	Before closing the contents of common RCP are
C	written to the file. (ie. the file is updated).
C
C	If CREATE is set to true for this file, the file
C	is created first, otherwise an existing file is
C	opened for overwriting.
C
C---------------------------------------------------------------------------
C
	IMPLICIT NONE
C
C	Argument
	INTEGER*4		RCP_LUN		! which RCP file
C
***	COMMON/LSL$CMNROVER:RCP/		! has HAD_FIL_RCP
***	COMMON/LSL$CMNROVER:ROVCMN/
C
C	Local
	INTEGER*4		RETVAL		! function return
	INTEGER*4		I		! counter
C
C	Functions
	INTEGER*4		FLWOVW		! open for overwriting
	INTEGER*4		FLWOPN		! create new file
	INTEGER*4		FLWCLO		! close the file
	LOGICAL			WRITE_RCP_FILE	! write contents to file
C
C-----------------------------------------------------------------------
C
C	Check that the RCP LUN is valid
	IF(RCP_LUN.LT.1.OR.RCP_LUN.GT.MAX_RCP_FILES)THEN
	  CLOSE_RCP_FILE=.FALSE.
	  GOTO 999
	ENDIF
C
C	Check a file is opened on this RCP LUN
	IF(.NOT.RCP_LUN_INUSE(RCP_LUN))THEN
	  CLOSE_RCP_FILE=.FALSE.
	  GOTO 999
	ENDIF
C
C----------------------------------------------------------------------
C	If the file already exists open for overwriting
	IF(.NOT.CREATE(RCP_LUN))THEN
	  RETVAL = FLWOVW (RCP_LUN,
     &             RCP_FILE_NAME(RCP_LUN)(1:RCP_FILE_LENGTH(RCP_LUN)))
	  IF(.NOT.RETVAL)THEN
	    CALL LSL_PUTMSG(RETVAL)
	    CLOSE_RCP_FILE=.FALSE.
	    GOTO 999
	  ENDIF
	ELSE
C	Create a new file
	  RETVAL = FLWOPN (RCP_LUN,
     &             RCP_FILE_NAME(RCP_LUN)(1:RCP_FILE_LENGTH(RCP_LUN)))
	  IF(.NOT.RETVAL)THEN
	    CALL LSL_PUTMSG(RETVAL)
	    CLOSE_RCP_FILE=.FALSE.
	    GOTO 999
	  ENDIF
	ENDIF
C
C-----------------------------------------------------------------------
C	Write the contents of common RCP to the file
	RETVAL = WRITE_RCP_FILE(RCP_LUN)
C
	IF(.NOT.RETVAL)THEN
	  IF(CREATE(RCP_LUN))THEN
	    CALL WRITEF('%S Writing RCP entries to RCP file number %N',
     &      EBELL,RCP_LUN)
	  ELSE
	    CALL WRITEF('%S Updating RCP entries in RCP file number %N',
     &      EBELL,RCP_LUN)
	  ENDIF
	ENDIF
C
C-----------------------------------------------------------------------
C	Close the file
	RETVAL=FLWCLO(RCP_LUN)
	IF(.NOT.RETVAL)THEN
	  CALL LSL_PUTMSG(RETVAL)
	ENDIF
C
C	Decrement count of total number of RCP files
	TOTAL_RCP_FILES=TOTAL_RCP_FILES-1
C
C	Indicate that LUN is free
	RCP_LUN_INUSE(RCP_LUN)=.FALSE.
C
C-----------------------------------------------------------------------
C	Signal success
C
	CLOSE_RCP_FILE=.TRUE.
C
999	RETURN
C
	END
