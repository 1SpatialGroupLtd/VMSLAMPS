	SUBROUTINE REPLACE_EDIT(PIXBUF,NUMPTS)
C
***	MODULE	REPLACE_EDIT
***	IDENT	24JA89
C
C Copyright Laser-Scan Laboratories Ltd., Cambridge, England
C
C Author M.W.S. Reid
C
C 	Created					MWSR    21-Dec-1987
C
C redraws all pixels designated in PIXBUF to their original colour
C
	IMPLICIT NONE
C
C arguments
	INTEGER*4	NUMPTS		! number of pixels to draw
	INTEGER*4	PIXBUF(2,NUMPTS) ! pixel coordinates
C
C Parameters
	INCLUDE	'LSL$CMNDTI:DTIPAR.PAR'
C
C Common Blocks
	INCLUDE	'LSL$CMNROVER:GKSPAR.PAR'
	INCLUDE	'LSL$CMNDTI:DTIHDR.CMN'
	INCLUDE	'LSL$CMNROVER:DTICMN.CMN'
	INCLUDE	'LSL$CMNROVER:ROVCMN.CMN'
	INCLUDE	'LSL$CMNROVER:RASTED.CMN'
	INCLUDE	'LSL$CMNROVER:COLCMN.CMN'
	INCLUDE	'LSL$CMNROVER:GKS.CMN'
C
C Functions
	INTEGER*2	ICOL
	INTEGER*4	DTI_READ_BYTE_DATA
	INTEGER*4	DTI_READ_WORD_DATA
	INTEGER*4	DTI_READ_LONG_DATA
	INTEGER*4	DTI_READ_REAL_DATA
	REAL		GET_DTI_VAL
C
C Local Variables
	REAL		RVAL		! real value
	BYTE		COL		! colour to draw
	INTEGER*4	I		! counter
	INTEGER*4	XSIGN		! signfor drawing direction
	INTEGER*4	RET		! return code
	INTEGER*4	XPOS,YPOS	! position of lines on screen
C
C select raster planes
	CALL LSG_PLANE_SELECT(WKID,PLANE_MASK)
C set rotation mode and find x drawing direction according to current 
C rotation settings
C
C 
C no offset
	CALL LSG_PLANE_OFFSET(WKID,0)
C
	DO 10 I = 1,NUMPTS
C
C determine display colour
	   IF (OPENED_COLFILE)THEN
	      RET = DTI_READ_BYTE_DATA(COL_LUN,COL,
     &	      (PIXBUF(1,I)-COL_EXTENT(1)+1),
     &	      (PIXBUF(2,I)-COL_EXTENT(2)+1))
	      IF (.NOT. RET) CALL LSL_PUTMSG(RET)
	   ELSE
	      RVAL= GET_DTI_VAL(PIXBUF(1,I),PIXBUF(2,I))
	      COL= COLTAB(ICOL(DTICHAN,RVAL),DTICHAN)
	   ENDIF
C
C work out position on screen
	   CALL SET_ROTATE(FLOAT(PIXBUF(1,I)),
     &                     FLOAT(PIXBUF(2,I)),
     &                     XPOS,
     &                     YPOS,
     &                     XSIGN)
C
C display it
	   CALL LSG_PIXEL_ARRAY(
     &		FLOAT(XPOS),FLOAT(YPOS),
     &		XSIGN,-XSIGN,1,1,1,1,
     &		SF(DTICHAN),
     &		SF(DTICHAN),
     &		COL)
C
10	CONTINUE
C
	CALL GUWK(WKID,GSUPP)
C replace the cursor
	CALL MOVE_CURSOR(X_CURDTI,Y_CURDTI,.TRUE.,.FALSE.)
C
	RETURN
	END
