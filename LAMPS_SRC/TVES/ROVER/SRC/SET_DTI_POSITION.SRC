C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1992-10-06 12:46:08.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE SET_DTI_POSITION(X_DTI,Y_DTI)
C
***	MODULE	SET_DTI_POSITION
***	IDENT	06OC92
C
C Copyright Laser-Scan Ltd., Cambridge, England
C
C Author M.W.S. Reid
C
C 	Created					MWSR    29-Jan-1988
C
C sets mouse or  trackerball to given DTI coords
C
	IMPLICIT NONE
C
C Parameters
C
C Common Blocks
C	INCLUDE	'LSL$CMNROVER:GKSPAR.PAR'
C	INCLUDE	'LSL$CMNROVER:GKS.CMN'
	INCLUDE	'LSL$CMNROVER:DTICMN.CMN'
	INCLUDE	'LSL$CMNROVER:ROVCMN.CMN'
	INCLUDE	'LSL$CMNROVER:DISCMN.CMN'
C
***	COMMON/LSL$CMNDTI:DTIHDR/
C
C arguments
	REAL		X_DTI,Y_DTI	! DTI coords
C
C Local Variables
	REAL		XPOS,YPOS
	INTEGER*4 	XSAMP,YSAMP
C
	IF(HAD_SAMPLE) THEN
	  XSAMP = X_SAMPLE(DTICHAN)
	  YSAMP = Y_SAMPLE(DTICHAN)
	ELSE
	  XSAMP = 1
	  YSAMP = 1
	ENDIF
C
C  diff position depending on rotation
	GOTO (300,360,340,320),CUR_ROTATE(DTICHAN) + 1 
C						!south,west,north,east
C
300	XPOS = SIGSWX(CURPOS) + 
     & 		SF(DTICHAN)*(X_DTI-DTI_WINDOW_SWX(DTICHAN))/XSAMP
	YPOS = SIGSWY(CURPOS) + 
     &  	SF(DTICHAN)*(Y_DTI-DTI_WINDOW_SWY(DTICHAN))/YSAMP
	GOTO 380
C
C Rotate by 90 (view from west)
320	XPOS = SIGSWX(CURPOS) + SF(DTICHAN) *
     &  	(DTI_WINDOW_NEY(DTICHAN)-Y_DTI+1)/YSAMP
	YPOS = SIGSWY(CURPOS) + SF(DTICHAN) *
     &  	(X_DTI-DTI_WINDOW_SWX(DTICHAN))/XSAMP
	GOTO 380
C
C Rotate by 180 (view from north)
340	XPOS = SIGSWX(CURPOS) + SF(DTICHAN) *
     &  	(DTI_WINDOW_NEX(DTICHAN)-X_DTI+1)/XSAMP
	YPOS = SIGSWY(CURPOS) + SF(DTICHAN) *
     &  	(DTI_WINDOW_NEY(DTICHAN)-Y_DTI+1)/YSAMP
	GOTO 380
C
C Rotate by 270 (view from east)
360	XPOS = SIGSWX(CURPOS) + SF(DTICHAN) *
     &  	(Y_DTI-DTI_WINDOW_SWY(DTICHAN))/YSAMP
	YPOS = SIGSWY(CURPOS) + SF(DTICHAN) *
     &  	(DTI_WINDOW_NEX(DTICHAN)-X_DTI+1)/XSAMP
	GOTO 380
C
380	CALL SET_TRKB(XPOS,YPOS)
C
C set up globals
C
	RETURN
	END
C
