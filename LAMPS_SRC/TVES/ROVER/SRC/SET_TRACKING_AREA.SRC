	SUBROUTINE SET_TRACKING_AREA()
C
***	IDENT	15FE89
***	MODULE	SET_TRACKING_AREA
C
C	Copyright : Laser-Scan Laboratories, Cambridge, England
C
C	Author	  : Andrew Morris
C	Created   : Jan 1985
C
CMOD	For use in REGISTRATION mode.  Additionally prompts
C	the user to enter the coordinates of the SW and NE
C	registration points.                            DRC     Jan-1989
CMOD	Changed to use UPDATE_TRANSFORMATIONS		ACM	Jan-1988
CMOD	Modified for ROVER				MWSR	Aug-1986
C
	IMPLICIT NONE
C
	INCLUDE	'LSL$CMNROVER:ROVCMN.CMN'	! has TRACKING
	INCLUDE	'LSL$CMNROVER:TRANS.CMN'	! has NW_TAB, etc.
	INCLUDE	'LSL$CMNROVER:DTIQIO.CMN'	! has NW_TAB, etc.
	INCLUDE 'LSL$CMNROVER:RCP.CMN'		
	INCLUDE	'LSL$CMNROVER:TAB.CMN'		! has BUTTON
C
C workspace
	INTEGER		SW(2),NW(2),SE(2),NE(2)! map corner table coords
	REAL		X_EW,Y_EW	! east to west vector
	REAL		X_NS,Y_NS	! north to south vector
	REAL		L_EW 		! east to west length
	REAL		L_NS 		! north to south length
	BYTE		CH		! single character
C
C functions
	LOGICAL		GET_TAB_COORDS	! get a point in table coords
	LOGICAL		RDREAL			! to read a real
	LOGICAL		RDCHS			! read a single ch.
	LOGICAL		WAIT_INPUT
C
C:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
C
C	Prompts for map NW,SW, and SE (and NE) corners.
C
C	NE corner is not used -it is accepted only for compatability
C	purposes.
C
C	Will not accept a map which is more than 2 degrees off
C	rectangular.
C
C:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
C
	TRACKING = .FALSE.	! tracking area is unset
C
10	CALL ROVPING
	IF(.NOT.GET_TAB_COORDS(NW(1),NW(2),'Map NW corner')) GOTO 20
	CALL ROVPING
 	IF(.NOT.GET_TAB_COORDS(SW(1),SW(2),'Map SW corner')) GOTO 20
	CALL ROVPING
	IF(.NOT.GET_TAB_COORDS(SE(1),SE(2),'Map SE corner')) GOTO 20
	CALL ROVPING
	IF(.NOT.GET_TAB_COORDS(NE(1),NE(2),'Map NE corner')) GOTO 20
C
	NW_TAB(1) = REAL(NW(1))
	NW_TAB(2) = REAL(NW(2))
	SW_TAB(1) = REAL(SW(1))
	SW_TAB(2) = REAL(SW(2))
	SE_TAB(1) = REAL(SE(1))
	SE_TAB(2) = REAL(SE(2))
	NE_TAB(1) = REAL(NE(1))
	NE_TAB(2) = REAL(NW(2))

C
	X_EW = SE_TAB(1)-SW_TAB(1)
	Y_EW = SE_TAB(2)-SW_TAB(2)
	X_NS = NW_TAB(1)-SW_TAB(1)
	Y_NS = NW_TAB(2)-SW_TAB(2)
C
C 
	IF ((X_EW .LT. 0.00001).OR. (Y_NS .LT. 0.00001)) THEN
	  CALL WRITEF('%S digitising corners',EBELL)
	  CALL WRITEF('Two Points are coincident')
	  GOTO 10
	ENDIF  	   
	L_EW = SQRT(X_EW**2+Y_EW**2)
	L_NS = SQRT(X_NS**2+Y_NS**2)
C
	IF (ABS(X_EW*Y_NS-Y_EW*X_NS).LT.
     &	    L_EW*L_NS*SIN(88*2*3.1459265/360)) THEN
	  CALL WRITEF('%S digitising corners',EBELL)
	  CALL WRITEF
     &	  ('More than 2 degrees off square - repeat')
	  GOTO 10			! try again
	END IF
C
C-------------------------------------------------------------------
C	If in registration mode, additional prompt for
C	the coordinates of the bottom left and top right
C	points.  This allows us to transform between table
C	coordinates and amp coordinates.
	IF(REGISTERING)THEN
100	  TTOPRO = .TRUE.
110       IF (.NOT.WAIT_INPUT('Map SW coordinates')) GOTO 20
	  IF (.NOT.HAD_VDU)THEN
C	     CALL WRITEF('%S Specifying map coordinates',EBELL)
C	     CALL WRITEF('Values must be input from the keyboard')
	     GOTO 110
	  ENDIF
C
C	Read the coordinates from the terminal
 	  IF(RDCHS(CH))GOTO 100
	  CALL BSCH
	  IF (RDREAL(RCP_MAP_SWX))GOTO 100
	  IF (RDREAL(RCP_MAP_SWY))GOTO 100
C
200	  TTOPRO = .TRUE.
210 	  IF (.NOT.WAIT_INPUT('Map NE coordinates')) GOTO 20
	  IF (.NOT.HAD_VDU)THEN
C	     CALL WRITEF('%S Specifying map coordinates',EBELL)
C	     CALL WRITEF('Values must be input from the keyboard')
	     GOTO 210
	  ENDIF
C
C	Read the coordinates from the terminal
 	  IF(RDCHS(CH))GOTO 200
	  CALL BSCH
	  IF (RDREAL(RCP_MAP_NEX))GOTO 200
	  IF (RDREAL(RCP_MAP_NEY))GOTO 200
C	     
C	Check that the NE coordinates exceed the SW coordinates
	  IF (RCP_MAP_SWX.GT.RCP_MAP_NEX.OR.
     &        RCP_MAP_SWY.GT.RCP_MAP_NEY)THEN
	     CALL WRITEF('%S Specifying map coordinates',EBELL)
	     CALL WRITEF('NE coordinates must exceed SW coordinates')
	     GOTO 20
	  ENDIF
C
	  TABLE_REGISTRATION = .TRUE.
	ENDIF
C
C----------------------------------------------------------------------
C
C Set up TAB_FIL table-to-DTI/IFF coord transformations
	TRACKING = .TRUE.	! tracking area set successfully
	CALL UPDATE_TRANSFORMATIONS()
	TTOPRO = .TRUE.
C
20	RETURN
	END
