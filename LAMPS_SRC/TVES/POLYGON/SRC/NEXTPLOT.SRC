	INTEGER	FUNCTION NEXT_PLOT( INSIDE, IN_LEN, VALUE )
C
***	IDENT	16OC84
***	MODULE	NEXT_PLOT
C
C	Copyright LaserScan Laboratories Ltd., Cambridge, England
C
C Author TJ Ibbs, 16 October 1984
C
C This function locates the next start of plot within the buffer,
C and returns the location of that start
C
	IMPLICIT NONE
C
C we are passed
C
	INTEGER		IN_LEN		! length of buffer
	BYTE		INSIDE(IN_LEN)	! marker buffer
	BYTE		VALUE		! start of plot marker
C
C and define the marker values
C
***	PARAMETER/HERE:MARK/
C
C functions
C
	INTEGER		NEXT_PTR	! get next value
	INTEGER		PREV_PTR	! get previous one
C
C and workspace
C
	INTEGER		PTR		! work through the buffer
	INTEGER		POSSIBLE	! may be start of plot
	INTEGER		TEMP_PTR	! another one
C
C *********************************************************************
C
C so let us look at the next entry within the buffer
C
1000	PTR = NEXT_PTR( INSIDE, IN_LEN, VALUE )
C
C check that we have not run out of buffer
C
	IF ( PTR.EQ.-1 ) THEN
C
C	 we have reached the end of the buffer without finding a plot
C	 - we have thus 'succeeded' - there is no next plot
C
	   GOTO 9999
C
	ELSEIF ( VALUE.EQ.MARK_TRANS ) THEN
C
C	 we have a transition - is it the start of a plot?
C	 we must look for another entry to confirm/deny that
C
	   POSSIBLE = PTR		! remember where we are
C
1200	   PTR = NEXT_PTR( INSIDE, IN_LEN, VALUE )
C
	   IF ( PTR.EQ.-1 ) THEN
C
C	    we have run out of buffer - this must mean that the
C	    MARK_TRANS precedes the first entry we saw, and thus
C	    must signify the end of a plot (if it was the start, it
C	    would have been detected). Thus we have nothing to plot,
C	    so exit 'succesfully'
C
	      GOTO 9999
C
	   ELSEIF ( VALUE.EQ.MARK_IN ) THEN
C
C	    yes - that was the start of a plot, so note as much and
C	    get out of here
C
	      PTR = POSSIBLE		! re-instate PTR
	      GOTO 9999			! return the value
C
	   ELSEIF ( VALUE.EQ.MARK_TRANS ) THEN
C
C	    no - that must have been the end of a plot - this must be
C	    the start of a plot (ie use this value of PTR)
C
	      GOTO 9999			! return the value
C
	   ELSEIF ( VALUE.EQ.MARK_BELOW ) THEN
C
C	    no - that must have been the end of a plot, so we go
C	    back to looking for a start
C
	      GOTO 1000
C
	   ELSE
C
C	    this is an entry which doesn't help us make up our minds,
C	    so look further on
C
	      GOTO 1200
C
	   ENDIF
C
	ELSEIF ( VALUE.EQ.MARK_IN ) THEN
C
C	 we are obviously now inside a plot, but is this the start of
C	 one?
C
C	 note that the case of MARK_TRANS followed by MARK_IN should
C	 be checked for, in case we back up to before where we started
C	 from
C
	   POSSIBLE = PTR
C
1400	   TEMP_PTR = PREV_PTR( INSIDE, IN_LEN, VALUE )
C
	   IF ( TEMP_PTR.EQ.-1 ) THEN
C
C	    we have run out of buffer - where we started in the buffer
C	    was not the start of a polygon, so this point presumably is
C
	      PTR = POSSIBLE		! re-instate PTR
	      GOTO 9999			! return that value
C
	   ELSEIF ( VALUE.EQ.MARK_BELOW ) THEN
C
C	    yes - that was the start of a plot
C
	      PTR = POSSIBLE
	      GOTO 9999			! return that value
C
	   ELSEIF ( VALUE.EQ.MARK_TRANS ) THEN
C
C	    yes - this is the start of a plot
C
	      PTR = TEMP_PTR
	      GOTO 9999
C
	   ELSEIF ( VALUE.EQ.MARK_IN ) THEN
C
C	    no - we found the middle of a plot, so give up on
C	    this idea - NB the call of PREV_PTR will not have
C	    affected our position in the buffer for NEXT_PTR
C
	      GOTO 1000
C
	   ELSE
C
C	    we found something that doesn't tell us anything - ignore
C	    it and try for something better - ie the entry before
C
	      GOTO 1400
C
	   ENDIF
C
	ENDIF
C
C so, we found something we aren't particularly interested in, it's not
C something to plot - we look further on
C
	GOTO 1000
C
C *********************************************************************
C
C so we have a value to return - do so
C
9999	IF (PTR.GT.0) VALUE = INSIDE(PTR)
	NEXT_PLOT = PTR
	RETURN
C
	END
