C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1984-09-14 14:14:10.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE HEIGHT( BUF, LEN, MIN_Y, MAX_Y )
C
***	IDENT	14SE84
***	MODULE	HEIGHT
C
C	Copyright LaserScan Laboratories Ltd., Cambridge, England
C
C Author TJ Ibbs, 14 September 1984
C
C This subroutine scans the points in BUF, and returns the maximum
C and minimum height values (Y coords) in the buffer
C
	IMPLICIT NONE
C
C passed
C
	INTEGER		LEN		! size of input buffer
	REAL		BUF(2,LEN)	! point buffer - input
C
	REAL		MIN_Y		! low  bound
	REAL		MAX_Y		! high bound
C
C for ease of use
C
	PARAMETER	Y = 2
C
C workspace
C
	INTEGER		PTR		! DO loop variable
C
C
C so we simply cycle (?) through all of the points, checking their Y
C value - start off with the first point
C
	MIN_Y = BUF(Y,1)
	MAX_Y = BUF(Y,1)
C
	DO 1000 PTR = 2,LEN
C
	   IF ( BUF(Y,PTR).LT.MIN_Y ) THEN
	      MIN_Y = BUF(Y,PTR)
	   ELSEIF ( BUF(Y,PTR).GT.MAX_Y ) THEN
	      MAX_Y = BUF(Y,PTR)
	   ENDIF
C
1000	CONTINUE
C
	RETURN
	END
