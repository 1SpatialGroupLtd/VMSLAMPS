C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1991-08-30 15:52:10.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL FUNCTION ROUGH
C
***	MODULE ROUGH
***	IDENT  14MR89
C
C	Copyright Laser-Scan Laboratories Ltd., Cambridge, England
C	Author: 	D R Catlow
C
C	Modification:
C	Changed for new DTILIB version of SLOPES	MWSR   08-Mar-89
C	For use withe the NULL_BORDER qualifier         DRC    08-Sep-88
C	To use LSLLIB                                   DRC    22-Jan-87
C	Passes real data values to ICOL and PUTROW	DRC    15-May-87
C       New argument to PUTROW				MWSR   Mar-1987
C
C	Subroutine to calculate the average or maximum difference
C	in height between adjacent posts using a 3X3 local operator.
C
 	IMPLICIT NONE
C
C
***	COMMON/LSL$CMNLSL:TXTC/
***	COMMON/LSL$CMNLSL:EXPC/
***	COMMON/LSL$CMNDTI:DTIHDR/
***	COMMON/HERE:SLPCMN/
***	COMMON/HERE:DISCMN/	
C
C	GKS common block etc.
***	COMMON/HERE:GKS/
***	PARAMETER/HERE:GKSPAR/
C
C-----------------------------------------------------------------------
C Functions called:
C
	INTEGER*4	ICOL		!set SIGMA colour
	REAL*4		DTI_HGT		!retrieve 1 DTI cell height
	LOGICAL		HADCTRLC	!test if we've had CTRLC
	LOGICAL		PREPARE
C
	REAL		HEIGHT(MAX_COLUMN) !average or max h difference
	REAL*4		TOTAL_HDIFF	!total height difference
	INTEGER*4	X_COUNT,Y_COUNT	!counters
	INTEGER*4	J,I,N,K,L	!counters
	INTEGER*4	IERR
	INTEGER*4	COL		!cell colour
	REAL*4		X1(3)		! 3 by 3
	REAL*4		X2(3)		! height
	REAL*4		X3(3)		! matrix
	LOGICAL		NULL1(3)	! 3 BY 3
	LOGICAL		NULL2(3)	!  to signal
	LOGICAL		NULL3(3)	! if values null
	REAL*4		MAX_HDIFF	! maximum height difference
	REAL*4		DIFF(3,3)	! height diffs for 3 cells.
C
C***********************************************************************
	ROUGH = .TRUE.
C
	COLMNS=0
C
C-----------------------------------------------------------------------
C set up graphics stuff
	ROUGH = PREPARE(4)
	IF (.NOT.ROUGH) GOTO 999
C
C*******************************************************************
C
	DO 500 X_COUNT= DTI_WINDOW_SWX(DTICHAN),DTI_WINDOW_NEX(DTICHAN)
C
  	   PIXADD=0
C
C Has CTRL/C been pressed
	   IF (HADCTRLC()) GOTO 999
C
	   DO 400 Y_COUNT= DTI_WINDOW_SWY(DTICHAN)-2,
     &                     DTI_WINDOW_NEY(DTICHAN)-2
C
C Retrieve height values
	      IF(PIXADD.EQ.0)THEN
	         DO 100 I=1,3
	            X1(I)=DTI_HGT(X_COUNT-1,Y_COUNT+I,NULL1(I))
	            X2(I)=DTI_HGT(X_COUNT  ,Y_COUNT+I,NULL2(I))
	            X3(I)=DTI_HGT(X_COUNT+1,Y_COUNT+I,NULL3(I))
100	         CONTINUE
	      ELSE
	         DO 200 I=1,2
	            X1(I)=X1(I+1)
	            X2(I)=X2(I+1)
	            X3(I)=X3(I+1)
	            NULL1(I) = NULL1(I+1)
	            NULL2(I) = NULL2(I+1)
	            NULL3(I) = NULL3(I+1)
200	         CONTINUE
	         X1(3)=DTI_HGT(X_COUNT-1,Y_COUNT+3,NULL1(3))
	         X2(3)=DTI_HGT(X_COUNT  ,Y_COUNT+3,NULL2(3))
	         X3(3)=DTI_HGT(X_COUNT+1,Y_COUNT+3,NULL3(3))
	      ENDIF
C
	      PIXADD=PIXADD+1
C***********************************************************************
C Check for null heights 
C If any of the 9 heights are null, then treat height as though
C outside range
C
	      DO 210 J=1,3
                 IF(NULL1(J))GOTO 220
	         IF(NULL2(J))GOTO 220
	         IF(NULL3(J))GOTO 220
210	      CONTINUE
	      GOTO 230
C
220	      HEIGHT(PIXADD)=-3	!set colour to black.
	      GOTO 400
C
C Sea level?
230	      IF(X2(2).EQ.0)THEN
	         HEIGHT(PIXADD)=-1		!treat specially
	         GOTO 400			!get next height
	      ENDIF
C
	      IF(X2(2).LT.HLOWER.OR.X2(2).GT.HUPPER)THEN
	         HEIGHT(PIXADD)=-2  	!dummy value 
	         GOTO 400			!get next height
	      ENDIF
C
C Calculate the 8 height difference values
C
	      DO 250 K=1,3
	         DIFF(K,1)=ABS(X2(2)-X1(K))
	         DIFF(K,2)=ABS(X2(2)-X2(K))
	         DIFF(K,3)=ABS(X2(2)-X3(K))
250	      CONTINUE
C
C Average difference in height
	      IF(AVERAGE_HDIFF)THEN
	         TOTAL_HDIFF=0
                 DO 300 K=1,3
	            TOTAL_HDIFF=TOTAL_HDIFF+
     &              DIFF(K,1)+DIFF(K,2)+DIFF(K,3)
300	         CONTINUE
	         HEIGHT(PIXADD)=TOTAL_HDIFF*ZSCALE/8.0
	      ELSE
C
C Maximum difference in height
	         MAX_HDIFF=0
	         DO 350 K=1,3
	 	    MAX_HDIFF=MAX(MAX_HDIFF,DIFF(K,1))
	            MAX_HDIFF=MAX(MAX_HDIFF,DIFF(K,2))
	            MAX_HDIFF=MAX(MAX_HDIFF,DIFF(K,3))
350	         CONTINUE
	         HEIGHT(PIXADD)=MAX_HDIFF*ZSCALE
	      ENDIF	    
C
	      IF(HEIGHT(PIXADD).LT.GLOWER.OR.
     &	         HEIGHT(PIXADD).GT.GUPPER)THEN
	         HEIGHT(PIXADD)=-4		!treat specially 
	      ENDIF
C
400	   CONTINUE
C
C***********************************************************************
C Ouput this row of height differences
C
	   COLMNS=COLMNS+1
	   NUMBER_PIXELS=PIXADD
C
C Set appropriate colour indices
	   IF(GRAPHICS)THEN
	      DO 450 I=1,PIXADD
	         COL=ICOL(HEIGHT(I))	!set to appropriate colour
                 IF(COL.LE.60)COL=COLTAB(COL)
	         BRIGHT(I)=COL
450	      CONTINUE
C
	      CALL SHDRAW			!output to screen
	   ENDIF
C
	   IF(PLOT_DTI) CALL PUTROW(HEIGHT,2)
C
C***********************************************************************
C
500	CONTINUE
C
	IF(PLOT_DTI) CALL CLOSE_FILEOUT
C
C***********************************************************************
C
999	RETURN
	END
C
