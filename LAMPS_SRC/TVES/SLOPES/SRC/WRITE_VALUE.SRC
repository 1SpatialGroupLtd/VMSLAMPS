C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1991-08-30 19:30:38.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE WRITE_VALUE(X,Y,RVAL,IS_NULL)
C
***	MODULE	WRITE_VALUE
***	IDENT	08MR89
C
C Copyright Laser-Scan Laboratories Ltd., Cambridge, England
C
C Author M.W.S. Reid
C
C 	Created					MWSR    07-Mar-1989
C
C writes values to output file appropriately for data type
C
	IMPLICIT NONE
C
C Parameters
***	PARAMETER/LSL$CMNDTI:DTIPAR/
C
C Arguments
	INTEGER*4	X	!IN - x position
	INTEGER*4	Y	!IN - y position
	REAL*4		RVAL	!IN - real value to be written
	LOGICAL		IS_NULL	!IN - is it a null value?
C
C Common Blocks
***	COMMON/LSL$CMNDTI:DTIHDR/
***	COMMON/HERE:SLPCMN/
C
C Functions
	INTEGER*4	DTI_WRITE_BYTE_DATA
	INTEGER*4	DTI_WRITE_WORD_DATA
	INTEGER*4	DTI_WRITE_LONG_DATA
	INTEGER*4	DTI_WRITE_REAL_DATA
C
C Local Variables
	INTEGER*2 	AWORD		! temp storage
	BYTE		ABYTE
	REAL		AREAL
	INTEGER		ALONG
	EQUIVALENCE	(AWORD,ABYTE)
C
	INTEGER*4	RET
C
	IF (DATA_TYPE(PLOTCHAN) .EQ. DATA_BYTE) THEN
	   IF (IS_NULL) THEN
	      ABYTE = DTI_NULL_BYTE
	   ELSE
	      AWORD = MAX(0,MIN(255,NINT(RVAL)))
	   ENDIF
	   RET = DTI_WRITE_BYTE_DATA(PLOTCHAN,ABYTE,X,Y)
C
	ELSEIF (DATA_TYPE(PLOTCHAN) .EQ. DATA_WORD) THEN
	   IF (IS_NULL)THEN
	      AWORD = DTI_NULL_WORD
	   ELSE
	      AWORD = NINT(RVAL)
	   ENDIF
	   RET=DTI_WRITE_WORD_DATA(PLOTCHAN,AWORD,X,Y)
C
	ELSEIF (DATA_TYPE(PLOTCHAN) .EQ. DATA_LONG) THEN
	   IF (IS_NULL)THEN
	      ALONG = DTI_NULL_LONG
	   ELSE
	      ALONG = NINT(RVAL)
	   ENDIF
	   RET=DTI_WRITE_LONG_DATA(PLOTCHAN,ALONG,X,Y)
C
	ELSEIF (DATA_TYPE(PLOTCHAN) .EQ. DATA_REAL) THEN
	   IF (IS_NULL) THEN
	      AREAL = DTI_NULL_REAL
	   ELSE
	      AREAL = RVAL
	   ENDIF
	   RET=DTI_WRITE_REAL_DATA(PLOTCHAN,AREAL,X,Y)
	ENDIF
C	
	RETURN
	END
C
