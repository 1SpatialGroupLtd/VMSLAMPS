	SUBROUTINE LUT_CMD(MCMD)
C
***	MODULE	LUT_CMD
***	IDENT	14MR89
C
C Copyright Laser-Scan Laboratories Ltd., Cambridge, England
C
C Author M.W.S. Reid
C
C 	Created					MWSR    14-Mar-1989
C
C Deals with the SLOPES LUT command
C The LUT command acts in two ways either
C	LUT SLOPES filename
C	LUT ASPECT filename
C	LUT HEIGHT_DIFFERENCE filename
C	LUT SHADE filename
C    In these cases the lookup table isn't immediately set - but stored 
C    in variables for subsequent slope,aspect,hdiff,or shade display.
C or
C       LUT filename 
C    In this case the specified filename is immediately set with 
C    a call to LSG_SET_LUT. The Menu only contains this form of the
C    LUT command.
C
	IMPLICIT NONE
C
C Parameters
C
C Arguments
	LOGICAL		MCMD	! was command issued from menu
C
C Common Blocks
***	COMMON/LSL$CMNDTI:DTIHDR/
***	COMMON/HERE:SLPCMN/
C
	EXTERNAL	LUT_CMD_TABLE
	INTEGER*4	LUT_CMD_TABLE
C
C Functions
	INTEGER*4	RDCOMM
	LOGICAL		WAIT_INPUT
	INTEGER*4	LIB$FIND_FILE
	INTEGER*4	GETFILNAM
	LOGICAL		RDCHS
C
C Local Variables
	INTEGER*4	COMAND
	INTEGER*4	I
	CHARACTER*255	FILNAM
	INTEGER*4	FILLEN
	INTEGER*2	PTR
	INTEGER*4	OK
	CHARACTER*255	LINE
	INTEGER*4	IERR
	CHARACTER*1	CH
C
C menu command version
	IF(MCMD)THEN
	   IF(.NOT.WAIT_INPUT('Colour table name',.FALSE.,.TRUE.))
     &     GOTO 999
	   IF(.NOT.GRAPHICS)THEN
	      CALL WRITEF('%S Specifying command LUT ',EBELL)
	      CALL WRITEF('A graphics device is not selected')
	      GOTO 999
	   ENDIF
	   CALL LUTSET
	   GOTO 999
	ENDIF
C
	CALL DCPSAV(PTR)
	COMAND=RDCOMM(LUT_CMD_TABLE)	
	IF(COMAND.LE. 0 )THEN
C
C Its not a valid qualifier so assume its a filename
	   IF(.NOT.GRAPHICS)THEN
	      CALL WRITEF('%S Specifying command LUT ',EBELL)
	      CALL WRITEF('A graphics device is not selected')
	      GOTO 999
	   ENDIF
	   CALL DCPSET(PTR)
	   CALL LUTSET
	   GOTO 999
	ENDIF
C
C read the filename
C
	IF (RDCHS(CH)) THEN
	  CALL WRITEF('%S  LUT name missing',EBELL)
	  CALL BSLN
	  GOTO 999	  
	ENDIF
	CALL BSCH
C

	OK = GETFILNAM(
     &	FILNAM,FILLEN,'LSL$LOOKUP:SLOPES.DAT',.TRUE.)
C
	IF (.NOT. OK) THEN
	   CALL LSL_PUTMSG(OK)
	   GOTO 999
	ENDIF
C
C make sure that the file exists
	IERR=0
	OK = LIB$FIND_FILE(FILNAM,LINE,IERR,,,,0)
	IF(.NOT.OK) THEN
	   CALL WRITEF('%S specifying command LUT',EBELL)
	   CALL LSL_PUTMSG(OK)
	   GOTO 999
	ENDIF
C
C branch for various types	
	GOTO(100,200,300,400)COMAND	
C
100	SLOPE_LUT_NAME = FILNAM
	SLOPE_LUT_LEN = FILLEN
	GOTO 999
C
200	SHADE_LUT_NAME = FILNAM
	SHADE_LUT_LEN = FILLEN
	GOTO 999
C
300	HEIGHT_LUT_NAME= FILNAM
	HEIGHT_LUT_LEN = FILLEN
	GOTO 999
C
400	ASPECT_LUT_NAME = FILNAM
	ASPECT_LUT_LEN = FILLEN
	GOTO 999
C
999	RETURN
	END
