C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1989-04-12 11:05:54.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE SHOW_CMD(MCMD,CMDNO)
C
***	MODULE	SHOW_CMD
***	IDENT	12AP89
C
C Copyright Laser-Scan Laboratories Ltd., Cambridge, England
C
C Author M.W.S. Reid
C
C 	Created					MWSR    02-Mar-1989
C from original DRC code
C
C Deals with the SLOPES show 
C
	IMPLICIT NONE
C
C argument
	LOGICAL		MCMD	! true if command from menu
	INTEGER*4	CMDNO	! comand number if it was
C
C Common Blocks
***	COMMON/LSL$CMNDTI:DTIHDR/		
***	COMMON/HERE:SLPCMN/		
***	COMMON/HERE:TAB/		
C
	EXTERNAL	SHOW_CMD_TABLE
	INTEGER*4	SHOW_CMD_TABLE
C
C Function
	INTEGER*4	RDCOMM
C
C Local Variables
	INTEGER*4	COMAND
	INTEGER*4	I
	REAL		SUN		!sun position
C
	IF (MCMD) THEN
	   COMAND  = CMDNO
	ELSE
10	   COMAND=RDCOMM(SHOW_CMD_TABLE)	
	   IF(COMAND.LE.0)THEN
	      CALL WRITEF('%S Specifying command SHOW ',EBELL)
	      CALL WRITEF
     &      ('SHOW qualifiers are ANNOTATION, ASPECT, ENABLE, FILES, '//
     &      'HEIGHT_DIFFERENCE, SHADE or SLOPE') 
	      GOTO 130
	   ENDIF
	ENDIF
C
	GOTO (20,30,60,70,80,90,120)COMAND
C
C
C SHOW FILES
C	output what we know about the current DTI
20	IF(MCMD) CALL WRITEF('SLOPES> SHOW FILES')
	IF (.NOT. HADDTI) THEN
	  CALL WRITEF('DTI file not yet defined')  !nothing
	  GOTO 130
	ENDIF
C
	CALL DTI_PRINT_HEADER(DTICHAN,UNTYPE,HAD_ABSOLUTE,
     &  DTI_ORDER_CORNER(DTICHAN))
C
	IF (PLOT_DTI)THEN
	   CALL WRITEF('File %S selected for output',
     &     OUTPUT_FILENAME(:OUTPUT_FILENAME_LENGTH))
	ENDIF
	GOTO 130
C
C SHOW SLOPE
30	IF(MCMD) CALL WRITEF('SLOPES> SHOW SLOPE')
	CALL WRITEF(' ')
	CALL WRITEF('Gradient algorithm: %N',GRAD_TYPE)
	CALL WRITEF('Z limits          : %N to %N',HLOWER,HUPPER)
	CALL WRITEF('Z Scale           : %F0.4',ZSCALE)
	CALL WRITEF('Gradient range    : %N to %N',GLOWER,GUPPER)
	IF (HAD_PERCENT) THEN
	   CALL WRITEF('Gradient units    : Percentage Slope')
	ELSE
	   CALL WRITEF('Gradient units    : Degrees of Slope')
	ENDIF
	CALL WRITEF('Number of steps   : %N',NSTEP)
	CALL WRITEF('Look up table     : %S',
     &  SLOPE_LUT_NAME(1:SLOPE_LUT_LEN))
	DO 40 I=1,NSTEP
	  IF(MOD(I-1,10).EQ.0.OR.I.EQ.1)THEN
	    IF(I.GT.1)CALL TTWLIN
	    IF(I.EQ.1)THEN
	      CALL EXPAND('Step upper limits : ')
	    ELSE
	      CALL EXPAND('                  : ')
	    ENDIF
	  ENDIF
	  CALL APPEND('%I2 ',GSTEP(I))
40	CONTINUE
	CALL TTWLIN
C
	DO 50 I=1,NSTEP
	  IF(MOD(I-1,10).EQ.0.OR.I.EQ.1)THEN
	    IF(I.GT.1)CALL TTWLIN
	    IF(I.EQ.1)THEN
	      CALL EXPAND('Colour indices    : ')
	    ELSE
	      CALL EXPAND('                  : ')
	    ENDIF
	  ENDIF
	  CALL APPEND('%^W%I2 ',COLTAB(I+1))
50	CONTINUE
	CALL TTWLIN
C
	GOTO 130
C
C	SHOW information on SHADE
60	IF(MCMD) CALL WRITEF('SLOPES> SHOW SHADE')
	CALL WRITEF(' ')
	IF(SUNPOS.LT.180)THEN
	  SUN=SUNPOS+180.0
	ELSE
	  SUN=SUNPOS-180.0
	ENDIF	
	CALL WRITEF('Sun position   : %F0.3',SUN)
	CALL WRITEF('Sun angle      : %F0.3',90-SUNANG)
	CALL WRITEF('Reflectance map: %N',REFMAP)
	CALL WRITEF('Z Scale        : %F0.4',ZSCALE)
	CALL WRITEF('Look up table  : %S',
     &  SHADE_LUT_NAME(1:SHADE_LUT_LEN))
	GOTO 130
C
C SHOW ASPECT
70	IF(MCMD) CALL WRITEF('SLOPES> SHOW ASPECT')
	CALL WRITEF(' ')
	CALL WRITEF('Z limits          : %N to %N',HLOWER,HUPPER)
	CALL WRITEF('Angular step      : %N',ASPSTE)
	CALL WRITEF('Look up table     : %S',
     &  ASPECT_LUT_NAME(1:ASPECT_LUT_LEN))
	IF(GREY_ASPECT)THEN
	  CALL WRITEF('Aspect greyscale image selected')
	ELSE
	  CALL WRITEF('Aspect colour image selected')
	ENDIF
C
	GOTO 130
C	
C-----------------------------------------------------------------------
C
C SHOW ANNOTATION
80	IF(MCMD) CALL WRITEF('SLOPES> SHOW ANNOTATION')
	CALL WRITEF(' ')
	CALL WRITEF('Current label  setting:')
	CALL WRITEF('Position: X %N Y %N  Size %N',LABX,LABY,LABSIZ)
	CALL WRITEF('Current legend setting:')
	CALL WRITEF('Position: X %N Y %N  ',LEGX,LEGY)
	GOTO 130
C----------------------------------------------------------------------
C
C SHOW HEIGHT_DIFFERENCE settings
90	IF(MCMD) CALL WRITEF('SLOPES> SHOW HEIGHT_DIFFERENCE')
	CALL WRITEF(' ')
	IF(AVERAGE_HDIFF)THEN
	  CALL WRITEF
     &    ('Calculation of average height difference selected')
	ELSE
	  CALL WRITEF
     &    ('Calculation of maximum height difference selected')
	ENDIF
C
	CALL WRITEF('Z limits          : %N to %N',HLOWER,HUPPER)
	CALL WRITEF('Value range       : %N to %N',GLOWER,GUPPER)
	CALL WRITEF('Z Scale           : %F0.4',ZSCALE)
	CALL WRITEF('Number of steps   : %N',NSTEP)
	CALL WRITEF('Look up table     : %S',
     &  HEIGHT_LUT_NAME(1:HEIGHT_LUT_LEN))
	DO 100 I=1,NSTEP
	  IF(MOD(I-1,10).EQ.0.OR.I.EQ.1)THEN
	    IF(I.GT.1)CALL TTWLIN
	    IF(I.EQ.1)THEN
	      CALL EXPAND('Step upper limits : ')
	    ELSE
	      CALL EXPAND('                  : ')
	    ENDIF
	  ENDIF
	  CALL APPEND('%I2 ',GSTEP(I))
100	CONTINUE
	CALL TTWLIN
C
	DO 110 I=1,NSTEP
	  IF(MOD(I-1,10).EQ.0.OR.I.EQ.1)THEN
	    IF(I.GT.1)CALL TTWLIN
	    IF(I.EQ.1)THEN
	      CALL EXPAND('Colour indices    : ')
	    ELSE
	      CALL EXPAND('                  : ')
	    ENDIF
	  ENDIF
	  CALL APPEND('%^W%I2 ',COLTAB(I+1))
110	CONTINUE
	CALL TTWLIN
	GOTO 130
C
C SHOW ENABLE
120     IF(MCMD) CALL WRITEF('SLOPES> SHOW ENABLE')
	CALL WRITEF(' ')
	CALL WRITEF('Current status:')
	CALL WRITEF(' ')
	CALL EXPAND('ABSOLUTE       ')
	IF(HAD_ABSOLUTE)THEN
	  CALL APPEND('   On       ')
	ELSE
	  CALL APPEND('  Off       ')
	ENDIF
	CALL APPEND('AVERAGE        ')
	IF(AVERAGE_HDIFF)THEN
	  CALL APPEND('   On       ')
	ELSE
	  CALL APPEND('  Off       ')
	ENDIF
	CALL APPEND('CLASSIFY       ')
	IF(CLASSIFY)THEN
	  CALL APPEND('   On       ')
	ELSE
	  CALL APPEND('  Off       ')
	ENDIF
	CALL TTWLIN
C
	CALL EXPAND('CLEAR          ')
	IF(CLEAR)THEN
	  CALL APPEND('   On       ')
	ELSE
	  CALL APPEND('  Off       ')
	ENDIF
	CALL APPEND('GRAPHICS       ')
	IF(GRAPHICS)THEN
	  CALL APPEND('   On       ')
	ELSE
	  CALL APPEND('  Off       ')
	ENDIF
	CALL APPEND('GREYSCALE      ')
	IF(GREY_ASPECT)THEN
	  CALL APPEND('   On       ')
	ELSE
	  CALL APPEND('  Off       ')
	ENDIF
	CALL TTWLIN
C
	CALL EXPAND('LEGEND         ')
	IF(PLOT_LEG)THEN
	  CALL APPEND('   On       ')
	ELSE
	  CALL APPEND('  Off       ')
	ENDIF
	CALL APPEND('NULL_BORDER    ')
	IF(NULL_EDGE)THEN
	  CALL APPEND('   On       ')
	ELSE
	  CALL APPEND('  Off       ')
	ENDIF
	CALL APPEND('PERCENT        ')
	IF(HAD_PERCENT)THEN
	  CALL APPEND('   On       ')
	ELSE
	  CALL APPEND('  Off       ')
	ENDIF
	CALL TTWLIN
C
	CALL EXPAND('RECENTRE       ')
	IF(RECENT)THEN
	  CALL APPEND('   On       ')
	ELSE
	  CALL APPEND('  Off       ')
	ENDIF
	CALL APPEND('TABLE          ')
	IF(TABLE)THEN
	  CALL APPEND('   On       ')
	ELSE
	  CALL APPEND('  Off       ')
	ENDIF
	CALL APPEND('TEXT           ')
	IF(TEXTON)THEN
	  CALL APPEND('   On       ')
	ELSE
	  CALL APPEND('  Off       ')
	ENDIF
	CALL TTWLIN
	GOTO 130
C
130	RETURN
	END
