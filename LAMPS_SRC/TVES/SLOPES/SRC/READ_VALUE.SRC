	REAL*4	FUNCTION READ_VALUE(XPOSN,YPOSN,IS_NULL)
C
***	MODULE	READ_VALUE
***	IDENT	08MR89
C
C Copyright Laser-Scan Laboratories Ltd., Cambridge, England
C
C Author M.W.S. Reid
C
C 	Created					MWSR    07-Mar-1989
C
C reads a value from the input DTI file at the specified position
C 
C
	IMPLICIT NONE
C
C Parameters
***	PARAMETER/LSL$CMNDTI:DTIPAR/
C
C Arguments
	INTEGER*4	XPOSN		! IN - X position
	INTEGER*4	YPOSN		! IN - Y position
	LOGICAL		IS_NULL		! OUT - T if null value
C
C Common Blocks
***	COMMON/HERE:SLPCMN/
***	COMMON/LSL$CMNDTI:DTIHDR/
C
C Functions
	INTEGER	DTI_READ_BYTE_DATA
	INTEGER	DTI_READ_WORD_DATA
	INTEGER	DTI_READ_LONG_DATA
	INTEGER	DTI_READ_REAL_DATA
C
C Local Variables
	INTEGER*4	RET
	BYTE		ABYTE
	REAL		AREAL
	INTEGER		ALONG
	INTEGER*2	AWORD
	INTEGER*2	UNSIGNED_ABYTE
	EQUIVALENCE(UNSIGNED_ABYTE,ABYTE) ! to treat byte values
C
	IS_NULL  = .FALSE.
C
C deal with each datatype in turn
	IF (DATA_TYPE(DTICHAN).EQ.DATA_BYTE) THEN
	   RET=DTI_READ_BYTE_DATA(DTICHAN,ABYTE,XPOSN,YPOSN)
	   IF (.NOT.RET) THEN
	      CALL LSL_PUTMSG(RET)
	   ENDIF
	   READ_VALUE=UNSIGNED_ABYTE !convert byte to real
	ELSEIF (DATA_TYPE(DTICHAN).EQ.DATA_WORD) THEN
	   RET=DTI_READ_WORD_DATA(DTICHAN,AWORD,XPOSN,YPOSN)
	   IF (.NOT.RET) THEN
	      CALL LSL_PUTMSG(RET)
	   ENDIF
C
C is this a null value ?
	   IF(AWORD.EQ.DTI_NULL_WORD) IS_NULL = .TRUE.
C			     
	      READ_VALUE=AWORD	! convert word to real
C
	ELSEIF (DATA_TYPE(DTICHAN).EQ.DATA_LONG) THEN
	   RET=DTI_READ_LONG_DATA(DTICHAN,ALONG,XPOSN,YPOSN)
	   IF (.NOT.RET) THEN
	      CALL LSL_PUTMSG(RET)
	   ENDIF
C
C is this a null value ?
	   IF(ALONG.EQ.DTI_NULL_LONG) IS_NULL =.TRUE.
C
	   READ_VALUE=ALONG	! convert long to real
	ELSEIF (DATA_TYPE(DTICHAN).EQ.DATA_REAL) THEN
	   RET=DTI_READ_REAL_DATA(DTICHAN,AREAL,XPOSN,YPOSN)
	   IF (.NOT.RET) THEN
	      CALL LSL_PUTMSG(RET)
	   ENDIF
C
C is this a null value ?
           IF(AREAL.EQ.DTI_NULL_REAL) IS_NULL = .TRUE.
	   READ_VALUE = AREAL
	ENDIF
C
	RETURN
	END
