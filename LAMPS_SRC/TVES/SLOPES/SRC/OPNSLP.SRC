C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1991-08-30 17:29:50.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL FUNCTION OPNSLP(XSIZE,YSIZE)
C
***	IDENT	30MR89
***	MODULE	OPNSLP
C
C	Copyright : Laser-Scan Laboratories, Cambridge, England
C	Author    : D R Catlow
C	
C	Modifications:
C	Modify for DTILIB				MWSR   06-Mar-89
C	Parsing of filename removed                     DRC    08-Sep-88
C	To use LSLLIB                                   DRC    22-Jan-87
C	To create a LSLA type file                      DRC    19-Aug-88
C
C	Routine for SLOPES to create an ouput intervisibilty matrix
C	of dimensions XSIZE by YSIZE.
C	Filename is parsed and filled in from default LSL$DTI:.VIS;
C
C	A MIKE type DTI file is created at present and the
C	header of the file contains information on matrix extent,
C	matrix grid size.
C
	IMPLICIT NONE
C
C parameters
***	PARAMETER/LSL$CMNDTI:DTIPAR/
***	PARAMETER/LSL$CMNDTI:DTILIBMSG/
C
C commons
***	COMMON/LSL$CMNDTI:DTIPROJ/
***	COMMON/LSL$CMNDTI:DTIHDR/
C
***	COMMON/HERE:SLPCMN/
C
C arguments
	INTEGER*4	XSIZE		! number of columns
	INTEGER*4	YSIZE		! number of rows
C workspace
C
	INTEGER*4	IERR
	INTEGER*4	ERRCOD
	BYTE		CH
	INTEGER*4	RET
	INTEGER*4	HEADSIZE
C
C functions
	INTEGER*4	DTI_CLOSE
	INTEGER*4	DTI_CREATE
	INTEGER*4	DTI_COPY_HEADER
C
C
C>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
C
	OPNSLP=.TRUE.		! Assume successful
C
	IF (HADOUT) THEN		!
	   IERR = DTI_CLOSE(PLOTCHAN,.TRUE.,.FALSE.,ERRCOD)
	   IF(.NOT. IERR) THEN
	      CALL LSL_PUTMSG(IERR)
	      IF(RET.EQ. DTI__SYSERR) CALL LSL_PUTMSG(ERRCOD)
	   ENDIF
	ENDIF
C
C	Create the output file
C 
	IF(HAD_PROJ_RECORD(DTICHAN)) THEN
C
C only a non-default header size if had a projection record
	   HEADSIZE = DTIPROJ_RECORD_LENGTH + DEFAULT_LSLA_HEADER
           IERR= DTI_CREATE(PLOTCHAN,OUTPUT_FILENAME,
     &                      OUTPUT_FILENAME_LENGTH,
     &                      HEADER_TYPE(DTICHAN),
     &                      HEADSIZE,
     &                      OUTPUT_DATA_TYPE,
     &                       XSIZE,YSIZE,ERRCOD)
	ELSE
           IERR= DTI_CREATE(PLOTCHAN,OUTPUT_FILENAME,
     &                      OUTPUT_FILENAME_LENGTH,
     &                      HEADER_TYPE(DTICHAN),
     &                      ,
     &                      OUTPUT_DATA_TYPE,
     &                       XSIZE,YSIZE,ERRCOD)
	ENDIF
C
	IF(.NOT.IERR)THEN
	   CALL LSL_PUTMSG(IERR) 
	   IF (IERR .EQ. DTI__SYSERR) CALL LSL_PUTMSG(ERRCOD)
	   OPNSLP = .FALSE.
	   GOTO 999
	ENDIF
C
C now copy the header values from the input to the output file
C
	IERR = DTI_COPY_HEADER(DTICHAN,PLOTCHAN,ERRCOD)
	IF(.NOT.IERR)THEN
	   IF(IERR .NE. DTI__HEADMISMATCH) THEN
	      CALL LSL_PUTMSG(IERR) 
	      IF (IERR .EQ. DTI__SYSERR) CALL LSL_PUTMSG(ERRCOD)
	      OPNSLP = .FALSE.
	      GOTO 999
	   ENDIF
	ENDIF
C
C modify the header values to account for window settings
	CALL MODHEAD
C
	HADOUT = .TRUE.
	CALL WRITEF('File %S opened for output',
     &  	OUTPUT_FILENAME(1:OUTPUT_FILENAME_LENGTH))
C
	CALL INIMAT(PLOTCHAN)
C
999	RETURN
	END
C
