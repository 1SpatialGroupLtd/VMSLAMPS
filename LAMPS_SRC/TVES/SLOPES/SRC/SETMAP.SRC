C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1989-03-14 17:44:36.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE SET_MAP
C
***	IDENT	14MR89
***	MODULE	SET_MAP
C
C	Copyright : Laser-Scan Laboratories, Cambridge, England
C
C	Author	  : Andrew Morris
C	Created   : Jan 1985
C
	IMPLICIT NONE
C
***	COMMON/LSL$CMNDTI:DTIHDR/
***	COMMON/HERE:TAB/
***	COMMON/HERE:TRANS/
***	COMMON/HERE:SLPCMN/
C
C workspace
	INTEGER		SW(2),NW(2),SE(2),NE(2)! map corner table coords
	REAL		X_EW,Y_EW	! east to west vector
	REAL		X_NS,Y_NS	! north to south vector
	REAL		L_EW 		! east to west length
	REAL		L_NS 		! north to south length
	REAL		MYCOS,MYSIN	! a cosine and a sine
	REAL		FX,FY		! X and Y scale factors
C
C
C functions
	LOGICAL		GET_TAB_COORDS	! get a point in table coords
C
C:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
C Prompts for map NW,SW, and SE (and NE) corners to set up TAB_DTI
C
C NE corner is not used -it is accepted only for compatability purposes
C
C Will not accept a map which is more than 2 degrees off rectangular
C:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
C
	MAP_SET = .FALSE.		! unset any previous map
C
10	CALL WRITEF('%S',BELL)
	IF(.NOT.GET_TAB_COORDS(NW(1),NW(2),'Map NW corner')) GOTO 20
	CALL WRITEF('%S',BELL)
 	IF(.NOT.GET_TAB_COORDS(SW(1),SW(2),'Map SW corner')) GOTO 20
	CALL WRITEF('%S',BELL)
	IF(.NOT.GET_TAB_COORDS(SE(1),SE(2),'Map SE corner')) GOTO 20
	CALL WRITEF('%S',BELL)
	IF(.NOT.GET_TAB_COORDS(NE(1),NE(2),'Map NE corner')) GOTO 20
C
	X_EW = SE(1)-SW(1)
	Y_EW = SE(2)-SW(2)
	X_NS = NW(1)-SW(1)
	Y_NS = NW(2)-SW(2)
	L_EW = SQRT(X_EW**2+Y_EW**2)
	L_NS = SQRT(X_NS**2+Y_NS**2)
C
	IF (ABS(X_EW*Y_NS-Y_EW*X_NS).LT.
     +	    L_EW*L_NS*SIN(88*2*3.1459265/360)) THEN
	  CALL WRITEF('%S Setting up MAP',EBELL)
	  CALL WRITEF('Badly digitised corner points; try again')
	  GOTO 10
	END IF
C
C set up TAB_DTI
	MYCOS = X_EW/L_EW
	MYSIN = -Y_EW/L_EW
	FX = X_EXTENT(DTICHAN)/L_EW
	FY = Y_EXTENT(DTICHAN)/L_NS
C
	TAB_DTI(1,1) = FX*MYCOS
	TAB_DTI(1,2) = -FX*MYSIN
	TAB_DTI(1,3) = FX*(-SW(1)*MYCOS+SW(2)*MYSIN)+1
	TAB_DTI(2,1) = FY*MYSIN
	TAB_DTI(2,2) = FY*MYCOS
	TAB_DTI(2,3) = FY*(-SW(1)*MYSIN-SW(2)*MYCOS)+1
	TAB_DTI(3,1) = 0
	TAB_DTI(3,2) = 0
	TAB_DTI(3,3) = 1
C
	MAP_SET = .TRUE.		! map set successfully
C
C	
20	RETURN
C
	END
