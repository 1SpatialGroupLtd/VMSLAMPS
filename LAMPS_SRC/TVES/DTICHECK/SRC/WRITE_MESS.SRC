	LOGICAL FUNCTION WRITE_MESS(MESSAGE,MESSAGE_LEN,
     &			START_COLUMN,START_ROW,
     &			END_COLUMN,END_ROW,
     &			MODE)
C
***	MODULE	WRITE_MESS
**	IDENT	16JA89
C
C	Copyright (C), Laser-Scan Laboratories Ltd., Cambridge, England
C
CMOD	Output all types of units correctly	       MWSR 09-Jan-1989
C	Created						ALB 28-Jul-1988
C
C DTICHECK function to output messages to the screen
C
C Function returns .TRUE. if all is well.
C
	IMPLICIT NONE
C
C Parameters:
C
	INCLUDE	'LSL$DTMCREATESYS:MESPAR.PAR'
	INCLUDE	'LSL$CMNDTICHECK:PARAMS.PAR'
C
C Common:
C
	INCLUDE	'LSL$CMNLSL:CMDCOM.CMN'
	INCLUDE	'LSL$CMNDTI:DTIHDR.CMN'
	INCLUDE	'LSL$CMNDTI:DTIPROJ.CMN'
	INCLUDE	'LSL$CMNDTICHECK:COMMAND.CMN'
	INCLUDE	'LSL$CMNDTICHECK:FILES.CMN'
C
C Arguments
C
	CHARACTER*80	MESSAGE		! message to output
	INTEGER		MESSAGE_LEN	! length of message
	INTEGER		START_COLUMN	! Start column
	INTEGER		START_ROW	! Start row
	INTEGER		END_COLUMN	! End column
	INTEGER		END_ROW		! End row
	INTEGER		MODE		! used to control type of output mess
C
C locals
	REAL*4		SWX,SWY
	INTEGER*4		DEGR		!degree part of latlong
	INTEGER*4		MINU		!minute part of latlong
	INTEGER*4		SECO		!seconds part of latlong
	LOGICAL			NEGA		!neg latlong value
C
C -----------------------------------------------------------------------------
C
	WRITE_MESS = .TRUE.		! assume success
C
C -----------------------------------------------------------------------------
C
C output according to units
	   GOTO(100,200,300,400,500)UNITS
C
C matrix units
100	   IF(MODE .NE. SINGLE_POINT)THEN	   
	      CALL WRITEF ('%S X: %I0 Y: %I0 and X: %I0 Y: %I0',
     &	      MESSAGE(1:MESSAGE_LEN),START_COLUMN,START_ROW,
     &	      END_COLUMN,END_ROW)
	   ELSE
	      CALL WRITEF ('%S X: %I0 Y: %I0',
     &	      MESSAGE(1:MESSAGE_LEN),START_COLUMN,START_ROW)
	   ENDIF
	   GOTO 999
C
C metres
200	   IF(HAD_ABSOLUTE)THEN
	      SWX=X_OFFSET(1)
	      SWY=Y_OFFSET(1)
	   ELSE
	      SWX=0.0
	      SWY=0.0
	   ENDIF
C
	   IF(MODE.EQ.SINGLE_POINT)THEN
	      CALL WRITEF ('%S X: %F0 Y: %F0',
     &	      MESSAGE(1:MESSAGE_LEN),
     &        SWX+((START_COLUMN-1)*X_GRID(1)),
     &        SWY+((START_ROW-1)*Y_GRID(1)))
	   ELSE
	      CALL WRITEF ('%S X: %F0 Y: %F0 and X: %F0 Y: %F0',
     &	      MESSAGE(1:MESSAGE_LEN),
     &        SWX+((START_COLUMN-1)*X_GRID(1)),
     &        SWY+((START_ROW-1)*Y_GRID(1)),
     &        SWX+((END_COLUMN-1)*X_GRID(1)),
     &        SWY+((END_ROW-1)*Y_GRID(1)))
	   ENDIF
	   GOTO 999
C
C 
C seconds
300	   IF(MODE.EQ.SINGLE_POINT) THEN
	     CALL WRITEF('%S  Lat:  %I10  Long:  %I10',
     &	      MESSAGE(1:MESSAGE_LEN),
     &       (LATREC(1,1)+(START_ROW-1)*LATINT(1))/10,
     &       (LONREC(1,1)+
     &       (START_COLUMN-1)*LONINT(1))/10)
	   ELSE
	     CALL WRITEF
     &       ('%S  Lat:  %I10  Long:  %I10 and Lat:  %I10 Long:  %I10',
     &	      MESSAGE(1:MESSAGE_LEN),
     &       (LATREC(1,1)+(START_ROW-1)*LATINT(1))/10,
     &       (LONREC(1,1)+
     &       (START_COLUMN-1)*LONINT(1))/10,
     &       (LATREC(1,1)+(END_ROW-1)*LATINT(1))/10,
     &       (LONREC(1,1)+(END_COLUMN-1)*LONINT(1))/10)
	   ENDIF
	   GOTO 999
C
C degrees
400	   CALL EXPAND('%S Lat:  ',MESSAGE(1:MESSAGE_LEN))
	   CALL DTI_CVTANG(LATREC(1,1)+
     &     ((START_ROW-1)*LATINT(1)),
     &	   NEGA,DEGR,MINU,SECO)
	   CALL APPEND('%P %I3 %P0%I2 %P0%I2',DEGR,MINU,SECO)
	   IF(NEGA)THEN
	      CALL APPEND('S  ')
	   ELSE
	      CALL APPEND('N  ')
	   ENDIF
     	   CALL APPEND('Long:  ')
	   CALL DTI_CVTANG(LONREC(1,1)+
     &     ((START_COLUMN-1)*LONINT(1)),
     &	   NEGA,DEGR,MINU,SECO)
	   CALL APPEND('%P %I3 %P0%I2 %P0%I2',DEGR,MINU,SECO)
	   IF(NEGA)THEN
	      CALL APPEND('W  ')
	   ELSE
	      CALL APPEND('E  ')
	   ENDIF
	   IF (MODE .NE. SINGLE_POINT) THEN
	      CALL APPEND(' and Lat:  ')
	      CALL DTI_CVTANG(LATREC(1,1)+
     &        ((END_ROW-1)*LATINT(1)),
     &	      NEGA,DEGR,MINU,SECO)
	      CALL APPEND('%P %I3 %P0%I2 %P0%I2',DEGR,MINU,SECO)
	      IF(NEGA)THEN
	         CALL APPEND('S  ')
	      ELSE
	         CALL APPEND('N  ')
	      ENDIF
     	      CALL APPEND('Long:  ')
	      CALL DTI_CVTANG(LONREC(1,1)+
     &        ((END_COLUMN-1)*LONINT(1)),
     &	      NEGA,DEGR,MINU,SECO)
	      CALL APPEND('%P %I3 %P0%I2 %P0%I2',DEGR,MINU,SECO)
	      IF(NEGA)THEN
	         CALL APPEND('W  ')
	      ELSE
	         CALL APPEND('E  ')
	      ENDIF
	   ENDIF
	   CALL TTWLIN
	   GOTO 999
C
C projection units
500	   IF(HAD_ABSOLUTE)THEN
	      SWX=DTIPROJ_ORIGIN(1,1)
	      SWY=DTIPROJ_ORIGIN(2,1)
	   ELSE
	      SWX=0.0
	      SWY=0.0
	   ENDIF
C
	   IF(MODE.EQ.SINGLE_POINT)THEN
	      CALL WRITEF ('%S X:%F0 Y:%F0',
     &	      MESSAGE(1:MESSAGE_LEN),
     &        SWX+((START_COLUMN-1)*DTIPROJ_SAMPLE(1,1)),
     &        SWY+((START_ROW-1)*DTIPROJ_SAMPLE(2,1)))
	   ELSE
	      CALL WRITEF ('%S X:%F0 Y:%F0 and X:%F0 Y:%F0',
     &	      MESSAGE(1:MESSAGE_LEN),
     &        SWX+((START_COLUMN-1)*DTIPROJ_SAMPLE(1,1)),
     &        SWY+((START_ROW-1)*DTIPROJ_SAMPLE(2,1)),
     &        SWX+((END_COLUMN-1)*DTIPROJ_SAMPLE(1,1)),
     &        SWY+((END_ROW-1)*DTIPROJ_SAMPLE(2,1)))
	   ENDIF
	   GOTO 999
C
999	RETURN
	END
