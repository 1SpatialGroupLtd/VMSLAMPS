C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1989-01-12 17:00:08.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE SETUP_IFF(DTICHAN)
C
***	MODULE	SETUP_IFF
***	IDENT	12JA89
C
C Copyright Laser-Scan Laboratories Ltd., Cambridge, England
C
C Author M.W.S. Reid
C
C 	Created					MWSR    09-Jan-1989
C
C sets up IFF header
C what goes in the IFF file depends on the type of DTI file and
C its header
C
	IMPLICIT NONE
C
C Parameters
C
C Arguments
	INTEGER*4	DTICHAN
C
C Common Blocks
	INCLUDE 'LSL$CMNDTICHECK:PARAMS.PAR'
	INCLUDE 'LSL$CMNDTI:DTIHDR.CMN'
	INCLUDE 'LSL$CMNDTI:DTIPROJ.CMN'
	INCLUDE 'LSL$CMNIFF:MD2DES.CMN'
	INCLUDE 'LSL$CMNIFF:MHDEF.CMN'
	INCLUDE 'LSL$CMNIFF:IFFHAN.CMN'
	INCLUDE 'LSL$CMNDTICHECK:COMMAND.CMN'
	INCLUDE 'LSL$CMNDTICHECK:FILES.CMN'
C
C Functions
C
C Local Variables
	INTEGER*4	I
	REAL		RANGE(4)
	REAL		CFT(10,2)
	REAL		CPARRY(4,4)
	INTEGER*4	WIN_XRANGE
	INTEGER*4	WIN_YRANGE
C
C set up the range and corner points first - they vary according to the
C plot units
C work out the range from the window
	WIN_XRANGE = DTI_WINDOW_NEX(DTICHAN)-DTI_WINDOW_SWX(DTICHAN)
	WIN_YRANGE = DTI_WINDOW_NEY(DTICHAN)-DTI_WINDOW_SWY(DTICHAN)
	GOTO (10,20,30,30,50)PLOT_UNITS
C
C matrix units
10	RANGE(1) = -0.5
	RANGE(2) = WIN_XRANGE+0.5
	RANGE(3) = -0.5
	RANGE(4) = WIN_YRANGE+0.5
	GOTO 60  
C
C metres
20	RANGE(1) = -0.5*(X_GRID(DTICHAN))
	RANGE(2) = X_GRID(DTICHAN) * (WIN_XRANGE+0.5) 
	RANGE(3) = -0.5*(Y_GRID(DTICHAN))
	RANGE(4) = Y_GRID(DTICHAN) * (WIN_YRANGE+0.5)
	GOTO 60
C
C seconds
30	RANGE(1) = -0.5*(LONINT(DTICHAN))
	RANGE(2) = LONINT(DTICHAN) * (WIN_XRANGE+0.5) 
	RANGE(3) = -0.5*(LATINT(DTICHAN))
	RANGE(4) = LATINT(DTICHAN) * (WIN_YRANGE+0.5) 
	GOTO 60
C
C projection units
50	RANGE(1) = -0.5*(DTIPROJ_SAMPLE(1,DTICHAN))
	RANGE(2) = DTIPROJ_SAMPLE(1,DTICHAN) * (WIN_XRANGE+0.5) 
	RANGE(3) = -0.5*(DTIPROJ_SAMPLE(2,DTICHAN))
	RANGE(4) = DTIPROJ_SAMPLE(2,DTICHAN) * (WIN_YRANGE+0.5)
C
60	CONTINUE
C
C setup the control points
	CPARRY(1,1) = RANGE(1)
	CPARRY(2,1) = RANGE(4)
	CPARRY(1,2) = RANGE(1)
	CPARRY(2,2) = RANGE(3)
	CPARRY(1,3) = RANGE(2)
	CPARRY(2,3) = RANGE(3)
	CPARRY(1,4) = RANGE(2)
	CPARRY(2,4) = RANGE(4)
C 
C setup the map descriptor
	DO 70 I = 2,MD2LEN
	   MD2ARR(I) = 0
70	CONTINUE
C
C fill stuff from DTI DTI projection record if one is present
C into map descriptor variables
	IF(HAD_PROJ_RECORD(1)) THEN
	   MD2LOC(1) = DTIPROJ_ORIGIN(1,DTICHAN)+
     &     DTIPROJ_SAMPLE(1,DTICHAN)*(DTI_WINDOW_SWX(DTICHAN)-1)
	   MD2LOC(2) = DTIPROJ_ORIGIN(2,DTICHAN)+
     &     DTIPROJ_SAMPLE(2,DTICHAN)*(DTI_WINDOW_SWY(DTICHAN)-1)
	   MD2PRJ = DTIPROJ_PROJECTION(DTICHAN) 
	   MD2UNT = DTIPROJ_UNITS(DTICHAN)
	   MD2SPH = DTIPROJ_SPHEROID(DTICHAN)
	   MD2USP(1) = DTIPROJ_USER_SPHEROID(1,DTICHAN)
	   MD2USP(2) = DTIPROJ_USER_SPHEROID(2,DTICHAN)
	   DO 80 I = 1,15
	      MD2PAR(I) = DTIPROJ_PROJ_PARAMS(I,DTICHAN)
80	   CONTINUE
	ELSE
	   IF (PLOT_UNITS .EQ. 3 .OR. PLOT_UNITS .EQ. 4) THEN
	      MD2LOC(2) = LATREC(1,DTICHAN)+
     &        LATINT(DTICHAN)*(DTI_WINDOW_SWY(DTICHAN)-1)
	      MD2LOC(1) = LONREC(1,DTICHAN)+
     &        LONINT(DTICHAN)*(DTI_WINDOW_SWX(DTICHAN)-1)
	   ELSE
	      MD2LOC(1) = X_OFFSET(DTICHAN)+	      
     &        X_GRID(DTICHAN)*(DTI_WINDOW_SWX(DTICHAN)-1)
	      MD2LOC(2) = Y_OFFSET(DTICHAN)+	      
     &        Y_GRID(DTICHAN)*(DTI_WINDOW_SWY(DTICHAN)-1)
	   ENDIF
	ENDIF	
C
C put them all in the IFF file in the right order 
	CALL IFFSEL ( IFFLUN )
	CALL IFFRA  ( RANGE )
	CALL IFFHI
	CALL IFFMH  ( MHARR,  MHLEN )
	CALL IFFMD  ( MD2ARR, MD2LEN )
	CALL IFFNS  ('File created by DTICHECK')
	CALL IFFCC  ( CFT )
	CALL IFFCP  ( CPARRY )
C
	RETURN
	END
