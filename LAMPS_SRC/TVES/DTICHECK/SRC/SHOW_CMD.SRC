	LOGICAL FUNCTION SHOW_CMD()
C
***	MODULE	SHOW_CMD
***	IDENT	15FE89
C
C	Copyright (C), Laser-Scan Laboratories Ltd., Cambridge, England
C
CMOD	Make SHOW IFF work by using correct logical     DRC 15-FEB-1989
CMOD	SHOW command standardised		       MWSR 09-Jan-1989
C       Modified 					ALB 28-Jun-1988
C       Modified for DTI                                DJG 03-Mar-1988
C	Created						TJH 03-Nov-1987
C
C Function to show command status eg SHOW DEFAULTS.
C Function returns .TRUE. if all is well, .FALSE. if an error
C
	IMPLICIT NONE
C
C Parameters:
C
	INCLUDE 'LSL$DTMCREATESYS:MESPAR.PAR'
	INCLUDE 'LSL$CMNDTICHECK:PARAMS.PAR'
	INCLUDE 'LSL$CMNDTI:DTIPAR.PAR'
C
C Common blocks:
C
	INCLUDE 'LSL$CMNDTICHECK:COMMAND.CMN'
	INCLUDE 'LSL$CMNDTI:DTIHDR.CMN'
	INCLUDE 'LSL$CMNLSL:CMDCOM.CMN'
C
	INCLUDE 'LSL$CMNDTICHECK:FILES.CMN'
	INCLUDE 'LSL$CMNDTICHECK:IFCTRL.CMN'
	INCLUDE 'LSL$CMNDTICHECK:SMTCMN.CMN'
C
C W/s
C
	BYTE		CH	! for use with RDCHS
	INTEGER		CMD     ! decoded command number
	BYTE		BVAL		
	INTEGER*2	WVAL
	EQUIVALENCE(WVAL,BVAL)
C
C Function:
C
	INTEGER		RDCOMM
C
C Command table:
C
	EXTERNAL	SHOW_CMD_TABLE
	INTEGER		SHOW_CMD_TABLE
C
C ......................................................................
C
	SHOW_CMD=.TRUE.			! assume success
C
	NOMESS=.TRUE.			! turn off CMDLIB messages
	CALL WRITEF
	CMD=RDCOMM(SHOW_CMD_TABLE)	! get command
	CMD=CMD+1
C
C
	GOTO (
     &		10,			! error/nothing	- cmd=1
     &		20,			! enable	- cmd=2		
     &		30,			! files		- cmd=3
     &		40,			! null		- cmd=7
     &		50,			! settings	- cmd=8
     &		60			! slope		- cmd=8
     &			), CMD
C
C Command number out of range
C
	CALL WRITEF('%S Command not yet implemented',ERROR)
	SHOW_CMD=.FALSE.
	GOTO 110
C
C ......................................................................
C SHOW 
C
10	CALL WRITEF
	CALL WRITEF('%S Specifying command SHOW',ERROR)
	CALL WRITEF
	CALL WRITEF('Available SHOW command qualifiers are:')
	CALL WRITEF
	CALL WRITEF(
     &		'ENABLE     FILES         NULL        SETTINGS')
	CALL WRITEF(
     &		'SLOPE')
	GOTO 110
C
C ......................................................................
C SHOW ENABLE
C
20	CALL WRITEF
	CALL WRITEF('Current status:')
	CALL WRITEF(' ')
	CALL EXPAND('ABSOLUTE       ')
	IF(HAD_ABSOLUTE)THEN
	  CALL APPEND('   On       ')
	ELSE
	  CALL APPEND('  Off       ')
	ENDIF
	CALL APPEND('DIAGNOSTICS    ')
	IF(HAD_DIAG)THEN
	  CALL APPEND('   On       ')
	ELSE
	  CALL APPEND('  Off       ')
	ENDIF
	CALL APPEND('MINUS          ')
	IF(MINUS)THEN
	  CALL APPEND('   On       ')
	ELSE
	  CALL APPEND('  Off       ')
	ENDIF
	CALL TTWLIN
C
	CALL EXPAND('NULL           ')
	IF(NULL)THEN
	  CALL APPEND('   On       ')
	ELSE
	  CALL APPEND('  Off       ')
	ENDIF
	CALL APPEND('PME            ')
	IF(PMEING)THEN
	  CALL APPEND('   On       ')
	ELSE
	  CALL APPEND('  Off       ')
	ENDIF
	CALL APPEND('SLOPE          ')
	IF(SLOPE)THEN
	  CALL APPEND('   On       ')
	ELSE
	  CALL APPEND('  Off       ')
	ENDIF
	CALL TTWLIN
C
	CALL EXPAND('ZERO           ')
	IF(ZERO)THEN
	  CALL APPEND('   On       ')
	ELSE
	  CALL APPEND('  Off       ')
	ENDIF
	CALL TTWLIN
	GOTO 110
C
C ......................................................................
C FILES
30	IF (DTIOPN) THEN
	   CALL DTI_PRINT_HEADER(DTILUN,UNITS,HAD_ABSOLUTE)
	ELSE
	   CALL WRITEF('DTI input file not yet specified')
	ENDIF
C
	IF (HAD_IFF) THEN
	   CALL WRITEF('IFF file %S selected for output',
     &				IFFFILE(:IFFLEN))
	ELSE
	   CALL WRITEF('IFF output file not yet specified')
	ENDIF
C
	IF (LITES2OPN) THEN
	   CALL WRITEF('Lites2 command file %S selected for output',
     &				LITES2FILE(:LITES2LEN))
	ELSE
	   CALL WRITEF('Lites2 output command file not yet specified')
	ENDIF
C
	IF (ROVEROPN) THEN
	   CALL WRITEF('Rover command file %S selected for output',
     &				ROVERFILE(:ROVERLEN))
	ELSE
	   CALL WRITEF('Rover output command file not yet specified')
	ENDIF
C
	GOTO 110
C
C ......................................................................
C SHOW NULL
C
40	CONTINUE
	IF(DATA_TYPE(1).EQ.DATA_BYTE) THEN
	  BVAL = NULL_BYTE_VAL
	  CALL WRITEF('Current null byte value is %^W%I',
     & 	  WVAL)
	ELSEIF(DATA_TYPE(1).EQ.DATA_WORD) THEN
	   CALL WRITEF('Null value is %^W%I',NULL_WORD_VAL)
	ELSEIF(DATA_TYPE(1).EQ.DATA_LONG) THEN
	   CALL WRITEF('Null value is %I',NULL_LONG_VAL)
	ELSEIF(DATA_TYPE(1).EQ.DATA_REAL) THEN
	   CALL WRITEF('Null value is %E',NULL_REAL_VAL)
	ENDIF
	GOTO 110
C
C ......................................................................
C SETTINGS
C
50	CALL WRITEF(' ')
	CALL WRITEF('Current Settings:')
	CALL WRITEF
	CALL EXPAND('LAYER        ')
	CALL APPEND('%^W%I5       ',LAYER)
	CALL APPEND('MINUS_FC     ')
	CALL APPEND('%^W%I5       ',MINUS_FC)
	CALL APPEND('NULL_FC      ')
	CALL APPEND('%^W%I5       ',NULL_FC)
	CALL TTWLIN
	CALL WRITEF
	CALL EXPAND('SLOPE_FC     ')
	CALL APPEND('%^W%I5       ',SLOPE_FC)
	CALL APPEND('ZERO_FC      ')
	CALL APPEND('%^W%I5       ',ZERO_FC)
	CALL TTWLIN
C
	GOTO 110
C
C ......................................................................
C SHOW SLOPE
C
60      CALL WRITEF ('Slope value is %F13.3',SLOPE_VAL)
	GOTO 110
C
C ......................................................................
C
110	CALL WRITEF
	NOMESS=.FALSE.			! restore CMDLIB error reporting
	RETURN
	END
