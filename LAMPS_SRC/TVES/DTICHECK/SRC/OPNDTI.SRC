	LOGICAL FUNCTION OPNDTI()
C
***	MODULE	OPNDTI
***	IDENT	10JA89
C
C Copyright Laser-Scan Laboratories Limited, Cambridge, England.
C
CMOD use DTILIB default null values		       MWSR 10-Jan-1989
CMOD call to DTI_UNITS				       MWSR 09-Jan-1988
CMOD don't prompt for origin offsets		       MWSR 09-Jan-1989
C Modified   Parameter DTI_DTED replaced by DTI_TED4    DRC 18-Aug-1988
C Modified for DTICHECK                                 DJG 03-Mar-1988
C Created from Dave Meaders non-DTILIB OPENDTI		TJH 14-Oct-1987
C
C Opens the DTI file, and sets everything up ready for us to read
C the data.
C
C The function value is .TRUE. if we succeed.
C
	IMPLICIT NONE
C
C
C Parameters
C
	INCLUDE 'LSL$DTMCREATESYS:MESPAR.PAR'
	INCLUDE 'LSL$CMNDTICHECK:PARAMS.PAR'
	INCLUDE 'LSL$CMNDTI:DTIPAR.PAR'
	INCLUDE 'LSL$CMNDTI:DTIDEF.PAR'
C
C Common
C
	INCLUDE 'LSL$CMNDTICHECK:COMMAND.CMN'
	INCLUDE 'LSL$CMNDTICHECK:FILES.CMN'
	INCLUDE 'LSL$CMNDTI:DTIHDR.CMN'
	INCLUDE 'LSL$CMNLSL:CMDCOM.CMN'
	INCLUDE 'LSL$CMNLSL:TXTC.CMN'
C
C W/s
C
	LOGICAL	   IERR,OK		! error returns
	REAL	   LLDEGS(2)		! 2 lat. long. values
	REAL	   FIVEP		! 5% of max DTI range
	INTEGER*4  RETVAL		! return code
C
C Functions
C
	LOGICAL	  DTI_UNITS		! set up default units
	LOGICAL	  DTI_OPEN		! open/read header of DTI file
	LOGICAL	  DTI_PRINT_HEADER	! print DTI header
	LOGICAL	  FLRSTR		! read record from file
	LOGICAL	  REALIN		! reads real numbers
	LOGICAL	  RDREAL		! reads a lat. lon. coordinate
	LOGICAL	  READLL		! reads a lat. lon. coordinate
	LOGICAL	  TTRSTR		! read from tt:
C
C ......................................................................
C
	OPNDTI=.TRUE.			! assume success
C
C Try to open file.
C
	OK=DTI_OPEN(DTILUN,DTIFILE,DTILEN,.FALSE.,IERR)
	IF (OK) THEN
	   CALL WRITEF('DTI file %S opened for read',DTIFILE(:DTILEN))
	   DTIOPN=.TRUE.
	ELSE
	   CALL WRITEF('%S Specifying command FILEIN',ERROR)
	   CALL WRITEF('Failed while opening DTI file %S for input',
     &		DTIFILE(:DTILEN))
	   CALL LSL_PUTMSG(OK)
	   CALL LSL_ADDMSG(IERR)
	   GOTO 40
	ENDIF
C
C set null value depending on data type of first input DTI file
C
	IF(DATA_TYPE(1).EQ.DATA_BYTE) THEN
	   NULL_BYTE_VAL = DTI_NULL_BYTE
	ELSEIF(DATA_TYPE(1).EQ.DATA_WORD) THEN
	   NULL_WORD_VAL = DTI_NULL_WORD
	ELSEIF(DATA_TYPE(1).EQ.DATA_LONG) THEN
	   NULL_LONG_VAL = DTI_NULL_LONG
	ELSEIF (DATA_TYPE(1).EQ.DATA_REAL) THEN
	   NULL_REAL_VAL = DTI_NULL_REAL
	ELSE
	   CALL WRITEF('%S Specifying command FILEIN',ERROR)
	   CALL WRITEF
     &	   ('File %S data type %I0 invalid ',
     &	   DTIFILE(:DTILEN),DATA_TYPE(1))
	   CALL WRITEF
     &	   ('Only data types 1 2 3 or 4 allowed ')
	   GOTO 30
	ENDIF
C
C Set up default UNITS depending on file type
C
	UNITS = 0 
	RETVAL = DTI_UNITS(DTILUN,UNITS)
	IF(.NOT. RETVAL) THEN
	   CALL LSL_PUTMSG(RETVAL)
	   UNITS = UNITS_DTI
	ENDIF
C
C make the IFF plot units the same
	PLOT_UNITS = UNITS
C
C
C Transfer default window size to the DTI common block variables
C
	DTI_WINDOW_SWX(DTILUN) = 1
	DTI_WINDOW_SWY(DTILUN) = 1
	DTI_WINDOW_NEX(DTILUN) = X_EXTENT(DTILUN)	
	DTI_WINDOW_NEY(DTILUN) = Y_EXTENT(DTILUN)
C
C Report what we've done.
C
	OK=DTI_PRINT_HEADER(DTILUN,UNITS,HAD_ABSOLUTE)
	IF (.NOT.OK) THEN
	   CALL LSL_PUTMSG(OK)
	ENDIF
C
C Get percentage of DTI (x,y) range for MINGAP and LABEL_SIZE defaults
C
	CALL FIVE_PERCENT(FIVEP)
	IF (LABLSIZE.EQ.0.0) LABLSIZE=FIVEP/10.0
	IF (RMINGAP.EQ.0.0) RMINGAP=FIVEP*2.0
	GOTO 50
C
C If error close the DTI file
C
30	CALL DTI_CLOSE(DTILUN)	
	CALL WRITEF ('DTI file %S is now closed. Please respecify the'//
     &		     ' FILEIN command',DTIFILE(:DTILEN))
C
40	OPNDTI=.FALSE.
50	RETURN
	END
