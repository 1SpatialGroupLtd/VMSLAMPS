C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1988-07-04 17:43:20.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL FUNCTION NULL_CMD()
C
***	MODULE NULL_CMD
***	IDENT  04JL88
C
C	Copyright (C), Laser-Scan Laboratories Ltd., Cambridge, England
C
C Modified NULL_CMD in DTITILE				ALB 27-Jun-1988
C
C Function completed replaces function of the same name which would
C not allow a real null value to be specified.
C
C Function to change the null value from the current default value. 
C The null value is used in CHECK_NULL routine. 
C Function returns .TRUE. if all is well.
C
	IMPLICIT NONE
C
C Parameters :
	INCLUDE 'LSL$DTMCREATESYS:MESPAR.PAR'
	INCLUDE 'LSL$CMNDTICHECK:PARAMS.PAR'	!DTICHECK parameters
	INCLUDE 'LSL$CMNDTI:DTIPAR.PAR'		!DTILIB parameters
C
C Common block :
	INCLUDE	'LSL$CMNDTICHECK:FILES.CMN'
	INCLUDE	'LSL$CMNDTICHECK:COMMAND.CMN'
	INCLUDE	'LSL$CMNDTI:DTIHDR.CMN'		!DTILIB common
	INCLUDE	'LSL$CMNLSL:CMDCOM.CMN'		!LSLLIB common
	INCLUDE 'LSL$CMNLSL:EXPC.CMN'
	INCLUDE 'LSL$CMNLSL:TXTC.CMN'
C
C w/s
C
	REAL*4		NEW_NULL	! new null value
C
C Functions :
	LOGICAL		RDNUM	! read number from command line
C
C ......................................................................
C
	NULL_CMD = .TRUE.	! assume success
C
C check that output file is open
C
	IF(.NOT.DTIOPN) THEN
	   CALL WRITEF(
     &	   '%S FILEIN command must be used to '//
     &	   'open an input DTI file first ',ERROR)
	   NULL_CMD=.FALSE.
	   GOTO 999
	ENDIF
C
C Read in number from command line, if there is none, restore default
C
	IF (CMDRCT.EQ.0) THEN
	   IF(DATA_TYPE(1).EQ.DATA_BYTE) THEN
	      NULL_BYTE_VAL = BYTE_NULL	! default
	      CALL WRITEF('Default byte null value %^B%I0 restored',
     &        NULL_BYTE_VAL)
	   ELSEIF(DATA_TYPE(1).EQ.DATA_WORD) THEN
	      NULL_WORD_VAL = WORD_NULL	! default
	      CALL WRITEF('Default word null value %^W%I0 restored',
     &        NULL_WORD_VAL)
	   ELSEIF(DATA_TYPE(1).EQ.DATA_LONG) THEN
	      NULL_LONG_VAL = LONG_NULL	! default
	      CALL WRITEF('Default long null value %I0 restored',
     &        NULL_LONG_VAL)
	   ELSEIF(DATA_TYPE(1).EQ.DATA_REAL) THEN
	      NULL_REAL_VAL = REAL_NULL	! default
	      CALL WRITEF('Default real null value %F0.0 restored',
     &        NULL_REAL_VAL)
	   ENDIF
	ELSE
C
C With the DTI file opened then set null value within range controlled
C by data type
C
	   IF(DTIOPN) THEN
C
C set null value depending on data type of first input DTI file
C
C BYTE
C
	      IF(DATA_TYPE(1).EQ.DATA_BYTE) THEN
		 NEW_NULL = REALAR(1)
		 IF(NEW_NULL.LT.0.0.OR.NEW_NULL.GT.255.0) THEN
	   	    CALL WRITEF
     &		    ('%S Null value %F0.0 out of range for '//
     &		     'byte type DTI file',
     &			WARNING,NEW_NULL)
		    NULL_BYTE_VAL = BYTE_NULL ! Default
	   	    CALL WRITEF
     &		    ('Null value must be between 0 and 256 ')
	   	    CALL WRITEF
     &		    ('Default value %^B%I0 restored',
     &			NULL_BYTE_VAL)
		 ELSE
	            NULL_BYTE_VAL = NINT(NEW_NULL)
		 ENDIF
C
C WORD
C
	      ELSEIF(DATA_TYPE(1).EQ.DATA_WORD) THEN
		 NEW_NULL = REALAR(1)
		 IF(NEW_NULL.LT.-32768.0.OR.
     &		    NEW_NULL.GT.32767.0) THEN
	   	    CALL WRITEF
     &		    ('%S Null value %F0.0 out of range for '//
     &		     'word type DTI file',
     &			WARNING,NEW_NULL)
		    NULL_WORD_VAL = WORD_NULL ! Default
	   	    CALL WRITEF
     &		    ('Null value must be between -32768 and 32767 ')
	   	    CALL WRITEF
     &		    ('Default value %^W%I0 restored',
     &			NULL_WORD_VAL)
		 ELSE
	            NULL_WORD_VAL = NINT(NEW_NULL)
		 ENDIF
C
C LONG
C
	      ELSEIF(DATA_TYPE(1).EQ.DATA_LONG) THEN
		 NEW_NULL = REALAR(1)
		 IF(NEW_NULL.LT.-2.0E31.OR.
     &		    NEW_NULL.GT.2.0E31 - 1) THEN
	   	    CALL WRITEF
     &		    ('%S Null value %F0.0 out of range for '//
     &		     'long type DTI file',
     &			WARNING,NEW_NULL)
		    NULL_LONG_VAL = LONG_NULL ! Default
	   	    CALL WRITEF
     &		    ('Null value must be between -2E31 and 2E31 - 1 ')
	   	    CALL WRITEF
     &		    ('Default value %I0 restored',
     &			NULL_LONG_VAL)
		 ELSE
	            NULL_LONG_VAL = NINT(NEW_NULL)
		 ENDIF
C
C REAL
C
	      ELSEIF(DATA_TYPE(1).EQ.DATA_REAL) THEN
		 NEW_NULL = REALAR(1)
		 IF(NEW_NULL.LT. -1.0E38 .OR.
     &		 	NEW_NULL.GT. 1.0E38 ) THEN
	   	    CALL WRITEF
     &		    ('%S Null value %F0.0 out of range for '//
     &		     'real type DTI file',
     &			WARNING,NEW_NULL)
		    NULL_REAL_VAL = REAL_NULL ! Default
	   	    CALL WRITEF
     &		    ('Null value must be between -1.0E38 and 1.0E38 ')
	   	    CALL WRITEF
     &		    ('Default value %F0.0 restored',
     &			NULL_REAL_VAL)
		 ELSE
	            NULL_REAL_VAL = NEW_NULL
		 ENDIF
	      ENDIF
	   ENDIF
	ENDIF
999	CONTINUE
	RETURN
	END
