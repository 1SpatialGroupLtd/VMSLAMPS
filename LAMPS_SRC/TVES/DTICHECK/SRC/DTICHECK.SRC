C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1989-01-09 18:59:06.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	PROGRAM DTICHECK
C
***	MODULE	DTICHECK
***	IDENT	09JA89
C
C Copyright Laser-Scan Laboratories Limited, Cambridge, England.
C
CMOD	HAD_ABSOLUTE added		       MWSR     09-Jan-1988
C       Modified for DTICHECK                   DJG     03-Mar-1988
C	From old PANACEA TIMPANI		TJH 	08-Oct-1987
C
C DTICHECK is a function for checking a DTI file for 4 types of error :
C 1) SLOPE. The user specifies a threshold difference between adjacent
C           DTI file posts in the units of the file.
C 2) MINUS. Negative values of DTI posts.
C 3) NULL.  Null values of DTI posts. The null value can be input by the
C           user and will usually depend on the data type.
C 4) ZERO.  Zero values in the DTI file.
C
C Any errors detected can be output in any or all of 4 methods :
C a) DIAGNOSTIC MESSAGES - directed to the terminal
C b) IFF file - boxes are drawn around points with errors detected
C c) LITES2 command file - to drive Lites2 to the positions in the original
C    map of the detected errors
C d) ROVER command file - to drive Rover to the DTI file error positions
C
C
	IMPLICIT NONE
C
C Parameters:
C
	INCLUDE 'LSL$CMNDTICHECK:PARAMS.PAR'
	INCLUDE 'LSL$DTMCREATESYS:MESPAR.PAR'
C
C Common:
C
	INCLUDE 'LSL$CMNDTICHECK:COMMAND.CMN'
	INCLUDE 'LSL$CMNLSL:CMDCOM.CMN'
C
C Functions:
C
	LOGICAL DTMJPI		! process info. - introduction
	LOGICAL GET_CMDS	! command interface
	LOGICAL CLOSE_FILES	! close all files
C
C W/s
C
	LOGICAL OK		! function return
	LOGICAL	CHECK		! actually do the checking?
C
C.......................................................................
C
	CALL LSL_INIT
	CALL DTI_INIT
	OK = DTMJPI()
C
C Set up some default values
C
	SLOPE_VAL = 25
	SLOPE_FC  = 1
	MINUS_FC  = 2
	NULL_FC   = 3
	ZERO_FC   = 4
	HAD_DIAG  = .FALSE.
	HAD_ABSOLUTE = .TRUE.
C
C Now run the program by simply getting commands and processing them
C After GO the user is thrown out of the program
C
	OK = GET_CMDS(CHECK)
C
C Close any files that may be open
C
	OK = CLOSE_FILES()
	CALL LSL_EXIT(OK)
C
	END
