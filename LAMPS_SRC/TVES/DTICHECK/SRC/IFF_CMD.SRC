	LOGICAL FUNCTION IFF_CMD()
C
***	MODULE	IFF_CMD
**	IDENT	10JA89
C
C	Copyright (C), Laser-Scan Laboratories Ltd., Cambridge, England
C
CMOD	set up iff file open logical variable	       MWSR 09-Jan-1989
C       Modified for DTICHECK				DJG 03-Mar-1988
C	Created						TJH 13-Oct-1987
C
C Function to get output file-spec from IFF command. If argument is
C missing the user is prompted. When argument read, output file
C spec is constructed and the files opened.
C
C Function returns .TRUE. if all is well, otherwise .FALSE.
C
	IMPLICIT NONE
C
C Parameters:
C
	INCLUDE	'LSL$DTMCREATESYS:MESPAR.PAR'
	INCLUDE 'LSL$CMNDTICHECK:PARAMS.PAR'
C
C Common:
C
	INCLUDE	'LSL$CMNLSL:FILENAME.CMN'
	INCLUDE	'LSL$CMNLSL:TXTC.CMN'
	INCLUDE 'LSL$CMNDTICHECK:COMMAND.CMN'
	INCLUDE 'LSL$CMNDTICHECK:FILES.CMN'
	INCLUDE 'LSL$CMNDTI:DTIHDR.CMN'
	INCLUDE 'LSL$CMNIFF:MD2DES.CMN'
	INCLUDE 'LSL$CMNIFF:MHDEF.CMN'
	INCLUDE 'LSL$CMNIFF:IFFHAN.CMN'
C
C W/s
C
	BYTE		CH	! a character
	LOGICAL		OK,IERR	! for error returns
	REAL		RANGE(4)
	REAL		CFT(10,2)
	REAL		CPARRY(4,4)
	REAL		MRK_ST(2,3)
	INTEGER*2	ISQ, ISTAT(4)
	INTEGER		LPOSNO
C
C Functions
C
	LOGICAL		GETFILNAM ! get file-spec
	LOGICAL		IFFCREATE ! open new IFF file
	LOGICAL		RDCHS	! read char. skipping spaces
	LOGICAL		TTRSTR	! read from TT:
C
C initialise
C
	DATA CFT/0,1,0,7*0,0,0,1,7*0/
C
C ......................................................................
C
	IFF_CMD = .TRUE.		! assume success
	MATV2   = 2			! map descriptor = type 2
C
C ......................................................................
C
C If the user hasn't given a file-spec prompt for one
C
	IF (RDCHS(CH)) THEN			! empty line
	   IF (TTIN) THEN
	      CALL WRITEF('%S You must specify a file-spec argument'//
     &		' to the IFF command',WARNING)
	   ELSE
	      CALL WRITEF('%S You must specify a file-spec argument'//
     &		'to the IFF command',ERROR)
	   ENDIF	   
	   CALL WRITEF('For example IFF DUA3:[MYDIR.DAT]JIM.DTI')
	   IF (TTIN) THEN
	      OK=TTRSTR(,,'Output IFF file? ',IERR)
	      IF (OK) THEN
	         CALL BSLN
	      ELSE
	         CALL LSL_PUTMSG(OK)
	         CALL LSL_ADDMSG(IERR)
	         GOTO 10
	      ENDIF
	      IF (TXTPTR.EQ.0) GOTO 10		! empty line
	   ELSE
	      GOTO 10  ! someone got their indirect file wrong !!
	   ENDIF
	ENDIF
C
	CALL BSCH
	OK=GETFILNAM(IFFFILE,IFFLEN,'LSL$IF:IFF.IFF',.TRUE.,%REF('!'))
	IF (.NOT.OK) THEN
	   CALL WRITEF('%S reading output file-spec',ERROR)
	   CALL LSL_PUTMSG(OK)
	   GOTO 10
	ENDIF
	HAD_IFF= .TRUE.
	GOTO 20
C
C Return with error message
C
10	IFF_CMD=.FALSE.
C
C ......................................................................
C
20	RETURN
	END
