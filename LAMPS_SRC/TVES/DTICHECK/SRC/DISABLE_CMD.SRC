	LOGICAL FUNCTION DISABLE_CMD()
C
***	MODULE	DISABLE_CMD
**	IDENT	09JA89
C
C	Copyright (C), Laser-Scan Laboratories Ltd., Cambridge, England
C
CMOD	DISABLE ABSOLUTE added			      MWSR  09-Jan-1988
C       Modified for DTICHECK                           DJG 03-Mar-1988
C	Created						TJH 13-Oct-1987
C
C Function to set command switches 'off' eg DISABLE DIAGNOSTICS.
C Function ENABLE_CMD is used to turn the switches on again. 
C
C Function returns .TRUE. if all is well, .FALSE. if an error
C
	IMPLICIT NONE
C
C W/s
C
	BYTE		CH	! for use with RDCHS
	INTEGER		CMD     ! decoded command number
C
C Parameters:
C
	INCLUDE	'LSL$DTMCREATESYS:MESPAR.PAR'
	INCLUDE 'LSL$CMNDTICHECK:PARAMS.PAR'
C
C Common blocks:
C
	INCLUDE 'LSL$CMNDTICHECK:COMMAND.CMN'
	INCLUDE 'LSL$CMNLSL:CMDCOM.CMN'
C
C Functions:
C
	LOGICAL 	LONGIN	! get integer argument
	LOGICAL  	RDCHS	! read character from line
	LOGICAL  	RDCH	! read character from line
	LOGICAL 	RDCOMM  ! read command from line
	LOGICAL 	REALIN  ! get real argument
C
C Command table:
C
	EXTERNAL	DISABLE_CMD_TABLE
	INTEGER		DISABLE_CMD_TABLE
C
C ......................................................................
C
	DISABLE_CMD=.TRUE.		! assume success
	NOMESS=.TRUE.			! turn off CMDLIB messages
C
	CMD=RDCOMM(DISABLE_CMD_TABLE)	! get command
	GOTO (
     &		10,	! error
     &		20,	! diagnostics
     &		30,	! pme
     &		40,	! slope
     &		50,	! minus
     &		60,	! null
     &		70,	! zero
     &  	80	! absolute
     &			), CMD+1
C
C
	CALL WRITEF ('%S Command not yet implemented',ERROR)
	DISABLE_CMD=.FALSE.
	GOTO 140
C
C ......................................................................
C DISABLE ?
C
10	CALL WRITEF
	CALL WRITEF('%S Specifying command DISABLE',ERROR)
	CALL WRITEF
	CALL WRITEF(
     &		'Available DISABLE command qualifiers are:')
	CALL WRITEF
	CALL WRITEF('DIAGNOSTICS     PME     SLOPE     '//
     &              'MINUS     NULL     ZERO')
	CALL WRITEF
	DISABLE_CMD=.FALSE.
	GOTO 140
C
C
C ......................................................................
C DISABLE DIAGNOSTICS
C
20	HAD_DIAG=.FALSE.
	GOTO 140
C
C ......................................................................
C DISABLE PME  - Performance monitor and evaluation
C
30	IF (.NOT. PMEING) THEN
	   CALL WRITEF('%S You were not using PME !', WARNING)
	ELSE
	   CALL PME_EXIT
	   PMEING=.FALSE.
	ENDIF
	GOTO 140
C
C ......................................................................
C DISABLE SLOPE CHECKING
C
40	SLOPE =.FALSE.
	GOTO 140
C
C ......................................................................
C DISABLE MINUS CHECKING
C
50	MINUS =.FALSE.
	GOTO 140
C
C ......................................................................
C DISABLE NULL CHECKING
C
60	NULL =.FALSE.
	GOTO 140
C
C ......................................................................
C DISABLE ZERO CHECKING
C
70	ZERO =.FALSE.
	GOTO 140
C
C ......................................................................
C DISABLE ABSOLUTE
C
80	HAD_ABSOLUTE =.FALSE.
	GOTO 140
C
140	NOMESS=.FALSE.
	RETURN
	END
