C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1988-06-10 09:11:42.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL FUNCTION GETCOL
C
***	MODULE	GETCOL
***	IDENT	03MR88
C
C	Copyright Laser-Scan Laboratories Ltd., Cambridge, England
C
C	Modified for DTICHECK 			DJG 	03-Mar-1988
C	From old PANACEA's TIMPANI		TJH 	03-NOV-1987
C
C Function to read a single column of a DTI file into an array. This function
C also writes out a diagnostic message ( if HAD_DIAG = true ) to say which
C DTI column is currently being processed
C Function returns SS$_NORMAL if all is well
C
	IMPLICIT NONE
C
C Parameters:
C
	INCLUDE 'LSL$CMNDTI:DTIPAR.PAR'
	INCLUDE 'LSL$CMNDTICHECK:PARAMS.PAR'
	INCLUDE '($SSDEF)/NOLIST'
C
C Common:
C
	INCLUDE 'LSL$CMNDTICHECK:FILES.CMN'
	INCLUDE 'LSL$CMNDTICHECK:IFCTRL.CMN'
	INCLUDE 'LSL$CMNDTICHECK:COMMAND.CMN'
	INCLUDE 'LSL$CMNDTI:DTIHDR.CMN'
	INCLUDE 'LSL$CMNIFF:IFFHAN.CMN'
C
C Arguments:
C
C
C W/s
C
	INTEGER	 	IERR		! function error return
C
C Functions:
C
	LOGICAL	DTI_COPY_DATA		! DTILIB routine
	LOGICAL	IFF_FIN			! finish off IFF structure
	LOGICAL	ISOLIN			! generate the contours
C
C .................................................................
C
	GETCOL=SS$_NORMAL
C
C
C Write out window limits if required. 
C
	IF (HAD_DIAG) THEN
	   CALL WRITEF(
     &		 'Checking column ...................................%N'
     &							, COLNO )
	ENDIF
C
C read the first column of data
C
	GETCOL = DTI_COPY_DATA ( DTILUN, LONG_COL, .FALSE.,
     &	    		         COLNO,  DTI_WINDOW_SWY(1),
     &				 1,      NROWS )
	IF (.NOT.GETCOL) THEN
	   CALL LSL_PUTMSG(GETCOL)
	   IF (.NOT.IERR) THEN
	      CALL LSL_ADDMSG(IERR)
	   ENDIF
	   GOTO 100
	ENDIF
C
C
C If this is not the last column, read a second column of data
C
        IF ( COLNO .EQ. X_EXTENT(1) ) GOTO 100
C
	GETCOL = DTI_COPY_DATA ( DTILUN, NEXT_LONG_COL, .FALSE.,
     &	    		         COLNO+1,  DTI_WINDOW_SWY(1),
     &				 1,      NROWS )
	IF (.NOT.GETCOL) THEN
	   CALL LSL_PUTMSG(GETCOL)
	   IF (.NOT.IERR) THEN
	      CALL LSL_ADDMSG(IERR)
	   ENDIF
	   GOTO 100
	ENDIF
C
C
100	RETURN
	END
