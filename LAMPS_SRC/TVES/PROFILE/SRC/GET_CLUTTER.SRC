C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1992-02-17 09:44:56.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
        INTEGER*4 FUNCTION GET_CLUTTER
     &                     (XPOS,YPOS,CLUTTER_VALUE,CLUTTER_INDEX) 
C 
***	MODULE	GET_CLUTTER
***	IDENT	28NO88
C
C 	Copyright Laser-Scan Laboratories Ltd.,Cambridge,England
C 	Author  : D R Catlow
C	Created : 21 April 1988
C	Modified:
C
C	Function: 
C	To determine the a clutter value for sample point XPOS,YPOS.
C	The value is determined from 1 or more clutter files using
C	a nearest neighbour algorithm.
C	A clutter index is returned indicating from which file
C	the clutter value has been derived.
C
C----------------------------------------------------------------------
C
	IMPLICIT NONE
C
C	DTILIB commons
***	COMMON      /LSL$CMNDTI:DTIHDR/
***	PARAMETER   /LSL$CMNDTI:DTILIBMSG/
C
***	COMMON/HERE:PROFILE/
***	COMMON/HERE:PROFILE_IFF/
C
C Arguments:
	REAL		XPOS		  !X coordinate position
	REAL		YPOS		  !Y coordinate position
	REAL		CLUTTER_VALUE	  !Clutter Z value
	INTEGER*4	CLUTTER_INDEX	  !Type of clutter identifier
C
C Locals:
	REAL		THISX  		  !XPOS,YPOS relative to
	REAL		THISY		  !clutter file origin
	REAL		VALUE		  !sample value
	INTEGER*4	I		  !counter
C
C Functions:
	INTEGER*4	SAMPLE		  !to derive the sample value
C
C----------------------------------------------------------------------
C
	GET_CLUTTER=DTI__NORMAL
C
C	Set intial values
	CLUTTER_VALUE=0
	CLUTTER_INDEX=0
C
	DO 100 I=1,3
C	Test if the clutter file is present
	   IF(.NOT.DTILUN_INUSE(I))GOTO 100
C
C	Work out position of XPOS,YPOS as metre offsets
C	in the clutter matrix
	   IF(HAD_PROJ_RECORD(I))THEN
C	Absolute position
	     THISX=X_OFFSET(4)+XPOS
	     THISY=Y_OFFSET(4)+YPOS
C	Relative position in the clutter file
	     THISX=THISX-X_OFFSET(I)
	     THISY=THISY-Y_OFFSET(I)
C
C	No projection record so treat as though
C	identical to DTM offset.
	   ELSE
	     THISX=XPOS
	     THISY=YPOS
	   ENDIF
C
C	Test if the point lies within the bounds of the clutter file
	   IF(THISX.LT.0.OR.THISX.GT.NEX_METRES(I).OR.
     &        THISY.LT.0.OR.THISY.GT.NEY_METRES(I))GOTO 100   !outside
C
C	Retrieve clutter height	  
	   GET_CLUTTER=SAMPLE(I,1,THISX,THISY,VALUE)
	   IF(.NOT.GET_CLUTTER)GOTO 999
	   IF(VALUE.NE.-1)THEN
             IF(CLUTTER_INDEX.EQ.0)THEN
	       CLUTTER_VALUE=VALUE
               CLUTTER_INDEX=I
	     ENDIF
	   ENDIF	      
C
100	CONTINUE
C
C-----------------------------------------------------------------------
999	RETURN
C
	END
