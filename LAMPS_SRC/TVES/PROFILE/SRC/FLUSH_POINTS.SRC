C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1988-04-25 13:42:10.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE FLUSH_POINTS
C
***	MODULE FLUSH_POINTS
***	IDENT  25AP88
C
	IMPLICIT NONE
C
C 	Copyright Laser Scan Laboratories Ltd., Cambridge, England
C 	Author  : 	D R Catlow.
C 	Created :	April 1988
C	Modified:
C
C	Function:
C	To write the contents of data buffer to the IFF file.
C	The data points are written as a CB entry
C
C-----------------------------------------------------------------------
C
***	COMMON/LSL$CMNIFF:CB.STR/
C
***	COMMON/HERE:PROFILE_CB/
***	COMMON/HERE:PROFILE_IFF/
C
C-----------------------------------------------------------------------
C	Number of rows to be written is equal to the number of
C	points in the data buffer.
	CBH.NROW = DATA_BUFF_COUNT
	CBH.COLH(3) = IFF_C_Z
	CBH.COLH(4) = CLUTTER_AC
	CBH.NCOL = 4
	CBH.NATT = 0
C
C	Set IENDS for pen-up or pen-down move, depending
C	on whether its the first CB for this feature.
	IF(FIRST_CB)THEN
	  CBH.FLAGS = 0
	ELSE
	  CBH.FLAGS = 1
	ENDIF
C
C-----------------------------------------------------------------------
C	Compress the CB in case the Z or clutter index is in fact
C	constant for this CB
	CALL IFS_CB_COMPRESS(CBH,DATA_BUFF)
C
C	Write the coordinate block	
	CALL IFFCB(CBH,DATA_BUFF)
C
C-----------------------------------------------------------------------
C	No longer the first CB for this feature
	FIRST_CB=.FALSE.
C
C-----------------------------------------------------------------------
C	Set the data point count to zero
	DATA_BUFF_COUNT=0
C
C-----------------------------------------------------------------------
	RETURN
C
	END
