C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1989-02-17 17:27:34.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE SHOW
C
***	MODULE SHOW
***	IDENT  17FE89
C
	IMPLICIT NONE
C
C 	Copyright Laser Scan Laboratories Ltd., Cambridge, England
C 	Author  : 	D R Catlow.
C 	Created :	April 1988
C
CMOD    3rd argument to function DTI_PRINT_HEADER added. 
C	ABSOLUTE and TABLE added to the SHOW ENABLE output.
C	and bug in printing out transmitter location in matrix
C	units corrected.
C					     FJB	29-Nov-1988
C
C	Function:
C	To display on the terminal details on the requested subject.
C
C-----------------------------------------------------------------------
C
***	COMMON/LSL$CMNLSL:CMDCOM/
C
***	COMMON/LSL$CMNDTI:DTIHDR/
C
***	COMMON/HERE:PROFILE/
***	COMMON/HERE:PROFILE_IFF/
***	COMMON/HERE:TAB/
C
	REAL		SECTOR_WIDTH	!angular separation between
C					!sector radii
	INTEGER*4	CMD		!secondary command number
	INTEGER*4	I		!loop counter
C
C	Secondary command table
	EXTERNAL	SHOW_CMD_TABLE
C
C	Functions:
	INTEGER*4	DTI_PRINT_HEADER !to print the DTM file header
	INTEGER*4	RDCOMM		!to test sceondary command
C
C-----------------------------------------------------------------------
C
C	Check the SHOW qualifier
	CMD = RDCOMM(SHOW_CMD_TABLE)	
	IF (CMD.LE.0) THEN	! qualifier unrecognised
	  CALL WRITEF('%S Specifying command SHOW',ERROR_BELL)
	  CALL WRITEF('SHOW options are 
     & CLUTTER, ENABLE, FILEIN, PARAMETERS or SETTINGS')
	  GOTO 999
	ENDIF
C
	GOTO (100,200,300,400,500)CMD
C---------------------------------------------------------------------
C	SHOW CLUTTER
C	display the names of the clutter files that have been opened
C
100	CALL WRITEF(' ')
	CALL WRITEF('Current Status  :')
	CALL WRITEF(' ')
C
	CALL EXPAND('BUILDING   file : ')
	IF(.NOT.DTILUN_INUSE(1))THEN
	  CALL APPEND('Undefined')
	ELSE
	  CALL APPEND('%S',DTI_NAME(1)(1:DTI_NAME_LENGTH(1)))
	ENDIF
	CALL TTWLIN
C
	CALL EXPAND('VEGETATION file : ')
	IF(.NOT.DTILUN_INUSE(2))THEN
	  CALL APPEND('Undefined')
	ELSE
	  CALL APPEND('%S',DTI_NAME(2)(1:DTI_NAME_LENGTH(2)))
	ENDIF
	CALL TTWLIN
C
	CALL EXPAND('WATER      file : ')
	IF(.NOT.DTILUN_INUSE(3))THEN
	  CALL APPEND('Undefined')
	ELSE
	  CALL APPEND('%S',DTI_NAME(3)(1:DTI_NAME_LENGTH(3)))
	ENDIF
	CALL TTWLIN
C
	CALL WRITEF(' ')
	GOTO 999
C
C---------------------------------------------------------------------
C	SHOW ENABLE
200	CALL WRITEF(' ')
	CALL WRITEF('Current status:')
	CALL WRITEF(' ')
	CALL EXPAND('ABSOLUTE      ')
	IF(HAD_ABSOLUTE)THEN
	  CALL APPEND('   On       ')
	ELSE
	  CALL APPEND('  Off       ')
	ENDIF
	CALL APPEND('DIAGNOSTICS   ')
	IF(DIAG)THEN
	  CALL APPEND('   On       ')
	ELSE
	  CALL APPEND('  Off       ')
	ENDIF
	CALL APPEND('TABLE          ')
	IF(TABLE)THEN
	  CALL APPEND('   On       ')
	ELSE
	  CALL APPEND('  Off       ')
	ENDIF
	CALL TTWLIN
	CALL WRITEF(' ')
C
	GOTO 999
C---------------------------------------------------------------------
C	SHOW FILEIN
C	print DTM details using DTI_PRINT_HEADER
C
300	CALL WRITEF(' ')
C
	IF(.NOT.DTILUN_INUSE(4))THEN
	  CALL WRITEF('%S DTM is undefined',WARN_BELL)
	  CALL WRITEF(' ')
	  GOTO 999
	ENDIF
C
	RETVAL=DTI_PRINT_HEADER(4,UNITS,HAD_ABSOLUTE)
	IF(.NOT.RETVAL)CALL LSL_PUTMSG(RETVAL)
C
	GOTO 999
C---------------------------------------------------------------------
C	SHOW PARAMETERS
C	Show information on the parameters that control how the DTM
C	is sampled, and which cells in the DTM are sampled.
C
C	Base Station Location
400	CALL WRITEF(' ')
	CALL EXPAND('Base Station       :')
	IF(.NOT.HAD_POSITION)THEN
          CALL APPEND('   Undefined')
	ENDIF
	CALL TTWLIN
C
	IF(HAD_POSITION)THEN
	  IF(HAD_ABSOLUTE)THEN
	    CALL WRITEF(' X Y Z (Metres)    : %F9.2 %F9.2  %F6.2',
     &      X_POSITION+X_OFFSET(4),
     &      Y_POSITION+Y_OFFSET(4),
     &      Z_POSITION)
	  ELSE
	    CALL WRITEF(' X Y Z (Metres)    : %F9.2 %F9.2  %F6.2',
     &      X_POSITION,
     &      Y_POSITION,
     &      Z_POSITION)
	  ENDIF
	  CALL WRITEF('       (Matrix)    : %F9.2 %F9.2  %F6.2',
     &    (X_POSITION/X_GRID(4))+1,
     &    (Y_POSITION/Y_GRID(4))+1,
     &    Z_POSITION)
	ENDIF
C
C	Sector values
	CALL WRITEF(' ')
	CALL EXPAND('Sector of Interest :')
	IF(.NOT.HAD_SECTOR)CALL APPEND('   Undefined')
	CALL TTWLIN	
C
	IF(HAD_SECTOR)THEN
	  CALL WRITEF(' ')
	  SECTOR_WIDTH=SECTOR_ANGLE(2)-SECTOR_ANGLE(1)
	  IF(SECTOR_WIDTH.LT.0)SECTOR_WIDTH=SECTOR_WIDTH+360.0
	  CALL WRITEF('  RADIUS    BEARING 1    BEARING 2      WIDTH')
	  CALL WRITEF('%F9.2    %F6.2       %F6.2    %F9.2',
     &               SECTOR_DISTANCE,SECTOR_ANGLE(1),SECTOR_ANGLE(2),
     &               SECTOR_WIDTH)
	ENDIF
C
C	Profile interval value
	CALL WRITEF(' ')
	CALL EXPAND('Profile Interval   :  %F6.2 degrees',
     &       PROFILE_INTERVAL)
	IF(PROFILE_INTERVAL.EQ.0)THEN
	  CALL APPEND(' (i.e. use all DTM nodes)')
	ENDIF
	CALL TTWLIN
	CALL WRITEF(' ')
C
C	Sample interval value
	IF(HAD_BAND)THEN
	  CALL EXPAND
     &    ('Sampling Interval  :   Variable (see Band Information)')
	ELSE
	  CALL EXPAND
     &    ('Sampling Interval  : ')
	  IF(HAD_SAMPLE)THEN
	    CALL APPEND(' %F6.2',SAMPLE_INTERVAL)
	  ELSE	
	    CALL APPEND('  Undefined')
	  ENDIF
	ENDIF
	CALL TTWLIN
	CALL WRITEF
C
C	Band Information
	IF(.NOT.HAD_BAND)THEN
	  CALL WRITEF('Sample Bands       :   Undefined')
	  CALL WRITEF(' ')
	ELSE
	  CALL WRITEF('Sample Bands       :   (in metres)')
	  CALL WRITEF(' ')
C
C	Output band header 
	  CALL WRITEF
     &   ('BAND       WIDTH      OUTER DISTANCE      SAMPLE INTERVAL')
C
C	Output details for each band
	  DO 450 I=1,NEXT_UNDEFINED_BAND-1
	    CALL WRITEF('%I3    %F10.2     %F10.2           %F8.2',
     &      I, BAND_WIDTH(I), BAND_DISTANCE(I), BAND_SAMPLE(I))
450	  CONTINUE
C
	  CALL WRITEF(' ')
	ENDIF
C
	IF(SUB_SAMPLE(1).GT.1.OR.SUB_SAMPLE(2).GT.1)THEN
	  CALL WRITEF('Sub-sample Interval:
     &   Along Columns:   %I4    Along Rows:   %I4',
     &      SUB_SAMPLE(1),SUB_SAMPLE(2))
	ENDIF
C
	CALL WRITEF(' ')
	GOTO 999
C
C---------------------------------------------------------------------
C	SHOW SETTINGS
500	CALL WRITEF(' ')
	CALL WRITEF('Current Settings:')
	CALL WRITEF
	CALL EXPAND('AC_BEARING   ')
	CALL APPEND('%^W%I5       ',BEARING_AC)
	CALL APPEND('AC_CLUTTER   ')
	CALL APPEND('%^W%I5       ',CLUTTER_AC)
	CALL APPEND('AC_LENGTH    ')
	CALL APPEND('%^W%I5',LENGTH_AC)
	CALL TTWLIN
	CALL WRITEF
C
	CALL EXPAND('FC           ')
	CALL APPEND('%^W%I5       ',FC_VALUE)
	CALL APPEND('LAYER        ')
	CALL APPEND('%^W%I5       ',LAYER)
	CALL APPEND('SCALE       ')
	CALL APPEND('%F9.2',MAP_SCALE)
	CALL TTWLIN
	CALL WRITEF
C
C---------------------------------------------------------------------
999	RETURN
C
	END
