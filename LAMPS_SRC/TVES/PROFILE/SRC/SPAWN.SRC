C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1988-04-25 17:11:54.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE SPAWN
C
***	MODULE SPAWN
***	IDENT  25AP88
C
	IMPLICIT NONE
C
C 	Copyright Laser Scan Laboratories Ltd., Cambridge, England
C 	Author  : 	D R Catlow.
C 	Created :	April 1988
C	Modified:
C
C	Function:
C	To spawn the DCL process specified on the command line.
C	The routine checks that a valid DCL comamnd has been
C	specified.
C
C-----------------------------------------------------------------------
C
***	COMMON/HERE:PROFILE/
***	COMMON/HERE:TAB/		!contains CMDFIL
C
	INTEGER*4	I		!loop counter
	BYTE		CH		!single character
	CHARACTER*80	LINE		!character array to contain
C					!DCL command line
C	Functions:
	INTEGER*4	LIB$SPAWN	!to spawn a DCL operation
	LOGICAL		RDCHS		!to check for at least one
C					!character on the command line
	LOGICAL		RDCH		!to read next character or space
C
	EXTERNAL	CTRLCAST	
C-----------------------------------------------------------------------
C
C	Check for something on the command line
	IF(RDCHS(CH))THEN
	  CALL WRITEF('%S Specifying command SPAWN',ERROR_BELL)
	  CALL WRITEF('Command requires a valid DCL command')
	  GOTO 999
	ENDIF
C
C	Backspace over the character we've just read
	CALL BSCH
	I = 0
C
C	Transfer command line, character by character into LINE
100	IF(RDCH(CH))GOTO 200		!end of line detected
	I = I+1
C
C	Check that we don't have too many characters
	IF(I.GT.80)THEN
	  CALL WRITEF('%S Specifying command SPAWN',ERROR_BELL)
	  CALL WRITEF('Command line cannot exceed 80 characters')
	  GOTO 999
	ENDIF
C
	LINE(I:I)=CHAR(CH)
	GOTO 100			!loop back for next character
C
C-----------------------------------------------------------------------
C 	First cancel CTRL/C recognition during spawn
200	IF(.NOT.CMDFIL)CALL SET_OUTBAND_AST
C
C	Spawn the command held in LINE
	RETVAL = LIB$SPAWN (LINE(1:I))
	CALL WRITEF(' ')
	IF(.NOT.RETVAL)THEN		!error during spawn
          CALL LIB$SIGNAL(%VAL(RETVAL))
	  CALL WRITEF
     &    ('%S Unable to spawn command, returning to PROFILE',
     &              ERROR_BELL)
	ENDIF
C
C	Setup CRT/C again
	IF(.NOT.CMDFIL)CALL SET_OUTBAND_AST(CTRLCAST,8)
C
C----------------------------------------------------------------------
C
999	RETURN
C
	END
