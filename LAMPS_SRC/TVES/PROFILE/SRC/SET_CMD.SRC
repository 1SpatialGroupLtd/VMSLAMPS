C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1989-02-16 15:33:38.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE SET_CMD
C
***	MODULE SET_CMD
***	IDENT  16FE89
C
	IMPLICIT NONE
C
C 	Copyright Laser Scan Laboratories Ltd., Cambridge, England
C 	Author  : 	D R Catlow.
C 	Created :	April 1988
C	Modified:
C
C	Function:
C	To interpret a SET command.  Using the SET command the
C	user can define the value associated with various IFF
C	entries.
C
C-----------------------------------------------------------------------
C
***	COMMON/LSL$CMNLSL:CMDCOM/
C
***	COMMON/HERE:PROFILE/
***	COMMON/HERE:PROFILE_IFF/
C
	INTEGER*4	CMD		!command number
C
C	Secondary command table
	EXTERNAL	SET_CMD_TABLE	!SET qualifiers
C	Function
	INTEGER*4	RDCOMM		!to test secondary command
C
C-----------------------------------------------------------------------
C
C	Check the SET qualifier
	CMD = RDCOMM(SET_CMD_TABLE)
	IF(CMD.LE.0)THEN
	  CALL WRITEF('%S Specifying command SHOW',ERROR_BELL)
	  CALL WRITEF('SET options are'//
     &    'AC_BEARING, AC_CLUTTER, AC_LENGTH, FC, LAYER or SCALE')
	  GOTO 999
	ENDIF
C
	GOTO (100,200,300,400,500,600)CMD
C---------------------------------------------------------------------
C	SET AC_BEARING
C	AC type to be used to hold the bea
100	IF(CMDICT.NE.1)THEN
	  CALL WRITEF('%S Specifying command SET AC_BEARING',ERROR_BELL)
	  CALL WRITEF('Command requires an integer argument')
	  GOTO 999
	ENDIF
C
	IF(INTARG(1).LT.1.OR.INTARG(1).GT.32767)THEN
	  CALL WRITEF('%S Specifying command SET AC_BEARING',ERROR_BELL)
	  CALL WRITEF
     &    ('Command requires an integer in the range 1 to 32767')
	  GOTO 999
	ENDIF
C
	BEARING_AC = INTARG(1)
	GOTO 999
C
C---------------------------------------------------------------------
C	SET AC_CLUTTER
C	AC type to be used to hold the clutter index
200	IF(CMDICT.NE.1)THEN
	  CALL WRITEF('%S Specifying command SET AC_CLUTTER',ERROR_BELL)
	  CALL WRITEF('Command requires an integer argument')
	  GOTO 999
	ENDIF
C
	IF(INTARG(1).LT.1.OR.INTARG(1).GT.32767)THEN
	  CALL WRITEF('%S Specifying command SET AC_CLUTTER',ERROR_BELL)
	  CALL WRITEF
     &    ('Command requires an integer in the range 1 to 32767')
	  GOTO 999
	ENDIF
C
	CLUTTER_AC = INTARG(1)
	GOTO 999
C
C----------------------------------------------------------------------
C	SET AC_LENGTH
C	AC type to be used to hold the profile length
300	IF(CMDICT.NE.1)THEN
	  CALL WRITEF
     &    ('%S Specifying command SET AC_LENGTH',ERROR_BELL)
	  CALL WRITEF('Command requires an integer argument')
	  GOTO 999
	ENDIF
C
	IF(INTARG(1).LT.1.OR.INTARG(1).GT.32767)THEN
	  CALL WRITEF
     &    ('%S Specifying command SET AC_LENGTH',ERROR_BELL)
	  CALL WRITEF
     &    ('Command requires an integer in the range 1 to 32767')
	  GOTO 999
	ENDIF
C
	LENGTH_AC = INTARG(1)
	GOTO 999
C
C----------------------------------------------------------------------
C	SET FC
400	IF(CMDICT.NE.1)THEN
	  CALL WRITEF('%S Specifying command SET FC',ERROR_BELL)
	  CALL WRITEF('Command requires an integer argument')
	  GOTO 999
	ENDIF
C
	IF(INTARG(1).LT.1.OR.INTARG(1).GT.32767)THEN
	  CALL WRITEF('%S Specifying command SET FC',ERROR_BELL)
	  CALL WRITEF
     &    ('Command requires an integer in the range 1 to 32767')
	  GOTO 999
	ENDIF
C
	FC_VALUE = INTARG(1)
	GOTO 999
C
C---------------------------------------------------------------------
C	SET LAYER
C	Set layer used to contain the profiles in the output IFF file
500	IF(CMDICT.NE.1)THEN
	  CALL WRITEF('%S Specifying command SET LAYER',ERROR_BELL)
	  CALL WRITEF('Command requires an integer argument') 
	  GOTO 999
	ENDIF
C
	IF(INTARG(1).LT.1.OR.INTARG(1).GT.32767)THEN
	  CALL WRITEF('%S Specifying command SET LAYER',ERROR_BELL) 
	  CALL WRITEF
     &    ('Command requires a layer number  in the range 1 to 32767')
	  GOTO 999
	ENDIF
C
	LAYER = INTARG(1)
	GOTO 999
C
C-----------------------------------------------------------------------
600	IF(CMDACT.NE.1)THEN
	  CALL WRITEF('%S Specifying command SET SCALE',ERROR_BELL)
	  CALL WRITEF('Command requires a real argument') 
	  GOTO 999
	ENDIF
C
	MAP_SCALE = REALAR(1)
	GOTO 999
C-----------------------------------------------------------------------
999	RETURN
C
	END
