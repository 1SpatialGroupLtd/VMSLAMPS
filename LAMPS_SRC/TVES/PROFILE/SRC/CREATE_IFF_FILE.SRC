C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1989-02-16 15:30:08.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	INTEGER*4 FUNCTION CREATE_IFF_FILE
C
***	IDENT	16FE89
***	MODULE	CREATE_IFF_FILE
C
C	Copyright : Laser-Scan Laboratories, Cambridge, England
C	Author    : D R Catlow
C	Created   : April 1988 (from DTIVIEW)
C	Modified  : Amended common block name 		FJB  28-Nov-1988
C	Modified  : put in default scale		MWSR 23-Jan-1989
C	Modified  : to allow for user specified scale   DRC  16-Feb-1989
C
C	Function  :
C	To create an IFF file to receive the profile data.
C	The function returns TRUE if a file is successfully opened, and
C	FALSE if an error has occured.
C
C----------------------------------------------------------------------
C
	IMPLICIT NONE
C
***	COMMON/LSL$CMNDTI:DTIPROJ/	!Projection Record Details
***	COMMON/LSL$CMNDTI:DTIHDR/
C
***	PARAMETER/LSL$CMNDTI:DTIPAR/
***	PARAMETER/LSL$CMNDTI:DTILIBMSG/
C
***	COMMON/LSL$CMNIFF:IFFHAN/
***	COMMON/LSL$CMNIFF:MD2DES/
***	COMMON/LSL$CMNIFF:MHDEF/
C
***	COMMON/LSL$CMNIFF:CB.STR/		!CB structures
C
***	COMMON/LSL$CMNLSL:LSLLIBMSG.PAR/
C
C	PROFILE common block
***	COMMON/HERE:PROFILE/
***	COMMON/HERE:PROFILE_IFF/
***	COMMON/HERE:PROFILE_CB/
C
C-----------------------------------------------------------------------
C 	workspace
	REAL		CPARR(4,4)	! control points
	REAL		CCARR(2,10)	! calib coeffs
	REAL		RANGE(4)	! coord range values
	INTEGER*4	I,J		! loop counters
C
C 	Functions
	INTEGER*4	IFFCREATE	! create IFF file
C
	DATA		CCARR/0.0,1.0,8*0.0,
     &			      2*0.0,1.0,7*0.0/
C
C----------------------------------------------------------------------
C
	CREATE_IFF_FILE=.TRUE.	! Assume function is successful
C
C-----------------------------------------------------------------------
C 
C	Create the output file.
C	Note Revision Level 1 is used, since we are going to write
C	CB entries.
	RETVAL = IFFCREATE(1,IFFNAME(:IFFNAME_LEN),,,.TRUE.,1)
	IF(.NOT.RETVAL)THEN
	  CALL LSL_PUTMSG(RETVAL)
	  CREATE_IFF_FILE=.FALSE.
	  GOTO 999
	ENDIF
C
C	Signal that a file is now open
	OPEN_IFF=.TRUE.
C
C 	Range values
	RANGE(1)=0.0
	RANGE(2)=NEX_METRES(4)-SWX_METRES(4)
	RANGE(3)=0.0
	RANGE(4)=NEY_METRES(4)-SWY_METRES(4)
	CALL IFFRA(RANGE)
C
C	History record
	CALL IFFHI
C
C	Map Header
	CALL IFFMH(MHARR,MHLEN)
C
C	Map Descriptor  This is filled out from the DTI Map Projection
C	Record if present in the IFF file.
C
C zero it
	DO 50 I = 1,MD2LEN
	   MD2ARR(I) = 0
50	CONTINUE
C
C make it a version 2
	MATV2 = 2
C
C put in scale value
	MD2SCL = MAP_SCALE
C
	IF(.NOT.HAD_PROJ_RECORD(4))THEN
	  MD2LOC(1) = 0
	  MD2LOC(2) = 0
	ELSE
	  MATV2 = 2				!type 2
C	Remember to add the SW corner of the rectangular area of
C	interest to the DTM origin offset.
	  MD2LOC(1) = DTIPROJ_ORIGIN(1,4)+SWX_METRES(4)	!x origin
	  MD2LOC(2) = DTIPROJ_ORIGIN(2,4)+SWY_METRES(4) !y origin
	  MD2PRJ    = DTIPROJ_PROJECTION(4)     !projection
	  MD2UNT    = DTIPROJ_UNITS(4)          !units
	  MD2SPH    = DTIPROJ_SPHEROID(4)       !spheroid
C
	  MD2USP(1) = DTIPROJ_USER_SPHEROID(1,4)!user spheroid
	  MD2USP(2) = DTIPROJ_USER_SPHEROID(2,4)!parameters
C
	  DO 100 I=1,15                         !proj. params
	    MD2PAR(I) = DTIPROJ_PROJ_PARAMS(I,4)
100	  CONTINUE
	ENDIF
	CALL IFFMD(MD2ARR,MD2LEN)
C
C	New Section
	CALL IFFNS('Created by program PROFILE')
C
C	CC Entry
	CALL IFFCC(CCARR)
C
C	CP Entry
C	Transfer DTM rectangular area of interest values in metres.
	CPARR(1,1)=SWX_METRES(4)
	CPARR(2,1)=NEY_METRES(4)
	CPARR(1,2)=SWX_METRES(4)
	CPARR(2,2)=SWY_METRES(4)
	CPARR(1,3)=NEX_METRES(4)
	CPARR(2,3)=SWY_METRES(4)
	CPARR(1,4)=NEX_METRES(4)
	CPARR(2,4)=NEY_METRES(4)
	DO 300 I=1,4
	   DO 200 J=1,2
	      CPARR(J+2,I) = CPARR(J,I)
200	   CONTINUE
300	CONTINUE
C
	CALL IFFCP(CPARR)
C
C	Fill out those CB header values that are constant
	CBH.GTYPE = 1
	CBH.COLH(1) = IFF_C_X
	CBH.COLH(2) = IFF_C_Y
C
C	Initialise the feature counter and FSN
	TOTAL_FEATURES=0
	NF_NUMBER=0
C
C	Generate a layer 0 and  4 corner points
	CALL CREATE_CORNER_POINTS	
C
C	Layer to hold the profiles	
C	Save pointer to NO so we can fill out the remainder of the
C	entry later
	LPOSNO = LPOSE		
	CALL IFFNO(LAYER,0,0)
C
C
C-----------------------------------------------------------------------
C
999	RETURN
C
	END
