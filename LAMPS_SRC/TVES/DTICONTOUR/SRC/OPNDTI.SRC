C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1989-04-07 12:25:38.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL FUNCTION OPNDTI()
C
***	MODULE	OPNDTI
***	IDENT	29OC88
C
C Copyright Laser-Scan Laboratories Limited, Cambridge, England.
C
CMOD	Now translates logical name LSL$MATRIX_DEFAULT_WINDOW
C	and sets default window accordingly. Checks
C	for presence of projection record in LSLA header
C	and reads it if present. New DTILIB DTI_UNITS
C	function used to determine default UNITS.	TJH 28-Nov-1988
CMOD	Parameter DTI_DTED replaced by DTI_TED4		DRC 18-Aug-1988
CMOD 	Now actually uses the origin values typed by the
C	user!						TJH 22-Apr-1988
C 	Created from Dave Meaders non-DTILIB OPNDTI	TJH 14-Oct-1987
C
C Opens the DTI file, and sets everything up ready for us to read
C the data.
C
C The function value is .TRUE. if we succeed.
C
	IMPLICIT NONE
C
C Parameters
	INCLUDE 'LSL$DTMCREATESYS:MESPAR.PAR'
	INCLUDE 'LSL$CMNDTICONTOUR:PARAMS.PAR'
	INCLUDE 'LSL$CMNDTI:DTIPAR.PAR'
	INCLUDE 'LSL$CMNDTI:DTIDEF.PAR'
C
C Common
	INCLUDE 'LSL$CMNDTICONTOUR:ANNOT.CMN'
	INCLUDE 'LSL$CMNDTICONTOUR:COMMAND.CMN'
	INCLUDE 'LSL$CMNDTICONTOUR:FILES.CMN'
	INCLUDE 'LSL$CMNDTI:DTIHDR.CMN'
	INCLUDE 'LSL$CMNLSL:CMDCOM.CMN'
	INCLUDE 'LSL$CMNLSL:TXTC.CMN'
C
C W/s
	LOGICAL	   IERR,OK		! error returns
	REAL	   LLDEGS(2)		! 2 lat. long. values
	REAL	   FIVEP		! 5% of max DTI range
	CHARACTER*1 TRANSLATION		! for translating log. name
	LOGICAL*1  DEFAULT_WINDOW	! set up a default window?
C
C Functions
	LOGICAL	  DTI_OPEN		! open/read header of DTI file
	LOGICAL	  DTI_PRINT_HEADER	! print DTI header
	LOGICAL	  DTI_UNITS		! determine DTI units
	LOGICAL	  TRNALL		! translate logical name
C
C ......................................................................
	OPNDTI=.TRUE.			! assume success
C
C Try to open file. If the opened file has a projection record, details
C are transferred  to /DTIPROJ/ and HAD_PROJ_RECORD(DTILUN) in
C /DTIHDR/ will be set .T.
	OK=DTI_OPEN(DTILUN,DTI_NAME(DTILUN),DTI_NAME_LENGTH(DTILUN),
     &				.FALSE.,IERR,.TRUE.)
	IF (OK) THEN
	   CALL WRITEF('DTI file %S opened for read',
     &			DTI_NAME(DTILUN)(:DTI_NAME_LENGTH(DTILUN)))
	ELSE
	   CALL WRITEF('%S error opening DTI file %S for input'
     &		,ERROR	,DTI_NAME(DTILUN)(:DTI_NAME_LENGTH(DTILUN)))
	   CALL LSL_PUTMSG(OK)
	   CALL LSL_ADDMSG(IERR)
	   GOTO 40
	ENDIF
C
C Set up default UNITS 
	UNITS=0
	OK=DTI_UNITS(DTILUN,UNITS)
	IF (.NOT.OK) THEN
	   CALL LSL_PUTMSG(OK)
	   UNITS=UNITS_DTI
	ENDIF
C
C Test if we should set a default matrix window
	OK=TRNALL('LSL$MATRIX_DEFAULT_WINDOW',TRANSLATION)
	IF (.NOT.OK.OR.TRANSLATION.NE.'1') THEN
	   DEFAULT_WINDOW=.FALSE.
	ELSE
	   DEFAULT_WINDOW=.TRUE.
	ENDIF
C
C Transfer default window size to the DTI common block variables
	DTI_WINDOW_SWX(DTILUN) = 1
	DTI_WINDOW_SWY(DTILUN) = 1
	IF (DEFAULT_WINDOW) THEN
	   DTI_WINDOW_NEX(DTILUN) = MIN(X_EXTENT(DTILUN),200)
	   DTI_WINDOW_NEY(DTILUN) = MIN(Y_EXTENT(DTILUN),200)
	ELSE	
	   DTI_WINDOW_NEX(DTILUN) = X_EXTENT(DTILUN)	
	   DTI_WINDOW_NEY(DTILUN) = Y_EXTENT(DTILUN)
	ENDIF
C
C Report the contents of the DTI file header
	OK=DTI_PRINT_HEADER(DTILUN,UNITS,ABSOLUTE)
	IF (.NOT.OK) THEN
	   CALL LSL_PUTMSG(OK)
	   GOTO 30
	ENDIF
C
C Get percentage of DTI (x,y) range for MINGAP and LABEL_SIZE defaults
	CALL FIVE_PERCENT(FIVEP)
	IF (LABLSIZE.EQ.0.0) LABLSIZE=FIVEP/10.0
	IF (RMINGAP.EQ.0.0) RMINGAP=FIVEP*2.0
	GOTO 50
C
C ......................................................................
C Close the DTI file
30	CALL DTI_CLOSE(DTILUN,.FALSE.,.FALSE.,IERR)
	CALL WRITEF ('DTI file %S is now closed. Please respecify the'//
     &		     ' FILEIN command',
     &			DTI_NAME(DTILUN)(:DTI_NAME_LENGTH(DTILUN)))
C
40	OPNDTI=.FALSE.
C
50	RETURN
	END
