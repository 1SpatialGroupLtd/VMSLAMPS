C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1989-03-06 16:16:46.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL FUNCTION FILEOUT_CMD()
C
***	MODULE	FILEOUT_CMD
***	IDENT	06MR89
C
C	Copyright (C), Laser-Scan Laboratories Ltd., Cambridge, England
C
CMOD	IFF now						TJH 06-Mar-1989
C	Created						TJH 13-Oct-1987
C
C Function to get output file-spec from FILEOUT command. If argument is
C missing the user is prompted. When argument read, output file
C spec is constructed and the files opened.
C
C Function returns .TRUE. if all is well, otherwise .FALSE.
C
	IMPLICIT NONE
C
C Parameters:
	INCLUDE	'LSL$DTMCREATESYS:MESPAR.PAR'
	INCLUDE 'LSL$CMNDTICONTOUR:PARAMS.PAR'
C
C Common:
	INCLUDE	'LSL$CMNLSL:FILENAME.CMN'
	INCLUDE	'LSL$CMNLSL:TXTC.CMN'
	INCLUDE 'LSL$CMNDTICONTOUR:COMMAND.CMN'
	INCLUDE 'LSL$CMNDTICONTOUR:FILES.CMN'
C
C W/s
	BYTE		CH	! a character
	LOGICAL		OK,IERR	! for error returns
C
C Functions
	LOGICAL		GETFILNAM ! get file-spec
	LOGICAL		IFFCREATE ! open new IFF file
	LOGICAL		RDCHS	! read char. skipping spaces
	LOGICAL		TTRSTR	! read from TT:
C
C ......................................................................
C
	FILEOUT_CMD=.TRUE.		! assume success
C
C ......................................................................
C
C If the silly user hasn't given a file-spec prompt for one
	IF (RDCHS(CH)) THEN			! empty line
	   IF (TTIN) THEN
	      CALL WRITEF('%S You must specify a file-spec argument'//
     &		' to the IFF command',WARNING)
	   ELSE
	      CALL WRITEF('%S You must specify a file-spec argument'//
     &		'to the IFF command',ERROR)
	   ENDIF	   
	   CALL WRITEF('For example IFF DUA3:[MYDIR.DAT]JIM.IFF')
	   IF (TTIN) THEN
	      OK=TTRSTR(,,'Output IFF file? ',IERR)
	      IF (OK) THEN
	         CALL BSLN
	      ELSE
	         CALL LSL_PUTMSG(OK)
	         CALL LSL_ADDMSG(IERR)
	         GOTO 10
	      ENDIF
	      IF (TXTPTR.EQ.0) GOTO 10		! empty line
	   ELSE
	      GOTO 10  ! someone got their indirect file wrong !!
	   ENDIF
	ENDIF
	CALL BSCH
	OK=GETFILNAM(IFFFILE,IFFLEN,'LSL$IF:IFF.IFF',.TRUE.,%REF('!'))
	IF (OK) THEN
	   CALL STR$UPCASE(IFFFILE,IFFFILE)
	ELSE
	   CALL WRITEF('%S reading output file-spec',ERROR)
	   CALL LSL_PUTMSG(OK)
	   GOTO 10
	ENDIF
C
C After all that try to open the file!
	OK=IFFCREATE(IFFLUN,IFFFILE(1:IFFLEN),,,.TRUE.)
	IF (OK) THEN
	   IFFOPN=.TRUE.
	   GOTO 20
	ENDIF	
C
C Return with our tail down
10	FILEOUT_CMD=.FALSE.
C
C ......................................................................
C
20	RETURN
	END
