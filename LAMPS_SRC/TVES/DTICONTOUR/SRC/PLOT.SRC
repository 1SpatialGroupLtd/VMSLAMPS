C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1989-07-06 18:32:50.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE PLOT(IX,IY,IPEN)
C
***	MODULE	PLOT
***	IDENT	06JL89
C
C	Copyright Laser-Scan Laboratories Ltd., Cambridge, England
C
CMOD782 Double precision variables introdused to eliminate spurious
C	contour kinks arising from rounding errors
C							 JB  03-Jul-1989
C	DTICONTOUR version				TJH  03-Nov-1987
C
	IMPLICIT NONE
C
	INTEGER	   MXFTPT	! maximum feature size
	PARAMETER (MXFTPT=5000)
C
	INTEGER IX,IY		! current posn. (scaled integer)
	INTEGER IPEN
C
	INCLUDE 'LSL$CMNDTICONTOUR:PARAMS.PAR'
	INCLUDE 'LSL$CMNDTICONTOUR:CONTR.CMN'
	INCLUDE 'LSL$CMNDTICONTOUR:MAPARE.CMN'
	INCLUDE 'LSL$CMNDTICONTOUR:IFCTRL.CMN'
C
C W/s
	LOGICAL	SPOT_HT		! spot ht feature just flushed?
	REAL 	XCOORD,YCOORD	! current posn.
C
C ......................................................................
C Take the plot instruction 'IX,IY,IPEN' stored in scaled integer.
C
	XCOORD = REAL(IX)*SRINC
	YCOORD = REAL(IY)*SRINC
C
C Clip all linework EXACTLY to the window limits except when label
C vectors when we must recalculate the range
C
	IF (NO_AC) THEN
	   XMIN = MIN(XMIN,XCOORD)
	   YMIN = MIN(YMIN,YCOORD)
	   XMAX = MAX(XMAX,XCOORD)
	   YMAX = MAX(YMAX,YCOORD)
	ELSE
	   XCOORD = MIN (DBLE(MAX(0.0,XCOORD)),XLEN)
	   YCOORD = MIN (DBLE(MAX(0.0,YCOORD)),YLEN)
	ENDIF
	IF (IPEN.NE.3) THEN
	   CALL IFADPT(XCOORD,YCOORD)	! this is not the start 
	   FEATOT=FEATOT+1		! number of points in feature
C
C If we have more than MXFTPT points in the feature flush it out. Then
C restart the string by repeating the last point of the flushed feature.
C
	   IF (FEATOT.EQ.MXFTPT) THEN
	      CALL IFLUSH(.TRUE.,SPOT_HT)
	      CALL IFNWFT(XCOORD,YCOORD)
	   ENDIF
	ELSE
	   CALL IFLUSH(.TRUE.,SPOT_HT)		! this IS the start 
C
C If after flushing there is only 1 pt in feature SPOT_HT will return
C true. We must therefore label this feature with its height as required
C
	   IF (SPOT_HT) THEN
	      CALL IFF_SPOT
	   ENDIF
	   CALL IFNWFT(XCOORD,YCOORD)
	ENDIF
	RETURN
	END
C
