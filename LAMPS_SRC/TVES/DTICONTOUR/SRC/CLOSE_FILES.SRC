	INTEGER*4  FUNCTION CLOSE_FILES()
C
***	MODULE	CLOSE_FILES
***	IDENT	06NO87
C
C	Copyright Laser-Scan Laboratories Ltd., Cambridge, England
C
C	Author						TJH  06-Nov-1987
C
C Function to close all open DTICONTOUR files.
C
C Function returns one of 2 condition codes:
C
C	SS$_NORMAL	- success
C	SS$_ABORT	- something went wrong
C
C All file-specs and their lengths are taken from /FILES/ common.
C
C All error reporting is done locally.
C
	IMPLICIT NONE
C
C Parameters:
	INTEGER*4	STS$K_WARNING
	EXTERNAL  	STS$K_WARNING	! bit mask for warning severity
	INTEGER*4 	SS$_ABORT
	EXTERNAL  	SS$_ABORT	! bad luck!
	INTEGER*4 	SS$_NORMAL
	EXTERNAL  	SS$_NORMAL	! normal successful completion
	INCLUDE 	'LSL$CMNDTICONTOUR:DTICONTOURMSG.PAR'
	INCLUDE 	'LSL$CMNDTICONTOUR:PARAMS.PAR'
	INCLUDE 	'LSL$CMNLSL:LSLLIBMSG.PAR'
	INCLUDE 	'LSL$CMNDTI:DTILIBMSG.PAR'
C
C Functions:
	LOGICAL		IFFCLO		! closes IFF file
	LOGICAL		DTI_CLOSE	! closes DTI file
	LOGICAL		IFFCDL		! closes and deletes IFF file
	INTEGER		FLRCLO		! close indirect file
C
C Workspace:
	INTEGER		IERR		! for error return	
C
C Common:
	INCLUDE 'LSL$CMNDTI:DTIHDR.CMN'
	INCLUDE 'LSL$CMNIFF:IFFHAN.CMN'
	INCLUDE 'LSL$CMNDTICONTOUR:COMMAND.CMN'
	INCLUDE 'LSL$CMNDTICONTOUR:FILES.CMN'
	INCLUDE 'LSL$CMNLSL:STATUS.CMN'
C
C.......................................................................
C
	CLOSE_FILES = %LOC(SS$_NORMAL)     ! normal completion
C
C Close IFF file
C
	IF (IFFOPN) THEN
	   CALL IFFCLO(IFFLUN)			! current input file
	   IF (IERCD.NE.0) THEN			! error?
	      CLOSE_FILES=DTICONT__CLIFF	! error closing file
	      CALL LSL_PUTMSG(CLOSE_FILES,IFFFILE(:IFFLEN))!tell user
	   ENDIF
	ENDIF
C
C ......................................................................
C
	IF (DTILUN_INUSE(DTILUN)) THEN
	   CLOSE_FILES=DTI_CLOSE(DTILUN,.FALSE.,.FALSE.,IERR)
	   IF (CLOSE_FILES.NE.DTI__NORMAL) THEN	! error?
	      CLOSE_FILES=DTICONT__CLDTI
	      CALL LSL_PUTMSG(CLOSE_FILES,
     &			DTI_NAME(DTILUN)(:DTI_NAME_LENGTH(DTILUN)))
C
C Give any secondary error message
	      IF (IERR.NE.0) CALL LSL_ADDMSG(IERR)
	   ENDIF
	ENDIF
C
C ......................................................................
C If required, close the indirect command file
C
	IF (INDOPN) THEN
	   CLOSE_FILES=FLRCLO(INDLUN,IERR)
	   IF (CLOSE_FILES.NE.LSL__NORMAL) THEN		! error?
	      CLOSE_FILES=DTICONT__CLIND		! close failed
	      CALL LSL_PUTMSG(CLOSE_FILES,INDFILE(:INDLEN))
C
C Give any secondary error message
	      IF (IERR.NE.0) CALL LSL_ADDMSG(IERR)
	   ENDIF
	ENDIF	
C
C.......................................................................
C
10	IF (CLOSE_FILES) THEN
	   CLOSE_FILES = %LOC(SS$_NORMAL)
	ELSE
	   CLOSE_FILES = %LOC(SS$_ABORT)
	ENDIF
C
	RETURN
	END
C
