C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1988-11-29 17:32:30.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL FUNCTION DISABLE_CMD()
C
***	MODULE	DISABLE_CMD
***	IDENT	28NO88
C
C	Copyright (C), Laser-Scan Laboratories Ltd., Cambridge, England
C
CMOD	DISABLE ABSOLUTE added				TJH 28-Nov-1988
C	Created						TJH 13-Oct-1987
C
C Function to set command switches 'off' eg DISABLE LABELLING. This
C replaces the grotty CMDLIB + or - mechanism and must be used in
C conjunction with function ENABLE_CMD for turning switches on again. 
C
C Function returns .TRUE. if all is well, .FALSE. if an error
C
	IMPLICIT NONE
C
C W/s
	BYTE		CH	! for use with RDCHS
	INTEGER		CMD     ! decoded command number
C
C Parameters:
	INCLUDE	'LSL$DTMCREATESYS:MESPAR.PAR'
	INCLUDE 'LSL$CMNDTICONTOUR:PARAMS.PAR'
C
C Common blocks:
	INCLUDE 'LSL$CMNDTICONTOUR:ANNOT.CMN'
	INCLUDE 'LSL$CMNDTICONTOUR:COMMAND.CMN'
	INCLUDE 'LSL$CMNDTICONTOUR:IFCTRL.CMN'
	INCLUDE 'LSL$CMNDTICONTOUR:SMTCMN.CMN'
	INCLUDE 'LSL$CMNLSL:CMDCOM.CMN'
	INCLUDE 'LSL$CMNLSL:EXPC.CMN'
	INCLUDE 'LSL$CMNLSL:TXTC.CMN'
C
C Functions:
	LOGICAL 	LONGIN	! get integer argument
	LOGICAL  	RDCHS	! read character from line
	LOGICAL  	RDCH	! read character from line
	LOGICAL 	RDCOMM  ! read command from line
	LOGICAL 	REALIN  ! get real argument
C
C Command table:
	EXTERNAL	DISABLE_CMD_TABLE
	INTEGER		DISABLE_CMD_TABLE
C
C ......................................................................
C
	DISABLE_CMD=.TRUE.			! assume success
	NOMESS=.TRUE.			! turn off CMDLIB messages
C
	CMD=RDCOMM(DISABLE_CMD_TABLE)	! get command
	GOTO (
     &		10,	! error/nothing
     &		15,	! absolute
     &		20,	! labelling
     &		30,	! diagnostics
     &		40,	! divideby,r
     &		50,	! frame
     &		60,	! index
     &		70,	! integer_height
     &		80, 	! multiplyby,r
     &		90,	! pme
     &		100,	! spot_heights
     &		110,	! smooth
     &		120,	! tofeet
     &	        130	! tometres
     &			), CMD+1
C
C
C command number out of range
	CALL WRITEF('Command not yet implemented')
	DISABLE_CMD=.FALSE.
	GOTO 140
C
C ......................................................................
C DISABLE ?
C
10	CALL WRITEF
	CALL WRITEF('%S Specifying command DISABLE',ERROR)
	CALL WRITEF
	CALL WRITEF(
     &		'Available DISABLE command qualifiers are:')
	CALL WRITEF
	CALL WRITEF(
     &		'ABSOLUTE    DIAGNOSTICS   DIVIDEBY     '//
     &		'FRAME         INDEX      INTEGER_HEIGHT')
	CALL WRITEF(
     &		'LABELLING   MULTIPLYBY    PME          '//
     &		'SPOT_HEIGHTS  SMOOTH     TOFEET')
	CALL WRITEF(
     &		'TOMETRES')
	CALL WRITEF
	DISABLE_CMD=.FALSE.
	GOTO 140
C
C ......................................................................
C DISABLE ABSOLUTE
15	ABSOLUTE=.FALSE.
	GOTO 140
C
C ......................................................................
C DISABLE ANNOTATION
20	DO_ANNO=.FALSE.
	GOTO 140
C
C ......................................................................
C DISABLE DIAGNOSTICS
30	HAD_DIAG=.FALSE.
	GOTO 140
C
C ......................................................................
C DISABLE DIVIDEBY 'real'
C
40	IF (.NOT.DIVIDE) MFACTR=1.0
	DIVIDE=.FALSE.
	GOTO 140
C
C ......................................................................
C
C DISABLE FRAME
C
50	HAD_FRAME=.FALSE.
	GOTO 140
C ......................................................................
C
C DISABLE INDEX
C
60	DISABLED_INDEX=.TRUE.
	GOTO 140
C ......................................................................
C
C DISABLE INTEGER_HEIGHT
C
70	AC2HT=.FALSE.
	GOTO 140
C
C ......................................................................
C DISABLE MULTIPLYBY 'real'
C
80	MULT=.FALSE.
	IF (.NOT.DIVIDE) MFACTR=1.0
	GOTO 140
C
C ......................................................................
C DISABLE PME  - Performance monitor and evaluation
C
90	IF (PMEING) THEN
	   CALL WRITEF('%S You were not using PME !', WARNING)
	ELSE
	   CALL PME_EXIT
	   PMEING=.FALSE.
	ENDIF
	GOTO 140
C
C ......................................................................
C
C DISABLE SPOT_HEIGHTS
C
100	HAD_SPOT=.FALSE.
	GOTO 140
C
C ......................................................................
C
C DISABLE SMOOTHING
C
110	SMTNUM=0
	GOTO 140
C
C ......................................................................
C DISABLE TOFEET
C
120	M2FEET=.FALSE.
	GOTO 140
C
C ......................................................................
C DISABLE TOMETRES
C
130	FEET2M=.FALSE.
C
140	NOMESS=.FALSE.
	RETURN
	END
