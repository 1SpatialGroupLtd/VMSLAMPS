C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1989-04-06 19:17:44.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL FUNCTION UNITS_CMD()
C
***	MODULE	UNITS_CMD
**	IDENT	28NO88
C
C	Copyright (C), Laser-Scan Laboratories Ltd., Cambridge, England
C
CMOD	Now deals with UNITS PROJECTION			TJH 28-Nov-1988
CMOD	Parameter DTI_DTED replaced by DTI_TED4		DRC 18-Aug-1988
C	Created						TJH 23-Jul-1987
C
C Function to get UNITS command. Function returns .TRUE. if all is well.
C
	IMPLICIT NONE
C
C Parameters:
	INCLUDE	'LSL$DTMCREATESYS:MESPAR.PAR'
	INCLUDE	'LSL$CMNDTICONTOUR:PARAMS.PAR'
	INCLUDE	'LSL$CMNDTI:DTIPAR.PAR'
	INCLUDE	'LSL$CMNDTI:DTILIBMSG.PAR'
C
C Common:
	INCLUDE	'LSL$CMNDTI:DTIHDR.CMN'
	INCLUDE	'LSL$CMNLSL:CMDCOM.CMN'
	INCLUDE	'LSL$CMNDTICONTOUR:COMMAND.CMN'
C
C W/s
	INTEGER		CMD     ! decoded command number
	LOGICAL		OK	! error return
C
C Define command tables:
	EXTERNAL	UNIT_CMD_TABLE
	INTEGER		UNIT_CMD_TABLE
C
C Functions:
	LOGICAL 	RDCOMM  	! read command from line
	INTEGER*4	DTI_UNITS	! test whether units is valid
C
C ......................................................................
C
	UNITS_CMD=.FALSE.		! realistic assumption
C
C Check that we have the DTI file open - units may clash with file
C contents so don't accept command until successful FILEIN command
	IF (DTILUN_INUSE(DTILUN)) THEN
	   CMD=RDCOMM(UNIT_CMD_TABLE)	
C
	   IF (CMD.LE.0) THEN           ! unrecognised command
	      CALL WRITEF ('%S Specifying command UNITS',ERROR)
	      CALL WRITEF ('Command qualifiers are: '//
     &		'MATRIX, METRES, PROJECTION, SECONDS, or LATLONG ')
	   ELSE
C
C Test whether units are valid
	      OK = DTI_UNITS(1,CMD)
	      IF (OK) THEN
	         UNITS = CMD
	         UNITS_CMD =.TRUE.		! flag our success
	      ELSE
	         IF (OK.EQ.DTI__INVUNITS) THEN
	            CALL WRITEF ('%S Specifying command UNITS',ERROR)
	            CALL WRITEF
     &      	     ('Command qualifier is invalid for the input file')
	         ELSE
	            CALL LSL_PUTMSG(OK)
	         ENDIF
	      ENDIF
	   ENDIF
	ELSE
	   CALL WRITEF(WARNING//
     &		'You must use the FILEIN command to specify the input ')
	   CALL WRITEF('                DTI file first')
	ENDIF
C
	RETURN
	END
