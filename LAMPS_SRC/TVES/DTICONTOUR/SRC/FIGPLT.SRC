C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1989-05-09 15:42:16.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE FIGPLT(IX,IY,CA,SA,IC)
C
***	MODULE	FIGPLT
***	IDENT	09MY89
C
C	Copyright Laser-Scan Laboratories Ltd., Cambridge, England
C
C	Standardised to LSL			JB   02-May-1989
C	DTICONTOUR version			TJH  03-Nov-1987
C
C FIGPLT plots a character chosen out of the set -./0123456789
C LABSIZ = char height in internal grid units
C
	IMPLICIT NONE
C
	INTEGER		IX,IY   ! lower left corner of the character
	REAL		CA,SA   ! cos and sin of the rotation angle for 
C				    the character
	INTEGER		IC      ! table entry of symbol to be plotted
C
	INCLUDE 'LSL$CMNDTICONTOUR:PARAMS.PAR'
	INCLUDE 'LSL$CMNDTICONTOUR:CHARAC.CMN'
	INCLUDE 'LSL$CMNDTICONTOUR:REMPUP.CMN'
	INCLUDE 'LSL$CMNDTICONTOUR:ANNOT.CMN'
	INCLUDE 'LSL$CMNDTICONTOUR:IFCTRL.CMN'
	INCLUDE 'LSL$CMNDTICONTOUR:SMTCMN.CMN'
C
C Characters are held on grid 8 by 7 screen units
C
C ISYMPT contains the list of pointers to the start of each symbol 
C   in the table.
C ISYMBL holds the symbol list for the characters -./0123456789
C
C W/s
C
	INTEGER		I,J,K,L
	INTEGER		IP
	INTEGER		IXA,IYA
	INTEGER		IXB,IYB
	INTEGER		ISTA
	INTEGER		IEND
C
	LOGICAL	SPOT_HT		! spot ht feature just flushed?
C
C ......................................................................
C Plot the character equivalent to IC in the set -./0123456789
C
	ISTA = ISYMPT(IC)
C
C Get the number of nodes in this line segment
C
	IEND = ISYMPT(IC+1)-1
C
C Explicitly flush the last feature (if not already done so)
C as we want to turn smoothing off, add last point if required
C
	IF (ZERO_LEVEL .AND. .NOT.IS_LABEL .AND. MISSED) THEN
	   IF (IXLAST.NE.IXPREV .OR. IYLAST.NE.IYPREV) THEN
	      CALL PLOT (IXLAST,IYLAST,2)
	      IXPREV = IXLAST
	      IYPREV = IYLAST
	      MISSED = .FALSE.
	   ENDIF
	ENDIF
C
	CALL IFLUSH(.TRUE.,SPOT_HT)
C
C If after flushing there is only 1 pt in feature SPOT_HT will return
C true. We must therefore label this feature with its height as required
C
	IF (SPOT_HT) THEN
	   CALL IFF_SPOT
	ENDIF
C
	NOSMTH = .TRUE.
	NO_AC = .TRUE.
	IS_LABEL = .TRUE.
C
C Initialize to move to first node with pen up
C
	IP = 3
C
C Connect nodes to form this line segment
C
	DO 20 K=ISTA,IEND
	   I = ISYMBL(K)
	   J = I/100
C
C Get coordinates of node
C
	   DO 10 L=1,2
	      IF (J.EQ.0) GOTO 20
C
C Decode, scale, orient and add origin of this node to current character
C
	      IXA = J/10
	      IYA = (J-IXA*10)*(FLOAT(LABSIZ)/7.0)
	      IXA = IXA*(FLOAT(LABSIZ)/8.0)
	      IXB = IX+(CA*IXA-SA*IYA)+0.5
	      IYB = IY+(SA*IXA+CA*IYA)+0.5
C
C Plot node
	      CALL PLOTB(IXB,IYB,IP)
C
C Get next node of pair ready
C
	      J = I-J*100
C
C Set to draw rest of line
C
	      IP = 2
C
10	   CONTINUE
20	CONTINUE
C
C Explicitly flush the feature (if not already done so) as we want to
C turn smoothing back on again.
C
	CALL IFLUSH(.TRUE.,SPOT_HT)
	NOSMTH = .FALSE.
C
	RETURN
	END
C
