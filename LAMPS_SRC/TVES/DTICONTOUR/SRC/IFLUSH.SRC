C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1989-05-09 13:36:16.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE IFLUSH(END,SPOT_HT)
C
***	MODULE	IFLUSH
***	IDENT	09MY89
C
C Copyright Laser Scan Laboratories Ltd., Cambridge, England
C
C Modified from PANACEA version 			TJH 03-Nov-1987
C
C To flush an IFF feature
C
	IMPLICIT NONE
C
C Arguments:
	LOGICAL		END		! end of feature
	LOGICAL		SPOT_HT		! spot ht?
C
C Parameters:
	INCLUDE 'LSL$CMNDTICONTOUR:PARAMS.PAR'
C
C Common:
	INCLUDE 'LSL$CMNDTICONTOUR:ANNOT.CMN'
	INCLUDE 'LSL$CMNDTICONTOUR:COMMAND.CMN'
	INCLUDE 'LSL$CMNDTICONTOUR:SMTCMN.CMN'
	INCLUDE 'LSL$CMNDTICONTOUR:IFCTRL.CMN'
C
C W/S
	LOGICAL	DELETED		! was feature deleted
	INTEGER	I,J,K		! loop vars
C
C ...................................................................
C Nothing to do if not in feature
C
	IF (INFT) THEN
	   DELETED=.FALSE.
	   SPOT_HT=.FALSE.	   ! we don't know yet
C
C We won't be in feature if we are ending.
C
	   INFT=.NOT.END
C
C Output anything in the buffers.
C
	   IF (VRTPT.GT.0) THEN
	      J=0
	      K=1
	      IF (FTFLSH) THEN
	         SMTPTS=SMTPTS + 1
	         SMTBUF(1,SMTPTS)=VRTX(1,1)	! use 1st point of ...
	         SMTBUF(2,SMTPTS)=VRTX(2,1)	! VRTX for continuity
	         CALL SMOOTH			! smooth as required
	         IF (SMTPTS.LT.3) THEN		! reduced to < 3 pnts ?
	            J=SMTPTS		 	! add to start of SMTBUF
	            K=2				! (1st pnt already done)
	            GO TO 10			! else do nothing
	         ENDIF
C
	         CALL IFFST(SMTBUF,SMTPTS-1,IENDS)! output smoothed data
	         IENDS=1
	         TOTPTS=TOTPTS + SMTPTS - 1
	      ELSE
	         IENDS=0			! start of new feature
	         TOTPTS=0
	      ENDIF
C
10	      SMTPTS=VRTPT + J			! save data for SMOOTH
	      DO 20 I=K,VRTPT
	         J=J + 1
	         SMTBUF(1,J)=VRTX(1,I)
	         SMTBUF(2,J)=VRTX(2,I)
20	      CONTINUE
	      FTFLSH=.TRUE.
	      VRTPT=0				! prepare for more data
	   ENDIF
C
C Terminate the feature if required (letting the smoothing catch up)
C
	   IF (END) THEN
	      IF (SMTPTS.GT.0) THEN
	         CALL SMOOTH			! smooth as required
	         CALL IFFST(SMTBUF,SMTPTS,IENDS)!output smoothed data
	         IF (TOTPTS+SMTPTS.EQ.1) THEN   ! single point feat.?
	            IF (HAD_SPOT) THEN	   	! want spot heights?
	               CALL IFFPKE(I,J,LFSPOS)  ! yes - set FC
	               CALL EIHWI(SPOT_FC,1,1)
	               SPOT_HT=.TRUE.	   	! we know to label
	            ELSE
	               CALL IFFDEL		! delete infant feat
		       DELETED=.TRUE.	   	! to stop IFFEF
	            ENDIF
	         ENDIF
	      ENDIF
C
	      IF (.NOT.DELETED) THEN
		 CALL IFFEF
		 IS_LABEL = .FALSE.
	      ENDIF
C
	   ENDIF
	ENDIF
C
	RETURN
	END
C
