	SUBROUTINE IFF_HEADER
C
***	MODULE	IFF_HEADER
***	IDENT	12MY89
C
C
C	Copyright Laser-Scan Laboratories Ltd., Cambridge, England
C
CMOD	Projection stuff added				TJH  28-Nov-1988
C	Created						TJH  03-Nov-1987
C
C Routine to write standard IFF header entries to the IFF outfile
C
	IMPLICIT NONE
C
C Parameters:
	INCLUDE         'LSL$CMNDTI:DTIPAR.PAR'
	INCLUDE		'LSL$CMNDTICONTOUR:PARAMS.PAR'
C
C Common:
	INCLUDE	  'LSL$CMNDTICONTOUR:ANNOT.CMN'
	INCLUDE	  'LSL$CMNDTICONTOUR:COMMAND.CMN'
	INCLUDE	  'LSL$CMNDTICONTOUR:CONTR.CMN'
	INCLUDE   'LSL$CMNDTICONTOUR:IFCTRL.CMN'
	INCLUDE   'LSL$CMNDTICONTOUR:MAPARE.CMN'
	INCLUDE   'LSL$CMNDTICONTOUR:SMTCMN.CMN'
	INCLUDE   'LSL$DTMCREATESYS:DTMJPI.CMN'
	INCLUDE   'LSL$CMNDTI:DTIHDR.CMN'
	INCLUDE   'LSL$CMNDTI:DTIPROJ.CMN'
	INCLUDE   'LSL$CMNLSL:EXPC.CMN'
	INCLUDE   'LSL$CMNIFF:IFFHAN.CMN'
	INCLUDE   'LSL$CMNIFF:MD2DES.CMN'
	INCLUDE   'LSL$CMNIFF:MHDEF.CMN'
C
C Workspace:
	INTEGER*2       I,J		! tmp. variables
	REAL		CPARR(4,4)	! corner points
	REAL		CCARR(2,10)	! calib coeffs
	DATA		CCARR/0.0,1.0,8*0.0,
     &			      2*0.0,1.0,7*0.0/
C
C ......................................................................
C Put the standard stuff in
	CALL IFFRA(RANGE)
	CALL IFFHI
	CALL IFFMH(MHARR, MHLEN)
C
C Set the MD flag to say that we have a set type 2 Map Descriptor
	MATV2=2
C
C Put the origin offset into the OO field of the MD
	IF (UNITS.EQ.UNITS_DTI) THEN
	   MD2LOC(1)=XOFF
	   MD2LOC(2)=YOFF
	ELSEIF (UNITS.EQ.UNITS_MET) THEN
	   MD2LOC(1)=X_OFFSET(DTILUN)+XOFF
	   MD2LOC(2)=Y_OFFSET(DTILUN)+YOFF
	ELSEIF (UNITS.EQ.UNITS_PROJ) THEN
	   MD2LOC(1)=DTIPROJ_ORIGIN(1,1)+XOFF
	   MD2LOC(2) = DTIPROJ_ORIGIN(2,1)+YOFF
	ELSE
	   MD2LOC(1)=LONORI(DTILUN)+XOFF
	   MD2LOC(2)=LATORI(DTILUN)+YOFF
	ENDIF
C
	MD2SCL    = IFF_SCALE			       ! scale
C
	IF (HAD_PROJ_RECORD(DTILUN)) THEN
	   MD2PRJ    = DTIPROJ_PROJECTION(DTILUN)      ! projection
	   MD2UNT    = DTIPROJ_UNITS(DTILUN)           ! units
	   MD2SPH    = DTIPROJ_SPHEROID(DTILUN)        ! spheroid
C
	   MD2USP(1) = DTIPROJ_USER_SPHEROID(1,DTILUN) ! user spheroid
	   MD2USP(2) = DTIPROJ_USER_SPHEROID(2,DTILUN) ! parameters
C
	   DO 10 I=1,15                                ! proj. params
	      MD2PAR(I) = DTIPROJ_PROJ_PARAMS(I,DTILUN)
10	   CONTINUE
	ENDIF
	CALL IFFMD(MD2ARR,MD2LEN)
C
C Make a suitable NS entry
	I=INDEX(IMAGNAME,']')
	CALL EXPAND
     &  ('Created by %S, using %S',
     &            USERNAME(1:USERLEN),IMAGNAME(I+1:IMAGELEN))
	IF (SMTNUM.GT.0) THEN 
	   CALL APPEND(' with %N smoothing iterations',SMTNUM)
	ENDIF
	CALL IFFNS(EXPBUF)
	CALL IFFCC(CCARR)
	CPARR(1,1)=0.0
	CPARR(2,1)=YLEN
	CPARR(1,2)=0.0
	CPARR(2,2)=0.0
	CPARR(1,3)=XLEN
	CPARR(2,3)=0.0
	CPARR(1,4)=XLEN
	CPARR(2,4)=YLEN
	DO 30 I=1,4
	   DO 20 J= 1,2
	      CPARR(J+2,I) = CPARR(J,I)
20	   CONTINUE
30	CONTINUE
	CALL IFFCP(CPARR)
C
C Record position of NO
	LPOSNO=LPOSE
	CALL IFFNO(LAYER,0,0)
C
C put markers in DRCTRL
	INFT = .FALSE.		! not in a feature
	FTNUM = 0		! no features yet
	NIFPTS = 0		! no points yet
	VRTPT = 0		! (and none buffered)
	RETURN
	END
C
