C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1986-07-25 16:21:28.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL FUNCTION READ_FB(CMD)
C
***	MODULE READ_FB
***	IDENT  25JL86
C
C	Copyright Laser Scan Laboratories Ltd, Cambridge, England.
C
C	Author 	: A.T. Timms
C	Created : 17th July 1986 
C
C	Logical function to read input from the function buttons
C	for DTE and return the required command in CMD.
C	Returns .false. for sucess
C
C*******************************************************************
C	The function buttons are defined as :
C		FB 	1	ENLARGE
C		FB 	2	REDUCE
C		FB 	3	CENTRE
C		FB 	4	EDIT
C*******************************************************************
C
	IMPLICIT NONE
C
***	PARAMETER/HERE:DTEPAR/
C
***	COMMON/LSL$CMNVS:IDXPAR/! event flags for TB/FBs
***	COMMON/HERE:TAB/	! event flags for TB/FBs
C
	INTEGER	  	BITS		! bitwise-encoded flags for FBs
	INTEGER		CMD		! command number
	INTEGER		F_BUTTON 	! function button number
C
C...................................................................
C
	READ_FB = .TRUE.
	CALL VSFBWT(F_BUTTON,0)		! turn off last button pressed
C
C If we have got this far a function button should have been pressed 
C FInd out which it was and what to do.
C
	CALL VSFBR4(BITS)
C
	IF ((BITS.AND.2).EQ.2) THEN
	   CALL VSFBWT(2,1)			! light the button
	   CMD = CMD_REDUCE			! FB 2 ==> 'reduce'
	   F_BUTTON = 2
	ELSEIF ((BITS.AND.4).EQ.4) THEN
	   CALL VSFBWT(3,1)			! light the button
	   CMD = CMD_CENTRE			! FB 3 ==> 'centre'
	   F_BUTTON = 3
	ELSEIF ((BITS.AND.8).EQ.8) THEN
	   CALL VSFBWT(4,1)			! light the button
	   CMD = CMD_EDIT			! FB 4 ==> 'edit'
	   F_BUTTON = 4
	ELSE
	   CALL VSFBWT(1,1)			! light the button
	   CMD = CMD_ENLARGE			! FB 1 ==> 'enlarge'
	   F_BUTTON = 1
	ENDIF
C
	READ_FB = .FALSE.			! success
C
	RETURN
	END	
