C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1985-10-03 11:35:04.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE EDIT_CELL(X_DTI,Y_DTI,NEW_HGT,DTI)
C
***	IDENT	03OC85
***	MODULE	EDIT_CELL
C
C	Copyright : Laser-Scan Laboratories, Cambridge, England
C
C	Author	  : Andrew Morris
C	Created   : Oct 1984
C
CMOD	ACM	4-Oct-85
C	Stopped it writing hgt range and introduced distinction
C	between window and global height range
C
	IMPLICIT NONE
C
***	PARAMETER/HERE:DTEPAR/
C
***	COMMON/HERE:DTECMN/
***	COMMON/HERE:TRANS/
C
C parameters in
	INTEGER		X_DTI,Y_DTI	! DTI matrix coords
	INTEGER		NEW_HGT		! new height
C
	INTEGER*2	DTI(NY_DTI,NX_DTI) ! mapped DTI matrix
C
C workspace
	INTEGER		OLD_HGT		! original DTI height
C
C functions
	INTEGER		ICOL		! height colour
C
C::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
C Edits (ie. changes the height of) a single DTI matrix element
C and also checks for current height range extension or invalidation.
C
C DTI coords must be valid
C::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
C
C check for global and window range bounds possibly becomming invalid,
C ie. an old max being lowered or an old min being raised,
C and also for range being otherwise changed, so that colour-coding
C may no longer be valid
C
	OLD_HGT = DTI(Y_DTI,X_DTI)	! existing height
C
C has window minimum height been lowered?
	IF (NEW_HGT.LE.MIN_HGT_WIN) THEN
	  IF (NEW_HGT.LE.-32767) GOTO 10
	  IF (NEW_HGT.NE.MIN_HGT_WIN) NEW_MIN_HGT_WIN = .TRUE.
	  MIN_HGT_WIN = NEW_HGT
	  VALID_MIN_HGT_WIN = .TRUE.
C
C has global minimum height been lowered?
	  IF (NEW_HGT.LE.MIN_HGT) THEN
	    IF (NEW_HGT.NE.MIN_HGT) NEW_MIN_HGT = .TRUE.
	    MIN_HGT = NEW_HGT
	    VALID_MIN_HGT = .TRUE.
	  END IF
10	  CONTINUE
C
C has window minimum height (possibly) been raised?
	ELSE IF (OLD_HGT.LE.MIN_HGT_WIN.AND.NEW_HGT.NE.OLD_HGT) THEN
	  NEW_MIN_HGT_WIN = .TRUE.
	  VALID_MIN_HGT_WIN = .FALSE.
C
C has global minimum height (possibly) been raised?
	  IF (OLD_HGT.LE.MIN_HGT.AND.NEW_HGT.NE.OLD_HGT) THEN
	    NEW_MIN_HGT = .TRUE.
	    VALID_MIN_HGT = .FALSE.
	  END IF
	END IF
C
C has window maximum height been raised?
	IF (NEW_HGT.GE.MAX_HGT_WIN) THEN
	  IF (NEW_HGT.NE.MAX_HGT_WIN) NEW_MAX_HGT_WIN = .TRUE.
	  MAX_HGT_WIN = NEW_HGT
	  VALID_MAX_HGT_WIN = .TRUE.
C
C has global maximum height been raised?
	  IF (NEW_HGT.GE.MAX_HGT) THEN
	    IF (NEW_HGT.NE.MAX_HGT) NEW_MAX_HGT = .TRUE.
	    MAX_HGT = NEW_HGT
	    VALID_MAX_HGT = .TRUE.
	  END IF
C
C has window maximum height (possibly) been lowered?
	ELSE IF (OLD_HGT.GE.MAX_HGT_WIN.AND.NEW_HGT.NE.OLD_HGT) THEN
	  NEW_MAX_HGT_WIN = .TRUE.
	  VALID_MAX_HGT_WIN = .FALSE.
C
C has global maximum height (possibly) been lowered?
	  IF (OLD_HGT.GE.MAX_HGT.AND.NEW_HGT.NE.OLD_HGT) THEN
	    NEW_MAX_HGT = .TRUE.
	    VALID_MAX_HGT = .FALSE.
	  END IF
	END IF
C
C place the new height
	DTI(Y_DTI,X_DTI) = NEW_HGT
C
C redraw cell in new height-colour
	PXARR(1) = 0			! mag = 1
	PXARR(2) = 3			! always 3
	PXARR(3) = X_DTI+DTI_TO_PIX(1,3)	! X pixel coord
	PXARR(4) = Y_DTI+DTI_TO_PIX(2,3)	! Y pixel coord
	PXARR(5) = 1			! No. of columns
	PXARR(6) = 1			! No. of rows
	PXARR(7) = 1			! No. of data words to follow
	COLOUR(1) = ICOL(NEW_HGT)	! colour number
	COLOUR(2) = 0			! data terminator
C
	CALL VSPXWT(PXARR)		! redraw pixel
C
	END

