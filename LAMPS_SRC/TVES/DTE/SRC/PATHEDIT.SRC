	SUBROUTINE PATH_EDIT(P,NPTS,NEW_HGT,EDIT,COORDS,N_EDITS)
C
***	IDENT 16AP85
***	MODULE PATH_EDIT
C
C	Copyright : Laser-Scan Laboratories, Cambridge, England
C
C	Author	  : ACM
C	Created   : Apr 1895
C
	IMPLICIT NONE
C
***	PARAMETER/HERE:DTEPAR/	! has MAXPTS
C
***	COMMON/HERE:DTECMN/	! has FIRST_HGT
C
C parameters in
	INTEGER	NPTS		! No. of vertices
	INTEGER	P(2,NPTS+1)	! DTI coords of vertices
	INTEGER	NEW_HGT		! New height
	LOGICAL	EDIT		! edit heights? (or just count pixels)
	INTEGER	COORDS(2,MAXPTS)! DTI coords of all points edited
	INTEGER	N_EDITS		! No of (potential) edits
C
C workspace
	INTEGER	I_VERTEX
	INTEGER	X1,Y1		! DTI coord I-1
	INTEGER	X2,Y2		! DTI coord I
	INTEGER	XMIN,XMAX	! intersection X range
	INTEGER	YMIN,YMAX	! Y for bottom/top scan line
	INTEGER	XLEFT,XRIGHT	! single "intersection" X range
	INTEGER	I,IX,IY,XA,XB	! working integers
C
	REAL	RX,DRX,DX,DY,G	! working reals
C
C:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
C Changes the height value of all matrix elements along the path
C defined by the NPTS DTI points in P
C:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
C
	CALL VSDEF(2,1,6)	! scrub white polygon outlines
	CALL VSPIC(2)
	CALL VSCLR(2)
C
	CALL VSDEF(2,2,6)
	CALL VSSEL(3)		! show both pics
	CALL VSPIC(1)
	CALL VSGEN
C
	IF(NPTS.EQ.1)THEN
	  IF(EDIT) CALL EDIT_CELL(P(1,1),P(2,1),NEW_HGT,%VAL(FIRST_HGT))
	  COORDS(1,1) = P(1,1)
	  COORDS(2,1) = P(2,1)
	  N_EDITS = 1
	  GOTO 70				! return
	END IF
C
	N_EDITS = 0
	X2 = P(1,1)
	Y2 = P(2,1)
	DO 999 I_VERTEX = 2,NPTS
	X1 = X2
	Y1 = Y2
	X2 = P(1,I_VERTEX)
	Y2 = P(2,I_VERTEX)
	XMIN = MIN0(X1,X2)			! get X and Y DTI ranges
	XMAX = MAX0(X1,X2)
	YMIN = MIN0(Y1,Y2)
	YMAX = MAX0(Y1,Y2)
	DX = X2-X1
	DY = Y2-Y1
C
	IF (DX.EQ.0) THEN
	  IF (I_VERTEX.GT.2) Y1 = Y1+ISIGN(1,Y2-Y1)
	  DO 1 IY = Y1,Y2,ISIGN(1,Y2-Y1)
	  IF (EDIT) CALL EDIT_CELL(XMIN,IY,NEW_HGT,%VAL(FIRST_HGT))
	  N_EDITS = N_EDITS+1
	  COORDS(1,N_EDITS) = XMIN
1	  COORDS(2,N_EDITS) = IY
	ELSE IF (DY.EQ.0) THEN
	  IF (I_VERTEX.GT.2) X1 = X1+ISIGN(1,X2-X1)
	  DO 2 IX = X1,X2,ISIGN(1,X2-X1)
	  IF (EDIT) CALL EDIT_CELL(IX,YMIN,NEW_HGT,%VAL(FIRST_HGT))
	  N_EDITS = N_EDITS+1
	  COORDS(1,N_EDITS) = IX
2	  COORDS(2,N_EDITS) = YMIN
	ELSE
	  G = DX/DY
	  RX = X1 - 0.5*SIGN(1.0,DY)*G
	  DRX = ABS(G)*SIGN(1.0,DX)
	  DO 40 IY = Y1,Y2,ISIGN(1,Y2-Y1)
C
	  IF (G.GT.0) THEN
	    XA = NINT(RX)			! round up
	    XB = NINT(RX+DRX-0.001)		! round down
	  ELSE
	    XA = NINT(RX-0.001)			! round down
	    XB = NINT(RX+DRX)			! round up
	  END IF
C
	  XLEFT = MAX0(MIN0(XA,XB),XMIN)
	  XRIGHT= MIN0(MAX0(XA,XB),XMAX)
C
	  IF (DX.GT.0) THEN
	    IF (I_VERTEX.GT.2.AND.IY.EQ.Y1) XLEFT = XLEFT+1
	    DO 3 IX = XLEFT,XRIGHT
	    N_EDITS = N_EDITS+1
	    IF (EDIT) CALL EDIT_CELL(IX,IY,NEW_HGT,%VAL(FIRST_HGT))
	    COORDS(1,N_EDITS) = IX
3	    COORDS(2,N_EDITS) = IY
	  ELSE
	    IF (I_VERTEX.GT.2.AND.IY.EQ.Y1) XRIGHT = XRIGHT-1
	    DO 4 IX = XRIGHT,XLEFT,-1
	    N_EDITS = N_EDITS+1
	    IF (EDIT) CALL EDIT_CELL(IX,IY,NEW_HGT,%VAL(FIRST_HGT))
	    COORDS(1,N_EDITS) = IX
4	    COORDS(2,N_EDITS) = IY
	  END IF
C
	  RX = RX+DRX
40	  CONTINUE				! loop for next scan row
	END IF
C
999	CONTINUE				! loop for next segment
C
70	END
