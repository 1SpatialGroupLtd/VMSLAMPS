C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1987-02-18 14:14:32.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE BARCHART(DTI)
C
***	IDENT	17FE87
***	MODULE	BARCHART
C
C	Copyright : Laser-Scan Laboratories, Cambridge, England
C
C	Author	  : Andrew Morris
C	Created   : Dec 1984
C
	IMPLICIT NONE
C
***	PARAMETER/HERE:DTEPAR/			! has NCOLS
C
***	COMMON/HERE:DTECMN/			! has XCUR_MIN, etc.
***	COMMON/LSL$CMNVIO:EXPC/			! has EXPDSC
C
C parameters in
	INTEGER*2	DTI(NY_DTI,NX_DTI)	! mapped DTI array
C
C workspace
	INTEGER		ICOL_MIN,ICOL_MAX	! min and max col codes
	INTEGER		COL			! colour number
	INTEGER		I,J			! loop counters
	INTEGER		NVIZ(0:NCOLS-1)	! number of each colour visible
	INTEGER		X_DTI,Y_DTI		! DTI coords
	INTEGER		HGT			! DTI height
	INTEGER		TOTVIZ			! total number visible
	INTEGER		MAXVIZ			! max number visible
	INTEGER		NBARS			! No. of bars
	INTEGER		MISSING			! No. of missing bars
	INTEGER		HMIN_SIG,HMAX_SIG	! SIGMA visible hgt rnge
	INTEGER		NULLS			! number of Null els
	INTEGER		PC			! % value
	INTEGER		DPC			! step in % value
	INTEGER		NPC			! num of % labels
	INTEGER		MAXPC			! max % occupied
	INTEGER		LAST_HGT		! ...
C
	REAL		XRANGE_SIG,YRANGE_SIG	! SIGMA coord ranges
	REAL		BAR_WID			! bar width
	REAL		HGT_FACTOR		! bar height factor
	REAL		X,Y			! SIGMA real coords
	REAL		DX,DY			! real coord increments
	REAL		X_STA,Y_STA		! bar lower left coords
	REAL		X_FIN,Y_FIN		! bar upper right coords
C
C functions
	INTEGER		ICOL			! colour code
	INTEGER		BASE_HGT		! inverse func to ICOL
C
C:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
C Displays a bar-chart on the SIGMA, showing the proportion of each
C visible colour (height interval) within the current window and visible
C height limits set.
C
C Null heights (<= -32767) are displayed in white on the map, but are
C not indicated in the barchart, exept by a count "Null ELEMENTS : n"
C
C The left and right-most colour-bar height bounds are not shown on the
C X axis because these heights may not in fact be within the height
C range, as indicated below the X axis
C:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
C
C	CALL VSINIT(7)		! re-initialise SIGMA
C	CALL VSALOF		! turn off alpha cursor
C	CALL VSDEF(1,6,0)	! set up picture 1 with 6 bit planes
C	CALL VSPIC(1)		! draw to pic 1
	CALL VSZOOM(8,0,0)
	CALL VSCLR(1)		! clear pic 1
	CALL VSSIZE(XRANGE_SIG,YRANGE_SIG)	! find screen dimensions
C
C set axes origin to near lower left corner
	CALL VSORGN(-0.8*XRANGE_SIG/2,-0.6*YRANGE_SIG/2)
C
C draw and annotate Y axis
	CALL VSCOL(10)			! draw axes in green
	X = 0
	Y = 0
	CALL VSMTO(X,Y)
	Y = 0.7*YRANGE_SIG
	CALL VSLTO(X,Y)			! draw line for y axis
C
	X = -0.06*XRANGE_SIG
	Y = YRANGE_SIG/10.0
	CALL VSMTO(X,Y)
	CALL VSCOL(10)			! green
	CALL VSCHSZ(1,1)		! set to size 2, direction up
	CALL VSCHRS('PERCENTAGE OF VISIBLE AREA COVERED')
C
C draw X axis
	X = 0
	Y = 0
	CALL VSMTO(X,Y)
	CALL VSCOL(10)			! green
	X = 0.9*XRANGE_SIG
	CALL VSLTO(X,Y)			! draw line for X axis
	X = 0.4*XRANGE_SIG
	Y = -0.15*YRANGE_SIG
	CALL VSMTO(X,Y)
	CALL VSCHSZ(1,0)		! set  to size 2, horizontal
	CALL VSCHRS('HEIGHT')		! anotate X axis
	CALL VSGEN			! flush SIGMA drawing buffer
C
C find how many of each colour are visible
	DO 10 COL = 0,NCOLS-1		! zero counts
10	NVIZ(COL) = 0
C
	HMIN_SIG = 32768
	HMAX_SIG = -32767
	ICOL_MIN = NCOLS-1
	ICOL_MAX = 0
	NULLS = 0
C
	DO 20 X_DTI = XCUR_MIN,XCUR_MAX
	DO 20 Y_DTI = YCUR_MIN,YCUR_MAX
	HGT = DTI(Y_DTI,X_DTI)
	IF (HGT.LT.BOT_VIZ.OR.HGT.GT.TOP_VIZ) THEN
	  IF (HGT.LE.-32767) NULLS = NULLS+1	! count Null elements
	ELSE
	  COL = ICOL(HGT)
	  NVIZ(COL) = NVIZ(COL)+1
	  IF (HGT.LT.HMIN_SIG) THEN
	    HMIN_SIG = HGT
	    ICOL_MIN = MIN0(ICOL_MIN,COL)
	  END IF
	  IF (HGT.GT.HMAX_SIG) THEN
	    HMAX_SIG = HGT
	    ICOL_MAX = MAX0(ICOL_MAX,COL)
	  END IF
	END IF
20	CONTINUE
C
C show visible height range on barchart display
	CALL VSMTO(0.53*XRANGE_SIG,-0.15*YRANGE_SIG)
	CALL VSCOL(10)			! green
	CALL VSCHSZ(1,0)		! size 2 horizontal
	CALL EXPAND('RANGE %N - %N',HMIN_SIG,HMAX_SIG)
	CALL VSCHRS(EXPDSC)
	CALL VSGEN			! flush drawing buffer
C
C show number of Null elements found
	CALL VSMTO(0.0,-0.15*YRANGE_SIG)
	CALL VSCOL(10)			! green
	CALL VSCHSZ(1,0)		! size 2 horizontal
	CALL EXPAND('Null elements : %N;',NullS)
	CALL VSCHRS(EXPDSC)
	CALL VSGEN			! flush drawing buffer
C
C count total number of elements visible, and note max visible
	TOTVIZ = 0
	MAXVIZ = NVIZ(ICOL_MIN)
	DO 30 COL = ICOL_MIN,ICOL_MAX
	IF (NVIZ(COL).GT.MAXVIZ) MAXVIZ = NVIZ(COL)
30	TOTVIZ = TOTVIZ+NVIZ(COL)
C
C check for zero heights visible
	IF (TOTVIZ.EQ.0) THEN
	  CALL VSMTO(0.2*XRANGE_SIG,0.3*YRANGE_SIG)
	  CALL VSCOL(63)		! white
	  CALL VSCHSZ(1,0)		! size 2 horizontal
	  CALL VSCHRS('no heights visible')
	  CALL VSGEN			! flush drawing buffer
	  GOTO 60			! return
	END IF
C
C find number of bars and bar width
	NBARS = (ICOL_MAX-ICOL_MIN)/INJ +1
	IF (NBARS.LE.0) NBARS = 1
	BAR_WID = 0.8*XRANGE_SIG/FLOAT(NBARS)
C
C find bar-height scale factor
	HGT_FACTOR = 0.7*YRANGE_SIG/FLOAT(MAXVIZ)
C
C label X axis and draw bars
	CALL VSCOL(63)
	CALL VSCHSZ(0,3)		! set to size 1, direction down
	DX = -0.1*XRANGE_SIG/20.0
	DY = -0.2*YRANGE_SIG/10.0
	X_STA = 0
	Y_STA = 0
C
	COL = ICOL_MIN
	HGT = BASE_HGT(ICOL_MIN)
C
55	LAST_HGT = HGT			! start loop here for each bar
	HGT = BASE_HGT(COL)
C
C check for gap in range
77	IF(HGT.GT.LAST_HGT+STEP_HGT)THEN
	  LAST_HGT = LAST_HGT+STEP_HGT
	  CALL VSMTO(X_STA,0)
	  CALL VSCOL(10)		! green
	  CALL VSLBY(0,DY)
	  CALL VSMBY(DX,DY)
	  CALL EXPAND('%N',LAST_HGT)
	  CALL VSCOL(63)		! white
	  CALL VSCHRS(EXPDSC)
	  X_STA = X_STA+BAR_WID
	  GOTO 77
	ENDIF
C
C draw bar
	IF (NVIZ(COL).GT.0) THEN
	  CALL VSCOL(COL)
	  Y_FIN = HGT_FACTOR*NVIZ(COL)
	  CALL VSFILL(X_STA,Y_STA,X_STA+BAR_WID,Y_FIN)
	END IF
C
C don't show height at left edge of leftmost bar
	IF (COL.EQ.ICOL_MIN) THEN
	  X_STA = X_STA+BAR_WID
	  GOTO 52
	END IF
C
C show height on X axis
	CALL VSMTO(X_STA,0)
	CALL VSCOL(10)			! green
	CALL VSLBY(0,DY)
	CALL VSMBY(DX,DY)
	CALL EXPAND('%N',HGT)
	CALL VSCOL(63)			! white
	CALL VSCHRS(EXPDSC)
	X_STA = X_STA+BAR_WID
C
52	COL = COL+1			! find next visible colour
	IF (COL.GT.ICOL_MAX) GOTO 60	! finnished?
	IF (NVIZ(COL).EQ.0) GOTO 52
C
	GOTO 55				! loop for next bar
C
60	CALL VSGEN			! flush SIGMA drawing buffer
C
C label Y axis
	IF (TOTVIZ.EQ.0) THEN
	  MAXPC = 100
	ELSE
	  MAXPC = NINT(100*MAXVIZ/FLOAT(TOTVIZ))
	END IF
	DPC = (MAXPC-1)/10+1		! show <= 10 % levels
	NPC = MAXPC/DPC
	PC = 0
	Y = 0
	DY = 0.7*YRANGE_SIG*DPC/FLOAT(MAXPC)
C
	DO 65 I = 0,NPC
	CALL VSMTO(0,Y)
	CALL VSCOL(10)			! green
	CALL VSLBY(-0.2*XRANGE_SIG/20.0,0)
	CALL VSMTO(-0.06*XRANGE_SIG,Y-0.05)
	CALL VSCOL(63)			! white
	CALL VSCHSZ(0,0)		! set to size 1, horizontal
	CALL EXPAND('%I4%%',PC)
	CALL VSCHRS(EXPDSC)
	PC = PC+DPC
65	Y = Y+DY
C
	CALL VSGEN			! flush SIGMA drawing buffer
	BAR_CHART = .TRUE.
70	END
