C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1985-04-15 19:03:02.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	INTEGER*2 FUNCTION NSEWAV(X,Y,DTI)
C
***	IDENT	04AP85
***	MODULE	NSEWAV
C
C	Copyright : Laser-Scan Laboratories, Cambridge, England
C
C	Author	  : Andrew Morris
C	Created   : 4-Apr-1984
C
	IMPLICIT NONE
C
***	COMMON/HERE:DTECMN/	! contains NX_DTI, etc.
C
C arguments
	INTEGER		X,Y			! DTI coords
	INTEGER*2	DTI(NY_DTI,NX_DTI)	! DTI matrix
C
C workspace
	INTEGER*2	HN,HS,HE,HW	! hgts of N,S,E,W neighbours
	INTEGER*2	HNE,HNW,HSE,HSW	! hgts of NE etc. neighbours
	REAL		AVX,AVY		! N-S & E-W averages
	REAL		AVNSEW,AVDIAG
	LOGICAL		X_INSIDE,Y_INSIDE
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
C	Returns average height of all 9 neighbours of DTI element (X,Y),
C	taking into account undefined heights and DTI matrix edges.
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
	X_INSIDE = X.GT.1.AND.X.LT.NX_DTI
	Y_INSIDE = Y.GT.1.AND.Y.LT.NY_DTI
C
	IF (X_INSIDE.AND.Y_INSIDE) THEN
	  HNE = DTI(Y+1,X+1)
	  HNW = DTI(Y+1,X-1)
	  HSE = DTI(Y-1,X+1)
	  HSW = DTI(Y-1,X-1)
	  IF (HNE.GT.-32767.AND.HNW.GT.-32767.AND.
     +	      HSE.GT.-32767.AND.HSW.GT.-32767) THEN
	    AVDIAG = (HNE+HNW+HSE+HSW)/4.0
	  ELSE
	    AVDIAG = DTI(Y,X)
	  END IF
	ELSE
	  AVDIAG = DTI(Y,X)
	END IF
C
	IF (X_INSIDE) THEN
	  HE = DTI(Y,X+1)
	  HW = DTI(Y,X-1)
	  IF (HE.GT.-32767.AND.HW.GT.-32767) THEN
	    AVX = (HE+HW)/2.0
	  ELSE
	    AVX = DTI(Y,X)
	  END IF
	ELSE
	  AVX = DTI(Y,X)
	END IF
C
	IF (Y_INSIDE) THEN
	  HN = DTI(Y+1,X)
	  HS = DTI(Y-1,X)
	  IF (HN.GT.-32767.AND.HS.GT.-32767) THEN
	    AVY = (HN+HS)/2.0
	  ELSE
	    AVY = DTI(Y,X)
	  END IF
	ELSE
	  AVY = DTI(Y,X)
	END IF
C
	AVNSEW = (AVX+AVY)/2.0
C
	NSEWAV = NINT((AVDIAG+AVNSEW)/2.0)
C
	END
