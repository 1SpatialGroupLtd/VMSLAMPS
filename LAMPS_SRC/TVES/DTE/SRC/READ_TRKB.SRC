C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1986-08-08 09:39:28.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL FUNCTION READ_TRKB(HAD_MVMT)
C
***	MODULE READ_TRKB
***	IDENT  08AU86
C
C	Copyright Laser Scan Laboratories Ltd, Cambridge, England.
C
C	Author 	: A.T. Timms
C	Created : 18th July 1986 
C
C
C	Logical function to read input from the trackerball
C	and return the new cursor position to XCUR YCUR
C	in DTECMN.CMN
C	Function returns false for sucess and returns HAD_MVMT
C	if there has been trackerball movement
C
	IMPLICIT NONE
C
***	COMMON/LSL$CMNVS:IDXPAR/	! event flags for TB/FBs
***	COMMON/HERE:TAB/		! event flags for TB/FBs
***	COMMON/HERE:DTECMN/		! for XCUR,YCUR
C
***	PARAMETER/HERE:DTEPAR/
C
C
	REAL		DX, DY		! trackerball offsets
	REAL		TRKB_SCALX	! trackerball scaling factor X
	REAL		TRKB_SCALY	! trackerball scaling factor Y
	LOGICAL		HAD_MVMT	! had trackerball movement ?
C
C...................................................................
C
	READ_TRKB = .TRUE.
C
C get the movement of the TRKB since last call of VSTBRD
	CALL VSTBRD( DX, DY )
	IF (.NOT.WINDOW_SET) GOTO 10	! no window yet...ignore
C
C get trackerball scaling factor 
C (window range/display size) x 10 (which means units are mm on 
C trakerball) divided by the magnification 
C
C Unless we have flooding in which case ignore the magnification
	TRKB_SCALX = ((DX_DTI/X_DISP)*10)/(MAG)
	TRKB_SCALY = ((DY_DTI/Y_DISP)*10)/(MAG)
	IF (GOT_FLOOD) TRKB_SCALX = ((DX_DTI/X_DISP)*5)
	IF (GOT_FLOOD) TRKB_SCALY = ((DY_DTI/Y_DISP)*5)
C
C see if there is any appreciable movement
	IF(ABS((DX)*TRKB_SCALX).GT.1.OR.ABS((DY)*TRKB_SCALY).GT.1)THEN 
	  HAD_MVMT = .TRUE.
	ELSE
	  HAD_MVMT = .FALSE.
	  GOTO 10
	ENDIF
C
C Remember the previous position
	PRE_XCUR = XCUR
	PRE_YCUR = YCUR
C
C and add the offsets to the current cursor position
	XCUR = XCUR + INT((DX)*TRKB_SCALX)
	YCUR = YCUR + INT((DY)*TRKB_SCALY)
C
10	READ_TRKB = .FALSE.		! success
C
	RETURN
	END	
