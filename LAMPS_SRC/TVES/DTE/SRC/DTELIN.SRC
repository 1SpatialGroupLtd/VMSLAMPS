C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1985-01-31 15:10:18.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE DTELIN(X1,Y1,X2,Y2,ON)
C
***	IDENT 31JA85
***	MODULE DTELIN
C
C	Copyright : Laser-Scan Laboratories, Cambridge, England
C
C	Author	  : ACM
C	Created   : Nov 1984
C
	IMPLICIT NONE
C
***	PARAMETER/HERE:DTEPAR/
C
C***	COMMON/HERE:TAB/
***	COMMON/HERE:DTECMN/		! has PXARR
***	COMMON/HERE:TRANS/		! has DTI_TO_PIX
C
C parameters in
	INTEGER		X1,Y1,X2,Y2	! pixel coords of line ends
	LOGICAL		ON		! draw or scrub line?
C
C workspace
	INTEGER		XMIN,XMAX	! X range
	INTEGER		YMIN,YMAX	! Y range
	INTEGER		YLINE		! Y for current scan line
	INTEGER		XLEFT,XRIGHT	! X "intersection" range
	INTEGER		XA,XB		! working integers
	INTEGER		COL		! =1 for draw, 0 for undraw
	INTEGER		I		! counter
C
	REAL		RX,DX,DY,G	! working reals
C
C:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
C Draws/undraws a line from one pixel to another on the SIGMA, picture 2
C:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
C
	CALL VSDEF(2,1,6)		! define pic 2 as plane 6
	CALL VSPIC(2)			! draw to pic 2
	COL = 0				! undraw?
	IF (ON) COL = 1			! or draw?
	XMIN = MIN0(X1,X2)		! get X and Y DTI ranges
	XMAX = MAX0(X1,X2)
	YMIN = MIN0(Y1,Y2)
	YMAX = MAX0(Y1,Y2)
	DX = X2-X1
	DY = Y2-Y1
C
	IF (DX.EQ.0) THEN
	  PXARR(1) = 0				! mag = 1
	  PXARR(2) = 3				! always 3
	  PXARR(3) = XMIN+DTI_TO_PIX(1,3)	! X pixel coord
	  PXARR(4) = YMIN+DTI_TO_PIX(2,3)	! Y pixel coord
	  PXARR(5) = 1				! No. of columns
	  PXARR(6) = YMAX-YMIN+1		! No. of rows
	  PXARR(7) = (PXARR(6)+1)/2	! No. of data words to follow
	  DO 10 I = 1,PXARR(6)
10	  COLOUR(I) = COL			! colour number
	  COLOUR(PXARR(6)+1) = 0		! data terminator
	  CALL VSPXWT(PXARR)
	ELSE IF (DY.EQ.0) THEN
	  PXARR(1) = 0				! mag = 1
	  PXARR(2) = 3				! always 3
	  PXARR(3) = XMIN+DTI_TO_PIX(1,3)	! X pixel coord
	  PXARR(4) = YMIN+DTI_TO_PIX(2,3)	! Y pixel coord
	  PXARR(5) = XMAX-XMIN+1		! No. of columns
	  PXARR(6) = 1				! No. of rows
	  PXARR(7) = (PXARR(5)+1)/2	! No. of data words to follow
	  DO 20 I = 1,PXARR(5)
20	  COLOUR(I) = COL			! colour number
	  COLOUR(PXARR(5)+1) = 0		! data terminator
	  CALL VSPXWT(PXARR)
	ELSE
C
C "G" is real dist betw X coords of intersections between line with
C scan-row top line (Y = YLINE + 0.5) and bot line (Y = YLINE - 0.5)
	  G = DX/DY
C
C "RX" is real X coord of int betw line and the scan-row bot line
	  RX = X1 + (YMIN-0.5-Y1)*G
C
	  DO 40 YLINE = YMIN,YMAX
C
C "XA" is DTI X coord of DTI element containing real point (RX,YLINE)
C "XB" is DTI X coord of DTI element containing (RX+G,YLINE)
	  IF (G.GT.0) THEN
	    XA = NINT(RX)			! round up
	    XB = NINT(RX+G-0.001)		! round down
	  ELSE
	    XA = NINT(RX-0.001)			! round down
	    XB = NINT(RX+G)			! round up
	  END IF
C
C "XLEFT" and "XRIGHT" are the DTI X coords of the left- and right-most
C DTI elements which are intersected by the line from P1 to P2
	  XLEFT = MAX0(MIN0(XA,XB),XMIN)
	  XRIGHT= MIN0(MAX0(XA,XB),XMAX)
C
	  PXARR(1) = 0				! mag = 1
	  PXARR(2) = 3				! always 3
	  PXARR(3) = XLEFT+DTI_TO_PIX(1,3)	! X pixel coord
	  PXARR(4) = YLINE+DTI_TO_PIX(2,3)	! Y pixel coord
	  PXARR(5) = XRIGHT-XLEFT+1		! No. of columns
	  PXARR(6) = 1				! No. of rows
	  PXARR(7) = (PXARR(5)+1)/2	! No. of data words to follow
	  DO 30 I = 1,PXARR(5)
30	  COLOUR(I) = COL			! colour number
	  COLOUR(PXARR(5)+1) = 0		! data terminator
	  CALL VSPXWT(PXARR)
	  RX = RX+G
40	  CONTINUE				! loop for next scan row
	END IF
C
	CALL VSDEF(2,2,6)
	CALL VSSEL(3)		! show pics 1 and 2
	CALL VSPIC(1)		! restore subsequent drawing to pic 1
	CALL VSGEN		! flush drawing buffer
	END
