C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1985-07-22 12:06:06.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	INTEGER FUNCTION GET_DTI_COORDS(X_DTI,Y_DTI,PROMPT,WHOLE_MAP)
C
***	IDENT	22JL85
***	MODULE	GET_DTI_COORDS
C
C	Copyright : Laser-Scan Laboratories, Cambridge, England
C
C	Author	  : Andrew Morris
C	Created   : Oct 1984
C
	IMPLICIT NONE
C
C parameters in
	CHARACTER*(*)	PROMPT		! prompt string
	LOGICAL		WHOLE_MAP	! coords valid over whole DTI?
C
C parameters out
	INTEGER		X_DTI,Y_DTI	! DTI coords
C
C functions
	INTEGER		READ_DTI_COORDS	! read DTI coords
C
C:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
C Prompts for and obtains a DTI point from the keyboard or table cursor
C
C Function result returns	-1 for error,
C				 0 for success,
C				 1 for ABANDON command,
C				 2 for END command
C:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
C
10	CALL WAIT_INPUT(PROMPT)
C
	GET_DTI_COORDS
     +	= READ_DTI_COORDS(X_DTI,Y_DTI,WHOLE_MAP,LEN(PROMPT))
C
C if error, try again if error is not too serious
	IF (GET_DTI_COORDS.EQ.-1) GOTO 10	! bad coords?
	IF (GET_DTI_COORDS.GE.1) GOTO 20	! abandon?
	WRITE(*,FMT='(1H+,A)')CHAR(7)
C
C move SIGMA cursor to this point
	CALL SIGCSWT(X_DTI,Y_DTI,.FALSE.)
C
20	END
