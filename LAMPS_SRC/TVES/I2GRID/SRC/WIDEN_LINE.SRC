C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1993-07-14 12:10:08.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE WIDEN_LINE(NPTS)
C
***	IDENT 14JL93
***	MODULE WIDEN_LINE
C
C	Copyright Laser-Scan Ltd., Cambridge, England
C	Created   13DE88
C	Author    DRC
C
CMOD	Increase TEMPX etc. from 4096 to 32767		JB 17-Jan-1992

C	Routine for I2GRID to convert a linear feature into
C	a long thin area of width WIDTH
C
	IMPLICIT NONE
C
***	COMMON/HERE:CULTRE/
C
C	Argument
	INTEGER*4	NPTS		!number of pts in linear feature
C
	REAL		OFFPT(2)     	!offset x,y points
	REAL		TEMPX(MAXPTS)	!temporary arrays
	REAL		TEMPY(MAXPTS)	!for offset IFF coordinates
	REAL		SAVOFF(2,2)	!stored offset line
	REAL		EXTSEG(2,2)	!first or last segment
	INTEGER*4	NEWPTS		!new number of pts. for feature
	INTEGER*4	I		!counter
	LOGICAL		HADOFF		!had offset
C
C---------------------------------------------------------------------------
C
	NEWPTS = 1
	OFFDIS = WIDTH*0.5
	HADOFF = .FALSE.
C
100	DO 500 I=2,NPTS
C
	   IF(I.EQ.2)THEN		!first coordinate point
	     EXTSEG(1,1)=XPTS(1)
	     EXTSEG(2,1)=YPTS(1)
	     EXTSEG(1,2)=XPTS(I)
	     EXTSEG(2,2)=YPTS(I)
	     CALL OFFSET(SAVOFF,EXTSEG,.TRUE.,.FALSE.,HADOFF,OFFPT)
	     GOTO 400
	   ENDIF
C
	   EXTSEG(1,1)=XPTS(I-1)
	   EXTSEG(2,1)=YPTS(I-1)
	   EXTSEG(1,2)=XPTS(I)
	   EXTSEG(2,2)=YPTS(I)
	   CALL OFFSET(SAVOFF,EXTSEG,.FALSE.,.FALSE.,HADOFF,OFFPT)
C
400	   TEMPX(NEWPTS)=OFFPT(1)
	   TEMPY(NEWPTS)=OFFPT(2)
	   NEWPTS=NEWPTS+1
C
500	CONTINUE
C
C	Last coordinate point
	EXTSEG(1,1)=XPTS(I)
	EXTSEG(2,1)=YPTS(I)
	CALL OFFSET(SAVOFF,EXTSEG,.FALSE.,.TRUE.,HADOFF,OFFPT)
C
	TEMPX(NEWPTS)=OFFPT(1)
	TEMPY(NEWPTS)=OFFPT(2)
	NEWPTS=NEWPTS+1
	HADOFF=.FALSE.
C
600	DO 800 I=NPTS-1,1,-1
C
	   IF(I.EQ.NPTS-1)THEN
	     EXTSEG(1,1)=XPTS(NPTS)
	     EXTSEG(2,1)=YPTS(NPTS)
	     EXTSEG(1,2)=XPTS(I)
	     EXTSEG(2,2)=YPTS(I)
	     CALL OFFSET(SAVOFF,EXTSEG,.TRUE.,.FALSE.,HADOFF,OFFPT)
	     GOTO 700
	   ENDIF
C
	   EXTSEG(1,1)=XPTS(I+1)
	   EXTSEG(2,1)=YPTS(I+1)
	   EXTSEG(1,2)=XPTS(I)
	   EXTSEG(2,2)=YPTS(I)
	   CALL OFFSET(SAVOFF,EXTSEG,.FALSE.,.FALSE.,HADOFF,OFFPT)
C
700	   TEMPX(NEWPTS)=OFFPT(1)
	   TEMPY(NEWPTS)=OFFPT(2)
	   NEWPTS=NEWPTS+1
C
800	CONTINUE
C
C	Last coordinate point
C
	EXTSEG(1,1)=XPTS(1)
	EXTSEG(2,1)=YPTS(1)
	CALL OFFSET(SAVOFF,EXTSEG,.FALSE.,.TRUE.,HADOFF,OFFPT)
C
	TEMPX(NEWPTS)=OFFPT(1)
	TEMPY(NEWPTS)=OFFPT(2)
C
C---------------------------------------------------------------------
C	Return modified number of points
	NPTS=NEWPTS
C
C	Transfer coordinates to main array	   
	DO 900 I=1,NPTS
	   XPTS(I)=TEMPX(I)
	   YPTS(I)=TEMPY(I)
900	CONTINUE
C
C	Close the area
	NPTS=NPTS+1
	XPTS(NPTS)=XPTS(1)
	YPTS(NPTS)=YPTS(1)
C
999	RETURN
	END

