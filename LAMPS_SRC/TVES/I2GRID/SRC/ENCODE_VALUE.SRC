	SUBROUTINE ENCODE_VALUE(COL,ROW)
C
***	IDENT	09JA89
***	MODULE	ENCODE_VALUE
C
C	Copyright : Laser-Scan Laboratories Ltd., Cambridge, England.
C
C	Created					    DRC   12-Dec-1988	
C
C	Subroutine to set the value an output matrix location.
C
	IMPLICIT NONE
C
C
***	COMMON/LSL$CMNDTI:DTIHDR/
C
***	COMMON/HERE:CULTRE/
C
C	Argument
	INTEGER*4		COL		!column 
	INTEGER*4		ROW		!row
C
C	Local
	INTEGER*4		RETVAL		!return code
C	old and new values
	BYTE			NEW_BYTE_VALUE
	BYTE			OLD_BYTE_VALUE
	INTEGER*2		NEW_WORD_VALUE
	INTEGER*2		OLD_WORD_VALUE
	INTEGER*4		NEW_LONG_VALUE
	INTEGER*4		OLD_LONG_VALUE
	REAL*4			NEW_REAL_VALUE
	REAL*4			OLD_REAL_VALUE
C
	EQUIVALENCE		(NEW_BYTE_VALUE,NEW_WORD_VALUE)
	EQUIVALENCE		(OLD_BYTE_VALUE,OLD_WORD_VALUE)
C
C	Functions
	INTEGER*4		DTI_READ_DATA	!to read a data value
	INTEGER*4		DTI_WRITE_DATA	!to write a data value
C
C-----------------------------------------------------------------------
C	Check that the column and row values lie within
C	the matrix extents
	IF(COL.LT.1.OR.COL.GT.X_EXTENT(1).OR.
     &     ROW.LT.1.OR.ROW.GT.Y_EXTENT(1))GOTO 999
C
C-----------------------------------------------------------------------
C	Deal with each data type separately
	GOTO(100,200,300,400,500)DATA_TYPE(1)
C
C-----------------------------------------------------------------------
C	BYTE data
100     NEW_WORD_VALUE=NINT(VAL)
C
C	If we are not automatically encoding with the current
C	value, we must first retrieve the existing value
	IF(PRIORITY.NE.2)THEN	
	  RETVAL=DTI_READ_DATA(1,OLD_BYTE_VALUE,COL,ROW)
	  IF(.NOT.RETVAL)THEN
	    CALL LSL_PUTMSG(RETVAL)
	    GOTO 999
	  ENDIF
C
	  IF     (PRIORITY.EQ.1)THEN	!first value
	    IF(OLD_BYTE_VALUE.NE.WORD_BACKGROUND)GOTO 999
	  ELSE IF(PRIORITY.EQ.3)THEN	!largest value
	    IF((NEW_BYTE_VALUE.LT.OLD_BYTE_VALUE).AND.
     &         (OLD_BYTE_VALUE.NE.WORD_BACKGROUND))GOTO 999
	  ELSE IF(PRIORITY.EQ.4)THEN	!smallest value
	    IF((NEW_BYTE_VALUE.GT.OLD_BYTE_VALUE).AND.
     &         (OLD_BYTE_VALUE.NE.WORD_BACKGROUND))GOTO 999
	  ENDIF
	ENDIF
C
C	Encode with NEW_BYTE_VALUE
	RETVAL=DTI_WRITE_DATA(1,NEW_BYTE_VALUE,COL,ROW)
	IF(.NOT.RETVAL)THEN
	  CALL LSL_PUTMSG(RETVAL)
	ENDIF
	GOTO 999
C
C----------------------------------------------------------------------
C	WORD data
200     NEW_WORD_VALUE=NINT(VAL)
C
C	If we are not automatically encoding with the current
C	value, we must first retrieve the existing value
	IF(PRIORITY.NE.2)THEN	
	  RETVAL=DTI_READ_DATA(1,OLD_WORD_VALUE,COL,ROW)
	  IF(.NOT.RETVAL)THEN
	    CALL LSL_PUTMSG(RETVAL)
	    GOTO 999
	  ENDIF
C
	  IF     (PRIORITY.EQ.1)THEN	!first value
	    IF(OLD_WORD_VALUE.NE.WORD_BACKGROUND)GOTO 999
	  ELSE IF(PRIORITY.EQ.3)THEN	!largest value
	    IF((NEW_WORD_VALUE.LT.OLD_WORD_VALUE).AND.
     &         (OLD_WORD_VALUE.NE.WORD_BACKGROUND))GOTO 999
	  ELSE IF(PRIORITY.EQ.4)THEN	!smallest value
	    IF((NEW_WORD_VALUE.GT.OLD_WORD_VALUE).AND.
     &         (OLD_WORD_VALUE.NE.WORD_BACKGROUND))GOTO 999
	  ENDIF
	ENDIF
C
C	Encode with NEW_WORD_VALUE
	RETVAL=DTI_WRITE_DATA(1,NEW_WORD_VALUE,COL,ROW)
	IF(.NOT.RETVAL)THEN
	  CALL LSL_PUTMSG(RETVAL)
	ENDIF
	GOTO 999
C
C-----------------------------------------------------------------------
C	LONG data
300     NEW_LONG_VALUE=NINT(VAL)
C
C	If we are not automatically encoding with the current
C	value, we must first retrieve the existing value
	IF(PRIORITY.NE.2)THEN	
	  RETVAL=DTI_READ_DATA(1,OLD_LONG_VALUE,COL,ROW)
	  IF(.NOT.RETVAL)THEN
	    CALL LSL_PUTMSG(RETVAL)
	    GOTO 999
	  ENDIF
C
	  IF     (PRIORITY.EQ.1)THEN	!first value
	    IF(OLD_LONG_VALUE.NE.LONG_BACKGROUND)GOTO 999
	  ELSE IF(PRIORITY.EQ.3)THEN	!largest value
	    IF((NEW_LONG_VALUE.LT.OLD_LONG_VALUE).AND.
     &         (OLD_LONG_VALUE.NE.LONG_BACKGROUND))GOTO 999
	  ELSE IF(PRIORITY.EQ.4)THEN	!smallest value
	    IF((NEW_LONG_VALUE.GT.OLD_LONG_VALUE).AND.
     &         (OLD_LONG_VALUE.NE.LONG_BACKGROUND))GOTO 999
	  ENDIF
	ENDIF
C
C	Encode with NEW_LONG_VALUE
	RETVAL=DTI_WRITE_DATA(1,NEW_LONG_VALUE,COL,ROW)
	IF(.NOT.RETVAL)THEN
	  CALL LSL_PUTMSG(RETVAL)
	ENDIF
	GOTO 999
C
C-----------------------------------------------------------------------
C	REAL data
400     NEW_REAL_VALUE=VAL
C
C	If we are not automatically encoding with the current
C	value, we must first retrieve the existing value
	IF(PRIORITY.NE.2)THEN	
	  RETVAL=DTI_READ_DATA(1,OLD_REAL_VALUE,COL,ROW)
	  IF(.NOT.RETVAL)THEN
	    CALL LSL_PUTMSG(RETVAL)
	    GOTO 999
	  ENDIF
C
	  IF     (PRIORITY.EQ.1)THEN	!first value
	    IF(OLD_REAL_VALUE.NE.BACKGROUND_VALUE)GOTO 999
	  ELSE IF(PRIORITY.EQ.3)THEN	!largest value
	    IF((NEW_REAL_VALUE.LT.OLD_REAL_VALUE).AND.
     &         (OLD_REAL_VALUE.NE.BACKGROUND_VALUE))GOTO 999
	  ELSE IF(PRIORITY.EQ.4)THEN	!smallest value
	    IF((NEW_REAL_VALUE.GT.OLD_REAL_VALUE).AND.
     &         (OLD_REAL_VALUE.NE.BACKGROUND_VALUE))GOTO 999
	  ENDIF
	ENDIF
C
C	Encode with NEW_REAL_VALUE
	RETVAL=DTI_WRITE_DATA(1,NEW_REAL_VALUE,COL,ROW)
	IF(.NOT.RETVAL)THEN
	  CALL LSL_PUTMSG(RETVAL)
	ENDIF
	GOTO 999
C
C----------------------------------------------------------------------
C	BIT data
500     NEW_BYTE_VALUE=NINT(VAL)
C
C	If we are not automatically encoding with the current
C	value, we must first retrieve the existing value
	IF(PRIORITY.NE.2)THEN	
	  RETVAL=DTI_READ_DATA(1,OLD_BYTE_VALUE,COL,ROW)
	  IF(.NOT.RETVAL)THEN
	    CALL LSL_PUTMSG(RETVAL)
	    GOTO 999
	  ENDIF
C
	  IF     (PRIORITY.EQ.1)THEN	!first value
	    IF(OLD_BYTE_VALUE.NE.WORD_BACKGROUND)GOTO 999
	  ELSE IF(PRIORITY.EQ.3)THEN	!largest value
	    IF(NEW_BYTE_VALUE.LT.OLD_BYTE_VALUE)GOTO 999
	  ELSE IF(PRIORITY.EQ.4)THEN	!smallest value
	    IF(NEW_BYTE_VALUE.GT.OLD_BYTE_VALUE)GOTO 999
	  ENDIF
	ENDIF
C
C	Encode with NEW_WORD_VALUE
	RETVAL=DTI_WRITE_DATA(1,NEW_BYTE_VALUE,COL,ROW)
	IF(.NOT.RETVAL)THEN
	  CALL LSL_PUTMSG(RETVAL)
	ENDIF
	GOTO 999
C
C------------------------------------------------------------------------
999	RETURN
C
	END
