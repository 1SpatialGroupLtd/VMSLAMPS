	LOGICAL	FUNCTION DECODE_DFAD(TEXT,TEXT_LENGTH)
C
***	IDENT	05DE88
***	MODULE	DECODE_DFAD
C
C	Copyright : Laser-Scan Laboratories Ltd., Cambridge, England.
C
C	Created					    DRC   05-Dec-1988	
C
C	Subroutine to decode a DFAD AC text held in buffer TEXT
C	TYP, ORI, WID, and LEN values are extracted as necessary.
C
	IMPLICIT NONE
C
***	COMMON/HERE:CULTRE/
C
C	Arguments
	INTEGER*4	TEXT_LENGTH	!length of AC text
	CHARACTER*1024  TEXT		!AC text
C
C	Local
	INTEGER*4	ENTRY	
C
C	Function
	INTEGER*4	RDLONG		!to read integer value
C
C---------------------------------------------------------------------
C
C	Assume successful
	DECODE_DFAD = .TRUE.
C
C---------------------------------------------------------------------
C 	Starting with 'typ' entry
	IF(AREA.EQ.1) THEN	
	  ENTRY = 0
	  ENTRY = INDEX(TEXT(:TEXT_LENGTH),
     &                  'TYP')
	  IF(ENTRY.EQ.0)THEN
	    CALL WRITEF
     &      ('TYP entry missing in DFAD feature %N',FSN)
	    CALL WRITEF('Item will not be converted')
	    DECODE_DFAD=.FALSE.
	    GOTO 999
	  ELSE
	    CALL SETAUX(%REF(TEXT),TEXT_LENGTH)
	    CALL SETWIN(ENTRY+3)
	    IF(RDLONG(FTYPE))THEN
	      CALL WRITEF
     &        ('Unable to read TYP value in DFAD feature %N',
     &        FSN)              
	      CALL WRITEF('Item will not be converted')
	      DECODE_DFAD=.FALSE.
	      GOTO 999
	    ENDIF
	  ENDIF
	ENDIF
C
C------------------------------------------------------------------------
C	No more information can be extracted for areas
	IF(FTYPE.EQ.2)GOTO 999
C
	WIDTH = 0
	LENGTH = 0
C
C------------------------------------------------------------------------
C	Orientation value (only if the feature is a point)
	IF(FTYPE.EQ.0)THEN
	  ENTRY = 0
	  ENTRY = INDEX(TEXT(:TEXT_LENGTH),
     &                  'ORI')
	  IF(ENTRY.EQ.0)THEN
	    CALL WRITEF
     &      ('ORI entry missing in DFAD point feature %N',FSN)
	    CALL WRITEF('Item will not be converted')
	    DECODE_DFAD=.FALSE.
	    GOTO 999
	  ELSE
	    CALL SETAUX(%REF(TEXT),TEXT_LENGTH)
	    CALL SETWIN(ENTRY+3)
	    IF(RDLONG(ORIENT))THEN
	      CALL WRITEF
     &        ('Unable to read ORI value in DFAD point feature %N',
     &        FSN)              
	      CALL WRITEF('Item will not be converted')
	      DECODE_DFAD=.FALSE.
	      GOTO 999
	    ENDIF
	  ENDIF
C
C-----------------------------------------------------------------------
C	Length value (only point feature)
	  ENTRY = 0
	  ENTRY = INDEX(TEXT(:TEXT_LENGTH),
     &                  'LTH')
	  IF(ENTRY.EQ.0)THEN
	    CALL WRITEF
     &      ('LTH entry missing in DFAD point feature %N',FSN)
	    CALL WRITEF('Item will not be converted')
	    DECODE_DFAD=.FALSE.
	    GOTO 999
	  ELSE
	    CALL SETAUX(%REF(TEXT),TEXT_LENGTH)
	    CALL SETWIN(ENTRY+3)
	    IF(RDLONG(LENGTH))THEN
	      CALL WRITEF
     &    ('Unable to read LTH value in DFAD point feature %N',
     &      FSN)              
	      CALL WRITEF('Item will not be converted')
	      DECODE_DFAD=.FALSE.
	      GOTO 999
	    ENDIF
	  ENDIF
	ENDIF
C
C-------------------------------------------------------------------
C	Width value
	ENTRY = 0
	ENTRY = INDEX(TEXT(:TEXT_LENGTH),
     &                  'WID')
	IF(ENTRY.EQ.0)THEN
	  IF(FTYPE.EQ.0)THEN
            CALL WRITEF
     &      ('WID entry missing in DFAD point feature %N',FSN)
	  ELSE
            CALL WRITEF
     &      ('WID entry missing in DFAD linear feature %N',FSN)
	  ENDIF
	  CALL WRITEF('Item will not be converted')
	  DECODE_DFAD=.FALSE.
	  GOTO 999
	ELSE
	  CALL SETAUX(%REF(TEXT),TEXT_LENGTH)
	  CALL SETWIN(ENTRY+3)
	  IF(RDLONG(WIDTH))THEN
	    IF(FTYPE.EQ.0)THEN
	      CALL WRITEF
     &        ('Unable to read WID value in DFAD point feature %N',
     &        FSN)              
	    ELSE	   
	      CALL WRITEF
     &        ('Unable to read WID value in DFAD point feature %N',
     &        FSN)              
	    ENDIF
	    CALL WRITEF('Item will not be converted')
	    DECODE_DFAD=.FALSE.
	    GOTO 999
	  ENDIF
	ENDIF
C	    
        IF(FTYPE.EQ.0)WIDTH = WIDTH*2		!2m increment
        IF(WIDTH.GT.0) THEN
          WIDEN = .TRUE.
        ELSE
          WIDEN = .FALSE.
        ENDIF
C
	IF(LENGTH.GT.0)WIDEN =.TRUE.
C
C----------------------------------------------------------------------
C
999	RETURN
C
	END
