	SUBROUTINE PRESET_CMD
C
***    	MODULE PRESET_CMD
***    	IDENT 19JA89
C
C      	Copyright LaserScan Laboratories Ltd., Cambrdige, England	
C      	Author D Catlow   Created July 84.
CMOD	Allow signed preset value to be specified  MWSR	19-Jan-1989
C
C      	Subroutine to preset the output values for features with
C      	the specified attribute (NUMBER) and associated values
C      	eg. features with a particular feature code	
C 
	IMPLICIT NONE
C
***	PARAMETER/HERE:BELLS/
***	COMMON/HERE:CULTRE/
***	COMMON/LSL$CMNLSL:CMDCOM/
C
C	Locals
	REAL		CONSTANT	!preset value
	INTEGER*4	CMD		!command number
	INTEGER*4	I		!counter
	INTEGER*4	NUMBER		!attribute qualifier
	INTEGER*4	VALUE1,VALUE2	!temporary store for
C					!attribute values
	INTEGER*2	PTR		!saved decode pointer
	BYTE		CH		!single character
	LOGICAL		HAD_CONSTANT
	LOGICAL		HAD_VALUE
C
C	Function
	INTEGER*4	RDCOMM		!read a command
	LOGICAL		RDCHS		!read next character
	LOGICAL		RDREAL		!read REAL
	LOGICAL		RDLONG		!to read integer
C
	EXTERNAL	ATTRIBUTE_CMD_TABLE
C
C---------------------------------------------------------------------
C	Check for a valid qualifier
	CMD = RDCOMM(ATTRIBUTE_CMD_TABLE)
	IF(CMD.LE.0)THEN
	  CALL WRITEF('%S Specifying command PRESET',ERRBELL)
	  CALL WRITEF('Valid qualifiers are FC or FSN')
	  GOTO 999
	ENDIF
C
	NUMBER=CMD
C
C---------------------------------------------------------------------
C
	HAD_CONSTANT = .FALSE.		!not had final constant val
	HAD_VALUE = .FALSE.		!not yet had attribute value
C
C	Quickly check if '=' and associated value is in command line
C	This avoids corrupting SET_ARRAY
	CALL DCPSAV(PTR)			
5	IF (RDCHS(CH)) THEN
	  CALL WRITEF('Unexpected end of line')
	  CALL WRITEF('Missing = delimiter')
	  GOTO 999
	ELSE
	  IF (CH.NE.'=')GOTO 5
	  IF (RDCHS(CH)) THEN
	    CALL WRITEF('Unexpected end of line')
	    CALL WRITEF('Missing final preset value')
	    GOTO 999
	  END IF
C	  IF (CH.LT.47.OR.CH.GT.57) THEN
C	    CALL WRITEF('Error on command line')
C	    CALL WRITEF('Missing final preset value')
C	    GOTO 999
C	  END IF
C
C	Read final preset value
	  CALL BSCH
	  IF(RDREAL(CONSTANT))THEN
	    CALL WRITEF('Error on command line')
	    CALL WRITEF('Unable to read final preset value')
	    GOTO 999
	  ELSE
	    HAD_CONSTANT = .TRUE.
	    SET_VALUES(NUMBER_CONSTANTS) = CONSTANT
	    GOTO 8
	  END IF
	END IF
C
C*******************************************************************
C	Decode command line up to = delimiter
8	CALL DCPSET(PTR)
10	IF (RDCHS(CH)) THEN
	  CALL WRITEF('Unexpected end of line')
	  GOTO 999
	END IF
C
	IF (CH.EQ.',')GOTO 10		!ignore comma
C
C	Is the character a '=' (ie. preceeding the constant')
	IF (CH.EQ.'=') THEN
	  IF (.NOT.HAD_VALUE) THEN
	    CALL WRITEF('Error on command line')
	    CALL WRITEF('Missing FC or FSN values')
	    GOTO 999
	  END IF
	  NUMBER_CONSTANTS = NUMBER_CONSTANTS+1
	  GOTO 999
	END IF
C
C	Is this character a numeral, or delimiter
	IF (CH.GT.47.AND.CH.LT.58) THEN   !(0-9)
	  CALL BSCH			!backspace
	  IF (RDLONG(VALUE1)) THEN
	    CALL WRITEF('Error on command line')
	    CALL WRITEF('Unable to read FC or FSN value')
	    GOTO 999
	  END IF
	  HAD_VALUE = .TRUE.
C
C	Check for range delimiter ie :
	  IF (RDCHS(CH)) THEN
	    CALL WRITEF('Unexpected end of line')
	    CALL WRITEF('Missing final preset value')
	    GOTO 999
	  ELSE
	    IF (CH.EQ.':'.OR.CH.EQ.'-') THEN		!range
              IF (RDLONG(VALUE2)) THEN
		CALL WRITEF('Unexpected end of line')
	        CALL WRITEF('Second part of range missing')
	        GOTO 999
	      END IF
	    ELSE
	      CALL BSCH			!backspace 1 character
	      VALUE2 = VALUE1
	    END IF
	  END IF
C
C	  Transfer value(s) to SET_ARRAY
          DO 100 I = MIN(VALUE1,VALUE2),MAX(VALUE1,VALUE2)
	     IF (NUMBER.EQ.2)FCSET_ARRAY(I) = NUMBER_CONSTANTS
	     IF (NUMBER.EQ.1)NFSET_ARRAY(I) = NUMBER_CONSTANTS
100	  CONTINUE
	END IF	 	  
C
	GOTO 10		
C
C***********************************************************************
C
999	RETURN
C
        END         
