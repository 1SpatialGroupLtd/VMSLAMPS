C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1988-12-22 13:24:14.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE AREA_CMD
C
***    	MODULE AREA_CMD
***    	IDENT 22DE88
C
C      	Copyright LaserScan Laboratories Ltd., Cambrdige, England	
C      	Author D Catlow   Created July 84.
C
C      	Subroutine to preset which features are to be treated as areas.
C 
	IMPLICIT NONE
C
***	PARAMETER/HERE:BELLS/
***	COMMON/HERE:CULTRE/
C
C	Locals
	INTEGER*4	I		!counter
	INTEGER*4	CMD		!command number
	INTEGER*2	VALUE1,VALUE2	!temporary store for
C					!feature code values
	LOGICAL		HADVAL		!have we had a fc value?
	BYTE		CH		!single character
C
C	Function
	LOGICAL		RDCHS		!read next character
	INTEGER*2	RDINT		!read integer
	INTEGER*4	RDCOMM		!read a command
C
	EXTERNAL	AREA_CMD_TABLE
C
C---------------------------------------------------------------------
C	Check for a valid qualifier
	CMD = RDCOMM(AREA_CMD_TABLE)
	IF(CMD.LE.0)THEN
	  CALL WRITEF('%S Specifying command AREA',ERRBELL)
	  CALL WRITEF('Valid qualifiers are FC or FRT')
	  GOTO 999
	ENDIF
C
	AREA=CMD+1
C
	IF(AREA.EQ.3)GOTO 999
C---------------------------------------------------------------------
C	
	HADVAL = .FALSE.
C
10	IF (RDCHS(CH)) THEN
	  IF (HADVAL) THEN
            GOTO 999
	  ELSE
	    CALL WRITEF('%S Specifying command AREA FC',ERRBELL)
	    CALL WRITEF
     &      ('Command requires a list of integer feature code values')
	    GOTO 999
	  END IF
	END IF
C
C	Is this character a numeral, or deliminator
	IF (CH.GT.47.AND.CH.LT.58) THEN   !(0-9)
	  CALL BSCH			!backspace
	  IF (RDINT(VALUE1)) THEN
	    CALL WRITEF('%S Specifying command AREA FC',ERRBELL)
	    CALL WRITEF
     &      ('Command requires a list of integer feature code values')
	    GOTO 999
	  END IF
C
	  HADVAL = .TRUE.
C	Check for range deliminator ie - (or : for historical reasons)
50	  IF (.NOT.RDCHS(CH)) THEN
	    IF (CH.EQ.',')GOTO 50
	    IF (CH.EQ.':'.OR.CH.EQ.'-') THEN	!range
              IF (RDINT(VALUE2)) THEN
	        CALL WRITEF('%S Specifying command AREA FC',ERRBELL)
	        CALL WRITEF
     &          ('Second part of feature code range is missing')
	        GOTO 999
	      END IF
	    ELSE
	      CALL BSCH			!backspace 1 character
	      VALUE2 = VALUE1
	    END IF
	  ELSE
	    VALUE2 = VALUE1
	  END IF
C
C	  Transfer value(s) to SET_ARRAY
          DO 100 I = MIN(VALUE1,VALUE2),MAX(VALUE1,VALUE2)
	     AREA_ARRAY(I) = 1
100	  CONTINUE
	END IF	 	  
C
	GOTO 10		
C
C**********************************************************************
C
999	RETURN
C
        END         
