	SUBROUTINE READ_VOLTERM
C
***	IDENT	28JL93
***	MODULE	READ_VOLTERM
C
C Copyright (C) Laser-Scan Ltd, Cambridge, England
C
C Author TJ Ibbs, 5 October 1987
C
CMOD	Cope with multiple tape volumes			       JMC 17-Dec-1992
C
	IMPLICIT NONE
C
C Messages
	INCLUDE	'($DMTDEF)'
	INCLUDE	'LSL$CMNLSL:LSLLIBMSG.PAR'
	INCLUDE	'HERE:NTF2DTIMSG.PAR'
C
C Common files
	INCLUDE	'LSL$CMNLSL:FILENAME.CMN'
	INCLUDE	'LSL$CMNLSL:MTIVCM.CMN'
	INCLUDE	'HERE:FILENAME.CMN'
	INCLUDE	'HERE:COMMANDS.CMN'
	INCLUDE	'HERE:NTF2DTI.CMN'
	INCLUDE	'HERE:NTFDATA.CMN'
	INCLUDE	'HERE:RECORD.CMN'
C
C Workspace
	LOGICAL		OK			! Function return
C
C Functions
	LOGICAL 	MTIRWD
	LOGICAL 	TTRSTR
C
C if the free text in the record is not blank, output it to our
C log file, less record descriptor and continuation flag and EOR marker
C
c Cope with OS cock up of not putting a closing EOR on volume terminator
c
c	IF (.NOT.FIXED) LENGTH = LENGTH - 1		! miss EOR marker
C
	IF (OUTPUT .AND. LENGTH.GT.3) THEN		! something there
	  IF (STRING(3:LENGTH-1).NE.' ') THEN
	    CALL FLWSTR('Volume termination record:')
	    CALL FLWRTF('	%S',STRING(3:LENGTH-1))
	  ENDIF
	ENDIF
C
C   If the continuation mark is set then it's a multi-volume set so
C   dismount tapedrive, prompt user to reload, then remount.
C
	IF (STRING(LENGTH:LENGTH).EQ.'1')  THEN
	   CALL SYS$DISMOU(DEVICE(1:DEVLEN),%VAL(DMT$M_UNLOAD))
	   VOLCOUNT = VOLCOUNT + 1
	   CALL WRITEF('Please mount volume %N on %S',
     &			VOLCOUNT,DEVICE(:DEVLEN))
	   OK = TTRSTR(,,'press RETURN when ready:')
	   OK = TTRSTR(,,'Are you sure? If so press RETURN again:')
	   MULTIVOLUME = .TRUE.
	   CALL MOUNT_TAPE(DEVICE(:DEVLEN),.TRUE.)
	ELSE
	   MULTIVOLUME = .FALSE.
	   VOLCOUNT = 1
	ENDIF
C
	RETURN
	END
C
