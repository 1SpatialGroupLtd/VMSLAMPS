	SUBROUTINE ENCODE_IFF(XFROM,YFROM,ZFROM,XTO,YTO,ZTO,WIDE)

***	MODULE	ENCODE_IFF
***	IDENT	22DE88

C	Copyright : Laser-Scan Laboratories, Cambridge, England
C	Created   : 20-Nov-1987
C	Author    : A C Morris

	IMPLICIT NONE

	INCLUDE 'LSL$CMNI2GRID:CULTRE.CMN'
	INCLUDE 'LSL$CMNDTI:DTIHDR.CMN'

C Data in
	REAL*4		XFROM		! start DTI x coordinate
	REAL*4		YFROM		! start DTI y coordinate
	REAL*4		ZFROM		! start     z coordinate
	REAL*4		XTO		! end   DTI x coordinate
	REAL*4		YTO		! end   DTI y coordinate
	REAL*4		ZTO		! end       z coordinate
	LOGICAL*4	WIDE		! plot with non-zero width?

C Workspace
	REAL*4		X_FROM,Y_FROM	! offset FROM position
	REAL*4		X_TO,Y_TO	! offset TO position
	REAL*4		DX,DY		! unit vector from FROM to TO
	REAL*4		LEN		! dist from FROM to TO
	REAL*4		SEP		! separation between lines
	REAL*4		TWIDTH		! WIDTH-1
	INTEGER*4	NLINES,I

CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
C	Routine to determine which matrix nodal points lie between
C	points (XFROM,YFROM,ZFROM) & (XTO,YTO,ZTO) in non nintegerised
C	DTM coordinates.
C
C	Draws line offset to left and right to give it a width of
C	WIDTH pixels if WIDE is TRUE.
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC

	IF (WIDE.AND.WIDTH.GT.0) THEN
C	  TWIDTH = MAX(1,WIDTH-1)
	  TWIDTH = MAX(1,WIDTH/INT(MIN(X_GRID(1),Y_GRID(1)))-1)
	  DX = XTO-XFROM
	  DY = YTO-YFROM
	  LEN = SQRT(DX*DX+DY*DY)
	  IF (LEN.LT.1E-5) RETURN
	  DX = DX/LEN
	  DY = DY/LEN
	  X_FROM = XFROM-TWIDTH*DY/2
	  Y_FROM = YFROM+TWIDTH*DX/2
	  X_TO = XTO-TWIDTH*DY/2
	  Y_TO = YTO+TWIDTH*DX/2

C Draw enough lines close enough together to give a line of width WIDTH
C pixels, without any gaps

C	  SEP = 0.5
	  SEP = 0.2
	  NLINES = INT((TWIDTH-1E-5)/SEP)+2
	  SEP = TWIDTH/(NLINES-1)

	  DO 60 I = 1,NLINES
	    CALL ENCODE_IFF_SUB(X_FROM,Y_FROM,ZFROM,X_TO,Y_TO,ZTO)
	    X_FROM = X_FROM+SEP*DY
	    Y_FROM = Y_FROM-SEP*DX
	    X_TO = X_TO+SEP*DY
	    Y_TO = Y_TO-SEP*DX
60	  CONTINUE

	ELSE
	  CALL ENCODE_IFF_SUB(XFROM,YFROM,ZFROM,XTO,YTO,ZTO)
	END IF

	RETURN
	END
