	LOGICAL FUNCTION OPEN_IFF
C
***	IDENT	21DE88
***	MODULE	OPEN_IFF
C
C	Copyright : Laser-Scan Laboratories, Cambridge, England
C	Created   : 23MY85
C	Author    : D R Catlow
C
CMOD	Changed to use LSLLIB				ACM  16-10-1987
C
C	Routine for I2GRID to open the input IFF file.
C	The routine reads the IFF Map Descriptor and IFF 
C	coordinate ranges.
C	Returns TRUE for success.
C
	IMPLICIT NONE
C
C Parameters
	INCLUDE 'LSL$CMNLSL:LSLLIBMSG.PAR'
	INCLUDE 'LSL$CMNI2GRID:BELLS.PAR'
C
C Commons
	INCLUDE 'LSL$CMNIFF:IFFHAN.CMN'
	INCLUDE 'LSL$CMNLSL:FILENAME.CMN'
	INCLUDE 'LSL$CMNI2GRID:CULTRE.CMN'
C
***	COMMON/LSL$CMNIFF:MD2DES/
C
C Workspace
	INTEGER*4	RETVAL		! return code
	INTEGER*2	IELEN
C
	BYTE		CH		! single character
C
C
C Functions
	INTEGER*4	IFFOPEN		! to open the IFF file
	INTEGER*4	GETFILNAM	! to parse the filename
	LOGICAL		RDCHS		! to read single character
C
C-----------------------------------------------------------------------
C
	OPEN_IFF = .TRUE.		! assume success
C
C-----------------------------------------------------------------------
C 	Check for presence of a filename
	IF (RDCHS(CH)) THEN
	  CALL WRITEF('%S Specifying command IFF',ERRBELL)
	  CALL WRITEF('IFF filename is missing')
	  OPEN_IFF=.FALSE.
	  CALL BSLN
	  GOTO 999			!return
	ENDIF
C
C	Backspace over character just read, and parse against
C	the default LSL$IF:.IFF;0
	CALL BSCH
	RETVAL = GETFILNAM(IFFNAME,IFFNAME_LENGTH,
     &                     'LSL$IF:.IFF;0',.TRUE.,%REF('!'))
C
	IF (.NOT.RETVAL) THEN
	  CALL LSL_PUTMSG(RETVAL)
	  OPEN_IFF=.FALSE.
	  GOTO 999
	ENDIF
C
C	Open the file
	IF (HADIFF) CALL IFFCLO(1)	!close any existing file
	HADIFF=.FALSE.
C
	RETVAL = IFFOPEN(1,IFFNAME(:IFFNAME_LENGTH),,.TRUE.)
	IF (.NOT.RETVAL)THEN
	   OPEN_IFF=.FALSE.
	   CALL WRITEF(' ')
           GOTO 999
	ENDIF
C
	HADIFF =.TRUE.
C
C 	Read in IFF range values
	CALL IFFNXC ('RA',IELEN)
	CALL EIHRR(RANGES,IELEN/2,1)
C
C 	Set up IFF window
	WIND(1,1)=RANGES(1)
	WIND(1,2)=RANGES(3)
	WIND(2,1)=RANGES(2)
	WIND(2,2)=RANGES(4)
	HADWIN = .FALSE.
C
C---------------------------------------------------------------------------
C	Read the Map Descriptor
	CALL IFFNXC('MD',IELEN)
	IF(IELEN.EQ.MD2LEN)THEN
          CALL EIHR(MD2ARR,MD2LEN,1)
C	Transfer the origin offset values
	  ORIGIN_OFFSET(1)=MD2LOC(1)
	  ORIGIN_OFFSET(2)=MD2LOC(2)	
	ELSE
	  ORIGIN_OFFSET(1)=0
	  ORIGIN_OFFSET(2)=0
	  MATV2=-1		!unset map descriptor
	ENDIF
C
	CALL SHOW_IFF
C
C---------------------------------------------------------------------------
C	Signal success
	OPEN_IFF=.TRUE.
C
C---------------------------------------------------------------------------
999	RETURN
C
	END
