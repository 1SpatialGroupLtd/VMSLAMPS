C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1988-12-22 17:45:22.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE SHOW_CMD
C
***	IDENT	22DE88
***	MODULE	SHOW_CMD
C
C	Copyright : Laser-Scan Laboratories Ltd., Cambridge, England.
C
C	Created					    DRC   12-Dec-1988	
C
C	Subroutine to deal with the I2GRID SHOW command.
C
	IMPLICIT NONE
C
***	PARAMETER/HERE:BELLS/
C
***	COMMON/HERE:CULTRE/
***	COMMON/LSL$CMNFRT:FRTACD/
***	COMMON/LSL$CMNDTI:DTIHDR/
C
	EXTERNAL	SHOW_CMD_TABLE
C
C	Local
	INTEGER*4	CMD		!command index
	INTEGER*4	UNITS		!units code
	INTEGER*4	RETVAL		!return code
C
	CHARACTER*4	HEADER(5)	!Header type
	CHARACTER*4	DATA_STRING(5)	!Data types
C
C	Functions
	INTEGER*4	RDCOMM		!to decode sec command
	INTEGER*4	DTI_UNITS	!to set default units
C
	DATA DATA_STRING/'BYTE','WORD','LONG','REAL','BIT '/
	DATA HEADER/'MIKE','UHL1','TED4','ALVY','LSLA'/
C
C---------------------------------------------------------------------
C	Test for a valid qualifier
	CMD = RDCOMM(SHOW_CMD_TABLE)
	IF(CMD.LE.0)THEN
	  CALL WRITEF('%S Specifying command SHOW',ERRBELL)
	  CALL WRITEF
     &    ('Valid qualifiers are ENABLE, IFF, PARAMETERS, PRESET or 
     &SELECTIONS')
	  GOTO 999
	ENDIF
C
	GOTO (100,200,300,400,500)CMD
C----------------------------------------------------------------------
C	SHOW ENABLE
100     CALL WRITEF(' ')
        CALL WRITEF('Current status:')
        CALL WRITEF(' ')
        CALL EXPAND('ABSOLUTE     ')
	IF(ABSOLUTE)THEN
	  CALL APPEND('   On       ')
        ELSE
          CALL APPEND('  Off       ')
        ENDIF
	CALL APPEND('DFAD         ')
	IF(DFAD)THEN
	  CALL APPEND('   On       ')
	ELSE
	  CALL APPEND('  Off       ')
	ENDIF
	CALL APPEND('LOG          ')
	IF(LOG)THEN
	  CALL APPEND('   On       ')
	ELSE
	  CALL APPEND('  Off       ')
	ENDIF
	CALL TTWLIN
C
        CALL WRITEF(' ')
        CALL EXPAND('PRESET       ')
	IF(USE_PRESET)THEN
	  CALL APPEND('   On       ')
	ELSE
	  CALL APPEND('  Off       ')
	ENDIF
        CALL APPEND('THICK        ')
	IF(WIDEN)THEN
	  CALL APPEND('   On       ')
	ELSE
	  CALL APPEND('  Off       ')
	ENDIF
        CALL APPEND('TRUNCATE     ')
	IF(TRUNCATE)THEN
	  CALL APPEND('   On       ')
	ELSE
	  CALL APPEND('  Off       ')
	ENDIF
	CALL TTWLIN
	CALL WRITEF
	GOTO 999
C
C---------------------------------------------------------------------------	
C	SHOW IFF
200	CALL SHOW_IFF
	GOTO 999
C
C---------------------------------------------------------------------------
C	SHOW PARAMETERS
C	First details of the output DTI file
300	CALL WRITEF(' ')
	CALL WRITEF('Output DTI file:')
	CALL WRITEF(' ')
	IF(.NOT.HADDTI)THEN
	  CALL WRITEF('Undefined')
	ELSE IF(CREATE_DTI)THEN
	  CALL WRITEF('%S',DTI_NAME(1)(1:DTI_NAME_LENGTH(1)))
	ELSE
	  UNITS=0
	  RETVAL=DTI_UNITS(1,UNITS)
	  IF(.NOT.RETVAL)UNITS=1	  
	  CALL DTI_PRINT_HEADER(1,UNITS,ABSOLUTE)
	ENDIF
C
	IF(CREATE_DTI)THEN
	  CALL WRITEF('Header  :  %S  Data:  %S',
     &               HEADER(HTYPE),
     &		     DATA_STRING(DTYPE))
C	
	  CALL WRITEF
     &	  ('Matrix Interval    E: %F10.2                N: %F10.2',
     &	  EGRID,NGRID)
	ENDIF
C
C----------------------------------------------------------------------
C	Attribute selection
320	CALL WRITEF
	IF(PARAM_NUMBER.EQ.-1)THEN
	  CALL WRITEF('Output of FSN value is selected')
	ELSE IF (PARAM_NUMBER.EQ.-2) THEN
	  CALL WRITEF('Output of FC value is selected')
	ELSE IF (PARAM_NUMBER.EQ.-3) THEN
	  CALL WRITEF('Output of ZS value is selected')
	ELSE IF (PARAM_NUMBER.EQ.-4) THEN
	  IF(AC_SELECTED.EQ.0)THEN
	    CALL WRITEF('Output of AC value is selected')
	  ELSE
            CALL WRITEF('Output of AC %S (%N) value is selected',
     &             ACD_NAME(1:ACD_NAME_LEN),AC_SELECTED)
	  ENDIF
	ENDIF
C
C-----------------------------------------------------------------------
C	Priority
	CALL WRITEF
	IF (PRIORITY.EQ.1) THEN
	  CALL WRITEF('PRIORITY FIRST')
	  CALL WRITEF
     & ('The current value will NOT replace an existing value')
	ELSE IF (PRIORITY.EQ.2) THEN
	  CALL WRITEF('PRIORITY CURRENT')
	  CALL WRITEF
     & ('The current value will replace an existing value')
	ELSE IF (PRIORITY.EQ.3) THEN
	  CALL WRITEF('PRIORITY LARGEST')
	  CALL WRITEF
     & ('The current value will replace an existing value 
     &if it is larger')
	ELSE IF (PRIORITY.EQ.3) THEN
	  CALL WRITEF('PRIORITY SMALLEST')
	  CALL WRITEF
     & ('The current value will replace an existing value 
     &if it is smaller')
	ENDIF
	CALL WRITEF(' ')
C
C------------------------------------------------------------------------
C	Areas
	CALL SHOW_AREA
	GOTO 999
C
C------------------------------------------------------------------------
C	SHOW SELECTIONS
400	CALL SHSELE
	GOTO 999
C
C------------------------------------------------------------------------
C	Preset values
500	CALL SHOW_PRESET
	GOTO 999
C
C------------------------------------------------------------------------
C
999	RETURN
C
	END

