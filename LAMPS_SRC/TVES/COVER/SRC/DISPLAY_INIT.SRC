C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1989-01-19 15:08:34.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL FUNCTION DISPLAY_INIT
C
***	IDENT	19JA89
***	MODULE	DISPLAY_INIT
C
C	Copyright : Laser-Scan Laboratories, Cambridge, England
C	Author    : D R Catlow
C	Created   : 08 October 1987
C	
C	Subroutine to initialise the display device.
C
	IMPLICIT NONE
C
C	GKS common block etc.
***	COMMON/HERE:GKS/
***	COMMON/HERE:COVER/
***	PARAMETER/HERE:GKSPAR/
C
	INTEGER*4	GASF(13)	! Aspect source flags
	INTEGER*4	DCUNIT		! Units from GQMDS	
	INTEGER*4	ERRCOD
C
	DATA GASF /13*GINDIV/		! set flags individual
C
C-------------------------------------------------------------------------
C-------------------------------------------------------------------------
C 	Initialise GKS
	CALL GOPKS(6)			!open GKS
C
	WKID = 1			!workstation identifier
	CONID = 1001			!connection identifier
	WTYPE = 7000			!workstation type
C
C	Test if workstation exists
	CALL GQMDS(WTYPE,ERRCOD,DCUNIT,
     &	         SCRNSZ(1),SCRNSZ(2),RASTSZ(1),RASTSZ(2))
	IF(ERRCOD.NE.0)THEN
	  CALL WRITEF('%S Specifying command DISPLAY',ERROR_BELL)
	  CALL WRITEF('Graphics device not available')
	  DISPLAY_INIT=.FALSE.
	  GOTO 999
	ENDIF
C
C	Open workstation
	CALL GOPWK(WKID,CONID,WTYPE)	!open workstation
	CALL GACWK(WKID)		!and activate it
C
C 	Set aspect source flags
	CALL GSASF(GASF)
C
C 	Set deferral state to output ASTI (used to be ASAP)
C 	and implicit regeneration SUPPRESSED
	CALL GSDS(WTYPE,GASTI,GSUPPD)
C
C 	Obtain screen range
C	We do this a second time, since LSL GKSs may not have
C	screen size available until after call to GOPWK.
	CALL GQMDS(WTYPE,ERRCOD,DCUNIT,
     &	         SCRNSZ(1),SCRNSZ(2),RASTSZ(1),RASTSZ(2))
C
C 	Calculate a screen shaped portion of NDC
	NDCX = 1.0
	NDCY = SCRNSZ(2)/SCRNSZ(1)
	IF (NDCY.GT.1.0) THEN
	   NDCX = 1.0/NDCY
	   NDCY = 1.0
	ENDIF
C
C-------------------------------------------------------------------------
C 	Set world coordinates to correspond to pixels for legend and
C	label drawing
C
C 	Set window - to number of pixels
	CALL GSWN(1,-0.5,RASTSZ(1)-0.5,-0.5,RASTSZ(2)-0.5)
C
C 	Map this onto a screen shaped portion of NDC
	CALL GSVP(1,0.0,NDCX,0.0,NDCY)
C
C 	Set workstation window same as world viewport
	CALL GSWKWN(WKID,0.0,NDCX,0.0,NDCY)
C
C 	Set workstation viewport to entire screen
	CALL GSWKVP(WKID,0.0,SCRNSZ(1),0.0,SCRNSZ(2))
C
C 	Select normalisation transformation
	CALL GSELNT(1)
C
        CALL LSG_SET_LUT(WKID,'LSL$LOOKUP:COVERCOL.DAT') !default lut
C
C	Set up planes
	PLANE_MASK = -1
	CALL LSG_PLANE_SELECT ( WKID, PLANE_MASK)	!picture 1
	CALL LSG_PLANE_OFFSET ( WKID, 0)		!no offset
C
C	Set to success
	DISPLAY_INIT=.TRUE.
C-------------------------------------------------------------------------
C
999	RETURN
C
	END
