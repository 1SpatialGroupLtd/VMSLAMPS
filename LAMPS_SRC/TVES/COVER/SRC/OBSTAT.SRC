C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1987-11-05 16:56:56.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE OBSTAT(OBNUM,DTILUN)
C
***	IDENT	05NO87
***	MODULE	OBSTAT
C
C	Copyright : Laser-Scan Laboratories, Cambridge, England
C	Author    : D R Catlow
C	Created   : 29 August 85
C	Modified  : 09 October 87
C	
C	Routine for COVER to calculate the percentage of the area
C	of interest:
C	1. outside the observer OBNUM cone of vision
C	2. inside  the observer OBNUM cone of vision and visible
C	3. inside  the observer OBNUM cone of vision and not visible
C	The routine is called after the visibility matrix has been
C	encoded for observer OBNUM.
C	The statistics are output to the terminal to confirm progress
C	of the cover mapping, and are also stored in common OBSERV
C
	IMPLICIT NONE
C
***	COMMON/LSL$CMNDTI:DTIHDR/
C
***	COMMON/HERE:OBSERVER/
C
C	Arguments:
	INTEGER*4	OBNUM		!observer number
	INTEGER*4	DTILUN		!which matrix
C
C	Locals:
	INTEGER*4	COL		!x counter
	INTEGER*4	ROW		!y counter
	INTEGER*4	RETVAL		!function return condition
	INTEGER*2	CELL_VALUE	!cell value
C
	INTEGER*4	TOTAL_CELLS	!total number of nodes
	INTEGER*4	COUNT_VISIBLE	!number of visible nodes
	INTEGER*4	COUNT_OUTSIDE	!number of nodes outside cone
	INTEGER*4	PERCENT_VISIBLE	!% of total that are visible
	INTEGER*4	PERCENT_NOTVIS  !% of total that are not visible
	INTEGER*4	PERCENT_OUTSIDE !% of total that are outside cone
C
C	Functions
	INTEGER*4	DTI_READ_WORD_DATA	!to read a matrix data value
C
C******************************************************************************
C
C	Initialise counters
	COUNT_VISIBLE=0
	COUNT_OUTSIDE=0
C
C	Carry out scan column by column
	DO 500 COL = 1,X_EXTENT(DTILUN)
C
	   DO 400 ROW = 1,Y_EXTENT(DTILUN)
C
	      RETVAL=DTI_READ_WORD_DATA(DTILUN,CELL_VALUE,COL,ROW)
	      IF(.NOT.RETVAL)THEN
                CALL LSL_PUTMSG(RETVAL)
	        GOTO 999
	      ENDIF
C
	      IF(CELL_VALUE.EQ.OBNUM)COUNT_VISIBLE=COUNT_VISIBLE+1
	      IF(CELL_VALUE.EQ.-1)COUNT_OUTSIDE=COUNT_OUTSIDE+1
C
400	   CONTINUE
C
500	CONTINUE
C
C	Now a simple case of working out the percentages
	TOTAL_CELLS=X_EXTENT(DTILUN)*Y_EXTENT(DTILUN)
C
	PERCENT_OUTSIDE=NINT((FLOAT(COUNT_OUTSIDE)/TOTAL_CELLS)*100)
	PERCENT_VISIBLE=NINT((FLOAT(COUNT_VISIBLE)/TOTAL_CELLS)*100)
	PERCENT_VISIBLE=MAX(1,PERCENT_VISIBLE)
	PERCENT_NOTVIS =100-(PERCENT_OUTSIDE+PERCENT_VISIBLE)
C
C	Check for rounding error problems
	IF(PERCENT_NOTVIS.LT.0)THEN
	  PERCENT_VISIBLE=PERCENT_VISIBLE+PERCENT_NOTVIS
	  PERCENT_NOTVIS =0
	ENDIF
C
	CALL WRITEF('Observer %^W%N   %%Visible %I4   %%Not Visible %I4 
     & %%Outside %I4',OBNUM,PERCENT_VISIBLE,
     &	PERCENT_NOTVIS,PERCENT_OUTSIDE)
	CALL WRITEF(' ')
C
C
999	RETURN
C
	END
