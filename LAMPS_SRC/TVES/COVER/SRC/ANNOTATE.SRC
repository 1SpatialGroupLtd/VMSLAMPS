	SUBROUTINE ANNOTATE(MAG,DTI_LUN)
C
***	MODULE	ANNOTATE
***	IDENT	18FE93
C
C	Copyright : Laser-Scan Ltd., Cambridge, England
C	Author    : DRC
C
C	Routine for COVER to annotate cover matrix display with
C	file and observer details.
C
	IMPLICIT NONE
C
C	Arguments:
	INTEGER*4		MAG	!pixel scaling factor
	INTEGER*4		DTI_LUN	!which matrix
C
C	LSLLIB commons
***	COMMON/LSL$CMNLSL:EXPC/		!to exapnd into EXPBUF
C
C	DTILIB commons
***	COMMON/LSL$CMNDTI:DTIHDR/	!DTI file header details
***	COMMON/LSL$CMNDTI:DTIPROJ/
C
C	COVER commons
***	COMMON/HERE:OBSERVER/		!observer details
***	COMMON/HERE:DISPLY/		!display image obs details
***	COMMON/HERE:COVER/
***	COMMON/HERE:DRWCMN/
C
C	Graphics commons
***	COMMON/HERE:GKS/
***	PARAMETER/HERE:GKSPAR/
C
C	Locals:
	REAL			X(5),Y(5)	!plot coordinates
	INTEGER*4		SIGNEX,SIGNEY	!plot position of
C						!NE corner of matrix
	INTEGER*4		RETVAL		!return code
	INTEGER*4		I		!counter
	INTEGER*4		DISPLAY_WINDOW(2,2)
	INTEGER*4		SAVED_UNITS	!copy of units value
C
	INTEGER*4		LLDEGS(2)	!seconds
	INTEGER*4		DEGR,MINU,SECO	!degs,mins,seconds
	LOGICAL			NEGA		!hemisphere
C
C	Function
	INTEGER*4		DTI_UNITS	!to test units
C**********************************************************************
C
C	Set up line and text attributes
	WHITE = 11
	CALL GSPLCI (WHITE)		!line colour
	CALL GSLWSC (1.0)		!line width
	CALL GSTXCI (WHITE)		!text colour
	CALL GSCHH (RASTSZ(2)/96.0)	!text height
C
C	Work out position of NE corner of matrix on screen
	SIGNEX=SIGSWX+(X_EXTENT(2)*MAG)
	SIGNEY=SIGSWY+(Y_EXTENT(2)*MAG)
C
C	Draw box around the matrix display (clockwise)
	X(1)= SIGSWX-1
	Y(1)= SIGSWY-1
	X(2)= X(1)
	Y(2)= SIGNEY
	X(3)= SIGNEX
	Y(3)= Y(2)
	X(4)= X(3)
	Y(4)= Y(1)
	X(5)= X(1)
	Y(5)= Y(1)
	CALL GPL(5,X,Y)
C	
C------------------------------------------------------------------------
C	Annotate with file details (filename and matrix corners)
C	
C	First the matrix corners
C	Coordinates of text position
	X(1)= 20.0
	Y(1)=SIGSWY-40
	CALL GTX (X(1),Y(1),'DTM area:')
C
	Y(1)= SIGSWY-60
C	
	DISPLAY_WINDOW(1,1)=1
	DISPLAY_WINDOW(1,2)=1
	DISPLAY_WINDOW(2,1)=X_EXTENT(2)
	DISPLAY_WINDOW(2,2)=Y_EXTENT(2)
C
C	Save units and test whether current units setting
C	is sensible for current display file
	SAVED_UNITS=UNITS
	RETVAL=DTI_UNITS(DTI_LUN,SAVED_UNITS)
	IF(.NOT.RETVAL)SAVED_UNITS=1		!matrix units
C	    
	GOTO (110,120,130,140,145)SAVED_UNITS
C
C	Output details in matrix units
110	CALL EXPAND('SW: %I5 %I5',
     &       DISPLAY_WINDOW(1,1),DISPLAY_WINDOW(1,2))
	CALL GTX( X(1),Y(1),EXPDSC)
	CALL EXPAND('NE: %I5 %I5',
     &	     DISPLAY_WINDOW(2,1),DISPLAY_WINDOW(2,2))
	Y(1)=Y(1)-20
	CALL GTX( X(1),Y(1),EXPDSC)
	GOTO 150
C
C	Output details in metres
120	IF(ABSOLUTE)THEN
	  CALL EXPAND('SW: %F10.2 %F10.2', 
     &       X_OFFSET(DTI_LUN),
     &	     Y_OFFSET(DTI_LUN))
	  CALL GTX( X(1),Y(1),EXPDSC)
	  CALL EXPAND('NE: %F10.2 %F10.2',
     &       X_OFFSET(DTI_LUN)+(X_EXTENT(DTI_LUN)-1)*X_GRID(DTI_LUN),
     &	     Y_OFFSET(DTI_LUN)+(Y_EXTENT(DTI_LUN)-1)*Y_GRID(DTI_LUN))
	  Y(1)=Y(1)-20
	  CALL GTX( X(1),Y(1),EXPDSC)
	ELSE
	  CALL EXPAND('SW: %F10.2 %F10.2', 
     &             (DISPLAY_WINDOW(1,1)-1)*X_GRID(DTI_LUN),
     &	           (DISPLAY_WINDOW(1,2)-1)*Y_GRID(DTI_LUN))
	  CALL GTX( X(1),Y(1),EXPDSC)
	  CALL EXPAND('NE: %F10.2 %F10.2',
     &             (DISPLAY_WINDOW(2,1)-1)*X_GRID(DTI_LUN),
     &	           (DISPLAY_WINDOW(2,2)-1)*Y_GRID(DTI_LUN))
	  Y(1)=Y(1)-20
	  CALL GTX( X(1),Y(1),EXPDSC)
	ENDIF
	GOTO 150
C
C	Output details in seconds
130	CALL EXPAND('SW: %^L%I9 %I9', 
     &	           LATREC(1,DTI_LUN)/10,
     &             LONREC(1,DTI_LUN)/10)
	CALL GTX( X(1),Y(1),EXPDSC)
	CALL EXPAND('NE: %^L%I9 %I9', 
     &	           (LATREC(1,DTI_LUN)+(X_EXTENT(DTI_LUN)-1)
     &             *LATINT(DTI_LUN))/10,
     &	           (LONREC(2,DTI_LUN)+(Y_EXTENT(DTI_LUN)-1)
     &             *LONINT(DTI_LUN))/10)
	Y(1)=Y(1)-20
	CALL GTX( X(1),Y(1),EXPDSC)
	GOTO 150
C
C	Output details in degrees, minutes and seconds
140     CALL EXPAND('SW: ')
	CALL DTI_CVTANG(LATREC(1,DTI_LUN),
     &		        NEGA,DEGR,MINU,SECO)
	CALL APPEND('%P %I3 %P0%I2 %P0%I2',DEGR,MINU,SECO)
	IF(NEGA)THEN
	  CALL APPEND('S  ')
	ELSE
	  CALL APPEND('N  ')
	ENDIF
C
	CALL DTI_CVTANG(LONREC(1,DTI_LUN),
     &		        NEGA,DEGR,MINU,SECO)
	CALL APPEND('%P %I3 %P0%I2 %P0%I2',DEGR,MINU,SECO)
	IF(NEGA)THEN
	  CALL APPEND('W  ')
	ELSE
	  CALL APPEND('E  ')
	ENDIF
C
	CALL GTX( X(1),Y(1),EXPDSC)
C	  
	CALL EXPAND('NE: ')
	CALL DTI_CVTANG(LATREC(1,DTI_LUN)+
     &                 ((Y_EXTENT(DTI_LUN)-1)*LATINT(DTI_LUN)),
     &	               NEGA,DEGR,MINU,SECO)
	CALL APPEND('%P %I3 %P0%I2 %P0%I2',DEGR,MINU,SECO)
	IF(NEGA)THEN
	  CALL APPEND('S  ')
	ELSE
	  CALL APPEND('N  ')
	ENDIF
C
	CALL DTI_CVTANG(LONREC(1,DTI_LUN)+
     &                 ((X_EXTENT(DTI_LUN)-1)*LONINT(DTI_LUN)),
     &	               NEGA,DEGR,MINU,SECO)
	CALL APPEND('%P %I3 %P0%I2 %P0%I2',DEGR,MINU,SECO)
	IF(NEGA)THEN
	  CALL APPEND('W  ')
	ELSE
	  CALL APPEND('E  ')
	ENDIF
	Y(1)=Y(1)-20
	CALL GTX( X(1),Y(1),EXPDSC)
	GOTO 150
C
C	Output details in projection units
145	IF(ABSOLUTE)THEN
	  CALL EXPAND('SW: %F10.2 %F10.2', 
     &       DTIPROJ_ORIGIN(1,DTI_LUN),
     &	     DTIPROJ_ORIGIN(2,DTI_LUN))
	  CALL GTX( X(1),Y(1),EXPDSC)
	  CALL EXPAND('NE: %F10.2 %F10.2',
     &       DTIPROJ_ORIGIN(1,DTI_LUN)+
     &       (X_EXTENT(DTI_LUN)-1)*DTIPROJ_SAMPLE(1,DTI_LUN),
     &       DTIPROJ_ORIGIN(2,DTI_LUN)+
     &       (Y_EXTENT(DTI_LUN)-1)*DTIPROJ_SAMPLE(2,DTI_LUN))
	  Y(1)=Y(1)-20
	  CALL GTX( X(1),Y(1),EXPDSC)
	ELSE
	  CALL EXPAND('SW: %F10.2 %F10.2', 
     &             (DISPLAY_WINDOW(1,1)-1)
     &       *DTIPROJ_SAMPLE(1,DTI_LUN),
     &	           (DISPLAY_WINDOW(1,2)-1)
     &       *DTIPROJ_SAMPLE(2,DTI_LUN))
	  CALL GTX( X(1),Y(1),EXPDSC)
	  CALL EXPAND('NE: %F10.2 %F10.2',
     &             (DISPLAY_WINDOW(2,1)-1)
     &       *DTIPROJ_SAMPLE(1,DTI_LUN),
     &	           (DISPLAY_WINDOW(2,2)-1)
     &       *DTIPROJ_SAMPLE(2,DTI_LUN))
	  Y(1)=Y(1)-20
	  CALL GTX( X(1),Y(1),EXPDSC)
	ENDIF
	GOTO 150
C
C-----------------------------------------------------------------------
C
C	Then the filename...
150	Y(1)=SIGSWY-120
	CALL EXPAND('File: %S',
     &  DTI_NAME(DTI_LUN)(1:DTI_NAME_LENGTH(DTI_LUN)))
	CALL GTX( X(1),Y(1),EXPDSC)
C
C-----------------------------------------------------------------------
C	Annotate with observer details
C
C	Set up text coordinates of observer header
	X(1)=280
	Y(1)=SIGSWY-40
	CALL EXPAND
     &	('Observer       Position          Height    Direction
     &     Cone     Distance')
	CALL GTX( X(1),Y(1),EXPDSC)
C
C------------------------------------------------------------------------
C
	Y(1)=SIGSWY-40
C
	DO 200 I=1,MAX_OBSERVERS
C
	   IF(.NOT.HAD_D_OBSERVERS(I))GOTO 200
	   IF(.NOT.SELOBS(I))GOTO 200
C
           Y(1)=(SIGSWY-40)-(I*20)
	   X(1)=280
C
	   GOTO (210,220,230,240,245)SAVED_UNITS
C
C	Output observer details in matrix units
210	   CALL EXPAND
     &	   ('%I3   %^W%I8   %^W%I8      %F7.1    %F7.1
     &     %F7.1     %F7.1',
     &	   I,
     &     DTI_D_OBSERVERS(I,1),
     &     DTI_D_OBSERVERS(I,2),
     &     POS_D_OBSERVERS(I,3),
     &	   DIR_D_OBSERVERS(I),
     &     CON_D_OBSERVERS(I),
     &     DIS_D_OBSERVERS(I,1))
	   CALL GTX( X(1),Y(1),EXPDSC)
	   GOTO 250
C
C	Output observer details in metres
220	   IF(ABSOLUTE)THEN
	     CALL EXPAND
     &	     ('%I3   %F10.1 %F10.1    %F7.1    %F7.1
     &     %F7.1     %F7.1',
     &	     I,
     &       X_OFFSET(DTI_LUN)+((DTI_D_OBSERVERS(I,1)-1)
     &       *X_GRID(DTI_LUN)),
     &       Y_OFFSET(DTI_LUN)+((DTI_D_OBSERVERS(I,2)-1)
     &       *Y_GRID(DTI_LUN)),
     &       POS_D_OBSERVERS(I,3),
     &	     DIR_D_OBSERVERS(I),
     &       CON_D_OBSERVERS(I),
     &       DIS_D_OBSERVERS(I,2))
	     CALL GTX( X(1),Y(1),EXPDSC)
	     GOTO 250
	   ELSE
	     CALL EXPAND
     &	     ('%I3   %F10.1 %F10.1    %F7.1    %F7.1
     &     %F7.1     %F7.1',
     &	     I,
     &       (DTI_D_OBSERVERS(I,1)-1)*X_GRID(2),
     &       (DTI_D_OBSERVERS(I,2)-1)*Y_GRID(2),
     &       POS_D_OBSERVERS(I,3),
     &	     DIR_D_OBSERVERS(I),
     &       CON_D_OBSERVERS(I),
     &       DIS_D_OBSERVERS(I,2))
	     CALL GTX( X(1),Y(1),EXPDSC)
	     GOTO 250
	   ENDIF
C
C	Output observer details in seconds
230	   LLDEGS(1)=
     &     (LONREC(1,DTI_LUN)+((DTI_D_OBSERVERS(I,1)-1)
     &     *LONINT(DTI_LUN)))/10
	   LLDEGS(2)=
     &     (LATREC(1,DTI_LUN)+((DTI_D_OBSERVERS(I,2)-1)
     &     *LATINT(DTI_LUN)))/10
C
C
	   CALL EXPAND
     &	   ('%I3    %^L%I9 %I9     %F7.1    %F7.1
     &     %F7.1     %F7.1',
     &	   I,				!observer number
     &	   LLDEGS(2),			!x observer position (secs)
     &	   LLDEGS(1),			!y observer position (secs)
     &	   POS_D_OBSERVERS(I,3),	!height (metres)
     &	   DIR_D_OBSERVERS(I),		!direction (degrees from N)
     &     CON_D_OBSERVERS(I),		!cone of vision (degrees)
     &	   DIS_D_OBSERVERS(I,2))	!distance (metres)
	   CALL GTX( X(1),Y(1),EXPDSC)
	   GOTO 250
C
240	   LLDEGS(1)=LONREC(1,DTI_LUN)+
     &     ((DTI_D_OBSERVERS(I,1)-1)*LONINT(DTI_LUN))
	   LLDEGS(2)=LATREC(1,DTI_LUN)+
     &     ((DTI_D_OBSERVERS(I,2)-1)*LATINT(DTI_LUN))
C
	   CALL EXPAND('%I3    ',I)	!observer
	   IF(DTI_D_OBSERVERS(I,1).EQ.0)THEN
	     CALL APPEND('  0 00 00    0 00 00    ')
	   ELSE
	     CALL DTI_CVTANG(LLDEGS(2),NEGA,DEGR,MINU,SECO)
	     CALL APPEND('%P %I3 %P0%I2 %P0%I2',DEGR,MINU,SECO)
	     IF(NEGA)THEN
	       CALL APPEND('S ')
	     ELSE
	       CALL APPEND('N ')
	     ENDIF
C
	     CALL DTI_CVTANG(LLDEGS(1),NEGA,DEGR,MINU,SECO)
	     CALL APPEND('%P %I3 %P0%I2 %P0%I2',DEGR,MINU,SECO)
	     IF(NEGA)THEN
	       CALL APPEND('W   ')
	     ELSE
	       CALL APPEND('E   ')
	     ENDIF
	   ENDIF
C
	   CALL APPEND('%P %F7.1  ',POS_D_OBSERVERS(I,3))
	   CALL APPEND('  %P %F7.1 ',DIR_D_OBSERVERS(I))
	   CALL APPEND('    %P %F7.1 ',CON_D_OBSERVERS(I))
	   CALL APPEND('    %P %F7.1',DIS_D_OBSERVERS(I,2))
	   CALL GTX( X(1),Y(1),EXPDSC )
	   GOTO 250
C
C	Output observer details in projection units
245	   IF(ABSOLUTE)THEN
	     CALL EXPAND
     &	     ('%I3   %F10.1 %F10.1    %F7.1    %F7.1
     &     %F7.1     %F7.1',
     &	     I,
     &       DTIPROJ_ORIGIN(1,DTI_LUN)
     &       +((DTI_D_OBSERVERS(I,1)-1)*DTIPROJ_SAMPLE(1,DTI_LUN)),
     &       DTIPROJ_ORIGIN(2,DTI_LUN)
     &       +((DTI_D_OBSERVERS(I,2)-1)*DTIPROJ_SAMPLE(2,DTI_LUN)),
     &       POS_D_OBSERVERS(I,3),
     &	     DIR_D_OBSERVERS(I),
     &       CON_D_OBSERVERS(I),
     &       DIS_D_OBSERVERS(I,2))
	     CALL GTX( X(1),Y(1),EXPDSC)
	     GOTO 250
	   ELSE
	     CALL EXPAND
     &	     ('%I3   %F10.1 %F10.1    %F7.1    %F7.1
     &     %F7.1     %F7.1',
     &	     I,
     &       (DTI_D_OBSERVERS(I,1)-1)
     &       *DTIPROJ_SAMPLE(1,DTI_LUN),
     &       (DTI_D_OBSERVERS(I,2)-1)
     &       *DTIPROJ_SAMPLE(2,DTI_LUN),
     &       POS_D_OBSERVERS(I,3),
     &	     DIR_D_OBSERVERS(I),
     &       CON_D_OBSERVERS(I),
     &       DIS_D_OBSERVERS(I,2))
	     CALL GTX( X(1),Y(1),EXPDSC)
	     GOTO 250
	   ENDIF
C
C-----------------------------------------------------------------------
C	   Finally annotate display with observer number
250	   X(1)=FLOAT(SIGSWX+(DTI_D_OBSERVERS(I,1)-2)*MAG)
	   Y(1)=FLOAT(SIGSWY+(DTI_D_OBSERVERS(I,2)-1)*MAG)
C	   
	   CALL GSFAIS(GSOLID)	!solid fill
	   CALL GSFACI(0)	!set fill area colour to black
	   X(2)=X(1)+10
	   Y(2)=Y(1)+10
	   CALL LSG_FILL_RECTANGLE(X,Y)	!To draw black box
C
	   CALL EXPAND('%I1',I)
	   CALL GTX(X(1),Y(1),EXPDSC)
C
200	CONTINUE
C
	CALL GUWK (WKID,GSUPP)		!Update workstation
C
C
999	RETURN
C
	END
