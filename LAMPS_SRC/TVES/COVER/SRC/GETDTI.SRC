C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1987-10-07 15:22:36.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL FUNCTION GET_DTI_COORDS(X_DTI,Y_DTI,PROMPT)
C
***	IDENT	07OC87
***	MODULE	GET_DTI_COORDS
C
C	Copyright : Laser-Scan Laboratories, Cambridge, England
C
C	Author	  : Andrew Morris
C	Created   : Jan 1985
C
	IMPLICIT NONE
C
C parameters in
	CHARACTER*(*)	PROMPT		! prompt string
C
C parameters out
	INTEGER		X_DTI,Y_DTI	! DTI coords
C
***	COMMON/LSL$CMNDTI:DTIHDR/
C
***	COMMON/HERE:COVQIO/
***	COMMON/HERE:TRANS/		! has TAB_DTI transformation
***	COMMON/HERE:TAB/		! has BUTTON
C
C functions
	LOGICAL		READ_PUCK	! read puck data
	LOGICAL		HAD_PUCK	! had puck input?
	INTEGER*4	RDLONG		! read integer?
	LOGICAL		WAIT_INPUT	! wait for input
C
C workspace
	INTEGER		X_TAB,Y_TAB	! table coords
C
C:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
C Prompts for and obtains a DTI point from the keyboard or table cursor
C
C Function result returns .TRUE. for success, .FALSE. for error

C:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
C
	GET_DTI_COORDS = .FALSE.	! set unsuccessfull
C
10	IF (.NOT.WAIT_INPUT(PROMPT,.TRUE.,.TRUE.)) GOTO 20
C
	IF (HAD_VDU) THEN	! keyboard input
	  IF (RDLONG(X_DTI)) GOTO 20	! failure
	  IF (RDLONG(Y_DTI)) GOTO 20	! failure
	ELSEIF (HAD_PUCK(IERR)) THEN	! point input?
	  IF (READ_PUCK(BUTTON,X_TAB,Y_TAB,IERR)) THEN
	    CALL SHOW_ERROR(IERR)
	    GOTO 20			! failure
	  ENDIF
	  IF (.NOT.MAP_SET) THEN
	    CALL WRITEF('*** Map is not located')
	    GOTO 10			! try again
	  ENDIF
C
	  X_DTI=TAB_DTI(1,1)*X_TAB + TAB_DTI(1,2)*Y_TAB + TAB_DTI(1,3)
	  Y_DTI=TAB_DTI(2,1)*X_TAB + TAB_DTI(2,2)*Y_TAB + TAB_DTI(2,3)
C
C write out the coordinates to follow after the prompt
	  TTOBEL = .TRUE.	! signal to VIO$PUT_OUTPUT (OUTPUT.SRC)
	  CALL WRITEF('%N %N',X_DTI,Y_DTI)
	  TTOBEL = .FALSE.
	ENDIF
C
C check DTI range
	IF (X_DTI.LT.1.OR.X_DTI.GT.X_EXTENT(1).OR.
     +	    Y_DTI.LT.1.OR.Y_DTI.GT.Y_EXTENT(1)) THEN
	  CALL WRITEF('*** DTI coords out of range')
	  GOTO 10			! try again
	ENDIF
C
	GET_DTI_COORDS = .TRUE.		! success
C
20	RETURN
	END
