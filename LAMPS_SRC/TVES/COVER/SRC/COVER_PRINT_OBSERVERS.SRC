	SUBROUTINE COVER_PRINT_OBSERVERS
C
***	IDENT	22FE93
***	MODULE	COVER_PRINT_OBSERVERS
C
C	Copyright : Laser-Scan, Cambridge, England
C	Author    : D R Catlow
C	
CMOD	DRC 02DE88 For use with ENABLE ABSOLUTE and UNITS PROJECTION
C
CMOD1189 JB 22FE93 Use REAL DTI_OBSERVERS to preserve accuracy
C
C	Subroutine to print details of the observer positions.
C	The current units setting controls the units in which
C	the observer locations are output.
C
	IMPLICIT NONE
C	
C	DTILIB common:
***	COMMON/LSL$CMNDTI:DTIHDR/
***	COMMON/LSL$CMNDTI:DTIPROJ/
C
***	COMMON/HERE:COVER/		! contains UNITS
***	COMMON/HERE:OBSERVER/		! contains observer locations
C
C	Local
	INTEGER*4	I		! loop counter
	INTEGER*4	LLDEGS(2)	! x,y position in seconds
	INTEGER*4	DEGR		!degree part of latlong
	INTEGER*4	MINU		!minute part of latlong
	INTEGER*4	SECO		!seconds part of latlong
	LOGICAL		NEGA		!neg latlong value
C
C************************************************************************
C
	CALL WRITEF(' ')
	CALL EXPAND('Current observer settings ')
C
	IF(UNITS.EQ.1)CALL APPEND('(Units are DTI Matrix Values)')
	IF(UNITS.EQ.2)CALL APPEND('(Units are Metres)')
	IF(UNITS.EQ.3)CALL APPEND('(Units are Seconds)')
        IF(UNITS.EQ.4)CALL APPEND
     &  ('(Units are Degrees, Minutes, Seconds)')
	IF(UNITS.EQ.5)CALL APPEND('(Units are Projection Units)')
	CALL TTWSTR
	CALL WRITEF(' ')
C
	CALL WRITEF
     &	('Observer       Position          Height    Direction
     &     Cone     Distance')
C
C------------------------------------------------------------------------
C
	DO 500 I=1,MAX_OBSERVERS
C
	  IF(.NOT.HAD_OBSERVERS(I))GOTO 500
	  IF(.NOT.SELOBS(I))GOTO 500	!this observer not selected
C
	  GOTO (100,200,300,400,450)UNITS
C
C------------------------------------------------------------------------
C MATRIX
C
100	  IF (POS_OBSERVERS(I,1).EQ.-99999999.AND.
     &        POS_OBSERVERS(I,2).EQ.-99999999)THEN
	    CALL EXPAND('%I3            Undefined  ',I)
	  ELSE
	    CALL EXPAND('%I3  %^W%I8  %^W%I8   ',
     &		I,NINT(DTI_OBSERVERS(I,1)),NINT(DTI_OBSERVERS(I,2)))
	  ENDIF
C
	  CALL APPEND
     &	  ('     %F7.1    %F7.1
     &      %F7.1    %F7.1',
     &    POS_OBSERVERS(I,3),
     &	  DIR_OBSERVERS(I),
     &    CON_OBSERVERS(I),
     &    DIS_OBSERVERS(I,1))
	  CALL TTWSTR
C
	  GOTO 500
C
C------------------------------------------------------------------------
C METRES
C
200	  IF (POS_OBSERVERS(I,1).EQ.-99999999.AND.
     &        POS_OBSERVERS(I,2).EQ.-99999999)THEN
	    CALL EXPAND('%I3            Undefined  ',I)
	  ELSE
	    IF(ABSOLUTE)THEN
	      CALL EXPAND('%I3  %F10.1 %F10.1',
     &        I,POS_OBSERVERS(I,1)+X_OFFSET(1),
     &        POS_OBSERVERS(I,2)+Y_OFFSET(1))
	    ELSE
	      CALL EXPAND('%I3  %F10.1 %F10.1',
     &        I,POS_OBSERVERS(I,1),
     &        POS_OBSERVERS(I,2))
	    ENDIF
	  ENDIF
C
	  CALL APPEND
     &	  ('     %F7.1    %F7.1
     &      %F7.1    %F7.1',
     &      POS_OBSERVERS(I,3),
     &	    DIR_OBSERVERS(I),
     &      CON_OBSERVERS(I),
     &      DIS_OBSERVERS(I,2))
	  CALL TTWSTR
	  GOTO 500
C
C------------------------------------------------------------------------
C
300	  IF(POS_OBSERVERS(I,1).EQ.-99999999.AND.
     &      POS_OBSERVERS(I,2).EQ.-99999999)THEN
	    CALL EXPAND('%I3            Undefined  ',I)
	  ELSE
	    LLDEGS(1)=LONREC(1,1)+((DTI_OBSERVERS(I,1)-1)*LONINT(1))
	    LLDEGS(2)=LATREC(1,1)+((DTI_OBSERVERS(I,2)-1)*LATINT(1))
	    IF(DTI_OBSERVERS(I,1).EQ.0)LLDEGS(1)=0
	    IF(DTI_OBSERVERS(I,2).EQ.0)LLDEGS(2)=0
	    CALL EXPAND('%I3    %I9 %I9',I,LLDEGS(2),LLDEGS(1))
	  ENDIF
C
	  CALL APPEND
     &	  ('     %F7.1    %F7.1
     &      %F7.1      %F7.1',
     &	  POS_OBSERVERS(I,3),		!height (metres)
     &	  DIR_OBSERVERS(I),		!direction (degrees from N)
     &    CON_OBSERVERS(I),		!cone of vision (degrees)
     &	  DIS_OBSERVERS(I,2))		!distance (metres)
	  CALL TTWSTR
	  GOTO 500
C
C------------------------------------------------------------------------
C
400	  IF(POS_OBSERVERS(I,1).EQ.-99999999.AND.
     &      POS_OBSERVERS(I,2).EQ.-99999999)THEN
	    CALL EXPAND('%I3            Undefined       ',I)
	  ELSE
	    LLDEGS(1)=LONREC(1,1)+((DTI_OBSERVERS(I,1)-1)*LONINT(1))
	    LLDEGS(2)=LATREC(1,1)+((DTI_OBSERVERS(I,2)-1)*LATINT(1))
	    CALL EXPAND('%I3    ',I)	!observer
	    IF(DTI_OBSERVERS(I,1).EQ.0)THEN
	      CALL APPEND('  0 00 00    0 00 00    ')
	    ELSE
	      CALL DTI_CVTANG(LLDEGS(2),NEGA,DEGR,MINU,SECO)
	      CALL APPEND('%P %I3 %P0%I2 %P0%I2',DEGR,MINU,SECO)
	      IF(NEGA)THEN
	        CALL APPEND('S ')
	      ELSE
	        CALL APPEND('N ')
	      ENDIF
C
	      CALL DTI_CVTANG(LLDEGS(1),NEGA,DEGR,MINU,SECO)
	      CALL APPEND('%P %I3 %P0%I2 %P0%I2',DEGR,MINU,SECO)
	      IF(NEGA)THEN
	        CALL APPEND('W   ')
	      ELSE
	        CALL APPEND('E   ')
	      ENDIF
	    ENDIF
	  ENDIF
C
	  CALL APPEND('%P %F7.1  ',POS_OBSERVERS(I,3))
	  CALL APPEND('  %P %F7.1 ',DIR_OBSERVERS(I))
	  CALL APPEND('     %P %F7.1 ',CON_OBSERVERS(I))
	  CALL APPEND('     %P %F7.1',DIS_OBSERVERS(I,2))
	  CALL TTWSTR
	  GOTO 500
C
C-----------------------------------------------------------------------------
C Projection Units
C
450	  IF (POS_OBSERVERS(I,1).EQ.-99999999.AND.
     &        POS_OBSERVERS(I,2).EQ.-99999999)THEN
	    CALL EXPAND('%I3            Undefined  ',I)
	  ELSE
	    IF(ABSOLUTE)THEN
	      CALL EXPAND('%I3  %F10.1 %F10.1',
     &        I,
     &        POS_OBSERVERS(I,1)+DTIPROJ_ORIGIN(1,1),
     &        POS_OBSERVERS(I,2)+DTIPROJ_ORIGIN(2,1))
	    ELSE
	      CALL EXPAND('%I3  %F10.1  %F10.1',
     &        I,
     &        POS_OBSERVERS(I,1),
     &        POS_OBSERVERS(I,2))
	    ENDIF
	  ENDIF
C
	  CALL APPEND
     &	  ('     %F7.1    %F7.1
     &      %F7.1    %F7.1',
     &    POS_OBSERVERS(I,3),
     &	  DIR_OBSERVERS(I),
     &    CON_OBSERVERS(I),
     &    DIS_OBSERVERS(I,2))
	  CALL TTWSTR
C
500	CONTINUE
C
	CALL WRITEF		!blank line
C
	RETURN
	END
C
