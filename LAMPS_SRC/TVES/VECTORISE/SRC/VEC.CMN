C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1993-08-26 10:53:18.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
C
CMOD1209 Include RANGE_INC array			JMC 19-Mar-1993
C	 Increase MAXPTS FROM 200000 to 500000
C
CMOD1290 Decrease MAXPTS FROM 500000 to 200000		 JB 24-Aug-1993
C
C PARAMETERSPARAMETERSPARAMETERSPARAMETERSPARAMETERSPARAMETERSPARAMETERS
C
	INTEGER		MAXRANGES
C			max num of area ranges

	INTEGER		MAXPTS
C			max num of pts in list of all link pts

	INTEGER		MAXPPFTR
C			max num of pts in a loop-section feature

	INTEGER		MAXLPTS
C			max num of pts in a single link

	INTEGER		MAXLINKS
C			max total No of links

	INTEGER		MAXFCS
C			max num of diff link feature codes

	INTEGER		MAXNODES
C			max total no of nodes

	INTEGER		MAXARMS
C			max total no of arms

	INTEGER		MAXRMS
C			max no of arms for a single node

	INTEGER		MAXNXSECTORS,MAXNYSECTORS
C			max dims for sector array

	INTEGER		XMAX_SECTOR,YMAX_SECTOR
C			sector dimensions

	INTEGER		IFJLUN,LOGLUN	! LUNs

	INTEGER		XMIN_DTI,YMIN_DTI
C			always 1 but used for symmetry with MAX limits

	INTEGER		NIL		! universal end-of-list ptr

	INTEGER		LEFT,RIGHT	! for left/right coding

	INTEGER*2	BORDER_FC
C			feature code for image border link

	INTEGER*2	BOUNDARY_FC
C			feature code for normal area boundary link

	INTEGER*2	BORDERCODE
C			area codes used for these

	REAL		PI
	REAL		RTOL		! smallest positive real
	REAL		NEGRTOL		! smallest negative real

C misc record array field index names
	INTEGER		WT_NDAT		! NDAT WeighT field
	INTEGER		AM_NDAT		! NDAT ArM field
	INTEGER		BS_NDAT		! NDAT BaSe node field
	INTEGER		JB_NDAT		! NDAT JB entry ptr field
	INTEGER		JO_NDAT		! NDAT JO entry ptr field

	INTEGER		LI_ARM		! ARM LInk field
	INTEGER		AM_ARM		! ARM ArM field

	CHARACTER*16	ERROR_BELL	! for noisy ERROR message
	PARAMETER      (ERROR_BELL= CHAR(7)//CHAR(7)//'*** ERROR ***')
C
	PARAMETER(	MAXPTS		=  200 000)
	PARAMETER(	MAXPPFTR	=    8 192)
	PARAMETER(	MAXLPTS		=   30 000)
	PARAMETER(	MAXLINKS	=   65 535)
	PARAMETER(	MAXFCS		=        2)
	PARAMETER(	MAXNODES	=   40 000)
	PARAMETER(	MAXARMS		= 2*MAXLINKS)
	PARAMETER(	MAXRMS		=        4)
	PARAMETER(	MAXNXSECTORS	=        9)
	PARAMETER(	MAXNYSECTORS	=        9)
	PARAMETER(	XMAX_SECTOR	=      202)
	PARAMETER(	YMAX_SECTOR	=      202)
	PARAMETER(	MAXRANGES	=      512)
	PARAMETER(	IFJLUN		=        2)
	PARAMETER(	LOGLUN		=        3)
	PARAMETER(	XMIN_DTI	=        1)
	PARAMETER(	YMIN_DTI	=        1)
	PARAMETER(	NIL		=        0)
	PARAMETER(	LEFT		=        1)
	PARAMETER(	RIGHT		=        2)
	PARAMETER(	BORDERCODE	=        0)
	PARAMETER(	PI		= 3.141592654)
	PARAMETER(	RTOL		=     1E-6)
	PARAMETER(	NEGRTOL		=    -RTOL)

	PARAMETER(	WT_NDAT	= 1,
     &			BS_NDAT	= 2,
     &			AM_NDAT	= 3,
     &			JB_NDAT	= 1,
     &			JO_NDAT	= 2)

	PARAMETER(	LI_ARM	= 1,
     &			AM_ARM	= 2)

COMMONSCOMMONSCOMMONSCOMMONSCOMMONSCOMMONSCOMMONSCOMMONSCOMMONSCOMMONSCO

C	Arrays to hold link coordinate points 
C	before and after smoothing
C
C
	BYTE		EDGE(2,XMAX_SECTOR,YMAX_SECTOR)
C			are right and top pixel edges boundaries?
C			= -1 for "is non-traversed edge"
C			= 0  for "is not edge"
C			= +1 for "is traversed edge"

	INTEGER*2	AREAINDEX(XMAX_SECTOR,YMAX_SECTOR)
C			area indices of each value in current DTI sector

	INTEGER*2	PT(2,MAXPTS)
C			link points

C	INTEGER*2	PT(2,MAXPTS)
C			link points

	INTEGER		NEXT(MAXPTS)
C			Linked list pointers for PT

	INTEGER*4	NEXTNODE(MAXNODES)
C			ptr to next node in list of nodes in each sector

	INTEGER		LINKENDS(2,MAXLINKS)
C			pointers from a link to its end nodes

	LOGICAL*1	LINKTRAV(2,MAXLINKS)
C			has link been traversed forwards/backwards yet?

	INTEGER		LINKPOS(2,MAXLINKS)
C			pointer to start & end of list of link pts in 
C			PT array and later in the IFJ file instead

	INTEGER*2	LINK_FC(MAXLINKS)
C			link feature code

	INTEGER*2	NPOS(2,MAXNODES)
C			node positions listed in order encountered
C			NPOS(1) 	is node X coord
C			NPOS(2)		is node Y coord

C	INTEGER*2	NPOS(2,MAXNODES)
C			node positions listed in order encountered
C			NPOS(1) 	is node X coord
C			NPOS(2)		is node Y coord

	INTEGER		NDAT(3,MAXNODES)
C			other data relating to each node
C			NDAT(WT_NDAT)	is node weight
C			NDAT(AM_NDAT)	is ptr into arm list
C			NDAT(BS_NDAT)	is ptr to swallow node
C			NDAT(JB_NDAT)	is ptr to node JB
C			NDAT(JO_NDAT)	is ptr to node JO

	INTEGER		ARM(2,MAXARMS)
C			single linked-list of arms pointed into by
C			each node
C			ARM(LI_ARM)	is link index
C					+'ve for links leaving node
C					-'ve for links entering node
C			ARM(AM_ARM)	is ptr to next arm
C
	REAL		RANGE(2,MAXRANGES+1)		! area ranges
	LOGICAL		RANGE_INC(2,MAXRANGES+1)	! area range bounds
							! inclusion flags.
C
	INTEGER		NODELIST(2,MAXNXSECTORS,MAXNYSECTORS)
C			indices of first & last nodes in linked list of
C			nodes in each sector

	INTEGER*2	LR(2,MAXLINKS)
C			left/right area code for each whole link

	INTEGER		N_LINKS
C			No of links found so far

	INTEGER		N_NODES
C			No of nodes found so far

	INTEGER		N_PTS
C			No of link points

	INTEGER		N_ARMS
C			total No of node arms found so far

	INTEGER		XMAX_DTI,YMAX_DTI
C			DTI area mapped to memory

	INTEGER		XMIN_WINDOW,YMIN_WINDOW
	INTEGER		XMAX_WINDOW,YMAX_WINDOW
C			DTI window being processed

C
	INTEGER		FIRSTXY		! DTI coord-data offset

	INTEGER		WXLL,WYLL	! DTI window sector lower left
	INTEGER		WXUR,WYUR	! DTI Window sector upper right
	INTEGER		PXLL,PYLL	! sector lower left
	INTEGER		PXUR,PYUR	! sector upper right
	INTEGER		DXPW,DYPW	! WXLL-PXLL, WYLL-PYLL
	INTEGER		N_RANGES	! No. of ranges in use
	INTEGER		MINVAL,MAXVAL	! min/max DTI vals in ranges
	INTEGER		RMINVAL,RMAXVAL	! min/max DTI vals in ranges
	INTEGER		STEP		! uniform DTI step
	REAL		RSTEP		! uniform DTI step
	INTEGER		NBLOCKS		! number of blocks in DTI file
	INTEGER		DTI_START,DTI_SIZE
	INTEGER		CURR_SECTOR	! current sector index
	INTEGER		NX_SECTORS,NY_SECTORS	! No of X & Y sectors
	INTEGER		IX_SECTOR,IY_SECTOR	! X & Y sector indices
C
	INTEGER		TOTLINKS
	INTEGER         TOTARMS
	INTEGER		TOTJUNCTIONS	! tot No. of junction nodes
	INTEGER		TOTENDS		! tot No. of free-end nodes
	INTEGER		TOTANCHR	! tot No. of loop anchor nodes
	INTEGER		TOTBORDERNODES	! tot No. of border nodes
	INTEGER		TOTAL_BORDER_LINKS
	INTEGER		TOTAL_INTERIOR_LINKS
	INTEGER		UNITS		! Units for input DTI file
C
	INTEGER		TOTNOISE	! tot No. of small loops elimd
C	INTEGER		TOTSNAPPED
	REAL		SMOOTH_TOL	! link smoothing lat. tolerance
C
	LOGICAL		HAD_IFF		! had IFF file-spec
	LOGICAL		ABSOLUTE	! absolute windowing
	LOGICAL		DIAG		! diagnostic messages?
	LOGICAL		CRT		! output to a CRT?
	LOGICAL		TERM		! output to a Terminal?
	LOGICAL		SMOOTHLNK	! smooth links?
	LOGICAL		UNIFORM		! do ranges have equal steps?
	LOGICAL		NOTFIRSTRUN	! not first vectorisation run ?

	INTEGER		LAYER		! IFF layer to be written to

	REAL		RXMIN,RXMAX,RYMIN,RYMAX
C			min and max coord values

	INTEGER*2	IFJ_NAME_LENGTH	! length of IFJ filename 
	CHARACTER*128	IFJ_NAME	! IFJ filename
C
	REAL		IFF_SCALE	!  scale of IFF file
	LOGICAL		REAL
C
	COMMON/VEC/	N_LINKS,N_NODES,N_PTS,XMAX_DTI,YMAX_DTI,
     &			XMIN_WINDOW,YMIN_WINDOW,XMAX_WINDOW,YMAX_WINDOW,
     &                  NOTFIRSTRUN,UNIFORM,DXPW,DYPW,
     &			WXLL,WYLL,WXUR,WYUR,PXLL,PYLL,PXUR,PYUR,
     &			STEP,RSTEP,MINVAL,MAXVAL,RMINVAL,RMAXVAL,
     &                  RANGE,RANGE_INC,N_RANGES,LINKTRAV,
     &			DTI_SIZE,NBLOCKS,N_ARMS,DTI_START,
     &			CURR_SECTOR,NODELIST,NX_SECTORS,NY_SECTORS,
     &			IX_SECTOR,IY_SECTOR,LAYER,SMOOTHLNK,SMOOTH_TOL,
     &			TOTLINKS,TOTAL_INTERIOR_LINKS,TOTAL_BORDER_LINKS,
     &			TOTJUNCTIONS,TOTENDS,TOTANCHR,TOTARMS,TOTNOISE,
     &			RXMIN,RYMIN,RXMAX,RYMAX,TOTBORDERNODES,
     &			AREAINDEX,EDGE,PT,NEXT,LINKENDS,LR,
     &			LINKPOS,LINK_FC,ARM,NPOS,NDAT,NEXTNODE,
     &			IFJ_NAME,IFJ_NAME_LENGTH,
     &                  BORDER_FC,BOUNDARY_FC,CRT,TERM,UNITS,DIAG,
     &                  ABSOLUTE,HAD_IFF,IFF_SCALE,REAL
C
