	SUBROUTINE REVERSLINK(ILINK)
C
***	IDENT	28MY86
***	MODULE	REVERSLINK
C
C	Copyright : Laser-Scan Laboratories Ltd., Cambridge, England
C	Created   : ACM					Mar 1986
C
	IMPLICIT NONE
C
***	COMMON/HERE:VEC/
C
C parameters in
	INTEGER		ILINK
C
C workspace
	INTEGER		I,J,K
	INTEGER		STANOD,FINNOD
	INTEGER		IARMSTA,IARMFIN
	INTEGER*2	IAREA
	INTEGER		PTR(MAXLPTS)		! array of PT indices
	INTEGER		IPT,IPTSTA,IPTFIN
	LOGICAL		LOOP			! is link a closed loop?
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
C	Reverses direction of linked list of points
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
C put list of PT indices into an array
	IPTSTA = LINKPOS(1,ILINK)
	IPTFIN = LINKPOS(2,ILINK)
	LOOP = NEXT(IPTFIN).EQ.IPTSTA
	IPT = IPTSTA
	I = 1
	GOTO 20
10	IPT = NEXT(IPT)
	I = I+1
20	PTR(I) = IPT
	IF (IPT.NE.IPTFIN) GOTO 10
C
C form reversed list
	DO 30 J = I,2,-1
	  NEXT(PTR(J)) = PTR(J-1)
30	CONTINUE
C
	IF (LOOP) THEN
	  NEXT(IPTSTA) = IPTFIN
	ELSE
	  NEXT(IPTSTA) = NIL
	END IF
C
	LINKPOS(1,ILINK) = IPTFIN
	LINKPOS(2,ILINK) = IPTSTA
C
C all references to reversed link must be negated
	STANOD = LINKENDS(1,ILINK)
	FINNOD = LINKENDS(2,ILINK)
C
	IARMSTA = NDAT(AM_NDAT,STANOD)
35	IF (ARM(LI_ARM,IARMSTA).NE.ILINK) THEN
	  IARMSTA = ARM(AM_ARM,IARMSTA)
	  GOTO 35
	END IF
	ARM(LI_ARM,IARMSTA) = -ILINK
C
	IARMFIN = NDAT(AM_NDAT,FINNOD)
40	IF (ARM(LI_ARM,IARMFIN).NE.-ILINK) THEN
	  IARMFIN = ARM(AM_ARM,IARMFIN)
	  GOTO 40
	END IF
	ARM(LI_ARM,IARMFIN) = ILINK
C
	LINKENDS(1,ILINK) = FINNOD
	LINKENDS(2,ILINK) = STANOD
C
	IAREA = LR(1,ILINK)
	LR(1,ILINK) = LR(2,ILINK)
	LR(2,ILINK) = IAREA
C
	END
