C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1991-08-09 12:10:34.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL FUNCTION RDRANG(INT1,INT2)
C
***	MODULE	RDRANG
***	IDENT	09AU91
C
C	Copyright : Laser Scan Laboratories Limited, Cambridge, England
C	Author    : Andrew Morris
C
	IMPLICIT NONE
C
C parameters out
	INTEGER*4	 INT1,INT2		! integer range
C
C workspace
	BYTE		CH
	LOGICAL		ERR,EOLN
	INTEGER*4	RETVAL
C
C functions
	LOGICAL		RDCHS
	INTEGER*4	RDLONG
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
C	Function returns the next range pair from a list of numbers.
C
C	Single values return upper limit = -32768.
C
C	eg. LAYERS 3,10:40,60 100:200 returns
C		3, -32768//10, 40//60, -32768//100, 200
C
C	Spaces and TABs may be used as delimiters instead of commas.
C
C	Function returns TRUE if a range is found.
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
	RDRANG = .FALSE.			! assume failure
	INT2 = -32768
C
10	EOLN = RDCHS(CH)
	IF (EOLN) THEN
	    INT1 = -32768
	    RDRANG=.TRUE.		
	    RETURN				! end of line
	ENDIF
C
	IF (CH.EQ.',') GOTO 10			! read past ','
	CALL BSCH
	IF (CH.GE.'0'.AND.CH.LE.'9') GOTO 20	! integer
	IF (CH.EQ.'-') GOTO 20
	RETURN					! no integer here
C
C read integer (either single value or lower limit of a range)
20	RETVAL = RDLONG(INT1)
	IF (RETVAL) THEN
	  CALL LSL_PUTMSG(RETVAL)
	  RETURN
	END IF
C
C read delimiter
	EOLN = RDCHS(CH)
	IF (EOLN) GOTO 50		! return successfull
	IF (CH.EQ.':') GOTO 30		! upper limit may follow
	CALL BSCH
	GOTO 50				! return successfull
C
C read in upper limit of a range
30	EOLN = RDCHS(CH)
	IF (EOLN) THEN
	  CALL WRITEF('*** Unexpected end of line')
	  RETURN
	END IF
	IF (CH.GE.'0'.AND.CH.LE.'9') GOTO 40
	IF (CH.EQ.'-') GOTO 40
	RETURN
40	CALL BSCH
	RETVAL = RDLONG(INT2)
	IF (RETVAL) THEN
	  CALL LSL_PUTMSG(RETVAL)
	  RETURN
	END IF
C
50	RDRANG = .TRUE.
C
	RETURN
C
	END
