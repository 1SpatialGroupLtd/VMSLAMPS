C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1993-09-28 17:23:56.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	INTEGER FUNCTION LNKNDS
C
***	IDENT	28SE93
***	MODULE	LNKNDS
C
C	Copyright : Laser-Scan Ltd., Cambridge, England
C	Created   : ACM					      Feb 1985
C
CMOD	Made a function to pick up any errors from SETAREAS 
C							JB 25-Aug-1992
	IMPLICIT NONE
C
***	COMMON/HERE:VEC/
***	PARAMETER/HERE:VECTORISEMSG/
***	COMMON/LSL$CMNDTI:DTIHDR/
C
C Functions
	INTEGER		SETAREAS
C
C workspace
	REAL		PCENT
	INTEGER		I,J,K
	INTEGER		XRANGE_WINDOW,YRANGE_WINDOW	! window ranges
	INTEGER		INODE,IBRANCH,ISECTOR,N_SECTORS
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
C	Produces a link/node structure for all of the boundaries
C	around the different areas within the DTI window
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
	LNKNDS = VEC__NORMAL
C
C find how many sectors there are going to be
	XRANGE_WINDOW = DTI_WINDOW_NEX(1)-DTI_WINDOW_SWX(1)+1
	YRANGE_WINDOW = DTI_WINDOW_NEY(1)-DTI_WINDOW_SWY(1)+1
	NX_SECTORS = XRANGE_WINDOW/(XMAX_SECTOR-1)+1
	NY_SECTORS = YRANGE_WINDOW/(YMAX_SECTOR-1)+1
C
C check not too many sectors
	IF(NX_SECTORS.GT.MAXNXSECTORS) THEN
	  CALL LSL_PUTMSG(VEC__TOOMNYCOLS,MAXNXSECTORS)
	  LNKNDS = VEC__TOOMNYCOLS
	  GOTO 999
	END IF
C
	IF (NY_SECTORS.GT.MAXNYSECTORS) THEN
	  CALL LSL_PUTMSG(VEC__TOOMNYROWS,MAXNYSECTORS)
	  LNKNDS = VEC__TOOMNYROWS
	  GOTO 999
	END IF
C
C show percentage of each sector processed
	CALL WRITEF(' ')
	N_SECTORS = NX_SECTORS*NY_SECTORS
C
	WXUR = DTI_WINDOW_SWX(1)
	CURR_SECTOR = 0
C
	DO 20 IX_SECTOR = 1,NX_SECTORS
	  WXLL = WXUR
	  WXUR = WXLL+XMAX_SECTOR-1
	  IF (IX_SECTOR.EQ.1) WXUR = WXUR-1
	  IF (IX_SECTOR.EQ.NX_SECTORS) WXUR = DTI_WINDOW_NEX(1)
	  PXLL = 1
C
	  IF (IX_SECTOR.EQ.1) PXLL = 2
C
	  DXPW = WXLL-PXLL
C
	  WYUR = DTI_WINDOW_SWY(1)
	  DO 10 IY_SECTOR = 1,NY_SECTORS
	    CURR_SECTOR = CURR_SECTOR+1
	    CALL FRAMED_MES(1,CURR_SECTOR)
	    WYLL = WYUR
	    WYUR = WYLL+YMAX_SECTOR-1
	    IF (IY_SECTOR.EQ.1) WYUR = WYUR-1
	    IF (IY_SECTOR.EQ.NY_SECTORS) WYUR = DTI_WINDOW_NEY(1)
	    PYLL = 1
C
	    IF (IY_SECTOR.EQ.1) PYLL = 2
C
	    PXUR = XMAX_SECTOR
	    IF (IX_SECTOR.EQ.NX_SECTORS) PXUR = PXLL+WXUR-WXLL
	    PYUR = YMAX_SECTOR
	    IF (IY_SECTOR.EQ.NY_SECTORS) PYUR = PYLL+WYUR-WYLL
	    DYPW = WYLL-PYLL
C
C set sector of area indices
	    LNKNDS = SETAREAS()
	    IF (.NOT.LNKNDS) GOTO 999
C
C set sector of EDGE values
	    CALL SETEDGES
C
C follow these edges
	    CALL FOLLOW
C
10	  CONTINUE
20	CONTINUE
C
999	RETURN
	END
C
