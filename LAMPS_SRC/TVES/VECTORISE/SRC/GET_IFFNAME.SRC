C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1988-11-24 10:35:02.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	INTEGER*4 FUNCTION GET_IFFNAME
C
***	IDENT	24NO88
***	MODULE	GET_IFFNAME
C
C	Copyright : Laser-Scan Laboratories, Cambridge, England
C	Author    : D R Catlow
C	Created   : April 1988 
C	Modified  : For use with VECTORISE
C	
C	Function  :
C	To parse the IFF filename specified on the command line,
C	against the default LSL$IF:IFF.IFF 
C
C	The function returns TRUE if a file is successfully parsed, and
C	FALSE if an error has occured.
C
C-----------------------------------------------------------------------
C
	IMPLICIT NONE
C
***	COMMON/LSL$CMNDTI:DTIHDR/
C
***	COMMON/HERE:VEC/
C
C-----------------------------------------------------------------------
C
	BYTE		CH		! single character
	CHARACTER*128	DEFAULT_FILENAME  !default filename
	INTEGER*4	RETVAL		! return code
	INTEGER*4	I,J		! counters
C
C 	Functions
	INTEGER*4	GETFILNAM	! parse filename
	LOGICAL		RDCHS		! read character
C
C-----------------------------------------------------------------------
C
	GET_IFFNAME=.FALSE.	! Assume function is successful
C
C-----------------------------------------------------------------------
C	Check for a filename
	IF(RDCHS(CH))THEN
	  CALL WRITEF('%S Specifying command IFF',ERROR_BELL)
	  CALL WRITEF('IFF filename is missing')
	  GET_IFFNAME=.FALSE.
	  CALL BSLN
	  GOTO 999	  
	ENDIF
C
C 	Make up a default filename using DTI filename
	IF(DTILUN_INUSE(1))THEN
	  I = INDEX(DTI_NAME(1),']')
	  IF (I.EQ.0) I = INDEX(DTI_NAME(1),':')
	  J = INDEX(DTI_NAME(1)(I+1:),'.')
	  IF (J.EQ.0) J = INDEX(DTI_NAME(1)(I+1:),' ')
	  DEFAULT_FILENAME = 'LSL$IF:'//DTI_NAME(1)(I+1:I+J-1)//'.IFJ'
	ELSE
          DEFAULT_FILENAME = 'LSL$IF:IFF.IFF'
	ENDIF
C
C	Backspace over character just read, and parse against the
C	default
	CALL BSCH
	RETVAL = GETFILNAM(IFJ_NAME,IFJ_NAME_LENGTH,
     &                     DEFAULT_FILENAME,.TRUE.,%REF('!'))
C
	IF (.NOT.RETVAL) THEN
	  CALL LSL_PUTMSG(RETVAL)
	  GET_IFFNAME=.FALSE.
	  GOTO 999
	ENDIF
C
	HAD_IFF=.TRUE.		!now had an output IFF file spec.
C-----------------------------------------------------------------------
C	Signal success
C
	GET_IFFNAME=.TRUE.
C
C-----------------------------------------------------------------------
999	RETURN
C
	END
