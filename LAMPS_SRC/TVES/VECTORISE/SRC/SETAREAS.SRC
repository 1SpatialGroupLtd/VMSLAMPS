	INTEGER FUNCTION SETAREAS
C
***	IDENT	26AU93
***	MODULE	SETAREAS
C
C	Copyright : Laser-Scan Ltd., Cambridge, England
C	Created   : ACM					      Feb 1985
C
CMOD	  : Handle real ranges				 JB 01-Sep-1991
CMOD	  : Made a function				 JB 25-Aug-1992
C	    Use NULL DTI values to set up UNDEFCODE
C	    avoiding the output of debug message
C	    "SHOULD NEVER GET HERE IN SETAREAS"
C
CMOD1209 Use range bound flags to determine the boolean operator
C	 used when testing real heights against range bounds.
C							JMC 19-Mar-1993
	IMPLICIT NONE
C
***	COMMON/HERE:VEC/
***	COMMON/LSL$CMNDTI:DTIHDR/
***	PARAMETER/LSL$CMNDTI:DTIPAR/
***	PARAMETER/LSL$CMNDTI:DTILIBMSG/
C
C local parameters
	INTEGER*4	UNDEFCODE
	PARAMETER(	UNDEFCODE = -32767)
C
C workspace
	INTEGER*4	GUESS		! a DTI value
	INTEGER*4	WX,WY		! DTI window coords
	INTEGER*4	PX,PY		! sector coords
	INTEGER*4	I
C
	REAL		RH		! real height
	INTEGER*4	H		! height from matrix
	INTEGER*2	WH		! word height
	BYTE		BH		! byte height
	EQUIVALENCE	(BH,WH)		! treat as unsigned
C
	LOGICAL*1	GUESS_HI	! guessed high?
	LOGICAL*1	GUESS_LO	! guessed lo?
C
C function
	INTEGER*4	DTI_READ_REAL_DATA  !get real data value
	INTEGER*4	DTI_READ_LONG_DATA  !get long data value
	INTEGER*4	DTI_READ_WORD_DATA  !get word data value
	INTEGER*4	DTI_READ_BYTE_DATA  !get byte data value
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
C	Sets up AREAINDEX sector array of DTI value area indices so
C	that sector point (PXLL,PYLL) corresponds to  DTI point
C	(WXLL,WYLL) and sector covers DTI area from (WXLL,WYLL) up to
C	(WXUR,WYUR), and the entire image is surrounded by a one pixel
C	wide border of pixels with a special area-index = BORDERCODE.
C
C	Null DTI values (ie. <= -32767) will be given area-index
C	= UNDEFCODE
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
	SETAREAS = DTI__NORMAL		! assume success
C
C if DTI step is uniform then AREAINDEX can be calculated directly
C
	IF (UNIFORM) THEN
	  WX = WXLL
C
	  DO 20 PX = PXLL,PXUR		! main body of sector
	     WY = WYLL
C
	     DO 10 PY = PYLL,PYUR
		IF (DATA_TYPE(1).EQ.DATA_REAL) THEN	! REAL
		   SETAREAS=DTI_READ_REAL_DATA(1,RH,WX,WY)
		   IF (.NOT.SETAREAS) THEN
		      CALL LSL_PUTMSG(SETAREAS) 
		      GOTO 999
		   ENDIF
C
		   IF (RH.EQ.DTI_NULL_REAL) THEN
		      AREAINDEX(PX,PY) = UNDEFCODE	! RH must be "undefined"
		      GOTO 9
		   ENDIF
C
		ELSEIF (DATA_TYPE(1).EQ.DATA_WORD) THEN
		   SETAREAS=DTI_READ_WORD_DATA (1,WH,WX,WY)
		   IF (.NOT.SETAREAS) THEN
		      CALL LSL_PUTMSG(SETAREAS) 
		      GOTO 999
		   ENDIF
C
		   IF (WH.EQ.DTI_NULL_WORD) THEN
		      AREAINDEX(PX,PY) = UNDEFCODE	! WH must be "undefined"
		      GOTO 9
		   ENDIF
C
		   H = WH
		ELSEIF (DATA_TYPE(1).EQ.DATA_BYTE .OR.
     &			DATA_TYPE(1).EQ.DATA_BIT) THEN
		   SETAREAS=DTI_READ_BYTE_DATA (1,BH,WX,WY)
		   IF (.NOT.SETAREAS) THEN
		      CALL LSL_PUTMSG(SETAREAS) 
		      GOTO 999
		   ENDIF
C
		   H = WH
		ELSE
		   SETAREAS=DTI_READ_LONG_DATA (1,H,WX,WY)
		   IF (.NOT.SETAREAS) THEN
		      CALL LSL_PUTMSG(SETAREAS) 
		      GOTO 999
		   ENDIF
C
	 	   IF (H.EQ.DTI_NULL_LONG) THEN
		      AREAINDEX(PX,PY) = UNDEFCODE	! H must be "undefined"
		      GOTO 9
		   ENDIF
		ENDIF
C
		IF (REAL .AND. RH.GT.-32767) THEN
		   AREAINDEX(PX,PY) = AMIN1( (RH-RMINVAL)/RSTEP,
     &						 FLOAT(MAXRANGES) )
		ELSEIF (H.GT.-32767) THEN
		   AREAINDEX(PX,PY) = MIN( (H-MINVAL)/STEP + 1,
     &							MAXRANGES )
		ELSE
		   AREAINDEX(PX,PY) = UNDEFCODE
		ENDIF
C
9		WY = WY+1
C
10	     CONTINUE
C
	     WX = WX+1
20	  CONTINUE
C
	  GOTO 90
	ENDIF
C
C otherwise it has to be worked out by trial and error
C
	GUESS = 1
C
	WX = WXLL
C
	DO 80 PX = PXLL,PXUR		! main body of sector
	   WY = WYLL
C
	   DO 70 PY = PYLL,PYUR
	      IF (DATA_TYPE(1).EQ.DATA_REAL) THEN	! REAL
		 SETAREAS=DTI_READ_REAL_DATA (1,RH,WX,WY)
		 IF (.NOT.SETAREAS) THEN
		    CALL LSL_PUTMSG(SETAREAS) 
		    GOTO 999
		 ENDIF
C
		 IF (RH.EQ.DTI_NULL_REAL) THEN
		    AREAINDEX(PX,PY) = UNDEFCODE	! RH must be "undefined"
		    GOTO 60
		 ENDIF
C
	      ELSEIF (DATA_TYPE(1).EQ.DATA_WORD) THEN
		 SETAREAS=DTI_READ_WORD_DATA(1,WH,WX,WY)
		 IF (.NOT.SETAREAS) THEN
		    CALL LSL_PUTMSG(SETAREAS) 
		    GOTO 999
		 ENDIF
C
		 IF (WH.EQ.DTI_NULL_WORD) THEN
		    AREAINDEX(PX,PY) = UNDEFCODE	! WH must be "undefined"
		    GOTO 60
		 ENDIF
C
		 H = WH
		 RH = H
	      ELSEIF (DATA_TYPE(1).EQ.DATA_BYTE .OR.
     &		      DATA_TYPE(1).EQ.DATA_BIT) THEN
		 SETAREAS=DTI_READ_BYTE_DATA (1,BH,WX,WY)
		 IF (.NOT.SETAREAS) THEN
		    CALL LSL_PUTMSG(SETAREAS) 
		    GOTO 999
		 ENDIF
C
		 H = WH
		 RH = H
	      ELSE
		 SETAREAS=DTI_READ_LONG_DATA (1,H,WX,WY)
		 IF (.NOT.SETAREAS) THEN
		    CALL LSL_PUTMSG(SETAREAS) 
		    GOTO 999
		 ENDIF
C
		 IF (H.EQ.DTI_NULL_LONG) THEN
		    AREAINDEX(PX,PY) = UNDEFCODE	! H must be "undefined"
		    GOTO 60
		 ENDIF
C
		 RH = H
	      ENDIF
C
C If real data check range boundary inclusion flags to decide whether to use
C an inclusive (eg LE) or exclusive (eg LT) operator to test if the
C height lies in the range.
	      IF (DATA_TYPE(1).EQ.DATA_REAL) THEN
		 IF (RANGE_INC(1,GUESS)) THEN
		    GUESS_LO = RH.GE.RANGE(1,GUESS)
		 ELSE
		    GUESS_LO = RH.GT.RANGE(1,GUESS)
		 ENDIF
		 IF (RANGE_INC(2,GUESS)) THEN
	            GUESS_HI = RH.LE.RANGE(2,GUESS)
		 ELSE
	            GUESS_HI = RH.LT.RANGE(2,GUESS)
		 ENDIF
	      ELSE 	! integer data
	         GUESS_LO = H.GE.RANGE(1,GUESS)
	         GUESS_HI = H.LE.RANGE(2,GUESS)
	      ENDIF
C
	      IF (.NOT. (GUESS_HI.AND.GUESS_LO) ) THEN
	 	IF (GUESS_HI) THEN
	           DO 30 I = GUESS-1,1,-1
	             IF (RH.GE.RANGE(1,I)) THEN
	               GUESS = I
	               GOTO 50
	             ENDIF
30	           CONTINUE
C
	           AREAINDEX(PX,PY) = UNDEFCODE	   ! H must be "undefined"
	           GOTO 60
		ELSE
	           DO 40 I = GUESS+1,N_RANGES
	             IF (RH.LE.RANGE(2,I)) THEN
	               GUESS = I
	               GOTO 50
	             ENDIF
40	           CONTINUE
C
		   PAUSE '*** SHOULD NEVER GET HERE IN SETAREAS ***' 	!DEBUG
C
		ENDIF
	      ENDIF
C
50	      AREAINDEX(PX,PY) = GUESS
C
60	      WY = WY+1
C
70	   CONTINUE
C
	   WX = WX+1
80	CONTINUE
C
C Create border pixels
C
90	CONTINUE
C
	IF (PYLL.NE.1) THEN		! bottom edge
	  DO 100 PX = 1,PXUR
100	  AREAINDEX(PX,1) = BORDERCODE
	ENDIF
C
	IF (PXUR.NE.XMAX_SECTOR) THEN	! right edge
	  PXUR = PXUR+1
	  DO 110 PY = 1,PYUR
110	  AREAINDEX(PXUR,PY) = BORDERCODE
	END IF
C
	IF (PYUR.NE.YMAX_SECTOR) THEN	! top edge
	  PYUR = PYUR+1
	  DO 120 PX = 1,PXUR
120	  AREAINDEX(PX,PYUR) = BORDERCODE
	ENDIF
C
	IF (PXLL.NE.1) THEN		! left edge
	  DO 130 PY = 1,PYUR
130	  AREAINDEX(1,PY) = BORDERCODE
	ENDIF
C
999	RETURN
	END
C
