C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1986-10-27 12:33:18.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE THNLST(IPTSTA,IPTFIN,N_OUT,TOL)

***	MODULE	THNLST
***	IDENT	25AP86

C	Copyright Laser-Scan Laboratories Ltd, Cambridge, England
C	Author    ACM 					Apr 1986

	IMPLICIT  NONE

***	COMMON/HERE:VEC/	! has PT,NEXT

C parameters in
	INTEGER		IPTSTA,IPTFIN	! link start & end pts
	REAL		TOL	! max dev of thinned line from original

C parameters out
	INTEGER		N_OUT	! No. of pts in thinned line

C workspace
	INTEGER		I,IPT
	INTEGER		W(MAXLPTS)	! workspace for THIN
	INTEGER		N_IN		! No. of pts in input line

CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
C	Output line is input line with as many points as possible
C	removed so that the distance of output line from input line is
C	never greater than TOL
C
C	Line end-points are unchanged, except where they end up equal
C	with no points between them, in which case the second is
C	effectively deleted
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC

C Put linked list of pts into a local contiguous array LINK1
	LINK1(1,1) = PT(1,IPTSTA)
	LINK1(2,1) = PT(2,IPTSTA)
	IPT = IPTSTA
	N_IN = 1
10	IPT = NEXT(IPT)
	N_IN = N_IN+1
	LINK1(1,N_IN) = PT(1,IPT)
	LINK1(2,N_IN) = PT(2,IPT)
	IF (IPT.NE.IPTFIN) GOTO 10

C Thin LINK1
	CALL THIN(LINK1,N_IN,LINK2,N_OUT,TOL,W)

C If N_OUT.GT.1 then write LINK2 back over original line
	IF (N_OUT.GT.1) THEN
	  IPT = IPTSTA
	  DO 40 I = 2,N_OUT-1
	    IPT = NEXT(IPT)
	    PT(1,IPT) = LINK2(1,I)
	    PT(2,IPT) = LINK2(2,I)
40	  CONTINUE
	  NEXT(IPT) = IPTFIN
	END IF

	END
