C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1986-06-23 16:16:18.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	INTEGER*2 FUNCTION NODINDEX(IPT,MAKENODE)
C
***	IDENT	23JN86
***	MODULE	NODINDEX
C
C	Copyright : Laser-Scan Laboratories Ltd., Cambridge, England
C	Created   : ACM					Apr 1986
C
	IMPLICIT NONE
C
***	COMMON/HERE:VEC/
C
c parameters in
	INTEGER		IPT		! PT index at node position
	LOGICAL		MAKENODE	! make new node if none here?
C
C workspace
	REAL		XNODE,YNODE	! node DTI coords
	INTEGER*2	INODE		! node index
	INTEGER*2	STANOD		! index of latest node in sector
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
C	Returns node index of given node point.
C
C	If node is not found at given point then if MAKENODE is true
C	it will add node to node list, else it will return NODINDEX=0
C
C	Also maintains lists of nodes in each sector.
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
C Find node sector
	XNODE = PT(1,IPT)
	YNODE = PT(2,IPT)
	IX_SECTOR = 1+XNODE/XMAX_SECTOR
	IX_SECTOR = MIN(IX_SECTOR,NX_SECTORS)
	IY_SECTOR = 1+YNODE/YMAX_SECTOR
	IY_SECTOR = MIN(IY_SECTOR,NY_SECTORS)
C
C Try to match node given with existing node in this sector
	STANOD = NODELIST(1,IX_SECTOR,IY_SECTOR)
	INODE = STANOD
	GOTO 20
10	INODE = NEXTNODE(INODE)
20	IF (INODE.EQ.NIL) GOTO 30
	IF (XNODE.EQ.NPOS(1,INODE).AND.YNODE.EQ.NPOS(2,INODE)) THEN
	  NODINDEX = INODE
	  RETURN
	END IF
	GOTO 10
C
30	IF (MAKENODE) THEN		! add new node to node list
	  N_NODES = N_NODES+1
	  IF (N_NODES.GT.MAXNODES) THEN
	    CALL EXPAND('*** FATAL ERROR : TOO MANY NODES ***')
	    CALL TTWLIN()
	    CALL FLWLIN()
	    CALL EXIT
	  END IF
	  NPOS(1,N_NODES) = XNODE		! set node position
	  NPOS(2,N_NODES) = YNODE
	  NDAT(WT_NDAT,N_NODES) = 1	! set initial node weight
C
C Put new node at head of list of nodes for current sector
	  NODELIST(1,IX_SECTOR,IY_SECTOR) = N_NODES
	  NEXTNODE(N_NODES) = STANOD
C
	  NODINDEX = N_NODES
	ELSE
	  NODINDEX = 0
	END IF
C
	END
