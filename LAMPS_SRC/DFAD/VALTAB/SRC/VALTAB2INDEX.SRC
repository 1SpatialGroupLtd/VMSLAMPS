C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1990-09-04 19:28:56.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	PROGRAM VALTAB2INDEX
C
*** 	MODULE VALTAB2INDEX
***	IDENT 03FE88
C
C Copyright Laser-Scan Laboratories Ltd, Cambridge, England
C Author: J.M. Billing			3 Feb 1988
C
C Program to convert from text format of validation table dumped
C from tape using e.g.
C 	MTD VALTAB_DUMP=MT:/BL:4:146/ICL/CH/WID:44/NH
C to the index file format used by DFAD/FADT utilities to validate
C FADT records etc.
C
	IMPLICIT NONE
C
C common blocks
	INCLUDE 'LSL$FADTCMN:RULE.CMN'
C
C w/s variables
	INTEGER		COUNT
C
C functions
	LOGICAL		OPEN_FILES
	LOGICAL		CLOSE_FILES
	LOGICAL		READ_RULE
	LOGICAL		WRITE_RULE
C
C Init COUNT
C
	COUNT = 1
C
C Init LSLIB
C
	CALL LSL_INIT()
C
C Open the input text file (VALTAB_DUMP.LIS) and the new output 
C indexed file (VALTAB.DAT).
C
	IF (.NOT.OPEN_FILES()) GOTO 900		! error
C
C Report starting transfer
C
	CALL WRITEF('Starting transfer')
C
C Read each rule record in turn from text file, exit if error occurs
C
10	IF (.NOT.READ_RULE()) GOTO 999		! exit
C
C Write each rule record to indexed file
C
	IF (.NOT.WRITE_RULE()) GOTO 900		! error
C
C Report/increment count
C
	IF (MOD(COUNT,200).EQ.0) THEN
	   CALL WRITEF
	   CALL WRITEF('Transfered as far as rule %N with key %N',
     &				COUNT,RULE.KEY)
	   CALL DISPLAY_RULE()
	ENDIF
C
	COUNT = COUNT + 1
C
C Loop for next record
C
	GOTO 10
C
C Errors
C
900	CALL WRITEF
	CALL WRITEF('Error in VALTAB transfer at rule %N with key %N',
     &						COUNT,RULE.KEY)	
C
C Exit, informing user and closing files
C
999	CALL WRITEF
	CALL WRITEF('Transfer terminated at rule %N with key %N',
     &						COUNT,RULE.KEY)
C
	CALL DISPLAY_RULE()
C
	CALL CLOSE_FILES()
C
	END
