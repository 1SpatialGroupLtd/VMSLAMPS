C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1988-02-03 15:44:28.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL FUNCTION CONSTRUCT_ACCREG()
C
***	MODULE CONSTRUCT_ACCREG
***	IDENT 28JA88
C
C Copyright Laser-Scan Laboratories Ltd, Cambridge, England.
C Author: J.M. Billing			28 Jan 1988
C
C Function to decide if there are any accuracy subregions and
C to construct a layer 0 to hold them in AC8s if there are some.
C Returns .TRUE. if succeeds
C
	IMPLICIT NONE
C
C Common blocks
	INCLUDE 'LSL$FADTMERGE:FADTMERGE.CMN'
	INCLUDE 'LSL$FADTCMN:ACC.CMN'
	INCLUDE 'LSL$CMNIFF:IFFHAN.CMN'
C
C w/s variables
	INTEGER*2	REG	! accuracy subregion
C
C functions
	LOGICAL	READ_ACC		! read acc/accreg records
	LOGICAL	FEATURE_ACCREG		! build feature for 
					! one ACC region
C
C Assume success
C
	CONSTRUCT_ACCREG = .TRUE.
C
C Report in log if required
C
	CALL EXPAND('Constructing layer zero accuracy region')
	CALL APPEND(' features from FADT file.')
C
	IF (HAD_LIST) THEN	! log file
	   CALL FLWSEL(LISTLUN)
	   CALL FLWSTR
C
	ELSE			! SYS$OUTPUT
	   CALL TTWSTR
	ENDIF
C
C Find out if there are ACC records from which to construct
C regions.
C Only construct layer 0 if there are
C
	IF (.NOT.READ_ACC()) THEN
	   CALL EXPAND('   No accuracy record found in FADT file.')
C
	   IF (HAD_LIST) THEN
	      CALL FLWSEL(LISTLUN)
	      CALL FLWSTR
C
	   ELSE
	      CALL TTWSTR
	   ENDIF
	   GOTO 950
	ENDIF
C
C Find out if there are any accuracy regions
C Only construct layer 0 if there are
C Otherwise exit and let copying of header etc be done by
C subsequent procedures
C
	IF (ACC.MULTIPLE_OUTLINE.LE.0) THEN
	   CALL EXPAND('   No accuracy regions found in FADT file.')
C
	   IF (HAD_LIST) THEN
	      CALL FLWSEL(LISTLUN)
	      CALL FLWSTR
C
	   ELSE
	      CALL TTWSTR
	   ENDIF
	   GOTO 950
	ENDIF
C
C Have at least one subregion, so select iff input file
C
	CALL IFFSEL(INLUN)
C
C Now copy iff file as far as first NO.
C
10	CALL IFFNXT(IECODE,IELEN)
	IF (IELEN.EQ.-1) GOTO 900
C
C Check if NO, copy if not and repeat loop
C
	IF (IECODE.NE.'NO') THEN
	   CALL EIHCPY(OUTLUN)
	   GOTO 10
	ENDIF
C
C Now construct layer
C
C Select output iff file
C
	CALL IFFSEL(OUTLUN)
C
C First write the NO marker, remebering the position for
C later addition of pointer to EO
C
	LPOSNO = LPOSE
	CALL IFFNO(0,0,0)
C
C Now constuct feature for each accuracy subregion in turn
C
	DO 20 REG = 1, ACC.MULTIPLE_OUTLINE
	   IF (.NOT.FEATURE_ACCREG(REG)) GOTO 900
20	CONTINUE
C
C Finally write EO, inserting pointer to it in NO at start of
C layer
C
	CALL IFFUNO(LPOSNO)
	CALL IFFEO
C
C Check we are at start of layer 1 in input
C Skip existing layer 0 if necessary to get to it
C
C Select input
C
	CALL IFFSEL(INLUN)
C
C Read layer number
C
	CALL EIHR(LAYER,1,1)
C
C Skip it if it is layer 0
C
	IF (LAYER.EQ.0) THEN
	   CALL IFFNXC('NO',IELEN)
	   CALL EIHR(LAYER,1,1)
	ENDIF
C
C Check for premature end of file
C
	IF (IELEN.EQ.-1) GOTO 900
C
C Otherwise copy the layer start entry, remebering position for later
C updating of pointer to EO
C
	CALL IFFSEL(OUTLUN)
	LPOSNO = LPOSE
	CALL IFFNO(LAYER,0,0)
	CALL IFFSEL(INLUN)
C
	GOTO 950
C
C Errors
C
900	CONSTRUCT_ACCREG = .FALSE.
C
C Exit, output blank line to log/list
C
950	CALL EXPAND
C
	IF (HAD_LIST) THEN
	   CALL FLWSEL(LISTLUN)
	   CALL FLWSTR
	ELSE
	   CALL TTWSTR
	ENDIF
C
	RETURN
	END
