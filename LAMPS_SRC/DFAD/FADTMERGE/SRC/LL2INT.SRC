C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1988-02-01 12:26:02.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL FUNCTION LL2INT(LLSTR, LLINT)
C
***	MODULE LL2INT
***	IDENT 28JA88
C
C Copyright Laser-Scan Laboratories Ltd, Cambridge, England.
C Author: J.M. Billing			28 Jan 1988
C
C Function to convert latitude/longitude to integer
C Returns .TRUE. if succeeds
C
	IMPLICIT NONE
C
C arguments
	CHARACTER*(*)	LLSTR	! lat(8 chars) or long(9 chars) in
				! geographicals i.e. 1/10 seconds
	INTEGER		LLINT	! lat/long integer (0 +/- 90/180 degs)
				! also in geographicals
C
C w/s variables
	INTEGER		L	! length of LLSTR
	INTEGER		SEC	! (1/10) of seconds
	INTEGER		MIN	! minutes
	INTEGER		DEG	! degrees
C
C functions
	LOGICAL		RDLONG	! read long
C
C Assume success
C
	LL2INT = .TRUE.
C
C Find length of LLSTR
C
	L = LEN(LLSTR)
C
C Convert numeric part
C
	CALL SETAUX(%REF(LLSTR),L)
	IF (RDLONG(LLINT)) THEN
	   LLINT = 0
	   LL2INT = .FALSE.
	ENDIF
	CALL BSLN
C
C Convert to geo
C
	SEC = MOD (LLINT,1000)
	MIN = MOD (LLINT,100000) / 1000
	DEG = LLINT / 100000
	LLINT = DEG*36000 + MIN*600 + SEC
C
C Work out if +/-
C
	IF ((LLSTR(L:L).EQ.'S').OR.(LLSTR(L:L).EQ.'W')) LLINT = - LLINT
C
C Exit
C
	RETURN
	END
