C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1988-06-01 16:04:16.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL FUNCTION COPY_START_NF ()
C
***	MODULE COPY_START_NF
***	IDENT 01JN88
C
C Copyright Laser-Scan Laboratories Ltd, Cambridge, England
C Author : J.M. Billing		6 Jan 1988
C
C Function to copy current feature entry from input to output
C as far as and including the FS entry.
C Returns .TRUE. if suceeds.
C
C MOD	To validate input IFF FCs against input FADT FAT according to
C	the formula FC = 100 + FAT		JMB	25 May 1988
C
C
	IMPLICIT NONE
C
	INCLUDE 'LSL$FADTMERGE:FADTMERGE.CMN'
	INCLUDE 'LSL$FADTCMN:FADT.CMN'
C
C functions
	INTEGER		FLWSTR
C
C w/s
	INTEGER		ISN		! internal seq no.
	INTEGER*2	ISTAT(4)	! words in FS entry
	INTEGER		OK,IERR		! error return codes
C
	COPY_START_NF = .TRUE.		! assume success
C
C Select output IFF file
C
	CALL IFFSEL(OUTLUN)
C
C Write the new NF entry (current EIH is NF)
C
	ISN = 0
	CALL IFFNF (FSN,ISN)
C
C Select input IFF file
C
	CALL IFFSEL(INLUN)
C
C Copy entries up to FS
C
10	CALL SEL_IFFNXT(IECODE,IELEN)
	IF (IELEN.EQ.-1) GOTO 20
C
C If FS entry, and have /FC qualifier, then write FADT.FID into FS
C entry as the Feature Code
C In any case, must validate FC against FAT using FC = 100 + FAT
C
	IF (IECODE.EQ.'FS') THEN
	   CALL EIHR(ISTAT,4,1)
C
C Validate the IFF FC against the FADT FAT, reporting any problem
C
	   IF (ISTAT(1).NE.(100+FADT.FAT)) THEN
C
C Set up message
C
	      CALL EXPAND(
     &		'Incompatible FC (%^W%N) and FAT (%N) '//
     &		'in feature with FSN (FAC) %^L%I6',
     &			ISTAT(1),FADT.FAT,FSN)
C
C Output message to SYS$OUTPUT or list file
C
	      IF (HAD_LIST) THEN
	         CALL FLWSEL(LISTLUN)
	         OK = FLWSTR (, IERR)
	         IF (.NOT.OK) THEN
	            CALL LSL_PUTMSG(OK)
	            CALL LSL_ADDMSG(IERR)
	         ENDIF
	      ELSE
	         CALL TTWSTR
	      ENDIF
	   ENDIF
C
C Check if taking feature codes from FADT FID and FAT, according to
C the formula FID + FID*1000
C
	   IF (FC) ISTAT(1) = FADT.FID + (FADT.FAT+1)*1000
C
C Copy the FS entry, including the feature code, to the output IFF file
C
	   CALL IFFSEL(OUTLUN)
	   CALL IFFFS(ISTAT)
	   CALL IFFSEL(INLUN)
	ELSE
	   CALL EIHCPY(OUTLUN)
	ENDIF
C
	IF (IECODE.NE.'FS') GOTO 10
	GOTO 30
C
C Premature EOF or other error
C
20	COPY_START_NF = .FALSE.
C
C Exit
C
30	RETURN
	END
