	LOGICAL FUNCTION GET_COMMAND()
C
***	MODULE	GET_COMMAND
***	IDENT	06JA88
C
C Copyright Laser-Scan Laboratories Ltd.,Cambridge,England
C Author : J.M. Billing		6 Jan 1987
C
	IMPLICIT NONE
C
	INCLUDE 'LSL$FADTMERGE:FADTMERGE.CMN'
	INCLUDE 'LSL$FADTMERGE:FADTMERGEMSG.PAR'
	INCLUDE 'LSL$CMNLSL:CLD.CMN'
C
C Command Language Definitions:
	EXTERNAL	FADTMERGE_CLD
C
C w/s variables
	LOGICAL		ABSENT	   ! .T. if file param. not found
	LOGICAL		LOCAL      ! .T. if qual. is local
	LOGICAL		LOCNEG     ! set .T. if qual. locally negated
C
        LOGICAL		LOCERR     ! .T. - local error reporting
C
C Functions called:
	INTEGER*4	DCL_FILE   ! reads & parses file title from DCL 
C			           ! command line
	INTEGER*4	DCL_QUAL   ! looks for specified qualifier
        INTEGER*4       DCL_STARTUP! looks for command line
        INTEGER*4       DCL_CML	   ! gets command line
C
C...................................................................
C
C Initialise things
C
	LOCERR =.TRUE.		 ! local error reporting
	LOCAL  =.FALSE.          ! set .T. if qual. is local
        LOCNEG =.FALSE.          ! set .T. if qual. locally negated
C
C....................................................................
C
C Get command line for verb FADTMERGE. DCL_STARTUP will return set to
C SS$_NORMAL if all well.
C
	GET_COMMAND=DCL_STARTUP('FADTMERGE'    	! command verb
     &      		,.FALSE.		! don't split par lists
     &      		,FADTMERGE_CLD		! CLD module name
     &      		,LOCERR)        	! local error reporting
        IF (.NOT.GET_COMMAND) GOTO 10 		! return
C
C....................................................................
C
C Check for qualifiers
C
C
C Check for /(NO)HEADER
C
	GET_COMMAND = DCL_QUAL('HEADER'	! qual. name
     &     	,HEADER			! returned .T. if qual. found
     &          ,LOCAL		  	! .T. if qual local to parameter
     &		,LOCNEG		  	! .T. if qual locally negated
     &          ,LOCERR)		! .T.-local error reporting
	IF (.NOT.GET_COMMAND) GOTO 10	! return
C
C Check for /(NO)ACCURACY
C
	GET_COMMAND = DCL_QUAL('ACCURACY' ! qual. name
     &     	,ACCURACY		! returned .T. if qual. found
     &          ,LOCAL		  	! .T. if qual local to parameter
     &		,LOCNEG		  	! .T. if qual locally negated
     &          ,LOCERR)		! .T.-local error reporting
	IF (.NOT.GET_COMMAND) GOTO 10	! return
C
C Check for /(NO)MERGE
C
	GET_COMMAND = DCL_QUAL('MERGE'	! qual. name
     &     	,MERGE			! returned .T. if qual. found
     &          ,LOCAL		  	! .T. if qual local to parameter
     &		,LOCNEG		  	! .T. if qual locally negated
     &          ,LOCERR)		! .T.-local error reporting
	IF (.NOT.GET_COMMAND) GOTO 10	! return
C
C Check for /(NO)FC
C
	GET_COMMAND = DCL_QUAL('FC'	! qual. name
     &     	,FC			! returned .T. if qual. found
     &          ,LOCAL		  	! .T. if qual local to parameter
     &		,LOCNEG		  	! .T. if qual locally negated
     &          ,LOCERR)		! .T.-local error reporting
	IF (.NOT.GET_COMMAND) GOTO 10	! return
C
C Check for /FADT=filespec for input FADT file
C
	GET_COMMAND=DCL_FILE('FADT'	! label
     &	             ,'LSL$FADT:FADT.FADT'! default filespec
     &	             ,ABSENT		! .T. if absent
     &	             ,.FALSE.      	! don't expect list of files
     &               ,LOCERR)      	! .T.-local error reporting
C
	IF (.NOT.GET_COMMAND) GOTO 10 	! return
C
C /FADT must be present
C
	IF (ABSENT) THEN		! default
	   GET_COMMAND = .FALSE.
	   CALL LSL_PUTMSG(FM__NOFADT)
	   GOTO 10
C
	ELSE				! File specified
	   FADTFILE = FILARY(1)(1:FIL_LEN(1))
	   FADTLEN = FIL_LEN(1)
	ENDIF
C
C Now /LIST
C
	GET_COMMAND = DCL_QUAL('LIST'	! qual. name
     &     	,HAD_LIST          	! returned .T. if qual. found
     &          ,LOCAL 		  	! .T. if qual local to parameter
     &		,LOCNEG   	  	! .T. if qual locally negated
     &          ,LOCERR)          	! .T.-local error reporting
	IF (.NOT.GET_COMMAND) GOTO 10	! return
C
C Check for /LIST=filespec
C
	IF (HAD_LIST) THEN    	  
	  GET_COMMAND = DCL_FILE('LIST'	! label
     &	            ,'FADTMERGE.LIS'	! default filespec
     &	            ,ABSENT		! .T. if absent
     &	            ,.FALSE.      	! don't expect list of files
     &              ,LOCERR)      	! .T.-local error reporting
C
	  IF (.NOT.GET_COMMAND) GOTO 10	! return
C
	  IF (.NOT.ABSENT) THEN		! File specified
            LISTFILE = FILARY(1)(1:FIL_LEN(1))
	    LISTLEN = FIL_LEN(1)
	  ENDIF
	ENDIF
C
C Get input IFF file-name
C
	GET_COMMAND = DCL_FILE('IN_FILESPEC'	!parameter label
     &		,'LSL$IF:IFF.IFF;0'	! default file-name
     &		,ABSENT  	  	! .T. if no file-name
     &		,.FALSE.		! don't expect list of files
     &          ,LOCERR)		! .T.-local error reporting
C
C Transfer file-spec to a local variable
C
	IF (GET_COMMAND) THEN
	   INFILE = FILARY(1)(1:FIL_LEN(1))
	   INLEN = FIL_LEN(1)
	ELSE
	   GOTO 10 			! return
	ENDIF 
C
C Get output filename
C
	GET_COMMAND = DCL_FILE('OUT_FILESPEC'	! parameter label
     &		,'LSL$IF:IFF.IFF'           	! default file-name
     &		,ABSENT		  		! .T. if no file-name
     &		,.FALSE.	  		! not list of files
     &		,LOCERR)	  		! local error reporting
C
C Transfer file-spec to a local variable
C
	IF (GET_COMMAND) THEN
	   OUTFILE = FILARY(1)(1:FIL_LEN(1))
	   OUTLEN = FIL_LEN(1)
        ENDIF
C
C As we may want to write out the commad line to an FADT file lets 
C get it !
C
	GET_COMMAND=DCL_CML(CMLSTR,CMLEN,.TRUE.) 
C			
10	RETURN
   	END
