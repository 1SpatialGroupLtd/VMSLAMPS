	LOGICAL FUNCTION FIND_NF()
C
***	MODULE FIND_NF
***	IDENT 06JA88
C
C Copyright Laser-Scan Laboratories, Cambridge, England
C Author : J.M. Billing		6 Jan 1988
C
C Function to copy all entries up to, but not including,
C the next NF entry from the input IFF file to the output
C file.
C Also reads NF and sets up FSN with number of feature found.
C Returns .TRUE. if finds NF.
C 
	IMPLICIT NONE
C
	INCLUDE 'LSL$FADTMERGE:FADTMERGE.CMN'
	INCLUDE 'LSL$CMNIFF:IFFHAN.CMN'
C
C
C Assume success
C
	FIND_NF = .TRUE.
C
C Select input IFF file
C
	CALL IFFSEL (INLUN)
C
C Read next entry from input IFF file
C
10	CALL SEL_IFFNXT (IECODE, IELEN)
	IF (IELEN.EQ.-1) GOTO 900
C
C Check if NF and remember its FSN if it is
C
	IF (IECODE.EQ.'NF') THEN
	   CALL EIHRI (FSN, 1, 1)
	   GOTO 950
	ENDIF
C
C Not NF, so copy it to output file
C First checking for certain special cases
C i.e. EF, NO, EO
C
C EF requires special handling to cope with internal flags
C
	IF (IECODE.EQ.'EF') THEN
	   CALL IFFSEL(OUTLUN)
	   CALL IFFEF
	   CALL IFFSEL(INLUN)
C
C For NO must remember its position and set up dummy EO pointer
C
	ELSEIF (IECODE.EQ.'NO') THEN
	   CALL EIHR(LAYER,1,1)
	   CALL IFFSEL(OUTLUN)
	   LPOSNO = LPOSE
	   CALL IFFNO(LAYER,0,0)
	   CALL IFFSEL(INLUN)
C
C For EO must return to corresponding NO and insert pointer to EO
C
	ELSEIF (IECODE.EQ.'EO') THEN
	   CALL IFFSEL(OUTLUN)
	   CALL IFFUNO(LPOSNO)
	   CALL IFFEO
	   CALL IFFSEL(INLUN)
C
C Otherwise just copy the entry
C
	ELSE
	   CALL EIHCPY (OUTLUN)
	ENDIF
	GOTO 10
C
C End of file before NF
C
900	FIND_NF = .FALSE.
C
C Exit
C
950	RETURN
	END
