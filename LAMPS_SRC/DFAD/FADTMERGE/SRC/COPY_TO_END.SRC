C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1988-02-03 14:36:36.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL FUNCTION COPY_TO_END()
C
***	MODULE COPY_TO_END
***	IDENT 02FE88
C
C Copyright Laser-Scan Laboratories Ltd, Cambridge, England.
C Author: J.M. Billing				2 Feb 1988
C
C Function to copy to end of iff file from input to output.
C Returns .TRUE. if succeeds.
C
	IMPLICIT NONE
C
	INCLUDE 'LSL$FADTMERGE:FADTMERGE.CMN'
	INCLUDE 'LSL$CMNIFF:IFFHAN.CMN'
C
C Assume success
C
	COPY_TO_END = .TRUE.
C
C Select input IFF file
C
	CALL IFFSEL (INLUN)
C
C Read next entry from input IFF file
C
10	CALL SEL_IFFNXT (IECODE, IELEN)
	IF (IELEN.EQ.-1) GOTO 900
C
C Copy it to output file
C First checking for certain special cases
C i.e. NO, EO
C
C For NO must remember its position and set up dummy EO pointer
C
	IF (IECODE.EQ.'NO') THEN
	   CALL EIHR(LAYER,1,1)
	   CALL IFFSEL(OUTLUN)
	   LPOSNO = LPOSE
	   CALL IFFNO(LAYER,0,0)
	   CALL IFFSEL(INLUN)
C
C For EO must return to corresponding NO and insert pointer to EO
C
	ELSEIF (IECODE.EQ.'EO') THEN
	   CALL IFFSEL(OUTLUN)
	   CALL IFFUNO(LPOSNO)
	   CALL IFFEO
	   CALL IFFSEL(INLUN)
C
C Otherwise just copy the entry
C
	ELSE
	   CALL EIHCPY (OUTLUN)
	ENDIF
	GOTO 10
C
C End of file, so exit
C
900	RETURN
	END
