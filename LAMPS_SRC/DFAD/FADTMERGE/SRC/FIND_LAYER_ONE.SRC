C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1988-02-03 14:37:32.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL FUNCTION FIND_LAYER_ONE()
C
***	MODULE FIND_LAYER_ONE
***	IDENT 28JA88
C
C Copyright Laser-Scan Laboratories Ltd, Cambridge, England.
C Author: J.M. Billing			28 Jan 1988
C
C Function to find first layer to be involved in merge (layer 1,2,3).
C Will copy layer 0 (accuracy regions) if finds one.
C Returns .TRUE. if succeeds
C
	IMPLICIT NONE
C
C Common blocks
	INCLUDE 'LSL$FADTMERGE:FADTMERGE.CMN'
	INCLUDE 'LSL$CMNIFF:IFFHAN.CMN'
C
C Assume success
C
	FIND_LAYER_ONE = .TRUE.
C
C Select input file
C
	CALL IFFSEL(INLUN)
C
C Now copy iff file as far as first NO.
C
10	CALL SEL_IFFNXT(IECODE,IELEN)
	IF (IELEN.EQ.-1) GOTO 900
C
C If this is an EO then this is end of layer 0, and must create
C pointer to EO in corresponding NO as well as copying EO
C
	IF (IECODE.EQ.'EO') THEN
	   CALL IFFSEL(OUTLUN)
	   CALL IFFUNO(LPOSNO)
	   CALL IFFEO
	   CALL IFFSEL(INLUN)
	ENDIF
C
C Check if NO, copy if not and repeat loop
C
	IF (IECODE.NE.'NO') THEN
	   CALL EIHCPY(OUTLUN)
	   GOTO 10
	ENDIF
C
C Check we are at start of layer 1,2,3... in input
C Copy existing layer 0 if necessary to get to it
C
C Read layer number
C
	CALL EIHR(LAYER,1,1)
C
C Go back and copy it if it is layer 0
C
	IF (LAYER.EQ.0) THEN
C
C First create NO with dummy pointer and remember where it is
C
	   CALL IFFSEL(OUTLUN)
	   LPOSNO = LPOSE
	   CALL IFFNO(0,0,0)
	   CALL IFFSEL(INLUN)
C
C Now go back and find the following NO, copying this layer on the way
C
	   GOTO 10
	ENDIF
C
C Otherwise copy the layer start entry, remebering position for later
C updating of pointer to EO
C
	CALL IFFSEL(OUTLUN)
	LPOSNO = LPOSE
	CALL IFFNO(LAYER,0,0)
	CALL IFFSEL(INLUN)
C
	GOTO 950
C
C Errors
C
900	FIND_LAYER_ONE = .FALSE.
C
C Exit
C
950	RETURN
	END
