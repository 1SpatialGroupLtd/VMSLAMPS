C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1988-06-01 17:09:58.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL FUNCTION FEATURE_ACCREG(REG)
C
***	MODULE FEATURE_ACCREG
***	IDENT 01JN88
C
C Copyright Laser-Scan Laboratories Ltd, Cambridge, England
C Author: J.M. Billing			29 Jan 1988
C MOD     D.R. Catlow                   01-Jul-1988
C To subtract local origin from accuracy region coordinates
C and assign a feature code of 301 to all accuracy regions.
C
C Function to construct a feature describing an accuracy subregion.
C The FSN will be equal to the REGion number.
C The outline of the region will be held as an ST co-ordinate string.
C The data describing accuracies will be held in an AC8 entry.
C Returns .TRUE. if succeeds.
C
	IMPLICIT NONE
C
	INCLUDE 'LSL$FADTMERGE:FADTMERGE.CMN'
	INCLUDE 'LSL$FADTCMN:FADT.CMN'
	INCLUDE 'LSL$CMNLSL:EXPC.CMN'
	INCLUDE 'LSL$FADTCMN:ACC.CMN'
C
***	COMMON/LSL$CMNIFF:MD2DES/
C arguments
	INTEGER*2	REG		! current accuracy region
C
C w/s variables
	INTEGER*2	ISQ		! dummy internal seq. no.
	INTEGER*2	ISTAT(4)	! FS status array
	REAL		STBUF(2,14)	! ST points
	INTEGER*4	GEO		! Lat/Long in 1/10 secs
	INTEGER*2	I		! count
C
C functions
	LOGICAL		LL2INT
C
C Assume success
C
	FEATURE_ACCREG = .TRUE.
C
C Select output IFF file
C
	CALL IFFSEL(OUTLUN)
C
C Construct NF
C
	ISQ = 0			! dummy, ensures next available used
	CALL IFFNF(REG,ISQ)
C
C Set up FS status array
C
	ISTAT(1) = 301
	ISTAT(2) = 0
	ISTAT(3) = 0
	ISTAT(4) = 0
C
C Construct FS
C
	CALL IFFFS(ISTAT)
C
C Change any 'unset' markers from -1 to 0
C
	IF (ACCREG(REG).ABS_HORIZ.LT.0) ACCREG(REG).ABS_HORIZ = 0
	IF (ACCREG(REG).REL_HORIZ.LT.0) ACCREG(REG).REL_HORIZ = 0
C
C Construct AC entry
C
	CALL EXPAND('absh%^W%I4',ACCREG(REG).ABS_HORIZ)
	CALL APPEND(' absv%^W%I4',0)
	CALL APPEND(' relh%^W%I4',ACCREG(REG).REL_HORIZ)
	CALL APPEND(' relv%^W%I4',0)
C
	CALL IFFAC(8,0,EXPBUF,35)
C
C Convert ST points to real 1/10 secs from string format
C and subtract local origin
C
	DO 10 I = 1, ACCREG(REG).NO_POINTS
	   IF (.NOT.LL2INT(ACCREGLL(REG,I).LONG,GEO)) GEO = 0
	   STBUF(1,I) = GEO - MD2LOC(1)
	   IF (.NOT.LL2INT(ACCREGLL(REG,I).LAT ,GEO)) GEO = 0
	   STBUF(2,I) = GEO - MD2LOC(2)
10	CONTINUE
C
C Construct ST
C
	CALL IFFST(STBUF, ACCREG(REG).NO_POINTS,0)
C
C Construct EF
C
	CALL IFFEF
C
C Exit
C
	RETURN
	END
