	LOGICAL FUNCTION OPEN_FILES ()
C
***	MODULE OPEN_FILES
***	IDENT 12JN88
C
C Copyright Laser-Scan Laboratories Ltd, Cambridge, England.
C Author : J.M. Billing		6 Jan 1988
C Modified: DRC                 1-Jun-1988 to extract local origin
C from the map descriptor.
C Modified: JMB			12-Jun-1988 to check fully for
C errors in opening FADT file
C
C Function to open files required for FADT merge with geometry
C Returns .TRUE. if succeeds
C
	IMPLICIT NONE
C
	INCLUDE 'LSL$FADTMERGE:FADTMERGE.CMN'
	INCLUDE 'LSL$FADTMERGE:FADTMERGEMSG.PAR'
C
***	COMMON/LSL$CMNIFF:MD2DES/
C
C w/s variables
	INTEGER		OK
	LOGICAL		IERR
C
C Functions
	LOGICAL		IFFOPEN
	LOGICAL		IFFCREATE
	LOGICAL		FLWOPN
C
C Assume success
C
	OPEN_FILES = .TRUE.
C
C Open input IFF file
C
	OK = IFFOPEN (INLUN, INFILE(1:INLEN))
	IF (.NOT.OK) GOTO 10
C
C Extract local origin from Map Descriptor
C	Read the Map Descriptor
	CALL IFFNXC('MD',IELEN)
	IF(IELEN.EQ.MD2LEN)THEN
          CALL EIHR(MD2ARR,MD2LEN,1)
	ELSE
	  MATV2=-1		!unset map descriptor
	ENDIF
	CALL IFFRWD
C
	INOPN = .TRUE.
C
C Open input FADT file
C
	OPEN (	UNIT = FADTLUN,
     &		FILE = FADTFILE (1:FADTLEN),
     &		ORGANIZATION = 'INDEXED',
     &		ACCESS = 'KEYED',
     &		RECORDTYPE = 'FIXED',
     &		FORM = 'UNFORMATTED',
     &		RECL = 5,
     &		KEY = (1:2:INTEGER),
     &		STATUS = 'OLD',
     &		IOSTAT = OK)
C
C Check for errors while opening FADT file
C
	IF (OK.NE.0) THEN
C
C Output message saying unable to open FADT file
C
	   CALL LSL_PUTMSG(FM__UNOPNFADT)
C
C Retrieve and output the fortran error message
C
	   CALL ERRSNS(,,,,OK)
	   CALL LSL_ADDMSG(OK)
	   GOTO 10
C
C Otherwise, no errors, so set flag to indicate file is open
C
	ELSE
	   FADTOPN = .TRUE.
	ENDIF
C
C Open output IFF file
C
	OK = IFFCREATE (OUTLUN, OUTFILE(1:OUTLEN))
	IF (.NOT.OK) GOTO 10
	OUTOPN = .TRUE.
C
C Open output list file if required
C
	IF (HAD_LIST) THEN
	   OK = FLWOPN (LISTLUN, LISTFILE(1:LISTLEN), IERR)
	   IF (.NOT.OK) THEN
	      CALL LSL_PUTMSG(OK)
	      CALL LSL_ADDMSG(IERR)
	      GOTO 10
	   ENDIF
	   LISTOPN = .TRUE.
	ENDIF
C
	GOTO 20
C
C Deal with errors
C
10	OPEN_FILES = .FALSE.
C
C Exit
C
20	RETURN
	END
