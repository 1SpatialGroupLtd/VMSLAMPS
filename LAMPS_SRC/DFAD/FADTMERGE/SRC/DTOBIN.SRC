C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1988-01-29 19:49:56.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL FUNCTION DTOBIN( DAY, MONTH, YEAR, OUTPUT )
C
***	MODULE	DTOBIN
***	IDENT	08NO83
C
C Copyright Laser-Scan Laboratories Ltd, Cambridge, England
C
C Author TJ Ibbs
C
C MOD To work with LSLLIB		J.M.Billing	28 Jan 1988
C
C this function transforms a Date TO BINary days
C
C as traditional, it returns TRUE for failure, FALSE for success
C
C we were passed
C
	INTEGER*4	DAY		!
	INTEGER*4	MONTH		! the date to transform
	INTEGER*4	YEAR		!
C
	INTEGER*4	OUTPUT		! the result we produce
C
C functions called
C
	INTEGER*4	SYS$BINTIM
	INTEGER*4	LIB$DAY
C
C we need EXPC in order to use EXPDSC
C
	INCLUDE 'LSL$CMNLSL:EXPC.CMN'
C
C workspace
C
	INTEGER*4	LNOW		! the date we want to change
	INTEGER*4	LZERO		! our 'zero' date
	INTEGER*4	QUAD(2)		! quadword for time
	INTEGER*4	IERR		! error return code
	CHARACTER*3	NAME(12)	! names of the months
C
C
	DATA	NAME / 'JAN','FEB','MAR','APR','MAY','JUN',
     &		       'JUL','AUG','SEP','OCT','NOV','DEC' /
C
C Force month to be sensible
C
	IF ((MONTH.LT.1).OR.(MONTH.GT.12)) MONTH = 1
C
C and now the code
C
C first we work out the time of the zero date - the time in tiny units
C of the start of 1 Jan 1900
C
	IERR = SYS$BINTIM('1-JAN-1900 00:00:00.00',QUAD)
	IF (.NOT.IERR) GOTO 999
C
C transform this time into days...
C
	IERR = LIB$DAY(LZERO,QUAD)
	IF (.NOT.IERR) GOTO 999
C
C and we must now work out the input string required for doing a
C similar thing with our 'current' date
C
	CALL EXPAND('%I2-%S-%I4 00:00:00.00',DAY,NAME(MONTH),YEAR)
C
	IERR = SYS$BINTIM(EXPDSC,QUAD)
	IF (.NOT.IERR) GOTO 999
C
C and work out the day for that, too
C
	IERR = LIB$DAY(LNOW,QUAD)
	IF (.NOT.IERR) GOTO 999
C
C and our final result will then be the difference between the two
C
	OUTPUT = LNOW-LZERO
C
	DTOBIN = .FALSE.		! success
	RETURN
C
C error return
C
999	CALL LSL_PUTMSG(IERR)
	RETURN
C
	END
