C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1995-09-27 18:01:36.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL FUNCTION PROMPT( CMD, ASK )
C
***	IDENT	27SE95
***	MODULE	PROMPT
C
C	Copyright LaserScan Laboratories Ltd., Cambridge, England
C
C Author TJ Ibbs, 26 May 1983
C
CMOD	Modified to use LSLLIB.			JMB	29 Feb 1988
C
C
C If ASK is TRUE then this prompts for the edit for CMD, returning
C FALSE if one is given (in which case it will have set things up
C ready for EDIT, exactly as if the arg had been given in the first
C place), or TRUE if the user replied <return> - ie didn't set anything
C - or gave an invalid response.
C
C If ASK is FALSE then it merely prints out the current value of the
C field, and returns TRUE regardless
C
	IMPLICIT NONE
C
C
C we were passed
C
	INTEGER*4	CMD	! this tells us what to prompt for
	LOGICAL		ASK	! this tells us if we SHOULD prompt
C
C functions
C
	LOGICAL		GETSTR	! get a string from the user
	LOGICAL		GETINT	! get an integer (a long one)
	LOGICAL		GETANG	! get an angle
	LOGICAL		GETDAT	! get a date
	LOGICAL		GETACC	! get an integer (long) OR string 'NA'
C
	INCLUDE 'LSL$CMNIFF:MHMCE.CMN'	! for map header
	INCLUDE 'LSL$CMNLSL:CMDCOM.CMN'	! for command reading bits to 
					! be set
C
C
C guess that we get nowt
C
	PROMPT = .TRUE.
C
C and choose what to prompt...
C
	GOTO (  100,  110,  120,  130,  140,  150,  160,  170,
     &		180,  190,
     &		200,  210,  220,  230,
     &		3000, 3010, 3020, 3030, 3040, 3050, 3060, 3070,
     &		3080, 3090, 3100, 3110, 3120, 3130, 3140, 3150,
     &		400,  410,  420,  430,  440,  450,
     &		500,  510,  520,  530,
     &		600,  610,  620,  630,  640,
     &		700,  710,  720,  730,  740,  750,  760,  770,
     &		800,  810,  820,  830,  840,  850,  860,
     &		900,  910,
     &		1000, 1010, 1020, 1030, 1040,
     &		1100, 1110, 1120, 1130, 1140, 1150
     &	     ), CMD
C
	IF (ASK) THEN
	   CALL EXPAND('*** INTERNAL ERROR *** unknown EDIT/PROMPT ')
	ELSE
	   CALL EXPAND('*** INTERNAL ERROR *** unknown SHOW/PROMPT ')
	ENDIF
	CALL WRITAP('command %N',CMD)
C
	RETURN
C
C
C
C *** SHEET, IDENTITY	-  sheet identity
C
100	CALL EXPAND('TASK - Task (series) name          ')
	CALL WRITAP('%A6',MHTASK)
	IF (ASK) PROMPT = GETSTR( 6 )
	RETURN
C
110	CALL EXPAND('SHT  - Sheet name/number           ')
	CALL WRITAP('%A12',MHSHT)
	IF (ASK) PROMPT = GETSTR( 12 )
	RETURN
C
120	CALL EXPAND('EDN  - Edition number              ')
	CALL WRITAP('%^B%N',MHEDN)
	IF (ASK) PROMPT = GETINT( 1 ,99 )
	RETURN
C
130	CALL EXPAND('TYPE - File type                   ')
	CALL WRITAP('%A6',MHTYPE)
	IF (ASK) PROMPT = GETSTR( 6 )
	RETURN
C
140	CALL EXPAND('LEV  - Level of this data          ')
	CALL WRITAP('%^B%N',MHLEV)
	IF (ASK) PROMPT = GETINT( 1, 9 )
	RETURN
C
150	CALL EXPAND('WAC  - World Aeronautical Codes    ')
	CALL WRITAP('%A8',MHWAC)
	IF (ASK) PROMPT = GETSTR( 8 )
	RETURN
C
160	CALL EXPAND('COCO - Country coverage            ')
	CALL WRITAP('%A15',MHCOCO)
	IF (ASK) PROMPT = GETSTR( 15 )
	RETURN
C
170	CALL EXPAND('REFN - Unique reference            ')
	CALL WRITAP('%A15',MHREFN)
	IF (ASK) PROMPT = GETSTR( 15 )
	RETURN
C
180	CALL EXPAND('MANU - Manuscript type             ')
	CALL WRITAP('%^B%N',MHMANU)
	IF (ASK) PROMPT = GETINT( 0, 1 )
	RETURN
C
190	CALL EXPAND('COOR - Coordinate type             ')
	CALL WRITAP('%^B%N',MHCOOR)
	IF (ASK) PROMPT = GETINT( 0, 3 )
	RETURN
C
C
C *** SECURITY		-  security
C
200	CALL EXPAND('SEC  - Security classification     ')
	CALL WRITAP('%^B%N',MHSEC)
	IF (ASK) PROMPT = GETINT( 0, 99 )
	RETURN
C
210	CALL EXPAND('SECD - Security descriptor         ')
	CALL WRITAP('%A1',MHSECD)
	IF (ASK) PROMPT = GETSTR( 1 )
	RETURN
C
220	CALL EXPAND('REL  - Releasability code          ')
	CALL WRITAP('%^B%N',MHREL)
	IF (ASK) PROMPT = GETINT( 0, 99 )
	RETURN
C
230	CALL EXPAND('SHD  - Sheet handling descriptor   ')
	CALL WRITAP('%A27',MHSHD)
	IF (ASK) PROMPT = GETSTR( 27 )
	RETURN
C
C *** COVERAGE
C
3000	CALL EXPAND('MSWE - Map SW corner (E)           ')
	CALL WRITAP('%^L%N',MHMSWE)
	IF (ASK) PROMPT = GETINT( 0, 10 000 000 )
	RETURN
C
3010	CALL EXPAND('MSWN - Map SW corner (N)           ')
	CALL WRITAP('%^L%N',MHMSWN)
	IF (ASK) PROMPT = GETINT( 0, 10 000 000 )
	RETURN
C
3020	CALL EXPAND('MLEW - Map limit, E-W              ')
	CALL WRITAP('%^L%N',MHMLEW)
	IF (ASK) PROMPT = GETINT( 0, 10 000 000 )
	RETURN
C
3030	CALL EXPAND('MLNS - Map limit, N-S              ')
	CALL WRITAP('%^L%N',MHMLNS)
	IF (ASK) PROMPT = GETINT( 0, 10 000 000 )
	RETURN
C
3040	CALL EXPAND('LASW - SW corner  (lat)            ')
	CALL OUTANG(MHLASW)
	IF (ASK) PROMPT = GETANG()
	RETURN
C
3050	CALL EXPAND('LOSW - SW corner  (long)           ')
	CALL OUTANG(MHLOSW)
	IF (ASK) PROMPT = GETANG()
	RETURN
C
3060	CALL EXPAND('LASE - SE corner  (lat)            ')
	CALL OUTANG(MHLASE)
	IF (ASK) PROMPT = GETANG()
	RETURN
C
3070	CALL EXPAND('LOSE - SE corner  (long)           ')
	CALL OUTANG(MHLOSE)
	IF (ASK) PROMPT = GETANG()
	RETURN
C
3080	CALL EXPAND('LANE - NE corner  (lat)            ')
	CALL OUTANG(MHLANE)
	IF (ASK) PROMPT = GETANG()
	RETURN
C
3090	CALL EXPAND('LONE - NE corner  (long)           ')
	CALL OUTANG(MHLONE)
	IF (ASK) PROMPT = GETANG()
	RETURN
C
3100	CALL EXPAND('LANW - NW corner  (lat)            ')
	CALL OUTANG(MHLANW)
	IF (ASK) PROMPT = GETANG()
	RETURN
C
3110	CALL EXPAND('LONW - NW corner  (long)           ')
	CALL OUTANG(MHLONW)
	IF (ASK) PROMPT = GETANG()
	RETURN
C
3120	CALL EXPAND('LAMO - Map origin (lat)            ')
	CALL OUTANG(MHLAMO)
	IF (ASK) PROMPT = GETANG()
	RETURN
C
3130	CALL EXPAND('LOMO - Map origin (long)           ')
	CALL OUTANG(MHLOMO)
	IF (ASK) PROMPT = GETANG()
	RETURN
C
3140	CALL EXPAND('LAEX - Map extent (lat)            ')
	CALL OUTANG(MHLAEX)
	IF (ASK) PROMPT = GETANG()
	RETURN
C
3150	CALL EXPAND('LOEX - Map extent (long)           ')
	CALL OUTANG(MHLOEX)
	IF (ASK) PROMPT = GETANG()
	RETURN
C
C *** PROJECTION	- projection information
C
400	CALL EXPAND('PROJ - Projection used             ')
	CALL WRITAP('%A12',MHPROJ)
	IF (ASK) PROMPT = GETSTR( 12 )
	RETURN
C
410	CALL EXPAND('SPH  - Spheroid used               ')
	CALL WRITAP('%A15',MHSPH)
	IF (ASK) PROMPT = GETSTR( 15 )
	RETURN
C
420	CALL EXPAND('CMER - Central Meridian            ')
	CALL OUTANG(MHCMER)
	IF (ASK) PROMPT = GETANG()
	RETURN
C
430	CALL EXPAND('LAFO - Latitude of false origin    ')
	CALL OUTANG(MHLAFO)
	IF (ASK) PROMPT = GETANG()
	RETURN
C
440	CALL EXPAND('NPAR - North standard parallel     ')
	CALL OUTANG(MHNPAR)
	IF (ASK) PROMPT = GETANG()
	RETURN
C
450	CALL EXPAND('SPAR - South standard parallel     ')
	CALL OUTANG(MHSPAR)
	IF (ASK) PROMPT = GETANG()
	RETURN
C
C *** DIGITISING	- digitising information
C
500	CALL EXPAND('MENU - Menu for this map           ')
	CALL WRITAP('%A9',MHMENU)
	IF (ASK) PROMPT = GETSTR( 9 )
	RETURN
C
510	CALL EXPAND('DGSC - Digitised scale             ')
	CALL WRITAP('%^L%N',MHDGSC)
	IF (ASK) PROMPT = GETINT( 0, 200 000 000 )
	RETURN
C
520	CALL EXPAND('DBSC - Database scale              ')
	CALL WRITAP('%^L%N',MHDBSC)
	IF (ASK) PROMPT = GETINT( 0, 200 000 000 )
	RETURN
C
530	CALL EXPAND('DSYS - Digitising system           ')
	CALL WRITAP('%A10',MHDSYS)
	IF (ASK) PROMPT = GETSTR( 10 )
	RETURN
C
C *** SPECIFICATION	- specification
C
600	CALL EXPAND('PCDE - Producer code               ')
	CALL WRITAP('%A8',MHPCDE)
	IF (ASK) PROMPT = GETSTR( 8 )
	RETURN
C
610	CALL EXPAND('PSSN - Product spec stock  number  ')
	CALL WRITAP('%A9',MHPSSN)
	IF (ASK) PROMPT = GETSTR( 9 )
	RETURN
C
620	CALL EXPAND('PSCN - Product spec change number  ')
	CALL WRITAP('%^B%N',MHPSCN)
	IF (ASK) PROMPT = GETINT( 0, 99 )
	RETURN
C
630	CALL EXPAND('PSDT - Product spec date           ')
	CALL OUTDAT(MHPSDT)
	IF (ASK) PROMPT = GETDAT()
	RETURN
C
640	CALL EXPAND('VAL  - Validation table            ')
	CALL WRITAP('%N',MHVAL)
	IF (ASK) PROMPT = GETINT( 0, 9999 )
	RETURN
C
C *** HISTORY, DATES	- sheet history and dates
C
700	CALL EXPAND('CDTE - Compilation/analysis date   ')
	CALL OUTDAT(MHCDTE)
	IF (ASK) PROMPT = GETDAT()
	RETURN
C
710	CALL EXPAND('CTYP - Compilation type            ')
	CALL WRITAP('%A1',MHCTYP)
	IF (ASK) PROMPT = GETSTR( 1 )
	RETURN
C
720	CALL EXPAND('MDTE - Maintenance date            ')
	CALL OUTDAT(MHMDTE)
	IF (ASK) PROMPT = GETDAT()
	RETURN
C
730	CALL EXPAND('MCDE - Maintenance desc code       ')
	CALL WRITAP('%A4',MHMCDE)
	IF (ASK) PROMPT = GETSTR( 4 )
	RETURN
C
740	CALL EXPAND('MMD  - Match/merge date            ')
	CALL OUTDAT(MHMMD)
	IF (ASK) PROMPT = GETDAT()
	RETURN
C
750	CALL EXPAND('MMV  - Match/merge version         ')
	CALL WRITAP('%A1',MHMMV)
	IF (ASK) PROMPT = GETSTR( 1 )
	RETURN
C
760	CALL EXPAND('MCD  - Map currency date           ')
	CALL OUTDAT(MHMCD)
	IF (ASK) PROMPT = GETDAT()
	RETURN
C
770	CALL EXPAND('REV  - Revision cut-off date       ')
	CALL OUTDAT(MHREV)
	IF (ASK) PROMPT = GETDAT()
	RETURN
C
C *** ACCURACY		- accuracy information
C
800	CALL EXPAND('HDTM - Horizontal datum            ')
	CALL WRITAP('%A5',MHHDTM)
	IF (ASK) PROMPT = GETSTR( 5 )
	RETURN
C
810	CALL EXPAND('VDTM - Vertical   datum            ')
	CALL WRITAP('%A3',MHVDTM)
	IF (ASK) PROMPT = GETSTR( 3 )
	RETURN
C
820	CALL EXPAND('AHAC - Abs horizontal accuracy     ')
	IF (MHAHAC.EQ.-1) THEN	! test for NA
	   CALL WRITAP('%S','NA')
	ELSE
	   CALL WRITAP('%N',MHAHAC)
	ENDIF
	IF (ASK) PROMPT = GETACC( 0, 9999 )
	RETURN
C
830	CALL EXPAND('AVAC - Abs vertical   accuracy     ')
	IF (MHAVAC.EQ.-1) THEN	! test for NA
	   CALL WRITAP('%S','NA')
	ELSE
	   CALL WRITAP('%N',MHAVAC)
	ENDIF
	IF (ASK) PROMPT = GETACC( 0, 9999 )
	RETURN
C
840	CALL EXPAND('RHAC - Rel horizontal accuracy     ')
	IF (MHRHAC.EQ.-1) THEN	! test for NA
	   CALL WRITAP('%S','NA')
	ELSE
	   CALL WRITAP('%N',MHRHAC)
	ENDIF
	IF (ASK) PROMPT = GETACC( 0, 9999 )
	RETURN
C
850	CALL EXPAND('RVAC - Rel vertical   accuracy     ')
	IF (MHRVAC.EQ.-1) THEN	! test for NA
	   CALL WRITAP('%S','NA')
	ELSE
	   CALL WRITAP('%N',MHRVAC)
	ENDIF
	IF (ASK) PROMPT = GETACC( 0, 9999 )
	RETURN
C
860	CALL EXPAND('VHAC - Vertical heighting accuracy ')
	IF (MHVHAC.EQ.-1) THEN	! test for NA
	   CALL WRITAP('%S','NA')
	ELSE
	   CALL WRITAP('%N',MHVHAC)
	ENDIF
	IF (ASK) PROMPT = GETACC( 0, 9999 )
	RETURN
C
C *** PROCESSING	- processing dates
C
900	CALL EXPAND('DUP%N - Digital update %N            ',
     &			INTARG(1),	    INTARG(1) )
	CALL OUTDAT(MHDUP(INTARG(1)))
	IF (ASK) PROMPT = GETDAT()
	RETURN
C
910	CALL EXPAND('DLH  - Date last handled           ')
	CALL OUTDAT(MHDLH)
	IF (ASK) PROMPT = GETDAT()
	RETURN
C
C *** STATUS		- status flags
C
1000	CALL EXPAND('EMSN - Edge match status North     ')
	CALL WRITAP('%^B%I1',MHEMSN)
	IF (ASK) PROMPT = GETINT( 0, 1 )
	RETURN
C
1010	CALL EXPAND('EMSE - Edge match status East      ')
	CALL WRITAP('%^B%I1',MHEMSE)
	IF (ASK) PROMPT = GETINT( 0, 1 )
	RETURN
C
1020	CALL EXPAND('EMSS - Edge match status South     ')
	CALL WRITAP('%^B%I1',MHEMSS)
	IF (ASK) PROMPT = GETINT( 0, 1 )
	RETURN
C
1030	CALL EXPAND('EMSW - Edge match status West      ')
	CALL WRITAP('%^B%I1',MHEMSW)
	IF (ASK) PROMPT = GETINT( 0, 1 )
	RETURN
C
1040	CALL EXPAND('FLAG - Processing flag             ')
	CALL WRITAP('%^B%I1',MHFLAG)
	IF (ASK) PROMPT = GETINT( 0, 9 )
	RETURN
C
C *** TERRAIN		- terrain information
C
1100	CALL EXPAND('CLOD - Clockwise orient''n of data ')
	CALL OUTANG(MHCLOD)
	IF (ASK) PROMPT = GETANG()
	RETURN
C
1110	CALL EXPAND('LAIN - Latitude  interval          ')
	CALL WRITAP('%N',MHLAIN)
	IF (ASK) PROMPT = GETINT( 0, 9999 )
	RETURN
C
1120	CALL EXPAND('LOIN - Longitude interval          ')
	CALL WRITAP('%N',MHLOIN)
	IF (ASK) PROMPT = GETINT( 0, 9999 )
	RETURN
C
1130	CALL EXPAND('LALI - Number of lines of lat      ')
	CALL WRITAP('%N',MHLALI)
	IF (ASK) PROMPT = GETINT( 0, 9999 )
	RETURN
C
1140	CALL EXPAND('LOLI - Number of lines of long     ')
	CALL WRITAP('%N',MHLOLI)
	IF (ASK) PROMPT = GETINT( 0, 9999 )
	RETURN
C
1150	CALL EXPAND('PCIN - Partial cell indicator      ')
	CALL WRITAP('%^B%N',MHPCIN)
	IF (ASK) PROMPT = GETINT( 0, 99 )
	RETURN
C
	END
