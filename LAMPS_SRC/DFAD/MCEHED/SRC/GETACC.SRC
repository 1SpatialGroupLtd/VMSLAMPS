C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1995-09-27 17:51:46.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL FUNCTION GETACC( MIN, MAX )
C
***	IDENT	27SE95
***	MODULE	GETACC
C
C	Copyright LaserScan Laboratories Ltd., Cambridge, England
C
C Author TJ Ibbs, 27 May 1983
C
CMOD	Modified to use LSLLIB.			JMB	29 Feb 1988
C
C
C Like GETINT except to ask for integer MIN to MAX OR string 'NA'
C
C We return FALSE if we get it, TRUE if they answer <return>
C
	IMPLICIT NONE
C
C
C we were passsed
C
	INTEGER*4	MIN	! minimum value allowed
	INTEGER*4	MAX	! maximum value allowed
C
C functions used
C
	LOGICAL		RDCH	! read next character
	LOGICAL		RDCHS	! read next significant char
	LOGICAL		RDLONG	! read a long integer
	INTEGER		TTRSTR	! prompt the user
C
C
C and we need common as well...
C
	INCLUDE 'LSL$CMNLSL:CMDCOM.CMN'	! to read value into
	INCLUDE 'LSL$CMNLSL:TXTC.CMN'	! for input string
	INCLUDE 'LSL$CMNLSL:EXPC.CMN'	! for building prompt string
C
C workspace
C
	INTEGER		ERR	! return from TTRLIN
	INTEGER*4	IERR	! long error
	BYTE		CHAR	! single character
C
C
C assume we get nothing
C
	GETACC = .TRUE.
C
C we prompt the user for a string of length LENGTH...
C
10	CALL EXPAND('[Integer %^L%N-%^L%N] or "NA": ', MIN, MAX )
	ERR = TTRSTR( , , EXPDSC, IERR )
C
C and did we get owt?
C
	IF ( .NOT.ERR ) THEN
	   CALL WRITEF('*** ERROR *** Reading response to prompt')
	   CALL LSL_PUTMSG( ERR )
	   CALL LSL_ADDMSG( IERR )
	   RETURN
	ELSEIF ( TXTPTR.EQ.0 ) THEN
	   RETURN			! simple <return> response
	ENDIF
C
C so we should have something - return for it to be read
C
	CALL BSLN			! start at beginning of line
	GETACC = .FALSE.		! success
	RETURN
C
	END
