	PROGRAM	MCEHED
C
***	IDENT	29FE88
***	MODULE	MCEHED
C
C	Copyright LaserScan Laboratories Ltd., Cambridge, England
C
C Author TJ Ibbs
C
CMOD	Modified to use LSLLIB.			JMB	29 Feb 1988
C
C
C A program for showing the map header, and then possibly editing it
C
	IMPLICIT NONE
C
C
C common blocks
C
	INCLUDE '($SSDEF)'
	INCLUDE 'LSL$CMNIFF:MHMCE.CMN'	! map header common
C
C functions
C
	LOGICAL		START		! get initial command line
C
C workspace
C
	INTEGER		STATUS		! exit status
	INTEGER*2	IFFLUN		! unit to read IFF file on
	LOGICAL		RDONLY		! is file open for read only?
	LOGICAL		DOEXIT		! leaving with EXIT or QUIT
C
	INTEGER*2	IELEN		! return from IFF routines
C
C Assume successful completetion
C
	STATUS = SS$_NORMAL
C
C Initialise LSLLIB
C
	CALL LSL_INIT()
C
C set up default IFF error handling
C
	CALL IFFTDY
C
C get the initial command line - contains the filename, and possibly
C /Readonly switch
C If there is an error, then the file will not have been opened 
C properly, so jump to exit with abort status. Do not attempt to
C close the file since this will just lead to further error messages.
C
	IF ( START( IFFLUN, RDONLY ) ) THEN
	   STATUS = SS$_ABORT
	   GOTO 1001
	ENDIF
C
C so now we may read in the map header...
C
	CALL IFFNXC( 'MH', IELEN )
	IF ( IELEN.EQ.-1 ) THEN
	   CALL WRITEF('*** ERROR *** Can''t find mapheader !!!!')
	   STATUS = SS$_ABORT
	   GOTO 1000			! abandon the program
	ENDIF
C
	IF ( IELEN.NE.MHLEN ) THEN
C
C	 the mapheader is the wrong length - complain
C	 and try to do something sensible...
C
	   IF ( RDONLY ) THEN
	      CALL WRITEF(
     &		'*** WARNING *** '//
     &		'Map header has unexpected length %N, expected %N',
     &						   IELEN,	MHLEN )
	      IELEN = MIN( MHLEN, IELEN )	! take smallest
	      CALL WRITEF(
     &		'                '//
     &		'Attempting to continue with length %N',
     &						IELEN )
	   ELSE
	      CALL WRITEF(
     &		'*** ERROR *** '//
     &		'Map header has unexpected length %N, expected %N',
     &						   IELEN,	MHLEN )

	      CALL WRITEF(
     &		'              '//
     &		'Unable to edit map header')
	      STATUS = SS$_ABORT
	      GOTO 1000
	   ENDIF
	ENDIF
C
C otherwise, we may read the thing in (possibly at the short length)
C
	CALL EIHR( MHARR, IELEN, 1 )	! read into common
C
C Check that it is the correct customer type - warn if not
C
	IF (MHDESC(2).NE.1) THEN
	   CALL WRITEF('*** WARNING *** '//
     &			'incorrect customer type (%^B%N)',
     &				MHDESC(2))
	ENDIF
C
C So fall through into doing things with our header...
C get the next command - returns when no more commands required
C DOEXIT is true if we are to output the amended map header (ie leaving
C with EXIT command) 
C
	CALL NEXT( RDONLY, DOEXIT )
C
C so do we need to output the map header?
C If we opened the file for edit, we will confirm what we did with the
C (possibly) amended mapheader
C
	IF ( DOEXIT ) THEN
	   CALL EIHW( MHARR, MHLEN, 1 )		! write map header out
	   CALL WRITEF('Map header updated')
	ELSEIF ( .NOT.RDONLY ) THEN		! was opened for write
	   CALL WRITEF('Edits have been ignored')
	ENDIF
C
C and tidy up for exit...
C
1000	CALL IFFCLO( IFFLUN )	! close file
1001	CALL LSL_EXIT(STATUS)	! end program
C
	END
