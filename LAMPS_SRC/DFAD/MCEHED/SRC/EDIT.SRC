	SUBROUTINE EDIT( CMD )
C
***	IDENT	27SE95
***	MODULE	EDIT
C
C	Copyright LaserScan Laboratories Ltd., Cambridge, England
C
C Author TJ Ibbs, 25 May 1983
C Modified CC Brunt, 26 August 1983
C
CMOD	Modified to use LSLLIB			JMB	29-Feb-1988
C To edit a particular field
C
	IMPLICIT NONE
C
C
C functions...
C
	LOGICAL		PROMPT		! prompt for, or show, a value
	LOGICAL		EXTANG		! extract angle   from user
	LOGICAL		EXTDAT		! extract date    from user
	LOGICAL		EXTINT		! extract integer from user
	LOGICAL		EXTSTR		! extract string  from user
	LOGICAL		EXTACC		! extract ACC (number or 'NA') from user
C
C common
C
	INCLUDE 'LSL$CMNIFF:MHMCE.CMN'	! map header
	INCLUDE 'LSL$CMNLSL:CMDCOM.CMN'	! command arguments
C
C set up parameters for length argument to EXTINT
C
	PARAMETER	LONG = .TRUE.
	PARAMETER	SHORT = .FALSE.
C
C we were passed
C
	INTEGER*4	CMD		! command to obey
C
C workspace
C
	INTEGER		I		! for DO loops
	INTEGER*4	DAYS		! to read binary days into
	BYTE		CHAR		! to read a character into
	INTEGER		OLDINT		! to remember INTARG(1) in
C
C
C and choose what to edit...
C
	GOTO (  100,  110,  120,  130,  140,  150,  160,  170,
     &		180,  190,
     &		200,  210,  220,  230,
     &		3000, 3010, 3020, 3030, 3040, 3050, 3060, 3070,
     &		3080, 3090, 3100, 3110, 3120, 3130, 3140, 3150,
     &		400,  410,  420,  430,  440,  450,
     &		500,  510,  520,  530,
     &		600,  610,  620,  630,  640,
     &		700,  710,  720,  730,  740,  750,  760,  770,
     &		800,  810,  820,  830,  840,  850,  860,
     &		900,  910,
     &		1000, 1010, 1020, 1030, 1040,
     &		1100, 1110, 1120, 1130, 1140, 1150
     &	     ), CMD
C
	CALL WRITEF('*** INTERNAL ERROR *** Unknown command %N',CMD)
C
C
C *********************************************************************
C 1.	sheet identity
C
C *** TASK  (FS)	task name
C
100	IF ( EXTSTR(CMD,6,MHTASK) ) CALL PROMPT(CMD,.FALSE.)
	RETURN
C
C *** SHT   (FS)	sheet name
C
110	IF ( EXTSTR(CMD,12,MHSHT) ) CALL PROMPT(CMD,.FALSE.)
	RETURN
C
C *** EDN   (FI)	edition number
C
120	IF ( EXTINT(CMD,1,99,MHEDN,SHORT) ) CALL PROMPT( CMD, .FALSE. )
	RETURN
C
C *** TYPE  (FS)	 file type
C
130	IF ( EXTSTR(CMD,6,MHTYPE) ) CALL PROMPT(CMD,.FALSE.)
	RETURN
C
C *** LEV   (FI)	 level of map
C
140	IF ( EXTINT(CMD,1,9,MHLEV,SHORT) ) CALL PROMPT( CMD, .FALSE. )
	RETURN
C
C *** WAC   (FS)	 WAC code
C
150	IF ( EXTSTR(CMD,8,MHWAC) ) CALL PROMPT(CMD,.FALSE.)
	RETURN
C
C *** COCO  (FS)	 country coverage
C
160	IF ( EXTSTR(CMD,15,MHCOCO) ) CALL PROMPT(CMD,.FALSE.)
	RETURN
C
C *** REFN  (FS)	 unique reference code
C
170	IF ( EXTSTR(CMD,15,MHREFN) ) CALL PROMPT(CMD,.FALSE.)
	RETURN
C
C *** MANU  (FI)	 Manuscript type
C
180	IF ( EXTINT(CMD,0,1,MHMANU,SHORT) ) CALL PROMPT( CMD, .FALSE. )
	RETURN
C
C *** COOR  (FI)	 Coordinate type
C
190	IF ( EXTINT(CMD,0,3,MHCOOR,SHORT) ) CALL PROMPT( CMD, .FALSE. )
	RETURN
C
C *********************************************************************
C 2.	security
C
C *** SEC   (FI)	 security
C
200	IF ( EXTINT(CMD,0,99,MHSEC,SHORT) ) CALL PROMPT( CMD, .FALSE. )
	RETURN
C
C *** SECD  (FS)	 security description
C
210	IF ( EXTSTR(CMD,1,MHSECD) ) CALL PROMPT(CMD,.FALSE.)
	RETURN
C
C *** REL   (FI)	 releasibility
C
220	IF ( EXTINT(CMD,0,99,MHREL,SHORT) ) CALL PROMPT( CMD, .FALSE. )
	RETURN
C
C *** SHD   (FS)	 security handling description
C
230	IF ( EXTSTR(CMD,27,MHSHD) ) CALL PROMPT(CMD,.FALSE.)
	RETURN
C
C *********************************************************************
C 3.	coverage
C
C *** MSWE  (FI)	 map SW corner E
C
3000	IF ( EXTINT(CMD,0,10 000 000,MHMSWE,LONG) )
     &					CALL PROMPT( CMD, .FALSE. )
	RETURN
C
C *** MSWN  (FI)	 map SW corner N
C
3010	IF ( EXTINT(CMD,0,10 000 000,MHMSWN,LONG) )
     &					CALL PROMPT( CMD, .FALSE. )
	RETURN
C
C *** MLEW  (FI)	 E-W limit
C
3020	IF ( EXTINT(CMD,0,10 000 000,MHMLEW,LONG) )
     &					CALL PROMPT( CMD, .FALSE. )
	RETURN
C
C *** MLNS  (FI)	 N-S limit
C
3030	IF ( EXTINT(CMD,0,10 000 000,MHMLNS,LONG) )
     &					CALL PROMPT( CMD, .FALSE. )
	RETURN
C
C *** LASW  (angle)	 lat  SW cnr
C
3040	IF ( EXTANG(CMD, 90, MHLASW) ) CALL PROMPT(CMD,.FALSE.)
	RETURN
C
C *** LOSW  (angle)	 long SW cnr
C
3050	IF ( EXTANG(CMD, 180, MHLOSW) ) CALL PROMPT(CMD,.FALSE.)
	RETURN
C
C *** LASE  (angle)	 lat  SE cnr
C
3060	IF ( EXTANG(CMD, 90, MHLASE) ) CALL PROMPT(CMD,.FALSE.)
	RETURN
C
C *** LOSE  (angle)	 long SE cnr
C
3070	IF ( EXTANG(CMD, 180, MHLOSE) ) CALL PROMPT(CMD,.FALSE.)
	RETURN
C
C *** LANE  (angle)	 lat  NE cnr
C
3080	IF ( EXTANG(CMD, 90, MHLANE) ) CALL PROMPT(CMD,.FALSE.)
	RETURN
C
C *** LONE  (angle)	 long NE cnr
C
3090	IF ( EXTANG(CMD, 180, MHLONE) ) CALL PROMPT(CMD,.FALSE.)
	RETURN
C
C *** LANW  (angle)	 lat  NW cnr
C
3100	IF ( EXTANG(CMD, 90, MHLANW) ) CALL PROMPT(CMD,.FALSE.)
	RETURN
C
C *** LONW  (angle)	 long NW cnr
C
3110	IF ( EXTANG(CMD, 180, MHLONW) ) CALL PROMPT(CMD,.FALSE.)
	RETURN
C
C *** LAMO  (angle)	 ms origin (lat)
C
3120	IF ( EXTANG(CMD, 90, MHLAMO) ) CALL PROMPT(CMD,.FALSE.)
	RETURN
C
C *** LOMO  (angle)	 ms origin (long)
C
3130	IF ( EXTANG(CMD, 180, MHLOMO) ) CALL PROMPT(CMD,.FALSE.)
	RETURN
C
C *** LAEX  (angle)	 extent (lat)
C
3140	IF ( EXTANG(CMD, 90, MHLAEX) ) CALL PROMPT(CMD,.FALSE.)
	RETURN
C
C *** LOEX  (angle)	 extent (long)
C
3150	IF ( EXTANG(CMD, 90, MHLOEX) ) CALL PROMPT(CMD,.FALSE.)
	RETURN
C
C *********************************************************************
C 4.	projection
C
C *** PROJ  (FS)	 projection
C
400	IF ( EXTSTR(CMD,12,MHPROJ) ) CALL PROMPT(CMD,.FALSE.)
	RETURN
C
C *** SPH   (FS)	 spheroid
C
410	IF ( EXTSTR(CMD,15,MHSPH) ) CALL PROMPT(CMD,.FALSE.)
	RETURN
C
C *** CMER  (angle)	 central meridian
C
420	IF ( EXTANG(CMD, 180, MHCMER) ) CALL PROMPT(CMD,.FALSE.)
	RETURN
C
C *** LAFO  (angle)	 lat of false origin
C
430	IF ( EXTANG(CMD, 90, MHLAFO) ) CALL PROMPT(CMD,.FALSE.)
	RETURN
C
C *** NPAR  (angle)	 standard paralled (N)
C
440	IF ( EXTANG(CMD, 90, MHNPAR) ) CALL PROMPT(CMD,.FALSE.)
	RETURN
C
C *** SPAR  (angle)	 standard paralled (S)
C
450	IF ( EXTANG(CMD, 90, MHSPAR) ) CALL PROMPT(CMD,.FALSE.)
	RETURN
C
C *********************************************************************
C 5.	digitising information
C
C *** MENU  (FS)	 menu used
C
500	IF ( EXTSTR(CMD,9,MHMENU) ) CALL PROMPT(CMD,.FALSE.)
	RETURN
C
C *** DGSC  (FI)	 scale digitised at
C
510	IF ( EXTINT(CMD,0,200 000 000,MHDGSC,LONG) )
     &					CALL PROMPT( CMD, .FALSE. )
	RETURN
C
C *** DBSC  (FI)	 scale databanked at
C
520	IF ( EXTINT(CMD,0,200 000 000,MHDBSC,LONG) )
     &					CALL PROMPT( CMD, .FALSE. )
	RETURN
C
C *** DSYS  (FS)	 digitising system used
C
530	IF ( EXTSTR(CMD,10,MHDSYS) ) CALL PROMPT(CMD,.FALSE.)
	RETURN
C
C *********************************************************************
C 6.	specification
C
C *** PCDE  (FS)	 producer code
C
600	IF ( EXTSTR(CMD,8,MHPCDE) ) CALL PROMPT(CMD,.FALSE.)
	RETURN
C
C *** PSSN  (FS)	 product spec stock 'number'
C
610	IF ( EXTSTR(CMD,9,MHPSSN) ) CALL PROMPT(CMD,.FALSE.)
	RETURN
C
C *** PSCN  (FI)	 product spec change number
C
620	IF ( EXTINT(CMD,0,99,MHPSCN,SHORT) ) CALL PROMPT( CMD, .FALSE. )
	RETURN
C
C *** PSDT  (date)	 product spec date
C
630	IF ( EXTDAT(CMD,MHPSDT) ) CALL PROMPT( CMD,.FALSE. )
	RETURN
C
C *** VAL   (FI)	 validation table
C
640	IF ( EXTINT(CMD,0,9999,MHVAL,LONG) ) CALL PROMPT( CMD, .FALSE. )
	RETURN
C
C *********************************************************************
C 7.	sheet history
C
C *** CDTE  (date)	 compilation/analysis date
C
700	IF ( EXTDAT(CMD,MHCDTE) ) CALL PROMPT( CMD,.FALSE. )
	RETURN
C
C *** CTYP  (FS)	 compilation type
C
710	IF ( EXTSTR(CMD,1,MHCTYP) ) CALL PROMPT(CMD,.FALSE.)
	RETURN
C
C *** MDTE  (date)	 maintenance date
C
720	IF ( EXTDAT(CMD,MHMDTE) ) CALL PROMPT( CMD,.FALSE. )
	RETURN
C
C *** MCDE  (FS)	 maintenance desc code
C
730	IF ( EXTSTR(CMD,4,MHMCDE) ) CALL PROMPT(CMD,.FALSE.)
	RETURN
C
C *** MMD   (date)	 match/merge date
C
740	IF ( EXTDAT(CMD,MHMMD) ) CALL PROMPT( CMD,.FALSE. )
	RETURN
C
C *** MMV   (FS)	 match/merge version
C
750	IF ( EXTSTR(CMD,1,MHMMV) ) CALL PROMPT(CMD,.FALSE.)
	RETURN
C
C *** MCD   (date)	 map currency date
C
760	IF ( EXTDAT(CMD,MHMCD) ) CALL PROMPT( CMD,.FALSE. )
	RETURN
C
C *** REV   (date)	 revision date
C
770	IF ( EXTDAT(CMD,MHREV) ) CALL PROMPT( CMD,.FALSE. )
	RETURN
C
C *********************************************************************
C 8.	accuracy information
C
C *** HDTM  (FS)	 horizontal datum
C
800	IF ( EXTSTR(CMD,5,MHHDTM) ) CALL PROMPT(CMD,.FALSE.)
	RETURN
C
C *** VDTM  (FS)	 vertical datum
C
810	IF ( EXTSTR(CMD,3,MHVDTM) ) CALL PROMPT(CMD,.FALSE.)
	RETURN
C
C *** AHAC  (FI)	 abs hor acc
C
820	IF ( EXTACC(CMD,0,9999,MHAHAC,LONG) ) CALL PROMPT( CMD, .FALSE.)
	RETURN
C
C *** AVAC  (FI)	 abs ver acc
C
830	IF ( EXTACC(CMD,0,9999,MHAVAC,LONG) ) CALL PROMPT( CMD, .FALSE.)
	RETURN
C
C *** RHAC  (FI)	 rel hor acc
C
840	IF ( EXTACC(CMD,0,9999,MHRHAC,LONG) ) CALL PROMPT( CMD, .FALSE.)
	RETURN
C
C *** RVAC  (FI)	 rel ver acc
C
850	IF ( EXTACC(CMD,0,9999,MHRVAC,LONG) ) CALL PROMPT( CMD, .FALSE.)
	RETURN
C
C *** VHAC  (FI)	 ver heighting acc
C
860	IF ( EXTACC(CMD,0,9999,MHVHAC,LONG) ) CALL PROMPT( CMD, .FALSE.)
	RETURN
C
C *********************************************************************
C 9.	processing dates
C
C *** DUP <n>  (date)	 digital update 1-6
C
C this command will have insisted on having an integer in INTARG(1)
C to tell us which field to edit.
C
C If it is DUP1, then we will shuffle the others down...
C
900	IF ( INTARG(1).EQ.1 ) THEN
C
C	 we are going to update ALL of the fields
C
	   CALL WRITEF('Altering DUP1 will scroll old dates')
	   IF ( EXTDAT(CMD,DAYS) ) THEN
	      DO 901 I = 6,2,-1
	         MHDUP( I ) = MHDUP( I-1 )	! shuffle them down
901	      CONTINUE
	      MHDUP(1) = DAYS			! copy the new value
	      CALL WRITEF('Digital update dates altered to:')
	      DO 902 I = 1,6
	         INTARG(1) = I
	         CALL PROMPT( CMD, .FALSE. )	! and show the change
902	      CONTINUE
	   ENDIF
C
	ELSE
C
C	 for another DUP, just update it (replacing a field)
C	 but first check that it is in range
C
	   IF ( INTARG(1).LT.1 .OR. INTARG(1).GT.6 ) THEN
	      CALL WRITEF(
     &		'DUP%N is out of range - DUP1 to DUP6 are defined',
     &		    INTARG(1) )
	   ELSE
C
C	    we have a legal DUP number
C	    however, we must preserve INTARG(1) ourselves, as reading
C	    the date uses RDCOMM to read the month (if it is a word),
C	    which overwrites our value of INTARG(1)
C
	      OLDINT = INTARG(1)
	      CALL WRITEF('Altering only DUP%N',OLDINT)
	      IF ( EXTDAT(CMD,MHDUP(OLDINT)) ) THEN
	         INTARG(1) = OLDINT		! determine which DUP
	         CALL PROMPT( CMD,.FALSE. )	! and show new value
	      ENDIF
	   ENDIF
	ENDIF
	RETURN
C
C *** DLH   (date)	 date last handled
C
910	IF ( EXTDAT(CMD,MHDLH) ) CALL PROMPT( CMD,.FALSE. )
	RETURN
C
C *********************************************************************
C 10.	status flags
C
C *** EMSN  (FI)	 edge matched side N
C
1000	IF ( EXTINT(CMD,0,1,MHEMSN,SHORT) ) CALL PROMPT( CMD, .FALSE. )
	RETURN
C
C *** EMSE  (FI)	 edge matched side E
C
1010	IF ( EXTINT(CMD,0,1,MHEMSE,SHORT) ) CALL PROMPT( CMD, .FALSE. )
	RETURN
C
C *** EMSS  (FI)	 edge matched side S
C
1020	IF ( EXTINT(CMD,0,1,MHEMSS,SHORT) ) CALL PROMPT( CMD, .FALSE. )
	RETURN
C
C *** EMSW  (FI)	 edge matched side W
C
1030	IF ( EXTINT(CMD,0,1,MHEMSW,SHORT) ) CALL PROMPT( CMD, .FALSE. )
	RETURN
C
C *** FLAG  (FI)	 processing flag
C
1040	IF ( EXTINT(CMD,0,9,MHFLAG,SHORT) ) CALL PROMPT( CMD, .FALSE. )
	RETURN
C
C *********************************************************************
C 11.	terrain information
C
C *** CLOD  (angle)	 clockwise ori of data
C
1100	IF ( EXTANG(CMD, 180, MHCLOD) ) CALL PROMPT(CMD,.FALSE.)
	RETURN
C
C *** LAIN  (FI)	 latitude interval
C
1110	IF ( EXTINT(CMD,0,9999,MHLAIN,LONG) ) CALL PROMPT( CMD, .FALSE.)
	RETURN
C
C *** LOIN  (FI)	 longitude interval
C
1120	IF ( EXTINT(CMD,0,9999,MHLOIN,LONG) ) CALL PROMPT( CMD, .FALSE.)
	RETURN
C
C *** LALI  (FI)	 no of lat line
C
1130	IF ( EXTINT(CMD,0,9999,MHLALI,LONG) ) CALL PROMPT( CMD, .FALSE.)
	RETURN
C
C *** LOLI  (FI)	 no of long lines
C
1140	IF ( EXTINT(CMD,0,9999,MHLOLI,LONG) ) CALL PROMPT( CMD, .FALSE.)
	RETURN
C
C *** PCIN  (FI)	 partial cell indicator
C
1150	IF ( EXTINT(CMD,0,99,MHPCIN,SHORT) ) CALL PROMPT( CMD, .FALSE. )
	RETURN
C
C
	END
