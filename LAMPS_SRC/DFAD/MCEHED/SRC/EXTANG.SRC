C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1988-03-03 22:08:36.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL FUNCTION EXTANG( CMD, MAXDEG, ANGLE )
C
***	IDENT	03JN83
***	MODULE	EXTANG
C
C	Copyright LaserScan Laboratories Ltd., Cambridge, England
C
C Author TJ Ibbs
C
	IMPLICIT NONE
C
C This function extracts an angle from the current input buffer,
C prompting if necessary, and will update ANGLE if it finds something
C sensible
C
C It returns TRUE if we update the value, FALSE otherwise
C
C we were passed
C
	INTEGER*4	CMD	! tells PROMPT which angle this is
	INTEGER*4	MAXDEG	! maximum size allowed (degrees)
	INTEGER*4	ANGLE	! our result (in tenths of a second)
C
C the following functions are used
C
	LOGICAL		RDCHS	! read next significant char
	LOGICAL		PROMPT	! prompt for an argument
	LOGICAL		RDORIG	! read the angle
	LOGICAL		CHKANG	! check it's in range
	LOGICAL		UNSET	! see if they commanded us to unset it
C
C we also need
C
	REAL		RANGLE	! real counterpart of ANGLE
	REAL		RMAX	! and of MAXDEG
	BYTE		CHAR	! character read by RDCHS
	LOGICAL		REPROM	! should we reprompt?
C
C assume we fail to do the update
C
	EXTANG = .FALSE.
C
C initially, only prompt if need to
C
	REPROM = .FALSE.
C
C do we already have an argument?
C
10	IF ( REPROM .OR. RDCHS(CHAR) ) THEN	! no argument, prompt
	   IF ( PROMPT(CMD,.TRUE.) ) RETURN	! no reply
	ELSE
	   CALL BSCH			! else unread the char
	ENDIF
C
C now reprompt on an error
C
	REPROM = .TRUE.
C
C first, let us see if they have asked us to UNSET this variable
C
	IF ( UNSET() ) THEN			! yes, they did
	   IF ( .NOT.RDCHS(CHAR) ) THEN
	      CALL WRITEF('*** ERROR *** '//
     &			  'Unexpected "%A1" found after unset command',
     &					CHAR )
	      GOTO 10
	   ELSE
	      ANGLE = 0				! equivalent to zero
	      CALL WRITEF('Angle field now unset')
	      EXTANG = .TRUE.			! success
	      RETURN				! that's the lot
	   ENDIF
C
	ELSE			! we must try for an angle
C
C	 but no, not UNSET, so let's see if it is a valid angle
C
	   IF ( RDORIG(RANGLE) ) GOTO 10	! failed to read angle
C
C	 and is there stuff left on the line?
C
	   IF ( .NOT.RDCHS(CHAR) ) THEN
	      CALL WRITEF('***ERROR *** '//
     &			  'Unexpected "%A1" found after angle',CHAR)
	      GOTO 10
	   ENDIF
C
C	 but here, it was valid - is it too big?
C
	   RMAX  = FLOAT(MAXDEG)
C
	   IF ( CHKANG(RANGLE,RMAX) ) THEN
	      ANGLE = INT(RANGLE)		! copy the angle over
	      EXTANG = .TRUE.			! success
	      RETURN				! & that's it
	   ELSE
	      GOTO 10
	   ENDIF
	ENDIF
C
	END
