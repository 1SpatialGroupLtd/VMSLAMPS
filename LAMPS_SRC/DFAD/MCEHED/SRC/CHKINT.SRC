C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1988-03-03 19:09:10.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL FUNCTION CHKINT( MIN, MAX, NUMBER )
C
***	IDENT	03JN83
***	MODULE	CHKINT
C
C	Copyright LaserScan Laboratories Ltd., Cambridge, England
C
C Author TJ Ibbs, 27 May 1983
C
C To check that an integer is in the range MIN - MAX, and is not
C followed by rubbish
C
C We return TRUE if it is in range, FALSE if it is not
C
C (BEWARE - this is against the standard LSL standard)
C
	IMPLICIT NONE
C
C
C we were passsed
C
	INTEGER*4	MIN	! minimum value allowed
	INTEGER*4	MAX	! maximum value allowed
	INTEGER*4	NUMBER	! the value to check
C
C
C we need to call
C
	LOGICAL		RDCHS	! read the next significant char
C
C and thus also need
C
	BYTE		CHAR	! to read it into
C
C
C assume all will go badly
C
	CHKINT = .FALSE.
C
C check if rubbish follows
C
	IF ( .NOT.RDCHS(CHAR) ) THEN
	   CALL WRITEF('*** ERROR *** '//
     &			'Unexpected "%A1" found after integer',CHAR)
	   RETURN
	ENDIF
C
C
	IF ( NUMBER.LT.MIN ) THEN
	   CALL WRITEF('*** ERROR *** '//
     &			'Value %^L%N too small (range is %N-%^L%N)',
     &				 NUMBER,             MIN,  MAX )
	ELSEIF ( NUMBER.GT.MAX ) THEN
	   CALL WRITEF('*** ERROR *** '//
     &			'Value %^L%N too large (range is %N-%^L%N)',
     &				 NUMBER,             MIN,  MAX )
	ELSE
	   CHKINT = .TRUE.		! success - a legal value
	ENDIF
C
	RETURN
C
	END

