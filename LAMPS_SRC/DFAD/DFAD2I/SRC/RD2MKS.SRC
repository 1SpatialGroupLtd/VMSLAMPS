C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1988-05-18 15:30:18.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL FUNCTION RD2MKS
C
***	IDENT	18MY88
***	MODULE	RD2MKS
C
C	Copyright LaserScan Laboratories Ltd., Cambridge, England
C
C Author TJ Ibbs, 16 March 1983
C
C This routine attempts to read the closing tapemarks of a DFAD tape,
C returns TRUE if it fails, else FALSE
C
	IMPLICIT NONE
C
C
C common blocks
C
***     PARAMETER/LSL$CMNLSL:LSLLIBMSG/
***	COMMON/LSL$CMNDLMS:DFAD/	! for buffer
***	COMMON/LSL$CMNLSL:MTIVCM  /	! magtape common
***	COMMON/HERE:PARAMS/     	! for DIAG_BRIEF
C
C functions called
C
	INTEGER		MTIRDB		! read a block off magtape
C
C workspace
C
	INTEGER*4	RETVAL		! result from MTIRDB, etc
	INTEGER*4	IERR		! for widening errors into
	INTEGER		I		! DO loop counter
C
C
C be prepared for the worst
C
	RD2MKS = .TRUE.
C
	DO 200 I = 1,2
	   IF (I.EQ.1) THEN
	      CALL EXPAND('*** Error reading first tape mark')
	   ELSE
	      CALL EXPAND('*** Error reading second tape mark')
	   ENDIF
C
C	 now do the actual read
C
	   RETVAL = MTIRDB( BYTBUF, INLEN, BYTCNT )
C
	   IF (.NOT. RETVAL) THEN          !error
	      IF (RETVAL.EQ.LSL__EOF)GOTO 200
	      CALL TTWLIN
	      CALL WRITEF('    block number is %N', MTINBL)
	      CALL LSL_PUTMSG(RETVAL)      !output error msg
	      IERR = MTIERR
	      IF (RETVAL.EQ.LSL__SYSERR)CALL LSL_PUTMSG(IERR)
	      GOTO 999
C
	   ELSE
	      CALL TTWLIN
	      CALL WRITEF ('    block %N contains %N stripes',
     &                            MTINBL,        BYTCNT )
	      GOTO 999
	   ENDIF
C
200	CONTINUE
C
C all went OK
C
C	IF ( DIAG_BRIEF ) THEN
C	   CALL WRITEF('Read the final two tapemarks')
C	ENDIF
	RD2MKS = .FALSE.
C
999	RETURN
	END

