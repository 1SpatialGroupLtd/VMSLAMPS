C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1988-03-22 13:02:26.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE COMPLT
C
***	IDENT	22MR88
***	MODULE	COMPLT
C
C Copyright Laser-Scan Laboratories Ltd, Cambridge, England.
C Author: M. Dhillon, 6 June 1983
C
C Subroutine to convert a negative Univac 36 bit word from 2's 
C complement to 1's complement form.
C
CMOD	Modernised to use LSLLIB and other recent developments
C						JMB 22-Mar-1988
C
C
	IMPLICIT NONE
C 
C Common block
C
***	COMMON /LSL$CMNDLMS:DFAD/
C
C Code starts here
C All 36 bit quantities have been made positive, but this routine 
C called if and only if they were really negative. Therefore all that
C needs be done is to complement each 1/2 word.
C
	DFABUF(DFAPTR) = NOT(DFABUF(DFAPTR))
	DFABUF(DFAPTR+1) = NOT(DFABUF(DFAPTR+1))
C
C ...and now reduce them to 18 bits again
C
	DFABUF(DFAPTR) = DFABUF(DFAPTR) .AND. '3FFFF'X
	DFABUF(DFAPTR+1) = DFABUF(DFAPTR+1) .AND. '3FFFF'X
C
C ...and that believe it or not is the end of the affair
C
	RETURN
	END
