C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1988-03-22 15:34:32.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE OUTTLR
C
***	IDENT	22MR88
***	MODULE	OUTTLR
C
C Copyright Laser-Scan Laboratories Ltd, Cambridge, England.
C Author: M. Dhillon, 6 June 1983
C
CMOD	Modernised to use LSLLIB and other recent developments
C						JMB 22-Mar-1988
C
C
C Subroutine to output a trailer block to a DMA DLMS DFAD (Defense 
C Mapping Agency Digital Land Mass Simulation Digital Feature Analysis
C Data) magtape.
C 
	IMPLICIT NONE
C
C Common block
C
***	COMMON /LSL$CMNDLMS:DFAD/
***	COMMON /HERE:DESCR/
***	COMMON /HERE:STATE/
***	COMMON /HERE:PARAMS/
C
C Workspace
C
	INTEGER*2	OFFSET		! index into DFABUF
	INTEGER*4	CHKSUM(2)	! the checksum word
C
C Code starts here
C
	OFFSET = 1
	DFAPTR = OFFSET
C Initialise the checksum
	CHKSUM(1) = 0
	CHKSUM(2) = 0
C Apart from bits 1-6 which are all set, the orther bits in the first 
C four words are all zero.
	DO 100 OFFSET=1,7,2
	   CALL LIB$INSV(63,12,6,DFABUF(OFFSET+1))
	   CALL LIB$INSV(0,0,12,DFABUF(OFFSET+1))
	   CALL LIB$INSV(0,0,18,DFABUF(OFFSET))
	   CALL CHECK(DFABUF(OFFSET),CHKSUM)
100	CONTINUE
C
C The next word is the checksum itself, so write this out to DFABUF, 
C but specifically set the offset
	OFFSET = 9
	DFAPTR = OFFSET
	CALL LIB$INSV(CHKSUM(1),0,18,DFABUF(OFFSET))
	CALL LIB$INSV(CHKSUM(2),0,18,DFABUF(OFFSET+1))
C The last word of the trailer is all zeroes
	OFFSET = OFFSET +2
	DFAPTR = OFFSET
	CALL LIB$INSV(0,0,18,DFABUF(OFFSET))
	CALL LIB$INSV(0,0,18,DFABUF(OFFSET+1))
C Now check if everything has been done
	OFFSET = OFFSET + 2
	DFAPTR = OFFSET
	IF (DFAPTR .NE. 13) THEN
	   CALL WRITEF('Error in outputting trailer block')
	   GOTO 1000
	END IF
C 
C Now write it out to magtape
C
	BLKTYP = TRAILR
	CALL WRTMAG
C
C ...and finish here
C
1000	RETURN
	END
