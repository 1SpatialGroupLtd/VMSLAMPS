C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1988-06-16 13:20:56.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL FUNCTION LIST_HEADING()
C
***	IDENT	16JN88
***	MODULE	LIST_HEADING
C
C	Copyright Laser-Scan Laboratories, Cambridge, England.
C	Author	Andrew Morris
C	Created June 1984
C
CMOD	Modified from original DFADVAL for BAE/Saudi to do
C	more extensive validation against DLMS spec and optional
C	rule file, produce more messages and generate optional
C	LITES2 command file.	
C	This routine comes from code originally in DFADVAL main
C	routine.				JMB 17 Jan 1988
C
C
	IMPLICIT NONE
C
C common blocks
	INCLUDE 'HERE:DFADVAL.CMN'
C
C Assume success
C
	LIST_HEADING = .TRUE.
C
C write report heading
C
	CALL FLWRTF('DFADVAL Validation Report')
	CALL FLWRTF
     +  ('------------------------------------------------------------')
	CALL FLWRTF(' ')
C
C Give IFF file details
C
	CALL FIFVER	! give IFF file details
C
C Give details of which messages are output
C
	CALL FLWRTF(' ')
	CALL EXPAND('Include general information?   : ')
	IF (INFSW) THEN
	   CALL APPEND('YES')
	ELSE
	   CALL APPEND('NO')
	END IF
	CALL FLWLIN()
	CALL EXPAND('Include warnings?              : ')
	IF (WNGSW) THEN
	   CALL APPEND('YES')
	ELSE
	   CALL APPEND('NO')
	END IF
	CALL FLWLIN()
C
C Give deatails of bounds check
C
	CALL EXPAND('Perform coord bounds check?    : ')
	IF (BOUNDS) THEN
	   CALL APPEND('YES')
	ELSE
	   CALL APPEND('NO')
	ENDIF
	CALL FLWLIN()
C
C Give details of crossover check
C
	CALL EXPAND('Perform areal crossover check? : ')
	IF (LOPSW) THEN
	   CALL APPEND('YES, with tolerance %F7.3',TOL)
	ELSE
	   CALL APPEND('NO')
	END IF
	CALL FLWLIN()
C
C Duplicate points ?
	CALL EXPAND('Perform duplicate point check? : ')
	IF(DUPLICATES)THEN
	   CALL APPEND('YES')
	ELSE
	   CALL APPEND('NO')
	ENDIF
	CALL FLWLIN
C
C AC validation?
	CALL EXPAND('Perform AC validation?         : ')
	IF(ACSW)THEN
	   CALL APPEND('YES')
	ELSE
	   CALL APPEND('NO')
	ENDIF
	CALL FLWLIN
C
C Say from where feature types are taken
C
	CALL EXPAND('Feature types taken from ')
	IF (TYPE_FROM_AC) THEN
	   CALL APPEND('AC entries')
	ELSE
	   CALL APPEND('FS entries')
	END IF
	CALL FLWLIN()
	CALL FLWRTF(' ')
	CALL FLWRTF
     +  ('------------------------------------------------------------')
	CALL FLWRTF(' ')
C
C Exit
C
	RETURN
	END
