C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1991-04-02 14:32:06.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL FUNCTION NO_VAL()
C
***	IDENT	02AP91
***	MODULE	NO_VAL
C
C	Copyright Laser-Scan Laboratories, Cambridge, England.
C	Author	Andrew Morris
C	Created June 1984
C
CMOD	Modified from original DFADVAL for BAE/Saudi to do
C	more extensive validation against DLMS spec and optional
C	rule file.	
C	This routine comes from code originally in DFADVAL main
C	routine.				JMB 17 Jan 1988
C
	IMPLICIT NONE
C
C common block
	INCLUDE 'HERE:DFADVAL.CMN'
C
C workspace
C
	INTEGER I 			! loop counter
C
C Assume success
C
	NO_VAL = .TRUE.
C
C Check layer is contained by a section
C
	IF (LEVEL.LT.SECLEV) THEN
	   CALL FLWRTF('E    Layer not within section')
	   NERRS = NERRS+1
C
C Check previous feature/layer terminated
C
	ELSE IF (LEVEL.GE.OVLLEV) THEN
	   IF (LEVEL.EQ.FTRLEV) THEN
	      CALL EF_VAL
	      CALL FLWRTF('E    Feature not terminated')
	      NERRS = NERRS+1
	   END IF
	   CALL EO_VAL	! close layer
	   CALL FLWRTF('E    Layer not terminated')
	   NERRS = NERRS+1
	END IF
C
C Get layer number
C
	CALL EIHRI(OSN,1,1)
C
C If /LAYER used then check that OSN is one of the layers required.
C
	IF (HAD_LAYER) THEN
	   DO 10 I = 1,NUM_LAYERS
	      IF (OSN.EQ.LAYER_LIST(I)) THEN
	         LAYER_FLAGS(I) = .TRUE.
	         GOTO 20
	      ENDIF
10	   CONTINUE
C
C OSN not required, then skip to end of layer
C
	   CALL IFFNXC('EO',IELEN)
	   GOTO 999
	ENDIF
C
20	CONTINUE
C
C FSN ought to be unique within layer 0 and within layers above
C layer 0, so reset LFSN accordingly
C
	IF (OSN.EQ.0.OR.OSN.EQ.1) LFSN = 0
C
C Say which layer it is, if wanted
C
	IF (INFSW) THEN
	   CALL FLWRTF(' ')
	   CALL FLWRTF('LAYER %N',OSN)
	END IF
C
C Set defaults for layer start
C
	HADAC7 = .FALSE.
	HADAC8 = .FALSE.
	HADST = .FALSE.
	HADTYP = .FALSE.
	NFTRS = 0		! no features yet
	NREG = 0		! number registration mark features
	LEVEL = OVLLEV		! level now layer level
C
C Exit
C
999	RETURN
	END
