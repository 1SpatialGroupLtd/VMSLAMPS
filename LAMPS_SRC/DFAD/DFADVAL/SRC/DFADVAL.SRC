C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1991-03-28 13:59:48.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	PROGRAM DFADVAL
C
***	IDENT	28MR91
***	MODULE	DFADVAL
C
C	Copyright Laser-Scan Laboratories, Cambridge, England.
C	Author	Andrew Morris
C	Created June 1984
C
CMOD	Max  FSN No. up to 65535 (though illegal) ACM	29-Mar-1985
C
CMOD	Now examines FS entries (unless ACSW	SGH	07-Mar-1985
C	set true by /AC) to get type as
C	FC-100.
CMOD	Fixed check for gaps in  FSN sequence	ACM	18-Jul-1984
C
C To validate DLMS (Digital Land MasS) culture data from an
C IFF file before it is output to a DFAD tape.
C
C -See DFADVAL.MEM for a full specification.
C
	IMPLICIT NONE
C
	INCLUDE '($SSDEF)'
	INCLUDE 'HERE:INTCHK.CMN'	! for loop checking
	INCLUDE 'HERE:DFADVAL.CMN'	! for EF,EO,EM subroutines
C
C workspace
	INTEGER		DFSW_CMD_TABLE
	INTEGER		ACKW_CMD_TABLE
	INTEGER		STATUS
	INTEGER		I
C
C functions
	LOGICAL		GET_COMMAND
	LOGICAL		OPEN_FILES
	LOGICAL		CLOSE_FILES
	LOGICAL		LIST_HEADING
	LOGICAL		VALIDATE
C
C externals
	EXTERNAL	DFSW_CMD_TABLE
	EXTERNAL	ACKW_CMD_TABLE
C
	DATA FILLEV,MAPLEV,SECLEV,OVLLEV,FTRLEV/0,1,2,3,4/!IFF hierarchy
C
C Assume successful completion
C
	STATUS = SS$_NORMAL
C
C Initialise LSLLIB
C
	CALL LSL_INIT
C
C Set defaults
C
C Qualifier defaults
C
	TOL = 1.0		! intersection tolerance is 1 unit
	LOPSW = .TRUE.		! will do loop checks
	INFSW = .TRUE.		! will give information
	WNGSW = .TRUE.		! will give warnings
	ACSW  = .TRUE.		! check ACs 
	BOUNDS = .TRUE.		! do coord in range check against MH
C
C Flag defaults
C
	RULES = .FALSE.		! no rules file
	LITES2 = .FALSE.	! no lites2 command file
	PRINTER = .FALSE.	! no printer output
	LIST = .TRUE.		! always have list output
	HAD_LCM_MSG = .FALSE.	! lcm message flag
	HAD_LAYER = .FALSE.
C
	DO 30 I=1,MAX_LIST	! layer status flags
	   LAYER_FLAGS(I) = .FALSE.
30	CONTINUE	   
C
C Default list file is SYS$OUTPUT
C
	LISTFILE='SYS$OUTPUT:'	! default list output to terminal
	LISTLEN = 11		! length of list file default
C
C Logical unit numbers for files
C
	INLUN = 1
	LISTLUN = 2
	LITES2LUN = 3
	RULELUN = 4
C
C File open flag defaults
C
	INOPN = .FALSE.
	LISTOPN = .FALSE.
	LITES2OPN = .FALSE.
	RULEOPN = .FALSE.
C
C Set up fadt field identifier tag array
C
	FADTNAME(1) = 'fac'
	DATA (FADTNAME(I),I=2,7)  /'hgt','typ','fid','sec','rel','smc'/
	DATA (FADTNAME(I),I=8,10) /'ori','wid','lth'/
	DATA (FADTNAME(I),I=11,13)/'dir','wid','?!?'/
	DATA (FADTNAME(I),I=14,16)/'den','rof','tre'/
C
C Get command line
C
	IF (.NOT.GET_COMMAND()) GOTO 10
C
C Open files
C
	IF (.NOT.OPEN_FILES()) GOTO 10
C
C Do report heading
C
	IF (.NOT.LIST_HEADING()) GOTO 10
C
C Do main validation
C
	IF (.NOT.VALIDATE()) GOTO 10
C
C Close files
C
	IF (.NOT.CLOSE_FILES()) GOTO 10
C
	GOTO 20
C
C Errors
C
10	STATUS = SS$_ABORT
C
C Exit
C
	CALL LSL_EXIT(STATUS)
20	END
