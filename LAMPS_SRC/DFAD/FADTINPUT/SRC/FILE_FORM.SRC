	LOGICAL FUNCTION FILE_FORM ()
C
***	MODULE FILE_FORM
***	IDENT 14JA88
C
C Copyright Laser-Scan Laboratories Ltd, Cambridge, England.
C Author: J.M. Billing			14 Jan 1988
C
C Function to handle form to deal with input of FADT file spec
C and (optional) rule file spec.
C Returns .TRUE. if completes successfully.
C
	IMPLICIT NONE
C
	INCLUDE 'LSL$FADTINPUT:FADTINPUT.CMN'
C
C w/s
	CHARACTER*100	FILNAM		! file spec input from form
	CHARACTER*10	FID		! field identifier
	INTEGER		TERM		! form field terminator
	LOGICAL		OK		! return code status
C
C functions
	LOGICAL		PARFILN		! parse file spec
	LOGICAL		TRNALL		! translate logical name
	INTEGER		SIGCHS		! to find signif chars in str
C
C Assume success
C
	FILE_FORM = .TRUE.
C
C Determine if logical names are being used, and skip this if they are
C
	IF (HAD_LNM) GOTO 20
C
C Set up defaults
C
	WANT_FADT = .TRUE.
	FADTFILE = 'LSL$FADT:FADT.FADT;0'
	FADTLEN = SIGCHS(FADTFILE)
C
	WANT_RULE = .TRUE.
	RULEFILE = 'LSL$DFAD_RULE:VALTAB.RULE;0'
	RULELEN = SIGCHS(RULEFILE)
C
C Set up FID to point to first field wanted
C
5	FID = 'FADT'
C
C Set up the form
C
	CALL FDV$CLRSH('FR_FIL')
C
C Now read in the FADT file spec
C
10	CALL FDV$GET(FILNAM,TERM,FID)
C
C Find which file spec has been entered, and attempt to parse it
C
	IF (FID.EQ.'FADT') THEN
C
C It is FADT, so attempt to parse FADT filename
C
	   OK = PARFILN (FADTFILE, FADTLEN, FILNAM, 
     &			'LSL$FADT:FADT.FADT;0', .TRUE. )
C
C Either illegal file spec., so force user to re-enter
C
	   IF (.NOT.OK) THEN
	      CALL FORM_MSG('Illegal FADT file specification, '//
     &				'please reenter.',0)
	      GOTO 10
C
C Or legal, so set flag showing want to open FADT file
C
	   ELSE
	      WANT_FADT = .TRUE.
	   ENDIF
C
C Otherwise, it is the rule file spec field
C
	ELSE
C
C Either none entered, so do not want to open it
C
	   IF ((FILNAM.EQ.' ').OR.(FILNAM.EQ.'NONE')) THEN
	      WANT_RULE = .FALSE.		! no file spec entered
C
C Or one has been entered, so attempt to parse it
C
	   ELSE
	      OK = PARFILN(RULEFILE, RULELEN, FILNAM,
     &			'LSL$DFAD_RULE:VALTAB.RULE;0', .TRUE.)
C
C If illegal, force re-entry
C
	      IF (.NOT.OK) THEN
	         CALL FORM_MSG('Illegal rule file specification, '//
     &				'please reenter.',0)
	         GOTO 10
C
C Otherwise, set flag showing to open the rule file
C
	      ELSE
	         WANT_RULE = .TRUE.
	      ENDIF
	   ENDIF
	ENDIF
C
C Check if finished
C
	IF (TERM.EQ.0) GOTO 20
C
C Process terminator and find which field to move to next
C
	CALL FDV$PFT
	CALL FDV$GCF(FID)
	GOTO 10
C
C Exit
C
20	RETURN
	END
