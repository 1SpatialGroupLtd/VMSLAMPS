C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1988-06-13 11:00:10.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL FUNCTION FADT_READ (REC,KEY,LUN)
C
***	MODULE FADT_READ
***	IDENT 13JU88
C
C Copyright Laser-Scan Laboratories Ltd, Cambridge, England
C Author   : J.M. Billing		6 Jan 1988
C
C Modified : J.M. Billing		13 June 1988
C To perform full error checking and reporting in FORTRAN file
C operations
C
C Function to attempt to read FADT record, from FADT input file,
C with FAC key equal to current FSN.
C Returns .TRUE. if finds record.
C
	IMPLICIT NONE
C
	INCLUDE 'LSL$FADTINPUT:FADTINPUT.CMN'
	INCLUDE 'LSL$FADTCMN:FADT.CMN'
	INCLUDE '($FORIOSDEF)'
	INCLUDE '($FORDEF)'
C
C argument
	RECORD /FADT_STRUCT/	REC	! record to be read into
	INTEGER*2		KEY	! key to be used
	INTEGER			LUN	! logical unit number
C
C w/s variables
	INTEGER STATUS		! error condition
	INTEGER IO_STAT		! error condition in read
C
C Assume success
C
	FADT_READ = .TRUE.
C
C Attempt to read FADT record
C
	READ (	UNIT = LUN,
     &		KEY = KEY,
     &		KEYID = 0,
     &		IOSTAT = IO_STAT) REC
C
C Check for errors
C
	IF (IO_STAT.NE.0) THEN
	   CALL ERRSNS (,,,,STATUS)
C
C In particular, record not found
C
	   IF (STATUS.NE.FOR$_ATTACCNON) THEN
	      CALL LSL_PUTMSG(STATUS)
	   ELSE
	      FADT_READ = .FALSE.
	   ENDIF
	ENDIF
C
C Exit
C
	RETURN
	END
