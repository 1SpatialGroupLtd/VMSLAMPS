	LOGICAL FUNCTION DSI_FORM()
C
***	MODULE DSI_FORM
***	IDENT 09JN92
C
C Copyright Laser-Scan Laboratories Ltd, Cambridge, England.
C Author:J.M. Billing 			18 Jan 1988
C
C Function to accept DSI as input through DSI form.
C Returns .TRUE. if succeeds.
C
	IMPLICIT NONE
C
	INCLUDE 'LSL$FADTINPUT:FADTINPUT.CMN'
	INCLUDE 'LSL$FADTCMN:DSI.CMN'
	INCLUDE 'LSL$CMNLSL:EXPC.CMN'
C
C w/s variables
	INTEGER		TERM	! field terminator
	INTEGER		STATUS	! FDV status set up by calling FDV$STAT
	CHARACTER*10	FID	! field identifier
	CHARACTER*100	FVAL	! field value
C
C functions
	LOGICAL		DSI_READ
	LOGICAL		DSI_WRITE
	LOGICAL		DATE_VALIDATE
	LOGICAL		TRNALL
C
C Assume success
C
	DSI_FORM = .TRUE.
C
C Clear screen and set up form
C
	CALL FDV$CLRSH('DSI')
C
C Try to read and set up any current DSI values in form
C
	IF (DSI_READ()) THEN
C
C If DSI record exists, use values of current DSI in FADT file
C
C Transfer sec. handling fragments to FVAL
C
	   FVAL(1:13) = DSI5.SECURITY
	   FVAL(14:27) = DSI6.SECURITY
C
	   CALL FDV$PUT(FVAL,'SECHAN')
C
C Transfer the rest
C
	   CALL FDV$PUT(DSI1.LEVEL,'LEVEL')
	   CALL FDV$PUT(DSI1.MAN_REF,'MANREF')
	   CALL FDV$PUT(DSI1.MATCHMERGE_VERSION,'MMVER')
	   CALL FDV$PUT(DSI2.DATA_EDITION,'DATAED')
	   CALL FDV$PUT(DSI2.MAINTENANCE_DATE,'MAINDT')
	   CALL FDV$PUT(DSI2.MAINTENANCE_CODE,'MAINDC')
	   CALL FDV$PUT(DSI2.MATCHMERGE_DATE,'MMDATE')
	   CALL FDV$PUT(DSI2.COMPILATION_DATE,'COMPDT')
	   CALL FDV$PUT(DSI3.PROD_ID,'PRODID')
	   CALL FDV$PUT(DSI3.PROD_ED,'PRODED')
	   CALL FDV$PUT(DSI3.PROD_DATE,'PRODDT')
	   CALL FDV$PUT(DSI4.DIG_SYS,'DIGSYS')
	   CALL FDV$PUT(DSI4.COUNTRY,'COUNCO')
	   CALL FDV$PUT(DSI5.DATUM,'DATUM')
C
C Otherwise get current field values - i.e. defaults
C
	ELSE
C
	   DSI5.SECURITY = DSI5_DEF.SECURITY
	   DSI6.SECURITY = DSI6_DEF.SECURITY
	   FVAL(14:27)= DSI6.SECURITY
	   FVAL(1:13) = DSI5.SECURITY
	   FVAL(14:27)= DSI6.SECURITY
C
	   CALL FDV$PUT(FVAL,'SECHAN')
C
	   DSI1.LEVEL = DSI1_DEF.LEVEL
	   CALL FDV$PUT(DSI1.LEVEL,'LEVEL')
C
	   DSI1.MAN_REF = DSI1_DEF.MAN_REF
	   CALL FDV$PUT(DSI1.MAN_REF,'MANREF')
C
	   DSI1.MATCHMERGE_VERSION = DSI1_DEF.MATCHMERGE_VERSION
	   CALL FDV$PUT(DSI1.MATCHMERGE_VERSION,'MMVER')
C
	   DSI2.DATA_EDITION = DSI2_DEF.DATA_EDITION
	   CALL FDV$PUT(DSI2.DATA_EDITION,'DATAED')
C
	   DSI2.MAINTENANCE_DATE = DSI2_DEF.MAINTENANCE_DATE
	   CALL FDV$PUT(DSI2.MAINTENANCE_DATE,'MAINDT')
C
	   DSI2.MAINTENANCE_CODE = DSI2_DEF.MAINTENANCE_CODE
	   CALL FDV$PUT(DSI2.MAINTENANCE_CODE,'MAINDC')
C
	   DSI2.MATCHMERGE_DATE = DSI2_DEF.MATCHMERGE_DATE
	   CALL FDV$PUT(DSI2.MATCHMERGE_DATE,'MMDATE')
C
	   DSI2.COMPILATION_DATE = DSI2_DEF.COMPILATION_DATE
	   CALL FDV$PUT(DSI2.COMPILATION_DATE,'COMPDT')
C
	   DSI3.PROD_ID = DSI3_DEF.PROD_ID
	   CALL FDV$PUT(DSI3.PROD_ID,'PRODID')
C
	   DSI3.PROD_ED = DSI3_DEF.PROD_ED
	   CALL FDV$PUT(DSI3.PROD_ED,'PRODED')
C
	   DSI3.PROD_DATE = DSI3_DEF.PROD_DATE
	   CALL FDV$PUT(DSI3.PROD_DATE,'PRODDT')
C
	   DSI4.DIG_SYS = DSI4_DEF.DIG_SYS
	   CALL FDV$PUT(DSI4.DIG_SYS,'DIGSYS')
C
	   DSI4.COUNTRY = DSI4_DEF.COUNTRY
	   CALL FDV$PUT(DSI4.COUNTRY,'COUNCO')
C
	   DSI5.DATUM = DSI5_DEF.DATUM
	   CALL FDV$PUT(DSI5.DATUM,'DATUM')
	ENDIF
C
C Now get first field
C
	CALL FDV$GET(FVAL, TERM, 'SECHAN')
	CALL FDV$GCF(FID)
C
C Check if abort form terminator
C
	IF (TERM.EQ.ABORT_FORM) GOTO 140
C
C Now process fields in turn as user specifies
C
C Security handling description, no validation
C
10	IF (FID.EQ.'SECHAN') THEN
C
	   DSI5.SECURITY = FVAL(1:13)
	   DSI6.SECURITY = FVAL(14:27)
C
C Level, must be '1' or '2', validated here
C
	ELSEIF (FID.EQ.'LEVEL') THEN
C
	   IF ((FVAL.NE.'1').AND.(FVAL.NE.'2')) THEN
	      CALL FORM_MSG('Level must be 1 or 2',0)
	      CALL FDV$GET(FVAL,TERM,'LEVEL')
C
C Check if abort form terminator
C
	      IF (TERM.EQ.ABORT_FORM) GOTO 140
C
	      GOTO 10
	   ENDIF
C
	   DSI1.LEVEL = FVAL
C
C Manuscript reference number, validation handled by FMS
C
	ELSEIF (FID.EQ.'MANREF') THEN
C
	      DSI1.MAN_REF = FVAL
C
C Data edition number '00' - '99', validation by FMS
C
	ELSEIF (FID.EQ.'DATAED') THEN
C
	   DSI2.DATA_EDITION = FVAL
C
C Match/Merge version, 1 letter 'A'-'Z', validated by FMS
C
	ELSEIF (FID.EQ.'MMVER') THEN
C
	   DSI1.MATCHMERGE_VERSION = FVAL
C
C Maintenance date 'YYMM'
C
	ELSEIF (FID.EQ.'MAINDT') THEN
C
	   IF (.NOT.DATE_VALIDATE(FVAL(1:4))) GOTO 100
	   DSI2.MAINTENANCE_DATE = FVAL
C
C Match/Merge date 'YYMM'
C
	ELSEIF (FID.EQ.'MMDATE') THEN
C
	   IF (.NOT.DATE_VALIDATE(FVAL(1:4))) GOTO 100
	   DSI2.MATCHMERGE_DATE = FVAL
C
C Maintenance code 4 characters, no validation
C

	ELSEIF (FID.EQ.'MAINDC') THEN
C
	      DSI2.MAINTENANCE_CODE = FVAL
C
C Country code, 8 chars, no validation
C
	ELSEIF (FID.EQ.'COUNCO') THEN
C
	      DSI4.COUNTRY = FVAL
C
C Production spec identification, no validation
C
	ELSEIF (FID.EQ.'PRODID') THEN
C
	      DSI3.PROD_ID = FVAL
C
C Production spec edition number, '00' - '99' validation by FMS
C
	ELSEIF (FID.EQ.'PRODED') THEN
C
	   DSI3.PROD_ED = FVAL
C
C Production spec date 'YYMM'
C
	ELSEIF (FID.EQ.'PRODDT') THEN
C
	   IF (.NOT.DATE_VALIDATE(FVAL(1:4))) GOTO 100
	   DSI3.PROD_DATE = FVAL
C
C Datum 5 chars, no validation
C
	ELSEIF (FID.EQ.'DATUM') THEN
C
	      DSI5.DATUM = FVAL
C
C Dig. collection system, 10 chars, no validation
C
	ELSEIF (FID.EQ.'DIGSYS') THEN
C
	      DSI4.DIG_SYS = FVAL
C
C Original compilation date, 'YYMM'
C
	ELSEIF (FID.EQ.'COMPDT') THEN
C
	   IF (.NOT.DATE_VALIDATE(FVAL(1:4))) GOTO 100
	   DSI2.COMPILATION_DATE = FVAL
	ENDIF
C
C Act on terminator
C
	CALL FDV$PFT
C
C Check on status after terminator processed - i.e. is form complete
C
	CALL FDV$STAT(STATUS)
C
C Check if end of form and form complete
C
	IF ((STATUS.EQ.1).AND.(TERM.EQ.0)) GOTO 120
C
C Get new field identifier
C
	CALL FDV$GCF(FID)
C
C Get next field
C
100	CALL FDV$GET(FVAL,TERM,FID)
C
C Check if abort form terminator
C
	IF (TERM.EQ.ABORT_FORM) GOTO 140
C
	GOTO 10
C 
C Have reached end of form, so rewrite DSI
C
120	IF (.NOT.DSI_WRITE()) GOTO 130
	GOTO 140
C
C Errors
C
130	DSI_FORM = .FALSE.
C
C Exit
C
140	RETURN
	END
