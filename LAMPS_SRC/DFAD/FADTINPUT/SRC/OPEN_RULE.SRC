C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1988-06-13 09:59:42.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL FUNCTION OPEN_RULE()
C
***	MODULE OPEN_RULE
***	IDENT 09JU88
C
C Copyright Laser-Scan Laboratories Ltd, Cambridge, England.
C Author   : J.M. Billing			13 Jan 1988
C
C Modified : J.M. Billing			 9 June 1988
C To perform shared read with full error checking of rule file
C using FORTRAN file operations
C
C Function to open rule file used for validation
C Returns .TRUE. if successful
C
	IMPLICIT NONE
C
	INCLUDE 'LSL$FADTINPUT:FADTINPUT.CMN'
	INCLUDE 'LSL$FADTINPUT:FADTINPUTMSG.PAR'
C
	INTEGER	OK
C
C Assume success
C
	OPEN_RULE = .TRUE.
C
C Open old rule file
C
	OPEN (	UNIT = RULELUN,
     &		FILE = RULEFILE(1:RULELEN),
     &		ORGANIZATION = 'INDEXED',
     &		ACCESS = 'KEYED',
     &		RECORDTYPE = 'FIXED',
     &		FORM = 'UNFORMATTED',
     &		RECL = 14,
     &		KEY = (1:4:INTEGER),
     &		STATUS = 'OLD',
     &		IOSTAT = OK,
     &		SHARED,
     &		READONLY)
C
C Check for errors
C
	IF (OK.NE.0) THEN
C
C If not using logical names, then output message on form
C
	   IF (.NOT.HAD_LNM) THEN
	      CALL FORM_MSG('Unable to open rule file',5)
C
C Otherwise, output normal messages
C
	   ELSE
	      CALL LSL_PUTMSG(FADTIN__UNOPNRULE)
	      CALL ERRSNS(,,,,OK)
	      CALL LSL_ADDMSG(OK)
	   ENDIF
C
	   OPEN_RULE = .FALSE.
	ENDIF
C
C Exit
C
	RETURN
	END
