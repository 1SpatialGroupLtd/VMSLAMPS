C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1992-06-18 14:17:58.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL FUNCTION READ_DSI_DEF
C
***	MODULE READ_DSI_DEF
***	IDENT 18JN92
C
C	Copyright Laser-Scan Ltd., Cambridge, England.
C
C	Created					JMC	20-May-1992
C
C	DFAD FADTINPUT Utility - Read DSI entries from FADT defaults file
C
C Description
C
C	Reads a DSI entry from the FADT header defaults file.
C	Expects the secondary command number just read to be in 
C		SECMDN    in /CMDCOM/
C
C	Returns FALSE if something drastic goes wrong, TRUE otherwise
C
	IMPLICIT NONE
C
C Included Parameter Files
C
	INCLUDE 'LSL$FADTINPUT:FADTINPUTMSG.PAR'
C
C Common Blocks
C
CCC	INCLUDE 'LSL$FADTINPUT:FADTINPUT.CMN'
	INCLUDE 'LSL$FADTCMN:DSI.CMN'
	INCLUDE 'LSL$CMNLSL:CMDCOM.CMN'	! command decoding
C
C Local Variables
C
	CHARACTER*27	STRING		! scratch string
C
C Assume that everything goes well
C
	READ_DSI_DEF = .TRUE.
C
C Despatch according to command
C
C Any null strings read will be set to blank, any null numbers to -999.
C
	GOTO (510,520,530,540,550,560,570,580,590,600,
     &	      610,620,630,640,650) SECMDN
	CALL LSL_PUTMSG(FADTIN__UNKCMD,SECNST)	! unknown command
	GOTO 9999
C
C Security Handling Description
510	CALL COPY_STRING(STARST,STRING)
	IF (STARLE.EQ.0) THEN		
	   STRING = ' '
	   STRING = ' '
	ENDIF
	DSI5_DEF.SECURITY = STRING(1:13)
	DSI6_DEF.SECURITY = STRING(14:27)
	GOTO 9000
C
C Product Level
520	CALL COPY_STRING(STARST,DSI1_DEF.LEVEL)
	IF (STARLE.EQ.0) THEN
	   DSI1_DEF.LEVEL = ' '	
	ELSEIF ((DSI1_DEF.LEVEL.NE.'1').AND.(DSI1_DEF.LEVEL.NE.'2')) THEN
	   CALL LSL_PUTMSG(FADTIN__INVPROLEV,DSI1_DEF.LEVEL)
	   GOTO 9999
	ENDIF
	GOTO 9000
C
C Manuscript Reference Number
530	CALL COPY_STRING(STARST,DSI1_DEF.MAN_REF)
	IF (STARLE.EQ.0) DSI1_DEF.MAN_REF =  ' '
	GOTO 9000
C
C Data Edition Number 
540	CALL COPY_STRING(STARST,DSI2_DEF.DATA_EDITION)
	IF (STARLE.EQ.0) DSI2_DEF.DATA_EDITION =  ' '
	GOTO 9000
C
C Match/Merge Version
550	CALL COPY_STRING(STARST,DSI1_DEF.MATCHMERGE_VERSION)
	IF (STARLE.EQ.0) DSI1_DEF.MATCHMERGE_VERSION = ' '
	GOTO 9000
C
C Maintenance Date (YYMM)
560	CALL COPY_STRING(STARST,DSI2_DEF.MAINTENANCE_DATE)
	IF (STARLE.EQ.0) DSI2_DEF.MAINTENANCE_DATE =  ' '
	GOTO 9000
C
C Match/Merge Date (YYMM)
570	CALL COPY_STRING(STARST,DSI2_DEF.MATCHMERGE_DATE)
	IF (STARLE.EQ.0) DSI2_DEF.MATCHMERGE_DATE =  ' '
	GOTO 9000
C
C Maintenance Description Code
580	CALL COPY_STRING(STARST,DSI2_DEF.MAINTENANCE_CODE)
	IF (STARLE.EQ.0) DSI2_DEF.MAINTENANCE_CODE =  ' '
	GOTO 9000
C
C Country Producer Code
590	CALL COPY_STRING(STARST,DSI4_DEF.COUNTRY)
	IF (STARLE.EQ.0) DSI4_DEF.COUNTRY =  ' '
	GOTO 9000
C
C Product Spec. Identification
600	CALL COPY_STRING(STARST,DSI3_DEF.PROD_ID)
	IF (STARLE.EQ.0) DSI3_DEF.PROD_ID =  ' '
	GOTO 9000
C
C Product Spec. Edition 
610	CALL COPY_STRING(STARST,DSI3_DEF.PROD_ED)
	IF (STARLE.EQ.0) DSI3_DEF.PROD_ED =  ' '
	GOTO 9000
C
C Product Spec. Date 
620	CALL COPY_STRING(STARST,DSI3_DEF.PROD_DATE)
	IF (STARLE.EQ.0) DSI3_DEF.PROD_DATE =  ' '
	GOTO 9000
C
C Horizontal Datum
630	CALL COPY_STRING(STARST,DSI5_DEF.DATUM)
	IF (STARLE.EQ.0) DSI5_DEF.DATUM =  ' '
	GOTO 9000
C
C Digitising Collection System
640	CALL COPY_STRING(STARST,DSI4_DEF.DIG_SYS)
	IF (STARLE.EQ.0) DSI4_DEF.DIG_SYS =  ' '
	GOTO 9000
C
C Original comp. date 
650	CALL COPY_STRING(STARST,DSI2_DEF.COMPILATION_DATE)
	IF (STARLE.EQ.0) DSI2_DEF.COMPILATION_DATE =  ' '
	GOTO 9000
C
C Failure
C
9999	READ_DSI_DEF = .FALSE.
C
C Return
C
9000	RETURN
	END
