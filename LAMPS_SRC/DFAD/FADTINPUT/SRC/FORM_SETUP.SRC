C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1992-07-02 17:32:02.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	INTEGER FUNCTION FORM_SETUP()
C
***	MODULE FORM_SETUP
***	IDENT 02JL92
C
C Copyright Laser-Scan Laboratories Ltd, Cambridge, England.
C Author: J.M. Billing		13 Jan 1988
C
C Function to initialise FMS for use by FADTINPUT
C
	IMPLICIT NONE
C
	INCLUDE 'LSL$FADTINPUT:FADTINPUT.CMN'
	INCLUDE '($SSDEF)'
C
C functions
	INTEGER		FDV$INIT
	INTEGER		FDV$SPADA
	INTEGER		FDV$CLEAR
	INTEGER		FDV$DFKBD
C
C workspace
	INTEGER		FDV$K_KF_NXT		! next field funtction
	PARAMETER	(FDV$K_KF_NXT = 11)
	INTEGER		FDV$K_KF_PRV		! previous field funtction
	PARAMETER	(FDV$K_KF_PRV = 12)
	INTEGER		FDV$K_FK_F17		! F17 key
	PARAMETER	(FDV$K_FK_F17 = 63)
	INTEGER		FDV$K_FK_F12		! F12 key (backspace)
	PARAMETER	(FDV$K_FK_F12 = 56)
	INTEGER		TAB			! TAB key
	PARAMETER	(TAB = 1033)
	INTEGER		FDV$K_PF_4		! PF4 key
	PARAMETER	(FDV$K_PF_4 = 106)
	INTEGER*2	KEYTABLE(8) /FDV$K_KF_PRV,FDV$K_FK_F12,
     &				     FDV$K_KF_PRV,FDV$K_FK_F17,
     &				     FDV$K_KF_NXT,FDV$K_PF_4,
     &				     FDV$K_KF_NXT,TAB/
C
C Assume success
C
	FORM_SETUP = SS$_NORMAL
C
C Determine if we actually want to use any forms
C
	IF (.NOT.WANT_FORMS) GOTO 999
C
C Set up impure are variable
C
	IMPURE_SIZE = IS
C
C Initialise impure area
C
	FORM_SETUP = FDV$INIT(%DESCR(IMPURE), IMPURE_SIZE)
C
C Test for, and report, any errors
C
	IF (.NOT.FORM_SETUP) THEN
	   CALL LSL_PUTMSG(FORM_SETUP)
	   WANT_FORMS = .FALSE.
	   GOTO 999
	ENDIF
C
C Set numeric keypad mode.
C
	FORM_SETUP = FDV$SPADA(0)
C
C Test for, and report, any errors
C
	IF (.NOT.FORM_SETUP) THEN
	   CALL LSL_PUTMSG(FORM_SETUP)
	   WANT_FORMS = .FALSE.
	   GOTO 999
	ENDIF
C
C Clear the screen - this will ensure that any messages appearing during
C setup before a form appears will be displayed at the bottom of an
C otherwise blank screen
C
	FORM_SETUP = FDV$CLEAR()
C
C Test for, and report, any errors
C
	IF (.NOT.FORM_SETUP) THEN
	   CALL LSL_PUTMSG(FORM_SETUP)
	   WANT_FORMS = .FALSE.
	   GOTO 999
	ENDIF
C
C Define PF4 as next field and F17 as previous field
C
	FORM_SETUP = FDV$DFKBD(%DESCR(KEYTABLE),4)
C
C Test for, and report, any errors
C
	IF (.NOT.FORM_SETUP) THEN
	   CALL LSL_PUTMSG(FORM_SETUP)
	   WANT_FORMS = .FALSE.
	   GOTO 999
	ENDIF
C
C Exit
C
999	RETURN
	END
