C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1992-06-16 14:15:36.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	INTEGER FUNCTION FADTINPUT_INIT()
C
***	MODULE FADTINPUT_INIT
***	IDENT 09JN92
C
C Copyright Laser-Scan Laboratories Ltd, Cambridge, England.
C Author: J.M. Billing			22 Jan 1988
C
C Subroutine to initialise the variables required by FADTINPUT.
C
	IMPLICIT NONE
C
	INCLUDE 'LSL$FADTINPUT:FADTINPUT.CMN'
	INCLUDE 'LSL$FADTCMN:HEADER.CMN'
	INCLUDE 'LSL$FADTCMN:ACC.CMN'
	INCLUDE 'LSL$FADTCMN:DSI.CMN'
C
C w/s variables
	INTEGER 	I,J
	CHARACTER*100	ACTION_STR ! translation of LSL$FADTINPUT_ACTION
	INTEGER		ACTION	   ! action indicate by logical name
C
C functions
	INTEGER		SIGCHS
	LOGICAL		READ_LOGICAL_NAMES
	LOGICAL		TRNALL
C
C Initialise file open flags
C
	FADTOPN = .FALSE.
	RULEOPN = .FALSE.
	LISTOPN = .FALSE.
C
C Initialise file required flags
C
	WANT_FADT = .FALSE.
	WANT_RULE = .FALSE.
	WANT_LIST = .FALSE.
	SPOOL = .TRUE.
C
C Set default file specifications
C
	FADTFILE = 'LSL$FADT:FADT.FADT;0'
	FADTLEN  = SIGCHS(FADTFILE)
C
	LISTFILE = 'FADT.LIS'
	LISTLEN  = SIGCHS(LISTFILE)
C
	RULEFILE = 'LSL$DFAD_RULE:VALTAB.RULE'
	RULELEN  = SIGCHS(RULEFILE)
C
	IF (.NOT.TRNALL('LSL$FADTINPUT_DEFAULTS',DEFFIL))
     &		DEFFIL = 'LSL$LOOKUP:FADT_DEFAULTS.DAT;0'
	DEFLEN  = SIGCHS(DEFFIL)
C
C Set file LUNs
C
	FADTLUN = 1
	LISTLUN = 2
	RULELUN = 3
	FADTLUN_COPY = 4
	DEFLUN = 7
C
C Set logical name action flag to default of not using logical names
C
	HAD_LNM = .FALSE.
C
C Set form flag to default indicating using FMS forms
C
	WANT_FORMS = .TRUE.
C
C Call routine to determine if using logical names
C
	FADTINPUT_INIT = READ_LOGICAL_NAMES()
	IF (.NOT.FADTINPUT_INIT) GOTO 900
C
C Set up initial level to show none specified yet by user or in DSI
C
	LEVEL = -1
C
C Initialise keys of FADT DLMS header records
C
	HDRSW.KEY = HDRSWKEY
	HDRNE.KEY = HDRNEKEY
	HDRMO.KEY = HDRMOKEY
	HDR1.KEY  = HDRKEY1
	HDR2.KEY  = HDRKEY2
C
C Initialise keys of DSI records
C
	DSI1.KEY = DSIKEY1
	DSI2.KEY = DSIKEY2
	DSI3.KEY = DSIKEY3
	DSI4.KEY = DSIKEY4
	DSI5.KEY = DSIKEY5
	DSI6.KEY = DSIKEY6
C
C Initialise key of ACC product record
C
	ACC.KEY = ACCKEY
C
C Initialise keys of ACC region records
C
	DO 20 I = 1,9
	   ACCREG(I).KEY = ACCREG_BASE + I * ACCREG_INC
C
C and keys of ACC region outline point (lat/long) records
C
	   DO 10 J = 1,14
	      ACCREGLL(I,J).KEY = ACCREG(I).KEY + J * ACCREG_PT
10	   CONTINUE
20	CONTINUE
C
C exit
C
900	RETURN
	END
