C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1988-02-04 18:13:10.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL FUNCTION LATLONG_VALIDATE (LL)
C
***	MODULE LATLONG_VALIDATE
***	IDENT 26JA88
C
C Copyright Laser-Scan Laboratories Ltd, Cambridge, England.
C Author: J.M. Billing			26 Jan 1988
C
C Function to validate latitude or longitude values passed as a
C string. Format of string is
C	Latitude	 DDMMSSSH	H = N,S		8 chars
C	Longitude	DDDMMSSSH	H = E,W		9 chars
C Last S is tenths of seconds, H specifies hemisphere
C Will recognise whether latitude or longitude by length of string.
C Returns .TRUE. if valid lat/long value
C Reports ant validation failure on last line of screen using FDV
C
	IMPLICIT NONE
C
C common blocks
	INCLUDE 'LSL$CMNLSL:EXPC.CMN'
C
C Arguments
	CHARACTER*(*)	LL	! lat/long string 
				! 8 char for lat
				! 9 char for long
C
C w/s variables
	INTEGER		GEO	! lat/long in tenths of seconds
	INTEGER		SEC	! lat/long seconds part
	INTEGER		DEG	! lat/long degrees part
	INTEGER		MIN	! lat/long minutes part
	CHARACTER*20	ID	! describes if lat or long
	LOGICAL		OK	! .TRUE. if valid so far
C
C functions
	LOGICAL		RDLONG	! read integer from current buffer
C
C Assume valid
C
	OK = .TRUE.
C
C Set up ID string to show if lat or long
C
	ID = 'latitude'
	IF (LEN(LL).EQ.9) ID = 'longitude'
C
C Convert to integer, numeric part of lat/long string
C
	CALL SETAUX(%REF(LL),LEN(LL))
C
	IF (RDLONG(GEO)) THEN
	   CALL EXPAND('Illegal integer in that %S',ID)
	   OK = .FALSE.
	   GOTO 20
	ENDIF
C
	DEG = GEO/100000
	MIN = MOD(GEO,100000)/1000
	SEC = MOD(GEO,1000)/10
C
C Now do validation
C
	IF (LEN(LL).EQ.9) THEN
	   CALL EXPAND ('This %S9',ID) ! long
	ELSE
	   CALL EXPAND ('This %S8',ID) ! lat
	ENDIF
C
C Check GEO Lat.LE.9000000, Long.LE.18000000
C
	IF (LEN(LL).EQ.8) THEN
	   IF (GEO.GT.9000000) THEN
	      CALL APPEND(' must be less than or equal to 90 deg')
	      OK = .FALSE.
	      GOTO 10
	   ENDIF
	ELSE
	   IF (GEO.GT.18000000) THEN
	      CALL APPEND(' must be less than or equal to 180 deg')
	      OK = .FALSE.
	      GOTO 10
	   ENDIF
	ENDIF
C
C Add 's to end of lat/long in message
C
	CALL APPEND('''s')
C
C Degrees part, depends on whether lat or long
C
	IF (LEN(LL).EQ.9) THEN
C
C longitude
C
	   IF (DEG.GT.180) THEN
	      OK = .FALSE.
	      CALL APPEND(' degs')
	   ENDIF
C
C latitude
C
	ELSE
	   IF (DEG.GT.90) THEN
	      OK = .FALSE.
	      CALL APPEND(' degs')
	   ENDIF
	ENDIF
C
C Minutes part
C
	IF (MIN.GT.59) THEN
	     IF (.NOT.OK) CALL APPEND(',')
	     OK = .FALSE.
	     CALL APPEND(' mins')
	ENDIF
C
C Seconds part
C
	IF (SEC.GT.59) THEN
	     IF (.NOT.OK) CALL APPEND(',')
	     OK = .FALSE.
	     CALL APPEND(' secs')
	ENDIF
C
	IF (.NOT.OK) CALL APPEND(' are too large')
C
C Check hemisphere
C N,S for latitude
C E,W for longitude
C
10	IF (LEN(LL).EQ.9) THEN
C
C long
C
	   IF ((LL(9:9).NE.'E').AND.(LL(9:9).NE.'W')) THEN
	      IF (.NOT.OK) CALL APPEND(' and')
	      CALL APPEND(' hemisphere must be E/W')
	      OK = .FALSE.
	   ENDIF
C
C lat
C
	ELSE
	   IF((LL(8:8).NE.'N').AND.(LL(8:8).NE.'S')) THEN
	      IF (.NOT.OK) CALL APPEND(' and')
	      CALL APPEND(' hemisphere must be N/S')
	      OK = .FALSE.
	   ENDIF
	ENDIF
C
C Finished validation, so check if need to output message and exit
C
20	IF (.NOT.OK) CALL FORM_MSG(EXPDSC,0)
	LATLONG_VALIDATE = OK
	RETURN
	END
