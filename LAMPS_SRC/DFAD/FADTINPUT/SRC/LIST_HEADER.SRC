C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1991-08-29 17:57:14.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL FUNCTION LIST_HEADER()
C
***	MODULE LIST_HEADER
***	IDENT 29AU91
C
C Copyright Laser-Scan Laboratories Ltd, Cambridge, England.
C Author: J.M. Billing			25 Jan 1988
C
C Modified: J.M. Billing		14 June 1988
C To allow 8 characters in the square identifier
C
C Function to list header of FADT file to current output list file.
C Returns .TRUE. if completes successfully
C
C
	IMPLICIT NONE
C
	INCLUDE 'LSL$FADTINPUT:FADTINPUT.CMN'
	INCLUDE 'LSL$FADTCMN:HEADER.CMN'
C
C w/s variables
	INTEGER	OK
	INTEGER	IERR
C
C functions
	INTEGER	FLWSTR
	INTEGER	FLWSEL
	LOGICAL	HEADER_READ
C
C Assume success
C
	LIST_HEADER = .TRUE.
C
C Select list output file
C
	IERR = 0
	OK = FLWSEL(LISTLUN)
	IF (.NOT.OK) GOTO 10
C
C Output title
C
	CALL EXPAND('DLMS FADT Header Page for File %S',
     &					FADTFILE(:FADTLEN))
	OK = FLWSTR(, IERR)
	IF (.NOT.OK) GOTO 10
C
	CALL EXPAND
	OK = FLWSTR(, IERR)
	IF (.NOT.OK) GOTO 10
C
C Now read header, giving message if not there
C
	IF (.NOT.HEADER_READ()) THEN
	   CALL EXPAND('No header record found.')
	   OK = FLWSTR(, IERR)
	   IF (.NOT.OK) GOTO 10
	   GOTO 20
	ENDIF
C
C Now expand and output each line
C
	CALL EXPAND('Square identifier %S',
     &			HDR2.SQUARE_ID//HDR1.SQUARE_ID_LEVEL)
	OK = FLWSTR(, IERR)
	IF (.NOT.OK) GOTO 10
C
	CALL EXPAND
	OK = FLWSTR(, IERR)
	IF (.NOT.OK) GOTO 10

C
	CALL EXPAND('Analysis Date     %S2-%S3-%S2',
     &		HDR2.ANALYSIS_DATE(1:2),
     &		HDR2.ANALYSIS_DATE(3:5),
     &		HDR2.ANALYSIS_DATE(6:7))
	OK = FLWSTR(, IERR)
	IF (.NOT.OK) GOTO 10
C
	CALL EXPAND
	OK = FLWSTR(, IERR)
	IF (.NOT.OK) GOTO 10
C
	CALL EXPAND('                  Latitude  Longitude')
	OK = FLWSTR(, IERR)
	IF (.NOT.OK) GOTO 10
C
	CALL EXPAND('                          H          H')
	OK = FLWSTR(, IERR)
	IF (.NOT.OK) GOTO 10
C
	CALL EXPAND('Manuscript Origin %S6.%S2 %S7.%S2',
     &		HDRMO.LAT(1:6),
     &		HDRMO.LAT(7:8),
     &		HDRMO.LONG(1:7),
     &		HDRMO.LONG(8:9))
	OK = FLWSTR(, IERR)
	IF (.NOT.OK) GOTO 10
C
	CALL EXPAND('SW corner         %S6.%S2 %S7.%S2',
     &		HDRSW.LAT(1:6),
     &		HDRSW.LAT(7:8),
     &		HDRSW.LONG(1:7),
     &		HDRSW.LONG(8:9))
	OK = FLWSTR(, IERR)
	IF (.NOT.OK) GOTO 10
C
	CALL EXPAND('NE corner         %S6.%S2 %S7.%S2',
     &		HDRNE.LAT(1:6),
     &		HDRNE.LAT(7:8),
     &		HDRNE.LONG(1:7),
     &		HDRNE.LONG(8:9))
	OK = FLWSTR(, IERR)
	IF (.NOT.OK) GOTO 10
C
	CALL EXPAND
	OK = FLWSTR(, IERR)
	IF (.NOT.OK) GOTO 10
C
	CALL EXPAND('Digitising Scale  %N',HDR1.DIG_SCALE)
	OK = FLWSTR(, IERR)
	IF (.NOT.OK) GOTO 10
C
	CALL EXPAND
	OK = FLWSTR(, IERR)
	IF (.NOT.OK) GOTO 10
C
	IF (HDR1.WAC_NUM.GE.0) THEN
	   CALL EXPAND('WAC Number        %^W%N',HDR1.WAC_NUM)
	ELSE
	   CALL EXPAND('WAC Number        NA')
	ENDIF
	OK = FLWSTR(, IERR)
	IF (.NOT.OK) GOTO 10
C
	IF (HDR1.WAC_CELL.GE.0) THEN
	   CALL EXPAND('WAC cell          %^W%N',HDR1.WAC_CELL)
	ELSE
	   CALL EXPAND('WAC cell          NA')
	ENDIF
	OK = FLWSTR(, IERR)
	IF (.NOT.OK) GOTO 10
C
	IF (HDR1.WAG_CELL.GE.0) THEN
	   CALL EXPAND('WAG cell          %^W%N',HDR1.WAG_CELL)
	ELSE
	   CALL EXPAND('WAG cell          NA')
	ENDIF
	OK = FLWSTR(, IERR)
	IF (.NOT.OK) GOTO 10
C
	CALL EXPAND
	OK = FLWSTR(, IERR)
	IF (.NOT.OK) GOTO 10
C
	CALL EXPAND('Security          %^W%N',HDR1.SEC)
	OK = FLWSTR(, IERR)
	IF (.NOT.OK) GOTO 10
C
	CALL EXPAND('Security desc     %S1', HDR1.SEC_CODE(1:1))
	OK = FLWSTR(, IERR)
	IF (.NOT.OK) GOTO 10
C
	CALL EXPAND('Releasability     %^W%N',HDR1.REL)
	OK = FLWSTR(, IERR)
	IF (.NOT.OK) GOTO 10
C
	CALL EXPAND
	OK = FLWSTR(, IERR)
	IF (.NOT.OK) GOTO 10
C
	CALL EXPAND('Validation Rules  %S2-%S2',
     &			HDR2.VAL_RULES(1:2),HDR2.VAL_RULES(3:4))
	OK = FLWSTR(, IERR)
	IF (.NOT.OK) GOTO 10
C
	GOTO 20
C
C errors
C
10	CALL LSL_PUTMSG(OK)
	IF (IERR.NE.0) CALL LSL_ADDMSG(IERR)
C
C exit
C
20	RETURN
	END
