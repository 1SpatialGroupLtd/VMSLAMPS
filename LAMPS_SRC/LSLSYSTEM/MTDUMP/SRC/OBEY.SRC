C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1991-11-27 13:26:12.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	INTEGER FUNCTION OBEY
C
***	MODULE	OBEY
***	IDENT  08JA87
C
C Copyright Laser Scan Laboratories Limited, Cambridge, England.
C
C Decode MTDUMP command line
C
	IMPLICIT NONE
C
	INCLUDE	'($SSDEF)'
C
	INCLUDE	'LSL$CMNLSL:LSLLIBMSG.PAR'
	INCLUDE	'HERE:MTDUMPMSG.PAR'
	INCLUDE	'LSL$CMNLSL:CLD.CMN'
	INCLUDE	'HERE:MTD.CMN'
C
	EXTERNAL	MTDUMP_CLD
C
C functions called
	INTEGER		DCL_STARTUP
	INTEGER		DCL_QUAL
	INTEGER		DCL_STR
	INTEGER		DCL_INT
	INTEGER		DCL_REAL
	INTEGER		DCL_FILE
	INTEGER		TEST_FOREIGN
	INTEGER		TEST_TERM
C
C local workspace
	LOGICAL	  	ABSENT			! true if absent
	LOGICAL	  	LOCAL			! true if local
	LOGICAL	  	LOCNEG			! true if locally negated
	LOGICAL		QUAL			! qualifier present
	INTEGER		IERR			! error return
	INTEGER		I			! loop counter
C
C Get and parse the command line using LSLLIB routines
	OBEY = DCL_STARTUP('MTDUMP'	! command verb
     &			   ,.FALSE.	! don't split parameter lists
     &			   ,MTDUMP_CLD	! CLD module name
     &			   ,.TRUE.)	! .T. - local error reporting
	IF (.NOT.OBEY) GOTO 999
C
C Get the name of the tape
	OBEY = DCL_FILE('TAPE',' ',ABSENT,.TRUE.,.TRUE.)
	IF (.NOT.OBEY) GOTO 999
	TAPELEN = FIL_LEN(1)
	TAPE(:TAPELEN) = FILARY(1)(:TAPELEN)
C
C /OUTPUT
	OBEY = DCL_QUAL('OUTPUT',QUAL,LOCAL,LOCNEG,.TRUE.)
	IF (.NOT.OBEY) GOTO 999
	IF (QUAL) THEN
	   OBEY = DCL_FILE(
     &		'OUTPUT','SYS$DISK:MTDUMP.LIS',ABSENT,.TRUE.,.TRUE.)
	   IF (.NOT.OBEY) GOTO 999
	   IF (ABSENT) THEN
	      OUTLEN = 16
	      OUTFIL(:OUTLEN) = 'SYS$DISK:MTDUMP.LIS'
	   ELSE
	      OUTLEN = FIL_LEN(1)
	      OUTFIL(:OUTLEN) = FILARY(1)(:OUTLEN)
	   ENDIF
	ELSE
	   OUTLEN = 11
	   OUTFIL(:OUTLEN) = 'SYS$OUTPUT:'
	ENDIF
C
C /BLOCKS
	START = 1
	END = 0
	OBEY = DCL_QUAL('BLOCKS',HADBL,LOCAL,LOCNEG,.TRUE.)
	IF (.NOT.OBEY) GOTO 999
	IF (HADBL) THEN
	   OBEY = DCL_QUAL('BLOCKS.START',QUAL,LOCAL,LOCNEG,.TRUE.)
	   IF (.NOT.OBEY) GOTO 999
	   IF (QUAL) THEN
	      OBEY = DCL_INT('BLOCKS.START',.TRUE.)
	      IF (.NOT.OBEY) GOTO 999
	      START = IARRAY(1)
	      IF (START.LE.0) GOTO 990
	   ENDIF
	   OBEY = DCL_QUAL('BLOCKS.END',QUAL,LOCAL,LOCNEG,.TRUE.)
	   IF (.NOT.OBEY) GOTO 999
	   IF (QUAL) THEN
	      OBEY = DCL_INT('BLOCKS.END',.TRUE.)
	      IF (.NOT.OBEY) GOTO 999
	      END = IARRAY(1)
	      IF (END.LT.START) GOTO 990
	   ENDIF
	   OBEY = DCL_QUAL('BLOCKS.COUNT',QUAL,LOCAL,LOCNEG,.TRUE.)
	   IF (.NOT.OBEY) GOTO 999
	   IF (QUAL) THEN
	      OBEY = DCL_INT('BLOCKS.COUNT',.TRUE.)
	      IF (.NOT.OBEY) GOTO 999
	      END = START+IARRAY(1)-1
	      IF (END.LT.START) GOTO 990
	   ENDIF
	ENDIF
C
C /DECIMAL
	OBEY = DCL_QUAL('DECIMAL',HADDEC,LOCAL,LOCNEG,.TRUE.)
	IF (.NOT.OBEY) GOTO 999
C
C /HEXADECIMAL
	OBEY = DCL_QUAL('HEXADECIMAL',HADHEX,LOCAL,LOCNEG,.TRUE.)
	IF (.NOT.OBEY) GOTO 999
C
C /OCTAL
	OBEY = DCL_QUAL('OCTAL',HADOCT,LOCAL,LOCNEG,.TRUE.)
	IF (.NOT.OBEY) GOTO 999
C
C /LONGWORD
	OBEY = DCL_QUAL('LONGWORD',HADLON,LOCAL,LOCNEG,.TRUE.)
	IF (.NOT.OBEY) GOTO 999
C
C /WORD
	OBEY = DCL_QUAL('WORD',HADWO,LOCAL,LOCNEG,.TRUE.)
	IF (.NOT.OBEY) GOTO 999
C
C /BYTE
	OBEY = DCL_QUAL('BYTE',HADBYT,LOCAL,LOCNEG,.TRUE.)
	IF (.NOT.OBEY) GOTO 999
C
C /ICL
	OBEY = DCL_QUAL('ICL',HADICL,LOCAL,LOCNEG,.TRUE.)
	IF (.NOT.OBEY) GOTO 999
C
C /MPS
	OBEY = DCL_QUAL('MPS',HADMPS,LOCAL,LOCNEG,.TRUE.)
	IF (.NOT.OBEY) GOTO 999
C
C /SWAP
	OBEY = DCL_QUAL('SWAP',HADSW,LOCAL,LOCNEG,.TRUE.)
	IF (.NOT.OBEY) GOTO 999
C
C /CHARACTER
	HADCH = .FALSE.
	OBEY = DCL_QUAL('CHARACTER',QUAL,LOCAL,LOCNEG,.TRUE.)
	IF (.NOT.OBEY) GOTO 999
	IF (QUAL) THEN
	   HADCH = .TRUE.
	   HADEB = .FALSE.
	ENDIF
C
C /ASCII
	OBEY = DCL_QUAL('ASCII',QUAL,LOCAL,LOCNEG,.TRUE.)
	IF (.NOT.OBEY) GOTO 999
	IF (QUAL) THEN
	   HADCH = .TRUE.
	   HADEB = .FALSE.
	ENDIF
C
C /EBCDIC
	OBEY = DCL_QUAL('EBCDIC',QUAL,LOCAL,LOCNEG,.TRUE.)
	IF (.NOT.OBEY) GOTO 999
	IF (QUAL) THEN
	   HADCH = .TRUE.
	   HADEB = .TRUE.
	ENDIF
C
C /HEADER
	OBEY = DCL_QUAL('HEADER',HEADER,LOCAL,LOCNEG,.TRUE.)
	IF (.NOT.OBEY) GOTO 999
C
C /PRINTER
	OBEY = DCL_QUAL('PRINTER',PRINT,LOCAL,LOCNEG,.TRUE.)
	IF (.NOT.OBEY) GOTO 999
	IF (PRINT) THEN
	   OUTLEN = 16
	   OUTFIL(:OUTLEN) = 'SYS$DISK:MTDUMP.LIS'
	ENDIF
C
C /LINES
	MAXLIN = 0
	OBEY = DCL_QUAL('LINES',QUAL,LOCAL,LOCNEG,.TRUE.)
	IF (.NOT.OBEY) GOTO 999
	IF (QUAL) THEN
	   OBEY = DCL_INT('LINES',.TRUE.)
	   IF (.NOT.OBEY) GOTO 999
	   MAXLIN = IARRAY(1)
	   IF (MAXLIN.LE.0) GOTO 990
	ENDIF
C
C /WIDTH
	MAXWID = 0
	OBEY = DCL_QUAL('WIDTH',QUAL,LOCAL,LOCNEG,.TRUE.)
	IF (.NOT.OBEY) GOTO 999
	IF (QUAL) THEN
	   OBEY = DCL_INT('WIDTH',.TRUE.)
	   IF (.NOT.OBEY) GOTO 999
	   MAXWID = IARRAY(1)
	   IF (MAXWID.LE.0.OR.MAXWID.GT.80) GOTO 990
	ENDIF
C
C /SUMMARY
	OBEY = DCL_QUAL('SUMMARY',HADSUM,LOCAL,LOCNEG,.TRUE.)
	IF (.NOT.OBEY) GOTO 999
C
C check that tape device is mounted foreign
	OBEY = TEST_FOREIGN(TAPE(:TAPELEN),QUAL,IERR)
	IF (.NOT.OBEY) THEN
	   CALL LSL_PUTMSG(MTDUMP__NOMAGTAPE,TAPE(:TAPELEN))
	   IF (OBEY.EQ.LSL__SYSERR) THEN
	      CALL LSL_ADDMSG(IERR)
	   ELSE
	      CALL LSL_ADDMSG(OBEY)
	   ENDIF
	   GOTO 999
	ENDIF
	IF (.NOT.QUAL) THEN
	   OBEY = MTDUMP__NOTFOR
	   CALL LSL_PUTMSG(OBEY)
	   GOTO 999
	ENDIF
C
C ensure not dumping an infinite number of blocks to a disk file
	IF (END.LE.0) THEN	! dumping infinite number of blocks
	   OBEY = TEST_TERM(OUTFIL(:OUTLEN),QUAL,IERR)
	   IF (.NOT.OBEY) THEN
	      CALL LSL_PUTMSG(MTDUMP__NOOUTPUT,OUTFIL(:OUTLEN))
	      IF (OBEY.EQ.LSL__SYSERR) THEN
	         CALL LSL_ADDMSG(IERR)
	      ELSE
	         CALL LSL_ADDMSG(OBEY)
	      ENDIF
	      GOTO 999
	   ENDIF
	   IF (.NOT.QUAL) THEN
	      OBEY = MTDUMP__BLOCKS
	      CALL LSL_PUTMSG(OBEY)
	      GOTO 999
	   ENDIF
	ENDIF
	GOTO 999
C
C bad qualifier value
990	OBEY = MTDUMP__BADVAL
	CALL LSL_PUTMSG(OBEY)
C
999	RETURN
C
	END
