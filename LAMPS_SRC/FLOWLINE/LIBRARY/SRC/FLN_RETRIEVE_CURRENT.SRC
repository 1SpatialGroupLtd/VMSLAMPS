	INTEGER*4 FUNCTION FLN_RETRIEVE_CURRENT
     &  (OPERATOR_ID,CURRENT_PROJECT,PROJECT_STATUS,CURRENT_JOB,
     &	JOB_NAME,JOB_STATUS,CURRENT_ELEMENT)
C
***	MODULE	FLN_RETRIEVE_CURRENT
***	IDENT	07JL88
C
C Copyright Laser-Scan Laboratories Ltd., Cambridge, England
C
C Author M.W.S. Reid
C
C 	Created					MWSR    18-Apr-1988
C
C Finds for the given operator , the current project and job thet he is
C working on. - and their statuses
C
C	Modified				JMB	7-July-1988
C
C To set count of number of projects and jobs used for determining
C whether current project or job exists to 0 before starting to count
C them. (i.e. NUM_PROJECT and NUM_JOB)
C Also to set count of number of occurrences of operator id (NUM_OP)
C to 0 before starting to count to determine if it exists
C
C
	IMPLICIT NONE
C
C Parameters
	INCLUDE	'LSL$CMNFLOWLINE:FLOW.PAR'
	INCLUDE	'LSL$CMNFLOWLINE:FLOWLINEMSG.PAR'
	INTEGER*4	SS$_NORMAL
	EXTERNAL	SS$_NORMAL
C
C Arguments
	CHARACTER*(*)	OPERATOR_ID	! IN
	CHARACTER*(*)	CURRENT_PROJECT	! OUT
	CHARACTER*(*)	PROJECT_STATUS  ! OUT
	INTEGER*4	CURRENT_JOB	! OUT
	CHARACTER*(*)	JOB_STATUS  	! OUT
	CHARACTER*(*)	JOB_NAME        ! OUT
	INTEGER*4	JOB_ID		! OUT
	CHARACTER*(*)	CURRENT_ELEMENT ! OUT
C
C Local Variables
	INTEGER*4	NUM_OP
	INTEGER*4	NUM_JOB
	INTEGER*4	NUM_PROJECT
	INTEGER*4	NUM_ERR
C
&RDB&   DATABASE FILENAME 'LSL$FLN_DATABASE:FLOWLINE'
C
C assume success
	FLN_RETRIEVE_CURRENT = %LOC(SS$_NORMAL)
C
C Initialise count of number of errors to 0
C
	NUM_ERR = 0
C
C Set counts of numbers of jobs and projects to zero
c Used for determining if current job/project actually exist
C
	NUM_JOB = 0
	NUM_PROJECT = 0
C
C Set count of number of operators with specified identifier to zero
C This is used to determine if the operator specified actually exists
C
	NUM_OP = 0
C
20	CONTINUE
&RDB&   START_TRANSACTION READ_ONLY RESERVING OPERATOR, JOB 
&RDB&   ,PROJECT FOR
&RDB&   SHARED READ WAIT
&RDB&	   ON ERROR
	      NUM_ERR = NUM_ERR+1
	      IF (NUM_ERR .GT. 5) THEN
	         FLN_RETRIEVE_CURRENT = RDB$STATUS
	         GOTO 999
	      ENDIF
C
C only possible error is deadlock 
	      CALL LIB$WAIT(FLN_PSE)
	      GOTO 20
&RDB&      END_ERROR
&RDB&   FOR O IN OPERATOR WITH O.OPERATOR_ID  = OPERATOR_ID
&RDB&	   ON ERROR
	      NUM_ERR = NUM_ERR+1
	      IF (NUM_ERR .GT. 5) THEN
	         FLN_RETRIEVE_CURRENT = RDB$STATUS
&RDB&	         ROLLBACK
	         GOTO 999
	      ENDIF
&RDB&	      ROLLBACK
C
C only possible error is deadlock 
	      CALL LIB$WAIT(FLN_PSE)
	      GOTO 20
&RDB&      END_ERROR
	   NUM_OP = NUM_OP+1
&RDB&      GET 
&RDB&	      ON ERROR
	         NUM_ERR = NUM_ERR+1
	         IF (NUM_ERR .GT. 5) THEN
	            FLN_RETRIEVE_CURRENT= RDB$STATUS
&RDB&	            ROLLBACK
	            GOTO 999
	         ENDIF
&RDB&	         ROLLBACK
C
C only possible error is deadlock 
	         CALL LIB$WAIT(FLN_PSE)
	         GOTO 20
&RDB&	      END_ERROR
&RDB&         CURRENT_PROJECT = O.CURRENT_PROJECT;
&RDB&         CURRENT_JOB = O.CURRENT_JOB;
&RDB&         CURRENT_ELEMENT = O.CURRENT_ELEMENT;
&RDB&      END_GET 
&RDB&   END_FOR
	IF (NUM_OP.EQ. 0) THEN
	   FLN_RETRIEVE_CURRENT = FLN__NOSUCHOP
	   GOTO 900
	ENDIF
C
C
&RDB&   FOR P IN PROJECT WITH P.PROJECT_ID = CURRENT_PROJECT
&RDB&	   ON ERROR
	      NUM_ERR = NUM_ERR+1
	      IF (NUM_ERR .GT. 5) THEN
	         FLN_RETRIEVE_CURRENT= RDB$STATUS
&RDB&	         ROLLBACK
	         GOTO 999
	      ENDIF
&RDB&	      ROLLBACK
C
C only possible error is deadlock 
	      CALL LIB$WAIT(FLN_PSE)
	      GOTO 20
&RDB&      END_ERROR
	   NUM_PROJECT = NUM_PROJECT +1
&RDB&      GET 
&RDB&	      ON ERROR
&RDB&	         ROLLBACK
C
C only possible error is deadlock 
	         CALL LIB$WAIT(FLN_PSE)
	         GOTO 20
&RDB&	      END_ERROR
&RDB&         PROJECT_STATUS = P.PROJECT_STATUS;
&RDB&      END_GET
&RDB&   END_FOR   
C
	IF (NUM_PROJECT .EQ. 0) THEN
	   FLN_RETRIEVE_CURRENT = FLN__NOSUCHPROJ
	   GOTO 900
	ENDIF
C
C need job to be in current project
&RDB&   FOR J IN JOB WITH J.JOB_ID  = CURRENT_JOB
&RDB&      AND J.PROJECT_ID  = CURRENT_PROJECT
&RDB&	   ON ERROR
	      NUM_ERR = NUM_ERR+1
	      IF (NUM_ERR .GT. 5) THEN
	         FLN_RETRIEVE_CURRENT= RDB$STATUS
&RDB&	         ROLLBACK
	         GOTO 999
	      ENDIF
&RDB&	      ROLLBACK
C
C only possible error is deadlock 
	      CALL LIB$WAIT(FLN_PSE)
	      GOTO 20
&RDB&      END_ERROR
	   NUM_JOB = NUM_JOB +1
&RDB&      GET 
&RDB&	      ON ERROR
	         NUM_ERR = NUM_ERR+1
	         IF (NUM_ERR .GT. 5) THEN
	            FLN_RETRIEVE_CURRENT= RDB$STATUS
&RDB&	            ROLLBACK
	            GOTO 999
	         ENDIF
&RDB&	         ROLLBACK
C
C only possible error is deadlock 
	         CALL LIB$WAIT(FLN_PSE)
	         GOTO 20
&RDB&         END_ERROR
&RDB&         JOB_STATUS = J.JOB_STATUS;
&RDB&         JOB_NAME  = J.JOB_NAME;
&RDB&      END_GET
&RDB&   END_FOR   
C
	IF (NUM_JOB .EQ. 0) THEN
	   FLN_RETRIEVE_CURRENT = FLN__NOSUCHJOB
	   GOTO 900
	ENDIF
C 
900	CONTINUE
&RDB&   COMMIT
C
999	RETURN
	END
