C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1988-09-21 15:07:36.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	INTEGER*4 FUNCTION FLN_AUTHORISE_OPERATOR
     &  				(NUM_REC,
     &  				 AUTH_REC,
     &					 ERROR_INDEX)
C
***	MODULE	FLN_AUTHORISE_OPERATOR
***	IDENT	21SE88
C
C Copyright Laser-Scan Laboratories Ltd., Cambridge, England
C
C Author M.W.S. Reid
C
C 	Created					MWSR    06-May-1988
C
C checks and loads 
C
	IMPLICIT NONE
C
C Parameters
	INCLUDE	'LSL$CMNFLOWLINE:FLOW.PAR'
	INCLUDE	'LSL$CMNFLOWLINE:FLOW.STR'
	INCLUDE	'LSL$CMNFLOWLINE:FLOWLINEMSG.PAR'
	INTEGER*4	SS$_NORMAL
	EXTERNAL	SS$_NORMAL
C
C Arguments
	INTEGER*4  NUM_REC			! IN - number of recs
	RECORD/FLN_AUTH/AUTH_REC(FLN_MAX_AUTH)	! IN - authorise recs
	INTEGER*4  ERROR_INDEX			! OUT - index of record
C						        in error
C
C Common Blocks
C
C Functions
	INTEGER*4	FLN_CHECK_OPERATOR
	INTEGER*4	FLN_CHECK_PROJECT
	INTEGER*4	FLN_CHECK_FLOWLINE
	INTEGER*4	FLN_CHECK_PROCEDURE
	INTEGER*4	FLN_CHECK_JOB
	INTEGER*4	FLN_CHECK_ELEMENT
	INTEGER*4	FLN_CHECK_LAMPSAUTH
	INTEGER*4	FLN_RESET_OP_AUTH
C
C Local Variables
	INTEGER*4	I			! counter
	LOGICAL		VALID
C
	FLN_AUTHORISE_OPERATOR = %LOC(SS$_NORMAL)
C
C loop for each of the records
C
	DO 10 I = 1,NUM_REC
C
C check its a valid operator
	   FLN_AUTHORISE_OPERATOR = 
     &      FLN_CHECK_OPERATOR(AUTH_REC(I).OP_WORK,VALID)
	   IF (.NOT. FLN_AUTHORISE_OPERATOR) GOTO 999
	   IF (.NOT. VALID) THEN
	      ERROR_INDEX  = I
	      FLN_AUTHORISE_OPERATOR = FLN__NOSUCHOP
	      GOTO 999
	   ENDIF
C
C validate the allowed field
	   IF ((AUTH_REC(I).YES_NO .NE. 'E') .AND.
     &	       (AUTH_REC(I).YES_NO .NE. 'N') .AND.
     &	       (AUTH_REC(I).YES_NO .NE. 'Y')) THEN
	       ERROR_INDEX  = I
               FLN_AUTHORISE_OPERATOR = FLN__NOSUCHALLOW
	       GOTO 999
	   ENDIF
C don't use ident if its an "everything" authorisation 
	   IF (AUTH_REC(I).YES_NO .EQ. 'E') THEN
C
C check that the type is OK
	      IF ((AUTH_REC(I).TYPE .EQ. 'PJ') .OR.
     &   	  (AUTH_REC(I).TYPE .EQ. 'FL') .OR.
     &  	  (AUTH_REC(I).TYPE .EQ. 'EL') .OR.
     &  	  (AUTH_REC(I).TYPE .EQ. 'JB') .OR.
     &  	  (AUTH_REC(I).TYPE .EQ. 'PC') .OR.
     &  	  (AUTH_REC(I).TYPE .EQ. 'DB')) THEN
		  GOTO 10
C
C invalid authorisation type
	      ELSE
	         ERROR_INDEX  = I
	         FLN_AUTHORISE_OPERATOR = FLN__NOSUCHAUTH
	         GOTO 999
	      ENDIF
	   ENDIF
C
C branch depending on authorisation type
	   IF (AUTH_REC(I).TYPE .EQ. 'PJ') THEN
C
C project
	      FLN_AUTHORISE_OPERATOR = FLN_CHECK_PROJECT(AUTH_REC(I).ID)
	      IF (.NOT. FLN_AUTHORISE_OPERATOR) THEN
		 ERROR_INDEX = I
		 GOTO 999
	      ENDIF
	   ELSEIF(AUTH_REC(I).TYPE .EQ.'FL') THEN
C
C flowline
	      FLN_AUTHORISE_OPERATOR =FLN_CHECK_FLOWLINE(AUTH_REC(I).ID)
	      IF (.NOT. FLN_AUTHORISE_OPERATOR) THEN
		 ERROR_INDEX = I
		 GOTO 999
	      ENDIF
	   ELSEIF(AUTH_REC(I).TYPE .EQ. 'EL') THEN
C
C element
	      FLN_AUTHORISE_OPERATOR =FLN_CHECK_ELEMENT(AUTH_REC(I).ID)
	      IF (.NOT. FLN_AUTHORISE_OPERATOR) THEN
		 ERROR_INDEX = I
		 GOTO 999
	      ENDIF
	   ELSEIF(AUTH_REC(I).TYPE .EQ. 'JB') THEN
C
C job
	      FLN_AUTHORISE_OPERATOR =FLN_CHECK_JOB(AUTH_REC(I).ID)
	      IF (.NOT. FLN_AUTHORISE_OPERATOR) THEN
		 ERROR_INDEX = I
		 GOTO 999
	      ENDIF
C
	   ELSEIF(AUTH_REC(I).TYPE .EQ. 'PC') THEN
C
C procedure
	      FLN_AUTHORISE_OPERATOR =
     &	      FLN_CHECK_PROCEDURE(AUTH_REC(I).ID)
	      IF (.NOT. FLN_AUTHORISE_OPERATOR) THEN
		 ERROR_INDEX = I
		 GOTO 999
	      ENDIF
C
	   ELSEIF(AUTH_REC(I).TYPE .EQ. 'DB') THEN
C
C LAMPSCONTROL  authorisation
	      FLN_AUTHORISE_OPERATOR=FLN_CHECK_LAMPSAUTH(AUTH_REC(I).ID)
	      IF (.NOT. FLN_AUTHORISE_OPERATOR) THEN
		 ERROR_INDEX = I
		 GOTO 999
	      ENDIF
	   ELSE
C
C invalid authorisation type
	      ERROR_INDEX  = I
	      FLN_AUTHORISE_OPERATOR = FLN__NOSUCHAUTH
	      GOTO 999
	   ENDIF
10	CONTINUE
C
C getting here means everything is valid so now update the operator's 
C authorisation records
	FLN_AUTHORISE_OPERATOR = FLN_RESET_OP_AUTH(NUM_REC,AUTH_REC)
	IF (.NOT. FLN_AUTHORISE_OPERATOR) GOTO 999
C 
999	RETURN
	END

