	INTEGER*4 FUNCTION FLN_RETRIEVE_ELEMENT_DEF
     &	(FLOWLINE_ID,ELEMENT_ID,EXISTS,COMMAND_PROC,PRIORITY,
     &  PROCEDURE_ID,CONDITIONS,NUM_OUTCOME,OUTCOMES,WIRES)
C
***	MODULE	FLN_RETRIEVE_ELEMENT_DEF
***	IDENT	07SE88
C
C Copyright Laser-Scan Laboratories Ltd., Cambridge, England
C
C Author M.W.S. Reid
C
C 	Created					MWSR    5-Sep-1988
C
C retrieves from the database the element information for the specified 
C element
C
	IMPLICIT NONE
C
C Parameters
	INCLUDE	'LSL$CMNFLOWLINE:FLOW.PAR'
	INCLUDE	'LSL$CMNFLOWLINE:FLOW.STR'
	INCLUDE	'LSL$CMNFLOWLINE:FLOWLINEMSG.PAR'
	INTEGER*4	SS$_NORMAL
	EXTERNAL	SS$_NORMAL

C
C Arguments
	CHARACTER*(*)	FLOWLINE_ID		! IN - the flowline
	CHARACTER*(*)	ELEMENT_ID		! IN - the element
	LOGICAL		EXISTS			! OUT - T if el exists
	CHARACTER*(*)   COMMAND_PROC		! OUT - command procedur
	INTEGER*4	PRIORITY		! OUT - priority
	CHARACTER*(*)	PROCEDURE_ID		! OUT - procedure
	CHARACTER*(*)	CONDITIONS		! OUT - init conditions
	INTEGER*4	NUM_OUTCOME		! OUT - num outcomes
	INTEGER*4	OUTCOMES(FLN_MAX_OUTCOME)
						! OUT - the outcomes
	CHARACTER*(*)	WIRES(FLN_MAX_OUTCOME)  ! OUT - the wires	
C
C Functions
C
C Local Variables
	INTEGER*4	NUM_ERR
	INTEGER*4	NUM_ELEMENT
C
&RDB&   DATABASE FILENAME  'LSL$FLN_DATABASE:FLOWLINE'
C
	FLN_RETRIEVE_ELEMENT_DEF = %LOC(SS$_NORMAL)
	NUM_ERR = 0
20	CONTINUE
	NUM_OUTCOME= 0
	NUM_ELEMENT=0
&RDB&   START_TRANSACTION READ_ONLY RESERVING ELEMENT,OUTCOME
&RDB&   FOR SHARED READ WAIT
&RDB&	   ON ERROR
	      NUM_ERR = NUM_ERR+1
	      IF (NUM_ERR .GT. 5) THEN
		 FLN_RETRIEVE_ELEMENT_DEF = RDB$STATUS
		 GOTO 999
	      ENDIF
C
C only possible error is deadlock 
	      CALL LIB$WAIT(FLN_PSE)
	      GOTO 20
&RDB&	   END_ERROR
C
&RDB&   FOR E IN ELEMENT WITH E.ELEMENT_ID  = ELEMENT_ID AND
&RDB&   E.FLOWLINE_ID = FLOWLINE_ID
&RDB&	   ON ERROR
	      NUM_ERR = NUM_ERR+1
	      IF (NUM_ERR .GT. 5) THEN
		 FLN_RETRIEVE_ELEMENT_DEF = RDB$STATUS
&RDB&	         ROLLBACK
		 GOTO 999
	      ENDIF
&RDB&	      ROLLBACK
C
C only possible error is deadlock 
	      CALL LIB$WAIT(FLN_PSE)
	      GOTO 20
&RDB&	   END_ERROR
C
	   NUM_ELEMENT = NUM_ELEMENT+1
&RDB&      GET
&RDB&	      ON ERROR
	         NUM_ERR = NUM_ERR+1
	         IF (NUM_ERR .GT. 5) THEN
		    FLN_RETRIEVE_ELEMENT_DEF = RDB$STATUS
&RDB&	            ROLLBACK
		    GOTO 999
	         ENDIF
&RDB&	         ROLLBACK
C
C only possible error is deadlock 
	         CALL LIB$WAIT(FLN_PSE)
	         GOTO 20
&RDB&	      END_ERROR
&RDB&         COMMAND_PROC = E.COMMAND_PROC;
&RDB&         PRIORITY = E.PRIORITY;
&RDB&         PROCEDURE_ID  = E.PROCEDURE_ID;
&RDB&         CONDITIONS = E.CONDITIONS;
&RDB&      END_GET
C
&RDB&   END_FOR
C
C indicate if this element doesn't exist
	IF (NUM_ELEMENT .LT. 1) THEN
	   EXISTS = .FALSE.
	   GOTO 990
	ELSE
	   EXISTS = .TRUE.
	ENDIF
C
C retrieve all the outcomes and wires
&RDB&   FOR O IN OUTCOME WITH O.ELEMENT_ID = ELEMENT_ID AND 
&RDB&   O.FLOWLINE_ID = FLOWLINE_ID
&RDB&	   ON ERROR
	      NUM_ERR = NUM_ERR+1
	      IF (NUM_ERR .GT. 5) THEN
		 FLN_RETRIEVE_ELEMENT_DEF = RDB$STATUS
&RDB&	         ROLLBACK
		 GOTO 999
	      ENDIF
&RDB&	      ROLLBACK
C
C only possible error is deadlock 
	      CALL LIB$WAIT(FLN_PSE)
	      GOTO 20
&RDB&	   END_ERROR
	   NUM_OUTCOME  = NUM_OUTCOME+1
&RDB&      GET
&RDB&	      ON ERROR
	         NUM_ERR = NUM_ERR+1
	         IF (NUM_ERR .GT. 5) THEN
		    FLN_RETRIEVE_ELEMENT_DEF = RDB$STATUS
&RDB&	            ROLLBACK
		    GOTO 999
	         ENDIF
&RDB&	         ROLLBACK
C
C only possible error is deadlock 
	         CALL LIB$WAIT(FLN_PSE)
	         GOTO 20
&RDB&	      END_ERROR
&RDB&         OUTCOMES(NUM_OUTCOME) = O.OUTCOME_VALUE;
&RDB&         WIRES(NUM_OUTCOME) = O.WIRE_ID;
&RDB&      END_GET
&RDB&   END_FOR
C
990	CONTINUE
&RDB&   COMMIT	 
C
999	RETURN
	END
