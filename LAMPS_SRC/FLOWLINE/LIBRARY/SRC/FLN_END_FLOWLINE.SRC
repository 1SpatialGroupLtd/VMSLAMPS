C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1988-05-17 12:52:48.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	INTEGER*4 FUNCTION FLN_END_FLOWLINE(ELMNT_ID,FLN_ID,IS_END)
C
***	MODULE	FLN_END_FLOWLINE
***	IDENT	28AP88
C
C Copyright Laser-Scan Laboratories Ltd., Cambridge, England
C
C Author M.W.S. Reid
C
C 	Created					MWSR    24-Feb-1988
C
C determines wither the specified element is the termination 
C element of the flowline
C returns true if it is
C
	IMPLICIT NONE
C
C Parameters
	INCLUDE	'LSL$CMNFLOWLINE:FLOW.PAR'
	INCLUDE	'LSL$CMNFLOWLINE:FLOWLINEMSG.PAR'
	INTEGER*4	SS$_NORMAL
	EXTERNAL	SS$_NORMAL
C
C Arguments
	CHARACTER*(*)	ELMNT_ID	!IN 
	CHARACTER*(*)	FLN_ID		!IN
	LOGICAL		IS_END		! OUT - result
C
C Local Variables
	INTEGER*4	NUM_END
	INTEGER*4	NUM_ERR
C
&RDB&	DATABASE FILENAME 'LSL$FLN_DATABASE:FLOWLINE'
C
C assume success
	FLN_END_FLOWLINE = %LOC(SS$_NORMAL)
C
	NUM_ERR = 0
C
20  	CONTINUE
&RDB&   START_TRANSACTION READ_ONLY WAIT RESERVING FLOWLINE
&RDB&   FOR SHARED READ 
&RDB&	   ON ERROR
	      NUM_ERR = NUM_ERR+1
	      IF (NUM_ERR .GT. 5) THEN
		 FLN_END_FLOWLINE = RDB$STATUS
		 GOTO 999
	      ENDIF
C
C try again - probably deadlock
	      CALL LIB$WAIT(FLN_PSE)
	      GOTO 20
&RDB&	   END_ERROR
&RDB&   GET 
&RDB&	   ON ERROR
	      NUM_ERR = NUM_ERR+1
	      IF (NUM_ERR .GT. 5) THEN
		 FLN_END_FLOWLINE = RDB$STATUS
&RDB&	         ROLLBACK
		 GOTO 999
	      ENDIF
&RDB&	      ROLLBACK
C
C try again - probably deadlock
	      CALL LIB$WAIT(FLN_PSE)
	      GOTO 20
&RDB&	   END_ERROR
&RDB&      NUM_END  = COUNT OF F IN FLOWLINE WITH F.FLOWLINE_ID = FLN_ID
&RDB&   	     AND F.END_ELEMENT = ELMNT_ID
&RDB&   END_GET
&RDB&   COMMIT
C
	IS_END= (NUM_END .NE. 0)	
C
999	RETURN
	END
