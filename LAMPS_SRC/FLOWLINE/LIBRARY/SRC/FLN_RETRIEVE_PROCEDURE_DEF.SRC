	INTEGER*4 FUNCTION FLN_RETRIEVE_PROCEDURE_DEF
     &	(PROCEDURE_ID,EXISTS,COMMAND_PROC,PRIORITY)
C
***	MODULE	FLN_RETRIEVE_PROCEDURE_DEF
***	IDENT	07SE88
C
C Copyright Laser-Scan Laboratories Ltd., Cambridge, England
C
C Author M.W.S. Reid
C
C 	Created					MWSR    6-Sep-1988
C
C retrieves from the database the information for the specified 
C procedure
C
	IMPLICIT NONE
C
C Parameters
	INCLUDE	'LSL$CMNFLOWLINE:FLOW.PAR'
	INCLUDE	'LSL$CMNFLOWLINE:FLOW.STR'
	INCLUDE	'LSL$CMNFLOWLINE:FLOWLINEMSG.PAR'
	INTEGER*4	SS$_NORMAL
	EXTERNAL	SS$_NORMAL

C
C Arguments
	CHARACTER*(*)	PROCEDURE_ID		! IN - the PROCEDURE
	LOGICAL		EXISTS			! OUT - T if el exists
	CHARACTER*(*)   COMMAND_PROC		! OUT - command procedur
	INTEGER*4	PRIORITY		! OUT - priority
C
C Local Variables
	INTEGER*4	NUM_ERR
	INTEGER*4	NUM_PROCEDURE
C
&RDB&   DATABASE FILENAME  'LSL$FLN_DATABASE:FLOWLINE'
C
	FLN_RETRIEVE_PROCEDURE_DEF = %LOC(SS$_NORMAL)
	NUM_ERR = 0
20	CONTINUE
	NUM_PROCEDURE = 0
&RDB&   START_TRANSACTION READ_ONLY RESERVING PROCEDURE
&RDB&   FOR SHARED READ WAIT
&RDB&	   ON ERROR
	      NUM_ERR = NUM_ERR+1
	      IF (NUM_ERR .GT. 5) THEN
		 FLN_RETRIEVE_PROCEDURE_DEF = RDB$STATUS
		 GOTO 999
	      ENDIF
C
C only possible error is deadlock 
	      CALL LIB$WAIT(FLN_PSE)
	      GOTO 20
&RDB&	   END_ERROR
C
&RDB&   FOR P IN PROCEDURE WITH P.PROCEDURE_ID  = PROCEDURE_ID 
&RDB&	   ON ERROR
	      NUM_ERR = NUM_ERR+1
	      IF (NUM_ERR .GT. 5) THEN
		 FLN_RETRIEVE_PROCEDURE_DEF = RDB$STATUS
&RDB&	         ROLLBACK
		 GOTO 999
	      ENDIF
&RDB&	      ROLLBACK
C
C only possible error is deadlock 
	      CALL LIB$WAIT(FLN_PSE)
	      GOTO 20
&RDB&	   END_ERROR
C
	   NUM_PROCEDURE = NUM_PROCEDURE +1
&RDB&      GET
&RDB&	      ON ERROR
	         NUM_ERR = NUM_ERR+1
	         IF (NUM_ERR .GT. 5) THEN
		    FLN_RETRIEVE_PROCEDURE_DEF = RDB$STATUS
&RDB&	            ROLLBACK
		    GOTO 999
	         ENDIF
&RDB&	         ROLLBACK
C
C only possible error is deadlock 
	         CALL LIB$WAIT(FLN_PSE)
	         GOTO 20
&RDB&	      END_ERROR
&RDB&         COMMAND_PROC = P.COMMAND_PROC;
&RDB&         PRIORITY = P.PRIORITY;
&RDB&      END_GET
C
&RDB&   END_FOR
C
C indicate if this element doesn't exist
	IF (NUM_PROCEDURE .LT. 1) THEN
	   EXISTS = .FALSE.
	ELSE
	   EXISTS = .TRUE.
	ENDIF
C
&RDB&   COMMIT	 
C
999	RETURN
	END
