C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1988-05-24 15:21:46.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	INTEGER*4 FUNCTION FLN_CREATE_OPERATOR(OPERATOR_ID)
C
***	MODULE	FLN_CREATE_OPERATOR
***	IDENT	24MY88
C
C Copyright Laser-Scan Laboratories Ltd., Cambridge, England
C
C Author M.W.S. Reid
C
C 	Created					MWSR    02-May-1988
C
C creates an operator
C moans if he already exists
C
	IMPLICIT NONE
C
C Arguments
	CHARACTER*(*)	OPERATOR_ID	! The operator to be created
C
C Parameters
	INCLUDE	'LSL$CMNFLOWLINE:FLOW.PAR'
	INCLUDE	'LSL$CMNFLOWLINE:FLOWLINEMSG.PAR'
	INTEGER*4	SS$_NORMAL
	EXTERNAL	SS$_NORMAL
C
C RDB return codes
	INTEGER*4	RDB$_DEADLOCK
	EXTERNAL	RDB$_DEADLOCK
C
	INTEGER*4	RDB$_NO_DUP
	EXTERNAL	RDB$_NO_DUP
C
C function
	INTEGER*4	FLN_REMOVE_SPACES
C
	INTEGER*4	NUM_ERR
	INTEGER*4	LENGTH
	CHARACTER*20	NEW_OPERATOR_ID
C 
&RDB&	DATABASE FILENAME 'LSL$FLN_DATABASE:FLOWLINE'
C
C check for spaces in name
	FLN_CREATE_OPERATOR= FLN_REMOVE_SPACES 
     &	(OPERATOR_ID,NEW_OPERATOR_ID,LENGTH)
	IF(.NOT. FLN_CREATE_OPERATOR) GOTO 999 
C
	NUM_ERR = 0
20	CONTINUE
C	
&RDB&   START_TRANSACTION READ_WRITE WAIT RESERVING OPERATOR FOR 
&RDB&   PROTECTED WRITE
&RDB&	ON ERROR
	   NUM_ERR = NUM_ERR+1
	   IF (NUM_ERR .GT. 5) THEN
	      FLN_CREATE_OPERATOR = RDB$STATUS
	      GOTO 999
	   ENDIF
C
C try again - probably deadlock
	   CALL LIB$WAIT(FLN_PSE)
	   GOTO 20
&RDB&	END_ERROR
C
C create the operator
&RDB&   STORE O IN OPERATOR USING
&RDB&	   ON ERROR
C
C if its a deadlock then retry after waiting
	      IF(RDB$STATUS .EQ. %LOC(RDB$_DEADLOCK))THEN
	         CALL LIB$WAIT(FLN_PSE)
&RDB&	         ROLLBACK
	         GOTO 20
	      ELSEIF (RDB$STATUS .EQ. %LOC(RDB$_NO_DUP)) THEN
C
C existing project  spec - failure
		 FLN_CREATE_OPERATOR  = FLN__DUPOP
&RDB&	         ROLLBACK
		 GOTO 999
	      ELSE	
	  	 FLN_CREATE_OPERATOR = RDB$STATUS
&RDB&	         ROLLBACK
	         GOTO 999
	      ENDIF
&RDB&	   END_ERROR
&RDB&      O.OPERATOR_ID = NEW_OPERATOR_ID(:LENGTH);
C
&RDB&   END_STORE
&RDB&   COMMIT
C
	FLN_CREATE_OPERATOR = RDB$STATUS
999	RETURN
	END
C
