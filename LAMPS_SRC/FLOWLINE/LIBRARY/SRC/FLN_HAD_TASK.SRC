C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1988-09-28 14:47:04.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	INTEGER*4 FUNCTION FLN_HAD_TASK(JOB_ID,ELMNT_ID,HAD_A_TASK)
C
***	MODULE	FLN_HAD_TASK
***	IDENT	28SE88
C
C Copyright Laser-Scan Laboratories Ltd., Cambridge, England
C
C Author M.W.S. Reid
C
C 	Created					MWSR    24-Feb-1988
C
C checks the TASK and TASK_HISTORY relations for records with the
C supplied job  and element ids
C result returned in HAD_A_TASK
C
	IMPLICIT NONE
C
C Parameters
	INCLUDE	'LSL$CMNFLOWLINE:FLOW.PAR'
	INCLUDE	'LSL$CMNFLOWLINE:FLOWLINEMSG.PAR'
	INTEGER*4	SS$_NORMAL
	EXTERNAL	SS$_NORMAL
C
C Arguments
	INTEGER*4	JOB_ID		! IN - job id
	CHARACTER*(*)	ELMNT_ID	! IN - element id
	LOGICAL		HAD_A_TASK	! OUT - true if had task
C
C Common Blocks
C
C Functions
C
C Local Variables
	INTEGER*4	NUM_ERR
	INTEGER*4	NUM_TASK
	INTEGER*4	NUM_ACT
C
&RDB&   DATABASE FILENAME  'LSL$FLN_DATABASE:FLOWLINE'
C
C assume success
	FLN_HAD_TASK= %LOC(SS$_NORMAL)
C
	NUM_ERR = 0
20	CONTINUE
	HAD_A_TASK = .FALSE.
	NUM_TASK = 0
&RDB&   START_TRANSACTION READ_ONLY RESERVING TASK, TASK_HISTORY
&RDB&   FOR SHARED READ WAIT
&RDB&	   ON ERROR
	      NUM_ERR = NUM_ERR+1
	      IF (NUM_ERR .GT. 5) THEN
		 FLN_HAD_TASK = RDB$STATUS
		 GOTO 999
	      ENDIF
C
C try again - probably deadlock
	      CALL LIB$WAIT(FLN_PSE)
	      GOTO 20
&RDB&	   END_ERROR
C
&RDB&   GET 
&RDB&	   ON ERROR
	      NUM_ERR = NUM_ERR+1
	      IF (NUM_ERR .GT. 5) THEN
		 FLN_HAD_TASK = RDB$STATUS
&RDB&	         ROLLBACK
		 GOTO 999
	      ENDIF
&RDB&	      ROLLBACK
C
C try again - probably deadlock
	      CALL LIB$WAIT(FLN_PSE)
	      GOTO 20
&RDB&	   END_ERROR
&RDB&      NUM_TASK = COUNT OF T IN TASK WITH T.JOB_ID = JOB_ID AND
&RDB&      T.ELEMENT_ID  = ELMNT_ID
&RDB&    END_GET
&RDB&    GET 
&RDB&	   ON ERROR
	      NUM_ERR = NUM_ERR+1
	      IF (NUM_ERR .GT. 5) THEN
		 FLN_HAD_TASK = RDB$STATUS
&RDB&	         ROLLBACK
		 GOTO 999
	      ENDIF
&RDB&	      ROLLBACK
C
C try again - probably deadlock
	      CALL LIB$WAIT(FLN_PSE)
	      GOTO 20
&RDB&	   END_ERROR
&RDB&      NUM_ACT = COUNT OF T IN TASK WITH T.JOB_ID = JOB_ID AND
&RDB&      T.ELEMENT_ID  = ELMNT_ID AND T.TASK_STATUS = "Active"
&RDB&   END_GET
C
	IF (NUM_ACT .GT. 0) THEN
	   FLN_HAD_TASK = FLN__TASKACTIVE
	   GOTO 999
	ENDIF
	IF (NUM_TASK .GT. 0) THEN
	   HAD_A_TASK = .TRUE.
	   GOTO 900
	ENDIF
C
C nothing in TASK so check TASK_HISTORY
&RDB&   GET 
&RDB&	   ON ERROR
	      NUM_ERR = NUM_ERR+1
	      IF (NUM_ERR .GT. 5) THEN
		 FLN_HAD_TASK = RDB$STATUS
&RDB&	         ROLLBACK
		 GOTO 999
	      ENDIF
&RDB&	      ROLLBACK
C
C try again - probably deadlock
	      CALL LIB$WAIT(FLN_PSE)
	      GOTO 20
&RDB&	   END_ERROR
&RDB&      NUM_TASK = COUNT OF T IN TASK_HISTORY WITH T.JOB_ID = 
&RDB&      JOB_ID AND
&RDB&      T.ELEMENT_ID  = ELMNT_ID AND T.TASK_STATUS NE 'Void'
&RDB&   END_GET
	IF (NUM_TASK .GT. 0) THEN
	   HAD_A_TASK = .TRUE.
	   GOTO 900
	ENDIF
C
900	CONTINUE
&RDB&   COMMIT
999	RETURN
	END
