C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1988-05-17 12:54:12.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	INTEGER*4 FUNCTION FLN_GET_TASK_SESSION(SESSION_ID,
     &	TASK_ID)
C
***	MODULE	FLN_GET_TASK_SESSION
***	IDENT	29AP88
C
C Copyright Laser-Scan Laboratories Ltd., Cambridge, England
C
C Author M.W.S. Reid
C
C 	Created					MWSR    26-Apr-1988
C 
C gets task from session
C
	IMPLICIT NONE
C
C Parameters
	INCLUDE	'LSL$CMNFLOWLINE:FLOW.PAR'
	INCLUDE	'LSL$CMNFLOWLINE:FLOWLINEMSG.PAR'
C
C Arguments
	INTEGER*4	SESSION_ID      ! IN - session id
	INTEGER*4	TASK_ID		! OUT - task identifier

C
C RDB return codes
	INTEGER*4	RDB$_DEADLOCK
	EXTERNAL	RDB$_DEADLOCK
C
C Local Variables
	INTEGER*4	NUM_SESS
	INTEGER*4	NUM_ERR
C
&RDB&   DATABASE FILENAME  'LSL$FLN_DATABASE:FLOWLINE'
C
	NUM_ERR = 0
20	CONTINUE
	NUM_SESS = 0
&RDB&   START_TRANSACTION READ_ONLY WAIT RESERVING SESSION FOR
&RDB&   SHARED READ
&RDB&	ON ERROR
	   NUM_ERR = NUM_ERR+1
	   IF (NUM_ERR .GT. 5) THEN
	      FLN_GET_TASK_SESSION = RDB$STATUS
	      GOTO 999
	   ENDIF
C
C try again - probably deadlock
	   CALL LIB$WAIT(FLN_PSE)
	   GOTO 20
&RDB&	END_ERROR
&RDB&   FOR S  IN SESSION WITH S.SESSION_ID = SESSION_ID 
&RDB&	   ON ERROR
	      NUM_ERR = NUM_ERR+1
	      IF (NUM_ERR .GT. 10) THEN
		 FLN_GET_TASK_SESSION = RDB$STATUS
&RDB&	         ROLLBACK
		 GOTO 999
	      ENDIF
&RDB&	      ROLLBACK
C
C only possible error is deadlock 
	      CALL LIB$WAIT(FLN_PSE)
	      GOTO 20
&RDB&	   END_ERROR
C
	   NUM_SESS = NUM_SESS+1
C  get the task id of this session
&RDB&      GET 
&RDB&	   ON ERROR
	      NUM_ERR = NUM_ERR+1
	      IF (NUM_ERR .GT. 10) THEN
		 FLN_GET_TASK_SESSION = RDB$STATUS
&RDB&	         ROLLBACK
		 GOTO 999
	      ENDIF
&RDB&	      ROLLBACK
C
C only possible error is deadlock 
	      CALL LIB$WAIT(FLN_PSE)
	      GOTO 20
&RDB&	   END_ERROR
&RDB&       TASK_ID  = S.TASK_ID;
&RDB&        END_GET	      
&RDB&   END_FOR
&RDB&   COMMIT
C
	IF (NUM_SESS .LT. 1) THEN
	   FLN_GET_TASK_SESSION = FLN__NOACTSESS
C
	ELSE
	   FLN_GET_TASK_SESSION = RDB$STATUS
	ENDIF
999	RETURN
	END
