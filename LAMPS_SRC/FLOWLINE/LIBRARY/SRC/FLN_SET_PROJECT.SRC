C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1988-05-20 10:11:14.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	INTEGER*4 FUNCTION FLN_SET_PROJECT(PROJECT_ID,STATUS)
C
***	MODULE	FLN_SET_PROJECT
***	IDENT	20MY88
C
C Copyright Laser-Scan Laboratories Ltd., Cambridge, England
C
C Author M.W.S. Reid
C
C 	Created					MWSR    21-Apr-1988
C
C sets a PROJECT to the specified status
C returns rdb status code for database operation
C also reurns error if project  has 'Created' status
C
	IMPLICIT NONE
C
C Parameters
	INCLUDE	'LSL$CMNFLOWLINE:FLOW.PAR'
	INCLUDE	'LSL$CMNFLOWLINE:FLOWLINEMSG.PAR'
C
C Arguments
	CHARACTER*(*)	PROJECT_ID	! PROJECT id
	CHARACTER*(*)	STATUS		! status to set 
C					! held active or created
C
C RDB return codes
	INTEGER*4	RDB$_DEADLOCK
	EXTERNAL	RDB$_DEADLOCK
C
C Local Variables
	INTEGER*4	NUM_PROJ
	INTEGER*4	NUM_ERR
	CHARACTER*12	EXISTING_STATUS
C
&RDB&	DATABASE FILENAME 'LSL$FLN_DATABASE:FLOWLINE'
C
	NUM_ERR = 0
20	CONTINUE
	NUM_PROJ = 0
&RDB&   START_TRANSACTION READ_WRITE RESERVING PROJECT FOR 
&RDB&   PROTECTED WRITE WAIT
&RDB&	   ON ERROR
	      NUM_ERR = NUM_ERR+1
	      IF (NUM_ERR .GT. 5) THEN
		 FLN_SET_PROJECT = RDB$STATUS
		 GOTO 999
	      ENDIF
C
C only possible error is deadlock 
	      CALL LIB$WAIT(FLN_PSE)
	      GOTO 20
&RDB&	   END_ERROR
C
C extract the start element from the database
&RDB&   FOR J IN PROJECT WITH J.PROJECT_ID = PROJECT_ID 
&RDB&	   ON ERROR
	      NUM_ERR = NUM_ERR+1
	      IF (NUM_ERR .GT. 5) THEN
		 FLN_SET_PROJECT = RDB$STATUS
&RDB&	         ROLLBACK
		 GOTO 999
	      ENDIF
&RDB&	      ROLLBACK
C
C only possible error is deadlock 
	      CALL LIB$WAIT(FLN_PSE)
	      GOTO 20
&RDB&	   END_ERROR
&RDB&      GET
&RDB&	      ON ERROR
	         NUM_ERR = NUM_ERR+1
	         IF (NUM_ERR .GT. 5) THEN
		    FLN_SET_PROJECT= RDB$STATUS
&RDB&	            ROLLBACK
		    GOTO 999
	         ENDIF
&RDB&	         ROLLBACK
C
C only possible error is deadlock 
	         CALL LIB$WAIT(FLN_PSE)
	         GOTO 20
&RDB&	      END_ERROR
&RDB&         EXISTING_STATUS = J.PROJECT_STATUS;
&RDB&      END_GET
C
	   IF (EXISTING_STATUS .EQ. 'Created') THEN
	      FLN_SET_PROJECT = FLN__PROJCREATED
	      GOTO 900
	   ENDIF
C
	   NUM_PROJ = NUM_PROJ +1
&RDB&      MODIFY J USING
C
C if its a deadlock then retry after waiting
&RDB&         ON ERROR
	         NUM_ERR = NUM_ERR+1
	         IF (NUM_ERR .GT. 5) THEN
		    FLN_SET_PROJECT = RDB$STATUS
&RDB&	            ROLLBACK
		    GOTO 999
	         ENDIF
	         IF(RDB$STATUS .EQ. %LOC(RDB$_DEADLOCK))THEN
	            CALL LIB$WAIT(FLN_PSE)
&RDB&	            ROLLBACK
	            GOTO 20
	         ELSE
	            FLN_SET_PROJECT= RDB$STATUS
&RDB&	            ROLLBACK
	            GOTO 999
	         ENDIF
&RDB&	      END_ERROR
&RDB&         J.PROJECT_STATUS = STATUS; 
&RDB&      END_MODIFY
&RDB&   END_FOR
&RDB&   COMMIT
C
	GOTO 905
C
900	CONTINUE
&RDB&   ROLLBACK
	GOTO 999
905	IF (NUM_PROJ .EQ. 0) THEN
C
C no project with supplied id
	   FLN_SET_PROJECT = FLN__NOSUCHPROJ
	ELSE
	   FLN_SET_PROJECT = RDB$STATUS
	ENDIF
C
999	RETURN
	END
