C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1990-06-22 17:31:04.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	INTEGER*4 FUNCTION FLN_CREATE_PROJECT
     &	(PROJ_ID,OPERATOR_ID,PRIORITY,COMMAND_PROC)
C
***	MODULE	FLN_CREATE_PROJECT
***	IDENT	22JN90
C
C Copyright Laser-Scan Laboratories Ltd., Cambridge, England
C
C Author M.W.S. Reid
C
C 	Created					MWSR    29-Feb-1988
C
C creates the specified PROJECT on the system
C returns status of transaction 
C
	IMPLICIT NONE
C
C Parameters
	INCLUDE	'LSL$CMNFLOWLINE:FLOW.PAR'
	INCLUDE	'LSL$CMNFLOWLINE:FLOWLINEMSG.PAR'
C
C Arguments
	CHARACTER*(*)   PROJ_ID		! IN - project id
	CHARACTER*(*)   OPERATOR_ID	! IN - project initiator
	INTEGER*4	PRIORITY	! IN - project priority
	CHARACTER*(*)	COMMAND_PROC	! OUT - system command file
C Common Blocks
C
C RDB return codes
	INTEGER*4	RDB$_DEADLOCK
	EXTERNAL	RDB$_DEADLOCK
	INTEGER*4	RDB$_NO_DUP
	EXTERNAL	RDB$_NO_DUP
C
C function
	INTEGER*4	FLN_REMOVE_SPACES
	CHARACTER*20	PROJECT_ID
	INTEGER*4	NUM_ERR
	INTEGER*4	LENGTH
C 
&RDB&	DATABASE FILENAME 'LSL$FLN_DATABASE:FLOWLINE'
C
C validate priority
	IF (PRIORITY .LT. 1 .OR. PRIORITY .GT. 16) THEN
	    FLN_CREATE_PROJECT = FLN__ILLEGPRI
	    GOTO 999
	ENDIF
C
C check for spaces in name
	FLN_CREATE_PROJECT= FLN_REMOVE_SPACES(PROJ_ID,PROJECT_ID,LENGTH)
	IF(.NOT. FLN_CREATE_PROJECT) GOTO 999 
C
	NUM_ERR = 0
20	CONTINUE
C	
&RDB&   START_TRANSACTION READ_WRITE WAIT RESERVING PROJECT FOR 
&RDB&   PROTECTED WRITE, SYSTEM FOR SHARED READ 
&RDB&	ON ERROR
	   NUM_ERR = NUM_ERR+1
	   IF (NUM_ERR .GT. 5) THEN
	      FLN_CREATE_PROJECT = RDB$STATUS
	      GOTO 999
	   ENDIF
C
C try again - probably deadlock
	   CALL LIB$WAIT(FLN_PSE)
	   GOTO 20
&RDB&	END_ERROR
C
C retrieve the system command file
&RDB&   FOR S IN SYSTEM 
&RDB&	      ON ERROR
	         NUM_ERR = NUM_ERR+1
	         IF (NUM_ERR .GT. 5) THEN
		    FLN_CREATE_PROJECT = RDB$STATUS
&RDB&	            ROLLBACK
		    GOTO 999
	         ENDIF
&RDB&	         ROLLBACK
C
C try again - probably deadlock
	         CALL LIB$WAIT(FLN_PSE)
	         GOTO 20
&RDB&	      END_ERROR
&RDB&       GET
&RDB&	      ON ERROR
	         NUM_ERR = NUM_ERR+1
	         IF (NUM_ERR .GT. 5) THEN
		    FLN_CREATE_PROJECT = RDB$STATUS
&RDB&	            ROLLBACK
		    GOTO 999
	         ENDIF
&RDB&	         ROLLBACK
C
C try again - probably deadlock
	         CALL LIB$WAIT(FLN_PSE)
	         GOTO 20
&RDB&	      END_ERROR
&RDB&         COMMAND_PROC = S.COMMAND_PROC
&RDB&      END_GET
&RDB&   END_FOR

C create the project
&RDB&   STORE P IN PROJECT USING
&RDB&	   ON ERROR
C
C if its a deadlock then retry after waiting
	      IF(RDB$STATUS .EQ. %LOC(RDB$_DEADLOCK))THEN
	         CALL LIB$WAIT(FLN_PSE)
&RDB&	         ROLLBACK
	         GOTO 20
	      ELSEIF (RDB$STATUS .EQ. %LOC(RDB$_NO_DUP)) THEN
C
C existing project  spec - failure
		 FLN_CREATE_PROJECT  = FLN__DUPPROJ
&RDB&	         ROLLBACK
		 GOTO 999
	      ELSE	
	  	 FLN_CREATE_PROJECT = RDB$STATUS
&RDB&	         ROLLBACK
	         GOTO 999
	      ENDIF
&RDB&	   END_ERROR
&RDB&      P.PROJECT_ID = PROJECT_ID(1:LENGTH);
&RDB&      P.PROJECT_STATUS = 'Created';
&RDB&      P.PRIORITY = PRIORITY;
&RDB&      P.INITIATOR_ID  = OPERATOR_ID;
C
&RDB&   END_STORE
&RDB&   COMMIT
C
	FLN_CREATE_PROJECT = RDB$STATUS
C
999	RETURN
	END
C
