	INTEGER*4 FUNCTION FLN_GET_WIRE_STATUS
     &	                          (WIRE_ID,JOB_ID,FLN_ID,ACTIVE,VALID)
C
***	MODULE	FLN_GET_WIRE_STATUS
***	IDENT	17JL91
C
C Copyright Laser-Scan Laboratories Ltd., Cambridge, England
C
C Author M.W.S. Reid
C
C 	Created					MWSR    2-Mar-1988
C
C looks in the WIRE_ACTIVE relation to see if specified  wire is active
C if it isnt then check in WIRE RELATION is valid
C returns false if isnt a valid wire 
C
C
	IMPLICIT NONE
C
C Parameters
	INCLUDE	'LSL$CMNFLOWLINE:FLOW.PAR'
	INCLUDE	'LSL$CMNFLOWLINE:FLOWLINEMSG.PAR'
	INTEGER*4	SS$_NORMAL
	EXTERNAL	SS$_NORMAL
C
C Arguments
	CHARACTER*(*)	WIRE_ID		! IN - wire id
	INTEGER*4	JOB_ID		! IN - job_id
	CHARACTER*(*)   FLN_ID		! IN - flowline id
	LOGICAL		ACTIVE		! OUT - the result
	LOGICAL		VALID		! OUT - valid wire?
C
C Common Blocks
	INCLUDE 'LSL$CMNFLOWLINE:WIRE.CMN'
C
C Functions
C
C Local Variables
	INTEGER*4	NUM_WIRE
	INTEGER*4	I
	INTEGER*4	NUM_ERR
C
&RDB&   DATABASE FILENAME 'LSL$FLN_DATABASE:FLOWLINE'
C
C assume success
	FLN_GET_WIRE_STATUS = %LOC(SS$_NORMAL)
C
	VALID = .TRUE.
	NUM_ERR = 0
20	CONTINUE
&RDB&   START_TRANSACTION READ_ONLY WAIT RESERVING WIRE FOR SHARED
&RDB&   READ, WIRE_ACTIVE FOR PROTECTED READ
&RDB&	   ON ERROR
	      NUM_ERR = NUM_ERR+1
	      IF (NUM_ERR .GT. 5) THEN
		 FLN_GET_WIRE_STATUS = RDB$STATUS
		 GOTO 999
	      ENDIF
C
C try again - probably deadlock
	      CALL LIB$WAIT(FLN_PSE)
	      GOTO 20
&RDB&	   END_ERROR
C
&RDB&   GET 
&RDB&	   ON ERROR
	      NUM_ERR = NUM_ERR+1
	      IF (NUM_ERR .GT. 5) THEN
		 FLN_GET_WIRE_STATUS = RDB$STATUS
&RDB&	         ROLLBACK
		 GOTO 999
	      ENDIF
&RDB&	      ROLLBACK
C
C try again - probably deadlock
	      CALL LIB$WAIT(FLN_PSE)
	      GOTO 20
&RDB&	   END_ERROR
&RDB&      NUM_WIRE = COUNT OF W IN WIRE_ACTIVE WITH 
&RDB&                 W.WIRE_ID = WIRE_ID 
&RDB&                 AND W.JOB_ID = JOB_ID 
&RDB&   END_GET
C
	IF (NUM_WIRE .GT. 1) THEN 
	   FLN_GET_WIRE_STATUS = FLN__TOOMNYWIRE
&RDB&      COMMIT
	   GOTO 999
	ENDIF
	IF (NUM_WIRE .EQ. 1) THEN
C
C presence in this relation indicates that the wire is active
	   ACTIVE  = .TRUE. 
&RDB&      COMMIT
	   GOTO 999	  
	ELSE
C
C also check in wire common block for wire that may have been set up in
C the current database operation but has not yet been put in the 
C database
	   DO 25 I = 1,NUM_CWIRE
	      IF (WIRE_ID .EQ. C_WIRE(I)) THEN
		  ACTIVE  = .TRUE.
&RDB&             COMMIT
		  GOTO 999
	      ENDIF
25	   CONTINUE
	ENDIF
C	   
C
C now check that its a valid WIRE that we haven't found
&RDB&   GET 
&RDB&	   ON ERROR
	      NUM_ERR = NUM_ERR+1
	      IF (NUM_ERR .GT. 5) THEN
		 FLN_GET_WIRE_STATUS = RDB$STATUS
&RDB&	         ROLLBACK
		 GOTO 999
	      ENDIF
&RDB&	      ROLLBACK
C
C try again - probably deadlock
	      CALL LIB$WAIT(FLN_PSE)
	      GOTO 20
&RDB&	   END_ERROR
&RDB&      NUM_WIRE = COUNT OF W IN WIRE WITH 
&RDB&                 W.WIRE_ID = WIRE_ID 
&RDB&                 AND W.FLOWLINE_ID = FLN_ID
&RDB&   END_GET
&RDB&   COMMIT
C
	IF (NUM_WIRE .NE. 1) THEN
C
C not a valid wire
	   VALID = .FALSE.
	ELSE
           ACTIVE = .FALSE.
	ENDIF
C
999	RETURN
	END
