	INTEGER*4 FUNCTION FLN_START_PROJECT(PROJECT_ID,COMMAND_PROC)
C
***	MODULE	FLN_START_PROJECT
***	IDENT	05MY88
C
C Copyright Laser-Scan Laboratories Ltd., Cambridge, England
C
C Author M.W.S. Reid
C
C 	Created					MWSR    20-Apr-1988
C
C starts the specified PROJECT on the system
C
	IMPLICIT NONE
C
C Parameters
	INCLUDE	'LSL$CMNFLOWLINE:FLOW.PAR'
	INCLUDE	'LSL$CMNFLOWLINE:FLOWLINEMSG.PAR'
	INTEGER*4	SS$_NORMAL
	EXTERNAL	SS$_NORMAL
C
C Arguments
	CHARACTER*(*)	PROJECT_ID	! PROJECT id
	CHARACTER*(*)	COMMAND_PROC	! PROJECT wide command procedure
C
C RDB return codes
	INTEGER*4	RDB$_DEADLOCK
	EXTERNAL	RDB$_DEADLOCK
C Common Blocks
C
C
C Local Variables
	INTEGER*4	DAY,TIME
	INTEGER*4	NUM_ELMNT	! number of them
	INTEGER*4	DUMMY
	CHARACTER*20	FLN_ID,ELMNT_ID
	INTEGER*4	NUM_PROJ
	INTEGER*4	NUM_ERR
C
&RDB&   DATABASE FILENAME  'LSL$FLN_DATABASE:FLOWLINE'
C
C assume success
	FLN_START_PROJECT = %LOC(SS$_NORMAL)
C get the current time
	CALL FLN_GET_DAY_TIME(DAY,TIME)
C
	NUM_ERR = 0
20	CONTINUE
	NUM_PROJ = 0
&RDB&   START_TRANSACTION READ_WRITE RESERVING PROJECT FOR
&RDB&   PROTECTED WRITE WAIT
&RDB&	ON ERROR
	   NUM_ERR = NUM_ERR+1
	   IF (NUM_ERR .GT. 5) THEN
	      FLN_START_PROJECT= RDB$STATUS
	      GOTO 999
	   ENDIF
C
C try again - probably deadlock
	   CALL LIB$WAIT(FLN_PSE)
	   GOTO 20
&RDB&	END_ERROR
&RDB&   FOR J IN PROJECT WITH J.PROJECT_ID  = PROJECT_ID
&RDB&         ON ERROR
	         NUM_ERR = NUM_ERR+1
	         IF(RDB$STATUS .EQ. %LOC(RDB$_DEADLOCK)
     &	         .AND. NUM_ERR .LT. 10)THEN
	            CALL LIB$WAIT(FLN_PSE)
&RDB&	            ROLLBACK
	            GOTO 20
	          ELSE
	             FLN_START_PROJECT = RDB$STATUS
&RDB&	             ROLLBACK
	             GOTO 999
	          ENDIF
&RDB&	      END_ERROR
C
	   NUM_PROJ = NUM_PROJ+1
&RDB&      MODIFY J USING
C
C if its a deadlock then retry after waiting
&RDB&         ON ERROR
	         NUM_ERR = NUM_ERR+1
	         IF(RDB$STATUS .EQ. %LOC(RDB$_DEADLOCK)
     &	         .AND. NUM_ERR .LT. 10)THEN
	            CALL LIB$WAIT(FLN_PSE)
&RDB&	            ROLLBACK
	            GOTO 20
	          ELSE
	             FLN_START_PROJECT = RDB$STATUS
&RDB&	             ROLLBACK
	             GOTO 999
	          ENDIF
&RDB&	      END_ERROR
&RDB&         J.COMMAND_PROC = COMMAND_PROC;
&RDB&         J.PROJECT_STATUS = 'Active';
&RDB&         J.START_TIME = TIME;
&RDB&         J.START_DATE = DAY;
&RDB&      END_MODIFY
C
&RDB&   END_FOR
&RDB&   COMMIT
C
	IF (NUM_PROJ .EQ. 0) THEN
	   FLN_START_PROJECT = FLN__NOSUCHPROJ
	ENDIF
C
999	RETURN
	END
