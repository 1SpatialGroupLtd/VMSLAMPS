	INTEGER*4 FUNCTION FLN_GET_FLOWLN(JOB_ID,FLOWLINE_ID)
C
***	MODULE	FLN_GET_FLOWLN
***	IDENT	23AP88
C
C Copyright Laser-Scan Laboratories Ltd., Cambridge, England
C
C Author M.W.S. Reid
C
C 	Created					MWSR    22-Apr-1988
C
C gets the flowline id for the specified job
C
	IMPLICIT NONE
C
C Parameters
	INCLUDE	'LSL$CMNFLOWLINE:FLOW.PAR'
	INCLUDE	'LSL$CMNFLOWLINE:FLOWLINEMSG.PAR'
	INTEGER*4	SS$_NORMAL
	EXTERNAL	SS$_NORMAL
C
C Arguments
	INTEGER*4	JOB_ID
	CHARACTER*(*)	FLOWLINE_ID
C
C Local Variables
	INTEGER*4	NUM_ERR
	INTEGER*4	NUM_JOB
C
&RDB&   DATABASE FILENAME  'LSL$FLN_DATABASE:FLOWLINE'
C
C assume success
	FLN_GET_FLOWLN= %LOC(SS$_NORMAL)
C
	NUM_ERR = 0
20	CONTINUE
	NUM_JOB = 0
&RDB&   START_TRANSACTION READ_ONLY RESERVING JOB FOR 
&RDB&   SHARED READ WAIT
&RDB&	ON ERROR
	   NUM_ERR = NUM_ERR+1
	   IF (NUM_ERR .GT. 5) THEN
	      FLN_GET_FLOWLN = RDB$STATUS
	      GOTO 999
	   ENDIF
C
C try again - probably deadlock
	   CALL LIB$WAIT(FLN_PSE)
	   GOTO 20
&RDB&	END_ERROR
C
&RDB&   FOR J IN JOB WITH J.JOB_ID  = JOB_ID
&RDB&	   ON ERROR
	      NUM_ERR = NUM_ERR+1
	      IF (NUM_ERR .GT. 5) THEN
		 FLN_GET_FLOWLN= RDB$STATUS
&RDB&	         ROLLBACK
		 GOTO 999
	      ENDIF
&RDB&	      ROLLBACK
C
C try again - probably deadlock
	      CALL LIB$WAIT(FLN_PSE)
	      GOTO 20
&RDB&	   END_ERROR
	   NUM_JOB = NUM_JOB+1
&RDB&      GET
&RDB&	      ON ERROR
	         NUM_ERR = NUM_ERR+1
	         IF (NUM_ERR .GT. 5) THEN
		    FLN_GET_FLOWLN= RDB$STATUS
&RDB&	            ROLLBACK
		    GOTO 999
	         ENDIF
&RDB&	         ROLLBACK
C
C try again - probably deadlock
	         CALL LIB$WAIT(FLN_PSE)
	         GOTO 20
&RDB&	      END_ERROR
&RDB&         FLOWLINE_ID  = J.FLOWLINE_ID;
&RDB&      END_GET
&RDB&   END_FOR
&RDB&   COMMIT
C
	IF (NUM_JOB .EQ. 0) THEN
	   FLN_GET_FLOWLN = FLN__NOSUCHJOB
	ENDIF
C
999	RETURN
	END
