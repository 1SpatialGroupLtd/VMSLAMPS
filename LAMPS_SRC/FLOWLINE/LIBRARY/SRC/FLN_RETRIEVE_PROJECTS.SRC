	INTEGER*4 FUNCTION FLN_RETRIEVE_PROJECTS(OPERATOR,
     &  WORKSTATION,PROJECTS,NUM_PROJECT)
C
***	MODULE	FLN_RETRIEVE_PROJECTS
***	IDENT	03MY88
C
C Copyright Laser-Scan Laboratories Ltd., Cambridge, England
C
C Author M.W.S. Reid
C
C 	Created					MWSR    18-Apr-1988
C
C retrieves all PROJECTs that may be carried out by the specified operator
C on the given workstation. 
C Preferable PROJECT is first one in list
C decreasing order of priority thro' array
C
	IMPLICIT NONE
C
C Parameters
	INCLUDE	'LSL$CMNFLOWLINE:FLOW.PAR'
	INCLUDE	'LSL$CMNFLOWLINE:FLOWLINEMSG.PAR'
	INTEGER*4	SS$_NORMAL
	EXTERNAL	SS$_NORMAL
C
C Arguments
	CHARACTER*(*)	OPERATOR	! IN
	CHARACTER*(*)   WORKSTATION	! IN
	CHARACTER*(*)   PROJECTS(FLN_MAX_PROJECT) ! OUT - array 
	INTEGER*4	NUM_PROJECT	! OUT - number of PROJECTs
C
C Functions
	INTEGER*4	FLN_CHECK_OPERATOR_AUTH
	INTEGER*4	FLN_CHECK_WORKSTATION_AUTH
	INTEGER*4	FLN_RETRIEVE_CURRENT_PROJECT
C
C Local Variables
	INTEGER*4	I
	INTEGER*4	COUNT_PROJECT
	CHARACTER*20	TEMP_PROJECTS(FLN_MAX_PROJECT)
	LOGICAL		IS_AUTHORISED
	CHARACTER*20	PROJECTID
	LOGICAL 	THIS_PROJECT
	INTEGER*4	NUM_ERR
C
&RDB&   DATABASE FILENAME 'LSL$FLN_DATABASE:FLOWLINE'
C
	FLN_RETRIEVE_PROJECTS = %LOC(SS$_NORMAL)
C
C first have to get the PROJECT on which this operator last worked 
	FLN_RETRIEVE_PROJECTS = FLN_RETRIEVE_CURRENT_PROJECT
     &  (OPERATOR,PROJECTID,THIS_PROJECT)
	IF (.NOT. FLN_RETRIEVE_PROJECTS) GOTO 999
	IF (THIS_PROJECT) THEN
	   TEMP_PROJECTS(1) = PROJECTID
	   COUNT_PROJECT= 1
	ELSE  
	   COUNT_PROJECT= 0
	   PROJECTID= ' '
	ENDIF
C 
C retrieve all the active PROJECTs with the given project
	NUM_ERR = 0
20	CONTINUE
&RDB&   START_TRANSACTION READ_ONLY RESERVING PROJECT
&RDB&   FOR SHARED
&RDB&   READ WAIT
&RDB&	   ON ERROR
	      NUM_ERR = NUM_ERR+1
	      IF (NUM_ERR .GT. 5) THEN
		 FLN_RETRIEVE_PROJECTS = RDB$STATUS
		 GOTO 999
	      ENDIF
C
C try again - probably deadlock
	      CALL LIB$WAIT(FLN_PSE)
	      GOTO 20
&RDB&	   END_ERROR
C
C retrieve all the PROJECTs in the appropriate order, except the
C one we may already have got
C only retrieve the first FLN_MAX_PROJECT - 1 of them
&RDB&   FOR FIRST 99 P IN PROJECT
&RDB&   WITH P.PROJECT_STATUS = 'Active'
&RDB&   AND P.PROJECT_ID NE PROJECTID
&RDB&   SORTED BY DESCENDING P.PRIORITY,
&RDB&   ASCENDING P.PROJECT_ID
&RDB&	   ON ERROR
	      NUM_ERR = NUM_ERR+1
	      IF (NUM_ERR .GT. 5) THEN
		 FLN_RETRIEVE_PROJECTS = RDB$STATUS
&RDB&	         ROLLBACK
		 GOTO 999
	      ENDIF
&RDB&	      ROLLBACK
C
C try again - probably deadlock
	      CALL LIB$WAIT(FLN_PSE)
	      GOTO 20
&RDB&	   END_ERROR
	   COUNT_PROJECT= COUNT_PROJECT+1
&RDB&      GET
&RDB&	      ON ERROR
	         NUM_ERR = NUM_ERR+1
	         IF (NUM_ERR .GT. 5) THEN
		    FLN_RETRIEVE_PROJECTS = RDB$STATUS
&RDB&	            ROLLBACK
		    GOTO 999
	         ENDIF
&RDB&	         ROLLBACK
C
C try again - probably deadlock
	         CALL LIB$WAIT(FLN_PSE)
	         GOTO 20
&RDB&	      END_ERROR
&RDB&         TEMP_PROJECTS(COUNT_PROJECT) = P.PROJECT_ID;
&RDB&      END_GET
&RDB&   END_FOR   
&RDB&   COMMIT
C
C for each of the PROJECTs check the authorisation
C
	NUM_PROJECT= 0
	DO 30 I = 1, COUNT_PROJECT
C
C operator authorisatiion for PROJECT
	   FLN_RETRIEVE_PROJECTS= 
     &	   FLN_CHECK_OPERATOR_AUTH
     &	   ('PJ',OPERATOR,TEMP_PROJECTS(I),IS_AUTHORISED)
	   IF (.NOT. FLN_RETRIEVE_PROJECTS) GOTO 999
	   IF (.NOT. IS_AUTHORISED) GOTO 30
C
C workstation authorisation for PROJECT
	   FLN_RETRIEVE_PROJECTS= 
     &	   FLN_CHECK_WORKSTATION_AUTH
     &	   ('PJ',WORKSTATION,TEMP_PROJECTS(I),IS_AUTHORISED)
	   IF (.NOT. FLN_RETRIEVE_PROJECTS) GOTO 999
C
	   IF ( IS_AUTHORISED) THEN
	      NUM_PROJECT= NUM_PROJECT+1  
	      PROJECTS(NUM_PROJECT) =  TEMP_PROJECTS(I)
	   ENDIF
30	CONTINUE
C
999	RETURN
	END
C
