	INTEGER*4 FUNCTION FLN_RETRIEVE_ALL_WORKSTATIONS
     &	(WORKSTATION_ID,CURR_OPER,AUTH_REC,
     &	 NUM_WORK,NUM_OPER,NUM_AUTH)
C
***	MODULE	FLN_RETRIEVE_ALL_WORKSTATIONS
***	IDENT	24MY88
C
C Copyright Laser-Scan Laboratories Ltd., Cambridge, England
C
C Author M.W.S. Reid
C
C 	Created					MWSR    23-May-1988
C
C retrieves all the workstation records from the database
C and any operators working on it
C
	IMPLICIT NONE
C
C Parameters
	INCLUDE	'LSL$CMNFLOWLINE:FLOW.PAR'
	INCLUDE	'LSL$CMNFLOWLINE:FLOW.STR'
	INCLUDE	'LSL$CMNFLOWLINE:FLOWLINEMSG.PAR'
	INTEGER*4	SS$_NORMAL
	EXTERNAL	SS$_NORMAL
C
C Arguments
	CHARACTER*(*)	WORKSTATION_ID(FLN_MAX_WORK)  ! WORKSTATIONs
	CHARACTER*(*)   CURR_OPER(FLN_MAX_WORK,FLN_MAX_OPER) 
C						! current operators
	RECORD/FLN_AUTH/AUTH_REC(FLN_MAX_WORK,FLN_MAX_AUTH) 
C						   ! authorisation recs
	INTEGER*4	NUM_WORK		   ! number of 
C						   ! workstations
	INTEGER*4	NUM_OPER(FLN_MAX_WORK)	   ! number of operators
	INTEGER*4	NUM_AUTH(FLN_MAX_WORK)	   ! number of 
C						   ! authorisations
C Local Variables
	INTEGER*4	NUM_ERR
	INTEGER*4	YES_NO
	INTEGER*4	CURR_JOB_ID
	CHARACTER*2	TYPE
	CHARACTER*20	ID
C
&RDB&   DATABASE FILENAME  'LSL$FLN_DATABASE:FLOWLINE'
C
	FLN_RETRIEVE_ALL_WORKSTATIONS = %LOC(SS$_NORMAL)
	NUM_ERR = 0
20	CONTINUE
	NUM_WORK= 0
&RDB&   START_TRANSACTION READ_ONLY RESERVING WORKSTATION,SESSION, 
&RDB&   WORKSTATION_AUTHORISATION
&RDB&   FOR SHARED READ WAIT
&RDB&	   ON ERROR
	      NUM_ERR = NUM_ERR+1
	      IF (NUM_ERR .GT. 5) THEN
		 FLN_RETRIEVE_ALL_WORKSTATIONS = RDB$STATUS
		 GOTO 999
	      ENDIF
C
C only possible error is deadlock 
	      CALL LIB$WAIT(FLN_PSE)
	      GOTO 20
&RDB&	   END_ERROR
C
&RDB&   FOR W IN WORKSTATION 
&RDB&	   ON ERROR
	      NUM_ERR = NUM_ERR+1
	      IF (NUM_ERR .GT. 5) THEN
		 FLN_RETRIEVE_ALL_WORKSTATIONS = RDB$STATUS
&RDB&	         ROLLBACK
		 GOTO 999
	      ENDIF
&RDB&	      ROLLBACK
C
C only possible error is deadlock 
	      CALL LIB$WAIT(FLN_PSE)
	      GOTO 20
&RDB&	   END_ERROR
C
	   NUM_WORK= NUM_WORK+1
&RDB&      GET
&RDB&	      ON ERROR
	         NUM_ERR = NUM_ERR+1
	         IF (NUM_ERR .GT. 5) THEN
		    FLN_RETRIEVE_ALL_WORKSTATIONS = RDB$STATUS
&RDB&	            ROLLBACK
		    GOTO 999
	         ENDIF
&RDB&	         ROLLBACK
C
C only possible error is deadlock 
	         CALL LIB$WAIT(FLN_PSE)
	         GOTO 20
&RDB&	      END_ERROR
&RDB&         WORKSTATION_ID(NUM_WORK) = W.WORKSTATION_ID;
&RDB&      END_GET
C
C get all operators for this WORKSTATION
C It is possible to have more than one operator working on the 
C same workstation_id  because more than one workstation 
C may have the same id
	   NUM_OPER(NUM_WORK)= 0
&RDB&      FOR FIRST 99 S  IN SESSION 
&RDB&      WITH S.WORKSTATION_ID  = WORKSTATION_ID(NUM_WORK)
&RDB&      AND S.SESS_STATUS MISSING
&RDB&	      ON ERROR
	         NUM_ERR = NUM_ERR+1
	         IF (NUM_ERR .GT. 5) THEN
		    FLN_RETRIEVE_ALL_WORKSTATIONS = RDB$STATUS
&RDB&	            ROLLBACK
		    GOTO 999
	         ENDIF
&RDB&	         ROLLBACK
C
C only possible error is deadlock 
	         CALL LIB$WAIT(FLN_PSE)
	         GOTO 20
&RDB&	      END_ERROR
	      NUM_OPER(NUM_WORK)=NUM_OPER(NUM_WORK)+1
&RDB&         GET
&RDB&	         ON ERROR
	            NUM_ERR = NUM_ERR+1
	            IF (NUM_ERR .GT. 5) THEN
		       FLN_RETRIEVE_ALL_WORKSTATIONS = RDB$STATUS
&RDB&	               ROLLBACK
		       GOTO 999
	            ENDIF
&RDB&	            ROLLBACK
C
C only possible error is deadlock 
	            CALL LIB$WAIT(FLN_PSE)
	            GOTO 20
&RDB&	         END_ERROR
&RDB&            CURR_OPER(NUM_WORK,NUM_OPER(NUM_WORK))= S.OPERATOR_ID;
&RDB&         END_GET
&RDB&      END_FOR
C
C all the authorisation records 
	   NUM_AUTH(NUM_WORK) = 0
&RDB&      FOR WA IN WORKSTATION_AUTHORISATION 
&RDB&      WITH WA.WORKSTATION_ID = WORKSTATION_ID(NUM_WORK)
&RDB&	      ON ERROR
	         NUM_ERR = NUM_ERR+1
	         IF (NUM_ERR .GT. 5) THEN
		    FLN_RETRIEVE_ALL_WORKSTATIONS = RDB$STATUS
&RDB&	            ROLLBACK
		    GOTO 999
	         ENDIF
&RDB&	         ROLLBACK
C
C only possible error is deadlock 
	         CALL LIB$WAIT(FLN_PSE)
	         GOTO 20
&RDB&	      END_ERROR
C
	      NUM_AUTH(NUM_WORK) = NUM_AUTH(NUM_WORK)+1
&RDB&         GET
&RDB&	         ON ERROR
	            NUM_ERR = NUM_ERR+1
	            IF (NUM_ERR .GT. 5) THEN
		       FLN_RETRIEVE_ALL_WORKSTATIONS = RDB$STATUS
&RDB&	               ROLLBACK
		       GOTO 999
	            ENDIF
&RDB&	            ROLLBACK
C
C only possible error is deadlock 
	            CALL LIB$WAIT(FLN_PSE)
	            GOTO 20
&RDB&	         END_ERROR
&RDB&            YES_NO = WA.YES_NO;
&RDB&            TYPE= WA.AUTHORISATION_TYPE;
&RDB&            ID  = WA.ID;
&RDB&         END_GET
C
C translate the YES_NO field from logical to integer
	      IF(YES_NO .EQ. 1) THEN
	         AUTH_REC(NUM_WORK,NUM_AUTH(NUM_WORK)).YES_NO = 'Y'
	      ELSEIF (YES_NO .EQ. 3) THEN
	         AUTH_REC(NUM_WORK,NUM_AUTH(NUM_WORK)).YES_NO = 'E'
	      ELSE
	         AUTH_REC(NUM_WORK,NUM_AUTH(NUM_WORK)).YES_NO = 'N'
	      ENDIF
	      AUTH_REC(NUM_WORK,NUM_AUTH(NUM_WORK)).TYPE = TYPE
	      AUTH_REC(NUM_WORK,NUM_AUTH(NUM_WORK)).ID = ID
	      AUTH_REC(NUM_WORK,NUM_AUTH(NUM_WORK)).OP_WORK =
     &		                        WORKSTATION_ID(NUM_WORK)
&RDB&      END_FOR
&RDB&   END_FOR
C
&RDB&   COMMIT	 
C
999	RETURN
	END
