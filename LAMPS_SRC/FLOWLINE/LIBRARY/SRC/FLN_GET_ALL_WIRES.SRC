	INTEGER*4 FUNCTION FLN_GET_ALL_WIRES(FLOWLINE_ID,ELMNT_ID,
     &	WIRE,NUM_WIRE)
C
***	MODULE	FLN_GET_ALL_WIRES
***	IDENT	17JL91
C
C Copyright Laser-Scan Laboratories Ltd., Cambridge, England
C
C Author M.W.S. Reid
C
C 	Created					MWSR    23-Apr-1988
C
C gets all the wires which emanate from the specified element
C
	IMPLICIT NONE
C
C Parameters
	INCLUDE	'LSL$CMNFLOWLINE:FLOW.PAR'
	INCLUDE	'LSL$CMNFLOWLINE:FLOWLINEMSG.PAR'
	INTEGER*4	SS$_NORMAL
	EXTERNAL	SS$_NORMAL
C
C Arguments
	CHARACTER*(*)	FLOWLINE_ID
	CHARACTER*(*)	ELMNT_ID
	CHARACTER*(*)	WIRE(FLN_MAXWIRE)
	INTEGER*4	NUM_WIRE
C
C Local Variables
	INTEGER*4	NUM_ERR
	CHARACTER*20	LOC_WIRE
C
&RDB&   DATABASE FILENAME  'LSL$FLN_DATABASE:FLOWLINE'
C
C assume success
	FLN_GET_ALL_WIRES= %LOC(SS$_NORMAL)
C
	NUM_ERR = 0
20	CONTINUE
	NUM_WIRE = 0
&RDB&   START_TRANSACTION READ_ONLY RESERVING OUTCOME FOR 
&RDB&   SHARED READ WAIT
&RDB&	ON ERROR
	   NUM_ERR = NUM_ERR+1
	   IF (NUM_ERR .GT. 5) THEN
	      FLN_GET_ALL_WIRES = RDB$STATUS
	      GOTO 999
	   ENDIF
C
C try again - probably deadlock
	   CALL LIB$WAIT(FLN_PSE)
	   GOTO 20
&RDB&	END_ERROR
C
&RDB&   FOR O  IN OUTCOME WITH O.ELEMENT_ID = ELMNT_ID
&RDB&      AND O.FLOWLINE_ID  = FLOWLINE_ID 
&RDB&	   ON ERROR
	      NUM_ERR = NUM_ERR+1
	      IF (NUM_ERR .GT. 5) THEN
		 FLN_GET_ALL_WIRES= RDB$STATUS
&RDB&	         ROLLBACK
		 GOTO 999
	      ENDIF
&RDB&	      ROLLBACK
C
C try again - probably deadlock
	      CALL LIB$WAIT(FLN_PSE)
	      GOTO 20
&RDB&	   END_ERROR
&RDB&      GET
&RDB&	      ON ERROR
	         NUM_ERR = NUM_ERR+1
	         IF (NUM_ERR .GT. 5) THEN
		    FLN_GET_ALL_WIRES= RDB$STATUS
&RDB&	            ROLLBACK
		    GOTO 999
	         ENDIF
&RDB&	         ROLLBACK
C
C try again - probably deadlock
	         CALL LIB$WAIT(FLN_PSE)
	         GOTO 20
&RDB&	      END_ERROR
&RDB&         LOC_WIRE = O.WIRE_ID;
&RDB&      END_GET
	   CALL FLN_ADD_STRING(WIRE,NUM_WIRE,LOC_WIRE)
&RDB&   END_FOR
&RDB&   COMMIT
C
999	RETURN
	END
