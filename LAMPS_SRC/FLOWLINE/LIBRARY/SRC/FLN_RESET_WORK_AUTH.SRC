	INTEGER*4 FUNCTION FLN_RESET_WORK_AUTH(NUM_REC,
     &                                       AUTH_REC)
C
***	MODULE	FLN_RESET_WORK_AUTH
***	IDENT	21SE88
C
C Copyright Laser-Scan Laboratories Ltd., Cambridge, England
C
C Author M.W.S. Reid
C
C 	Created					MWSR    11-May-1988
C
C resets all the WORKSTATION records to the supplied ones.
C Delete the old ones first
C 
C
	IMPLICIT NONE
C
C Parameters
	INCLUDE	'LSL$CMNFLOWLINE:FLOW.PAR'
	INCLUDE	'LSL$CMNFLOWLINE:FLOW.STR'
	INCLUDE	'LSL$CMNFLOWLINE:FLOWLINEMSG.PAR'
	INTEGER*4	SS$_NORMAL
	EXTERNAL	SS$_NORMAL
C
C Arguments
	INTEGER*4  NUM_REC			! IN - number of recs
	RECORD/FLN_AUTH/AUTH_REC(FLN_MAX_AUTH)	! IN - authorise recs
C
C Local Variables
C
	INTEGER*4	NUM_ERR
	INTEGER*4	YESNO
	INTEGER*4	I
	CHARACTER*2	TYPE
	CHARACTER*20	ID
	CHARACTER*20	WORKSTATION_ID
C
&RDB&   DATABASE FILENAME 'LSL$FLN_DATABASE:FLOWLINE'
C
	FLN_RESET_WORK_AUTH = %LOC(SS$_NORMAL)	
C
	NUM_ERR = 0
20	CONTINUE
&RDB&   START_TRANSACTION READ_WRITE WAIT RESERVING 
&RDB&   WORKSTATION_AUTHORISATION FOR PROTECTED WRITE
&RDB&	ON ERROR
	   NUM_ERR = NUM_ERR+1
	   IF (NUM_ERR .GT. 5) THEN
	      FLN_RESET_WORK_AUTH = RDB$STATUS
	      GOTO 999
	   ENDIF
C
C try again - probably deadlock
	   CALL LIB$WAIT(FLN_PSE)
	   GOTO 20
&RDB&	END_ERROR
C
C delete all existing records for the WORKSTATION
C all records should have the same WORKSTATION in this routine
	WORKSTATION_ID = AUTH_REC(1).OP_WORK
C
&RDB&   FOR O IN WORKSTATION_AUTHORISATION 
&RDB&   WITH O.WORKSTATION_ID = WORKSTATION_ID
&RDB&	   ON ERROR
	      NUM_ERR = NUM_ERR+1
	      IF (NUM_ERR .GT. 5) THEN
	         FLN_RESET_WORK_AUTH = RDB$STATUS
&RDB&            ROLLBACK
	         GOTO 999
	      ENDIF
C
C try again - probably deadlock
&RDB&         ROLLBACK
	      CALL LIB$WAIT(FLN_PSE)
	      GOTO 20
&RDB&	   END_ERROR
&RDB&      ERASE O
&RDB&	      ON ERROR
	         NUM_ERR = NUM_ERR+1
	         IF (NUM_ERR .GT. 5) THEN
	            FLN_RESET_WORK_AUTH = RDB$STATUS
&RDB&               ROLLBACK
	            GOTO 999
	         ENDIF
C
C try again - probably deadlock
&RDB&            ROLLBACK
	         CALL LIB$WAIT(FLN_PSE)
	         GOTO 20
&RDB&	      END_ERROR
&RDB&   END_FOR
C
C store the new records
	DO 30 I = 1,NUM_REC
C
C RDB can't cope with records
	   WORKSTATION_ID  = AUTH_REC(I).OP_WORK
	   TYPE         = AUTH_REC(I).TYPE
	   ID           = AUTH_REC(I).ID
C
	   IF (AUTH_REC(I).YES_NO .EQ. 'Y') THEN
C
C translate YESNO field
	      YESNO = 1
	   ELSEIF (AUTH_REC(I).YES_NO .EQ. 'E') THEN
	      YESNO = 3
	      ID  = ' '
	   ELSE
	      YESNO = 2
	   ENDIF
C
C
&RDB&      STORE O IN WORKSTATION_AUTHORISATION USING
&RDB&	      ON ERROR
	         NUM_ERR = NUM_ERR+1
	         IF (NUM_ERR .GT. 5) THEN
	            FLN_RESET_WORK_AUTH = RDB$STATUS
&RDB&               ROLLBACK
	            GOTO 999
	         ENDIF
C
C try again - probably deadlock
&RDB&            ROLLBACK
	         CALL LIB$WAIT(FLN_PSE)
	         GOTO 20
&RDB&	      END_ERROR
C
&RDB&         O.WORKSTATION_ID = WORKSTATION_ID;
&RDB&         O.AUTHORISATION_TYPE = TYPE;
&RDB&         O.YES_NO = YESNO;
&RDB&         O.ID = ID;
&RDB&      END_STORE 
30	CONTINUE
C
&RDB&   COMMIT
C	
999	RETURN
	END
