C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1991-09-03 10:21:48.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	INTEGER*4 FUNCTION FLN_CHECK_WORKSTATION_AUTH
     &	 (TYPE,WORKSTATION,ID,IS_AUTHORISED)
C
***	MODULE	FLN_CHECK_WORKSTATION_AUTH
***	IDENT	03SE91
C
C Copyright Laser-Scan Laboratories Ltd., Cambridge, England
C
C Author M.W.S. Reid
C
C 	Created					MWSR    15-Apr-1988
C
C checks the authorisation of the specified workstation for the 
C given authorisation type
C 
C
	IMPLICIT NONE
C
C Parameters
	INCLUDE	'LSL$CMNFLOWLINE:FLOW.PAR'
	INCLUDE	'LSL$CMNFLOWLINE:FLOWLINEMSG.PAR'
	INTEGER*4	SS$_NORMAL
	EXTERNAL	SS$_NORMAL
C
C Arguments
	CHARACTER*2	TYPE		! the type of authorisation
	CHARACTER*(*)   WORKSTATION 	! the workstation
	CHARACTER*(*)	ID		! ID of thing to test for
	LOGICAL		IS_AUTHORISED	! true if workstation is authorised
C
C Local Variables
	INTEGER*4	NUM_POS_AO_TI	! number of YES records for 
C					! all workstations on this ident
	INTEGER*4	NUM_POS_TO_TI	! number of YES records for 
C					! this workstation on this ident
	INTEGER*4	NUM_NEG_TO_TI	! number of YES records for 
C					! this workstation on this ident
	INTEGER*4	NUM_POS_TO_AI 	! number of YES records for 
C					! this workstation on all idents
	INTEGER*4	NUM_EVERY_TO	! number of everything records
C					!  for this workstation 
	INTEGER*4	NUM_ERR
C
&RDB&   DATABASE FILENAME 'LSL$FLN_DATABASE:FLOWLINE'
C
C assume success
	FLN_CHECK_WORKSTATION_AUTH = %LOC(SS$_NORMAL)

C first check for the presence of any positive authorisation records
C for this workstation type and authorisation type
C
	NUM_ERR = 0
C
20	CONTINUE
C
	NUM_POS_AO_TI  = 0
	NUM_POS_TO_TI  = 0
	NUM_NEG_TO_TI  = 0
	NUM_POS_TO_AI  = 0
	NUM_EVERY_TO = 0
C
&RDB&   START_TRANSACTION READ_ONLY RESERVING WORKSTATION_AUTHORISATION
&RDB&   FOR SHARED READ WAIT
&RDB&	ON ERROR
	   NUM_ERR = NUM_ERR+1
	   IF (NUM_ERR .GT. 5) THEN
	      FLN_CHECK_WORKSTATION_AUTH = RDB$STATUS
	      GOTO 999
	   ENDIF
C
C try again - probably deadlock
	   CALL LIB$WAIT(FLN_PSE)
	   GOTO 20
&RDB&	END_ERROR
C
&RDB&   GET 
&RDB&	   ON ERROR
	      NUM_ERR = NUM_ERR+1
	      IF (NUM_ERR .GT. 5) THEN
		 FLN_CHECK_WORKSTATION_AUTH = RDB$STATUS
&RDB&	         ROLLBACK
		 GOTO 999
	      ENDIF
&RDB&	      ROLLBACK
C
C try again - probably deadlock
	      CALL LIB$WAIT(FLN_PSE)
	      GOTO 20
&RDB&	   END_ERROR
&RDB&      NUM_POS_TO_TI = COUNT OF O IN WORKSTATION_AUTHORISATION WITH 
&RDB&                      O.WORKSTATION_ID = WORKSTATION
&RDB&                      AND O.AUTHORISATION_TYPE = TYPE AND
&RDB&                      O.YES_NO = 1 AND O.ID = ID; 
&RDB&   END_GET
C
	IF (NUM_POS_TO_TI .GT. 0) THEN
C
C explicit YES, so authorised
	    IS_AUTHORISED = .TRUE.
C
	ELSE
C
&RDB&      GET 
&RDB&	      ON ERROR
	         NUM_ERR = NUM_ERR+1
	         IF (NUM_ERR .GT. 5) THEN
		    FLN_CHECK_WORKSTATION_AUTH = RDB$STATUS
&RDB&	            ROLLBACK
		    GOTO 999
	         ENDIF
&RDB&	         ROLLBACK
C
C try again - probably deadlock
	         CALL LIB$WAIT(FLN_PSE)
	         GOTO 20
&RDB&	      END_ERROR
&RDB&         NUM_NEG_TO_TI= COUNT OF O IN WORKSTATION_AUTHORISATION 
&RDB&                 WITH O.WORKSTATION_ID = WORKSTATION
&RDB&                 AND O.AUTHORISATION_TYPE = TYPE AND
&RDB&                 O.YES_NO = 2 AND O.ID = ID; 
&RDB&      END_GET
C
	   IF (NUM_NEG_TO_TI .GT. 0) THEN
C
C explicit NO, so not authorised
	      IS_AUTHORISED = .FALSE.
C
	   ELSE
C
C no authorisation records at all for this authorisation type, 
C check for someone else being authorised for this particular id
&RDB&         GET 
&RDB&	         ON ERROR
	            NUM_ERR = NUM_ERR+1
	            IF (NUM_ERR .GT. 5) THEN
		       FLN_CHECK_WORKSTATION_AUTH = RDB$STATUS
&RDB&	               ROLLBACK
		       GOTO 999
	            ENDIF
&RDB&	            ROLLBACK
C
C try again - probably deadlock
	            CALL LIB$WAIT(FLN_PSE)
	            GOTO 20
&RDB&	         END_ERROR
&RDB&            NUM_EVERY_TO =
&RDB&                      COUNT OF O IN WORKSTATION_AUTHORISATION WITH
&RDB&                      O.WORKSTATION_ID = WORKSTATION 
&RDB&                      AND O.AUTHORISATION_TYPE = TYPE AND
&RDB&                      O.YES_NO = 3;
&RDB&         END_GET 
C
	      IF (NUM_EVERY_TO .GT. 0 ) THEN
C
C EVERYTHING, so authorised
	         IS_AUTHORISED = .TRUE.
C
	      ELSE
C
&RDB&            GET
&RDB&	            ON ERROR
	               NUM_ERR = NUM_ERR+1
	               IF (NUM_ERR .GT. 5) THEN
		          FLN_CHECK_WORKSTATION_AUTH = RDB$STATUS
&RDB&	                  ROLLBACK
		          GOTO 999
	               ENDIF
&RDB&	               ROLLBACK
C
C try again - probably deadlock
	               CALL LIB$WAIT(FLN_PSE)
	               GOTO 20
&RDB&	            END_ERROR
&RDB&               NUM_POS_TO_AI =
&RDB&                      COUNT OF O IN WORKSTATION_AUTHORISATION WITH 
&RDB&                      O.WORKSTATION_ID = WORKSTATION
&RDB&                      AND O.AUTHORISATION_TYPE = TYPE AND
&RDB&                      O.YES_NO = 1;
&RDB&            END_GET
C
	         IF (NUM_POS_TO_AI .GT. 0) THEN
C
C Some explicit YES records, so not authorised
		    IS_AUTHORISED = .FALSE.
C
	         ELSE
C
C now check for the positive occurence for this ID
&RDB&               GET
&RDB&	               ON ERROR
	                  NUM_ERR = NUM_ERR+1
	                  IF (NUM_ERR .GT. 5) THEN
		             FLN_CHECK_WORKSTATION_AUTH = RDB$STATUS
&RDB&	                     ROLLBACK
		             GOTO 999
	                  ENDIF
&RDB&	                  ROLLBACK
C
C try again - probably deadlock
	                  CALL LIB$WAIT(FLN_PSE)
	                  GOTO 20
&RDB&	               END_ERROR
&RDB&                  NUM_POS_AO_TI =
&RDB&                      COUNT OF O IN WORKSTATION_AUTHORISATION 
&RDB&                      WITH
&RDB&                      O.AUTHORISATION_TYPE = TYPE AND 
&RDB&                      O.YES_NO = 1 AND O.ID = ID ;
&RDB&               END_GET
C
	            IF (NUM_POS_AO_TI .GT. 0) THEN
C
C Others have explicit YES, so not authorised
	               IS_AUTHORISED = .FALSE.
C
	            ELSE
C
C Or, failing everything else, authorised
	               IS_AUTHORISED = .TRUE.
                    ENDIF
                 ENDIF
              ENDIF
           ENDIF
	ENDIF
C
900	CONTINUE
&RDB&   COMMIT
C
999	RETURN
	END
