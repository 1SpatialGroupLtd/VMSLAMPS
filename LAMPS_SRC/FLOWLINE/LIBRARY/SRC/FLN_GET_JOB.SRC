C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1988-05-17 11:53:28.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	INTEGER*4 FUNCTION FLN_GET_JOB(PROJECT_ID,JOB_NAME,
     &                                JOB_ID,FLOWLINE_ID)
C
***	MODULE	FLN_GET_JOB
***	IDENT	12MY88
C
C Copyright Laser-Scan Laboratories Ltd., Cambridge, England
C
C Author M.W.S. Reid
C
C 	Created					MWSR    06-May-1988
C
C checks that the specified JOB exists in the database
C
	IMPLICIT NONE
C
C Parameters
	INCLUDE	'LSL$CMNFLOWLINE:FLOW.PAR'
	INCLUDE	'LSL$CMNFLOWLINE:FLOWLINEMSG.PAR'
C
C Arguments
	CHARACTER*(*)		PROJECT_ID
	CHARACTER*(*)		JOB_NAME
	INTEGER*4		JOB_ID
	CHARACTER*(*)		FLOWLINE_ID
C
C Functions
C
C Local Variables
	INTEGER*4	NUM_ERR
	INTEGER*4	NUM_JOB
C
&RDB&	DATABASE FILENAME 'LSL$FLN_DATABASE:FLOWLINE'
C
	NUM_ERR = 0
C
20	CONTINUE
&RDB&   START_TRANSACTION READ_ONLY WAIT RESERVING JOB FOR 
&RDB&   SHARED READ
&RDB&	ON ERROR
	   NUM_ERR = NUM_ERR+1
	   IF (NUM_ERR .GT. 5) THEN
	      FLN_GET_JOB = RDB$STATUS
	      GOTO 999
	   ENDIF
C
C try again - probably deadlock
	   CALL LIB$WAIT(FLN_PSE)
	   GOTO 20
&RDB&	END_ERROR
C
	NUM_JOB = 0
&RDB&   FOR J IN JOB WITH J.JOB_NAME  = JOB_NAME 
&RDB&   AND J.PROJECT_ID  = PROJECT_ID
&RDB&	   ON ERROR
	      NUM_ERR = NUM_ERR+1
	      IF (NUM_ERR .GT. 5) THEN
	         FLN_GET_JOB= RDB$STATUS
&RDB&            ROLLBACK
	         GOTO 999
	      ENDIF
C
C try again - probably deadlock
&RDB&         ROLLBACK
	      CALL LIB$WAIT(FLN_PSE)
	      GOTO 20
&RDB&	   END_ERROR
	NUM_JOB= NUM_JOB+1
&RDB&   GET    	   
&RDB&	   ON ERROR
	      NUM_ERR = NUM_ERR+1
	      IF (NUM_ERR .GT. 5) THEN
	         FLN_GET_JOB= RDB$STATUS
&RDB&            ROLLBACK
	         GOTO 999
	      ENDIF
C
C try again - probably deadlock
&RDB&         ROLLBACK
	      CALL LIB$WAIT(FLN_PSE)
	      GOTO 20
&RDB&	   END_ERROR
&RDB&       JOB_ID  = J.JOB_ID;
&RDB&       FLOWLINE_ID = J.FLOWLINE_ID;	   
&RDB&   END_GET
&RDB&   END_FOR
C
	IF (NUM_JOB.EQ. 0) THEN
	   FLN_GET_JOB = FLN__NOSUCHJOB
&RDB&      ROLLBACK
	   GOTO 999
	ENDIF
&RDB&   COMMIT
C
	FLN_GET_JOB = RDB$STATUS
C
999	RETURN
	END
