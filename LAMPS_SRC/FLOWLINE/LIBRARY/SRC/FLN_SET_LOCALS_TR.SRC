	INTEGER*4 FUNCTION FLN_SET_LOCALS_TR(TASK_ID,NUM_PAR,PARAMETERS)
C
***	MODULE	FLN_SET_LOCALS_TR
***	IDENT	06OC88
C
C Copyright Laser-Scan Laboratories Ltd., Cambridge, England
C
C Author M.W.S. Reid
C
C 	Created					MWSR    29-Sep-1988
C
C sets up local parameters for a task.
C Applies only to setting local parameters up for the current task - not
C for subsequent tasks - ie it is not called from SESS_COMPLETE.
C
	IMPLICIT NONE
C
C Parameters
	INCLUDE	'LSL$CMNFLOWLINE:FLOW.PAR'
	INCLUDE	'LSL$CMNFLOWLINE:FLOWLINEMSG.PAR'
	INTEGER*4	SS$_NORMAL
	EXTERNAL	SS$_NORMAL
C
C Arguments
	INTEGER*4	TASK_ID			! IN - task	
	INTEGER*4	NUM_PAR			! IN - number of params
	CHARACTER*(*) 	PARAMETERS(FLN_MAX_PAR)	! IN - the parameters
C
C Function
	INTEGER*4	FLN_GET_PARAMETER_ID
C
C RDB return codes
	INTEGER*4	RDB$_DEADLOCK
	EXTERNAL	RDB$_DEADLOCK
C
C Local
	INTEGER*4	I
	INTEGER*4	COUNT_TASK
	INTEGER*4	PARAMETER_ID
	INTEGER*4	NUM_ERR
C
&RDB&   DATABASE FILENAME 'LSL$FLN_DATABASE:FLOWLINE'
C
	FLN_SET_LOCALS_TR = %LOC(SS$_NORMAL)
C
	COUNT_TASK = 0
	NUM_ERR = 0
20 	CONTINUE
&RDB&   START_TRANSACTION READ_WRITE RESERVING 
&RDB&   PARAMETER, TASK, PARAMETERID
&RDB&   FOR PROTECTED WRITE WAIT
&RDB&	ON ERROR
	   NUM_ERR = NUM_ERR+1
	   IF (NUM_ERR .GT. 5) THEN
	      FLN_SET_LOCALS_TR = RDB$STATUS
	      GOTO 999
	   ENDIF
C
C try again - probably deadlock
	   CALL LIB$WAIT(FLN_PSE)
	   GOTO 20
&RDB&	END_ERROR
C
C first retrieve the parameterid for the tasks in this job 
&RDB&   FOR T IN TASK WITH T.TASK_ID  = TASK_ID
C
&RDB&	   ON ERROR
	      NUM_ERR = NUM_ERR+1
	      IF (NUM_ERR .GT. 5) THEN
	         FLN_SET_LOCALS_TR = RDB$STATUS
&RDB&	         ROLLBACK
	         GOTO 999
	      ENDIF
C
C try again - probably deadlock
	      CALL LIB$WAIT(FLN_PSE)
	      GOTO 20
&RDB&	   END_ERROR
&RDB&      GET
&RDB&	      ON ERROR
	         NUM_ERR = NUM_ERR+1
	         IF (NUM_ERR .GT. 5) THEN
	            FLN_SET_LOCALS_TR = RDB$STATUS
&RDB&	            ROLLBACK
	            GOTO 999
	         ENDIF
C
C try again - probably deadlock
	         CALL LIB$WAIT(FLN_PSE)
	         GOTO 20
&RDB&	      END_ERROR
&RDB&         PARAMETER_ID = T.PARAMETER_ID;
&RDB&      END_GET
&RDB&   END_FOR
C
	IF (COUNT_TASK .EQ. 0) THEN
	   FLN_SET_LOCALS_TR= FLN__NOSUCHTASK
	ENDIF
	IF (PARAMETER_ID .EQ. -1) THEN		! -1 is missing value
C 
C if the parameterid is missing then it means there are no parameters
C for this task yet - so we need a parameter_id
	    FLN_SET_LOCALS_TR= FLN_GET_PARAMETER_ID(PARAMETER_ID)
	    IF (.NOT. FLN_SET_LOCALS_TR) GOTO 999
C
C modify the task record to put in the parameter_id
&RDB&       FOR T IN TASK WITH T.TASK_ID =TASK_ID
C
&RDB&	      ON ERROR
	         NUM_ERR = NUM_ERR+1
	         IF (NUM_ERR .GT. 5) THEN
	            FLN_SET_LOCALS_TR = RDB$STATUS
&RDB&	            ROLLBACK
	            GOTO 999
	         ENDIF
C
C try again - probably deadlock
	         CALL LIB$WAIT(FLN_PSE)
	         GOTO 20
&RDB&	      END_ERROR
&RDB&         MODIFY T USING
&RDB&	         ON ERROR
	            NUM_ERR = NUM_ERR+1
	            IF (NUM_ERR .GT. 5) THEN
	               FLN_SET_LOCALS_TR = RDB$STATUS
&RDB&	               ROLLBACK
	               GOTO 999
	            ENDIF
C
C try again - probably deadlock
	            CALL LIB$WAIT(FLN_PSE)
	            GOTO 20
&RDB&	         END_ERROR
&RDB&            T.PARAMETER_ID  = PARAMETER_ID;
&RDB&         END_MODIFY
&RDB&      END_FOR
	ENDIF
C
C now store the parameters in PARAMETER 
	DO 30 I = 1,NUM_PAR
C
&RDB&      STORE PA IN PARAMETER USING
C
C if its a deadlock then retry after waiting
&RDB&	      ON ERROR
	         NUM_ERR = NUM_ERR+1
	         IF (NUM_ERR .GT. 5) THEN
	            FLN_SET_LOCALS_TR = RDB$STATUS
&RDB&	            ROLLBACK
	            GOTO 999
	         ENDIF
C
C try again - probably deadlock
	         CALL LIB$WAIT(FLN_PSE)
	         GOTO 20
&RDB&	      END_ERROR
&RDB&         PA.PARAMETER_ID = PARAMETER_ID;
&RDB&         PA.PARAMETER_STRING = PARAMETERS(I);
&RDB&       END_STORE
30	CONTINUE
C
&RDB&   COMMIT
	FLN_SET_LOCALS_TR = RDB$STATUS
999	RETURN
	END
