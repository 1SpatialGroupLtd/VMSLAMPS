C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1988-10-05 17:32:20.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	INTEGER*4 FUNCTION FLN_GET_LOCALS(TASK_ID,NUM_PAR,PARAMETERS)
C
***	MODULE	FLN_GET_LOCALS
***	IDENT	05OC88
C
C Copyright Laser-Scan Laboratories Ltd., Cambridge, England
C
C Author M.W.S. Reid
C
C 	Created					MWSR    19-Apr-1988
C
C gets from the database all the local parameters associated with a
C task
C
	IMPLICIT NONE
C Parameters
	INCLUDE	'LSL$CMNFLOWLINE:FLOW.PAR'
	INCLUDE	'LSL$CMNFLOWLINE:FLOWLINEMSG.PAR'
	INTEGER*4	SS$_NORMAL
	EXTERNAL	SS$_NORMAL
C
C Arguments
	INTEGER*4	TASK_ID		! IN - task id
	INTEGER*4	NUM_PAR		!OUT - number of local params
	CHARACTER*(*)	PARAMETERS(FLN_MAX_PAR) !OUT
C
C Local Variables
	INTEGER*4	NUM_ERR
C
&RDB&   DATABASE FILENAME 'LSL$FLN_DATABASE:FLOWLINE'
C
	FLN_GET_LOCALS = %LOC(SS$_NORMAL)
C
	NUM_ERR = 0
20 	CONTINUE
&RDB&   START_TRANSACTION READ_ONLY RESERVING 
&RDB&   PARAMETER, TASK
&RDB&   FOR SHARED READ WAIT
&RDB&	ON ERROR
	   NUM_ERR = NUM_ERR+1
	   IF (NUM_ERR .GT. 5) THEN
	      FLN_GET_LOCALS = RDB$STATUS
	      GOTO 999
	   ENDIF
C
C try again - probably deadlock
	   CALL LIB$WAIT(FLN_PSE)
	   GOTO 20
&RDB&	END_ERROR
C
C get  the parameters
&RDB&   FOR T IN TASK CROSS PA IN PARAMETER OVER PARAMETER_ID
&RDB&      WITH T.TASK_ID  = TASK_ID 
&RDB&	   ON ERROR
	      NUM_ERR = NUM_ERR+1
	      IF (NUM_ERR .GT. 5) THEN
	         FLN_GET_LOCALS = RDB$STATUS
&RDB&	         ROLLBACK
	         GOTO 999
	      ENDIF
C
C try again - probably deadlock
&RDB&	      ROLLBACK
	      CALL LIB$WAIT(FLN_PSE)
	      GOTO 20
&RDB&	   END_ERROR
	   NUM_PAR = NUM_PAR +1
&RDB&      GET
&RDB&	      ON ERROR
	         NUM_ERR = NUM_ERR+1
	         IF (NUM_ERR .GT. 5) THEN
	            FLN_GET_LOCALS = RDB$STATUS
&RDB&	            ROLLBACK
	            GOTO 999
	         ENDIF
C
C try again - probably deadlock
&RDB&	         ROLLBACK
	         CALL LIB$WAIT(FLN_PSE)
	         GOTO 20
&RDB&	      END_ERROR
&RDB&         PARAMETERS(NUM_PAR) = PA.PARAMETER_STRING;
&RDB&      END_GET
&RDB&   END_FOR
C
&RDB&   COMMIT
999	RETURN
	END
