C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1988-04-19 18:44:38.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	INTEGER*4 FUNCTION FLN_LIST_AUTHORISED_TASKS
     &  (OPERATOR,WORKSTATION,JOB)
C
***	MODULE	FLN_LIST_AUTHORISED_TASKS
***	IDENT	19AP88
C
C Copyright Laser-Scan Laboratories Ltd., Cambridge, England
C
C Author M.W.S. Reid
C
C 	Created					MWSR    19-Apr-1988
C
C lists the tasks that an operator may carry out on given 
C workstation and job

C
	IMPLICIT NONE
C
C Parameters
	INCLUDE	'LSL$CMNFLOWLINE:FLOW.PAR'
	INCLUDE	'LSL$CMNFLOWLINE:FLOWLINEMSG.PAR'
	INTEGER*4	SS$_NORMAL
	EXTERNAL	SS$_NORMAL
C
C Arguments
	CHARACTER*(*)	OPERATOR	! IN
	CHARACTER*(*)   WORKSTATION	! IN
	INTEGER*4	JOB		! IN
C
C Common Blocks
C
C Functions
	INTEGER*4	FLN_RETRIEVE_TASKS
C
C Local Variables
	INTEGER*4	TASKS(FLN_MAX_TASK)
	CHARACTER*20	ELMNTS(FLN_MAX_TASK)
	INTEGER*4	NUM_TASK	
	INTEGER*4	I
C
C
	FLN_LIST_AUTHORISED_TASKS = FLN_RETRIEVE_TASKS(OPERATOR,
     &  WORKSTATION,JOB,TASKS,ELMNTS,NUM_TASK)
	IF (.NOT. FLN_LIST_AUTHORISED_TASKS) GOTO 999
C
	CALL WRITEF('List of Authorised Tasks')
	CALL WRITEF('Job %N  Operator %S Workstation %S',
     &  JOB,OPERATOR,WORKSTATION) 
	CALL WRITEF(' ')
	CALL WRITEF('TASK       ELEMENT')
C
	DO 10 I = 1,NUM_TASK
C
	    CALL WRITEF('%N         %S',TASKS(I),ELMNTS(I))
10	CONTINUE
C
999	RETURN
	END
