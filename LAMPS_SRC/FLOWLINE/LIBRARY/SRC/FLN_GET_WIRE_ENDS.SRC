	INTEGER*4 FUNCTION FLN_GET_WIRE_ENDS
     &	(FLN_ID,WIRE,NUM_WIRE,NEXT_ELEMENT,NUM_NEXT)
C
***	MODULE	FLN_GET_WIRE_ENDS
***	IDENT	17JL91
C
C Copyright Laser-Scan Laboratories Ltd., Cambridge, England
C
C Author M.W.S. Reid
C
C 	Created					MWSR    25-Feb-1988
C
C retrieves from the wire relation the elements at the ends of the 
C given wires
C
	IMPLICIT NONE
C
C Parameters
	INCLUDE	'LSL$CMNFLOWLINE:FLOW.PAR'
	INCLUDE	'LSL$CMNFLOWLINE:FLOWLINEMSG.PAR'
	INTEGER*4	SS$_NORMAL
	EXTERNAL	SS$_NORMAL
C
C Arguments
	CHARACTER*(*)	FLN_ID		! IN - flowline id
	INTEGER*4	NUM_WIRE	! IN - the number of wire ids
	CHARACTER*(*)	WIRE(NUM_WIRE)  ! IN - the wire ids
	INTEGER*4	NUM_NEXT	! OUT - the number of elements
	CHARACTER*20	NEXT_ELEMENT(FLN_MAXWIRE)
C					! OUT - elements
C
C Common Blocks
C
C Functions
C
C Local Variables
	INTEGER*4	I		! counter
	INTEGER*4	NUM_ERR
	CHARACTER*20	LOC_ELEMENT
C
&RDB&	DATABASE FILENAME 'LSL$FLN_DATABASE:FLOWLINE'
C
	FLN_GET_WIRE_ENDS = %LOC(SS$_NORMAL)
	NUM_ERR = 0
20	CONTINUE
&RDB&   START_TRANSACTION READ_ONLY RESERVING WIRE FOR SHARED READ WAIT
&RDB&	ON ERROR
	   NUM_ERR = NUM_ERR+1
	   IF (NUM_ERR .GT. 5) THEN
	      FLN_GET_WIRE_ENDS = RDB$STATUS
	      GOTO 999
	   ENDIF
C
C try again - probably deadlock
	   CALL LIB$WAIT(FLN_PSE)
	   GOTO 20
&RDB&	END_ERROR
C
	NUM_NEXT = 0
	DO 30 I = 1,NUM_WIRE
&RDB&      FOR W IN WIRE WITH W.FLOWLINE_ID  = FLN_ID AND
&RDB&      W.WIRE_ID = WIRE(I)
&RDB&	      ON ERROR
	         NUM_ERR = NUM_ERR+1
	         IF (NUM_ERR .GT. 5) THEN
		    FLN_GET_WIRE_ENDS= RDB$STATUS
&RDB&	            ROLLBACK
		    GOTO 999
	         ENDIF
&RDB&	         ROLLBACK
C
C try again - probably deadlock
	         CALL LIB$WAIT(FLN_PSE)
	         GOTO 20
&RDB&	      END_ERROR
&RDB&         GET 
&RDB&	         ON ERROR
	            NUM_ERR = NUM_ERR+1
	            IF (NUM_ERR .GT. 5) THEN
		       FLN_GET_WIRE_ENDS= RDB$STATUS
&RDB&	               ROLLBACK
		       GOTO 999
	            ENDIF
&RDB&	            ROLLBACK
C
C try again - probably deadlock
	            CALL LIB$WAIT(FLN_PSE)
	            GOTO 20
&RDB&	         END_ERROR
&RDB&            LOC_ELEMENT = W.WIRE_END;
&RDB&         END_GET  
	      CALL FLN_ADD_STRING(NEXT_ELEMENT,NUM_NEXT,LOC_ELEMENT)
&RDB&      END_FOR 
30	CONTINUE
&RDB&   COMMIT
C
999	RETURN
	END
