	INTEGER*4 FUNCTION FLN_SET_CURRENT_TASK(OPERATOR_ID,TASK_ID)
C
***	MODULE	FLN_SET_CURRENT_TASK
***	IDENT	06MY88
C
C Copyright Laser-Scan Laboratories Ltd., Cambridge, England
C
C Author M.W.S. Reid
C
C 	Created					MWSR    06-May-1988
C
C sets up current task for operator 
C
	IMPLICIT NONE
C
C Parameters
	INCLUDE	'LSL$CMNFLOWLINE:FLOW.PAR'
	INCLUDE	'LSL$CMNFLOWLINE:FLOWLINEMSG.PAR'
C
C Arguments
	INTEGER*4	TASK_ID		!IN - task identifier
	CHARACTER*(*)	OPERATOR_ID     !IN - operator id
C
C Local Variables
	INTEGER*4	NUM_ERR
	INTEGER*4	NUM_TASK
	CHARACTER*20	ELEMENT_ID
C
&RDB&   DATABASE FILENAME  'LSL$FLN_DATABASE:FLOWLINE'
C
	NUM_ERR = 0 
20	CONTINUE
C
&RDB&   START_TRANSACTION READ_WRITE WAIT RESERVING OPERATOR
&RDB&   FOR PROTECTED WRITE, TASK FOR SHARED READ
&RDB&	ON ERROR
	   NUM_ERR = NUM_ERR+1
	   IF (NUM_ERR .GT. 5) THEN
	      FLN_SET_CURRENT_TASK = RDB$STATUS
	      GOTO 999
	   ENDIF
C
C try again - probably deadlock
	   CALL LIB$WAIT(FLN_PSE)
	   GOTO 20
&RDB&	END_ERROR

C get the job and project ids for the task
	NUM_TASK = 0
&RDB&   FOR T IN TASK 
&RDB&   WITH T.TASK_ID = TASK_ID
&RDB&	   ON ERROR
	      NUM_ERR = NUM_ERR+1
	         IF (NUM_ERR .GT. 5) THEN
	            FLN_SET_CURRENT_TASK = RDB$STATUS
&RDB&               ROLLBACK
	            GOTO 999
	         ENDIF
C
C try again - probably deadlock
&RDB&            ROLLBACK
	         CALL LIB$WAIT(FLN_PSE)
	      GOTO 20
&RDB&	   END_ERROR
	   NUM_TASK = NUM_TASK+1
&RDB&      GET
&RDB&	      ON ERROR
	         NUM_ERR = NUM_ERR+1
	         IF (NUM_ERR .GT. 5) THEN
	            FLN_SET_CURRENT_TASK = RDB$STATUS
&RDB&               ROLLBACK
	            GOTO 999
	         ENDIF
C
C try again - probably deadlock
&RDB&            ROLLBACK
	         CALL LIB$WAIT(FLN_PSE)
	         GOTO 20
&RDB&	      END_ERROR
&RDB&         ELEMENT_ID = T.ELEMENT_ID;
&RDB&      END_GET
&RDB&   END_FOR
C
	IF (NUM_TASK .EQ. 0) THEN
	   FLN_SET_CURRENT_TASK = FLN__NOTSKAVLBLE
&RDB&      ROLLBACK
	   GOTO 999
	ENDIF
C
C store the info
&RDB&   FOR O IN OPERATOR WITH O.OPERATOR_ID  = OPERATOR_ID
&RDB&	   ON ERROR
	      FLN_SET_CURRENT_TASK = RDB$STATUS
	      GOTO 999
&RDB&	   END_ERROR
&RDB&      MODIFY O USING
C
&RDB&	      ON ERROR
	         FLN_SET_CURRENT_TASK = RDB$STATUS
	         GOTO 999
&RDB&	      END_ERROR
&RDB&         O.CURRENT_ELEMENT= ELEMENT_ID;
&RDB&       END_MODIFY
&RDB&   END_FOR
&RDB&   COMMIT
C
	FLN_SET_CURRENT_TASK = RDB$STATUS
C
999	RETURN
	END
C
