	INTEGER*4 FUNCTION FLN_ARCHIVE_TASK(TASKID,OUTCOME,STATUS)
C
***	MODULE	FLN_ARCHIVE_TASK
***	IDENT	15SE93
C
C Copyright Laser-Scan Laboratories Ltd., Cambridge, England
C
C Author M.W.S. Reid
C
C 	Created					MWSR    30-Mar-1988
C
C routine to remove a task record from the TASK relation and put it in 
C the TASK_HISTORY relation
C returns SS$_NORMAL if all is well - otherwise an RDB return code
C NB *** calling routine should have a transaction open
C
	IMPLICIT NONE
C
C Parameters
	INCLUDE	'LSL$CMNFLOWLINE:FLOW.PAR'
	INCLUDE	'LSL$CMNFLOWLINE:FLOWLINEMSG.PAR'
	INTEGER*4	SS$_NORMAL
	EXTERNAL	SS$_NORMAL
C
C Arguments
	INTEGER*4	TASKID
	INTEGER*4	OUTCOME
	CHARACTER*(*)	STATUS		! status of task
C
C RDB return codes
	INTEGER*4	RDB$_DEADLOCK
	EXTERNAL	RDB$_DEADLOCK
C
C Common Blocks
C
C Functions
C
C Local Variables
C
&RDB&   DATABASE FILENAME  'LSL$FLN_DATABASE:FLOWLINE'
C
C assume success
	FLN_ARCHIVE_TASK = %LOC(SS$_NORMAL)
C
20	CONTINUE
C
&RDB&   FOR T IN TASK WITH T.TASK_ID = TASKID 
&RDB&	   ON ERROR
	      FLN_ARCHIVE_TASK = RDB$STATUS
	      GOTO 999
&RDB&	   END_ERROR
C
C now store it in TASK_HISTORY
&RDB&      STORE TH IN TASK_HISTORY USING 
C
&RDB&	      ON ERROR
	         FLN_ARCHIVE_TASK = RDB$STATUS
	         GOTO 999
&RDB&	      END_ERROR
&RDB&         TH.TASK_ID  = T.TASK_ID;
&RDB&         TH.JOB_ID  = T.JOB_ID;
&RDB&         TH.ELEMENT_ID = T.ELEMENT_ID;
&RDB&         TH.OUTCOME_VALUE = OUTCOME;
&RDB&         TH.TASK_STATUS = STATUS;
&RDB&      END_STORE
C
C now that its safely copied - delete the record from TASK
C
&RDB&      ERASE T
&RDB&	   ON ERROR
	      FLN_ARCHIVE_TASK = RDB$STATUS
	      GOTO 999
&RDB&	   END_ERROR
&RDB&   END_FOR
C
C delete all associated parameters
C
CCC&RDB&   FOR  T IN TASK CROSS  P IN PARAMETER OVER PARAMETER_ID
CCC&RDB&      WITH T.TASK_ID = TASKID
CCC&RDB&	   ON ERROR
CCC	      FLN_ARCHIVE_TASK = RDB$STATUS
CCC	      GOTO 999
CCC&RDB&	   END_ERROR
CCC&RDB&      ERASE P
CCC&RDB&	   ON ERROR
CCC	      FLN_ARCHIVE_TASK = RDB$STATUS
CCC	      GOTO 999
CCC&RDB&	   END_ERROR
CCC&RDB&   END_FOR
CCC&RDB&   FOR  T IN TASK WITH 
CCC&RDB&	   (ANY P IN PARAMETER WITH P.PARAMETER_ID = T.PARAMETER_ID)
&RDB&   FOR  P IN PARAMETER WITH 
&RDB&	   (ANY T IN TASK WITH T.PARAMETER_ID = P.PARAMETER_ID)
&RDB&	   ON ERROR
	      FLN_ARCHIVE_TASK = RDB$STATUS
	      GOTO 999
&RDB&	   END_ERROR
&RDB&      ERASE P
&RDB&	   ON ERROR
	      FLN_ARCHIVE_TASK = RDB$STATUS
	      GOTO 999
&RDB&	   END_ERROR
&RDB&   END_FOR
C
999	RETURN
	END
