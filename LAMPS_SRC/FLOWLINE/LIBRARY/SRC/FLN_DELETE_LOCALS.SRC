C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1993-09-15 16:39:46.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	INTEGER*4 FUNCTION FLN_DELETE_LOCALS(TASK_ID)
C
***	MODULE	FLN_DELETE_LOCALS
***	IDENT	15SE93
C
C Copyright Laser-Scan Laboratories Ltd., Cambridge, England
C
C Author M.W.S. Reid
C
C 	Created					MWSR    29-Sep-1988
C
C 
C deletes local parameters for a particular task
C
	IMPLICIT NONE
C
C Parameters
	INCLUDE	'LSL$CMNFLOWLINE:FLOW.PAR'
	INCLUDE	'LSL$CMNFLOWLINE:FLOWLINEMSG.PAR'
	INTEGER*4	SS$_NORMAL
	EXTERNAL	SS$_NORMAL
C
C Arguments
	INTEGER*4	TASK_ID			! IN - task	
C
C Function
	INTEGER*4	FLN_GET_PARAMETER_ID
C
C RDB return codes
	INTEGER*4	RDB$_DEADLOCK
	EXTERNAL	RDB$_DEADLOCK
C
C Local
	INTEGER*4	I
C
&RDB&   DATABASE FILENAME 'LSL$FLN_DATABASE:FLOWLINE'
C
	FLN_DELETE_LOCALS  = %LOC(SS$_NORMAL)
C
CCC&RDB&   FOR T IN TASK CROSS PA IN PARAMETER OVER PARAMETER_ID
CCC&RDB&   WITH T.TASK_ID  = TASK_ID
CCCC
CCCC if its a deadlock then retry after waiting
CCC&RDB&         ON ERROR
CCC	         FLN_DELETE_LOCALS = RDB$STATUS
CCC	         GOTO 999
CCC&RDB&         END_ERROR
CCC&RDB&      ERASE PA
CCCC if its a deadlock then retry after waiting
CCC&RDB&         ON ERROR
CCC	         FLN_DELETE_LOCALS = RDB$STATUS
CCC	         GOTO 999
CCC&RDB&         END_ERROR
CCC&RDB&   END_FOR
&RDB&   FOR  PA IN PARAMETER WITH 
&RDB&	(ANY T IN TASK WITH T.PARAMETER_ID = PA.PARAMETER_ID)
C
C if its a deadlock then retry after waiting
&RDB&         ON ERROR
	         FLN_DELETE_LOCALS = RDB$STATUS
	         GOTO 999
&RDB&         END_ERROR
&RDB&      ERASE PA
C if its a deadlock then retry after waiting
&RDB&         ON ERROR
	         FLN_DELETE_LOCALS = RDB$STATUS
	         GOTO 999
&RDB&         END_ERROR
&RDB&   END_FOR
C
	FLN_DELETE_LOCALS  = RDB$STATUS
999	RETURN
	END
