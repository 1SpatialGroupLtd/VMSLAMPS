C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1988-07-12 14:15:58.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	INTEGER*4 FUNCTION FLN_GET_INPUT_PAR(ELEMENT,JOB_ID,NUM_PAR
     &					     ,PARAMETERS)
C
***	MODULE	FLN_GET_INPUT_PAR
***	IDENT	12JL88
C
C Copyright Laser-Scan Laboratories Ltd., Cambridge, England
C
C Author M.W.S. Reid
C
C 	Created					MWSR    12-Jul-1988
C
C gets the input parameters for a task
C returns RDB status code for the database operation
C calling routine should have tha transaction open
C
	IMPLICIT NONE
C
C Parameters
	INCLUDE	'LSL$CMNFLOWLINE:FLOW.PAR'
	INTEGER*4	SS$_NORMAL
	EXTERNAL	SS$_NORMAL
C
C Arguments
	CHARACTER*(*)	ELEMENT		! elements
	INTEGER*4	JOB_ID			! job	
	INTEGER*4	NUM_PAR			! OUT - num pars
	INTEGER*4	PARAMETERS(FLN_MAX_PAR) ! OUT - 
C
C RDB return codes
	INTEGER*4	RDB$_DEADLOCK
	EXTERNAL	RDB$_DEADLOCK
C
C Local Variables
	INTEGER*4	TASKID
	INTEGER*4	I
	INTEGER*4	NUM_WIRE
	CHARACTER*20	WIRE_ID(FLN_MAXWIRE)
C
&RDB&   DATABASE FILENAME 'LSL$FLN_DATABASE:FLOWLINE'
C
	FLN_GET_INPUT_PAR  = %LOC(SS$_NORMAL)
	NUM_WIRE = 0
&RDB&   FOR W IN WIRE WITH W.WIRE_END  = ELEMENT
&RDB&      ON ERROR
	      FLN_GET_INPUT_PAR = RDB$STATUS
	      GOTO 999
&RDB&      END_ERROR
C
	   NUM_WIRE = NUM_WIRE+1
&RDB&      GET
&RDB&         ON ERROR
	         FLN_GET_INPUT_PAR = RDB$STATUS
	         GOTO 999
&RDB&         END_ERROR
&RDB&         WIRE_ID(NUM_WIRE) = W.WIRE_ID
&RDB&      END_GET
C
&RDB&   END_FOR
C
C get any parameters associated with active wires 
	NUM_PAR = 0
	DO 30 I = 1,NUM_WIRE
C
&RDB&      FOR W IN WIRE_ACTIVE WITH W.WIRE_ID  = WIRE_ID(I)	   
&RDB&      AND W.JOB_ID = JOB_ID AND W.PARAMETER_ID NOT MISSING
&RDB&         ON ERROR
	         FLN_GET_INPUT_PAR = RDB$STATUS
	         GOTO 999
&RDB&         END_ERROR
C
	      NUM_PAR = NUM_PAR+1
&RDB&         GET 
&RDB&            ON ERROR
	            FLN_GET_INPUT_PAR = RDB$STATUS
	            GOTO 999
&RDB&            END_ERROR
&RDB&   	 PARAMETERS(NUM_PAR) = W.PARAMETER_ID;
&RDB&         END_GET
&RDB&      END_FOR
30	CONTINUE
C
	FLN_GET_INPUT_PAR  = RDB$STATUS
999	RETURN
	END
