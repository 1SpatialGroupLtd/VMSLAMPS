===============================================================================
20-Sept-1993	John Cadogan
...............................................................................
FLN_DELETE_LOCALS.SRC,
FLN_ARCHIVE_TASK.SRC	- Modify query which combines the CROSS clause with
			  ERASE to comform with the V4.1 update rules.

===============================================================================
6-May-1992	John Cadogan
...............................................................................
FLN_SESS_ERROR.SRC,
FLN_SESS_RESTART.SRC,
FLN_SESS_SUBFLOWLINE.SRC,
FLN_SESS_OFFLINE.SRC,
FLN_SESS_CONTINUE.SRC	- Insert test for FLN_SESS_XXXXX after calls to
			  FLN_SET_GLOBALS and FLN_SET_LOCALS. This prevents 
			  parameters from being lost.

FLN_RESET_UPDATE.SRC	- Move the code that creates new tasks for specified
			  elements to before the code that deletes wires for 
			  the job. This means that that local parameters
			  will be retained the flowline loops back to a 
			  previous element.

FLN_SET_GLOBALS.SRC	- In the code which finds out the job id assign
			  T.JOB_ID to JOB_ID instead of T.TASK_ID.

===============================================================================
8-Oct-1991
FLN_CHANGE_JOB_HIST_NAME
New routine

5-Sep-1991
FLN_CHANGE_JOB_NAME
New routine

3-Sep-1991
FLN_RETRIEVE_JOBS
Use job name, not id number in checking authorisation - previously
authorisation for specific jobs did not work

FLN_CHECK_OPERATOR_AUTH, FLN_CHECK_WORKSTATION_AUTH
Re-order the logic, in particular avoid problem where an operator without
explicit Y or E is still allowed items for which other operators have explicit
Y, if he has some explcit N for other items.

Other stuff...
FLN_SET_WIRES
	Remove FLOWLINE_ID argument and do not use FLOWLINE_ID field in
	WIRE_ACTIVE relation (not needed - may be removed)

FLN_COMPLETE_UPDATE
	Remove FLOWLINE_ID argument, do not pass FLOWLINE_ID to FLN_SET_WIRES

FLN_JOBSTART_UPDATE
	Remove FLOWLINE_ID argument, do not pass FLOWLINE_ID to FLN_SET_WIRES

FLN_RESET_JOB_INT
	Remove spurious FLN_SETUP_TASKS declaration

FLN_COMPLETE_TASK
	Do not pass FLN_ID to FLN_COMPLETE_UPDATE

FLN_START_JOB
	Do not pass FLN_ID to FLN_JOBSTART_UPDATE

FLN_GET_WIRE_STATUS
	Do not use FLOWLINE_ID in referencing WIRE_ACTIVE relation

FLN_GET_ALL_WIRES
	Call new routine FLN_ADD_STRING so ensure list of wires has
	no duplicates

FLN_GET_WIRE_ENDS
	Call new routine FLN_ADD_STRING so ensure list of elements has
	no duplicates. The MISSELMNT error can no longer be generated.
	It may be removed from the .MES file when a rebuild in being done.

FLN_ADD_STRING
	New subroutine to add a wire to a list of wires if it is not
	already present (or for an element)

FLN_RESET_JOB_INT
	Use FLN_ADD_STRING to add wires and elements to lists, to
	avoid duplicates

FLN_RESET_UPDATE
	Don't forget to copy the FLOWLINE_ID from JOB to JOB_HISTORY,
	or the START_DATE and FINISH_DATE from SESSION to SESSION_HISTORY.
	WIRE_ACTIVE was always referenced just by JOB_ID and WIRE_ID (no
	FLOWLINE_ID) which did not make good use of the index. Since the
	FLOWLINE_ID field is being removed in any case, then leave well
	alone.
	Only update records in JOB_HISTORY and TASK_HISTORY that are
	not void already.
	Leave OUTCOME_VALUE field of TASK_HISTORY NULL for tasks being
	moved from TASK.

FLN_START_TASK
	Don't bother to test for OUTCOME_VALUE NULL in TASK - it always
	was, and the field may be removed completely.

FLN_LIST_TASK
	Don't refer to OUTCOME_VALUE of TASK.

FLN_GET_TASKS, FLN_GET_TASKS_JOB
	Don't retrieve tasks which are already void

FLN_RETRIEVE_OPER_WORK_TIMINGS
	Try to speed it up.
	Initially, for all known workstations, it added up sessions,
	cpu, connect days/time.
	Put a single workstation FOR loop round the whole lot, rather
	than one each.
	TOTAL the connect days/times in a single expression, rather than
	two separate ones.
	Do not try to get the other information on a workstation with
	no sessions.
	This gave an improvement of x3-4.
	
	Then, instead of using a COUNT and two TOTAL functions, each of
	which would scan the records, use an inner FOR loop to
	read each record once and add up the things in real code.
	A slight functional change results, in
	that sessions with a missing CPU (terminated by a manager in
	LAMPSCONTROL) no longer have their connect time counted - since
	such sessions were not counted in the 'number of sessions' this
	is probably better anyway. This resulted in a further 20%
	improvement.

	This type of improvement is probably possible in other
	FLN_RETRIEVE_* routines.

FLN_RETRIEVE_OPER_ELEM_TIMINGS
	Same optimisation as above gives x4 improvement.
	Note that if elements in different flowlines have the same names,
	then they will be counted in both flowlines - to fix this would
	require a complicated join via task to job.

The OUTCOME_VALUE field of TASK is not used, except to list it in the
unused FLN_LIST_TASK, to copy to TASK_HISTORY in FLN_RESET_UPDATE (always
NULL), and to test NULL value in FLN_START_TASK. Now removed.

In general...
Saudi database contains many SESSION records for which the job no longer
exists, also PARAMETER records for which the task/active_wire no longer exists,
also GLOBAL_PARAMETER records for which the job no longer exists.

It seems to me that these can arise:-

(1) Whenever a wire is removed from WIRE_ACTIVE, there is no attempt to
delete its parameters (but beware in case another wire references them).

(2) Whenever a job is deleted, there is no attempt to archive any SESSION
records for it.

(3) Whenever a sub-job is deleted in FLN_RESET_UPDATE, no attempt is made
to remove its global parameters.

