C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1993-01-29 12:21:48.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	INTEGER FUNCTION WRITE_CREATE_PROJECT_COMPROC()
C
***	MODULE WRITE_CREATE_PROJECT_COMPROC
***	IDENT 29JA93
C
C Copyright Laser-Scan Laboratories Ltd, Cambridge, England
C Author: J.M. Billing			13 April 1988
C
C Routine to write a command procedure to create a project by calling
C the system command procedure
C
C
	IMPLICIT NONE
C
	INCLUDE 'LSL$LAMPSCONTROL:QUALIFIERS.CMN'
	INCLUDE 'LSL$LAMPSCONTROL:CURRENT_ITEMS.CMN'
	INCLUDE 'LSL$LAMPSCONTROL:LAMPSCONTROLMSG.PAR'
C
C Assume success
C
	WRITE_CREATE_PROJECT_COMPROC = LSC__NORMAL
C
C Header comment lines
C
	CALL FLWRTF('$! LAMPSCONTROL created jacket command procedure')
	CALL FLWRTF('$! Function    Project creation')
	CALL FLWRTF('$! Operator    %S',OPERATOR_ID)
	CALL FLWRTF('$! Workstation %S',WORKSTATION_ID)
	CALL FLWRTF('$! ')
C
C Commands to set up the DCL symbols needed
C
C Set up symbol to indicate type of jacket command procedure
C
	CALL FLWRTF('$	FLN_JACKET_TYPE :== PROJECT')
C
C System command procedure specification
C
	CALL FLWRTF('$	FLN_SYSTEM_COMPROC :== %S', SYSTEM_COMPROC)
C
C Project id
C
	CALL FLWRTF('$	FLN_PROJECT_ID :== %S', PROJECT_ID)
C
C Default for FLN_INT
C
	CALL OUTPUT_SHARED_DCL()
C
C Set up default for result of creation
C
	CALL FLWRTF('$	FLN_CREATION_RESULT :== SUCCESS')
C
C Default for project command proc spec
C
	CALL FLWRTF('$	FLN_PROJECT_COMPROC == - ')
	CALL FLWRTF('	   f$element(0," ",FLN_PROJECT_ID) + ".COM"')
C
C Commands to perform function required of command file
C Execute the project creation procedure (system command procedure)
C to create the project specific command procedure
C
	CALL FLWRTF('$!')
	CALL FLWRTF('$	@''FLN_SYSTEM_COMPROC'' ')
C
C Commands to notify the db that the PROJECT has been created
C
	CALL FLWRTF('$!')
	CALL FLWRTF('$	if FLN_INT then ass/user sys$command sys$input')
	CALL FLWRTF('$	LAMPSCONTROL/NOTIFY/NOMENU/NOCOMMAND_FILE -')
	CALL FLWRTF('	   ''fln_log_file_qual'' - ')
	IF (.NOT.HAD_FAST) CALL FLWRTF('	   /NOFAST_AUTHORISE - ')
	CALL FLWRTF('	   /PROJECT_ID=''FLN_PROJECT_ID'' -')
	CALL FLWRTF('	   /CREATION_RESULT=''FLN_CREATION_RESULT'' -')
	CALL FLWRTF(
     &	   '	   /NEW_COMMAND_PROCEDURE=''FLN_PROJECT_COMPROC'' ')
C
C Command to delete the command file now it has finished
C
	CALL FLWRTF('$!')
	CALL FLWRTF('$	PROC = F$ENVIRONMENT("PROCEDURE")')
	CALL FLWRTF('$	delete/nolog/noconf  ''PROC'' ')
C
C Exit
C
	RETURN
	END
