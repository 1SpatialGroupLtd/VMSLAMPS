C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1988-10-13 12:12:14.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	INTEGER FUNCTION WANT_TYPE_AHEAD(YES)
C
***	MODULE WANT_TYPE_AHEAD
***	IDENT 3MY88
C
C Copyright Laser-Scan Laboratories Ltd, Cambridge, England
C Author: J.M. Billing			3 May 1988
C
C Turn on/off type ahead on VT220 compatible terminal
C
	IMPLICIT NONE
C
	INCLUDE 'LSL$LAMPSCONTROL:INTERACTIVE_IO.CMN'
	INCLUDE 'LSL$LAMPSCONTROL:LAMPSCONTROLMSG.PAR'
	INCLUDE '($TTDEF)'
	INCLUDE '($IODEF)'
C
C arguments
	LOGICAL		YES	! .T. if to turn on 132 column mode
C
C w/s
	INTEGER*2	IOSB(4)	! i/o status block
	INTEGER		BUFF(2)	! buffer for terminal set/sense mode
	INTEGER*2	WIDTH	! new width in columns for screen
C
C functions
	INTEGER		SYS$QIOW
C
C Assume success
C
	WANT_TYPE_AHEAD = LSC__NORMAL
C
C Read the current terminal attributes
C
	WANT_TYPE_AHEAD = SYS$QIOW(
     &			,
     &			%VAL(CHAN_SYS$INPUT),
     &			%VAL(IO$_SENSEMODE),
     &			IOSB,
     &			,
     &			,
     &			BUFF,
     &			%VAL(8),
     &			,
     &			,
     &			,)
C
C Check for errors, firstly by examining the function return
C Don't exit for this sort of error
C
	IF (.NOT.WANT_TYPE_AHEAD) THEN
	   CALL LCONT_PUTMSG(WANT_TYPE_AHEAD,0)
	ENDIF
C
C Then by looking at the first word of the IO status block
C Don't exit for this sort of error
C
	IF (.NOT.IOSB(1)) THEN
	   CALL LCONT_PUTMSG(IOSB(1),0)
	ENDIF
C
C Now alter the the terminal characteristic bits in buffer 
C according to whether want type ahead
C
C
C If want typeahead 
C
	IF (YES) THEN
	   BUFF(2) = BUFF(2) .AND. (.NOT. TT$M_NOTYPEAHD)
C
C Otherwise dont want typeahead
C
	ELSE
	   BUFF(2) = BUFF(2) .OR. TT$M_NOTYPEAHD
	ENDIF
C
C And write back altered buffer
C
	WANT_TYPE_AHEAD = SYS$QIOW(
     &			,
     &			%VAL(CHAN_SYS$INPUT),
     &			%VAL(IO$_SETMODE),
     &			IOSB,
     &			,
     &			,
     &			BUFF,
     &			%VAL(8),
     &			,
     &			,
     &			,)
C
C Now check for errors in setting the new screen width
C Firstly by looking at function return
C Don't exit for this sort of error
C
	IF (.NOT.WANT_TYPE_AHEAD) THEN
	   CALL LCONT_PUTMSG(WANT_TYPE_AHEAD,0)
	ENDIF
C
C Then by looking at the first word of the IO status block
C Don't exit for this sort of error
C
	IF (.NOT.IOSB(1)) THEN
	   CALL LCONT_PUTMSG(IOSB(1),0)
	ENDIF
C
C Exit
C
900	RETURN
	END
