	INTEGER FUNCTION WIRE_DEFINITION_REPORT(FLOWLINE)
C
***	MODULE WIRE_DEFINITION_REPORT
***	IDENT 22DE88
C
C Copyright Laser-Scan Laboratories Ltd, Cambridge, England
C Author: J.M. Billing			2 September 1988
C
C Routine to produce listing on lun for current report file of
C the wires in the flowline control database
C The information displayed will include:
C	Wire identifier
C	End element identifier
C
	IMPLICIT NONE
C
C Common blocks and parameter files
C
	INCLUDE 'LSL$CMNFLOWLINE:FLOW.PAR'
	INCLUDE 'LSL$LAMPSCONTROL:LAMPSCONTROLMSG.PAR'
	INCLUDE 'LSL$LAMPSCONTROL:NEXT_FUNCTION.CMN'
	INCLUDE 'LSL$LAMPSCONTROL:FILES.CMN'
	INCLUDE 'LSL$LAMPSCONTROL:INTERACTIVE_IO.CMN'
	INCLUDE 'LSL$LAMPSCONTROL:LARGE_ARRAYS.CMN'
C
C arguments
	CHARACTER*(*)	FLOWLINE		! flowline for which
						! wires to be shown
C
C workspace
	INTEGER		NUM_WIRE		! number of wires
	INTEGER		I,J			! temporary indices
C
C The following arrays have been transfered to 'LARGE_ARRAYS.CMN', which allows
C the program's storage requirements to be reduced by sharing the larger arrays
C among a number of routines.
C Since these arrays can be used by other routines, care must be taken that 
C their values are not overwritten by any of the routines called by this
C routine.
C
CCC	CHARACTER*20	A_WIRE_ID(FLN_MAXWIRE)
CCC	CHARACTER*20	A_END_ELEM_ID(FLN_MAXWIRE)
C
C functions
	INTEGER		FLN_RETRIEVE_WIRES_FLOWLINE
	INTEGER		SIGCHS
C
C Assume success
C
	WIRE_DEFINITION_REPORT = LSC__NORMAL
C
C Call the routine to get list of information on all WIREs
C in the system
C
	WIRE_DEFINITION_REPORT = FLN_RETRIEVE_WIRES_FLOWLINE(
     &		FLOWLINE,	! flowline of interest
     &		A_WIRE_ID,	! list of wires
     &		A_END_ELEM_ID,	! end element of wire
     &		NUM_WIRE)	! number of wires
C
C Check for errors in reading list of wires
C
	IF (.NOT.WIRE_DEFINITION_REPORT) THEN
	   CALL LCONT_PUTMSG(LSC__UNRETWIRE,0)
	   CALL LCONT_ADDMSG(WIRE_DEFINITION_REPORT,0)
C
C Specify that you just want to repeat the menu from which call
C originated
C
	   NEXT_FUNCTION = DO_MOVE_UP_LEVEL
	   GOTO 999
	ENDIF
C
C Select report list file
C
	CALL FLWSEL(REPORTFIL_LUN)
C
C Mark the FMS screen menu as not reusable
C
	PREVIOUS_MENU_USABLE = .FALSE.
C
C Now output the title lines of the WIRE listing
C
	CALL FLWRTF('LAMPSCONTROL Wire Definition Report for '//
     &			'flowline %S', FLOWLINE)
	CALL FLWRTF(' ')
C
C Output the header line, with column titles
C
	CALL EXPAND('Wire Id                       ')
	CALL APPEND('End Element Id                ')
	CALL FLWSTR()
C
C Now output a blank line to make output look really beautiful
C
	CALL FLWRTF()
C
C Now output the actual WIRE details, in a loop
C
	DO 10 I = 1, NUM_WIRE
C
C Format the line
C
	   CALL EXPAND('%S          ',A_WIRE_ID(I))
	   CALL APPEND('%S          ',A_END_ELEM_ID(I))
C
C And output line to the report file lun
C
	   CALL FLWSTR()
C
10	CONTINUE
C
C Output blank line
C
	CALL FLWRTF(' ')
C
C Tell the user how many wires were found
C
	IF (NUM_WIRE.GT.0) THEN
	   CALL FLWRTF('Total number of wires is %N',NUM_WIRE)
C
C Deal with the case where no wire details are found
C
	ELSE
	   CALL FLWRTF('No wires found')
	ENDIF
C
C Set semaphore to indicate that report status menu should be re-entered
C
	NEXT_FUNCTION = DO_MOVE_UP_LEVEL
C
C Exit
C
999	RETURN
	END
