	INTEGER FUNCTION TASK_STATUS_REPORT()
C
***	MODULE TASK_STATUS_REPORT
***	IDENT 22DE88
C
C Copyright Laser-Scan Laboratories Ltd, Cambridge, England
C Author: J.M. Billing			3 May 1988
C
C Routine to produce listing on lun for current report file
C of the tasks in the flowline control database
C The information displayed will include:
C	Project identifier
C	Job name
C	Element identifier
C	Task status
C	Progress status
C
	IMPLICIT NONE
C
C Common block and parameter files
C
	INCLUDE 'LSL$CMNFLOWLINE:FLOW.PAR'
	INCLUDE 'LSL$LAMPSCONTROL:LAMPSCONTROLMSG.PAR'
	INCLUDE 'LSL$LAMPSCONTROL:NEXT_FUNCTION.CMN'
	INCLUDE 'LSL$LAMPSCONTROL:FILES.CMN'
	INCLUDE 'LSL$LAMPSCONTROL:INTERACTIVE_IO.CMN'
	INCLUDE 'LSL$LAMPSCONTROL:LARGE_ARRAYS.CMN'
C
C w/s
	INTEGER		NUM_TASK		! number of tasks
	INTEGER		I			! temporary count varble
	CHARACTER*20	PROGRESS(FLN_MAX_TASK)	! list of progress st's
C
C
C The following arrays have been transfered to 'LARGE_ARRAYS.CMN', which allows
C the program's storage requirements to be reduced by sharing the larger arrays
C among a number of routines.
C Since these arrays can be used by other routines, care must be taken that 
C their values are not overwritten by any of the routines called by this
C routine.
C
CCC	CHARACTER*20	A_PROJ_ID(FLN_MAX_TASK)	! list of project ids
CCC	CHARACTER*20	A_JOB_NAME(FLN_MAX_TASK)! list of job names
CCC	CHARACTER*20	A_ELEM_ID(FLN_MAX_TASK)	! list of element idents
CCC	CHARACTER*20	A_TASK_STATUS(FLN_MAX_TASK)! list of task statuses
CCC	CHARACTER*20	A_FLOW_ID(FLN_MAX_TASK)	! list of flowline ids
C
C functions
	INTEGER		FLN_RETRIEVE_ALL_TASKS
C
C Assume success
C
	TASK_STATUS_REPORT = LSC__NORMAL
C
C Call the routine to get list of information on all TASKs
C in the system
C
	TASK_STATUS_REPORT = FLN_RETRIEVE_ALL_TASKS(
     &		A_PROJ_ID,	! project identifiers 
     &		A_JOB_NAME,	! job names
     &		A_ELEM_ID,	! element ids
     &		A_TASK_STATUS,	! task statuses
     &		PROGRESS,	! progress statuses
     &		A_FLOW_ID,	! flowline ids
     &		NUM_TASK)	! number of tasks
C
C Check for errors in reading list of tasks
C
	IF (.NOT.TASK_STATUS_REPORT) THEN
	   CALL LCONT_PUTMSG(TASK_STATUS_REPORT,0)
C
C Specify that you just want to repeat the menu from which call
C originated
C
	   NEXT_FUNCTION = DO_MOVE_UP_LEVEL
	   GOTO 999
	ENDIF
C
C Select report list file
C
	CALL FLWSEL(REPORTFIL_LUN)
C
C Mark the FMS screen menu as not reusable
C
	PREVIOUS_MENU_USABLE = .FALSE.
C
C Now output the title lines of the TASK listing
C
	CALL FLWRTF('LAMPSCONTROL Task Status Report')
	CALL FLWRTF(' ')
C
C Output the header line, with column titles
C
	CALL EXPAND('Project Identifier       ')
	CALL APPEND('Job Name                 ')
	CALL APPEND('Flowline Identifier      ')
	CALL APPEND('Element Identifier       ')
	CALL APPEND('Status         ')
	CALL APPEND('Progress       ')
	CALL FLWSTR()
C
C Now output a blank line to make output look really beautiful
C
	CALL FLWRTF()
C
C Now output the actual TASK details, in a loop
C
	DO 10 I = 1, NUM_TASK
C
C Format the line
C
	   CALL EXPAND('%S     ',A_PROJ_ID(I)(1:20))
	   CALL APPEND('%S     ',A_JOB_NAME(I)(1:20))
	   CALL APPEND('%S     ',A_FLOW_ID(I)(1:20))
	   CALL APPEND('%S     ',A_ELEM_ID(I)(1:20))
	   CALL APPEND('%S',A_TASK_STATUS(I)(1:15))
	   CALL APPEND('%S',PROGRESS(I)(1:15))
C
C And output it to the report file lun
C
	   CALL FLWSTR()
C
10	CONTINUE
C
C Output blank line
C
	CALL FLWRTF(' ')
C
C Tell the user how many TASKs were found
C
	IF (NUM_TASK.GT.0) THEN
	   CALL FLWRTF('Total number of tasks is %N',NUM_TASK)
C
C Deal with the case where no TASK details are found
C
	ELSE
	   CALL FLWRTF('No tasks found')
	ENDIF
C
C Set semaphore to indicate that report status menu should be re-entered
C
	NEXT_FUNCTION = DO_MOVE_UP_LEVEL
C
C Exit
C
999	RETURN
	END
