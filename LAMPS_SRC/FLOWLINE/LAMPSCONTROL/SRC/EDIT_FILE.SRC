	INTEGER FUNCTION EDIT_FILE(FILENAME)
C
***	MODULE EDIT_FILE
***	IDENT 06OC88
C
C Copyright Laser-Scan Laboratories Ltd, Cambridge, England
C Author: J.M. Billing			2 September 1988
C
C Routine to edit a specified file with EDT
C This routine does not perform any reporting of errors, this
C is all left to the caller of this routine, which should
C report any errors returned to it.
C
	IMPLICIT NONE
C
C common blocks
	INCLUDE 'LSL$LAMPSCONTROL:LAMPSCONTROLMSG.PAR'
	INCLUDE '($RMSDEF)'
C
C arguments
	CHARACTER*(*)	FILENAME	! file to be edited
C
C workspace
	CHARACTER*255	PARSED_NAME	! parsed file name
	INTEGER		NAME_LEN	! length of parsed file name
	CHARACTER*255	FILE_FOUND	! dummy file name
	INTEGER		CONTEXT		! dummy file search context
C
C functions
	INTEGER		LIB$ESTABLISH
	INTEGER		LIB$SIG_TO_RET
	EXTERNAL	LIB$SIG_TO_RET
	INTEGER		LIB$REVERT
	INTEGER		EDT$EDIT
	INTEGER		PARFILN
	INTEGER		LIB$FIND_FILE
C
C Assume success
C
	EDIT_FILE = LSC__NORMAL
C
C Parse the filename
C
	EDIT_FILE = PARFILN(
     &		PARSED_NAME,	! parsed filename
     &		NAME_LEN,	! length of parsed filename
     &		FILENAME,	! input filename
     &		'.COM;0',	! default file specification
     &		.TRUE.)		! .T. if to allow version numbers
C
C If there is an error, then exit, the error will be reported in the
C caller of this routine
C
	IF (.NOT.EDIT_FILE) GOTO 950
C
C Check that the specification points at a legal device and directory
C by searching for the file
C
	CONTEXT = 0
	EDIT_FILE = LIB$FIND_FILE(
     &		PARSED_NAME(1:NAME_LEN),	! parsed file name
     &		FILE_FOUND,			! file name found
     &		CONTEXT)			! context - 0 here
C
C If there is an error, then exit, the error will be reported in the
C caller of this routine.
C Errors due to the file not being found, rather than due to bad device
C or directory specifications, will not cause the routine to exit.
C
	IF ((.NOT.EDIT_FILE).AND.
     &	    (EDIT_FILE.NE.RMS$_FNF).AND.
     &	    (EDIT_FILE.NE.RMS$_NMF) ) GOTO 950
C
C Finish the searching for file operations
C Deallocates RMS context and any VM used for context block
C
	CALL LIB$FIND_FILE_END(CONTEXT)
C
C Turn on terminal typeahead to make editing easier
C
	CALL WANT_TYPE_AHEAD(.TRUE.)
C
C Set a signal handler to deal with any errors signaled by the EDT$EDIT
C routine.
C The signal hander routine is the library routine LIB$SIG_TO_RET, which
C converts any signals into a return code.
C This is needed because EDT signals errors rather than just returning
C them, so that any fatal errors result in program termination.
C
	CALL LIB$ESTABLISH(LIB$SIG_TO_RET)
C
C Now perform the EDT editing.
C
	EDIT_FILE = EDT$EDIT(PARSED_NAME(1:NAME_LEN))
C
C Reset the signal handler to the original for this routine
C
	CALL LIB$REVERT
C
C Turn off terminal typeahead
C
	CALL WANT_TYPE_AHEAD(.FALSE.)
C
C Exit
C
950	RETURN
	END
