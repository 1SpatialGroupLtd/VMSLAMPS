	INTEGER FUNCTION JOB_STATISTICS_REPORT(PROJ_ID)
C
***	MODULE JOB_STATISTICS_REPORT
***	IDENT 22DE88
C
C Copyright Laser-Scan Laboratories Ltd, Cambridge, England
C Author: J.M. Billing			12 September 1988
C
C Routine to produce listing on lun for current report file
C of the statistics relating to the jobs in the flowline control 
C database for a particular project
C The information displayed will include:
C	Job identifier
C	Start date/time of job
C	Finish date/time of job
C	Connect time used so far for job
C	CPU time used so far for job
C	Number of tasks within job
C
C Times will be displayed in hh:mm:ss.hh format
C
C The connect and CPU times are recovered from the database in integer
C hundredths of seconds.
C
C The start date is in integer days since 17-NOV-1858.
C
C The start time is in integer hundredths of seconds since midnight.
C
C
	IMPLICIT NONE
C
C Common blocks and parameter files
C
	INCLUDE 'LSL$CMNFLOWLINE:FLOW.PAR'
	INCLUDE 'LSL$LAMPSCONTROL:LAMPSCONTROLMSG.PAR'
	INCLUDE 'LSL$LAMPSCONTROL:NEXT_FUNCTION.CMN'
	INCLUDE 'LSL$LAMPSCONTROL:INTERACTIVE_IO.CMN'
	INCLUDE 'LSL$LAMPSCONTROL:FILES.CMN'
	INCLUDE 'LSL$LAMPSCONTROL:LARGE_ARRAYS.CMN'
C
C arguments
	CHARACTER*(*)	PROJ_ID
C
C w/s
	INTEGER		NUM_JOB			! number of jobs
	INTEGER		I			! temporary count varble
C
	CHARACTER*20	CPU			! cpu time string
	INTEGER		CPU_LENGTH		! length of cpu string
	CHARACTER*20	CONNECT			! connect time string
	INTEGER		CONNECT_LENGTH		! length of connect str
	CHARACTER*20	SDATE			! start date string
	INTEGER		SDATE_LENGTH		! length of date string
	CHARACTER*20	EDATE			! end date string
	INTEGER		EDATE_LENGTH		! length of date string
	CHARACTER*20	STIME			! start time string
	INTEGER		STIME_LENGTH		! length of time string
	CHARACTER*20	ETIME			! end time string
	INTEGER		ETIME_LENGTH		! length of time string
C
	INTEGER		CPU_TIME(FLN_MAX_JOB) 	! cpu time
	INTEGER		CONNECT_TIME(FLN_MAX_JOB)! connect time
	INTEGER		START_TIME(FLN_MAX_JOB) ! start time
	INTEGER		START_DATE(FLN_MAX_JOB) ! start day of job
	INTEGER		END_TIME(FLN_MAX_JOB)	! end time
	INTEGER		END_DATE(FLN_MAX_JOB)	! end day of job
	INTEGER		NUM_TASK(FLN_MAX_JOB)	! number of tasks in job
	INTEGER		NUM_UNSET_TASK(FLN_MAX_JOB)! number of tasks 
						! with unset CPU time
C
C The following arrays have been transfered to 'LARGE_ARRAYS.CMN', which allows
C the program's storage requirements to be reduced by sharing the larger arrays
C among a number of routines.
C Since these arrays can be used by other routines, care must be taken that 
C their values are not overwritten by any of the routines called by this
C routine.
C
CCC	CHARACTER*20	A_JOB_NAME(FLN_MAX_JOB)	! list of job names
C
C functions
	INTEGER		FLN_RETRIEVE_JOB_TIMINGS
	INTEGER		SIGCHS
	INTEGER		CONVERT_DAY_TO_STRING
	INTEGER		CONVERT_TIME_TO_STRING
C
C Assume success
C
	JOB_STATISTICS_REPORT = LSC__NORMAL
C
C Call the routine to get statistics on all jobs
C in the system
C
	JOB_STATISTICS_REPORT = FLN_RETRIEVE_JOB_TIMINGS(
     &		PROJ_ID,	! project identifier
     &		A_JOB_NAME,	! job identiiers
     &		NUM_JOB,	! number of jobs
     &		CPU_TIME,	! cpu time used for job so far
     &		CONNECT_TIME,	! connect time used for job
     &		START_TIME,	! start time of job
     &		START_DATE,	! start day of job
     &		END_TIME,	! end time of job
     &		END_DATE,	! end day of job
     &		NUM_TASK,	! number of tasks in each job
     &		NUM_UNSET_TASK)	! number of task with unset times/dates
C
C Check for errors in reading list of jobs
C
	IF (.NOT.JOB_STATISTICS_REPORT) THEN
	   CALL LCONT_PUTMSG(LSC__UNRETJOB,0)
	   CALL LCONT_ADDMSG(JOB_STATISTICS_REPORT,0)
C
C Specify that you just want to repeat the menu from which call
C originated
C
	   NEXT_FUNCTION = DO_MOVE_UP_LEVEL
	   GOTO 999
	ENDIF
C
C Select report list file
C
	CALL FLWSEL(REPORTFIL_LUN)
C
C Mark the FMS screen menu as not reusable
C
	PREVIOUS_MENU_USABLE = .FALSE.
C
C Now output the title lines of the job listing
C
	CALL FLWRTF('LAMPSCONTROL Job Statistics Report For Project %S',
     &			PROJ_ID)
	CALL FLWRTF(' ')
C
C Output the header line, with column titles
C
	CALL EXPAND('Job Identifier        ')
	CALL APPEND('Start date    ')
	CALL APPEND('Start time      ')
	CALL APPEND('End date      ')
	CALL APPEND('End time        ')
	CALL APPEND('Connect time      ')
	CALL APPEND('CPU time          ')
	CALL APPEND('No. tasks')
	CALL FLWSTR()
C
C Now output a blank line to make output look really beautiful
C
	CALL FLWRTF()
C
C Now output the actual job details, in a loop
C
	DO 10 I = 1, NUM_JOB
C
C Convert the dates and times and things into strings for output
C Allow for unset values in each of the quantities
C
C Deal with start date 
C
	   CALL CONVERT_DAY_TO_STRING(START_DATE(I),SDATE_LENGTH,SDATE)
C
C Deal with start time
C
	   CALL CONVERT_TIME_TO_STRING(START_TIME(I),STIME_LENGTH,STIME)
C
C Remove number of days from start time
C
	   IF (STIME(1:4).EQ.'000-') THEN
	      STIME = STIME(5:STIME_LENGTH)
	      STIME_LENGTH = STIME_LENGTH - 4
	   ENDIF
C
C Deal with end date 
C
	   CALL CONVERT_DAY_TO_STRING(END_DATE(I),EDATE_LENGTH,EDATE)
C
C Deal with end time
C
	   CALL CONVERT_TIME_TO_STRING(END_TIME(I),ETIME_LENGTH,ETIME)
C
C Remove number of days from end time
C
	   IF (ETIME(1:4).EQ.'000-') THEN
	      ETIME = ETIME(5:ETIME_LENGTH)
	      ETIME_LENGTH = ETIME_LENGTH - 4
	   ENDIF
C
C Deal with connect time
C
	   CALL CONVERT_TIME_TO_STRING(
     &			CONNECT_TIME(I),CONNECT_LENGTH,CONNECT)
C
C Deal with cpu time
C
	   CALL CONVERT_TIME_TO_STRING(CPU_TIME(I),CPU_LENGTH,CPU)
C
C Format the line
C
	   CALL EXPAND('%S20  ',A_JOB_NAME(I))
	   CALL APPEND('%S%[ %]',SDATE(1:SDATE_LENGTH),
     &				 (14-SDATE_LENGTH))
	   CALL APPEND('%S%[ %]',STIME(1:STIME_LENGTH),
     &				 (16-STIME_LENGTH))
	   CALL APPEND('%S%[ %]',EDATE(1:EDATE_LENGTH),
     &				 (14-EDATE_LENGTH))
	   CALL APPEND('%S%[ %]',ETIME(1:ETIME_LENGTH),
     &				 (16-ETIME_LENGTH))
	   CALL APPEND('%S%[ %]',CONNECT(1:CONNECT_LENGTH),
     &				 (18-CONNECT_LENGTH))
	   CALL APPEND('%S%[ %]',CPU(1:CPU_LENGTH),
     &				 (18-CPU_LENGTH))
	   CALL APPEND('%I8   ',NUM_TASK(I))
C
C And output line to the report file lun
C
	   CALL FLWSTR()
C
10	CONTINUE
C
C Output blank line
C
	CALL FLWRTF(' ')
C
C Tell the user how many jobs were found
C
	IF (NUM_JOB.GT.0) THEN
	   CALL FLWRTF('Total number of jobs is %N',NUM_JOB)
C
C Deal with the case where no job details are found
C
	ELSE
	   CALL FLWRTF('No jobs found')
	ENDIF
C
C Set semaphore to indicate that report status menu should be re-entered
C
	NEXT_FUNCTION = DO_MOVE_UP_LEVEL
C
C Exit
C
999	RETURN
	END
