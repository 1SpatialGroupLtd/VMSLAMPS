C
C QUALIFIERS.CMN
C
C Common block for LAMPSCONTROL to hold information decoded from
C command line (and any parameters commands entered after program
C is invoked)
C
C Excludes information on files which is contained on command line
C
C
C Flags indicating which main function to perform
C i.e. if /REQUEST, /MANAGE, /NOTIFY or /REPORT present
C Only one of these qualifiers should be present
C
	LOGICAL	REQUEST			! request wanted ?
	LOGICAL	MANAGE			! manage wanted ?
	LOGICAL	NOTIFY			! notify wanted ?
	LOGICAL	HAD_FAST		! Quick authorisation after initial
	LOGICAL	REPORT			! report wanted ?
C
C Flag indicating if using menus
C If this is true, then FMS forms/menus will be used
C If this is false, LAMPSCONTROL will function non-interactively
C True if /MENU qualifier present
C
	LOGICAL		MENU			! Produce menus ?
C
C Flag to indicate if exit from system (logoff) option should
C actually involve logging off from the terminal session
C If .TRUE., then logoff option will result in a logoff jacket
C command procedure being produced.
C Otherwise, a null command procedure is produced.
C /LOGOFF   => .TRUE.
C /NOLOGOFF => .FALSE.
C
	LOGICAL		LOGOFF			! logoff on exit ?
C
C
C Delta time, as used by wait jacket command procedure to determine
C how long it waits for. This is specified with the /WAIT_TIME command
C qualifier
C
	CHARACTER*30	WAIT_COMPROC_TIME
C
C
C Dealing with notification of session outcome/result
C These variables will contain values determined by examination
C of the command line qualifiers associated with session
C termination notification.
C /NOTIFY, /SESSION_RESULT, /SESSION_ID, /OUTCOME, /PROBLEM, /CPU
C
C Variables to hold session termination notification information
C
	LOGICAL		NOTIFY_SESSION		! .T. notify sess'n end 
	INTEGER		NOTIFY_SESSION_ID	! session just finished
	INTEGER		NOTIFY_SESSION_RESULT	! task state after sess
	INTEGER		NOTIFY_OUTCOME		! session's return code
	INTEGER		NOTIFY_CPU		! cpu time used
C
C Problem string (for session termination or job/project creation
C error or failure)
C
	LOGICAL		NOTIFY_PROBLEM		! .T. if had problem 
	CHARACTER*80	NOTIFY_PROBLEM_TEXT	! problem text
	INTEGER		NOTIFY_PROBLEM_LEN	! length of problem text
C
C Parameters to be passed from current session 
C Allow for local, global and external parameters
C These parameters will be entered in a command driven mode, which
C is entered by LAMPSCOTROL when the /PARAMETERS command qualifier
C is found.
C
C Maximum number of parameters in notify
C
	INTEGER		NOTIFY_MAX_PARAM
	PARAMETER	(NOTIFY_MAX_PARAM = 16)
C
C Local parameters
C
	INTEGER		NOTIFY_LOC_PARAM_NUM	! number of parameters
	CHARACTER*255	NOTIFY_LOC_PARAM_TXT(NOTIFY_MAX_PARAM)
						! parameter texts
	INTEGER		NOTIFY_LOC_PARAM_LEN(NOTIFY_MAX_PARAM)
						! parameter text lengths
C
C Global parameters
C
	INTEGER		NOTIFY_GLB_PARAM_NUM	! number of parameters
	CHARACTER*255	NOTIFY_GLB_PARAM_TXT(NOTIFY_MAX_PARAM)
						! parameter texts
	INTEGER		NOTIFY_GLB_PARAM_LEN(NOTIFY_MAX_PARAM)
						! parameter text lengths
C
C External parameters
C
	INTEGER		NOTIFY_EXT_PARAM_NUM	! number of parameters
	CHARACTER*255	NOTIFY_EXT_PARAM_TXT(NOTIFY_MAX_PARAM)
						! parameter texts
	INTEGER		NOTIFY_EXT_PARAM_LEN(NOTIFY_MAX_PARAM)
						! parameter text lengths
C
C Possible task states after session termination
C Stored in NOTIFY_SESSION_RESULT
C
	INTEGER		TASK_COMPLETE		! task is finished
	INTEGER		TASK_CONTINUE		! task to be continued
	INTEGER		TASK_ERROR		! error during session
	INTEGER		TASK_RESTART		! begin task again
	INTEGER		TASK_OFFLINE		! task going offline
	INTEGER		TASK_SUBFLOWLINE	! task is a subflowline
C
	PARAMETER	(TASK_COMPLETE=0)
	PARAMETER	(TASK_CONTINUE=1)
	PARAMETER	(TASK_ERROR=2)
	PARAMETER	(TASK_RESTART=3)
	PARAMETER	(TASK_OFFLINE=4)
	PARAMETER	(TASK_SUBFLOWLINE=5)
C
C
C Dealing with notification of job and project initiation
C From qualifiers on command line associated with
C notification of project or job creation
C /NOTIFY, /JOB_ID, /PROJECT_ID, /NEW_COMMAND_PROCEDURE, 
C /CREATION_RESULT
C
	LOGICAL		NOTIFY_JOB		! .T. notify job start
	LOGICAL		NOTIFY_PROJECT		! .T. notify proj start
	INTEGER		NOTIFY_JOB_ID		! job just initiated
	CHARACTER*40	NOTIFY_PROJECT_ID	! project just initiated
	INTEGER		NOTIFY_PROJECT_ID_LEN	! length of project id
	CHARACTER*255	NOTIFY_COMPROC		! job command procedure
	INTEGER		NOTIFY_COMPROC_LEN	! length com proc name
	INTEGER		NOTIFY_CREATION_RESULT	! result of job/project
						! creation attempt
C
C Possible values for notify creation result semaphore
C
	INTEGER		CREATION_FAILURE	! creation failed
	INTEGER		CREATION_SUCCESS	! creation succeeded
C
	PARAMETER	(CREATION_FAILURE = 1)
	PARAMETER	(CREATION_SUCCESS = 2)
C
C Dealing with qualifier driven job creation
C From command line qualifiers associated with non-interactive 
C job creation
C /MANAGE, /CREATE_JOB, /FLOWLINE_ID, /PROJECT_ID, /OUTER_TASK_ID,
C /PRIORITY
C
	LOGICAL		CREATE_JOB		! create a new job ?
	CHARACTER*40	NEW_JOB			! new job's name
	INTEGER		NEW_JOB_LEN		! job name length
	CHARACTER*40	NEW_JOB_PROJ		! project holding job
	INTEGER		NEW_JOB_PROJ_LEN	! project name length
	CHARACTER*40	NEW_JOB_FLOWLINE	! flowline where job is
	INTEGER		NEW_JOB_FLOWLINE_LEN	! flowline name length
	INTEGER		NEW_JOB_OUTER_TASK_ID	! id of task enclosing
						! flowline on which job
						! is started (for sub-
						! flowlines)
	INTEGER		NEW_JOB_PRIORITY	! priority of new job
C
C
C Common area
C
	COMMON /LSC__QUALIFIERS/ 
     &		NOTIFY, MANAGE, REQUEST, REPORT, MENU, LOGOFF, HAD_FAST,
     &		NOTIFY_JOB, NOTIFY_SESSION, NOTIFY_SESSION_ID, 
     &		NOTIFY_OUTCOME, NOTIFY_SESSION_RESULT, NOTIFY_JOB_ID, 
     &		NOTIFY_CPU, NOTIFY_PROJECT, NOTIFY_PROJECT_ID,
     &		NOTIFY_PROJECT_ID_LEN, NOTIFY_CREATION_RESULT, 
     &		NOTIFY_COMPROC, NOTIFY_COMPROC_LEN, NOTIFY_PROBLEM, 
     &		NOTIFY_PROBLEM_TEXT, NOTIFY_PROBLEM_LEN, 
     &		NOTIFY_LOC_PARAM_NUM, NOTIFY_LOC_PARAM_TXT, 
     &		NOTIFY_LOC_PARAM_LEN, NOTIFY_GLB_PARAM_NUM, 
     &		NOTIFY_GLB_PARAM_TXT, NOTIFY_GLB_PARAM_LEN,
     &		NOTIFY_EXT_PARAM_NUM, NOTIFY_EXT_PARAM_TXT,
     &		NOTIFY_EXT_PARAM_LEN, 
     &		CREATE_JOB, NEW_JOB, NEW_JOB_LEN, NEW_JOB_PROJ, 
     &		NEW_JOB_PROJ_LEN, NEW_JOB_OUTER_TASK_ID, 
     &		NEW_JOB_FLOWLINE, NEW_JOB_FLOWLINE_LEN, 
     &		NEW_JOB_PRIORITY, 
     &		WAIT_COMPROC_TIME
