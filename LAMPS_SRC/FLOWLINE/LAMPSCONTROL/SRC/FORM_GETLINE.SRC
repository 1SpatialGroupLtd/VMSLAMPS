C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1988-10-13 15:22:04.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	INTEGER FUNCTION FORM_GETLINE(FVAL,TERM,LINE,PROMPT)
C
***	MODULE FORM_GETLINE
***	IDENT 28SE88
C
C Copyright Laser-Scan Laboratories Ltd, Cambridge, England
C Author: J.M. Billing			3 May 1988
C
C Routine to get user entered data line in repsonse to prompt
C on the specified line
C
	IMPLICIT NONE
C
	INCLUDE 'LSL$LAMPSCONTROL:INTERACTIVE_IO.CMN'
	INCLUDE 'LSL$LAMPSCONTROL:LAMPSCONTROLMSG.PAR'
C
C arguments
	CHARACTER*(*)	FVAL	! value input by user
	INTEGER		TERM	! terminator used by user
	INTEGER		LINE	! line on which prompt to be output
				! defaults to last line
	CHARACTER*(*)	PROMPT	! prompt to be displayed
C
C w/s
	INTEGER		LOC_LINE! local copy of line number
C
C Assume success
C
	FORM_GETLINE = LSC__NORMAL
C
C Check that line number is not less than zero, and
C set default line number if it is zero
C
	LOC_LINE = LINE
	IF (LOC_LINE.LT.0) LOC_LINE = 0
	IF (LOC_LINE.EQ.0) LOC_LINE = LAST_LINE - 3
C
C Prompt the user and get input
C
	CALL FDV$GETDL(FVAL,TERM,LOC_LINE,PROMPT)
C
C If the last line - 3 is used, then this should carry the single
C help line
C
	IF (LOC_LINE.EQ.LAST_LINE - 3) THEN
	   CALL DISPLAY_HELP_LINE()
C
C Otherwise, line should just be blank
C
	ELSE
	   CALL FDV$PUTL(' ',LOC_LINE)
	ENDIF
C
C Exit
C
	RETURN
	END
