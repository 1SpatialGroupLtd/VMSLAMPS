C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1988-10-13 14:49:48.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
C
C INTERACTIVE_IO.CMN
C
C Common block for LAMPSCONTROL to hold the FMS storage areas, form 
C and menu information, and input and output channel numbers,  
C used by the (lower level) routines handling the interactive
C operations of the program.
C
C The /MENU qualifier is used to determine if the program is 
C operating interactively (see MENU variable in QUALIFIERS.CMN).
C
C 
C Workspace used by FMS in handling forms
C
C The FMS impure area variables (for FDV$INIT call)
C
	INTEGER		IS
	PARAMETER	(IS = 2000)
	BYTE		IMPURE (IS)	! 8(32 bit) integers
	INTEGER		IMPURE_SIZE	! size of impure area
C
C
C Details of current menu form, to allow
C communication with common option selection management routines
C
C Maximum possible number of lines in scrolled area (actual number
C will be less than this)
C
	INTEGER		MAX_AREA_LEN		! max no lines in 
	PARAMETER	(MAX_AREA_LEN = 20)	! scrolled menu area
C
C List of menu options. This array will only be used for menus
C containing a fixed number of options covering less than a
C single menu page.
C Other menus with larger/variable numbers of options will
C use local arrays. Suitable dimensions for such local arrays
C can be found in the common parameter block LSL$CMFLOWLINE:FLOW.PAR
C
	CHARACTER*60	OPT_LIST(MAX_AREA_LEN)	! available options
C
C Invariant options on menu
C These are the options which appear on every page of a multi-page
C menu e.g. 'Exit from LAMPSCONTROL', 'Move up to another menu',
C 'Jump to top level menu' etc
C
	CHARACTER*60	INV_LIST(MAX_AREA_LEN)	! invariant options 
						! appear on every menu 
						! page. eg logoff
C
C
C Actual number of lines (LEN) and columns (WID) in the
C menu scrolled area.
C These are defined as variables so that their values can be
C altered without changing the common block, so avoiding the
C need to recompile the whole program.
C Values are assigned to these variables in routine LAMPSCONTROL_INIT.
C
	INTEGER		OPT_AREA_LEN		! lines in scroll area
	INTEGER		OPT_AREA_WID		! cols in scroll area
C
C Name of current menu form and root name of option field in the
C menu scrolled area.
C Again values are assigned in the LAMPSCONTROL_INIT routine.
C
	CHARACTER*20	OPT_FIELD		! name of field
	CHARACTER*20	CURRENT_MENU		! current menu name
C
C Flag inidcating if the previous menu form is still present
C on the screen and whether it can be used (by replacing the text
C with new text)
C
	LOGICAL		PREVIOUS_MENU_USABLE	! re-use menu on screen?
C
C Flag indicating if there are currently any messages displayed
C on the screen (on the last 3 or so lines) which need clearing
C to make the screen look tidy
C
	LOGICAL		HAD_FORM_MESSAGE
C
C Authorisation forms scrolled area lengths (number of lines)
C The scrolled areas are used for entering/editing authorisation
C records for operators or workstations
C
	INTEGER		AUTH_AREA_LEN
	PARAMETER	(AUTH_AREA_LEN = 5)
C
C Element definition form scrolled area length (number of lines)
C The scrolled area is used for entering/editing element 
C outcome/activated wire identifiers.
C
	INTEGER		OUTCOME_AREA_LEN
	PARAMETER	(OUTCOME_AREA_LEN = 4)
C
C Menu form terminator key values
C These will be the possible terminator key values used
C by the operator to exit from FMS form/menu fields
C
	INTEGER		UP_ARROW	! Up cursor key
	INTEGER		DOWN_ARROW	! Down cursor key
	INTEGER		RETURN_KEY	! End of form key
	INTEGER		ABORT_FORM	! Abort form terminator
	INTEGER		EXIT_FORWARDS	! go forwards frm scrlld area 	
	INTEGER		EXIT_BACKWARDS	! go backwrds frm scrlld area
	INTEGER		NEXT_FIELD	! tab to next field
	INTEGER		AUTOTAB		! autotab to next field
	INTEGER		NEXT_LINE	! tab to next line in scrlld
	INTEGER		PREV_FIELD	! bs to prev field
	INTEGER		PREV_LINE	! bs to prev line in scrlld 
C
C The 'GOLD_BASE' parameter allows the value of any terminator
C key sequence GOLD + 'letter' to be found by adding the ASCII
C value of the letter to the GOLD_BASE value
C
	INTEGER		GOLD_BASE	! when added to this, the
					! ascii value of any character
					! will give the GOLD key value
					! NB difference between lower
					! and upper cases.
C
C Set up values of terminator parameters
C
	PARAMETER	(UP_ARROW = 9)
	PARAMETER	(DOWN_ARROW = 8)
	PARAMETER	(RETURN_KEY = 0)
	PARAMETER	(ABORT_FORM = 247)
	PARAMETER	(EXIT_FORWARDS = 5)
	PARAMETER	(EXIT_BACKWARDS = 4)
	PARAMETER	(NEXT_FIELD = 1)
	PARAMETER	(AUTOTAB = 3)
	PARAMETER	(NEXT_LINE = 6)
	PARAMETER	(PREV_FIELD = 2)
	PARAMETER	(PREV_LINE = 7)
	PARAMETER	(GOLD_BASE = 256)
C
C Actual size of screen terminal screen (in terms of first and last 
C lines)
C
	INTEGER		FIRST_LINE
	INTEGER		LAST_LINE
C
	PARAMETER	(FIRST_LINE = 1)
	PARAMETER	(LAST_LINE = 24)
C
C
C Channel numbers assigned to SYS$INPUT and SYS$OUTPUT by SYS$ASSIGN
C when the program is operating interactively. These are used
C for changing the terminal characteristics
C e.g. echo, type ahead, width
C
	INTEGER		CHAN_SYS$OUTPUT
	INTEGER		CHAN_SYS$INPUT
C
C
C Common areas
C
	COMMON /LSC__INTERACTIVE_IO/	
     &				IMPURE, IMPURE_SIZE, 
     &				OPT_LIST, INV_LIST,
     &				OPT_AREA_LEN, OPT_AREA_WID,
     &				OPT_FIELD, CURRENT_MENU,
     &				PREVIOUS_MENU_USABLE,
     &				HAD_FORM_MESSAGE,
     &				CHAN_SYS$OUTPUT, CHAN_SYS$INPUT
