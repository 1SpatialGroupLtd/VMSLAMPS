C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1988-12-23 11:22:26.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
C
C LARGE_ARRAYS.CMN
C
C A common block containing a number of large arrays used by different
C routines for various purposes.
C
C Many of these arrays were originally local to the routines which use
C them - using arrays contained in a common block reduces the amount
C of virtual memory required to run LAMPSCONTROL, which may be significant
C if a number of operators are using different instances of the program
C simultaneously.
C
C CAUTION: the drawback with using arrays in common is that, without
C some care, one routine may overwrite data which another routine may
C subsequently expect to use.
C 
C
C The maximum number of elements in each array. This number is obtained
C by inspection of the flowline library parameter file 'FLOW.PAR'.
C
	INTEGER		MAX_ARRAY_SIZE
	PARAMETER	(MAX_ARRAY_SIZE = 1000)
C
C The number of elements which would be found in a shorter array, or as the
C dimensions of a square array. Again this is derived by examining 'FLOW.PAR'
C
	INTEGER		SHORT_ARRAY_SIZE
	PARAMETER	(SHORT_ARRAY_SIZE = 100)
C
C Arrays to hold project information
C
	CHARACTER*20	A_PROJ_ID(MAX_ARRAY_SIZE)	! project id 
	INTEGER		A_PROJ_PRI(MAX_ARRAY_SIZE)	! project priority
	CHARACTER*20	A_PROJ_STATUS(MAX_ARRAY_SIZE)	! project status
C
C Arrays to hold job information
C
	INTEGER		A_JOB_ID(MAX_ARRAY_SIZE)	! job id
	CHARACTER*20	A_JOB_NAME(MAX_ARRAY_SIZE)	! job name
	INTEGER		A_JOB_PRI(MAX_ARRAY_SIZE)	! job priority
	CHARACTER*20	A_JOB_STATUS(MAX_ARRAY_SIZE)	! job status
C
C Arrays to hold task information
C
	INTEGER		A_TASK_ID(MAX_ARRAY_SIZE)	! task id
	CHARACTER*20	A_TASK_STATUS(MAX_ARRAY_SIZE)	! task status
C
C Arrays to hold session information
C
	INTEGER		A_SESS_ID(MAX_ARRAY_SIZE)	! session id
	CHARACTER*20	A_SESS_STATUS(MAX_ARRAY_SIZE)	! session status
C
C Arrays to hold flowline information
C
	CHARACTER*20	A_FLOW_ID(MAX_ARRAY_SIZE)	! flowline id
	INTEGER		A_FLOW_PRI(MAX_ARRAY_SIZE)	! flowline priority
C
C Arrays to hold element information
C
	CHARACTER*20	A_ELEM_ID(MAX_ARRAY_SIZE)	! element id
	INTEGER		A_ELEM_PRI(MAX_ARRAY_SIZE)	! element priority
	CHARACTER*20	A_START_ELEM_ID(MAX_ARRAY_SIZE)	! start element id
	CHARACTER*20	A_END_ELEM_ID(MAX_ARRAY_SIZE)	! end element id
C
C Arrays to hold wire information
C
	CHARACTER*20	A_WIRE_ID(MAX_ARRAY_SIZE)	! wire id
C
C Arrays to hold procedure information
C
	CHARACTER*20	A_PROC_ID(MAX_ARRAY_SIZE)	! procedure id
	INTEGER		A_PROC_PRI(MAX_ARRAY_SIZE)	! procedure priority
C
C Command procedure file specification array
C
	CHARACTER*255	A_COMPROC(MAX_ARRAY_SIZE)
C
C Array of operator ids
C
	CHARACTER*20	A_OPER_ID(MAX_ARRAY_SIZE)
C
C Array of workstation ids
C
	CHARACTER*20	A_WORK_ID(MAX_ARRAY_SIZE)
C
C Array of menu options
C
	CHARACTER*80	A_MENU(MAX_ARRAY_SIZE)
C
C Dimensions of square identifier arrays - because these are used in only
C a few places, they are equivalenced onto each other. For this reason
C caution must be excercised when using them - that no overwriting of one
C routines data is done by another routine, even when the array names in the
C two routines are different.
C
	CHARACTER*20	A_ID2(SHORT_ARRAY_SIZE,SHORT_ARRAY_SIZE)
	CHARACTER*20	A_WORK_ID2(SHORT_ARRAY_SIZE,SHORT_ARRAY_SIZE)
	CHARACTER*20	A_OPER_ID2(SHORT_ARRAY_SIZE,SHORT_ARRAY_SIZE)
	CHARACTER*20	A_WIRE_ID2(SHORT_ARRAY_SIZE,SHORT_ARRAY_SIZE)
C
C CAUTION: TWO DIMENSIONAL ARRAYS ARE EQUIVALENCED
C
	EQUIVALENCE	(A_ID2,A_WORK_ID2,A_OPER_ID2,A_WIRE_ID2)
C
C Common block
C
	COMMON /LSC__ARRAYS/	A_PROJ_ID, A_PROJ_PRI, A_PROJ_STATUS,
     &				A_JOB_ID, A_JOB_NAME, A_JOB_PRI, A_JOB_STATUS, 
     &				A_TASK_ID, A_TASK_STATUS,
     &				A_SESS_ID, A_SESS_STATUS,
     &				A_FLOW_ID, A_FLOW_PRI, 
     &				A_ELEM_ID, A_ELEM_PRI, 
     &				A_START_ELEM_ID, A_END_ELEM_ID, 
     &				A_WIRE_ID, 
     &				A_PROC_ID, A_PROC_PRI,
     &				A_COMPROC, A_MENU, A_OPER_ID, A_WORK_ID,
     &				A_ID2
