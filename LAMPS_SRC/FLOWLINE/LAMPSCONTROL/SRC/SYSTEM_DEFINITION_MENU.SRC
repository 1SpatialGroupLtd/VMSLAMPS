C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1988-10-13 13:35:50.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	INTEGER FUNCTION SYSTEM_DEFINITION_MENU()
C
***	MODULE SYSTEM_DEFINITION_MENU
***	IDENT 21SE88
C
C Copyright Laser-Scan Laboratories Ltd, Cambridge, England
C Author: J.M. Billing			30 August 1988
C
C Routine to display and allow selection from LAMPSCONTROL
C 'Flowline System Definition Menu'.
C Allows user to choose a static flowline component (system command
C procedure, flowine, element, procedure or wire) to define or
C redefine. Routines will be called to deal with each of these
C cases.
C
	IMPLICIT NONE
C
C common blocks
	INCLUDE 'LSL$LAMPSCONTROL:QUALIFIERS.CMN'
	INCLUDE 'LSL$LAMPSCONTROL:NEXT_FUNCTION.CMN'
	INCLUDE 'LSL$LAMPSCONTROL:INTERACTIVE_IO.CMN'
	INCLUDE 'LSL$LAMPSCONTROL:LAMPSCONTROLMSG.PAR'
C
C arguments
C
C workspace
	INTEGER		TERM		! field terminator
	LOGICAL		REDO		! .T. if to redisplay
	INTEGER		OPT_NUM		! number of options
	INTEGER		CURRENT_OPT	! current option
	INTEGER		INV_NUM		! number of invariants
	INTEGER		CURRENT_INV	! current invariant
C
C functions
	INTEGER	DISPLAY_MENU
	INTEGER	GET_MENU_OPTION
	INTEGER	CREATE_SYSTEM_DEFINITION
	INTEGER	CREATE_FLOWLINE_DEFINITION
	INTEGER	CREATE_ELEMENT_DEFINITION
	INTEGER	CREATE_WIRE_DEFINITION
	INTEGER	CREATE_PROCEDURE_DEFINITION
C
C Set up current option
C
	CURRENT_OPT = 1
C
C Assume success
C
10	SYSTEM_DEFINITION_MENU = LSC__NORMAL
C
C Set up options for system definition menu
C
	OPT_LIST(1) = 'System command procedure definition'
	OPT_LIST(2) = 'Flowline definition'
	OPT_LIST(3) = 'Element definition'
	OPT_LIST(4) = 'Wire definition'
	OPT_LIST(5) = 'Procedure definition'
	OPT_LIST(6) = 'Move up to main management menu'
	OPT_LIST(7) = 'Jump to top level menu'
C
C Set up length of option list
C If management menu is top level (ie /MANAGE used) then jump to
C top option is not needed
C
	IF (MANAGE) THEN
	   OPT_NUM = 6
	ELSE
	   OPT_NUM = 7
	ENDIF
C
C and number of invariant options (none)
C
	INV_NUM = 0
C
C Display menu form
C
	SYSTEM_DEFINITION_MENU = DISPLAY_MENU(
     &		'              Flowline System Definition Menu',
     &		'Selection of static system component to define',
     &		'The following options are available :')
C
C Check for errors
C
	IF (.NOT.SYSTEM_DEFINITION_MENU) GOTO 900
C
C Set display flag to indicate doing for first time
C
	REDO = .TRUE.
C
C Get required option
C
20	SYSTEM_DEFINITION_MENU = GET_MENU_OPTION(
     &		OPT_LIST,		! option list
     &		OPT_NUM,		! number of options
     &		INV_LIST,		! invariant list
     &		INV_NUM,		! number of invariants
     &		CURRENT_OPT,		! current option
     &		CURRENT_INV,	! current invariant option
     &		OPT_AREA_LEN,		! number of lines in scroll area
     &		OPT_FIELD,		! field name
     &		TERM,			! field terminator found
     &		REDO)			! .T. if to redisplay menu
C
C Check for errors
C
	IF (.NOT.SYSTEM_DEFINITION_MENU) GOTO 900
C
C Set display flag to indicate don't need to redisplay
C
	REDO = .FALSE.
C
C Check if have required field terminator
C
	IF (TERM.NE.RETURN_KEY) GOTO 20
C
C Check for errors
C
	IF (.NOT.SYSTEM_DEFINITION_MENU) GOTO 900
C
C Now set up semaphore to indicate to command file writing routines the
C required operation and flags to indicate what has been chosen
C
C System command procedure definition
C
	IF (CURRENT_OPT.EQ.1) THEN
	   SYSTEM_DEFINITION_MENU = CREATE_SYSTEM_DEFINITION()
C
C Flowline definition
C
	ELSEIF (CURRENT_OPT.EQ.2) THEN
	   SYSTEM_DEFINITION_MENU = CREATE_FLOWLINE_DEFINITION()
C
C Element definition
C
	ELSEIF (CURRENT_OPT.EQ.3) THEN
	   SYSTEM_DEFINITION_MENU = CREATE_ELEMENT_DEFINITION()
C
C Wire definition
C
	ELSEIF (CURRENT_OPT.EQ.4) THEN
	   SYSTEM_DEFINITION_MENU = CREATE_WIRE_DEFINITION()
C
C Procedure definition form
C
	ELSEIF (CURRENT_OPT.EQ.5) THEN
	   SYSTEM_DEFINITION_MENU = CREATE_PROCEDURE_DEFINITION()
C
C Move to higher level menu
C
	ELSEIF (CURRENT_OPT.EQ.6) THEN
	   NEXT_FUNCTION = DO_MOVE_UP_LEVEL
	   GOTO 900
C
C Perform go top
C
	ELSEIF (CURRENT_OPT.EQ.7) THEN
	   NEXT_FUNCTION = DO_GO_TOP
C
C Default do nothing
C
	ELSE
	   NEXT_FUNCTION = DO_ERROR
	ENDIF
C
C Check if need to repeat menu
C
	IF (NEXT_FUNCTION.EQ.DO_MOVE_UP_LEVEL) THEN
	   NEXT_FUNCTION = DO_ERROR
	   GOTO 10
	ENDIF
C
C Exit
C
900	RETURN
	END
