	INTEGER FUNCTION TITLE_PAGE()
C
***	MODULE TITLE_PAGE
***	IDENT 28SE88
C
C Copyright Laser-Scan Laboratories Ltd, Cambridge, England
C Author: J.M. Billing			13 April 1988
C
C Routine to output FMS title page for LAMPSCONTROL
C
C
	IMPLICIT NONE
C
	INCLUDE 'LSL$LAMPSCONTROL:QUALIFIERS.CMN'
	INCLUDE 'LSL$LAMPSCONTROL:INTERACTIVE_IO.CMN'
	INCLUDE 'LSL$LAMPSCONTROL:LAMPSCONTROLMSG.PAR'
C
C w/s
	CHARACTER*100	MENU_LINE	! line on menu saying what's
					! going on
C
C functions
	INTEGER	FDV$INIT
	INTEGER	FDV$SPON
	INTEGER	FDV$SPADA
	INTEGER	FDV$CLEAR
	INTEGER	FDV$CDISP
	INTEGER	FDV$LOAD
	INTEGER	FDV$DISPW
	INTEGER	FDV$PFT
	INTEGER	FDV$PUTL
	INTEGER	SYS$ASSIGN
	INTEGER	WANT_TYPE_AHEAD
	INTEGER	WANT_CURSOR
C
C Assume success
C
	TITLE_PAGE = LSC__NORMAL
C
C Firstly, assign a channel to the current SYS$OUTPUT, which
C must be a terminal (this must be ascertained before this
C routine is called)
C
	TITLE_PAGE = SYS$ASSIGN(
     &			'SYS$OUTPUT',		! output device
     &			CHAN_SYS$OUTPUT,,)	! channel for device
C
C Test for errors in assigning the device
C Exit if get an error, because it will be pretty catastrophic
C
	IF (.NOT.TITLE_PAGE) THEN
	   CALL LCONT_PUTMSG(TITLE_PAGE,0)
	   GOTO 900
	ENDIF
C
C Firstly, assign a channel to the current SYS$INPUT, which
C must be a terminal (this must be ascertained before this
C routine is called)
C
	TITLE_PAGE = SYS$ASSIGN(
     &			'SYS$INPUT',		! output device
     &			CHAN_SYS$INPUT,,)	! channel for device
C
C Test for errors in assigning the device
C Exit if get an error, because it will be pretty catastrophic
C
	IF (.NOT.TITLE_PAGE) THEN
	   CALL LCONT_PUTMSG(TITLE_PAGE,0)
	   GOTO 900
	ENDIF
C
C Turn off type ahead on the current terminal
C
	TITLE_PAGE = WANT_TYPE_AHEAD(.FALSE.)
C
C Check for errors
C
	IF (.NOT.TITLE_PAGE) GOTO 900
C
C Turn off cursor on current terminal - it will be turned back on by
C any parts of the program which required it
C
	TITLE_PAGE = WANT_CURSOR(.FALSE.)
C
C Check for errors
C
	IF (.NOT.TITLE_PAGE) GOTO 900
C
C Initialise FMS, impure area size variable and impure area itself
C
	IMPURE_SIZE = IS
C
	TITLE_PAGE = FDV$INIT(%DESCR(IMPURE), IMPURE_SIZE)
C
C Check for errors
C
	IF (.NOT.TITLE_PAGE) THEN
	   MENU = .FALSE.
	   CALL LCONT_PUTMSG(TITLE_PAGE,0)
	   GOTO 900
	ENDIF
C
C Turn on the supervisor mode - some forms/menus have fields
C which should generally be display only, but which may be used
C for some prompted interaction with the user.
C
	TITLE_PAGE = FDV$SPON()
C
C Check for errors
C
	IF (.NOT.TITLE_PAGE) THEN
	   MENU = .FALSE.
	   CALL LCONT_PUTMSG(TITLE_PAGE,0)
	   GOTO 900
	ENDIF
C
C Set up the alternate keypad to application mode
C
	TITLE_PAGE = FDV$SPADA(1)
C
C Check for errors
C
	IF (.NOT.TITLE_PAGE) THEN
	   MENU = .FALSE.
	   CALL LCONT_PUTMSG(TITLE_PAGE,0)
	   GOTO 900
	ENDIF
C
C Clear the screen, prior to loading and displaying the title form
C
CCC	TITLE_PAGE = FDV$CLEAR()
C
C Check for errors
C
CCC	IF (.NOT.TITLE_PAGE) THEN
CCC	   MENU = .FALSE.
CCC	   CALL LCONT_PUTMSG(TITLE_PAGE,0)
CCC	   GOTO 900
CCC	ENDIF
C
C Load first page into workspace, telling user to wait
C
CCC	TITLE_PAGE = FDV$LOAD(CURRENT_MENU)
	TITLE_PAGE = FDV$CDISP('TITLE_PAGE')
C
C Check for errors
C
	IF (.NOT.TITLE_PAGE) THEN
	   MENU = .FALSE.
	   CALL LCONT_PUTMSG(TITLE_PAGE,0)
	   GOTO 900
	ENDIF
C
C Setup flashing 'PLEASE WAIT' line
C Blinking text : '<ESC>[5m'
C Normal text   : '<ESC>[0m'
C
CCC	CALL EXPAND('%WS% %(12 %)% %A1[5m'//
CCC     &		    'YOUR AUTHORISATION IS BEING VERIFIED'//
CCC     &		    '%A1[0m',
CCC     &		    MENU_LINE,27,27)
C
C Output line to top of menu option area
C
CCC	TITLE_PAGE = FDV$PFT(UP_ARROW,OPT_FIELD,MENU_LINE)
C
C Check for errors
C
CCC	IF (.NOT.TITLE_PAGE) THEN
CCC	   MENU = .FALSE.
CCC	   CALL LCONT_PUTMSG(TITLE_PAGE,0)
CCC	   GOTO 900
CCC	ENDIF
C
C Now display the completed form
C
CCC	TITLE_PAGE = FDV$DISPW()
C
C Check for errors
C
CCC	IF (.NOT.TITLE_PAGE) THEN
CCC	   MENU = .FALSE.
CCC	   CALL LCONT_PUTMSG(TITLE_PAGE,0)
CCC	   GOTO 900
CCC	ENDIF
C
C Output blank line to overwrite 'PF2 = Help Key' text
C
CCC	TITLE_PAGE = FDV$PUTL(' ',(LAST_LINE - 3))
C
C Check for errors
C
CCC	IF (.NOT.TITLE_PAGE) THEN
CCC	   MENU = .FALSE.
CCC	   CALL LCONT_PUTMSG(TITLE_PAGE,0)
CCC	   GOTO 900
CCC	ENDIF
C
C Set flag indicating menu page NOT usable (because of flashing message)
C about authorisation being verified)
C
C Clear flag to indicate previous menu NOT usable (title page and
C normal menu look the same, but are different forms).
C
	PREVIOUS_MENU_USABLE = .FALSE.
C
C Exit
C
900	RETURN
	END
