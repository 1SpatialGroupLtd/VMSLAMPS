C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1992-04-15 17:10:42.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	INTEGER FUNCTION REQUEST_MENU()
C
***	MODULE REQUEST_MENU
***	IDENT 15AP92
C
C Copyright Laser-Scan Laboratories Ltd, Cambridge, England
C Author: J.M. Billing			13 April 1988
C
C Function to provide overall control of display of a
C project, job or task request menu
C
C
	IMPLICIT NONE
C
	INCLUDE 'LSL$LAMPSCONTROL:QUALIFIERS.CMN'
	INCLUDE 'LSL$LAMPSCONTROL:CURRENT_ITEMS.CMN'
	INCLUDE 'LSL$LAMPSCONTROL:NEXT_FUNCTION.CMN'
	INCLUDE 'LSL$LAMPSCONTROL:LAMPSCONTROLMSG.PAR'
	INCLUDE 'LSL$CMNFLOWLINE:FLOWLINEMSG.PAR'
C
C w/s
	INTEGER	OK			! return code
C
C functions
	INTEGER		FLN_RETRIEVE_CURRENT
	INTEGER		PROJECT_REQUEST_MENU
	INTEGER		JOB_REQUEST_MENU
	INTEGER		TASK_REQUEST_MENU
	INTEGER		FLN_SET_CURRENT_PROJECT
	INTEGER		FLN_SET_CURRENT_JOB
	INTEGER		FLN_SET_CURRENT_TASK
C
C
C Assume success
C
	REQUEST_MENU = LSC__NORMAL
C
C Find out status of current job and project so that can decide
C which menu out of project/job/task to go to first
C
	REQUEST_MENU = FLN_RETRIEVE_CURRENT(
     &				OPERATOR_ID,
     &				PROJECT_ID,
     &				PROJECT_STATUS,
     &				JOB_ID,
     &				JOB_NAME,
     &				JOB_STATUS,
     &				ELEMENT_ID)
C
C Check for errors
C
	IF (.NOT.REQUEST_MENU) THEN
C
C Check if can't find user
C
	   IF (REQUEST_MENU.EQ.FLN__NOSUCHOP) THEN
	      CALL LCONT_PUTMSG(LSC__UNKNOWNOP,0)
	      CALL LCONT_ADDMSG(REQUEST_MENU,0)
	      GOTO 70
C
C Check if can't find project
C
	   ELSEIF (REQUEST_MENU.EQ.FLN__NOSUCHPROJ) THEN
	      GOTO 10
C
C Check if can't find job
C
	   ELSEIF (REQUEST_MENU.EQ.FLN__NOSUCHJOB) THEN
	      GOTO 20
C
C Otherwise, just general error message
C
	   ELSE
	      CALL LCONT_PUTMSG(LSC__UNRETCURRENT,0)
	      CALL LCONT_ADDMSG(REQUEST_MENU,0)
	      GOTO 70
	   ENDIF
	ENDIF
C
C Determine which menu to access, depending on whether operator's
C current project and job are active.
C
C If current project is not active, must choose a new one
C with project menu
C
	IF (PROJECT_STATUS.NE.'Active') THEN
	   GOTO 10	! project menu
C
C If current job is not active, must choose a new one
C with job menu
C
	ELSEIF (JOB_STATUS.NE.'Active') THEN
	   GOTO 20	! job menu
C
C Otherwise, can go straight into choosing task
C
	ELSE
	   GOTO 30	! task menu
	ENDIF
C
C Code to take care of moving up and down through menus in correct
C order
C
C Do the project menu,
C	if move up, then exit
C	if choose, go to job menu
C
10	REQUEST_MENU = PROJECT_REQUEST_MENU()
C
C Check for errors
C
	IF (.NOT.REQUEST_MENU) GOTO 60
C
C Move down to job choice menu, setting new current project
C
	IF (NEXT_FUNCTION.EQ.DO_MOVE_DOWN_LEVEL) THEN
	   CALL FLN_SET_CURRENT_PROJECT(OPERATOR_ID,PROJECT_ID)
	   GOTO 20
	ENDIF
C
C Move up to top level menu
C
	IF (NEXT_FUNCTION.EQ.DO_MOVE_UP_LEVEL) GOTO 40
C
C Explicit logoff option
C
	IF (NEXT_FUNCTION.EQ.DO_LOGOFF) GOTO 40
C
C Default is to exit
C
	GOTO 40
C
C Do the job menu,
C	if move up, then go to project menu
C	if choose, then go to task menu
C 
20	REQUEST_MENU = JOB_REQUEST_MENU()
C
C Check for errors
C
	IF (.NOT.REQUEST_MENU) GOTO 60
C
C Move down to task choice menu, setting new current job
C
	IF (NEXT_FUNCTION.EQ.DO_MOVE_DOWN_LEVEL) THEN
	   CALL FLN_SET_CURRENT_JOB(OPERATOR_ID,JOB_ID)
	   GOTO 30
	ENDIF
C
C Move up to project menu
C
	IF (NEXT_FUNCTION.EQ.DO_MOVE_UP_LEVEL) GOTO 10
C
C Explicit go top option
C
	IF (NEXT_FUNCTION.EQ.DO_GO_TOP) GOTO 35
C
C Default is to exit
C
	GOTO 40
C
C Do the task menu,
C	if move up, then go to job menu
C	if choose, then exit with choice
C
30	REQUEST_MENU = TASK_REQUEST_MENU()
C
C Check for errors
C
	IF (.NOT.REQUEST_MENU) GOTO 60
C
C Have chosen task/job/project, so set new current task and do it
C
	IF (NEXT_FUNCTION.EQ.DO_TASK) THEN
	   CALL FLN_SET_CURRENT_TASK(OPERATOR_ID,TASK_ID)
	   GOTO 50
	ENDIF
C
C Move up to job menu
C
	IF (NEXT_FUNCTION.EQ.DO_MOVE_UP_LEVEL) GOTO 20
C
C Move up to project menu
C
	IF (NEXT_FUNCTION.EQ.DO_PROJECT) GOTO 10
C
C Explicit go top option
C
	IF (NEXT_FUNCTION.EQ.DO_GO_TOP) GOTO 35
C
C Default is to exit
C
	GOTO 40
C
C Deal with go to top level menu option
C If command line had /REQUEST on it, this is project menu
C If command line had no /REQUEST, this is control menu
C
35	IF (REQUEST) THEN
	   GOTO 10		! project menu
	ELSE
	   GOTO 70		! higher level menu
	ENDIF
C
C Deal with logoff or exit to higher level option
C
40	GOTO 70
C
C Have chosen a project/task/job
C
50	GOTO 70
C
C Errors
C
60	GOTO 70
C
C Exit
C
70	RETURN
	END
