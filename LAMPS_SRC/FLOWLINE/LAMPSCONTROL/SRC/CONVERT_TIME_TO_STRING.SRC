	INTEGER FUNCTION CONVERT_TIME_TO_STRING(TIME,LENGTH,STRING)
C
***	MODULE CONVERT_TIME_TO_STRING
***	IDENT 14SE88
C
C Copyright Laser-Scan Laboratories Ltd, Cambridge, England
C Author: J.M. Billing			14 September 1988
C
C Routine to convert a time, in 100ths of seconds, into a string
C containing a number of days and a DEC VMS ascii time :
C
C		DDD-HH:MM:SS.CC
C
	IMPLICIT NONE
C
C common blocks
	INCLUDE 'LSL$LAMPSCONTROL:LAMPSCONTROLMSG.PAR'
C
C arguments
	INTEGER		TIME		! time in 100ths of seconds
	CHARACTER*(*)	STRING		! output string
	INTEGER		LENGTH		! output string length
C
C workspace
	INTEGER		DAYS		! number of days
	CHARACTER*20	TIME_STR	! time string
	INTEGER		TIME_LEN	! time string length
C
C functions
	INTEGER		CVT_TIME_STR
	INTEGER		SIGCHS
C
C Assume success
C
	CONVERT_TIME_TO_STRING = LSC__NORMAL
C
C Check if time is unset (<0)
C
	IF (TIME.LT.0) THEN
	   STRING = 'Unset'
C
C Otherwise, convert time in 100ths seconds into days + time string
C
	ELSE
C
C Determine how many days there are, by dividing input time by
C the number of 100ths of seconds in a day
C
	   DAYS = TIME / (24 * 3600 * 100)
C
C Convert remainder of input time into a time string
C
	   CONVERT_TIME_TO_STRING = 
     &		CVT_TIME_STR(
     &			MOD(TIME,(24 * 3600 * 100)),
     &			TIME_LEN,
     &			TIME_STR)
C
C Deal with errors in conversion - return suitable value
C
	   IF (.NOT.CONVERT_TIME_TO_STRING) THEN
	      STRING = 'Indeterminable'
C
C Otherwise, the conversion has been completed successfully, so
C assemble the output string in the format DDD-HH:MM:SS.CC
C Pad the number of days with 0s
C
C If there are less than 1000 days, output number of days
C
	   ELSEIF (DAYS.LE.999) THEN
	      CALL EXPAND('%WS%P0%I3-%S',
     &			STRING,			! output string
     &			DAYS,			! number of days
     &			TIME_STR(1:TIME_LEN))	! time in day
C
C If there are 1000 or more days, output '***' instead of days
C
	   ELSE
	      CALL EXPAND('%WS***-%S',
     &			STRING,			! output string
     &			TIME_STR(1:TIME_LEN))	! time in day
	   ENDIF
	ENDIF
C
C Determine length of output string
C
	LENGTH = SIGCHS(STRING)
C
C Exit
C
	RETURN
	END
