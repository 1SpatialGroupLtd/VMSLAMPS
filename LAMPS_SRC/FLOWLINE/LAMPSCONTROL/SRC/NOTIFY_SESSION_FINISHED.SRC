	INTEGER FUNCTION NOTIFY_SESSION_FINISHED()
C
***	MODULE NOTIFY_SESSION_FINISHED
***	IDENT 30SE88
C
C Copyright Laser-Scan Laboratories Ltd, Cambridge, England
C Author: J.M. Billing			13 April 1988
C
C Routine to notify flowline control database that a session has
C been completed with the specified result
C
C
	IMPLICIT NONE
C
	INCLUDE 'LSL$LAMPSCONTROL:QUALIFIERS.CMN'
	INCLUDE 'LSL$LAMPSCONTROL:LAMPSCONTROLMSG.PAR'
	INCLUDE 'LSL$CMNFLOWLINE:FLOWLINEMSG.PAR'
C
C w/s
	CHARACTER*200	MSG		! text of returned message
	INTEGER		MSGLEN		! length of returned message
C
C f/s
	INTEGER	FLN_SESS_COMPLETE	! task completed by session
	INTEGER	FLN_SESS_CONTINUE	! task to be continued
	INTEGER	FLN_SESS_ERROR		! error in performing session
	INTEGER	FLN_SESS_RESTART	! must restart task at beginning
	INTEGER	FLN_SESS_OFFLINE	! task/session going offline
	INTEGER	FLN_SESS_SUBFLOWLINE	! task contains sub flowline
C
C Assume success
C
	NOTIFY_SESSION_FINISHED = LSC__NORMAL
C
C Find out the result of the session, and notify the database
C accordingly
C
C Check for task completion
C
	IF (NOTIFY_SESSION_RESULT.EQ.TASK_COMPLETE) THEN
C
C Output appropriate message
C
	   CALL LCONT_PUTMSG(LSC__SESSCOMPLETE,0)
C
C Inform database of result, and of any parameters to
C be passed forwards to next task
C
	   NOTIFY_SESSION_FINISHED = 
     &			FLN_SESS_COMPLETE(
     &			NOTIFY_SESSION_ID,
     &			NOTIFY_OUTCOME,
     &			NOTIFY_CPU,
     &			NOTIFY_LOC_PARAM_NUM,
     &			NOTIFY_LOC_PARAM_TXT,
     &			NOTIFY_GLB_PARAM_NUM,
     &			NOTIFY_GLB_PARAM_TXT,
     &			NOTIFY_EXT_PARAM_NUM,
     &			NOTIFY_EXT_PARAM_TXT)
C
C Check for end of session but not of task
C
	ELSEIF (NOTIFY_SESSION_RESULT.EQ.TASK_CONTINUE) THEN
C
C Output appropriate message
C
	   CALL LCONT_PUTMSG(LSC__SESSCONTINUE,0)
C
C Inform database of result
C
	   NOTIFY_SESSION_FINISHED =
     &			FLN_SESS_CONTINUE(
     &			NOTIFY_SESSION_ID,
     &			NOTIFY_CPU,
     &			NOTIFY_LOC_PARAM_NUM,
     &			NOTIFY_LOC_PARAM_TXT,
     &			NOTIFY_GLB_PARAM_NUM,
     &			NOTIFY_GLB_PARAM_TXT,
     &			NOTIFY_EXT_PARAM_NUM,
     &			NOTIFY_EXT_PARAM_TXT)
C
C Check for error in performing session
C
	ELSEIF (NOTIFY_SESSION_RESULT.EQ.TASK_ERROR) THEN
C
C Output appropriate message
C
	   CALL LCONT_PUTMSG(LSC__SESSERROR,0)
C
C Inform database of result
C
	   NOTIFY_SESSION_FINISHED =
     &			FLN_SESS_ERROR(
     &			NOTIFY_SESSION_ID,
     &			NOTIFY_CPU,
     &			NOTIFY_LOC_PARAM_NUM,
     &			NOTIFY_LOC_PARAM_TXT,
     &			NOTIFY_GLB_PARAM_NUM,
     &			NOTIFY_GLB_PARAM_TXT,
     &			NOTIFY_EXT_PARAM_NUM,
     &			NOTIFY_EXT_PARAM_TXT)
C
C Check for session continuing offline
C
	ELSEIF (NOTIFY_SESSION_RESULT.EQ.TASK_OFFLINE) THEN
C
C Output appropriate message
C
	   CALL LCONT_PUTMSG(LSC__SESSOFFLINE,0)
C
C Inform database of result
C
	   NOTIFY_SESSION_FINISHED =
     &			FLN_SESS_OFFLINE(
     &			NOTIFY_SESSION_ID,
     &			NOTIFY_CPU,
     &			NOTIFY_LOC_PARAM_NUM,
     &			NOTIFY_LOC_PARAM_TXT,
     &			NOTIFY_GLB_PARAM_NUM,
     &			NOTIFY_GLB_PARAM_TXT,
     &			NOTIFY_EXT_PARAM_NUM,
     &			NOTIFY_EXT_PARAM_TXT)
C
C Check for restart task, e.g. due to error while doing session
C
	ELSEIF (NOTIFY_SESSION_RESULT.EQ.TASK_RESTART) THEN
C
C Output appropriate message
C
	   CALL LCONT_PUTMSG(LSC__SESSRESTART,0)
C
C Inform database of result
C
	   NOTIFY_SESSION_FINISHED =
     &			FLN_SESS_RESTART(
     &			NOTIFY_SESSION_ID,
     &			NOTIFY_CPU,
     &			NOTIFY_LOC_PARAM_NUM,
     &			NOTIFY_LOC_PARAM_TXT,
     &			NOTIFY_GLB_PARAM_NUM,
     &			NOTIFY_GLB_PARAM_TXT,
     &			NOTIFY_EXT_PARAM_NUM,
     &			NOTIFY_EXT_PARAM_TXT)
C
C Check for task doing subflowline 
C
	ELSEIF (NOTIFY_SESSION_RESULT.EQ.TASK_SUBFLOWLINE) THEN
C
C Output appropriate message
C
	   CALL LCONT_PUTMSG(LSC__SESSSUBFLOWLINE,0)
C
C Inform database of result
C
	   NOTIFY_SESSION_FINISHED =
     &			FLN_SESS_SUBFLOWLINE(
     &			NOTIFY_SESSION_ID,
     &			NOTIFY_CPU,
     &			NOTIFY_LOC_PARAM_NUM,
     &			NOTIFY_LOC_PARAM_TXT,
     &			NOTIFY_GLB_PARAM_NUM,
     &			NOTIFY_GLB_PARAM_TXT,
     &			NOTIFY_EXT_PARAM_NUM,
     &			NOTIFY_EXT_PARAM_TXT)
	ENDIF
C
C Check for and report any errors
C
	IF (.NOT.NOTIFY_SESSION_FINISHED) THEN
	   CALL LCONT_PUTMSG(LSC__UNFINSESS,0)
	   CALL LCONT_ADDMSG(NOTIFY_SESSION_FINISHED,0)
	ENDIF
C
C Exit
C
	RETURN
	END
