	INTEGER FUNCTION REPORT_DEFINITION_MENU()
C
***	MODULE REPORT_DEFINITION_MENU
***	IDENT 05OC88
C
C Copyright Laser-Scan Laboratories Ltd, Cambridge, England
C Author: J.M. Billing			13 April 1988
C
C Routine to allow selection of option from report menu
C It is assumed that authorisation checks have been carried
C out before reaching this routine
C
C
	IMPLICIT NONE
C
	INCLUDE 'LSL$LAMPSCONTROL:QUALIFIERS.CMN'
	INCLUDE 'LSL$LAMPSCONTROL:NEXT_FUNCTION.CMN'
	INCLUDE 'LSL$LAMPSCONTROL:INTERACTIVE_IO.CMN'
	INCLUDE 'LSL$LAMPSCONTROL:LAMPSCONTROLMSG.PAR'
C
C w/s
	INTEGER		I		! temporary index
	INTEGER		TERM		! field terminator
	INTEGER		REDO		! .T. if to redisplay
	INTEGER		OPT_NUM		! number of options
	INTEGER		CURRENT_OPT	! current option
	INTEGER		INV_NUM		! number of invariants
	INTEGER		CURRENT_INV	! current invariant
	LOGICAL		PRINT		! .T. if to print report
	LOGICAL		ABORT_REPORT	! .T. if to abort report
	INTEGER		STATUS		! status return codes
	CHARACTER*20	FLN_ID		! flowline for element/wire rep
C
C function
	INTEGER		DISPLAY_MENU
	INTEGER		GET_MENU_OPTION
	INTEGER		WIDE_SCREEN
	INTEGER		OPEN_REPORT_FILE
	INTEGER		CLOSE_REPORT_FILE
	INTEGER		FLOWLINE_DEFINITION_REPORT
	INTEGER		PROCEDURE_DEFINITION_REPORT
	INTEGER		FLOWLINE_SELECTION_MENU
	INTEGER		ELEMENT_DEFINITION_REPORT
	INTEGER		WIRE_DEFINITION_REPORT
C
C Initial option number
C
	CURRENT_OPT = 1
C
C Assume success
C
10	REPORT_DEFINITION_MENU = LSC__NORMAL
C
C Set up options (except go top and move up) for REPORT menu
C
	OPT_LIST(1) = 'Flowline definition report'
	OPT_LIST(2) = 'Element definition report'
	OPT_list(3) = 'Wire definition report'
	OPT_LIST(4) = 'Procedure definition report'
C
C Set up option to move up to report menu
C
	OPT_LIST(5)='Move up to main report menu'
C
C Set up go top option
C
	OPT_LIST(6) = 'Jump to top level menu'
C
C Set up length of option list
C If report menu is top level menu (ie /REPORT used on command line)
C then jump to top level option is not needed
C
	IF (REPORT) THEN 
	   OPT_NUM = 5
	ELSE
	   OPT_NUM = 6
	ENDIF
C
C and number of invariant options (none)
C
	INV_NUM = 0
C
C Display menu form
C
	REPORT_DEFINITION_MENU = DISPLAY_MENU(
     &		'System Definition Report Menu',
     &		'Selection of system definition report operations',
     &		'The following options are available:')
C
C Check for errors
C
	IF (.NOT.REPORT_DEFINITION_MENU) GOTO 900
C
C Set display flag to indicate doing for first time
C
	REDO = .TRUE.
C
C Get required option
C
20	REPORT_DEFINITION_MENU = GET_MENU_OPTION(
     &		OPT_LIST,		! option list
     &		OPT_NUM,		! number of options
     &		INV_LIST,		! invariant list
     &		INV_NUM,		! number of invariants
     &		CURRENT_OPT,		! current option
     &		CURRENT_INV,		! current invariant option
     &		OPT_AREA_LEN,		! number of lines in scroll area
     &		OPT_FIELD,		! field name
     &		TERM,			! field terminator found
     &		REDO)			! .T. if to redisplay menu
C
C Check for errors
C
	IF (.NOT.REPORT_DEFINITION_MENU) GOTO 900
C
C Set display flag to indicate don't need to redisplay
C
	REDO = .FALSE.
C
C Check if have required field terminator
C i.e. return key for any option, or GOLD P for list procedures
C or flowlines
C Set print flag to .TRUE. (for procedure list) only if GOLD P
C was used to indicate report should be printed.
C
	IF (TERM.EQ.RETURN_KEY) THEN
	   PRINT = .FALSE.
C
C Check for GOLD P with list procedures or flowlines option, 
C set print report flag if GOLD P was typed.
C
	ELSEIF ((CURRENT_OPT.LE.4).AND.
     &		((TERM.EQ.(GOLD_BASE + ICHAR('P'))).OR.
     &		 (TERM.EQ.(GOLD_BASE + ICHAR('p'))))) THEN
	   PRINT = .TRUE.
C
C Otherwise, the terminator is not one of the permitted ones, so
C loop to fetch next one
C
	ELSE
	   GOTO 20
	ENDIF
C
C For the options to examine the elements or wires, user must
C also choose a flowline for which in examine elements/wires
C
	IF ((CURRENT_OPT.EQ.2).OR.(CURRENT_OPT.EQ.3)) THEN
C
C Set flag to indicate current report definition menu needs 
C redisplaying
C
	   REDO = .TRUE.
C
C Allow user to choose a flowline from a menu
C Set up title string suffix to indicate whether selection is for
C choosing a wire or an element report
C
	   IF (CURRENT_OPT.EQ.2) THEN
	      REPORT_DEFINITION_MENU = FLOWLINE_SELECTION_MENU(
     &				'for element definition report',
     &				FLN_ID)
	   ELSE
	      REPORT_DEFINITION_MENU = FLOWLINE_SELECTION_MENU(
     &				'for wire definition report',
     &				FLN_ID)
	   ENDIF
C
C Check for errors, repeat current menu if there are any
C
	   IF (.NOT.REPORT_DEFINITION_MENU) THEN
	      NEXT_FUNCTION = DO_ERROR
	      GOTO 10
	   ENDIF
C
C Check if user has not chosen a flowline, but the 'Move up..' 
C option on the flowline menu
C Repeat current menu if this was chosen
C
	   IF (NEXT_FUNCTION.EQ.DO_NOTHING) THEN
	      NEXT_FUNCTION = DO_ERROR
	      GOTO 10
	   ENDIF
C
C Check if the user has chosen the go top option on the menu,
C if so exit from current routine
C
	   IF (NEXT_FUNCTION.EQ.DO_GO_TOP) GOTO 900
	ENDIF
C
C Set redisplay flag if a report is not to be printed - whatever
C we are going to do will mess up the screen
C
	IF (.NOT.PRINT) THEN
	   REDO = .TRUE.
	   PREVIOUS_MENU_USABLE = .FALSE.
	ENDIF
C
C If option is one of the report options, set screen width and
C open report file as required
C
	IF (CURRENT_OPT.LE.4) THEN
C
C Clear flag to indicate not to abort report
C
	   ABORT_REPORT = .FALSE.
C
C Set screen to be wide, if printing not required
C
	   IF (.NOT.PRINT) THEN
	      REPORT_DEFINITION_MENU = WIDE_SCREEN(.TRUE.)
C
C Check for errors in setting screen to be wide - if there are
C any, try to set screen to narrow, and loop to redisplay menu
C
	      IF (.NOT.REPORT_DEFINITION_MENU) THEN
	         CALL WIDE_SCREEN(.FALSE.)
	         GOTO 10
	      ENDIF
	   ENDIF
C
C Open the report file, which will be SYS$OUTPUT or a temporary spool
C file if the report is to be printed.
C
	   REPORT_DEFINITION_MENU = OPEN_REPORT_FILE(PRINT)
C
C Check that there have been no errors in opening the report file,
C If there have been, set flag to indicate to abort report, jump 
C straight to code to close file and reset screen to be narrow (if 
C needed).
C
	   IF (.NOT.REPORT_DEFINITION_MENU) THEN
	      ABORT_REPORT = .TRUE.
	      GOTO 800
	   ENDIF
	ENDIF
C
C Now determine option and perform required actions
C
C List flowlines
C
	IF (CURRENT_OPT.EQ.1) THEN
	   REPORT_DEFINITION_MENU = FLOWLINE_DEFINITION_REPORT()
C
C List elements 
C The flowline has already been chosen from a menu (by calling
C routine above), so output report for it
C
	ELSEIF (CURRENT_OPT.EQ.2) THEN
	   REPORT_DEFINITION_MENU = ELEMENT_DEFINITION_REPORT(FLN_ID)
C
C List wires
C The flowline has already been chosen from a menu (by calling
C routine above), so output report for it
C
	ELSEIF (CURRENT_OPT.EQ.3) THEN
	   REPORT_DEFINITION_MENU = WIRE_DEFINITION_REPORT(FLN_ID)
C
C List procedures
C
	ELSEIF (CURRENT_OPT.EQ.4) THEN
	   REPORT_DEFINITION_MENU = PROCEDURE_DEFINITION_REPORT()
C
C Move to higher level
C
	ELSEIF ((.NOT.REPORT).AND.(CURRENT_OPT.EQ.OPT_NUM-1)) THEN
	   NEXT_FUNCTION = DO_MOVE_UP_LEVEL
	   GOTO 900
C
C Perform go top
C
	ELSEIF (CURRENT_OPT.EQ.OPT_NUM) THEN
	   NEXT_FUNCTION = DO_GO_TOP
C
C Default do nothing
C
	ELSE
	   NEXT_FUNCTION = DO_NOTHING
	ENDIF
C
C Close the report file, if one was opened
C ie if option was to get report on flowlines, elements, wires or 
C procedures
C
800	IF (CURRENT_OPT.LE.4) THEN
	   STATUS = CLOSE_REPORT_FILE(PRINT,ABORT_REPORT)
C
C And finally, if we were not printing the report, set the screen
C to 80 columns again
C
	   IF (.NOT.PRINT) STATUS = WIDE_SCREEN(.FALSE.)
	ENDIF
C
C Ignore any errors from the last two calls, will not affect
C what we actually do
C
C
C Check if want to repeat menu
C
	IF (NEXT_FUNCTION.EQ.DO_MOVE_UP_LEVEL) THEN
	   NEXT_FUNCTION = DO_ERROR
	   GOTO 10
	ENDIF
C
C Exit
C
900	RETURN
	END
