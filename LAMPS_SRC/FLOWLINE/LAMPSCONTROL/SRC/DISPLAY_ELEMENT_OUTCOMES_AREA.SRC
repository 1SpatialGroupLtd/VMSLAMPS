C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1988-12-22 11:59:02.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	INTEGER FUNCTION DISPLAY_ELEMENT_OUTCOMES_AREA(
     &		OUTCOMES,WIRES,NUM_OUTCOME,CURRENT_OUTCOME)
C
***	MODULE DISPLAY_ELEMENT_OUTCOMES_AREA
***	IDENT 22DE88
C
C Copyright Laser-Scan Laboratories Ltd, Cambridge, England
C Author: J.M. Billing			13 April 1988
C
C Function to display contents of outcome/wire id pairs list
C for an element definition in the form scrolled area
C
C
	IMPLICIT NONE
C
C common blocks
	INCLUDE 'LSL$CMNFLOWLINE:FLOW.PAR'
	INCLUDE 'LSL$LAMPSCONTROL:INTERACTIVE_IO.CMN'
	INCLUDE 'LSL$LAMPSCONTROL:LAMPSCONTROLMSG.PAR'
C
C arguments
	INTEGER		NUM_OUTCOME		 ! number of outcomes
	INTEGER		CURRENT_OUTCOME		 ! current outcome
	INTEGER		OUTCOMES(FLN_MAX_OUTCOME)! outcome list
	CHARACTER*(*)	WIRES(FLN_MAX_OUTCOME)	 ! wire idents
C
C w/s
	INTEGER		I
	CHARACTER*100	FVAL
	INTEGER		TERM
	CHARACTER*20	FID
C
C Assume success
C
	DISPLAY_ELEMENT_OUTCOMES_AREA = LSC__NORMAL
C
C Mark the form as not displayed, so the user can't see all this
C scrolling going on
C
C	CALL FDV$NDISP
C
C Ensure that the current outcome is sensible, that is, that it is no
C larger than the number of outcomes (unless the latter is 0, in which
C case the current outcome number is 1)
C
	IF (CURRENT_OUTCOME.GT.MAX(NUM_OUTCOME,1))
     &	   CURRENT_OUTCOME = MAX(NUM_OUTCOME,1)
C
C Empty the scrolled area, ensuring at the top line
C
	DO 10 I = 1, (OUTCOME_AREA_LEN - (NUM_OUTCOME-CURRENT_OUTCOME))
	   CALL FDV$PFT(UP_ARROW,'OUTCOME','          ')
10	CONTINUE
C
C Check if any records present
C
	IF (NUM_OUTCOME.GT.0) THEN
C
C Feed in the authorisation lines, starting at requested current record
C
	   DO 20 I = 	MIN((CURRENT_OUTCOME+OUTCOME_AREA_LEN-1), 
     &			    NUM_OUTCOME),
     &			CURRENT_OUTCOME, 
     &			-1
C
C Move in next blank line
C
	      CALL FDV$PFT(UP_ARROW,'OUTCOME','        ')
C
C Put in the numeric outcome
C
	      CALL EXPAND('%WS%I3',FVAL,OUTCOMES(I))
	      CALL FDV$PUT(FVAL,'OUTCOME')
C
C Put in the wire identifier
C
	      CALL FDV$PUT(WIRES(I),'WIRE_ID')
20	   CONTINUE
	ENDIF
C
C Now redisplay the form so the user can see what we've done
C
C	CALL FDV$DISPW
C
C Exit
C
	RETURN
	END
