C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1988-10-13 13:10:16.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	INTEGER FUNCTION NOTIFY_JOB_STARTED()
C
***	MODULE NOTIFY_JOB_STARTED
***	IDENT 30SE88
C
C Copyright Laser-Scan Laboratories Ltd, Cambridge, England
C Author: J.M. Billing			13 April 1988
C
C Routine to notify flowline control database that a job can
C be started on its flowline
C
C
	IMPLICIT NONE
C
	INCLUDE 'LSL$LAMPSCONTROL:QUALIFIERS.CMN'
	INCLUDE 'LSL$LAMPSCONTROL:LAMPSCONTROLMSG.PAR'
C
C functions
	INTEGER	FLN_START_JOB		! tell db job has been launched
	INTEGER	FLN_HOLD_JOB		! put job to held after failure
C
C Assume success
C
	NOTIFY_JOB_STARTED = LSC__NORMAL
C
C Check if have done creation successfully
C
	IF (NOTIFY_CREATION_RESULT.EQ.CREATION_SUCCESS) THEN
C
C Do call to db routine to start the job
C
	   NOTIFY_JOB_STARTED = FLN_START_JOB(
     &				NOTIFY_JOB_ID,
     &				NOTIFY_COMPROC(:NOTIFY_COMPROC_LEN))
C
C Tell the user of success
C
	   CALL LCONT_PUTMSG(LSC__JOBSTART,0)
C
C Otherwise, put the job to held
C
	ELSE
	   NOTIFY_JOB_STARTED = FLN_HOLD_JOB(NOTIFY_JOB_ID)
C
C And inform user of the problem
C
	   CALL LCONT_PUTMSG(LSC__UNSTARTJOB,0)
	ENDIF
C
C Check for and report any errors
C
	IF (.NOT.NOTIFY_JOB_STARTED) THEN
	   CALL LCONT_PUTMSG(LSC__UNSTARTJOB,0)
	   CALL LCONT_ADDMSG(NOTIFY_JOB_STARTED,0)
	ENDIF
C
C Exit
C
	RETURN
	END
