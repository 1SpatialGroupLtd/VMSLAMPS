C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1993-01-26 11:36:56.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
C
C CURRENT_ITEMS.CMN
C
C Common block for LAMPSCONTROL to hold miscellaneous items
C currently of interest.
C
C These will generally be data which have been retrieved from
C the database or obtained by interacrtion with the user.
C
C The data relates to eg the current operator, workstation,
C flowline, element, project, job, task, session, etc
C
C
C For operator and workstation identifications of current
C operator and workstation
C
	CHARACTER*20	OPERATOR_ID		! operator id string
	INTEGER		OPERATOR_ID_LEN		! operator id length
	CHARACTER*20	WORKSTATION_ID		! wkstat id string
	INTEGER		WORKSTATION_ID_LEN	! wkstat id length
	LOGICAL		HAD_USER_AUTH		! authorisation string flag
C
C Details of current or next flowline, project, job and task
C
	CHARACTER*20	FLOWLINE_ID	! current/next flowline
	CHARACTER*20	PROJECT_ID	! current/next project
	CHARACTER*20	PROJECT_STATUS	! status of current/next proj
	INTEGER		JOB_ID		! current/next job
	CHARACTER*20	JOB_NAME	! name of current/next job
	CHARACTER*20	JOB_STATUS	! status of current/next job
	CHARACTER*20	ELEMENT_ID	! current/next element
	INTEGER		TASK_ID		! current/next task
	CHARACTER*20	TASK_STATUS	! status of current/next task
	INTEGER		SESSION_ID	! current/next session
	CHARACTER*20	SESSION_STATUS	! status of current/next session
	INTEGER		PRIORITY	! of current flowline, project,
					! job, element, procedure or 
					! task.
	LOGICAL		KEEP_SUB_JOB_HIST  ! true if to keep sub-job histories
C
C Command procedure names, for system, flowline, project, job,
C element and procedure command procedure file specifications
C which are currently of interest
C
	CHARACTER*255	SYSTEM_COMPROC	! system (project creation)
	CHARACTER*255	FLOWLINE_COMPROC! flowline (job creation)
	CHARACTER*255	PROJECT_COMPROC	! project
	CHARACTER*255	JOB_COMPROC	! job
	CHARACTER*255	ELEMENT_COMPROC	! element
	CHARACTER*255	PROC_COMPROC	! procedure
C
C Lengths of the relevant command procedure specifications
C
	INTEGER		SYSTEM_COMPROC_LEN
	INTEGER		FLOWLINE_COMPROC_LEN
	INTEGER		PROJECT_COMPROC_LEN
	INTEGER		JOB_COMPROC_LEN
	INTEGER		ELEMENT_COMPROC_LEN
	INTEGER		PROC_COMPROC_LEN
C
C Details of any outer flowline/job/element/task enclosing the current 
C flowline for job creation/launching operations.
C These will be used to set up DCL symbols during job 
C creation/launching.
C The symbols will be non-null if the job is being launched on a
C sub-flowline as opposed to a full flowline.
C
	CHARACTER*20	OUTER_FLOWLINE_ID	! enclosing flowline
	CHARACTER*255	OUTER_FLOWLINE_COMPROC	! enclosing flowline's
						! command procedure
	CHARACTER*20	OUTER_ELEMENT_ID	! enclosing element
	CHARACTER*255	OUTER_ELEMENT_COMPROC	! enclosing element's
						! command procedure
	CHARACTER*20	OUTER_PROC_ID		! enclosing procedure
	CHARACTER*255	OUTER_PROC_COMPROC	! enclosing procedure's
						! command procedure
	CHARACTER*20	OUTER_PROJECT_ID	! enclosing project
	CHARACTER*255	OUTER_PROJECT_COMPROC	! enclosing project's
						! command procedure
	CHARACTER*20	OUTER_JOB_NAME		! enclosing job name
	CHARACTER*255	OUTER_JOB_COMPROC	! enclosing job's 
						! command procedure
	INTEGER		OUTER_TASK_ID		! enclosing task's
						! identifier
C
C 
C The following are a number of large arrays which are shared by
C several routines to reduce the size of the space allocated for
C local variables
C
CCC	INTEGER		MAX_ARRAY_SIZE
CCC	PARAMETER	(MAX_ARRAY_SIZE = 1000)
C
CCC	CHARACTER*255	COMPROC(MAX_ARRAY_SIZE)
C
C
C Common areas
C
	COMMON /LSC__OPER_WORK/
     &		 		OPERATOR_ID, OPERATOR_ID_LEN,
     &				WORKSTATION_ID, WORKSTATION_ID_LEN,
     &				HAD_USER_AUTH
C
	COMMON /LSC__ACTIVITY/
     &				PROJECT_ID, PROJECT_STATUS,
     &				JOB_ID, JOB_NAME, JOB_STATUS,
     &				ELEMENT_ID, TASK_ID, SESSION_ID,
     &				TASK_STATUS, SESSION_STATUS,
     &				OUTER_TASK_ID, PRIORITY, FLOWLINE_ID,
     &				KEEP_SUB_JOB_HIST
C
	COMMON /LSC__OUTER/
     &				OUTER_FLOWLINE_ID,
     &				OUTER_FLOWLINE_COMPROC,
     &				OUTER_ELEMENT_ID,
     &				OUTER_ELEMENT_COMPROC,
     &				OUTER_PROC_ID,
     &				OUTER_PROC_COMPROC,
     &				OUTER_PROJECT_ID,
     &				OUTER_PROJECT_COMPROC,
     &				OUTER_JOB_NAME,
     &				OUTER_JOB_COMPROC
C
	COMMON /LSC__COMPROC/
     &				FLOWLINE_COMPROC, SYSTEM_COMPROC,
     &				PROJECT_COMPROC, JOB_COMPROC,
     &				ELEMENT_COMPROC, PROC_COMPROC,
     &				FLOWLINE_COMPROC_LEN,
     &				SYSTEM_COMPROC_LEN,
     &				PROJECT_COMPROC_LEN,
     &				JOB_COMPROC_LEN,
     &				ELEMENT_COMPROC_LEN,
     &				PROC_COMPROC_LEN
C
CCC	COMMON /LSC__LOCAL_SUBSTITUTE/
CCC     &				COMPROC
