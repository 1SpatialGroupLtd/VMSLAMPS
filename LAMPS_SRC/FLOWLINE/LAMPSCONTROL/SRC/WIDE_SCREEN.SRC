	INTEGER FUNCTION WIDE_SCREEN(ON)
C
***	MODULE WIDE_SCREEN
***	IDENT 3MY88
C
C Copyright Laser-Scan Laboratories Ltd, Cambridge, England
C Author: J.M. Billing			3 May 1988
C
C Turn on/off wide screen on VT220 compatible terminal
C ON = .TRUE.  => 132 col mode
C ON = .FALSE. =>  80 col mode
C
	IMPLICIT NONE
C
	INCLUDE 'LSL$LAMPSCONTROL:INTERACTIVE_IO.CMN'
	INCLUDE 'LSL$LAMPSCONTROL:LAMPSCONTROLMSG.PAR'
	INCLUDE '($IODEF)'
C
C arguments
	LOGICAL		ON	! .T. if to turn on 132 column mode
C
C w/s
	INTEGER*2	IOSB(4)	! i/o status block
	INTEGER*2	BUFF(4)	! buffer for terminal set/sense mode
	INTEGER*2	WIDTH	! new width in columns for screen
C
C functions
	INTEGER		SYS$QIOW
C
C Assume success
C
	WIDE_SCREEN = LSC__NORMAL
C
C Clear screen prior to changing width of terminal screen
C '<ESC>[2J'
C
	CALL EXPAND('%A1[2J',27)
C
C Output the control string to the terminal
C
	CALL OUTPUT_CONTROL_STRING()
C
C If want wide screen, then new column width is 132
C
	IF (ON) THEN
	   WIDTH = 132
C
C Otherwise it is 80
C
	ELSE
	   WIDTH = 80
	ENDIF
C
C Read the current terminal attributes
C
	WIDE_SCREEN = SYS$QIOW(
     &			,
     &			%VAL(CHAN_SYS$OUTPUT),
     &			%VAL(IO$_SENSEMODE),
     &			IOSB,
     &			,
     &			,
     &			BUFF,
     &			%VAL(8),
     &			,
     &			,
     &			,)
C
C Check for errors, firstly by examining the function return
C Don't exit for this sort of error
C
	IF (.NOT.WIDE_SCREEN) THEN
	   CALL LCONT_PUTMSG(WIDE_SCREEN,0)
	ENDIF
C
C Then by looking at the first word of the IO status block
C Don't exit for this sort of error
C
	IF (.NOT.IOSB(1)) THEN
	   CALL LCONT_PUTMSG(IOSB(1),0)
	ENDIF
C
C Now alter the column width in buffer 
C according to the value set up earlier
C
	BUFF(2) = WIDTH
C
C And write back altered buffer
C
	WIDE_SCREEN = SYS$QIOW(
     &			,
     &			%VAL(CHAN_SYS$OUTPUT),
     &			%VAL(IO$_SETMODE),
     &			IOSB,
     &			,
     &			,
     &			BUFF,
     &			%VAL(8),
     &			,
     &			,
     &			,)
C
C Now check for errors in setting the new screen width
C Firstly by looking at function return
C Don't exit for this sort of error
C
	IF (.NOT.WIDE_SCREEN) THEN
	   CALL LCONT_PUTMSG(WIDE_SCREEN,0)
	ENDIF
C
C Then by looking at the first word of the IO status block
C Don't exit for this sort of error
C
	IF (.NOT.IOSB(1)) THEN
	   CALL LCONT_PUTMSG(IOSB(1),0)
	ENDIF
C
C Now send the character string to the terminal to set
C it to required number of columns
C '<ESC>[?3h' for 132
C '<ESC>[?3l' for 80
C
C If to turn on wide screen, set to 132
C
	IF (ON) THEN
	   CALL EXPAND('%A1[?3h',27)
C
C Otherwise turn on 80 column mode
C
	ELSE
	   CALL EXPAND('%A1[?3l',27)
	ENDIF
C
C Move cursor to top left corner
C '<ESC>[1;1H'
C
	CALL APPEND('%A1[1;1H',27)
C
C Output the control string to the terminal
C
	CALL OUTPUT_CONTROL_STRING()
C
C Exit
C
900	RETURN
	END
