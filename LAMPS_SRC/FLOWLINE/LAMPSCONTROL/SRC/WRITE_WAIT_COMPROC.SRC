C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1988-10-13 14:45:30.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	INTEGER FUNCTION WRITE_WAIT_COMPROC()
C
***	MODULE WRITE_WAIT_COMPROC
***	IDENT 27SE88
C
C Copyright Laser-Scan Laboratories Ltd, Cambridge, England
C Author: J.M. Billing			13 April 1988
C
C Routine to write a wait command procedure to wait for a time
C defined by the /WAIT_TIME qualifier on the LAMPSCONTROL command
C line.
C
C
	IMPLICIT NONE
C
	INCLUDE 'LSL$LAMPSCONTROL:QUALIFIERS.CMN'
	INCLUDE 'LSL$LAMPSCONTROL:CURRENT_ITEMS.CMN'
	INCLUDE 'LSL$LAMPSCONTROL:LAMPSCONTROLMSG.PAR'
C
C functions
	INTEGER		SIGNCH
C
C Assume success
C
	WRITE_WAIT_COMPROC = LSC__NORMAL
C
C Header comment lines
C
	CALL FLWRTF('$! LAMPSCONTROL created jacket command procedure')
	CALL FLWRTF('$! Function    Wait')
	CALL FLWRTF('$!             Time defined by FLN_WAIT_TIME')
	CALL FLWRTF('$! Operator    %S',OPERATOR_ID)
	CALL FLWRTF('$! Workstation %S',WORKSTATION_ID)
	CALL FLWRTF('$! ')
C
C Commands to set up the DCL symbols needed
C
C Set up symbol to indicate type of jacket command procedure
C
	CALL FLWRTF('$	FLN_JACKET_TYPE :== WAIT')
C
C Default for FLN_INT
C
	CALL OUTPUT_SHARED_DCL()
C
C Commands to perform interactive function of command file
C
C Determine if interactive
C
	CALL FLWRTF('$!')
	CALL FLWRTF('$	if .not.FLN_INT then goto do_non_interactive')
	CALL FLWRTF('$!')
	CALL FLWRTF('$	write sys$output "No task found to attempt"')
	CALL FLWRTF('$	write sys$output '//
     &			'"Suggest you consult a manager"')
	CALL FLWRTF('$	inq/nop retry '//
     &			'"Do you want to try again (Y/N) [N] ? "')
	CALL FLWRTF('$!')
	CALL FLWRTF('$	goto do_exit')
C
C Commands to perform non-interactive function required of command file,
C wait for type specified with /WAIT_TIME command qualifier.
C
	CALL FLWRTF('$ do_non_interactive:')
	CALL FLWRTF('$	wait %S',
     &			WAIT_COMPROC_TIME(1:SIGNCH(WAIT_COMPROC_TIME)))
	CALL FLWRTF('$!')
	CALL FLWRTF('$	retry = "t"')
C
C Command to delete the command file now it has finished
C
	CALL FLWRTF('$!')
	CALL FLWRTF('$	proc = f$environment("PROCEDURE")')
	CALL FLWRTF('$	delete/nolog/noconf  ''proc'' ')
C
C Now exit or logoff, depending on whether 'retry' is true
C
	CALL FLWRTF('$!')
	CALL FLWRTF('$ do_exit:')
	CALL FLWRTF('$	if .not.retry then logoff')
	CALL FLWRTF('$	exit')
C
C Exit
C
	RETURN
	END
