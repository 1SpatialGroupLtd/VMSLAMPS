        INTEGER FUNCTION FINISH_LAYER0_DSI
C
***	MODULE	FINISH_LAYER0_DSI
***	IDENT	07SE88
C
C 	Copyright Laser-Scan Laboratories Ltd.,England
C
C Created  J Barber  16-Aug-1988
C
C Reads the Feature entries in layer 0 of a IFF file.
C These must correspond to the format as written by CEDDI
C   with a dummy area first feature describing the whole map, with the 
C   DSI entry values stored in the feature's AC entries.
C This function outputs any Registration points and Accuracy outlines 
C   with their own AC entries
C
	IMPLICIT NONE
C
***     PARAMETER/HERE:I2CEDDMSG/
***     COMMON/LSL$CMNIFF:IFFHAN/
***     COMMON/HERE:DESCR/
C
C  workspace
C
	INTEGER*2	IELEN	! length of
	INTEGER*2	IECODE  ! IFF entry
        INTEGER*2       IFC     ! feature code
C
        INTEGER         I
        INTEGER         REGADDR
        INTEGER         ACCADDR
C
        BYTE            FIELD_BYTBUF(5)

C  **********************************************************
C  assume success
C
        FINISH_LAYER0_DSI = I2CEDD__NORMAL
C
C  first some header labels
C
        IF (REGCNT.GT.0 .OR. ACCCNT.GT.0) THEN
           CALL EXPAND ('%WDSVG', FIELD_BYTBUF(1))
           CALL INSERT_IN_BLOCK('DSI',FIELD_BYTBUF, 4, 592 )
        ELSE
           GOTO 999
        ENDIF
C
        IF (REGCNT.GT.0) THEN
           REGADDR = 646
           CALL EXPAND ('%W%P %I5', FIELD_BYTBUF, REGADDR)
           CALL INSERT_IN_BLOCK('DSI',FIELD_BYTBUF, 5, 596)
C
           IF (ACCCNT.GT.0) THEN
              ACCADDR = 646+7+REGCNT*51
              CALL EXPAND ('%W%P %I5', FIELD_BYTBUF(1), ACCADDR)
              CALL INSERT_IN_BLOCK('DSI',FIELD_BYTBUF, 5, 601)
           ENDIF
        ELSE
           ACCADDR = 646
           CALL EXPAND ('%W%P %I5', FIELD_BYTBUF(1), ACCADDR)
           CALL INSERT_IN_BLOCK('DSI',FIELD_BYTBUF, 5, 601)
        ENDIF
C 
C  then the registration points
C
        IF (REGCNT.EQ.0) GOTO 80
C
        DO 100 I = 1,REGCNT
C
           CALL IFFPKE (IECODE, IELEN, LPOSFS_REG(I))
           IF (IELEN.EQ.-1) THEN
              CALL LSL_PUTMSG (I2CEDD__UNEXPENDIFF)
              CALL WRITEF (' repositioning to registration point %N',I)
              FINISH_LAYER0_DSI = I2CEDD__UNEXPENDIFF
              GOTO 999
           ENDIF
           IF (IECODE.NE.'FS') THEN
              FINISH_LAYER0_DSI = I2CEDD__FSREPOSERR
              CALL LSL_PUTMSG (I2CEDD__FSREPOSERR, LPOSFS_ENC)
              CALL WRITEF (' repositioning to registration point %N',I)
              GOTO 100
           ENDIF
C
           CALL PROCESS_REG_POINT (I)    ! to process AC's
C
100     CONTINUE
C
C   then the acc regions in turn
C
80      IF (ACCCNT.EQ.0) GOTO 999
C
        DO 200 I = 1,ACCCNT
C
           CALL IFFPKE (IECODE, IELEN, LPOSFS_REG(I))
           IF (IELEN.EQ.-1) THEN
              FINISH_LAYER0_DSI = I2CEDD__UNEXPENDIFF
              CALL LSL_PUTMSG (I2CEDD__UNEXPENDIFF)
              CALL WRITEF (' repositioning to accuracy region %N',I)
              GOTO 999
           ENDIF
C
           IF (IECODE.NE.'FS') THEN
              CALL LSL_PUTMSG (I2CEDD__FSREPOSERR, LPOSFS_ENC)
              FINISH_LAYER0_DSI = I2CEDD__FSREPOSERR
              CALL WRITEF (' repositioning to accuracy region %N',I)
              GOTO 200
           ENDIF
C
           CALL PROCESS_ACC_AREA (I)      ! to process AC's
C
200     CONTINUE
C
C  exit at new NO entry, or end of IFF file in extreme circumstances
C
999     RETURN
	END
C
