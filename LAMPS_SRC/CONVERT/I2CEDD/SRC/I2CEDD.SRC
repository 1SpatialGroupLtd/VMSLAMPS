	PROGRAM I2CEDD
C
***	MODULE	I2CEDD
***	IDENT	07SE88
C
C       Copyright Laser-Scan Laboratories Ltd., Cambridge, England, U.K.
C
C Created by JB 4-Aug-1988
C
C Program I2CEDD converts data in IFF disc files into CEDD format files
C
C A single IFF file is read for each run of the program and output to
C   the specified file, on tape or disc
C
	IMPLICIT NONE
C
***     PARAMETER/HERE:I2CEDDMSG/
***     COMMON/LSL$CMNLSL:STATUS/
***     COMMON/HERE:PARAMS/
***     COMMON/HERE:DESCR/
	INCLUDE '($SSDEF)'
C
C Functions:
C
	INTEGER I2CEDD_INIT		! initialise variables etc
	INTEGER	GETCOMLIN		! gets/does parse on cmd line
	INTEGER	OPEN_FILES		! open files
	INTEGER	READ_IFF_HEADER		! read initial IFF
					! entries
	INTEGER	START_LAYER0_DSI	! scan layer 0 to find features
					! and output enclosing feature
					! to DSI
	INTEGER	OUTPUT_IFF_HEADER_DSI	! output IFF header info to DSI
					! and scan file to find minimum
					! Z in a ZS entry
	INTEGER	FINISH_LAYER0_DSI	! output registration marks and
					! accuracy areas to DSI
	INTEGER	FINISH_BLOCK		! pad and output tape block
	INTEGER	PROCESS_FEATURE_ATTR	! process layer 1+ feature
					! attributes, creating FEA
					! records
	INTEGER	PROCESS_FEATURE_COORD	! process layer 1+ feature
					! coordinate strings, creating 
					! SEG records.
        INTEGER OUTPUT_TXT_RECORD	! read text file for TXT record
	INTEGER	CLOSE_FILES		! Close all the files
C
        LOGICAL	FRTINI
C
C Workspace
C
        INTEGER	STATUS			! routine return code
C
C ......................................................................
C Initialise LSLLIB
C
	CALL LSL_INIT
C
C Initialise IFF routine to tidy up after any errors
C
        CALL IFFTDY
C
C Initialise any variables, flags etc needed by I2CEDD
C
	STATUS = I2CEDD_INIT()
C
C Check for errors
C
	IF (.NOT.STATUS) THEN
           GOTO 900
        ENDIF
C
C Get and decode command line
C
	STATUS = GETCOMLIN()
C
C Check for errors
C
	IF (.NOT.STATUS) THEN
	   CALL LSL_PUTMSG (I2CEDD__CMDLINERR)
           GOTO 900
        ENDIF
C	
C Open IFF input file, CEDD output file, (and LIST file)
C
	STATUS = OPEN_FILES()
C
C Check for errors
C
        IF (.NOT.STATUS) THEN
           CALL LSL_PUTMSG (I2CEDD__OPNFILERR)
           GOTO 900
        ENDIF
C
C Initialise FRTLIB and FRT file
C
        IF (FRTINI (FRTNAM)) THEN
           CALL LSL_PUTMSG (I2CEDD__FRTINTERR, FRTNAM(:FRTLEN))
           GOTO 900
        ENDIF
C
C Read initial IFF entries
C
        STATUS = READ_IFF_HEADER()
C
C Check for errors
C
	IF (.NOT.STATUS) THEN
	   GOTO 900
	ENDIF
C
C Check if layer 0 is present in the input IFF file
C and scan layer 0 to determine positions of different types of
C features, and output AC data from dummy enclosing feature to DSI
C
	IF (HAD_LAYER0) THEN
	   STATUS = START_LAYER0_DSI()
C
C Check for errors
C
           IF (.NOT.STATUS) THEN
   	      GOTO 900
	   ENDIF
	ENDIF
C
C Output the data from the IFF header entries to the CEDD DSI record.
C Also, scan the input IFF file ZS entries to determine the minimum
C Z for Z origin in DSI. This is only needed if some Zs are negative,
C since only positive values can be output to the SEG 
C record, an alteration to the local Z origin may be needed.
C
	STATUS = OUTPUT_IFF_HEADER_DSI()
C
C Check for errors
C
	IF (.NOT.STATUS) THEN
	   GOTO 900
	ENDIF
C
C Check if layer 0 is present in the input IFF file
C and output layer 0 registration marks and accuracy areas to DSI
C record.
C
	IF (HAD_LAYER0) THEN
	   STATUS = FINISH_LAYER0_DSI()
C
C Check for errors
C
           IF (.NOT.STATUS) THEN
   	      GOTO 900
	   ENDIF
	ENDIF
C
C Finish off the final DSI block, padding and outputting it
C
	STATUS = FINISH_BLOCK()
C
C Check for errors
C
	IF (.NOT.STATUS) THEN
	   GOTO 900
	ENDIF
C
C Process features in layer 1+, dealing with feature attributes to
C generate CEDD FEA records.
C
	STATUS = PROCESS_FEATURE_ATTR()
C
C Check for errors
C
	IF (.NOT.STATUS) THEN
	   GOTO 900
	ENDIF
C
C Perform second pass over layer 1+ features, dealing with the
C coordinate strings (ST,ZS, etc) to construct the CEDD SEG records.
C
	STATUS = PROCESS_FEATURE_COORD()
C
C Check for errors
C
	IF (.NOT.STATUS) THEN
	   GOTO 900
	ENDIF
C
C Determine if a text file has been specifed, and that it is open
C
        IF (TEXT.AND.TXTOPN) THEN
C
C Read the text file and output it to the TXT records
C
           STATUS = OUTPUT_TXT_RECORD()
C
C Check for errors
C
           IF (.NOT.STATUS) THEN
              GOTO 900
           ENDIF
        ENDIF
C
C Close the files
C
	STATUS = CLOSE_FILES()
C
C Check for errors
C
	IF (.NOT.STATUS) THEN
	   GOTO 900
	ENDIF
C
C Ensure exit status indicates successful completion
C
	LSL_STATUS = SS$_NORMAL
C
C Have completed program successfully, so jump to exit
C
	GOTO 950
C
C Close any files which are open, ignoring any errors which occur
C
900	CALL CLOSE_FILES()
C
C Error handling code set to abort
C
	LSL_STATUS = SS$_ABORT
C
C And exit setting $STATUS as we go
C
950	CALL LSL_EXIT
	END
C
