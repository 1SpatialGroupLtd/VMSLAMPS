	INTEGER FUNCTION START_OUTPUT_BLOCK(BLOCK_LABEL)
C
***	MODULE START_OUTPUT_BLOCK
***	IDENT 17AU88
C
C Copyright Laser-Scan Laboratories Ltd, Cambridge, England
C Author: J.M. Billing			17 August 1988
C
C Routine to begin an output block, by creating its label, and changing
C the next free byte pointer to indicate the byte after that label.
C The buffer used is in the DATA_BUFFER common block.
C
	IMPLICIT NONE
C
C common blocks
	INCLUDE 'HERE:DATA_BUFFER.CMN'
	INCLUDE 'HERE:I2CEDDMSG.PAR'
C
C arguments
	CHARACTER*(*)	BLOCK_LABEL	! Label for type of block
C					! ie 'DSI', 'FEA', 'SEG', 'TXT'
C
C w/s
	INTEGER		I		! temporary index
	INTEGER		BLOCK_COUNT	! count of the required type
C					! of record
C
C functions
C
C Assume success
C
	START_OUTPUT_BLOCK = I2CEDD__NORMAL
C
C Find out which sort of record we are dealing with, and
C move its record count to a local variable
C
C DSI
C
	IF (BLOCK_LABEL.EQ.'DSI') THEN
	   DSI_BLOCK_COUNT = DSI_BLOCK_COUNT + 1
	   BLOCK_COUNT = DSI_BLOCK_COUNT
C
C FEA
C
	ELSEIF (BLOCK_LABEL.EQ.'FEA') THEN
	   FEA_BLOCK_COUNT = FEA_BLOCK_COUNT + 1
	   BLOCK_COUNT = FEA_BLOCK_COUNT
C
C SEG
C
	ELSEIF (BLOCK_LABEL.EQ.'SEG') THEN
	   SEG_BLOCK_COUNT = SEG_BLOCK_COUNT + 1
	   BLOCK_COUNT = SEG_BLOCK_COUNT
C
C TXT
C
	ELSEIF (BLOCK_LABEL.EQ.'TXT') THEN
	   TXT_BLOCK_COUNT = TXT_BLOCK_COUNT + 1
	   BLOCK_COUNT = TXT_BLOCK_COUNT
	ENDIF
C
C Now format the block label, placing it in the block byte buffer
C Label is LLLNNNNN where	LLL = block label. DSI,FEA,SEG,TXT
C			      NNNNN = number of current record type
C
	CALL EXPAND('%W%S3%P0%I5',BLOCK_BUFFER,BLOCK_LABEL,BLOCK_COUNT)
C
C Set next free byte pointer to byte after label (=9)
C
	BLOCK_NEXT_FREE = 9
C
C Now fill the rest of the blocks with null field characters
C Those used are spaces
C
	DO 10 I = BLOCK_NEXT_FREE,BLOCK_LENGTH
	   BLOCK_BUFFER(I) = ICHAR(' ')
10	CONTINUE
C
C Exit
C
	RETURN
	END
