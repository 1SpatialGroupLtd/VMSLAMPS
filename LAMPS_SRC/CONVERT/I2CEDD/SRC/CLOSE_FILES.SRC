C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1988-09-08 13:12:52.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	INTEGER FUNCTION CLOSE_FILES()
C
***	MODULE CLOSE_FILES
***	IDENT 08SE88
C
C Copyright Laser-Scan Laboratories Ltd, Cambridge, England
C Author: J.M. Billing			17 August 1988
C
C Routine to close the input IFF, output CEDD file and output
C list file used by I2CEDD.
C
	IMPLICIT NONE
C
C common blocks
	INCLUDE 'HERE:PARAMS.CMN'
	INCLUDE 'HERE:I2CEDDMSG.PAR'
C
C arguments
C
C w/s
	INTEGER	IERR		! Supplementary error return code
C
C functions
	INTEGER	FLRCLO		! Close text file
        INTEGER FLWCLO          ! Close CEDD file
C
C Assume success
C
	CLOSE_FILES = I2CEDD__NORMAL
C
C Test if IFF file is open
C
	IF (INIFF) THEN
C
C Set flag to indicate attempt made to close file
C
	   INIFF = .FALSE.
C
C Attempt to close file
C
	   CALL IFFCLO(IFFLUN)
	ENDIF
C
C Test if text CEDD file is open
C
	IF (TXTOPN) THEN
C
C Set flag to indicate attempt made to close file
C
	   TXTOPN = .FALSE.
C
C Attempt to close file
C
	   CLOSE_FILES = FLRCLO (TXTLUN,IERR)
C
C Check for errors, reporting problem if there is one
C
	   IF (.NOT.CLOSE_FILES) CALL LSL_PUTMSG(CLOSE_FILES)
	   IF (.NOT.IERR)	 CALL LSL_ADDMSG(IERR)
C
	ENDIF
C
C Test if output file is open
C
	IF (OUTOPN) THEN
C
C Set flag to indicate attempt made to close file
C
	   OUTOPN = .FALSE.
C
C Attempt to close file
C
	   CLOSE_FILES = FLWCLO (OUTLUN,IERR)
C
C Check for errors, reporting problem if there is one
C
	   IF (.NOT.CLOSE_FILES) CALL LSL_PUTMSG(CLOSE_FILES)
	   IF (.NOT.IERR)	 CALL LSL_ADDMSG(IERR)
C
	ENDIF
C
C Exit
C
	RETURN
	END
C

