C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1988-08-17 20:45:28.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	INTEGER FUNCTION FINISH_BLOCK()
C
***	MODULE FINISH_BLOCK
***	IDENT 17AU88
C
C Copyright Laser-Scan Laboratories Ltd, Cambridge, England
C Author: J.M. Billing			17 August 1988
C
C Routine to pad free characters in the output block currently in 
C common block /DATA_BUFFER/ with ASCII DEL characters (Octal 177) and
C then write it out
C
	IMPLICIT NONE
C
C common blocks
	INCLUDE 'HERE:DATA_BUFFER.CMN'
	INCLUDE 'HERE:I2CEDDMSG.PAR'
C
C w/s
	INTEGER	I		! temporary count
C
C functions
	INTEGER	WRITE_BLOCK	! routine to write out the current block
C
C Assume success
C
	FINISH_BLOCK = I2CEDD__NORMAL
C
C Pad the block with ASCII DEL (octall 177)
C
	DO 10 I = BLOCK_NEXT_FREE, BLOCK_LENGTH
	   BLOCK_BUFFER(I) = 127
10	CONTINUE
C
C Now write the block, passing return code back to caller.
C
	FINISH_BLOCK = WRITE_BLOCK()
C
C Finally, reset next free byte pointer to zero
C
	BLOCK_NEXT_FREE = 0
C
C Exit
C
	RETURN
	END
