C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1988-09-07 17:57:26.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
        SUBROUTINE PROCESS_DMSH (DEG, MIN, HUNSEC, HEMIS, 
     &                                          ISLONG, START)
C
***	MODULE	PROCESS_DMSH
***	IDENT	07SE88
C
C 	Copyright Laser-Scan Laboratories Ltd.,England
C
C Created  J Barber  16-Aug-1988
C
C Outputs days, months, year to current block being constructed
C   in DSI record ONLY
C
	IMPLICIT NONE
C
        INTEGER         DEG
        INTEGER         MIN
        INTEGER         HUNSEC
        CHARACTER*1     HEMIS
C
        LOGICAL         ISLONG             ! longitude?
C
        INTEGER         START              ! insert position
C
        BYTE            FIELD_BYTBUF(10)   ! for value field
C
C  **********************************************************
C
        IF (.NOT.ISLONG) THEN
           CALL EXPAND ('%W%P0%I2', FIELD_BYTBUF(1), DEG)
           CALL INSERT_IN_BLOCK('DSI',FIELD_BYTBUF, 2, START)
           CALL EXPAND ('%W%P0%I2', FIELD_BYTBUF(1), MIN)
           CALL INSERT_IN_BLOCK('DSI',FIELD_BYTBUF, 2, START+2)
           CALL EXPAND ('%W%P0%I4', FIELD_BYTBUF(1), HUNSEC)
           CALL INSERT_IN_BLOCK('DSI',FIELD_BYTBUF, 4, START+4)
           CALL EXPAND ('%W%S1', FIELD_BYTBUF(1), HEMIS)
           CALL INSERT_IN_BLOCK('DSI',FIELD_BYTBUF, 1, START+8)
        ELSE
           CALL EXPAND ('%W%P0%I3', FIELD_BYTBUF(1), DEG)
           CALL INSERT_IN_BLOCK('DSI',FIELD_BYTBUF, 3, START)
           CALL EXPAND ('%W%P0%I2', FIELD_BYTBUF(1), MIN)
           CALL INSERT_IN_BLOCK('DSI',FIELD_BYTBUF, 2, START+3)
           CALL EXPAND ('%W%P0%I4', FIELD_BYTBUF(1), HUNSEC)
           CALL INSERT_IN_BLOCK('DSI',FIELD_BYTBUF, 4, START+5)
           CALL EXPAND ('%W%S1', FIELD_BYTBUF(1), HEMIS)
           CALL INSERT_IN_BLOCK('DSI',FIELD_BYTBUF, 1, START+9)
        ENDIF
C
999     RETURN
	END
C
