	PROGRAM	BC2IFF
C
***	MODULE	BC2IFF
***	IDENT	14JA91
C
C	Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C	Author Jon Barber 14-Jan-1991
C
C	To convert DECCA's BC2 ASCII format into IFF
C
	IMPLICIT NONE
C
C Common:
	INCLUDE		'LSL$CMNLSL:CLD.CMN'
	INCLUDE		'LSL$CMNLSL:FILENAME.CMN'
	INCLUDE		'LSL$CMNLSL:STATUS.CMN'
	INCLUDE		'HERE:BC2IFF.CMN'
	INCLUDE		'HERE:BC2IFFMSG.PAR'
	EXTERNAL	 BC2IFF_CLD
C
C Functions
	INTEGER 	LSL_INIT
	INTEGER 	DCL_STARTUP		!Gets parsed command line
	INTEGER 	DCL_FILE		!Reads and parses command
	INTEGER		BC2CONV			!Does the actual conversion
	INTEGER		FLROPN			!Opens file for read
	INTEGER		IFFCREATE		!Creates new IFF file
C
C Local
	INTEGER		OK
	LOGICAL		ABSENT
	LOGICAL		LOCAL
	LOGICAL		LOCNEG
C
	INTEGER		DEF_AC_NUMBER		!Default AC_NUMBER
	PARAMETER	(DEF_AC_NUMBER = 1)
	INTEGER		DEF_LAY_NUMBER		!Default LAY_NUMBER
	PARAMETER	(DEF_LAY_NUMBER = 1000)
C
C Initialise LSLLIB and DCL decoding
C
	RANGE_WRONG    = .FALSE.	! BC2 range wrong...
	RANGE_SET      = .FALSE.	! coordinates used in IFF range
	OUT_RANGE_MESS = .FALSE.	! and message output
	NUMFEAT = 0
C
	CALL LSL_INIT
C
	OK = DCL_STARTUP('BC2IFF',.FALSE.,BC2IFF_CLD,.TRUE.)
	IF (.NOT.OK) GOTO 999
C
C Get input filename
C
	OK = DCL_FILE('P1','LSL$BC2:BC2.BC2',ABSENT,.FALSE.,.TRUE.)
	IF (.NOT.OK) GOTO 999
C
	CALL EXPFLN(BC2FIL,BC2LEN)
C
C Get output filename
C
	OK = DCL_FILE('P2','LSL$IF:IFF.IFF',ABSENT,.FALSE.,.TRUE.)
	IF (.NOT.OK) GOTO 999
C
	CALL EXPFLN(IFFFIL,IFFLEN)
C
C Open input file
C
	OK = FLROPN(BC2LUN, BC2FIL)
	IF (.NOT.OK) THEN
	   CALL LSL_PUTMSG(BC2I__UNOPENBC2,BC2FIL)
	   CALL LSL_ADDMSG(OK)
	   GOTO 999
	ENDIF
C
C Create output file
C
	OK = IFFCREATE(IFFLUN, IFFFIL)
	IF (.NOT.OK) THEN
	   CALL LSL_PUTMSG(BC2I__UNACREIFF,IFFFIL)
	   CALL LSL_ADDMSG(OK)
	   GOTO 1000
	ENDIF
C
C Do the main body of the work converting from input to output
C
	OK = BC2CONV()	
C
C All done
C
1000	CALL FLRCLO(BC2LUN)
C
999	CALL LSL_EXIT(OK)
C
	STOP
	END
C
