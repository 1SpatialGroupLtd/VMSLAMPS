C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1993-12-14 12:47:18.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL*4 FUNCTION GETCMD()
C
***	IDENT  14DE93
***	MODULE GETCMD
C
C Copyright Laser-Scan Ltd., Cambridge, England.
C
C Author :  Paul Pan, 5  September 1989
C Modified: Paul Pan, 19 February  1990 to add PARAMETER qualifier
C
CMOD960	    J Barber 				23-Jan-1991
C	    Transfer file opening to I2DXF.SRC
C	    Add /POINTSIZE qualifier to signal TH entries are point sizes;
C	    default NOPOINTSIZE (ie. mm./100)
C
CMOD1010    J Barber 				16-Jul-1991
C	    Add /QUIET, /HEADER qualifiers
C
CMOD1125    J Barber 				10-Jul-1992
C	    Add /ABSOLUTE qualifier
C
CMOD1324    J Barber 				09-Dec-1993
C	    Add /DECIMAL_PLACES qualifier
C
C Purpose:  Decode a command line and open relevant files
C
	IMPLICIT NONE
C
C Messages
	INCLUDE 	'HERE:I2DXFMSG.PAR'
C
C Common Blocks
	INCLUDE		'LSL$CMNDXFPAR:LOOKUP.CMN'
	INCLUDE		'LSL$CMNLSL:CLD.CMN'
	INCLUDE 	'HERE:I2DXF.CMN'
C
C Command language definitions
	EXTERNAL I2DXF_CLD
C
C workspace
	LOGICAL		ABSENT	! .T. if file param. not found
	LOGICAL		LOCAL	! .T. if qual. is local
	LOGICAL		LOCNEG	! Set .T. if qual. locally negated
	LOGICAL		WHINGE	! Set .T. local error reporting
	LOGICAL 	FPRES
	LOGICAL 	FNEGA	!  Command negated flag
	INTEGER 	THERE	!  Qualifier there ?
C
C functions called
        INTEGER*4	DCL_STARTUP! Looks for command line
	INTEGER*4	DCL_QUAL   ! Looks for command line qualifiers
	INTEGER*4	DCL_INT    ! Reads & parses an integer from DCL 
	INTEGER*4	DCL_FILE   ! Reads & parses file title from DCL 
C			           ! command line
C----------------------------------------------------------------
C initialise logicals
	WHINGE  = .TRUE.        ! LSLDCL local error reporting
	LOCAL   = .FALSE.       ! Set .T. if qual. is local
        LOCNEG  = .FALSE.       ! Set .T. if qual. locally negated
	THERE   = .FALSE.
C
        HAD_LOG   = .FALSE.     ! No log qualifier
        HAD_QUIET = .FALSE.     ! No quiet qualifier
	HAD_PNT   = .FALSE.	! had no pointsize qual
	HAD_HDR   = .FALSE.	! had no header    qual
	HAD_ABS   = .FALSE.	! had no absolute  qual
	HAD_DP    = .FALSE.	! had no dec place qual
C
	NUM_DP = 3		! default of 3 decimal places
C
C----------------------------------------------------------------
C Get command line for I2DXF. DCL_STARTUP will return set to
C    SS$_NORMAL if all is well.
C
	GETCMD = DCL_STARTUP('I2DXF',	! Command verb
     &     		    .FALSE.,	! Don't split parameter lists
     &      		     I2DXF_CLD, ! CLD module name
     &      		     WHINGE)	! .T. -local error reporting
C
        IF (.NOT.GETCMD) GOTO 999
C
C----------------------------------------------------------------
C Now we can hunt for the input filename
C
	GETCMD = DCL_FILE('P1',
     &			'LSL$IF:IFF.IFF;0',
     &                   ABSENT,.FALSE.,WHINGE)
C
        IF (GETCMD) THEN
	   CALL EXPFLN(IFFFIL,IFFLEN)
        ELSE
           CALL LSL_PUTMSG(I2DXF__BADIFF)
           GOTO 999
        ENDIF 
C
C----------------------------------------------------------------
C Now we can hunt for the output filename
C
	GETCMD = DCL_FILE ('P2',
     &			   'LSL$DXF:DXF.DXF;0',
     &		   	    ABSENT,.FALSE.,WHINGE)
C
        IF (GETCMD) THEN
	   CALL EXPFLN(DXFFIL,DXFLEN)
        ELSE
           CALL LSL_PUTMSG(I2DXF__BADDXF)
           GOTO 999
        ENDIF 
C
C----------------------------------------------------------------
C now check if the FRT file qualifier is in the command line 
C
	GETCMD = DCL_QUAL('FRT',THERE,FPRES,FNEGA,.TRUE.)
C
	IF (.NOT.GETCMD .OR. .NOT.THERE) THEN
	   IF (.NOT.THERE) GETCMD=I2DXF__BADFRT
           CALL LSL_PUTMSG(I2DXF__BADFRT)
           GOTO 999
        ENDIF 
C
C now hunt for the FRT file qualifier
C
	GETCMD=DCL_FILE('FRT'			! qualifier
     &			,'LSL$FRT:DXF.FRT'	! default file-name
     &			, ABSENT		! set if no file-name
     &			,.FALSE.		! don't expect list of files
     &          	,.TRUE.)		! set-local error reporting
C
        IF (GETCMD) THEN
	   CALL EXPFLN(FRTFIL,FRTLEN)
        ELSE
           CALL LSL_PUTMSG(I2DXF__BADFRT)
           GOTO 999
        ENDIF
C 
C----------------------------------------------------------------
C now check if the PARAMETER file qualifier is in the command line 
C
	GETCMD = DCL_QUAL( 'PARAMETER',THERE,FPRES,FNEGA,.TRUE. )
C
	IF (.NOT.GETCMD) THEN
           CALL LSL_PUTMSG(I2DXF__BADPAR)
           GOTO 999
        ENDIF 
C
C now hunt for the PARAMETER file qualifier
C
	IF (THERE) THEN
   	   GETCMD = DCL_FILE('PARAMETER'		! qualifier
     &		,'LSL$LOOKUP:DXF.PAR'		! default file-name
     &		, ABSENT			! set if no file-name
     &		,.FALSE.			! don't expect list of files
     &          ,.TRUE.)			! set-local error reporting
C
           IF (GETCMD) THEN
	      CALL EXPFLN(PARFIL,PARLEN)
           ELSE
              CALL LSL_PUTMSG(I2DXF__BADPAR)
              GOTO 999
           ENDIF
	ELSE
           PARFIL = 'LSL$LOOKUP:DXF.PAR'
	   PARLEN = 18
        ENDIF
C
C----------------------------------------------------------------
C now search for the qualifier 'LOG' 
C
	GETCMD = DCL_QUAL('LOG'		! qual. name
     &        		,HAD_LOG	! returned .T. if qual. found
     &			,FPRES		! set if qual local to parameter
     &			,FNEGA 		! set if qual. negated locally
     &			,WHINGE)	! set-local error reporting
C
	IF (.NOT.GETCMD) GOTO 999
C
C----------------------------------------------------------------
C now search for the qualifier 'QUIET' 
C
	GETCMD = DCL_QUAL('QUIET'	! qual. name
     &        		,HAD_QUIET	! returned .T. if qual. found
     &			,FPRES		! set if qual local to parameter
     &			,FNEGA 		! set if qual. negated locally
     &			,WHINGE)	! set-local error reporting
C
	IF (.NOT.GETCMD) GOTO 999
c
C----------------------------------------------------------------
C now search for the qualifier 'POINTSIZE'
C
	GETCMD = DCL_QUAL('POINTSIZE'	! qual. name
     &        		,HAD_PNT	! returned .T. if qual. found
     &			,FPRES		! set if qual local to parameter
     &			,FNEGA 		! set if qual. negated locally
     &			,WHINGE)	! set-local error reporting
C
	IF (.NOT.GETCMD) GOTO 999
C
C----------------------------------------------------------------
C now search for the qualifier 'HEADER'
C
	GETCMD = DCL_QUAL('HEADER'	! qual. name
     &        		,HAD_HDR	! returned .T. if qual. found
     &			,FPRES		! set if qual local to parameter
     &			,FNEGA 		! set if qual. negated locally
     &			,WHINGE)	! set-local error reporting
C
	IF (.NOT.GETCMD) GOTO 999
C
C----------------------------------------------------------------
C now search for the qualifier 'ABSOLUTE'
C
	GETCMD = DCL_QUAL('ABSOLUTE'	! qual. name
     &        		,HAD_ABS	! returned .T. if qual. found
     &			,FPRES		! set if qual local to parameter
     &			,FNEGA 		! set if qual. negated locally
     &			,WHINGE)	! set-local error reporting
C
	IF (.NOT.GETCMD) GOTO 999
C
C----------------------------------------------------------------
C now search for the qualifier 'DECIMAL_PLACES' for decimal place in
C cooord output
C
	GETCMD = DCL_QUAL('DECIMAL_PLACES' ! qual. name
     &        		,HAD_DP		! returned .T. if qual. found
     &			,FPRES		! set if qual local to parameter
     &			,FNEGA 		! set if qual. negated locally
     &			,WHINGE)	! set-local error reporting
C
	IF (.NOT.GETCMD) GOTO 999
C
	IF (HAD_DP) THEN
C
C If the qualifier was given, get the value 
C
	   GETCMD = DCL_INT('DECIMAL_PLACES',.TRUE.)
	   IF (.NOT.GETCMD) GOTO 999
C
	   NUM_DP = IARRAY(1)
	   IF (NUM_DP.GT.9 .OR. NUM_DP.LE.0) THEN
	      CALL LSL_PUTMSG(I2DXF__BADNUMDP, NUM_DP)
	      GETCMD = I2DXF__BADNUMDP
	      GOTO 999
	   ENDIF
	ENDIF
C
C----------------------------------------------------------------
C Exit
999	RETURN
	END
C
