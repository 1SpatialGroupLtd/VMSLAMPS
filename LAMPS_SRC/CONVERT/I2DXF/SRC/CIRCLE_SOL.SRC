	SUBROUTINE CIRCLE_SOL( CENTRE_X,CENTRE_Y,RADIUS )
C
***	IDENT	07FE91
***	MODULE	CIRCLE_SOL
C
C Copyright (C) LaserScan Laboratories Ltd, Cambridge, England
C
C Author :  Paul Pan, 5 September 1989
C Purpose:  Solve the circle from the three given circumcircle pts
C
        IMPLICIT NONE
C
C Messages:
C
	INCLUDE	 'HERE:I2DXFMSG.PAR'
C
C Common Blocks:
C
	INCLUDE  'LSL$CMNDXFPAR:LOOKUP.CMN'
	INCLUDE  'HERE:I2DXF.CMN'
        INCLUDE  'HERE:POINT.CMN'
C
C Arguments
C
        REAL        CENTRE_X,CENTRE_Y,RADIUS
C
C Workspace:
C
C in order to calculate the radius & centre of a circle,
C    we need an extra workspace for two points,two lines 
C    and two slopes, we also need the workspace of the 
C    centre and radius
C
        REAL        MID_X1,MID_Y1 
        REAL        MID_X2,MID_Y2 
        REAL        A1,C1,M1
        REAL        A2,C2,M2
	REAL	    RADIUS1,RADIUS2,RADIUS3
        REAL        DIFF_X,DIFF_Y
C
C formula for the circle is: (x - a)**2 + (y - b)**2 = c**2
C----------------------------------------------------------------
C now calculate the centre and radius
C    which is the format used by DXF file
C    first the line equation for the line connecting
C    the first and second point             
C
        MID_X1 = ( PT_BUFFER( 1,1 ) + PT_BUFFER( 1,2 ) ) / 2
        MID_Y1 = ( PT_BUFFER( 2,1 ) + PT_BUFFER( 2,2 ) ) / 2
C
        IF ( ( PT_BUFFER( 2,1 ) - PT_BUFFER( 2,2 ) ).NE.0 ) THEN
           M1  = -1 * ( PT_BUFFER( 1,1 ) - PT_BUFFER( 1,2 ) ) / 
     1                ( PT_BUFFER( 2,1 ) - PT_BUFFER( 2,2 ) )
           A1  = -1 * M1
           C1  = MID_Y1 - ( M1 * MID_X1 )
        ELSE
           A1  = 0
           C1  = MID_Y1
        END IF
C
C secondly the line equation for the line connecting
C    the first and third point             
C
        MID_X2 = ( PT_BUFFER( 1,2 ) + PT_BUFFER( 1,3 ) ) / 2
        MID_Y2 = ( PT_BUFFER( 2,2 ) + PT_BUFFER( 2,3 ) ) / 2
C
        IF ( ( PT_BUFFER( 2,2 ) - PT_BUFFER( 2,3 ) ).NE.0 ) THEN
           M2  = -1 * ( PT_BUFFER( 1,2 ) - PT_BUFFER( 1,3 ) ) / 
     1                ( PT_BUFFER( 2,2 ) - PT_BUFFER( 2,3 ) )
           A2  = -1 * M2
           C2  = MID_Y2 - ( M2 * MID_X2 )
        ELSE
           A2  = 0
           C2  = MID_Y2
        ENDIF
C
C the centre of the circle is defined by the intersection 
C    of the two lines defined above               
C
        IF ( ABS(A1-A2) .LT. 1E-7 ) THEN
           CALL LSL_PUTMSG(I2DXF__UNABCALCE)
	   CALL LSL_ADDMSG(I2DXF__ATFSNFC,CURRFSN,IFFFCCODE(SELENTIND))
           RADIUS = -1
           GOTO 101
        ELSE
           CENTRE_X = ( C1 - C2 ) / ( A1 - A2 ) 
           CENTRE_Y = ( A1 * C2 - C1 * A2 ) / ( A1 - A2 ) 
        ENDIF
C
        DIFF_X = (PT_BUFFER(1,1) - CENTRE_X)
        DIFF_Y = (PT_BUFFER(2,1) - CENTRE_Y)
        RADIUS1 = SQRT(DIFF_X*DIFF_X + DIFF_Y*DIFF_Y)
C
        DIFF_X = (PT_BUFFER(1,2) - CENTRE_X)
        DIFF_Y = (PT_BUFFER(2,2) - CENTRE_Y)
        RADIUS2 = SQRT(DIFF_X*DIFF_X + DIFF_Y*DIFF_Y)
C
	IF (ABS(RADIUS1 - RADIUS2) .GT. 0.1) THEN
	   CALL LSL_PUTMSG(I2DXF__UNABCALAR)
	   CALL LSL_ADDMSG(I2DXF__ATFSNFC,CURRFSN,IFFFCCODE(SELENTIND))
	   RADIUS = -1
	   GOTO 101
	ENDIF
C
        DIFF_X = (PT_BUFFER(1,3) - CENTRE_X)
        DIFF_Y = (PT_BUFFER(2,3) - CENTRE_Y)
        RADIUS3 = SQRT(DIFF_X*DIFF_X + DIFF_Y*DIFF_Y)
C
	IF (ABS(RADIUS3 - RADIUS2) .GT. 0.1) THEN
	   CALL LSL_PUTMSG(I2DXF__UNABCALAR)
	   CALL LSL_ADDMSG(I2DXF__ATFSNFC,CURRFSN,IFFFCCODE(SELENTIND))
	   RADIUS = -1
	ENDIF
C
	RADIUS = (RADIUS1+RADIUS2+RADIUS3)/3
C
C Exit
101	RETURN
        END
C
