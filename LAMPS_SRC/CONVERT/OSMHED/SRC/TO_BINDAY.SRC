C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1989-01-19 17:21:34.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE TO_BINDAY( BINDAY, DAY, MONTH, YEAR )
C
***	IDENT	19JA89
***	MODULE	TO_BINDAY
C
C	Copyright Laser-Scan Laboratories Ltd, Cambridge, England
C
C	Created					RJH	17-Jan-1989
C
C Description
C
C	Converts a date into an ICL binary date, taking account of a 
C	zero date
C
	IMPLICIT NONE
C
C Included Parameter Files
C
	INCLUDE	'CMN:OSMHEDMSG.PAR'		! error messages
C
C Arguments
C
	INTEGER		BINDAY		! OUT - the binary date
	INTEGER		DAY,MONTH,YEAR	!  IN - the date required
C
C Functions called
C
	LOGICAL		OSMH_TO_BINDAY	! returns binary day
C
C Local Variables
C
	LOGICAL		OK		! error return code
	CHARACTER*255	MSGSTR		! error message string
	INTEGER*4	MSGLEN		! its length
C
C If we don't have a date, return zero
C
	IF (DAY.EQ.0 .AND. MONTH.EQ.0 .AND. YEAR.EQ.0) THEN
	   BINDAY = 0
C
C Convert the date to binary days
C
	ELSE
	   IF (YEAR .LT. 100) YEAR = YEAR+1900	! assume 20th century
	   OK   = OSMH_TO_BINDAY( BINDAY,DAY,MONTH,YEAR )
C
C If there was a problem, return a zero date (call LSL_GETMSG because 
C we're prompting and don't want to set LSL_STATUS)
C
	   IF (.NOT. OK) THEN
	      CALL LSL_GETMSG( OSMHED__TOBIN, MSGSTR, MSGLEN )
	      CALL WRITEF( '%'//MSGSTR(1:MSGLEN), DAY,MONTH,YEAR )
	      CALL LSL_ADDMSG( OK )
	      BINDAY = 0
	   ENDIF
	ENDIF
C
C Return 
C
	RETURN
	END
