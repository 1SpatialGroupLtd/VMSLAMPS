C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1991-02-25 18:22:06.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE ASC_FLGS(IN,OUT,NUM)
C
***	MODULE	ASC_FLGS
***	IDENT	25FE91
C
	IMPLICIT NONE
C
C	Copyright Laser-Scan Laboratories Ltd., Cambridge, England
C
C	See .UPD file for further updates	RJH	29-Jul-1987
C	Bit 0 is most significant	AJW		19-Mar-1981
C	Created				AJW		11-Mar-1981
C
C	IN is an array of 24 bit words
C	(well - 32 bit long words really)
C	ASC_FLGS converts NUM 6 bit ICL chracters into ASCII in OUT
C****************************************************************************
C
C	This routine has been adapted from ASC.SRC to be used when
C	converting the byte array the holds the 8 FLaGs to ensure
C	that a string of zeros is NOT set to blanks.
C****************************************************************************
C
	INTEGER*2	NUM
	INTEGER*4	IN(*)
	BYTE		OUT(*)
C
	INTEGER*4	LIB$EXTZV
C
	INTEGER*4	I,CH,POS,WORD,NZERO,NBLANK
C
	NZERO = 0
	NBLANK = 0
	DO 20 I=1,NUM
	  POS=18-MOD(I-1,4)*6
	  WORD=(I-1)/4+1
	  CH=LIB$EXTZV(POS,6,IN(WORD))
	  IF (CH.EQ.0) NZERO = NZERO + 1
	  IF ((CH.AND."40).EQ.0) GOTO 10
	    CH=CH.XOR."140
	    GOTO 15
10	  CONTINUE
	    CH=CH.XOR."60
15	  IF (CH.EQ."137) CH="15	! underline
	  OUT(I)=CH
	  IF (CH.EQ.32) NBLANK = NBLANK+1
	  IF (CH.NE.32) NBLANK = 0
20	CONTINUE
C This apparently redundant loop is to cure a problem with FLAG1 only being set
C to NULL when all the FLAGS from MHFLAG should be NULL
	DO 50 I = NUM+1-NBLANK, NUM
	  OUT(I)=32
50	CONTINUE
C
	IF (NUM.LT.80) OUT(NUM+1) = 0
C
	RETURN
	END
