C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1991-09-02 12:34:10.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE PRTDMB(FULL)
C
***	MODULE	PRTDMB
***	IDENT	02SE91
C
	IMPLICIT NONE
C
C Copyright Laser-Scan Laboratories Ltd, Cambridge, England
C
C	See .UPD file for further updates	RJH	29-Jul-1987
C	add MHMHWM, MHMLWM			TJI	20-Mar-1984
C	add new field				TJI	17-Jun-1983
C	change %A to %A80 where needed		TJI	20-Aug-1982
C	cope with multiple survey dates		PGH	10-May-1982
C	Revised MH layout 			PGH	 8-Mar-1982
C	FULL and brief listing			PGH	 4-Apr-1981
C	Bit 0 is MOST ?!?! significant		AJW	19-Mar-1981
C	Extended				AJW	12-Mar-1981
C	MH entries added			AJW	10-Mar-1981
C	Four letter mnemonics added		AJW	 6-Mar-1981
C	Created					PGH	 5-Mar-1981
C
C IFF Map Header formatted print
C
C
***	COMMON/LSL$CMNLSL:EXPC/
***	COMMON/LSL$CMNIFF:MHDMB/
C
C argument
	LOGICAL*1 FULL		! full listing
C
C function:
	INTEGER*4 LIB$EXTZV
C
C w/s:
	INTEGER*4 HALF1,HALF2,Q1,Q2,Q3,Q4
	INTEGER*4 DAY,MTH,YR
	LOGICAL*1 BOTH
	BYTE      BYTAR1(80),BYTAR2(80)
	CHARACTER*8 NAME
	CHARACTER*23 TIME
C
	BOTH=.TRUE.
	GOTO 10
C
	ENTRY PRTPCF(FULL)
C
	BOTH=.FALSE.
C
10	CONTINUE
C the process header
C line 1
	CALL OSNAME(NAME)
	CALL SYS$ASCTIM(,TIME,,)
	CALL WRITEF('Map Reference %S at %S',NAME,TIME)
C line 2
	CALL WRITEF(' ')
C line 3
	CALL WRITEF(
     &  ' JOBN %N			STorage SCale 1:%N',
     &     PCJOBN,                    PCSTSC)
C line 4
	CALL WRITEF(
     &  ' MRCE %N			MRCN %N',
     &     PCMRCE,                    PCMRCN)
C line 5
	CALL HALF(PCGENR,HALF2,HALF1)
	CALL WRITEF(
     &  ' GENeRation %P0%O4		last run no %P0%O4',
     &                 HALF1,                     HALF2)
C line 6
	CALL ASC(PCSECT,BYTAR1,4)
	CALL WRITEF(
     &  ' SECTion %A			INPut Control %O8',
     &               BYTAR1,          PCINPC)
C line 7
	CALL WRITEF(
     &  ' FLAG %O8			EDGe match Control %O8',
     &          PCFLAG,               PCEDGC)
C line 8
	CALL WRITEF(
     &  ' Map Data File No %O8	DuMP Control %O8',
     &     PCMDFN,                    PCDMPC)
C line 9
	CALL WRITEF(
     &  ' SUBFile size %O8		SUBfile Creation %O8',
     &      PCSUBF,           PCSUBC)
C line 10
	CALL QUART(PCREST,Q4,Q3,Q2,Q1)
	CALL WRITEF(
     &  ' RESTart counts %P0%O2,%P0%O2,%P0%O2,%P0%O2',
     &                      Q1,Q2,Q3,Q4)
C line 11
	CALL QUART(PCEDGJ,Q4,Q3,Q2,Q1)
	CALL EXPAND(
     &  ' EDGe match Status %O8',
     &     PCEDGS)
	CALL WRTAPP(
     &  '	EDGe Job counts %P0%O2,%P0%O2,%P0%O2,%P0%O2',
     &                           Q1,Q2,Q3,Q4)
C
	IF (.NOT.BOTH) GOTO 999
C now the map header itself...
C line 0
	CALL WRITEF
C
	ENTRY PRTMH(FULL)
C
	IF (FULL) CALL WRITEF(
     &  '  1 obsolete %N			 2 obsolete %N',
     &     MHSQN,                     MHLOCN)
	IF (FULL) CALL WRITEF(
     &  '  3 spare %N			 4 spare %N',
     &                MHLONG(3),                         MHLONG(4))
C line 1
	CALL WRITEF(
     &  ' Map Ref Corner (E) %N	(N) %N',
     &     MHMRCE,                  MHMRCN)
C line 2
	CALL WRITEF(
     &  ' Map Limit (E) %N		(N) %N',
     &     MHMLE,                    MHMLN)
C line 3
	CALL WRITEF(
     &  ' Basic Grid Interval %N    	STorage SCale %N',
     &     MHBGI,                             MHSTSC)
	IF (FULL) THEN
	   CALL WRITEF(
     &  ' Data Capture SCale %N	12 obsolete %N',
     &     MHDCSC,                            MHDLA)
	   CALL WRITEF(
     &  ' 13 spare %N			14 spare %N',
     &                MHLONG(13),                        MHLONG(14))
	   CALL WRITEF(
     &  ' 15 spare %N			16 obsolete %N',
     &                MHLONG(15),             MHGEN)
	   CALL WRITEF(
     &  ' 17 obsolete %N			18 spare %N',
     &                MHCONT,                            MHLONG(18))
	   CALL WRITEF(
     &  ' 19 spare %N	%T	Edge Match Status (N) %N',
     &                MHLONG(19),      MHEMSN)
	ELSE
C line 4
	   CALL WRITEF(
     &  ' Data Capture SCale %N	Edge Match Status (N) %N',
     &     MHDCSC,                                        MHEMSN )
	ENDIF
C line 5
	CALL WRITEF(
     &  ' Edge Match Status (E) %N	Edge Match Status (S) %N',
     &     MHEMSE,                    MHEMSS)
C line 6
	CALL EXPAND(
     &  ' Edge Match Status (W) %N	',MHEMSW)
	CALL FROM_BINDAY(MHDIDB,DAY,MTH,YR)
	CALL WRITAP('Date of Initial DataBanking %N/%N/%N',DAY,MTH,YR)
	IF (FULL) CALL WRITEF(
     &  ' 25 spare %N			26 spare %N',
     &                MHLONG(25),                        MHLONG(26))
	IF (FULL) CALL WRITEF(
     &  ' 27 spare %N			28 spare %N',
     &                MHLONG(27),                        MHLONG(28))
	IF (FULL) CALL WRITEF(
     &  ' 29 spare %N			30 spare %N',
     &                MHLONG(29),                        MHLONG(30))
C line 7
	CALL ASC(MHEDTN,BYTAR1,12)
	CALL ASC(MHSURT,BYTAR2,4)
	CALL WRITEF(
     &  ' EDiTioN %A12		SURvey Type %A4',
     &     BYTAR1,                       BYTAR2)
	IF (FULL) THEN
	   CALL WRITEF(
     &	' 35 obsolete %N	%T%TLatest Full Revision Date %N/%N',
     &	     MHSURD,
     &       LIB$EXTZV(20,4,MHLFRD),LIB$EXTZV(0,20,MHLFRD))
	   CALL WRITEF(
     &  ' 37 obsolete %N			38 obsolete %N',
     &                MHDUPD(1),                         MHDUPD(2))
	   CALL WRITEF(
     &  ' 39 obsolete %N			40 obsolete %N',
     &                MHDUPD(3),                         MHDUPD(4))
	   CALL WRITEF(
     &  ' 41 obsolete %N			42 obsolete %N',
     &                MHDUPD(5),                         MHDUPD(6))
	ELSE
C line 8
	   CALL WRITEF(
     &	' 			%TLatest Full Revision Date %N/%N',
     &       LIB$EXTZV(20,4,MHLFRD),LIB$EXTZV(0,20,MHLFRD))
	ENDIF
C line 9
	CALL WRITEF(
     &  ' BOUndary Date %N/%N		LEVelling Date (1) %N',
     &       LIB$EXTZV(20,4,MHBOUD),LIB$EXTZV(0,20,MHBOUD),MHLEVD(1))
	IF (FULL) THEN
	   CALL WRITEF(
     &  ' LEVelling Date (2) %N		46 obsolete %N',
     &       MHLEVD(2),                 MHHWMD)
	   CALL WRITEF(
     &  ' 47 obsolete %N		CoPYright Date %N',
     &       MHLWMD,                    MHCPYD)
	ELSE
C line 10
	   CALL WRITEF(
     &  ' LEVelling Date (2) %N		CoPYright Date %N',
     &       MHLEVD(2),                 MHCPYD)
	ENDIF
C line 11
	CALL WRITEF(
     &  ' Digital UPdate Count %N		CONtour Date %N',
     &       MHDUPC,                    MHCOND)
	IF (FULL) THEN
	   CALL WRITEF(
     &  ' Contour Vert Interval %N	52 obsolete %N',
     &       MHCVI ,                    MHSRVD)
	   CALL EXPAND(
     &  ' 53 obsolete %N',
     &       MHMULS)
	   CALL WRITAP(
     &  '		%TMap SPeCification number %P0%I8',
     &       MHMSPC)
	ELSE
C line 12
	   CALL EXPAND(
     &  ' Contour Vert Interval %N',
     &       MHCVI)
	   CALL WRITAP(
     &  '	Map SPeCification number %P0%I8',
     &       MHMSPC)
	ENDIF
C line 13
	CALL ASC(MHABI1,BYTAR1,80)
	CALL WRITEF(
     &  ' Additional Boundary Information - %A80',BYTAR1)
C line 14
	CALL ASC(MHABI2,BYTAR1,80)
	CALL WRITEF(
     &  ' Additional Boundary Information - %A80',BYTAR1)
C line 15
	CALL ASC(MHABI3,BYTAR1,80)
	CALL WRITEF(
     &  ' Additional Boundary Information - %A80',BYTAR1)
	IF (FULL) CALL WRITEF(
     &  ' 115 obsolete %N',MHNSUP)
C line 16
	CALL HALF(MHMHWM,HALF1,HALF2)
	CALL EXPAND(
     &	' High Water Mark Dates %N/%N	',HALF1,HALF2)
	CALL HALF(MHMLWM,HALF1,HALF2)
	CALL WRITAP('Low Water Mark Dates %N/%N',HALF1,HALF2)
C line 17
	CALL ASC(MHCIND,BYTAR1,8)
	CALL WRITEF(
     &  ' Content INDicator %A8	Orig SuRvey Date (1) %N/%N',
     &       BYTAR1,
     &       LIB$EXTZV(20,4,MHOSUR(1)),LIB$EXTZV(0,20,MHOSUR(1)))
C line 18
	CALL EXPAND(
     &  ' Orig SuRvey Date (2) %N/%N	',
     &       LIB$EXTZV(20,4,MHOSUR(2)),LIB$EXTZV(0,20,MHOSUR(2)))
	CALL FROM_BINDAY(MHSDUP,DAY,MTH,YR)
	CALL WRITAP('Digital UPdate Date %N/%N/%N',DAY,MTH,YR)
C line 19
	CALL WRITEF(
     &  ' Quality Control Date %N/%N	House Unit Count %N',
     &       LIB$EXTZV(20,4,MHQCD),LIB$EXTZV(0,20,MHQCD),
     &	     MHHUC)
C line 20
	CALL EXPAND(
     &  ' OSTF+ indicator %N		',MHPLUS)
	CALL FROM_BINDAY(MHSTRD,DAY,MTH,YR)
	CALL WRITAP('STRucture Date %N/%N/%N',DAY,MTH,YR)
C line 21
	CALL ASC(MHCVAL,BYTAR1,8)
	CALL WRITEF(
     &  ' Check VALues %A',BYTAR1)
C line 22
	CALL WRITEF(
     &  ' UNSpecified Long %N		UNSpecified Short (1) %N',
     &       MHBYTC,                    MHUNSS(1))
C line 23
	CALL WRITEF(
     &  ' UNSpecified Short (2) %N',
     &       MHUNSS(2))
C
	CALL ASC_FLGS(MHFLAG,BYTAR1,8)
C
C line 24
	CALL WRITEF(
     &  ' FLaG1 %A1			FLaG2 %A1',
     &       BYTAR1(1),                 BYTAR1(2))
C line 25
	CALL WRITEF(
     &  ' FLaG3 %A1			FLaG4 %A1',
     &       BYTAR1(3),                 BYTAR1(4))
C line 26
	CALL WRITEF(
     &  ' FLaG5 %A1			FLaG6 %A1',
     &       BYTAR1(5),                 BYTAR1(6))
C line 27
	CALL WRITEF(
     &  ' FLaG7 %A1			FLaG8 %A1',
     &       BYTAR1(7),                 BYTAR1(8))
C line 28
	CALL WRITEF(
     &  ' STRucture Category %N',
     &       MHSTRC)
C line 29
	CALL ASC(MHCID,BYTAR1,4)
	CALL WRITEF(
     &  ' Batch NUMber %N		%TContractors IDentity %A',
     &       MHBNUM,			BYTAR1)
C
999	RETURN
C
	END
