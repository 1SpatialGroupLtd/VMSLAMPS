C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1988-11-14 18:30:58.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	  INTEGER*4  FUNCTION GET_AC()
C
***	MODULE	GET_AC
***	IDENT	14NO88
C
C 	Copyright Laser-Scan Laboratories Ltd.,England
C
C Created.					FJB  15-Sep-1988
C
CMOD   AC treatment amended                     JDB   1-Nov-1988
C
C Interpret AC entries for height, scale, hour, and extra text on 
C feature code record and on first coordinate
C
	IMPLICIT NONE
C
C Parameters:                                          
	INCLUDE 'LSL$CMNI2KERNCAM:PARAMS.PAR'
C
C Common:
 	INCLUDE 'LSL$CMNI2KERNCAM:FEATURE.CMN'
	INCLUDE 'LSL$CMNIFF:IFFHAN.CMN'
	INCLUDE 'LSL$CMNFRT:FRTACD.CMN'
C
C Word:
	INTEGER*2	ACTYPE
        INTEGER*2       ACLEN           ! length of AC text
C
C Character:
	CHARACTER*20	UPSTRING
C
C Functions:
	INTEGER*4	ACDFND
C
C Presets:
	INTEGER*4 	SS$_NORMAL
	EXTERNAL  	SS$_NORMAL	! normal successful 
C                                       !  completion
C ....................................................................
C
C Assume the best
	GET_AC=%LOC(SS$_NORMAL)
C
C Find the AC name
	CALL EIHRI(ACTYPE,1,1)
	IF(ACDFND(ACTYPE,.TRUE.)) GOTO 999     ! known in FRT?
C
C Convert to upper_case
	CALL STR$UPCASE(UPSTRING,ACD_NAME)
C
C Height?                        
	IF(UPSTRING .EQ.'HEIGHT              ')THEN
	   IF(ACD_DATA_TYPE .NE. ACD_DATATYPE_R)GOTO 999
	   CALL EIHRR(AC_HEIGHT,1,2)
	   HAD_HEIGHT = .TRUE.
	   GOTO 1000
C
C Scale?                        
	ELSEIF(UPSTRING .EQ.'KERN_SCALE          ')THEN
	   IF(ACD_DATA_TYPE .NE. ACD_DATATYPE_R)GOTO 999
	   CALL EIHRR(AC_SCALE,1,2)
	   HAD_SCALE = .TRUE.
	   GOTO 1000
C
C Hour?
	ELSEIF(UPSTRING .EQ. 'KERN_HOUR           ')THEN
	   IF(ACD_DATA_TYPE .NE. ACD_DATATYPE_R)GOTO 999
	   CALL EIHRR(AC_HOUR,1,2)
	   HAD_HOUR = .TRUE.
	   GOTO 1000
C
C Feature Code name?  
	ELSEIF(UPSTRING .EQ. 'KERN_FC_NAME        ')THEN
	   IF(ACD_DATA_TYPE .NE. ACD_DATATYPE_I)GOTO 999
C
C  get length of string (in bytes) from AC value field
C
           CALL EIHRL (AC_FC_NAME_LEN, 1, 2)
C
           ACLEN = (AC_FC_NAME_LEN + 1)/2   ! length in words
C
	   CALL EIHR (AC_FC_NAME, ACLEN, 4)
	   HAD_FCNAME = .TRUE.
	   GOTO 1000
C
C Coordinate name?  
	ELSEIF(UPSTRING .EQ. 'KERN_ZS_NAME        ')THEN
	   IF(ACD_DATA_TYPE .NE. ACD_DATATYPE_I)GOTO 999
C
C  get length of string (in bytes) from AC value field
C
           CALL EIHRL (AC_ZS_NAME_LEN, 1, 2)
C
           ACLEN = (AC_ZS_NAME_LEN + 1)/2
C
	   CALL EIHR (AC_ZS_NAME, ACLEN, 4)
	   HAD_ZSNAME = .TRUE.
	   GOTO 1000
        ELSE
C
C  it was a default AC to be ignored
C
           CALL WRITEF (' AC type %^W%N ignored', ACTYPE)
           GOTO 1000
        ENDIF
C
999	GET_AC = .FALSE.
C
C ......................................................................
C                 
1000	IF (GET_AC) GET_AC=%LOC(SS$_NORMAL)
	RETURN
C
C ......................................................................
C
	END
C                    
