C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1988-09-28 16:48:06.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
        INTEGER*4 FUNCTION CMDLIN()
C
***	MODULE	CMDLIN
***	IDENT	28SE88
C
C 	Copyright Laser-Scan Laboratories Ltd.,England
C
C	Created.    					FJB 	7-September-1988
C                                     
C	The command decoder for I2KERNCAM
C
	IMPLICIT NONE
C
C Parameters:
	INCLUDE 'LSL$CMNI2KERNCAM:PARAMS.PAR'
	INCLUDE 'LSL$CMNLSL:LSLLIBMSG.PAR'
	INCLUDE '($SSDEF)/NOLIST'
C
C Common:
	INCLUDE 'LSL$CMNLSL:CLD.CMN'
C	INCLUDE 'LSL$CMNLSL:FILENAME.CMN'
	INCLUDE 'LSL$CMNI2KERNCAM:COMMAND.CMN'
C
C Command Language Definitions:
	EXTERNAL	I2KERNCAM_CLD
C
C Logical*4                                   
	LOGICAL		ABSENT	   ! .T. if file param. not found
	LOGICAL		HAD_FRT	   ! had /FRT qualifier
 	LOGICAL		LOCAL      ! .T. if qual. is local
	LOGICAL		LOCNEG     ! set .T. if qual. locally negated
        LOGICAL		WHINGE     ! .T. - local error reporting
C
C Functions called:
        INTEGER*4       DCL_STARTUP! looks for command line
	INTEGER*4	DCL_FILE   ! reads & parses file title from DCL 
C			           ! command line
	INTEGER*4	DCL_QUAL   ! looks for specified qualifier
C
C
C...................................................................
C
C	    I N I T I A L I S E   T H I N G S 
C
	WHINGE=.TRUE.		 ! local error reporting
C
C....................................................................
C
C	    G E T   C O M M A N D   L I N E
C
	CMDLIN=DCL_STARTUP('I2KERNCAM',.FALSE.,I2KERNCAM_CLD,WHINGE)
C
C DCL_STARTUP will return set to SS$_NORMAL if all well.
C
        IF (.NOT.CMDLIN) GOTO 10 		! return
C
C....................................................................
C
C	     C H E C K   F O R   Q U A L I F I E R S
C
C We could have /FRT=?, 
C		/DIAGNOSTICS,
C
C Try /DIAGNOSTICS
	CMDLIN=DCL_QUAL('DIAGNOSTICS',HAD_DIAG,LOCAL,LOCNEG,WHINGE)
	IF (.NOT.CMDLIN) GOTO 10 		! return
C
C Check for /FRT=filespec
	CMDLIN=DCL_QUAL('FRT',HAD_FRT,LOCAL,LOCNEG,WHINGE)
	IF(.NOT.CMDLIN) GOTO 10			! return
C
	IF(HAD_FRT) THEN
	   CMDLIN=DCL_FILE('FRT','LSL$FRT:KERN_CAM.FRT;0',
     &			ABSENT,.FALSE.,WHINGE)
	   IF(.NOT. CMDLIN)GOTO 10		! return
	   FRT_FIL=FILARY(1)(1:FIL_LEN(1))
	   FRT_LEN=FIL_LEN(1)
	ENDIF
C                                       
C Get input file
	CMDLIN=DCL_FILE('P1','LSL$IF:IFF.IFF;0',ABSENT,.FALSE.,WHINGE)
	IF(.NOT. CMDLIN)GOTO 10		! return
C
C Transfer file-spec to a variable
	IFF_FIL=FILARY(1)(1:FIL_LEN(1))
	IFF_LEN=FIL_LEN(1)
C                                       
C Get output file
	CMDLIN=DCL_FILE
     &	  ('P2','SYS$DISK:[]KERN_CAM.DAT;0',ABSENT,.FALSE.,WHINGE)
	IF(.NOT. CMDLIN)GOTO 10		! return
C
C Transfer file-spec to a variable
	CAM_FIL=FILARY(1)(1:FIL_LEN(1))
	CAM_LEN=FIL_LEN(1)
C			
10	IF (CMDLIN) CMDLIN=SS$_NORMAL
C
C Finish
	RETURN
	END
