$ !			  K I T I N S T A L . C O M 
$ !
$ !***************************************************************************
$ !
$ ! 	This procedure installs Laser-Scan Informap conversion software
$ !	(LSLIMC) using VMSINSTAL.
$ !
$ !	Setup error handling
$ !
$ ON CONTROL_Y THEN VMI$CALLBACK CONTROL_Y
$ ON WARNING THEN EXIT $STATUS
$ !
$ !
$ !	Handle INSTALL and unsupported parameters passed by VMSINSTAL.
$ !
$ IF P1 .EQS. "VMI$_INSTALL" THEN GOTO INSTALL
$ EXIT VMI$_UNSUPPORTED
$ !
$ INSTALL:
$ !
$ !	Let VMSINSTAL know there is no IVP,
$ !	and ask if replaced files are to be purged.
$ !
$ VMI$CALLBACK SET IVP NO
$ VMI$CALLBACK SET PURGE ASK
$ !
$ ! check required resources
$ !
$VERSION_CHECK:
$ VERSION_NEEDED="055"
$ VMI$CALLBACK CHECK_VMS_VERSION OK 'VERSION_NEEDED'
$ IF OK THEN GOTO VERSION_OK
$ VMI$CALLBACK MESSAGE E VERSION "Version not sufficient"
$ VMI$CALLBACK MESSAGE E VERSION "Current version is ''VMI$VMS_VERSION', needs ''VERSION_NEEDED'"
$ EXIT VMI$_FAILURE
$VERSION_OK:
$ !
$ TOTAL_BLOCKS=2000
$ VMI$CALLBACK CHECK_NET_UTILIZATION OK 'TOTAL_BLOCKS'
$ IF OK THEN GOTO SPACE_OK
$ VMI$CALLBACK MESSAGE E NOSPACE -
"Insufficient free blocks to install the product"
$ VMI$CALLBACK MESSAGE E NOSPACE "''TOTAL_BLOCKS' free blocks required."
$ EXIT VMI$_FAILURE
$SPACE_OK:
$ !
$ ! create necessary directories
$ !
$ VMI$CALLBACK CREATE_DIRECTORY USER STI_ROOT:[LSL.COM]
$ VMI$CALLBACK CREATE_DIRECTORY USER STI_ROOT:[LSL.EXE]
$ VMI$CALLBACK CREATE_DIRECTORY USER STI_ROOT:[LSL.LIB]
$ VMI$CALLBACK CREATE_DIRECTORY USER STI_ROOT:[LSL.LOOKUP]
$ VMI$CALLBACK CREATE_DIRECTORY USER STI_ROOT:[LSL.DATA]
$ VMI$CALLBACK CREATE_DIRECTORY USER STI_ROOT:[LSL.TEMP]
$ !
$ ! copy the files
$ !
$ VMI$CALLBACK PROVIDE_FILE NEWFILE$ LSLIMI_MENU.COM STI_ROOT:[LSL.COM]
$ VMI$CALLBACK PROVIDE_FILE NEWFILE$ LSLIMI_LSLINI.COM STI_ROOT:[LSL.COM]
$ VMI$CALLBACK PROVIDE_FILE NEWFILE$ LSLIMI_MENU_INI.COM STI_ROOT:[LSL.COM]
$ VMI$CALLBACK PROVIDE_IMAGE NEWFILE$ I2IMAP.EXE STI_ROOT:[LSL.EXE]
$ VMI$CALLBACK PROVIDE_IMAGE NEWFILE$ IMAP2I.EXE STI_ROOT:[LSL.EXE]
$ VMI$CALLBACK PROVIDE_IMAGE NEWFILE$ I2OSTF.EXE STI_ROOT:[LSL.EXE]
$ VMI$CALLBACK PROVIDE_IMAGE NEWFILE$ OSTF2I.EXE STI_ROOT:[LSL.EXE]
$ VMI$CALLBACK PROVIDE_IMAGE NEWFILE$ OSTFINDEX.EXE STI_ROOT:[LSL.EXE]
$ VMI$CALLBACK PROVIDE_IMAGE NEWFILE$  I2NTF.EXE STI_ROOT:[LSL.EXE]
$ VMI$CALLBACK PROVIDE_IMAGE NEWFILE$  NTF2I.EXE STI_ROOT:[LSL.EXE]
$ VMI$CALLBACK PROVIDE_FILE NEWFILE$ OS.I2IMAP_PAR STI_ROOT:[LSL.LOOKUP]
$ VMI$CALLBACK PROVIDE_FILE NEWFILE$ OS.IMAP2I_PAR STI_ROOT:[LSL.LOOKUP]
$ VMI$CALLBACK PROVIDE_IMAGE NEWFILE$ LSLSHR.EXE STI_ROOT:[LSL.LIB]
$ VMI$CALLBACK PROVIDE_IMAGE NEWFILE$ IFFSHR.EXE STI_ROOT:[LSL.LIB]
$ !
$ ! all done
$ !
$ SET NOVERIFY
$end_instal:
$ EXIT VMI$_SUCCESS
