	LOGICAL FUNCTION SORT_LUT(LUTABLE, LENGTH)
C
C
C Copyright Laser-Scan Ltd., Cambridge, England.
C
C Author Matt Wenham, 25 October 1996
C
C Returns TRUE if it suceeds in sorting the FC lookup table into IFF
C order (column 2). If duplicate IFF entries are present in the table,
C they are eliminated, and the associated NTF value is set to the smallest
C value found associated with the duplicated IFF FC. The NTF value is also
C negated to flag the fact that it is associated with a duplicate IFF FC.
C This is trapped for and warned of in FC_TRANS.
C Returns FALSE (failure) if invalid NTF FCs are present in the table.
C Also sets the DUP_NTF_FC flag used by VOLTERM.
C
	IMPLICIT NONE
C
C Messages:
	INCLUDE 'HERE:I2NTFMSG.PAR'
	INCLUDE 'LSL$CMNLSL:LSLLIBMSG.PAR'
C
C Commons:
	INCLUDE	'COMMANDS.CMN'
	INCLUDE	'LOOKUP.CMN'
C
C Arguments:
	INTEGER		LUTABLE(2,*)	! Lookup table
	INTEGER		LENGTH		! Number of entries
C Externals:
	INTEGER		LUT_IFF_CF, LUT_NTF_CF
	EXTERNAL	LUT_IFF_CF, LUT_NTF_CF, LUT_SWAP
C Workspace:
	INTEGER		I		! Counter
	INTEGER		SHIFT		! Table entries to miss out
C   ...............................................................
C
C Assume success, and sort the table by NTF FC.
C
	SORT_LUT = .TRUE.
	CALL SHELL_SORT(LUTABLE, LENGTH, LUT_NTF_CF, LUT_SWAP)
C
C Check for duplicate NTF FC entries
C
	DUP_NTF_FC = .FALSE.			! Assume no NTF FC duplicates
	IF (LENGTH .GT. 1) THEN				! Need to check?
	   I = 2
50	   CONTINUE
	   IF (LUTABLE(1,I).EQ.LUTABLE(1,I-1)) THEN	! Duplicate entry?
	      DUP_NTF_FC = .TRUE.			! Flag duplicate
	   ELSE
	      I = I + 1					! Check next entry...
	      IF (I.LE.LENGTH) GOTO 50			! ... unless finished
	   ENDIF
	ENDIF
C
C Now sort the table into IFF FC order as required by FC_TRANS.
C
	CALL SHELL_SORT(LUTABLE, LENGTH, LUT_IFF_CF, LUT_SWAP)
C
C Check for, deal with and flag duplicates in the sorted table. Fail if
C invalid NTF FCs found
C
	IF ((LUTABLE(1,1).GT.9999 .OR. LUTABLE(1,1).LT.0) .AND.
     &		(.NOT.HAD_CITF96)) THEN				! Bad NTF FC?
	    CALL LSL_PUTMSG( I2NTF__BADNTFFC, LUTABLE(1,1))	! Inform user
	    SORT_LUT = .FALSE.				! Flag failure
	    GOTO 999					! Outa here
        ENDIF
C
	IF (LENGTH .EQ. 1) GOTO 900			! Need to check?
	I = 2						! Check rest of table
	SHIFT = 0					! No entries deleted yet
C
100	CONTINUE
	IF ((LUTABLE(1,I).GT.9999 .OR. LUTABLE(1,I).LT.0) .AND.
     &		(.NOT.HAD_CITF96)) THEN				! Bad NTF FC?
	    CALL LSL_PUTMSG( I2NTF__BADNTFFC, LUTABLE(1,1))	! Inform user
	    SORT_LUT = .FALSE.				! Flag failure
	    GOTO 999					! Outa here
        ENDIF
C
	IF (LUTABLE(2,I).EQ.LUTABLE(2,I-1)) THEN	! Duplicate IFF entry?
	   LUTABLE(1,I) =				! Set NTF FC to min
     & 		-MIN(LUTABLE(1,I), ABS(LUTABLE(1,I-1))) ! Negate to flag dupl.
	   SHIFT = SHIFT + 1				! Remove dupl. entry
	ENDIF
C
	IF (SHIFT.GT.0) THEN				! Shift any entries up?
	   LUTABLE(1,I-SHIFT) = LUTABLE(1,I)		! Yes, do it
	   LUTABLE(2,I-SHIFT) = LUTABLE(2,I)
	ENDIF
	I = I + 1					! Check next entry...
	IF (I.LE.LENGTH) GOTO 100			! ... unless finished
C
900	CONTINUE
C
999	RETURN
	END
C
