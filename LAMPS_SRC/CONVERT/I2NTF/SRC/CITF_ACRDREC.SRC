	SUBROUTINE CITF_ACRDREC(SUCCESS,VALUE,LENVAL,DTYPE,ATTCODE,INTVAL)
C
***     MODULE CITF_ACRDREC
***     IDENT	06OC93
C
C	Copyright Laser-Scan Ltd, Cambridge, England
C	Author					Steve Townrow	08-Jan-1993
C
CMOD1301Leave SUCCESS set to false if ACD not found in attribute table,
C	not set to true
C	Cope with null dates as 00000000	Jon Barber	05-Oct-1993
C
C	Outputs attribute coordinate records
C
	IMPLICIT NONE
C
C Arguments:
	LOGICAL		SUCCESS		! we got a value
	CHARACTER*80	VALUE		! the attribute as a value
	INTEGER*4	LENVAL		! Length of value
	INTEGER*4	DTYPE		! true data type of ANINT
	INTEGER*4	ATTCODE		! the AC code
	INTEGER*4	INTVAL
C
	LOGICAL		FIELD		! was it a field AC
	CHARACTER*80	TMPSTORE	! for numbers to write into
C
C Common:
	INCLUDE 	'LSL$CMNIFF:CB.STR'	! for IFF_ABSENT
	INCLUDE 	'LSL$CMNFRT:FRTACD.CMN'	! default attribute info
	INCLUDE 	'CMN:ATTRIBUTE.CMN'	! attrib. desc. table
	INCLUDE		'CMN:COMMANDS.CMN'
	INCLUDE		'CMN:CITFATTS.CMN'	! default NTF attribs
	INCLUDE		'CMN:FTRCMN.CMN'
C
C Messages:
	INCLUDE 	'CMN:I2NTFMSG.PAR'
C
C Functions:
	INTEGER*2	EXPAND
C
C Local parameters
	BYTE		BLANK
	PARAMETER	(BLANK = ' ')
C
C Workspace:
	INTEGER*2	I,J,K		! Loop counters
	INTEGER*2	ATNO		! Pointer to the attribute tables
	INTEGER*2	ACTYPE		! Type of AC
	INTEGER		LCODE		! Value (interpretation depends
					!         on the AC type )
C
	INTEGER		WIDTH		! Format for output
	INTEGER		TYPE
	INTEGER		MULT
	LOGICAL		DEFAULT		! Default format
	INTEGER		CITF_IND	! Index in CITF AC array
C
	INTEGER*2	RLEN		! Length of VALUE
C
	INTEGER*4	MONTH		! for date AC's
	CHARACTER*12	DATE,TIME	! Temp storage
	CHARACTER*3	MONTHS(12)	! JAN, FEB,...,DEC
	CHARACTER*12	NODATA(6)	! what field should hold if no data
C
	DATA MONTHS /	'JAN','FEB','MAR','APR','MAY','JUN',
     &			'JUL','AUG','SEP','OCT','NOV','DEC' /
C
C These empty fields only exist for Int, Real and Character fields
C
	DATA NODATA/'00000000000','000000000000','    ',' ',' ',' '/
C
	INTEGER*4	ANINT
	REAL*4		REALINT
	CHARACTER*4	CHARINT
	EQUIVALENCE	(ANINT,REALINT)
	EQUIVALENCE	(ANINT,CHARINT)
C
C	SUCCESS = .TRUE.		! assume success
	FIELD   = .FALSE.		! assume not a field AC
	DEFAULT = .FALSE.
C
C.........................................................................
C First see if it's an attribute number we know something about
C
	ANINT = INTVAL
	ATNO = 0			! Start at the beginning
C
10	DO 150 I=ATNO+1,ATTR_PTR
	   IF (ATTCODE.EQ.IFF_ATT_NUM(I)) THEN
	      ATNO = I			! Save AC table index
	      GOTO 155
	   ENDIF
150	CONTINUE
C
	IF (LOG .AND. HAD_ATTRIBUTE) THEN
	   CALL LSL_PUTMSG(I2NTF__ACNOTATT,ATTCODE,FSN,ISN)
	ENDIF
C
	GOTO 999				! It ain't
C
C Now check if the NTF attribute exists in the default list
C
155	CONTINUE
C
11	DO 160 J=1,NUM_CITF_ATTS
	   IF (CITF_DEF_ATT(J).EQ.NTF_ATT_NAME(ATNO)) THEN
	      CITF_IND = J
	      DEFAULT  = .TRUE.
	      GOTO 165
	   ENDIF
160	CONTINUE
C
	GOTO 200		! not default
C
165	CONTINUE
C .......................................................................
C
	TYPE  = CITF_DEF_TYPE(J)
	WIDTH = CITF_DEF_WIDTH(J)
	MULT  = CITF_DEF_MULT(J)
C
C .......................................................................
C Integer
	IF (TYPE.EQ.ACD_DATATYPE_I) THEN
	   WRITE (TMPSTORE,1111) (ANINT * MULT)
1111	   FORMAT(I<WIDTH>.<WIDTH>)
C
	   RLEN = EXPAND('%WS% %S2%S%A1',VALUE,
     &				      CITF_DEF_ATT(CITF_IND),
     &				      TMPSTORE(1:WIDTH),
     &				      DIVIDER)
C
C .......................................................................
C Real
	ELSEIF (TYPE.EQ.ACD_DATATYPE_R) THEN
	   WRITE (TMPSTORE,1111) NINT(REALINT*MULT)
C
	   RLEN = EXPAND('%WS% %S2%S%A1',VALUE,
     &				       CITF_DEF_ATT(CITF_IND),
     &				       TMPSTORE(1:WIDTH),
     &				       DIVIDER)
C
C .......................................................................
C Date
C
	ELSEIF (TYPE.EQ.ACD_DATATYPE_D) THEN
C
C Check for unset
C
	   IF (ANINT.EQ.0 .OR. ANINT.EQ.IFF_ABSENT) THEN
	      RLEN = EXPAND('%WS%P0%S2%S8%A1',VALUE,NTF_ATT_NAME(ATNO),
     &						'00000000',DIVIDER)
	      GOTO 800
	   ENDIF
C
C The date needs some converting, it comes as an integer...
C
	   CALL EXPAND('%WS%P0%DD',DATE,ANINT)
C
	   IF (DATE.EQ.' ') THEN		! check for blank date
	      RLEN = EXPAND('%WS%P0%S2%S8%A1',VALUE,NTF_ATT_NAME(ATNO),
     &						'00000000',DIVIDER)
	      GOTO 800
	   ENDIF
C
C ...which has now been expanded into the form dd-mmm-yyyy, but NTF 
C wants yyyymmdd
C
C First translate the month from chars (e.g. 'APR') into integer (03)
C
	   DO 101 J=1,12		! Check which month
	      IF (DATE(4:6).EQ.MONTHS(J)) THEN
	         MONTH = J
		 GOTO 103
	      ENDIF
101	   CONTINUE
C
103	   IF (DATE(1:1).EQ.' ') DATE(1:1) = '0'
C
C Then re-write the date in the new order
C
	   RLEN = EXPAND('%WS%P0%S2%S4%I2%S2%A1',VALUE,
     &						NTF_ATT_NAME(ATNO),
     &						DATE(8:11),
     &						MONTH,
     &						DATE(1:2),
     &						DIVIDER)
C
C .......................................................................
C And Time
C
	ELSEIF (TYPE.EQ.ACD_DATATYPE_T) THEN
C
C There is no time format in NTF so output as a string
C
	   RLEN = EXPAND('%WS%P0%S2%DT%A1',VALUE,NTF_ATT_NAME(ATNO),
     &					   ANINT,DIVIDER)
C
C ....................................................................
C Text string
C
	ELSEIF (TYPE.EQ.ACD_DATATYPE_C .OR. TYPE.EQ.ACD_DATATYPE_TX) THEN
	   RLEN = EXPAND('%WS% %S2%S4%A1', VALUE,
     &					CITF_DEF_ATT(CITF_IND),
     &					CHARINT(1:4),
     &					DIVIDER)
C
	ENDIF
C
	GOTO 800		! Create ATTREC
C
C .......................................................................
C Not in default AC block
C Read the value
C 
200	CONTINUE
C
C Integer
C
	IF (ATTR_TRANS(ATNO).EQ.ACD_DATATYPE_I) THEN	
	   IF (ANINT.EQ.0 .OR. ANINT.EQ.IFF_ABSENT) THEN
	      RLEN = EXPAND('%WS%P0%S2%S11%A1',VALUE,NTF_ATT_NAME(ATNO),
     &				NODATA(ATTR_TRANS(ATNO)),DIVIDER)
	   ELSE
	      RLEN = EXPAND('%WS%P0%S2%I11%A1',VALUE,NTF_ATT_NAME(ATNO),
     &		   				ANINT,DIVIDER)
	   ENDIF
C .......................................................................
C Real
C
	ELSEIF (ATTR_TRANS(ATNO).EQ.ACD_DATATYPE_R) THEN
	   ANINT = NINT(REALINT*1000)	! Convert from R12.3 to an integer
					! NB the ATTDESC tells how to get back
C
	   IF (ANINT.EQ.0 .OR. ANINT.EQ.IFF_ABSENT) THEN
	      RLEN = EXPAND('%WS%P0%S2%S12%A1',VALUE,NTF_ATT_NAME(ATNO),
     &				NODATA(ATTR_TRANS(ATNO)),DIVIDER)
	   ELSE
	      RLEN = EXPAND('%WS%P0%S2%I12%A1', VALUE,NTF_ATT_NAME(ATNO),
     &						ANINT,DIVIDER)
	   ENDIF
C
C .......................................................................
C Date
C
	ELSEIF (ATTR_TRANS(ATNO).EQ.ACD_DATATYPE_D) THEN
C
C Check for unset
C
	   IF (ANINT.EQ.0 .OR. ANINT.EQ.IFF_ABSENT) THEN
	      RLEN = EXPAND('%WS%P0%S2%S8%A1',VALUE,NTF_ATT_NAME(ATNO),
     &						'00000000',DIVIDER)
	      GOTO 800
	   ENDIF
C
C The date needs some converting, it comes as an integer...
C
	   CALL EXPAND('%WS%P0%DD',DATE,ANINT)
C
C ...which has now been expanded into the form dd-mmm-yyyy, but NTF 
C wants yyyymmdd
C
C First translate the month from chars (e.g. 'APR') into integer (04)
C
	   DO 201 J=1,12		! Check which month
	      IF (DATE(4:6).EQ.MONTHS(J)) THEN
	         MONTH = J  
		 GOTO 203
	      ENDIF
201	   CONTINUE
C
203	   IF (DATE(1:1).EQ.' ') DATE(1:1) = '0'
C
C Then re-write the date in the new order
C
	   RLEN = EXPAND('%WS%P0%S2%S4%I2%S2%A1',VALUE,
     &						NTF_ATT_NAME(ATNO),
     &						DATE(8:11),
     &						MONTH,
     &						DATE(1:2),
     &						DIVIDER)
C
C .......................................................................
C And Time
C
	ELSEIF (ATTR_TRANS(ATNO).EQ.ACD_DATATYPE_T) THEN
C
C There is no time format in NTF so output as a string
C
	   RLEN = EXPAND('%WS%P0%S2%DT%A1',VALUE,NTF_ATT_NAME(ATNO),
     &					   ANINT,DIVIDER)
C
C .......................................................................
C Character
C
	ELSEIF (ATTR_TRANS(ATNO).EQ.ACD_DATATYPE_C.OR.
     &	        ATTR_TRANS(ATNO).EQ.ACD_DATATYPE_TX) THEN
	   IF (ANINT.EQ.0 .OR. ANINT.EQ.IFF_ABSENT) THEN
	      RLEN = EXPAND('%WS%P0%S2%S4%A1',VALUE,NTF_ATT_NAME(ATNO),
     &				NODATA(ATTR_TRANS(ATNO)),DIVIDER)
	   ELSE
	      RLEN = EXPAND('%WS%P0%S2%A4%A1',VALUE,NTF_ATT_NAME(ATNO),
     &					      ANINT,DIVIDER)
	   ENDIF
	ENDIF
C .......................................................................
C We have built the fields we want to add 
C
800	CONTINUE
C
	SUCCESS = .TRUE.
	LENVAL = RLEN
C.........................................................................
C
999	RETURN
	END
C
