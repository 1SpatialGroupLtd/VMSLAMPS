	LOGICAL FUNCTION FEATURE(FCOUNT)
C
C
C	Copyright Laser-Scan Ltd, Cambridge, England
C
C	Author			                             IM	27-Apr-1987
C	Modified	                               	    TJI  1-Oct-1987
CMOD	For CITF		                             JB	 1-Oct-1992
CMOD    Implement CITF96 changes (WI/CC 1545)               TJM 20-May-1996
CMOD    Fix CITF96 FC limit to 9999 (WI/CC 1545)            PGH  6-Jun-1996
C
C Writes out an IFF feature. In NTF these are LINEREC,POINTREC,GEO_2D
C GEO_3D,NAMEREC,NAMEPOS and ANCIL. Additionally, for level 3 there are
C CHAIN,CLINE and NODEREC.
C
C Returns TRUE for successful completion, otherwise FALSE
C
	IMPLICIT NONE
C
C Commons:
	INCLUDE	'LSL$CMNLSL:FILENAME.CMN'
	INCLUDE	'HERE:FILENAME.CMN'
	INCLUDE	'HERE:ATTRIBUTE.CMN'
	INCLUDE 'HERE:COMMANDS.CMN'
	INCLUDE	'HERE:FTRCMN.CMN'
	INCLUDE	'HERE:LOOKUP.CMN'
C
C Message numbers:
	INCLUDE 'HERE:I2NTFMSG.PAR'
C
C Functions:
	INTEGER		IFFNXT		!  Finds the next IFF entry
	INTEGER 	POINT		!  Output lines & points
	INTEGER 	TEXT		!  Output text
	INTEGER 	CITF_POINT	!  Output lines & points
	INTEGER 	CITF_TEXT	!  Output text
	INTEGER		LIB$EXTV	!  Extract bit field
C
C Argument:
	INTEGER 	FCOUNT		!  Map index
C
C Workspace:
	INTEGER 	OK		!  Success flag
	INTEGER		REV
	INTEGER*2 	IECODE		!  Code of next IFF feature
	INTEGER*2 	IELEN		!  Length of next IFF feature
	INTEGER*2 	FSARR(3)	!  Contents of FS
	INTEGER*2 	DST(2)		!  Temp. storage of fsn & isn
	LOGICAL		IS_LINE		!  Well, is it?
C
C Initialise
	OK=.TRUE.
C  .......................................................................
C Initialise fields
C
	UPDATE_DATE	= '00000000'
	UPDATE_STATUS	= ' '
	MARGINAL_TXT	= 'N'
	PHYS_STAT	= ' '
	PROCESS		= ' '
	DATE_OF_PROCESS = ' '
	SPEC		= ' '
	LEN_SPEC 	= 0
C
C Read NF entry. SECTION has already pointed us to it
C
	CALL EIHRI(DST,2,1)
C
	FSN=DST(1)	!  FSN is used for most purposes as it is assumed
	ISN=DST(2)	!  unique but ISN is also used in error messages
C  .......................................................................
C Look for FS which should be the next entry. If not then error
C
	CALL IFFNXT(IECODE,IELEN)
	IF (IECODE.NE.'FS') THEN
	   CALL LSL_PUTMSG(I2NTF__BADFEAT,FSN,ISN)
	   CALL LSL_ADDMSG(I2NTF__NOFS,INFILE(FCOUNT)(:INLEN(FCOUNT)))
	   OK=.FALSE.
	   GOTO 999
	ENDIF
C
C Read the FS entry, and translate NTF FC if needed
C
	CALL EIHRI(FSARR,3,1)
	FC = FSARR(1)				! Feature code
	NTF_FC = FC
	IF (HAD_FC_LOOKUP)			! Translate if needed
     &	    CALL FC_TRANS(%VAL(LUT_BASE_ADDR), FC, NTF_FC)
C
C Limit to 9999 for NTF and early CITF. CITF96 allows 8 digits worth!
C
	IF ((NTF_FC.GT.9999).AND.(.NOT.HAD_CITF96)) THEN
	    IF (NTF_FC.EQ.FC) THEN		! Has FC been translated?
		CALL LSL_PUTMSG(I2NTF__FCTOOLARGE,FC,FSN,ISN)
	    ELSE
		CALL LSL_PUTMSG(I2NTF__NTFFCTOOLRG,NTF_FC,FSN,ISN)
	    ENDIF
	    FC = 0				! Reset both FCs
	    NTF_FC = 0				! to zero
	ENDIF
C
	IF (FC.NE.28) THEN
	   NFC(FC,1) = NFC(FC,1) + 1 		! Count it
C
	   IF (NFC(FC,2).EQ.0) THEN 		! Haven't seen this FC before
	      NDIFF_FC = NDIFF_FC + 1 		! Count no of different FC's
	      IFC(NDIFF_FC) = FC 		! Different FC, store it
	      NFC(FC,2) = 1			! Mark is as seen
	   ENDIF
	ENDIF
C
C Bits 14 and 15 are set to 10 if it is a text feature
C
	IF ((FSARR(3).AND.'C000'X).EQ.'8000'X) THEN
	   IF (HAD_CITF93.OR.HAD_CITF96) THEN
	      OK=CITF_TEXT(FSARR(3))
	   ELSE
	      OK=TEXT(FSARR(3))
	   ENDIF
C
	   IF (.NOT.OK) GOTO 999
	ELSE 					! Otherwise point or line
	   IS_LINE = (FSARR(3).AND.'C000'X).EQ.0
	   IF (IS_LINE) THEN
	      REV = LIB$EXTV(2,1,FSARR(2))	! Get the line direction
	      IF (REV.EQ.0) THEN		! Convert it to the form 
	         DIR = 1			! needed in NTF
	      ELSE
	         DIR = 2
	      ENDIF
	   ENDIF
C
	   IF (HAD_CITF93.OR.HAD_CITF96) THEN
	      OK=CITF_POINT(IS_LINE)
	   ELSE
	      OK=POINT(IS_LINE)
	   ENDIF
C
	   IF (.NOT.OK) GOTO 999
	ENDIF
C  .......................................................................
C
	OK=.TRUE.
C
999	FEATURE=OK
	RETURN
	END	   
C
