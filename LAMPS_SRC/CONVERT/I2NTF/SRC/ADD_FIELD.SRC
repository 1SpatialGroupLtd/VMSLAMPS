C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1995-03-31 15:07:16.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL FUNCTION ADD_FIELD(STRING,LENGTH,FIELD,WIDTH,SPLITTABLE)
C
***     MODULE ADD_FIELD
***     IDENT	31MR95
C
C	Copyright Laser-Scan Ltd, Cambridge, England
C
C	Author					 ST	28-Mar-1995
C
C Routine to append a field to STRING(1:LENGTH) (written to append attributes
C to ATTRECs but could be used for any records) and takes into account the
C remaining space on the line, which if not sufficient will result in a
C continuation line. The fields could be anything (eg `FC', `\' or
C `Sydney Street'. It also takes into account whether the field can be
C split over a physical record or must remain whole. Mod 1482.
C
	IMPLICIT NONE
C
C Arguments:
C
	CHARACTER*80	STRING		! The destination string
	INTEGER*2	LENGTH		! The length of the above
	CHARACTER*80	FIELD		! The field we're adding
	INTEGER*2	WIDTH		! The length of the above
	LOGICAL 	SPLITTABLE	! Can the field be split?
C
C Workspace:
C
	INTEGER		CPOS,P
	INTEGER 	OK		!  Function return
	INTEGER		MAXLEN
C ........................................................................
C
	MAXLEN = 79
C
C See if the whole field will fit on the remainder of the line
C
	IF (LENGTH+WIDTH.LE.MAXLEN) THEN
	   CALL EXPAND('%WS% %S',STRING(LENGTH:LENGTH+WIDTH),FIELD(1:WIDTH))
	   LENGTH = LENGTH + WIDTH
	ELSE
C
C Nope. If the field cannot be split, start a new line
C
	   IF (.NOT.SPLITTABLE) THEN
	      CALL EXPAND('%WS% 1',STRING(LENGTH:LENGTH))
	      LENGTH = LENGTH + 1
	      CALL WSTR( STRING,LENGTH )
	      LENGTH = 1
	      CALL EXPAND('%WS% 00%S',
     &		   STRING(LENGTH:1+LENGTH+WIDTH),FIELD(1:WIDTH))
	      LENGTH = 2 + WIDTH + 1
	   ELSE
C
C The field is splittable so write as much as we can on the remainder
C of the line and the rest on a new line.
C
	      P = MAXLEN - LENGTH
	      IF (P.LE.0) THEN
		 CALL EXPAND('%WS% 1',STRING(LENGTH:LENGTH))
		 LENGTH = LENGTH + 1
	      ELSE
		 CALL EXPAND('%WS% %S% 1',STRING(LENGTH:LENGTH+P+1),
     &		      FIELD(1:P))
		 LENGTH = LENGTH + P + 1
	      ENDIF
	      CALL WSTR( STRING,LENGTH )
	      LENGTH = 1
	      CALL EXPAND('%WS% 00%S',
     &		   STRING(LENGTH:1+LENGTH+WIDTH-P),FIELD(P+1:WIDTH))
	      LENGTH = LENGTH + 2 + WIDTH - P
	   ENDIF
	ENDIF
C
C Success
C
	OK = .TRUE.
C
999	ADD_FIELD = OK
	RETURN
	END
C
