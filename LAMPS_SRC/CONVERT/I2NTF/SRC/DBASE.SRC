C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1996-05-21 16:00:06.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL FUNCTION DBASE(FID,NMAPS)
C
***     MODULE DBASE
***     IDENT	20MY96
C
C	Copyright Laser-Scan Ltd, Cambridge, England
C
C	Author						 IM	27-Apr-1987
C	Modified					TJI	 1-Oct-1987
C
C	Modified for v 1.1				IMcL	02-Aug-1989
C	Output featclass records if required		VLG	09-Jun-1990
CMOD	Transfer FEATCLASS to SECTION for CITF		 JB	27-Nov-1992
CMOD	Always output ATTDESC records for FC and OR	 ST	18-Jan-1994
C	attributes at version 2.0, level 3. Mod 1331 
CMOD    Implement CITF96 changes (WI/CC 1545)           TJM     20-May-1996
C
C Output records at and below database level
C Returns TRUE for successful completion, otherwise FALSE
C
	IMPLICIT NONE
C
C Arguments:
	INTEGER		NMAPS		!  Number of IFF files
	INTEGER		FID(7,NMAPS)	!  File ids for them
C
C Commons
	INCLUDE		'HERE:COMMANDS.CMN'	! Users options
C
C Function:
	INTEGER 	ATTDESC		!  Writes out the attribute description
	INTEGER 	FEATCLASS	!  Writes out the featclass records
	INTEGER 	SECTION		!  Writes out the section
C
C Workspace:
	INTEGER 	COUNT		!  Index
	INTEGER 	OK		!  Success flag
	CHARACTER*80	STRING		!  String to be output
	INTEGER*2	LENGTH		!  of OUTSTR
C
C ................................................................ 
C First write the Database Header Record. 
C		NB Data Dictionary not used
C
	CALL DBHREC
C
	HAD_FEATCLS = .FALSE.
C ................................................................
C Read the featclass file (if any) and output FEATCLASS records
C Transfer the FEATCLASS output to SECTION for CITF to cope with
C the possibility of the records being in the map header
C
	IF (HAD_CITF93.OR.HAD_CITF96) THEN
C
C Only do the attributes, and leave FEATCLASS till SECTION
C If we are transfering attributes then set up the attribute 
C descriptor record
C
	   IF (HAD_ATTRIBUTE) THEN
	      OK = ATTDESC()
	      IF (.NOT.OK) GOTO 999
	   ENDIF
C
	ELSE
	   IF (HAD_FEATCLASS) THEN 
	      OK = FEATCLASS()
	      IF (.NOT.OK) GOTO 999
C
	      HAD_FEATCLS = .TRUE.
	   ENDIF
C ................................................................
C If we are transfering attributes then set up the attribute 
C descriptor record
C
C At version 2.0, level 3, we should always output an ATTDESC for FC and OR
C
	   IF (VERSION.EQ.2.0 .AND. LEVEL.EQ.3) THEN
	      LENGTH = 24
	      STRING(1:LENGTH) = '40FC004A4   FEAT_CODE\0 '
	      CALL WSTR (STRING,LENGTH)
	      LENGTH = 26
	      STRING(1:LENGTH) = '40OR006R6,3 ORIENTATION\0 '
	      CALL WSTR (STRING,LENGTH)
	   ENDIF
C
	   IF (HAD_ATTRIBUTE) THEN
	      OK = ATTDESC()
	      IF (.NOT.OK) GOTO 999
	   ENDIF
	ENDIF
C ................................................................
C For each input file write out the section (map).
C
	DO 10 COUNT=1,NMAPS
	   OK = SECTION(COUNT,FID(1,COUNT))
	   IF (.NOT.OK) GOTO 999
10	CONTINUE
C ................................................................
	OK = .TRUE.
C
999	DBASE = OK
	RETURN
	END
C
