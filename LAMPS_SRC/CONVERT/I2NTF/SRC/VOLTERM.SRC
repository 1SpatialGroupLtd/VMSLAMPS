C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1996-11-18 13:26:14.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE VOLTERM
C
***     MODULE VOLTERM
***     IDENT	18NO96
C
C	Copyright Laser-Scan Ltd, Cambridge, England
C	Author					  IM	27-Apr-1987
c
C	Modified				 TJI	29-Sep-1987
C	Modified for variable length records	IMcL	27-Jul-1989
CMOD	Add SUMMREC and record counts for CITF    JB	21-Dec-1992
CMOD1301Add ACRDREC count			  JB	05-Oct-1993
CMOD    Implement CITF96 changes (WI/CC 1545)    TJM    20-May-1996
C
C Volume termination record
C
	IMPLICIT NONE
C
	INCLUDE 'CMN:FTRCMN.CMN'
	INCLUDE 'CMN:CITFATTS.CMN'
	INCLUDE 'CMN:COMMANDS.CMN'
	INCLUDE 'CMN:LOOKUP.CMN'
C
C Workspace:
	CHARACTER*80 	STRING		!  Contains record to be output
	INTEGER*2	LENGTH		!  of STRING
	INTEGER		I,THIS_FC
	INTEGER		THIS_NTF_FC	! THIS_FC translated by FC lookup table
	INTEGER		CPOS,STEP
C
	CHARACTER*8	TMPSTORE
C .....................................................................
C Write out the feature code counts in SUMMREC
C
	IF (HAD_CITF93.OR.HAD_CITF96) THEN
	   IF (NDIFF_FC.EQ.0) GOTO 100
C
C May need to clean up count table (NFC) if /FC_LOOKUP specified.
C
	   IF (HAD_FC_LOOKUP) CALL CLEAN_UP_NFC(%VAL(LUT_BASE_ADDR))
C
	   CALL EXPAND('%WS% 82% ',STRING)
	   CPOS = 3
C
	   DO 5 I=1,NDIFF_FC			! For each different FC
	    IF (IFC(I).GE.0) THEN		! If entry not to be ignored
C						  (See CLEAN_UP_NFC)
	      THIS_FC = IFC(I)
	      THIS_NTF_FC = THIS_FC
	      IF (HAD_FC_LOOKUP) CALL FC_TRANS(%VAL(LUT_BASE_ADDR),
     &		THIS_FC, THIS_NTF_FC)		! Translate if needed
	      IF (THIS_FC.EQ.0 .AND. THIS_NTF_FC.GT.9999)
     &		THIS_NTF_FC = 0
	      IF (THIS_NTF_FC.EQ.28 .AND. (HAD_CITF93.OR.HAD_CITF96
     &		.OR.(OS_DATA .AND. LEVEL.LT.3))) GOTO 5
C
C Do the feature code
C
	      IF (HAD_CITF93) THEN
	        STEP = 4
	        WRITE(TMPSTORE,'(I4)') THIS_NTF_FC
	      ELSEIF (HAD_CITF96) THEN
	        STEP = 8
	        WRITE(TMPSTORE,'(I8)') THIS_NTF_FC
	      ENDIF
C
C Check if it will fit
C
	      IF (CPOS+STEP.GE.80) THEN
		 STRING(CPOS:CPOS) = '1'
		 LENGTH = CPOS + 1
		 CALL WSTR(STRING,LENGTH)
	         CALL EXPAND('%WS% 00',STRING)
		 CPOS = 3
	      ENDIF
C
	      STRING(CPOS:CPOS+STEP) = TMPSTORE(1:STEP)
	      CPOS = CPOS + STEP
C
C Do the count
C
	      STEP = 5
	      WRITE(TMPSTORE,'(I5)') NFC(THIS_FC,1)
C
C Will it fit?
C
	      IF (CPOS+STEP.GE.80) THEN
		 STRING(CPOS:CPOS) = '1'
		 LENGTH = CPOS + 1
		 CALL WSTR(STRING,LENGTH)
	         CALL EXPAND('%WS% 00',STRING)
		 CPOS = 3
	      ENDIF
C
	      STRING(CPOS:CPOS+STEP) = TMPSTORE(1:STEP)
	      CPOS = CPOS + STEP
C
	    ENDIF
5	   CONTINUE
C
	   STRING(CPOS:CPOS) = '0'
C
	   LENGTH = CPOS + 1
	   CALL WSTR(STRING,LENGTH)
C
C VOLTERM record
C
100	   CALL EXPAND('%WS% 99%I5%I5%I5%I5%I5%I5%I5%I5%I5%I5%I5%S8% 0', 
     &					STRING,
     &					NO_LINEREC,
     &					NO_POINTREC,
     &					NO_NAMEREC,
     &					NO_NODE,
     &					NO_ATTREC,
     &					NO_ACRDREC,
     &					NO_AREA,
     &					NO_EDGE,
     &					NO_CHAIN,
     &					NO_FACE,
     &					NO_COLLECT,
     &					CRC_FIGURE)
C
	   LENGTH = 67
	   CALL WSTR(STRING,LENGTH)
C
	ELSE
	   CALL EXPAND('%WS% 99End of volume 0',STRING)
C
	   LENGTH = 18
	   CALL WSTR(STRING,LENGTH)
	ENDIF
C
	RETURN
	END
C
