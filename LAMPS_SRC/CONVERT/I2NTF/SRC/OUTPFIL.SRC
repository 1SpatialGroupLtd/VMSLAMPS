C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1996-05-21 15:59:54.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL FUNCTION OUTPFIL
C
***     MODULE OUTPFIL
***     IDENT  20MY96
C
C	Copyright Laser-Scan Ltd, Cambridge, England
C	Author 				                     IM	27-Apr-1987
c
C	Modified			                    TJI	01-Oct-1987
C	Modified		                    	    VLG	06-Jun-1990
CMOD	Extend for CITF 		                     JB	17-Nov-1992
CMOD    Implement CITF96 changes (WI/CC 1545)               TJM 20-May-1996
C
	IMPLICIT NONE
C 
C Common:
	INCLUDE	'LSL$CMNLSL:FILENAME.CMN'
	INCLUDE 'HERE:COMMANDS.CMN'
	INCLUDE	'HERE:FILENAME.CMN'
	INCLUDE	'HERE:LUNS.PAR'
C
C Messages:
	INCLUDE 'HERE:I2NTFMSG.PAR'
C
C Functions:
	INTEGER 	FLWOPN		!  Create & open file for write
	INTEGER 	LOG_OPEN	!  Opens log file with header
C
C Workspace:
	LOGICAL 	OK		!  Function return
	CHARACTER*80	LSTRING		!  Temp. string for output
C .....................................................................
C Open up log file
C
	OK = LOG_OPEN(LOGLUN,LOGFIL(1:LOGFLEN),LOG)
	IF (.NOT.OK) THEN
	   LOGLUNOP = .FALSE.
	   CALL LSL_PUTMSG(I2NTF__OPENERR,LOGFIL(1:LOGFLEN))
	   CALL LSL_ADDMSG(OK)
	   GOTO 999
	ENDIF
C
C Set flag to show file open
	LOGLUNOP = .TRUE.
C
C Output the set options
	CALL FLWSTR(' ')
	IF (HAD_CITF93.OR.HAD_CITF96) THEN
	   CALL EXPAND('%WS% CITF Version 1.0, based on NTF level %I1//
     &		, version 2.0',LSTRING,LEVEL)
	ELSE
	   CALL EXPAND('%WS% NTF level %I1',LSTRING,LEVEL)
	ENDIF
	CALL FLWSTR(LSTRING)
C
	CALL EXPAND('%WS% Recipient of data is "%S20"',LSTRING,RECIP)
	CALL FLWSTR(LSTRING)
	CALL EXPAND('%WS% Donor of data is     "%S20"',LSTRING,DONOR)
	CALL FLWSTR(LSTRING)
	CALL EXPAND('%WS% Database name is  "%S20"',LSTRING,DBNAME)
	CALL FLWSTR(LSTRING)
	CALL EXPAND('%WS% Data dictionary name is  "%S20"',LSTRING,DDNAME)
	CALL FLWSTR(LSTRING)
	CALL EXPAND('%WS% Data dictionary date is  "%S8"',LSTRING,DDATE)
	CALL FLWSTR(LSTRING)
	CALL EXPAND('%WS% Feature classification scheme is "%S20"',LSTRING,
     &							FCNAME)
	CALL FLWSTR(LSTRING)
	CALL EXPAND('%WS% Feature classification scheme date is "%S8"',
     &					LSTRING,FCDATE)
	CALL FLWSTR(LSTRING)
	CALL EXPAND('%WS% NTF output to %S',LSTRING,OUTFILE(1:OUTLEN))
	CALL FLWSTR(LSTRING)
C
	IF ( IS_MAGTAPE.OR.SERIAL_MAG ) THEN
	   CALL EXPAND('%WS% Output to magnetic tape at density %I4',
     &			LSTRING,DENSITY)
	   CALL FLWSTR(LSTRING)
	ENDIF
C
	IF (OS_DATA) CALL FLWSTR
     &		('Extra OS header information is being output')
C
	IF (HAD_CITF93.OR.HAD_CITF96) CALL FLWSTR
     &		('Extra CITF header information is being output')
C
	IF (WATER_DISTRIB) CALL FLWSTR
     &		('Output is as required for water distribution overlays')
	CALL FLWSTR(' ')
C
999	OUTPFIL=OK
	RETURN	   
	END
C
