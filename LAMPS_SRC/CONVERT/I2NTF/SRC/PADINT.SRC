	CHARACTER*(*) FUNCTION PADINT(IN_INT,LEN)
C
***     MODULE PADINT
***     IDENT	21MY93
C
C	Copyright Laser-Scan Ltd, Cambridge, England
C	Author						 ST	21-May-1993
C
C       The FORTRAN FORMAT statement does not allow padding with leading 
C       zeros and EXPAND can't cope with variable width integer fields so
C       this routine does the next best thing.
C       It produces a left-justified, zero-padded, len-wide ascii expansion
C       of IN_INT with -ve sign placed in front of leading zeros.
C
	IMPLICIT NONE
C
C Common:
C
	INCLUDE 'COMMANDS.CMN'
C
C Arguments:
C
	INTEGER*4 	IN_INT		! the input integer
	INTEGER*4	LEN		! the field width required
C
C Workspace:
C
	CHARACTER*(MAX_XY_LEN)	TMP	! temporary string. This is 20 because
C       				! MAX_XY_LEN (in GEOMETRY) is 20.
C .........................................................................
C
	CALL EXPAND('%WS%P0%I20',TMP,ABS(IN_INT))
	TMP = TMP(MAX_XY_LEN-LEN+1:MAX_XY_LEN)
	IF (IN_INT.LT.0) TMP(1:1)='-'
	PADINT = TMP
C
	RETURN
	END
