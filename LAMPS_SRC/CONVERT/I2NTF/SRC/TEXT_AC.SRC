	SUBROUTINE TEXT_AC(VALUE,SUCCESS,IELEN)
C
***     MODULE TEXT_AC
***     IDENT	24MY93
C
C	Copyright Laser-Scan Ltd, Cambridge, England
C
C	Author						VLG	21-Mar-1990
CMOD	Add IELEN argument				VLG	21-Jun-1990
CMOD	BS7567 (v2.0) support added (W93/12)		 ST	24-May-1993
C
C  Process an AC entry in a text feature. If the AC has had its ANNOTATE 
C  flag set in the attribute file (which implies that the text is to be 
C  used to annotate a line feature), returns the value of the AC.
C
	IMPLICIT NONE
C
C Arguments:
	CHARACTER*72	VALUE		! AC value	
	LOGICAL		SUCCESS		! True if a value is obtained
	INTEGER*2	IELEN		! Length of IFF AC entry
C
C Common:
	INCLUDE 	'LSL$CMNFRT:FRTCOM.CMN'	! general FRT stuff
	INCLUDE 	'LSL$CMNFRT:FRTACD.CMN'	! default attribute info
	INCLUDE 	'ATTRIBUTE.CMN'		! Att. desc. table
	INCLUDE		'FTRCMN.CMN'
C
C Functions:
	INTEGER*2	EXPAND
C
C Workspace:
	INTEGER*2	I
	INTEGER*2	ATNO		! Pointer to the attribute table
	INTEGER*2	ACTYPE		! Type of AC
	INTEGER*4	LCODE		! Value ( interpretation depends
					!         on the AC type )
C
	INTEGER*2	RDARR(3)	! Temp storage for ACTYPE,LCODE
	EQUIVALENCE	(ACTYPE, RDARR(1))
	EQUIVALENCE	(LCODE , RDARR(2))
C
	REAL		R_VALUE		! Separate storage for LCODE so
					! we can convert to integer
	EQUIVALENCE	(LCODE,R_VALUE)
C
	BYTE		TEXT(80)	! Optional text string
	CHARACTER*80	CTEXT		! character version
	EQUIVALENCE	(TEXT,CTEXT)
C
	INTEGER*2	RLEN		! Length of VALUE
C
	INTEGER*4	MONTH		! for date AC's
C
	CHARACTER*12	DATE		! Temp storage
C
	INTEGER*2	LENGTH		! of TEXT
	CHARACTER*3	MONTHS(12)	! JAN, FEB,...,DEC
C
	DATA MONTHS /	'JAN','FEB','MAR','APR','MAY','JUN',
     &			'JUL','AUG','SEP','OCT','NOV','DEC' /
C
C.........................................................................
C
	SUCCESS = .TRUE.
C
C Get the attribute code ( type )
C
	CALL EIHRI ( RDARR, 3,1 )
C .........................................................................
C First see if its an attribute number we know something about
C
	ATNO = 0	! Start at the beginning
C
	DO 150 I=ATNO+1,ATTR_PTR
	   IF (ACTYPE.EQ.IFF_ATT_NUM(I)) THEN
	      ATNO = I
	      GOTO 151
	   ENDIF
150	CONTINUE
C
	SUCCESS = .FALSE.
C
	GOTO 999		! It ain't
C .......................................................................
C Then see if the attribute has its ANNOTATE flag set
C
151	IF (.NOT.IFF_ANNOTATE(ATNO)) THEN
	   SUCCESS = .FALSE.
	   GOTO 999
	ENDIF
C
C Flag is set so return the AC value
C
C Integer
C
	IF (ATTR_TRANS(ATNO).EQ.ACD_DATATYPE_I) THEN	
C	   RLEN = EXPAND('%WS%S2%I11%A1',VALUE,NTF_ATT_NAME(ATNO),
	   RLEN = EXPAND('%WS%S2%P0%I11%A1',VALUE,NTF_ATT_NAME(ATNO),
     &						LCODE,DIVIDER)
C
C Real
C
	ELSEIF (ATTR_TRANS(ATNO).EQ.ACD_DATATYPE_R) THEN
	   LCODE = NINT(R_VALUE*1000)	! Convert from R12.3 to an integer
					! NB the ATTDESC tells how to get back
C	   RLEN = EXPAND('%WS%S2%I12%A1',VALUE,NTF_ATT_NAME(ATNO),
	   RLEN = EXPAND('%WS%S2%P0%I12%A1',VALUE,NTF_ATT_NAME(ATNO),
     &						LCODE,DIVIDER)
C
C Character
C
	ELSEIF (ATTR_TRANS(ATNO).EQ.ACD_DATATYPE_C) THEN
	   RLEN = EXPAND('%WS%S2%A4%A1',VALUE,NTF_ATT_NAME(ATNO),
     &						LCODE,DIVIDER)
C
C Date
C
	ELSEIF (ATTR_TRANS(ATNO).EQ.ACD_DATATYPE_D) THEN
C
C The date needs some converting, it comes as an integer...
C
	   CALL EXPAND('%WS%DD',DATE,LCODE)
C
C ...which has now been expanded into the form dd-mmm-yyyy, but NTF 
C wants yyymmdd
C
C First translate the month from chars (e.g. 'APR') into integer (03)
C
	   DO 101 I=1,12			! Check which month
	      IF (DATE(4:6).EQ.MONTHS(I)) THEN
	         MONTH = I  
		 GOTO 103
	      ENDIF
101	   CONTINUE
C
103	   IF (DATE(1:1).EQ.' ') DATE(1:1) = '0'
C
C Then re-write the date in the new order
C
C	   RLEN = EXPAND('%WS%S2%S4%I2%S2%A1',	VALUE,
	   RLEN = EXPAND('%WS%S2%S4%I2%S2%A1',	VALUE,
     &						NTF_ATT_NAME(ATNO),
     &						DATE(8:11),
     &						MONTH,
     &						DATE(1:2),
     &						DIVIDER)
C
C And Time
C
	ELSEIF (ATTR_TRANS(ATNO).EQ.ACD_DATATYPE_T) THEN
C
C There is no time format in NTF so output as a string
C
	   RLEN = EXPAND('%WS%S2%DT%A1',	VALUE, 	NTF_ATT_NAME(ATNO),
     &						LCODE,DIVIDER)
C ....................................................................
C Optional text string
C
	ELSEIF (ATTR_TRANS(ATNO).EQ.ACD_DATATYPE_TX) THEN
C
	   DO 410 I=1,80
	      TEXT(I) = ' '
410	   CONTINUE
C
	   RLEN = MIN((IELEN - 3) *2,64)	! Make sure we dont go too far
C
	   IF (RLEN .GT. 0) THEN
	      CALL EIHRI(TEXT,IELEN-3,4)
C
C and adjust the length if we have an odd number of characters
C
	      IF (TEXT(RLEN) .EQ. 0) THEN
	         TEXT(RLEN) = ' '
	         RLEN = RLEN - 1
	      ENDIF
C
C otherwise make the text a blank
C
	   ELSE
	      RLEN = 1
	   ENDIF
C
C build the field
C
	   RLEN = EXPAND('%WS% %P0%S2%S%A1',VALUE,NTF_ATT_NAME(ATNO)
     &					,CTEXT(:RLEN),DIVIDER)
C
	ENDIF
C
C.........................................................................
C
999	RETURN
	END
C
