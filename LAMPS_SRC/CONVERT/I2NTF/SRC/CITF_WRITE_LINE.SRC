C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1993-10-06 13:56:26.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL FUNCTION CITF_WRITE_LINE(CBCOUNT,TOTPTS,IS_LINE,XYZ)
C
***     MODULE CITF_WRITE_LINE
***     IDENT	06OC93
C
C	Copyright Laser-Scan Ltd, Cambridge, England
C	Author						VLG	22-Feb-1990
C
CMOD	Created  from WRITE_LINE for CITF		 JB	03-Dec-1992
CMOD1240Fix for [GEOMETRY1/2] problem			 ST	18-Jun-1993
CMOD1301Store NUM_ACRDRECS in NO_ACRDREC		 JB	06-Oct-1993
C
C Read CB entries and output a GEOMETRY record
C
C Returns TRUE if successful
C
	IMPLICIT NONE
C
C Commons:
	INCLUDE	'LSL$CMNIFF:CB.STR'	! for CB
	INCLUDE	'LSL$CMNIFF:IFFSTR.CMN'	! for CB
	INCLUDE	'CMN:CITFATTS.CMN'	! for ACRDRECs
	INCLUDE	'CMN:FTRCMN.CMN'	! for ACRDRECs
C
C Arguments:
	INTEGER 	CBCOUNT		!  CB counter
	INTEGER		TOTPTS		!  Total points in all CB's
	LOGICAL		IS_LINE		!  TRUE if data is a line
	LOGICAL		XYZ		!  TRUE if [GEOMETRY2] record
C
C Function:
	LOGICAL		CITF_GEOMETRY
	INTEGER*2	EXPAND
C
C Workspace:
	LOGICAL		OK
	INTEGER 	COUNT		!  Index
	INTEGER*4	NPTS		!  No of points in ST/ZS
	INTEGER*2	IENDS		!  Pen up/down flag
	INTEGER*2 	IELEN		!  Length of record
	INTEGER 	DIMENSION	!  No of cols in CB
	INTEGER*4	L,I,J,N
	CHARACTER*80	STRING		! NTF output record
	SAVE		STRING		! Remember it over calls of STRING
	INTEGER*2	LENGTH
C
	RECORD /IFF_CBH/ CBH
	RECORD /IFF_CBD/ CBD
C  ...................................................................
C
	OK = .FALSE.
	NUM_ACRDRECS = 0
C
C Count the CB's
C
	DO 10 COUNT=1,CBCOUNT
C
C Find a CB
	   CALL IFFNXC('CB',IELEN)
C
C Get the number of points
C
	   CALL EIHRCB_HEAD(CBH)
	   IF (.NOT.IS_LINE) CBH.NROW = 1
	   NPTS      = CBH.NROW
	   DIMENSION = CBH.NCOL
C
C ...and the points themselves
C
	   CALL EIHRCB_DATA(CBD)
C
C Now write to the GEOMETRY record
C
	   OK = CITF_GEOMETRY(DIMENSION,TOTPTS,NPTS,CBH,CBD.R,CBD.I,CBD.C,
     &			      IS_LINE,.FALSE.,COUNT.EQ.1,COUNT.EQ.CBCOUNT,XYZ)
	   IF (.NOT.OK) GOTO 999
C
10	CONTINUE	
C
	IF (NUM_ACRDRECS.GT.0) THEN
	   DO 300 I = 1,NUM_ACRDRECS
	      N = ACRD_NUM_ATTS(I)	 ! make an INTEGER*4 copy of this byte
	      L = 1 + EXPAND('%WS% 85%I4%I2',STRING,I,N)
C
	      DO 200 J = 1, ACRD_NUM_ATTS(I)
		 IF (L + ACRD_LEN(J,I).GT.78) THEN
		    STRING(L:L) = '1'
		    L = L + 1
		    CALL WSTR(STRING,L)
		    L = 1 + EXPAND('%WS% 00',STRING)
		 ENDIF
		 STRING(L:L+ACRD_LEN(J,I))=ACRD_ATTS(J,I)(1:ACRD_LEN(J,I))
		 L = L + ACRD_LEN(J,I)
200	      CONTINUE
C
	      STRING(L:L) = '0'
	      L = L + 1
	      CALL WSTR(STRING,L) 		! write this record
300	   CONTINUE
	ENDIF
C
	NO_ACRDREC = NO_ACRDREC + NUM_ACRDRECS
C
C  ...................................................................
C
	OK = .TRUE.
C
999	CITF_WRITE_LINE = OK
C
	RETURN
	END	   
C
