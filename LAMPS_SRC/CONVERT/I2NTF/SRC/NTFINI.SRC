C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1992-11-13 12:53:20.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL FUNCTION NTFINI( FILNAM )
C
***	MODULE	NTFINI
***	IDENT	13NO92
C
C Copyright Laser-Scan Ltd., Cambridge, England.
C
C Author Paul Hardy (FRTLIB version - FRTINI), 16 June 1984
C Stolen and modified for IFF2SIF by TJ Ibbs, 29 January 1985
C Re-stolen for I2NTF I McLeman 10 June 1987
C Modified by TJ Ibbs, 30 September 1987
C
C Returns TRUE if it succeeds in opening, reading, and closing
C the specified NTF representation file, called FILNAM
C
C The contents of the file are left set up in the common block
C in /COMMANDS/
C
	IMPLICIT NONE
C
C Messages:
	INCLUDE 'HERE:I2NTFMSG.PAR'
	INCLUDE	'LSL$CMNLSL:LSLLIBMSG.PAR'
C
C Commons:
***	COMMON/LSL$CMNLSL:TXTC/
***	COMMON/LSL$CMNLSL:CMDCOM/
***	COMMON/HERE:COMMANDS/
C
***	PARAMETER/HERE:LUNS/
C
C functions:
	INTEGER		FLROPN		! open file for read
	INTEGER		FLRCLO		! close it again
	INTEGER		FLRSTR		! read a line from it
	INTEGER 	OBEY_LINE	! interprets command line
C
C Argument:
	CHARACTER*(*)	FILNAM		! filename
C
C workspace:
	INTEGER		OK		! Function return
	INTEGER		IERR		! Error flag
	INTEGER		I		! DO loop counter
	INTEGER		LINE		! line in cmd file
	INTEGER		CMD		! command number from RDCOMM
	LOGICAL		GIVEUP		! true if to give up file
	BYTE		CHAR		! last-read character
	INTEGER*4	TXLSAV		! save TXTLIM (max no of chars)
	CHARACTER*100	COM_LINE	! The command line to be read
	INTEGER		NCHS		! Number of chars read
C
	INTEGER		 TXTBFS
	PARAMETER	(TXTBFS=132)	! increased TXTBUF size
	CHARACTER*1	 PLING
	PARAMETER	(PLING ='!')	! comment delimitor
C
C extend TXTBUF
	TXLSAV = TXTLIM			! save TXTLIM
	CALL SET_TXTLIM( TXTBFS )	! extend the buffer
C  ...................................................................
C
	NTFINI = .FALSE.		! assume failure
C
C open up the file
C
	OK = FLROPN( CMDLUN, FILNAM, IERR )	! open command file
	IF ( .NOT.OK ) THEN
	   CALL LSL_PUTMSG( I2NTF__OPENERR, FILNAM)
	   CALL LSL_ADDMSG(OK)
	   IF ( OK.EQ.LSL__SYSOPEN ) CALL LSL_ADDMSG(IERR)
	   GOTO 9999
	ELSE IF (LOG) THEN
	   CALL LSL_PUTMSG(I2NTF__PARFILOPN,FILNAM)
	ENDIF
C
C open for business now
C
	LINE = 0			! no lines read yet
	GIVEUP = .FALSE.		! assume don't give up yet
C
C  ...................................................................
C now we read it in, line by line, and obey each line
C
50	LINE = LINE+1				! next line 
	OK = FLRSTR(COM_LINE,NCHS,IERR)		! read into a string
	IF (.NOT.OK) THEN
	   IF (OK.EQ.LSL__EOF) THEN
	      NTFINI = .TRUE.		! presumably success
	   ELSE
	      CALL LSL_PUTMSG( I2NTF__NTFLINE )
	      CALL LSL_PUTMSG( I2NTF__INLINE, LINE, FILNAM )
	      CALL LSL_ADDMSG(OK)
	      IF (OK.EQ.LSL__SYSREAD) CALL LSL_ADDMSG(IERR)
	   ENDIF
	   GOTO 9000
	ENDIF
C  ...................................................................
C we have a line - what is it ?
C
	IF (NCHS .EQ. 0) GOTO 50		! empty line
	IF (COM_LINE(1:1).EQ.PLING) GOTO 50	! comment starting "!"
C
C send to OBEY_LINE to read the (presumed) commands on the line
C
	IF (.NOT.(OBEY_LINE(COM_LINE))) THEN
	   CALL LSL_ADDMSG(I2NTF__INLINE,LINE,FILNAM)
	   NTFINI=.FALSE.
	   GOTO 9000
	ENDIF	
C
C and off to read the next line in
C
	GOTO 50
C  ...................................................................
C and finally, come here to close the file
C
9000	OK = FLRCLO( CMDLUN, IERR )
	IF ( .NOT.OK ) THEN
	   CALL LSL_PUTMSG( I2NTF__CLOSERR, FILNAM )
	   CALL LSL_ADDMSG(OK)
	   IF ( OK.EQ.LSL__SYSCLOSE ) CALL LSL_ADDMSG(IERR)
	ELSE IF (LOG) THEN
	   CALL LSL_PUTMSG(I2NTF__PARFILCLO,FILNAM)
	ENDIF
C
C that's all
C
9999	CALL SET_TXTLIM( TXLSAV ) 	! restore TXTLIM
	RETURN
	END
C
