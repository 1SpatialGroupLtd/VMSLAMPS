C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1988-12-13 14:34:06.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL FUNCTION OSMH_CID_ZERO(ID_ICL)
C
***	IDENT	13DE88
***	MODULE	OSMH_CID_ZERO
C
C	Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C	Created					RJH	12-Dec-1988
C
C	OS Map Header Library - Check if Contractors ID is zero
C
C Description
C
C	Given an ICL character string representing the contractors 
C	identity, check for zero codes. The ID consists of a primary 
C	code and a secondary code, each of which consists of 2 
C	characters (numeric or alphabetic). Blanks count as zero.
C
	IMPLICIT NONE
C
C Arguments
C
	INTEGER*4	ID_ICL		! contractors ID (ICL chars)
C
C Included Parameter Files
C
	INCLUDE 'LSL$CMNLSL:LSLLIBMSG.PAR'  ! LSLLIB message definitions
C
C Common Blocks
C
	INCLUDE 'LSL$CMNLSL:EXCEPTION.CMN'	! number reading errors
	INCLUDE 'LSL$CMNLSL:TXTC.CMN'		! text decoding buffer
C
C Functions called
C
	LOGICAL		RDINT		! reads integer
C
C Local Variables
C
	INTEGER*2	PRI_CODE	! contractors ID primary code
	INTEGER*2	SEC_CODE	! contractors ID secondary code
	INTEGER*2 	SAVPTR   	! saved decode pointer
	BYTE		ID_ASCII(4)	! contractors ID (ASCII chars)
C
C First convert the contractors ID string into ASCII
C
	CALL OSMH_GETCHAR(ID_ASCII,ID_ICL,4)	! convert to ASCII
C
C Save the decode pointer
C
	CALL DCPSAV(SAVPTR)
C
C Set up our ASCII buffer for reading from
C
	CALL SETAUX(ID_ASCII,4)
C
C Set window on the first part and read the primary code
C
	CALL SETWIN(,2)
	IF (RDINT(PRI_CODE)) THEN
	   IF (ERRNUM .NE. LSL__UNEXPEOL) PRI_CODE = -1
	ENDIF
C
C Set window on the second part and read the secondary code
C
	CALL SETWIN(3,)
	IF (RDINT(SEC_CODE)) THEN
	   IF (ERRNUM .NE. LSL__UNEXPEOL) SEC_CODE = -1
	ENDIF
C
C Reset the decode pointer
C
	CALL DCPSET(SAVPTR)
C
C Set the function value
C
	OSMH_CID_ZERO = (PRI_CODE .EQ. 0 .AND. SEC_CODE .EQ. 0)
C
C Return
C
	RETURN
	END
