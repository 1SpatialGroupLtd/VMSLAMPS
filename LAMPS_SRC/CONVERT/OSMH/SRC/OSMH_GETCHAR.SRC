C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1987-10-15 11:45:48.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE OSMH_GETCHAR( OUTPUT, INPUT, NCHS )
C
***	IDENT	15OC87
***	MODULE	OSMH_GETCHAR
C
C Copyright (C) LaserScan Laboratories Ltd, Cambridge, England
C
C Author TJ Ibbs, 8 October 1987
C
C Takes an array of ICL characters in INPUT, and outputs them as ASCII
C characters in OUTPUT. There are 4 6bit ICL characters in the bottom
C 24 bits of each 32bit VAX longword in INPUT, which is thus an array
C of length (NCHS+1)/4 longwords. OUTPUT is an array of NCHS bytes.
C
	IMPLICIT NONE
C
C Arguments
C
	INTEGER		NCHS		! the number of characters
	BYTE		OUTPUT(NCHS)	! the ASCII byte array
	INTEGER		INPUT(*)	! the packed input array
C
C Functions
C
	INTEGER		LIB$EXTZV	! extract a bit field
C
C Workspace
C
	INTEGER		I		! DO loop variable
	INTEGER		CH		! current character
	INTEGER		POS		! its position
	INTEGER		WORD		! the longword index
C
C The ICL 6bit and ASCII 7bit characters sets differ as follows:
C The ICL character set is in the sequence
C
C	"0123456789:;<=>?"
C	" !"#$%&'()*+,-./"			where "$" is a pound sign
C	"@ABCDEFGHIJKLMNOPQRSTUVWXYZ[$]^_"	starting at hex 0 (oct 0)
C
C (note that in later versions, the pound sign is replaced by a dollar,
C  and the dollar by a "\", as in ASCII)
C
C whilst the equivalent span of ASCII goes
C
C	" !"#$%&'()*+,-./"			where "$" IS a dollar sign
C	"0123456789:;<=>?"
C	"@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_"	starting at hex 20 (oct 40)
C					      & note the "\" instead of "$"
C
C *****************************************************************************
C
	DO 200 I=1,NCHS
C
	   POS  = 18 - MOD(I-1,4)*6
	   WORD = (I-1)/4 + 1
	   CH   = LIB$EXTZV(POS,6,INPUT(WORD))
C
	   IF ( (CH.AND.'40'O).EQ.0 ) THEN
	      CH = CH.XOR. '60'O
	   ELSE
	      CH = CH.XOR.'140'O
	   ENDIF
C
	   OUTPUT(I) = CH
C
200	CONTINUE
C
	RETURN
	END
