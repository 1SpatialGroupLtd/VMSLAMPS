 	INTEGER FUNCTION GETCOMLIN
C
***	MODULE GETCOMLIN
***	IDENT  28SE88
C
C       Copyright Laser-scan laboratories Ltd, Cambridge, England.
C
C Author Jon Barber
C Created 11-Sep-88
C
	IMPLICIT NONE
C
C Command definitions:
C
	EXTERNAL	KERNCAM2I_CLD
	INTEGER		KERNCAM2I_CLD
C
C Common blocks:
C
***     PARAMETER/LSL$CMNLSL:LSLLIBMSG/ 
***     COMMON/LSL$CMNLSL:CLD/ 
***	COMMON/HERE:PARAMS/        
C
C Functions:
C
	INTEGER  	DCL_CML
	INTEGER  	DCL_STARTUP
	INTEGER  	DCL_QUAL
	INTEGER  	DCL_FILE
C
	LOGICAL		ABSENT
        LOGICAL         LOCAL           ! for DCL_QUAL
        LOGICAL         LOCNEG          ! for DCL_QUAL 
        LOGICAL         FRT
C
        INTEGER         RETVAL
        INTEGER         CMDLEN          ! length of line
C
        CHARACTER*1024  STRING          ! command line
C
C  *************************************************************
C  assume success
C
        GETCOMLIN = LSL__NORMAL
C
C  initialise flags
C
        FRT    = .FALSE.
	DIAG   = .FALSE.
C
C  __________________________________________________________________
C  get command line for our command verb KERNCAM2I. DCL_STARTUP will
C  return set to SS$_NORMAL if all is well
C
	GETCOMLIN = DCL_STARTUP ('KERNCAM2I'  ! command verb
     &	                      ,.FALSE.        ! don't split par lists
     &                        , KERNCAM2I_CLD ! CLD module name
     &                        ,.TRUE.)        ! local error reporting
	IF (.NOT. GETCOMLIN) GOTO 70
C
C  get input KERN file-spec
C
	GETCOMLIN = DCL_FILE ('INPUT_KERNCAM_FILE_SPEC', 
     &        'SYS$DISK:[]KERN_CAM.DAT;0', ABSENT, .FALSE., .TRUE.)
	IF (.NOT.GETCOMLIN) GOTO 70
C
C  transfer the file-spec to our common variable
C
        KERNCAM_LEN = FIL_LEN(1)
	KERNCAM_NAM = FILARY(1) (:FIL_LEN(1))
C
C  get output IFF file-spec
C
	GETCOMLIN = DCL_FILE ('OUTPUT_IFF_FILE_SPEC', 
     &           'LSL$IF:KERN_CAM.IFF', ABSENT, .FALSE., .TRUE.)
	IF (.NOT.GETCOMLIN) GOTO 70
C
C  transfer the file-spec to our common variable
C
        FILLEN = FIL_LEN(1)
	FILNAM = FILARY(1) (:FIL_LEN(1))
C
C  get FRT file-spec
C
        GETCOMLIN = DCL_QUAL ('FRT', FRT, LOCAL, LOCNEG, .TRUE.)
        IF (.NOT.GETCOMLIN) GOTO 70
C   
        IF (FRT) THEN
           GETCOMLIN = DCL_FILE ('FRT', 'LSL$FRT:KERN_CAM.FRT;0' 
     &                                , ABSENT, .FALSE., .TRUE.)
           IF (.NOT.GETCOMLIN) GOTO 70
C
C  transfer the file-spec to our common variable
C
           FRTNAM = FILARY(1) (1:FIL_LEN(1))
           FRTLEN = FIL_LEN(1)
	ENDIF
C
C  check for /DIAGNOSTICS
C
	GETCOMLIN = DCL_QUAL ('DIAGNOSTICS', DIAG, LOCAL, LOCNEG, .TRUE.)
	IF (.NOT.GETCOMLIN) GOTO 70
C
70      IF (DIAG .OR. .NOT.GETCOMLIN) THEN
           RETVAL = DCL_CML (STRING, CMDLEN, .TRUE.)
           CALL WRITEF
           CALL WRITEF ('.Command line was: %S', STRING(:CMDLEN))
           CALL WRITEF
        ENDIF
C
        IF (.NOT.GETCOMLIN) CALL LSL_PUTMSG (GETCOMLIN)
C
	RETURN
	END
C
