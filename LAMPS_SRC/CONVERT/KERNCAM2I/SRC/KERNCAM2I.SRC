	PROGRAM KERNCAM2I
C
***	MODULE	KERNCAM2I
***	IDENT	21SE88
C
C       Copyright Laser-Scan Laboratories Ltd., Cambridge, England, U.K.
C
C Created by JB 17-Sep-1988
C
C Program KERNCAM2I converts data in KERN MAPS200 format to IFF disc 
C    files 
C
C A single KERN file is read for each run of the program and output to
C   the specified IFF file on disc
C
	IMPLICIT NONE
C
***     PARAMETER/HERE:KERNCAM2IMSG/
***     COMMON/LSL$CMNLSL:STATUS/
***     COMMON/HERE:PARAMS/
	INCLUDE '($SSDEF)'
C
C Functions:
C
	INTEGER	GETCOMLIN		! gets command line
	INTEGER	OPEN_FILES		! open files
        INTEGER READ_KERN_HEADER        ! read header lines
        INTEGER READ_KERN_MAIN          ! read main program
	INTEGER	CLOSE_FILES		! close all the files
C
        LOGICAL	FRTINI
C
C Workspace
C
        INTEGER	STATUS			! routine return code
C
C  *****************************************************************
C Initialise LSLLIB
C
	CALL LSL_INIT
C
C Initialise IFF routine to tidy up after any errors
C
        CALL IFFTDY
C
C Initialise any variables, flags etc needed by KERNCAM2I
C
	CALL KERNCAM2I_INIT
C
C INFTR initialised FALSE so use END_FEATURE to reset the rest of
C   the flags

        CALL END_FEATURE
C
C Get and decode command line
C
	STATUS = GETCOMLIN()
C
C Check for errors
C
	IF (.NOT.STATUS) THEN
	   CALL LSL_PUTMSG (KERN2I__CMDLINERR)
           GOTO 900
        ENDIF
C	
C Open IFF output file, KERN input file
C
	STATUS = OPEN_FILES()
C
C Check for errors
C
        IF (.NOT.STATUS) THEN
           CALL LSL_PUTMSG (KERN2I__OPNFILERR)
           GOTO 900
        ENDIF
C
C Initialise FRTLIB and FRT file
C
        IF (FRTINI (FRTNAM)) THEN
           CALL LSL_PUTMSG (KERN2I__FRTINTERR, FRTNAM(:FRTLEN))
           GOTO 900
        ENDIF
C
C  read header lines
C
        STATUS = READ_KERN_HEADER()
C
        IF (.NOT.STATUS) THEN
           GOTO 900
        ENDIF
C
C  read main program
C
        STATUS = READ_KERN_MAIN()
C
        IF (.NOT.STATUS) THEN
           GOTO 900
        ENDIF
C
C  update the range and corner points
C
        CALL UPDATE_RANGE
C
C Close the files
C
	STATUS = CLOSE_FILES()
C
C Check for errors
C
	IF (.NOT.STATUS) THEN
	   GOTO 900
	ENDIF
C
C Ensure exit status indicates successful completion
C
	LSL_STATUS = SS$_NORMAL
C
C Have completed program successfully, so jump to exit
C
	GOTO 950
C
C Close any files which are open, ignoring any errors which occur
C
900	CALL CLOSE_FILES()
C
C Error handling code set to abort
C
	LSL_STATUS = SS$_ABORT
C
C And exit setting $STATUS as we go
C
950	CALL LSL_EXIT
	END
C
