C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1988-08-19 13:56:40.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
        INTEGER*4  FUNCTION GETF()
C
***	MODULE	GETF
***	IDENT	19AU88
C
C 	Copyright Laser-Scan Laboratories Ltd.,England
C
CMOD	Adapted for I2MGD		                FJB  29-Jul-1988
CMOD	LSLLIB's IFFOPEN used				TJH  05-Jun-1987
C	Created.					TJH  20-Aug-1986
C
C Get input IFF file and open on lun IFFLUN. Also opens the             
C MGD77 output file using FORTRAN on lun MGD LUN. Luns are defined
C in PARAMS.PAR
C
	IMPLICIT NONE
C
	INCLUDE 'LSL$CMNI2MGD:PARAMS.PAR'
	INCLUDE 'LSL$CMNI2MGD:I2MGDMSG.PAR'
	INCLUDE 'LSL$CMNLSL:LSLLIBMSG.PAR'
C
	INCLUDE 'LSL$CMNLSL:CLD.CMN'
	INCLUDE 'LSL$CMNLSL:MTOVCM.CMN'
	INCLUDE 'LSL$CMNLSL:FILENAME.CMN'
	INCLUDE 'LSL$CMNI2MGD:COMMAND.CMN'
	INCLUDE 'LSL$CMNIFF:IFFHAN.CMN'
	INCLUDE 'LSL$CMNFRT:FRTCOM.CMN'
	INCLUDE 'LSL$CMNFRT:FRTACD.CMN'
C
C
C System parameters
	INCLUDE		'($DCDEF)/NOLIST'
	INCLUDE 	'($DVIDEF)/NOLIST'
	INCLUDE		'($MTDEF)/NOLIST'
	INCLUDE 	'($SSDEF)/NOLIST'
C                                   
C Functions:
C
	INTEGER*4	IFFOPEN		! open IFF file for readonly
	INTEGER*4	FRTINI		! open FRT file
	INTEGER*4	ACDFND_NAME	! search ACD table by name
	INTEGER*4	TEST_FOREIGN	! tape mounted foreign?
C
	INTEGER		LIB$GETDVI
	INTEGER		MTONIT		! init magtape
	INTEGER		MTOSPC		! space forward through magtape
	INTEGER		MTOEOV		! find end of volume
	INTEGER		MTORWD		! rewind magtape
C
C Workspace:
	INTEGER		VAL             ! ?
	LOGICAL		START,EOF       ! where are we on the tape?
	LOGICAL		NORWND          ! do we need to rewind the tape?
	LOGICAL		ISTAPE		! is given device a magtape?
	LOGICAL		ISFOREIGN	! is tape mounted foreign?
	INTEGER*4	IERR		! for error return	
	INTEGER*4	OK		! for error return	
C
C
C ......................................................................
C
C
	GETF=SS$_NORMAL
C
C Open IFF input file
C
	GETF=IFFOPEN(IFFLUN,P1_FIL(:P1_LEN))                 
C
	IF (GETF) THEN
C
C Flag that we have got the input file open
	   IFF_IS_OPEN=.TRUE.
	ELSE
	   GOTO 30
	ENDIF
C
C
C------------------------------------------------------------------------------
C
C Initialise FRT file
	IF(FRTINI(FRT_FIL(1:FRT_LEN)))THEN
	   CALL LSL_PUTMSG(I2MGD__BADFRT,FRT_FIL(1:FRT_LEN))
	   GETF=I2MGD__BADFRT
	   GOTO 30
	ENDIF
C
C Correlate the AC type numbers in the given ACD/FRT table with the Names
	CALL ANAME()
C                                                
C
C ......................................................................
C
C Open MGD77 output file
C
C
	TAPE_IS_OPEN = .FALSE.
 	ISTAPE = .FALSE.
	IF (HAD_DEV) THEN
C
C
C Initialize tape as output & rewind
C             
C                                                       
C Check tape is mounted /FOREIGN
	   GETF=TEST_FOREIGN(DEV_NAM(1:DEV_LEN),ISFOREIGN,IERR)
	   IF (.NOT.GETF) THEN
	      CALL LSL_PUTMSG(I2MGD__FORDEV,DEV_NAM(1:DEV_LEN))
	      CALL LSL_ADDMSG(GETF)                          
	      GETF=I2MGD__FORDEV
	      GOTO 30
	   ENDIF
C                 
C Find out if at beginning of tape if ordinary tape drive
C                  
	   GETF=LIB$GETDVI(DVI$_DEVDEPEND,,DEV_NAM(1:DEV_LEN),VAL,,)
	   IF (.NOT.GETF) THEN
	      CALL LSL_PUTMSG(I2MGD__BADDEV,DEV_NAM(1:DEV_LEN))
	      CALL LSL_ADDMSG(GETF)
	      GETF=I2MGD__BADDEV
	      GOTO 30
	   ENDIF
C
	   START=(VAL.AND.MT$M_BOT).NE.0
	   EOF=(VAL.AND.MT$M_EOF).NE.0
C
	   IF (START.AND.HAD_REW) THEN
	      NORWND=.TRUE.
	   ELSE
	      NORWND=.NOT.HAD_REW
	   ENDIF
C	                                   
C Initialise tape
C
	   GETF=MTONIT(DEV_NAM(1:DEV_LEN),.TRUE.,NORWND)
	   IF (GETF.NE.LSL__NORMAL) THEN
	      CALL LSL_PUTMSG(I2MGD__MTOPEN,DEV_NAM(1:DEV_LEN))
	      CALL LSL_ADDMSG(GETF)
	      CALL LSL_ADDMSG(MTOERR)
	      GETF=I2MGD__MTOPEN
	      GOTO 30
	   ENDIF
	   GETF=I2MGD__MGDOPNOUT
	   CALL LSL_PUTMSG(GETF,DEV_NAM(:DEV_LEN))
C
C Move to end of tape if not rewinding
C
	   IF (.NOT. HAD_REW) THEN
C
C If at EOF, then backspace one block, and read to EOV
C otherwise rewind and read to EOV (which may take some time, so
C output a message)
C
	      IF (EOF) THEN
	         GETF=MTOSPC(-1)		! space back 1 block
	      ELSE	         
	         CALL LSL_PUTMSG(I2MGD__NOTEOF)
	         GETF=MTORWD()			! rewind tape
	      ENDIF   
C
C Check for error
C
	      IF (MTOERR.NE.0) THEN
	         CALL LSL_PUTMSG(I2MGD__MTOPEN,DEV_NAM(1:DEV_LEN))
	         CALL LSL_ADDMSG(GETF)
	         CALL LSL_ADDMSG(MTOERR)
	         GETF=I2MGD__MTOPEN
	         GOTO 30
	      ENDIF
C
	      GETF=MTOEOV()		! find end of volume
C
C Found two tape marks - end of volume. MTOSPC leaves us BETWEEN the
C two tape marks ready to begin another file.
C
	      IF (GETF.NE.LSL__NORMAL) THEN
	         CALL LSL_PUTMSG(I2MGD__MTOPEN,DEV_NAM(1:DEV_LEN))
	         CALL LSL_ADDMSG(MTOERR)
	         GETF=I2MGD__MTOPEN
	         GOTO 30
	      ENDIF
	   ENDIF
C
C Flag that we have got the MGD77 file open
C                                   
	   TAPE_IS_OPEN=.TRUE.
C
	ENDIF
C
C ......................................................................
C
30	IF (GETF) GETF=SS$_NORMAL        ! normal completion?
C
	RETURN
	END
