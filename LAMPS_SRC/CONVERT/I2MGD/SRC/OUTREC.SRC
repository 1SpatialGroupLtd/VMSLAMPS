C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1988-08-19 15:50:58.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	INTEGER FUNCTION OUTREC(CBUFF)
C
***	IDENT	19AU88
***	MODULE	OUTREC
C
C	Copyright LaserScan Laboratories Ltd., Cambridge, England
C
C	Written				FJB 11-Aug-1988
C
C Outputs a record consisting of CBUFF. Returns SS$_NORMAL for success
C
	IMPLICIT NONE
C
C Argument:
C
	CHARACTER*1920	CBUFF		! string to write to mag tape
	BYTE		BBUFF(1920)
	INTEGER		BLKSIZ
C
C Function:
	INTEGER		MTOWRB		! writes block to tape
C                                                                    
	INCLUDE 'LSL$CMNI2MGD:PARAMS.PAR'
	INCLUDE 'LSL$CMNI2MGD:I2MGDMSG.PAR'
	INCLUDE 'LSL$CMNLSL:LSLLIBMSG.PAR'
C
	INCLUDE 'LSL$CMNLSL:MTOVCM.CMN'
	INCLUDE 'LSL$CMNI2MGD:COMMAND.CMN'
	INCLUDE 'LSL$CMNI2MGD:DATABUF.CMN'
	INCLUDE '($SSDEF)/NOLIST'
C
C ......................................................................
C
	OUTREC=SS$_NORMAL          
C
C	CALL EXPAND('%W%S1920',BBUFF,CBUFF)
C
C Output to magtape
C
	IF (TAPE_IS_OPEN) THEN
	   BLKSIZ = IRECORD*120
C
	   OUTREC=MTOWRB(%REF(CBUFF),BLKSIZ)
C
	   IF (OUTREC.NE.LSL__NORMAL) THEN
	      CALL LSL_PUTMSG(I2MGD__MTBLK)
	      CALL LSL_ADDMSG(OUTREC)
	      IF (MTOERR.NE.0) THEN
	         CALL LSL_ADDMSG(MTOERR)
	      ENDIF
	      OUTREC=I2MGD__MTBLK
	      GOTO 20
	   ENDIF
C
	   IF(HAD_DIAG)CALL WRITEF('Block %N written',MTONBL)
C
	ENDIF
C
  20	IF (OUTREC) OUTREC=SS$_NORMAL
	RETURN
	END
