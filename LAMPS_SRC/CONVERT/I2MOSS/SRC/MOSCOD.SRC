C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1989-10-30 17:16:58.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	INTEGER FUNCTION MOSCOD(X,Y,Z,THREED)
C
***	MODULE	MOSCOD
***	IDENT	30OC89
C
C 	Copyright Laser-Scan Laboratories Ltd.,England
C
C	Created.					TJH  20-Aug-1986
C
CMOD    Correct 3D string coord output to buffer        JMC  30-Oct-1989
C
C Routine to accept a MOSS coordinate and append it to the output
C buffer. When a (0,0) coord pair (default terminator) or a user
C specified terminator pair (TERMIN) is output or the buffer is full
C the record is output. Returns SS$_NORMAL if all is well.
C
	IMPLICIT NONE
C
C Longword:
	INTEGER I		! loop var.
	INTEGER NUMBUF		! number of coord. sets buffered
C
C Logical:
	LOGICAL	THREED		! 3d string?
C
C Real:
	REAL	BUFFER(6)	! coordinate output buffer
	REAL 	X,Y,Z		! the current coordinates
C
C Function:
	INTEGER	OUTREC		! output record to tape buffer/disk file
C
	INCLUDE 'LSL$CMNI2MOSS:PARAMS.PAR'
	INCLUDE 'LSL$CMNI2MOSS:MAGBUF.CMN'
	INCLUDE 'LSL$CMNLSL:CLD.CMN'
	INCLUDE 'LSL$CMNI2MOSS:COMMAND.CMN'
	INCLUDE	'($SSDEF)/NOLIST'
C
	SAVE	BUFFER,NUMBUF
C
C ......................................................................
C
	MOSCOD=SS$_NORMAL
C
C ......................................................................
C
C Buffer up MOSS 3d string coordinates?
C
	IF (THREED) THEN		! 3d string?
	   BUFFER(NUMBUF*3+1)=X		! buffer up X ord.
	   BUFFER(NUMBUF*3+2)=Y		! buffer up Y ord
	   BUFFER(NUMBUF*3+3)=Z		! buffer up Z ord.
C
C Do we have a valid MOSS card image yet for 2d string coords?
C
	   IF (NUMBUF.EQ.1.OR.(X.EQ.TERMIN.AND.Y.EQ.TERMIN)) THEN
C
C Generate card image as 80 byte record padded with spaces
C
	     WRITE(OUTSTR,10) (BUFFER(I),I=1,(NUMBUF+1)*3)
10	     FORMAT(6F10.3)
C
C Flush record to block buffer (if tape) or to file (if disk file)
C
	     MOSCOD=OUTREC(.FALSE.)
	     IF (.NOT.MOSCOD) GOTO 20
C
	     NUMBUF=-1			! reset moss buffer pointer
	   ENDIF
	ELSE				! 2d string
C ......................................................................
C
C Or buffer up MOSS 2d string coordinates?
C
	   BUFFER(NUMBUF*2+1)=X		! buffer up X ord.
	   BUFFER(NUMBUF*2+2)=Y		! buffer up Y ord.
C
C Do we have a valid MOSS card image yet for 2d string coords?
C
	   IF (NUMBUF.EQ.2.OR.(X.EQ.TERMIN.AND.Y.EQ.TERMIN)) THEN
C
C Generate card image as 80 byte record padded with spaces
C
	     WRITE(OUTSTR,10) (BUFFER(I),I=1,(NUMBUF+1)*2)
C
C Flush record buffer to block buffer (if tape) or to file (if disk
C file)
C
	     MOSCOD=OUTREC(.FALSE.)
	     IF (.NOT.MOSCOD) GOTO 20
C
	     NUMBUF=-1			! reset moss buffer pointer
	   ENDIF
	ENDIF
	NUMBUF=NUMBUF+1			! increment no. coordinates
C
C ......................................................................
C
20	IF (MOSCOD) MOSCOD=SS$_NORMAL
	RETURN
	END
