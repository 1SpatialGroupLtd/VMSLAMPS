	LOGICAL FUNCTION CREATE_IFF()
C
***     MODULE CREATE_IFF
***     IDENT  14FE90
C
C Copyright Laser-Scan Laboratories Ltd, Cambridge, England
C Author Tony J Ibbs, 8 February 1988
C
C Creates a new IFF file, writing the relevant information to the
C header entries
C
	IMPLICIT NONE
C
C Message definitions
C
	INCLUDE 'HERE:MSDS2IMSG.PAR'
C
C Common files
C
	INCLUDE 'LSL$CMNIFF:MD2DES.CMN'	!  Common for version 2 MD
	INCLUDE 'LSL$CMNIFF:MHDMB.CMN'  !  OS map header common
	INCLUDE 'LSL$CMNIFF:IFFHAN.CMN'	!  General IFF user interface
C
	INCLUDE	'LSL$CMNLSL:FILENAME.CMN'
	INCLUDE	'HERE:FILES.CMN'
	INCLUDE 'HERE:COMMANDS.CMN'
	INCLUDE	'HERE:IFF.CMN'
	INCLUDE	'HERE:LUNS.PAR'
C
C Functions
C
	LOGICAL		IFFCREATE	!  Create a new IFF file
C
C Workspace
C
	INTEGER		OK		! Function return
	REAL		COEFF(10,2)	! Cubic coefficients
	REAL		CPTS(4,4)	! Control points
C
C Define an NS entry
C
	CHARACTER*51	NS
	DATA		NS
     &		/'IFF file created by MSDS2I on dd-MMM-yy at hh:mm:ss'/
C		/.123456789 123456789 123456789 123456789 123456789 1./
C
C Set the unit matrix in the coefficients
C
	DATA	COEFF	/0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,
     &			 0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0/
C
C ........................................................................
C Work out the NS entry
C
	CALL DATE(NS(31:39))
	CALL TIME(NS(44:51))
C
C ........................................................................
C Create the new IFF file
C
	OK = IFFCREATE( IFFILE_LUN, IFFILE, ,,HAD_LOG )
	IF (.NOT.OK) GOTO 9999
C
C ........................................................................
C The first entry is the RAnge, which we leave totally unset
C
	RA_POSN = LPOSE			! remember where we're writing
	CALL IFFRA(RANGE)		! and write
C
C Set the XMIN,etc so that they will (definitely) be updated later
C
	IRANGE(1) =  2 147 483 647	! Xmin
	IRANGE(2) = -2 147 483 648	! Xmax
	IRANGE(3) =  2 147 483 647	! Ymin
	IRANGE(4) = -2 147 483 648	! Ymax
C
C ........................................................................
C Next create a blank HIstory record to be filled out by IFFLIB
C
	CALL IFFHI
C
C ........................................................................
C Map Header - we output an unset map header
C
C MHDESC is equivalenced onto MHARR in the common, reseting this will 
C indicate an unset map header
C
	MHDESC(1)=MHI4SZ	! length is standard
	MHDESC(2)=0		! MH is unset
	CALL IFFMH(MHARR,MHLEN)		! from the MHDMB common
C
C ........................................................................
C Now the map descriptor - write an empty one
C
	MATV2 = -1			! unset
	MD_POSN = LPOSE
	CALL IFFMD(MD2ARR,MD2LEN)
C
C ........................................................................
C New Section
C
	CALL IFFNS( %REF(NS), LEN(NS) )
C
C ........................................................................
C Calibration Coefficients - unit transformation
C
	CALL IFFCC ( COEFF )
C
C ........................................................................
C Control points - again, output an unset entry
C
	CP_POSN = LPOSE
	CALL IFFCP( CPTS )	! Write the entry
C
C ........................................................................
C And we put everything into layer 1
C
C we will used a dummy value for the EO pointer, we must remember where we 
C are so we can come back and update this pointer later
C
	NO_POSN = LPOSE		! our current layer
	CALL IFFNO ( 1,0,0 )
C
C ........................................................................
C And return - that's all we do for now
C
9999	CREATE_IFF = OK
	RETURN
	END
