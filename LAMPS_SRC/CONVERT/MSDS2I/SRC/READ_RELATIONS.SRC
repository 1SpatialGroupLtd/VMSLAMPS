C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1990-02-14 10:36:22.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL FUNCTION READ_RELATIONS(SCAN,WHAT,INTO,PTR,START,END,MAX)
C
***	IDENT	14FE90
***	MODULE	READ_RELATIONS
C
C Copyright (C) LaserScan Laboratories Ltd, Cambridge, England
C Author TJ Ibbs, 8 February 1988
C
C This routine reads in the relations for a feature
C It returns TRUE if all went well, and FALSE otherwise
C
C ****************************************************************************
C * At the moment, it reads the first relation list and ignores the others.  *
C * At some stage, we may want to use the data in the others		     *
C ****************************************************************************
C
	IMPLICIT NONE
C
C Arguments
C - for reading the first set of pointers
C
	LOGICAL		SCAN		! scanning or reading file?
	CHARACTER*(*)	WHAT		! in - description of the array
	INTEGER		INTO(*)		!i/o - array to read into
	INTEGER		PTR		!i/o - last used element of INTO
	INTEGER		START		!out - start of area used
	INTEGER		END		!out - end   of area used
	INTEGER		MAX		!i/o - largest number of relations so
					! far
C
C Message files
C
	INCLUDE	'HERE:MSDS2IMSG.PAR'
C
C Common files
C
	INCLUDE	'HERE:COMMANDS.CMN'
	INCLUDE	'HERE:RECORD.CMN'
C
C Functions
C
	LOGICAL		READ_STRING	! read a comma-preceded string
	LOGICAL		READ_INTEGER	! read a comma-preceded integer
	LOGICAL		READ_POINTERS
	LOGICAL		IGNORE_POINTERS
	LOGICAL		READ_THEME_POINTERS
C
C Workspace
C
	LOGICAL		OK		! function return
	INTEGER		I
C
	CHARACTER*20	RELN_NAM	! the relation name
	INTEGER		RELN_LEN	! its length
C
	INTEGER		RELATION_TYPE	! 1 => owner, -1 => member
C
C *****************************************************************************
C
	OK = .TRUE.		! assume success
C
C there should always be three sets of relations
C
	IF ( RELATION_COUNT.NE.3 ) THEN
	   CALL LSL_PUTMSG(MSDS2I__RELCNT,RELATION_COUNT,RECNUM)
	   OK = .FALSE.
	   GOTO 9000
	ENDIF
C
C loop reading the relations
C
	DO 2000 I = 1,RELATION_COUNT
C
	   OK = READ_STRING(SCAN, RELN_NAM, RELN_LEN, 'relation name' )
	   IF (.NOT.OK) GOTO 9000
C
	   OK = READ_INTEGER( RELATION_TYPE, 'relation owner/member flag' )
	   IF (.NOT.OK) GOTO 9000
C
	   IF (.NOT.SCAN.AND.DEBUG_LIST) THEN
	      CALL EXPAND('	relation "%S", type=',
     &				RELN_NAM(:RELN_LEN) )
	      IF (RELATION_TYPE.EQ. 1) CALL WRTAPP('owner')
	      IF (RELATION_TYPE.EQ.-1) CALL WRTAPP('member')
	   ENDIF
C
	   OK = READ_INTEGER( POINTER_COUNT, 'pointer count')
	   IF (.NOT.OK) GOTO 9000
C
C	 read according to which relationship this is
C	 - first  is the set of items that we own
C	 - second is the set of themes that we are in
C	 - third  is the set of complex features that we are in
C
	   IF (I.EQ.1) THEN
	      OK = READ_POINTERS(SCAN,WHAT,INTO,PTR,START,END,MAX)
	   ELSEIF (I.EQ.2) THEN
	      IF (.NOT.SCAN) THEN
	         IF (RELN_NAM(1:RELN_LEN).NE.'theme_comp_to_own') THEN
	            CALL LSL_PUTMSG(MSDS2I__NOTHEME,RECNUM,RELN_NAM(:RELN_LEN))
	            OK = .FALSE.
	         ENDIF
	      ENDIF
	      OK = READ_THEME_POINTERS(SCAN)
	   ELSE
	      OK = IGNORE_POINTERS()
	   ENDIF
	   IF (.NOT.OK) GOTO 9000
C
2000	CONTINUE
C
9000	READ_RELATIONS = OK
	RETURN
	END
