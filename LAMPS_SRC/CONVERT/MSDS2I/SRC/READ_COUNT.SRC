C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1990-02-07 13:15:04.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL FUNCTION READ_COUNT
C
***	IDENT	16FE88
***	MODULE	READ_COUNT
C
C Copyright (C) LaserScan Laboratories Ltd, Cambridge, England
C Author TJ Ibbs, 3 February 1988
C
C A routine to read an MSDS counter record
C The routine returns TRUE if all went well, and FALSE otherwise
C
	IMPLICIT NONE
C
C Message files
C
	INCLUDE	'LSL$CMNLSL:LSLLIBMSG.PAR'
	INCLUDE	'HERE:MSDS2IMSG.PAR'
C
C Common files
C
	INCLUDE	'HERE:COMMANDS.CMN'
	INCLUDE	'HERE:DATASET.CMN'	! for FEATURE_ and TOPOLOGICAL_COUNT
	INCLUDE	'HERE:BUFFER.CMN'
	INCLUDE	'HERE:RECORD.CMN'	! for RECNUM
C
C Functions
C
	LOGICAL		FLRLIN		! read a record
	LOGICAL		RDLONG		! read a long integer
	LOGICAL		READ_COMMA	! read a separator
C
C Workspace
C
	LOGICAL		OK		! function return
	INTEGER		IERR		! ditto
C
C *****************************************************************************
C This is the second record in the dataset - it is not of the form
C
C		ENTITY_ID, RECORD_TYPE, ...
C
C so we must read the new record ourselves, without using READ_RECORD
C *****************************************************************************
C
	RECNUM = RECNUM + 1
C
	OK = FLRLIN(BUFFER,BUFLEN,BUFMAX,IERR)
	IF (.NOT.OK) THEN
	   CALL LSL_PUTMSG(MSDS2I__READREC,RECNUM)
	   CALL LSL_ADDMSG(OK)
	   IF (OK.EQ.LSL__SYSREAD) CALL LSL_ADDMSG(IERR)
	   GOTO 9999
	ENDIF
C
C read the feature count and the topological count
C
	CALL SETAUX(BUFFER,BUFLEN)
C
	IF (RDLONG(FEATURE_COUNT)) THEN
	   CALL LSL_PUTMSG(MSDS2I__UNEXPEOL,RECNUM,'feature count')
	   CALL LSL_ADDBUF(BUFFER,BUFLEN)
	   OK = .FALSE.
	   GOTO 9999
	ENDIF
C
	OK = READ_COMMA()
	IF (.NOT.OK) GOTO 9999
C
	IF (RDLONG(TOPOLOGICAL_COUNT)) THEN
	   CALL LSL_PUTMSG(MSDS2I__UNEXPEOL,RECNUM,'topological count')
	   CALL LSL_ADDBUF(BUFFER,BUFLEN)
	   OK = .FALSE.
	   GOTO 9999
	ENDIF
C
	IF (HAD_LOG.OR.DEBUG_LIST) CALL WRITEF(
     &		'Dataset contains %N features, %N topological entities',
     &				 FEATURE_COUNT,TOPOLOGICAL_COUNT)
C
9999	READ_COUNT = OK
	RETURN
	END
