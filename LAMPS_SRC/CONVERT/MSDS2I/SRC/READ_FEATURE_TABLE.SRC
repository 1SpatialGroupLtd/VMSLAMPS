C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1990-02-15 09:10:04.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL FUNCTION READ_FEATURE_TABLE(FILENAME,LUN,IERR)
C
***	MODULE	READ_FEATURE_TABLE
***	IDENT	15FE90
C
C Copyright Laser Scan Laboratories Ltd., Cambridge, England.
C Author  Ron Russell					19-Feb-1988
C
C returns TRUE if it succeeds in opening, reading, and closing
C the specified Table file FILENAME
C The contents of the file are left set up in NAME_TABLE.CMN
C
	IMPLICIT NONE
C
	CHARACTER*(*)	FILENAME		! filename
	INTEGER		LUN			! lun to use
	INTEGER		IERR			! error code
C
	INCLUDE	'LSL$CMNLSL:LSLLIBMSG.PAR'
	INCLUDE	'LSL$CMNLSL:READSTR.PAR'
	INCLUDE	'HERE:MSDS2IMSG.PAR'
	INCLUDE	'HERE:STRUCTURES.PAR'
C
	INCLUDE	'HERE:COMMANDS.CMN'
	INCLUDE	'HERE:NAME_TABLE.CMN'
C
C functions called
	LOGICAL		FLROPN
	INTEGER*4	FLRLIN
	LOGICAL		RDCHS
	LOGICAL		READ_TRANS_ENTRY
	LOGICAL		FLRREW		! rewind selected file
	LOGICAL		LIB$GET_VM
C
C w/s
	INTEGER		OK
	BYTE		CHAR
	LOGICAL		SCAN
C
C open file for read
	OK = FLROPN(LUN,FILENAME,IERR)! open command file
	IF (.NOT.OK) THEN
	   CALL LSL_PUTMSG(MSDS2I__FTABLE,FILENAME)
	   IF (OK.EQ.LSL__SYSOPEN) THEN
	      CALL LSL_ADDMSG(IERR)
	   ELSE
	      CALL LSL_ADDMSG(OK)
	   ENDIF
	   GOTO 9999
	ELSEIF (HAD_LOG) THEN
	   CALL LSL_PUTMSG(MSDS2I__TRANSOPEN,FILENAME)
	ENDIF
C
	SCAN = .TRUE.
C
10	ENTRY_COUNT = 0
C
C now we read it in, line by line, and obey each line
C
50	OK = FLRLIN(,,,IERR)
	IF (.NOT. OK) THEN
	   IF (OK .EQ. LSL__EOF) THEN	! end of file
	      OK = .TRUE.
	      GOTO 500
	   ELSEIF (OK.EQ.LSL__SYSREAD) THEN	! read error
	      CALL FLRCLO
	      READ_FEATURE_TABLE = OK
	      GOTO 9999
	   ENDIF
	ENDIF
C
C we have a line - what is it ?
C
	CALL BSLN				! start of line
	IF (RDCHS(CHAR)) GOTO 50		! empty line
	IF (CHAR.EQ.33) GOTO 50			! comment starting "!"
	CALL BSCH				! something there
	ENTRY_COUNT = ENTRY_COUNT+1
C
	IF (.NOT.SCAN) THEN
	   OK = READ_TRANS_ENTRY(ENTRY_COUNT,%VAL(ADDR_TABNAME),
     &	                           %VAL(ADDR_TAB_CODE))
	   IF (.NOT.OK) GOTO 800
	ENDIF
C
	GOTO 50
C
C end of file
500	IF (.NOT.SCAN) GOTO 800
C
C get space for tables
	IF (ENTRY_COUNT.GT.0) THEN
	   OK = LIB$GET_VM(ENTRY_COUNT*DESC_WIDTH*4,ADDR_TABNAME)
	   IF (.NOT.OK) THEN
	      CALL LSL_PUTMSG(MSDS2I__NOVIRTMEM)
	      CALL LSL_ADDMSG(OK)
	      GOTO 800
	   ENDIF
	   OK = LIB$GET_VM(ENTRY_COUNT*4,ADDR_TAB_CODE)
	   IF (.NOT.OK) THEN
	      CALL LSL_PUTMSG(MSDS2I__NOVIRTMEM)
	      CALL LSL_ADDMSG(OK)
	      GOTO 800
	   ENDIF
	ENDIF
C
C Rewind the file
C
	OK = FLRREW( LUN, IERR )
	IF (.NOT.OK) THEN
	   CALL LSL_PUTMSG(MSDS2I__MSDSREWIND,FILENAME)
	   IF (OK.EQ.LSL__SYSOPEN) THEN
	      CALL LSL_ADDMSG(IERR)
	   ELSE
	      CALL LSL_ADDMSG(OK)
	   ENDIF
	   GOTO 800
	ENDIF
C
C and read it for real
	SCAN = .FALSE.
	GOTO 10
C
C finished
  800	CONTINUE
	CALL FLRCLO	
 9999	READ_FEATURE_TABLE = OK
	RETURN
	END
