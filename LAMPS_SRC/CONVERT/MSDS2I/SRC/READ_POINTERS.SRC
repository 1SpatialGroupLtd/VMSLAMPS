	LOGICAL FUNCTION READ_POINTERS(SCAN,WHAT,INTO,PTR,START,END,MX)
C
***	IDENT	14FE90
***	MODULE	READ_POINTERS
C
C Copyright (C) LaserScan Laboratories Ltd, Cambridge, England
C Author TJ Ibbs, 8 February 1988
C
C This routine reads in the pointers for a node, edge, face or relation
C It returns TRUE if all went well, and FALSE otherwise
C
	IMPLICIT NONE
C
C Arguments
C
	LOGICAL		SCAN		! scanning or reading file?
	CHARACTER*(*)	WHAT		! in - description of the array
	INTEGER		INTO(*)		!i/o - array to read into
	INTEGER		PTR		!i/o - last used element of INTO
	INTEGER		START		!out - start of area used
	INTEGER		END		!out - end   of area used
	INTEGER		MX		!i/o - maximum number
C
C Message files
C
	INCLUDE	'HERE:MSDS2IMSG.PAR'
C
C Common files
C
	INCLUDE	'HERE:COMMANDS.CMN'
	INCLUDE	'HERE:RECORD.CMN'
C
C Functions
C
	LOGICAL		READ_INTEGER	! read a comma-preceded integer
C
C Workspace
C
	LOGICAL		OK		! function return
	INTEGER		I
	INTEGER		TEMP
	INTEGER		PTR_START
	INTEGER		PTR_END
C
C *****************************************************************************
C
	OK = .TRUE.		! assume success
C
C work out our start and end
C
	PTR_START = PTR + 1
	PTR_END   = PTR_START + POINTER_COUNT - 1
C
	MX = MAX(MX,POINTER_COUNT)
C
	IF (.NOT.SCAN) THEN
	   START = PTR_START
	   END = PTR_END
	ENDIF
C
C check that they will fit
C
ccc	IF ( END.GT.MAXLEN ) THEN
ccc	   CALL LSL_PUTMSG(MSDS2I__NOROOM,WHAT,MAXLEN)
ccc	   OK = .FALSE.
ccc	   GOTO 9000
ccc	ENDIF
C
C loop reading the pointers
C
	DO 2000 I = PTR_START, PTR_END
	   OK = READ_INTEGER( TEMP, 'relation pointer' )
	   IF (.NOT.OK) GOTO 9000
	   IF (.NOT.SCAN) INTO(I) = TEMP
	   IF (.NOT.SCAN.AND.DEBUG_LIST) CALL WRITEF('	related to %N',INTO(I))
2000	CONTINUE
C
C and finally, update the PTR to its correct value
C
	PTR = PTR_END
C
9000	READ_POINTERS = OK
	RETURN
	END
