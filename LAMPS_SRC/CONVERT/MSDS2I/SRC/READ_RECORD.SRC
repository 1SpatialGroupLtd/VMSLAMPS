	LOGICAL FUNCTION READ_RECORD(EOF)
C
***	IDENT	08FE88
***	MODULE	READ_RECORD
C
C Copyright (C) LaserScan Laboratories Ltd, Cambridge, England
C Author TJ Ibbs, 3 February 1988
C
C A routine to obtain the next record from the MSDS dataset.
C Since this is a tape in VAX COPY format (ie the VAX interpretation
C of the ANSI tape format), this is a fairly easy operation.
C
C The routine returns TRUE if all went well, and FALSE otherwise
C
	IMPLICIT NONE
C
C Argument
C
	LOGICAL		EOF		! TRUE if it is
C
C Message files
C
	INCLUDE	'LSL$CMNLSL:LSLLIBMSG.PAR'
	INCLUDE	'HERE:MSDS2IMSG.PAR'
C
C Common files
C
	INCLUDE	'HERE:RECORD.CMN'
	INCLUDE	'HERE:BUFFER.CMN'
C
C Functions
C
	LOGICAL		FLRLIN		! read a record
	LOGICAL		RDLONG		! read a long integer
	LOGICAL		READ_COMMA	! read a separator
	LOGICAL		RDCHS		! read a character, ignore spaces/tabs
C
C Workspace
C
	BYTE		ICH		! single character
	LOGICAL		OK		! function return
	INTEGER		IERR		! ditto
C
C *****************************************************************************
C assume that we don't find end-of-file
C
	EOF = .FALSE.
C
C read the next record
C
	RECNUM = RECNUM + 1
C
2000	OK = FLRLIN(BUFFER,BUFLEN,BUFMAX,IERR)
	IF (.NOT.OK) THEN
	   IF (OK.EQ.LSL__EOF) THEN
	      EOF = .TRUE.
	   ELSE
	      CALL LSL_PUTMSG(MSDS2I__READREC,RECNUM)
	      CALL LSL_ADDMSG(OK)
	      IF (OK.EQ.LSL__SYSREAD) CALL LSL_ADDMSG(IERR)
	   ENDIF
	   GOTO 9999
	ENDIF
C
C read the entity ID and the record type
C - note that a record that only contains spaces is used to fill out
C   a block, so that records don't span blocks. Thus we must ignore
C   any such record that we find.
C
	CALL SETAUX(BUFFER,BUFLEN)
C
	IF (RDLONG(ENTITY_ID)) THEN
	   IF (RDCHS(ICH)) THEN		! it was a blank record
	      GOTO 2000			! ignore it
	   ELSE
	      CALL LSL_PUTMSG(MSDS2I__UNEXPEOL,RECNUM,'entity ID')
	      CALL LSL_ADDBUF(BUFFER,BUFLEN)
	      OK = .FALSE.
	      GOTO 9999
	   ENDIF
	ENDIF
C
	OK = READ_COMMA()
	IF (.NOT.OK) GOTO 9999
C
	IF (RDLONG(RECORD_TYPE)) THEN
	   CALL LSL_PUTMSG(MSDS2I__UNEXPEOL,RECNUM,'record type')
	   CALL LSL_ADDBUF(BUFFER,BUFLEN)
	   OK = .FALSE.
	   GOTO 9999
	ENDIF
C
C Note that we leave the next comma separator intact, ready to be eaten
C by the next call of READ_INTEGER...
C
9999	READ_RECORD = OK
	RETURN
	END
