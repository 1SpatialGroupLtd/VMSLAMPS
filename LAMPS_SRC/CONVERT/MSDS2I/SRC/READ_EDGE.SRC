	LOGICAL FUNCTION READ_EDGE(SCAN,EDGE,EDGE_PTR,LINE_IDS,LINE_IDS_PTR,
     &	                     COORDS,COORDS_PTR,NODE,NODE_PTR)
C
***	IDENT	17FE88
***	MODULE	READ_EDGE
C
C Copyright (C) LaserScan Laboratories Ltd, Cambridge, England
C Author TJ Ibbs, 5 February 1988
C
C This routine reads in an edge record
C It returns TRUE if all went well, and FALSE otherwise
C
	IMPLICIT NONE
C
C arguments
	LOGICAL		SCAN		! if scanning or reading file
	INTEGER		EDGE(11,*)
	INTEGER		EDGE_PTR
	INTEGER		LINE_IDS(*)
	INTEGER		LINE_IDS_PTR
C
	INTEGER		COORDS(3,*)
	INTEGER		COORDS_PTR
	INTEGER		NODE(2,*)
	INTEGER		NODE_PTR
C
C Message files
C
	INCLUDE	'HERE:MSDS2IMSG.PAR'
C
C Common files
C
	INCLUDE	'HERE:RECORD.CMN'
C
C Functions
C
	LOGICAL		IGNORE_BOUNDS	! ignore the bounding cuboid
	LOGICAL		READ_INTEGER	! read a comma-preceded integer
	LOGICAL		READ_POS_EDGE	! read the positive edge
	LOGICAL		READ_NEG_EDGE	! read the negative edge
	LOGICAL		READ_COORDS	! read the coordinates
C
C Workspace
C
	LOGICAL		OK		! function return
C
C *****************************************************************************
C check that we have room for this edge
C
	EDGE_PTR = EDGE_PTR + 1
C
	IF (.NOT.SCAN) EDGE(1,EDGE_PTR) = ENTITY_ID	! remember our 'name'
C
C ignore the bounding cuboid
C
	OK = IGNORE_BOUNDS()
	IF (.NOT.OK) GOTO 9000
C
C next, read the two orientations of the edge
C
	OK = READ_POS_EDGE(SCAN,EDGE,EDGE_PTR,LINE_IDS,LINE_IDS_PTR)
	IF (.NOT.OK) GOTO 9000
C
	OK = READ_NEG_EDGE(SCAN,EDGE,EDGE_PTR,LINE_IDS,LINE_IDS_PTR)
	IF (.NOT.OK) GOTO 9000
C
C read the coordinate count
C
	OK = READ_INTEGER( COORD_COUNT, 'coordinate count' )
	IF (.NOT.OK) GOTO 9000
C
C and the coordinates themselves
C
	OK = READ_COORDS(SCAN,COORDS,COORDS_PTR,EDGE,EDGE_PTR,NODE,NODE_PTR)

	IF (.NOT.OK) GOTO 9000
C
9000	READ_EDGE = OK
	RETURN
	END
