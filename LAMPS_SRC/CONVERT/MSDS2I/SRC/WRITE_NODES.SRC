C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1990-02-09 18:14:46.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL FUNCTION WRITE_NODES(START,END,COORDS,NODE,NODE_PTR,NODE_IDS)
C
***	IDENT	09FE90
***	MODULE	WRITE_NODES
C
C Copyright (C) LaserScan Laboratories Ltd, Cambridge, England
C Author TJ Ibbs, 17 February 1988
C
C This routine finds all of the nodes in the current point feature,
C and outputs their coordinates
C
C Note that this has been done with little thought of efficiency
C - check it later on to see if it could be done better!
C
C It returns TRUE if all went well, and FALSE otherwise
C
	IMPLICIT NONE
C
C Arguments
C
	INTEGER		START		! start of node list in NODE_IDS
	INTEGER		END		! end of ditto
	INTEGER		COORDS(3,*)
	INTEGER		NODE(2,*)
	INTEGER		NODE_PTR
	INTEGER		NODE_IDS(*)
C
C Message files
C
	INCLUDE	'HERE:MSDS2IMSG.PAR'
C
C Common files
C
	INCLUDE	'HERE:COMMANDS.CMN'
	INCLUDE	'HERE:RECORD.CMN'
C
C Functions
C
	LOGICAL		WRITE_COORDS
C
C Workspace
C
	LOGICAL		OK		! function return
	INTEGER		I		! index into NODE_IDS
	INTEGER		N		! current node ID
	INTEGER		PTR		! pointer to the node
C
C *****************************************************************************
C
	IF (DEBUG_IFF) CALL WRITEF('Writing %N node%m',END-START+1)
C
	OK = .TRUE.		! assume success
C
C Look up each node ID in the node array, and output its coordinates
C
	DO 2000 I = START,END
C
	   N = NODE_IDS(I)
C
C	 now look through all of the nodes in the dataset to find it
C
	   DO 1000 PTR = 1,NODE_PTR
C
	      IF ( N.EQ.NODE(1,PTR) ) THEN
	         OK = WRITE_COORDS( NODE(2,PTR), NODE(2,PTR),
     &				    .TRUE., .TRUE.,COORDS )
		 IF (.NOT.OK) GOTO 9000
		 GOTO 2000
	      ENDIF
C
1000	   CONTINUE
C
C	 if we reach here, we didn't find it
C
	   CALL LSL_PUTMSG( MSDS2I__MISSNODE,N )
	   OK = .FALSE.
	   GOTO 9000
C
2000	CONTINUE
C
9000	WRITE_NODES = OK
	RETURN
	END
