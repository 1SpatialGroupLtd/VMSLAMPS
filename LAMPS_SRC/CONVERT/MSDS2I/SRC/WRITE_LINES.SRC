C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1990-02-14 10:06:56.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL FUNCTION WRITE_LINES(LINE,LINE_PTR,OEDGE_IDS,
     &	                  EDGE,EDGE_PTR,
     &	                  MAX_EDGE_INDICES,EDGE_IX,EDGE_IX_PTR,
     &	                  ATTR_NAM,ATTR_VAL,COORDS)

C
***	IDENT	14FE90
***	MODULE	WRITE_LINES
C
C Copyright (C) LaserScan Laboratories Ltd, Cambridge, England
C Author TJ Ibbs, 16 February 1988
C
C This routine writes out the coordinates for a line feature
C It returns TRUE if all went well, and FALSE otherwise
C
	IMPLICIT NONE
C
	INCLUDE	'HERE:STRUCTURES.PAR'
C
C arguments
	INTEGER		LINE(6,*)
	INTEGER		LINE_PTR
	INTEGER		OEDGE_IDS
	INTEGER		EDGE(11,*)
	INTEGER		EDGE_PTR
	INTEGER		MAX_EDGE_INDICES
	INTEGER		EDGE_IX(6,*)
	INTEGER		EDGE_IX_PTR
	INTEGER		ATTR_NAM(2,*)
	INTEGER		ATTR_VAL(2,*)
	INTEGER		COORDS(3,*)
C
C Message files
C
	INCLUDE	'HERE:MSDS2IMSG.PAR'
C
C Common files
C
	INCLUDE	'HERE:COMMANDS.CMN'
	INCLUDE	'HERE:RECORD.CMN'
cccc	INCLUDE	'HERE:IFF.CMN'
C
C Functions
C
	LOGICAL		LOOKUP_EDGES_IN_LINE
	LOGICAL		ORDER_EDGES
	LOGICAL		WRITE_EDGES
	LOGICAL		WRITE_ATTRIBUTES
C
C Workspace
C
	LOGICAL		OK		! function return
	INTEGER		I
	INTEGER*2	ISQ		! internal sequence number
	INTEGER*2	ISTAT(4)	! FS entry
C
C *****************************************************************************
C
	OK = .TRUE.		! assume success
	IF (HAD_LOG.OR.DEBUG_IFF) CALL WRITEF('Writing line features')
C
C for each line feature, we must find all of the edges that are implicated
C in that line feature, and output them in some appropriate order
C
	DO 2000 I = 1,LINE_PTR		! for each LINE ID
C
	   IF (DEBUG_IFF) CALL WRITEF('Line ID %N',LINE(1,I))
C
C	 make a list of those edges that are included in this
C	 line feature
C
	   OK = LOOKUP_EDGES_IN_LINE( LINE(2,I), LINE(3,I),OEDGE_IDS,
     &	                     EDGE,EDGE_PTR,
     &	                     MAX_EDGE_INDICES,EDGE_IX,EDGE_IX_PTR)
	   IF (.NOT.OK) GOTO 9000
C
C	 we must now work out what order the edges should be output
C	 in - do this by looking at the start/end nodes
C
	   OK = ORDER_EDGES(LINE(1,I),EDGE_IX,EDGE_IX_PTR)
	   IF (.NOT.OK) GOTO 9000
C
C	 finally, start the new line feature, output its edges,
C	 and then close it
C
	   ISQ = 0
	   CALL IFFNF(LINE(1,I),ISQ)
C
	   ISTAT(1) = LINE(4,I)
	   CALL IFFFS(ISTAT)
C
	   OK = WRITE_ATTRIBUTES(LINE(5,I),LINE(6,I),ATTR_NAM,ATTR_VAL)
	   IF (.NOT.OK) GOTO 9000
C
	   CALL FLUSH_ZS(0)		! initialise output buffers
C
	   OK = WRITE_EDGES(LINE(1,I),COORDS,EDGE,EDGE_IX,EDGE_IX_PTR)
	   IF (.NOT.OK) GOTO 9000
C
	   CALL FLUSH_ZS(1)		! final flush
C
	   CALL IFFEF
C
2000	CONTINUE
C
9000	WRITE_LINES = OK
	RETURN
	END
