	LOGICAL FUNCTION READ_SIMPLE_AREA(SCAN,AREA,AREA_PTR,FACE_IDS,
     &	                  FACE_IDS_PTR,ATTR_NAM,ATTR_VAL,ATTR_PTR,
     &	                  MAX,IGNORE_PTR,IGNORE_ARRAY)
C
***	IDENT	14FE90
***	MODULE	READ_SIMPLE_AREA
C
C Copyright (C) LaserScan Laboratories Ltd, Cambridge, England
C Author TJ Ibbs, 5 February 1988
C
C This routine reads in a simple area feature
C It returns TRUE if all went well, and FALSE otherwise
C
	IMPLICIT NONE
C
	INCLUDE	'HERE:STRUCTURES.PAR'
C
C arguments
	LOGICAL		SCAN		! scanning or reading file?
	INTEGER		AREA(AREA_WIDTH,*)
	INTEGER		AREA_PTR
	INTEGER		FACE_IDS(*)
	INTEGER		FACE_IDS_PTR
C
	INTEGER		ATTR_NAM(DESC_WIDTH,*)
	INTEGER		ATTR_VAL(DESC_WIDTH,*)
	INTEGER		ATTR_PTR
	INTEGER		MAX		! maximum number of faces so far
	INTEGER		IGNORE_PTR
	INTEGER		IGNORE_ARRAY(IGNORE_WIDTH,*)
C
C Message files
C
	INCLUDE	'HERE:MSDS2IMSG.PAR'
C
C Common files
C
	INCLUDE	'HERE:COMMANDS.CMN'
	INCLUDE	'HERE:RECORD.CMN'
C
C Functions
C
	LOGICAL		IGNORE_BOUNDS	! ignore the bounding cuboid
	LOGICAL		READ_INTEGER	! read a comma-preceded integer
	LOGICAL		READ_STRING	! read a comma-preceded string
	LOGICAL		READ_DYNAMIC_STRING	! read a comma-preceded string
	LOGICAL		READ_ATTRIBUTES	! read the attribute list
	LOGICAL		READ_RELATIONS	! read the relations list
C
	INTEGER		TRANSLATE_FEATURE_NAME
C
C Workspace
C
	LOGICAL		OK		! function return
C
C *****************************************************************************
C check that we have room for this area
C
	AREA_PTR = AREA_PTR + 1
C
	IF (.NOT.SCAN)	AREA(1,AREA_PTR) = ENTITY_ID	! remember our 'name'
C
C ignore the bounding cuboid
C
	OK = IGNORE_BOUNDS()
	IF (.NOT.OK) GOTO 9000
C
C next, read the number of attributes
C
	OK = READ_INTEGER( ATTRIBUTE_COUNT, 'attribute count' )
	IF (.NOT.OK) GOTO 9000
C
C and then the name of this feature
C
	OK = READ_DYNAMIC_STRING(SCAN, FEATURE_NAME,'feature name' )
	IF (.NOT.OK) GOTO 9000
C
	IF (.NOT.SCAN.AND.(DEBUG_LIST.OR.DEBUG_NAME))
     &	                CALL WRITEF('Feature "%S"',
     &					FEATURE_NAME)
C
C translate that into a feature code
C
	IF (.NOT.SCAN) THEN
	   AREA(4,AREA_PTR)= 
     &	               TRANSLATE_FEATURE_NAME(FEATURE_NAME)
C
C ignore this feature, if not found in translation table
	   IF (AREA(4,AREA_PTR).EQ.-1) THEN
	      CALL ADD_IGNORED(FEATURE_NAME,IGNORE_PTR,IGNORE_ARRAY)
	      AREA_PTR = AREA_PTR - 1
	      GOTO 9000
	   ENDIF
	ENDIF
C
C read the attribute list
C
	OK = READ_ATTRIBUTES(SCAN, 'area', AREA(5,AREA_PTR),
     &	                  AREA(6,AREA_PTR),ATTR_NAM,ATTR_VAL,ATTR_PTR)
	IF (.NOT.OK) GOTO 9000
C
C how many relations are there?
C
	OK = READ_INTEGER( RELATION_COUNT, 'relation count' )
	IF (.NOT.OK) GOTO 9000
C
C read them in
C
	OK = READ_RELATIONS(SCAN,'area to face',
     &				FACE_IDS,FACE_IDS_PTR,
     &				AREA(2,AREA_PTR),AREA(3,AREA_PTR),MAX)
	IF (.NOT.OK) GOTO 9000
C
9000	READ_SIMPLE_AREA = OK
	RETURN
	END
