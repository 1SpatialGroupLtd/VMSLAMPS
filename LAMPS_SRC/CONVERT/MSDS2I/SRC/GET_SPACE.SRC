	LOGICAL FUNCTION GET_SPACE
C
***	IDENT	15FE90
***	MODULE	GET_SPACE
C
C Copyright (C) LaserScan Laboratories Ltd, Cambridge, England
C Author R.W. Russell, 12 February 1990
C
C To get work space for local arrays, and to rewind the MSDS file ready
C to read it again
C
	IMPLICIT NONE
C
C Messages
C
	INCLUDE	'LSL$CMNLSL:LSLLIBMSG.PAR'
	INCLUDE	'HERE:MSDS2IMSG.PAR'
C
C Common files
C
	INCLUDE	'HERE:LUNS.PAR'
	INCLUDE	'HERE:STRUCTURES.PAR'
C
	INCLUDE	'LSL$CMNLSL:FILENAME.CMN'
	INCLUDE 'HERE:COMMANDS.CMN'
	INCLUDE 'HERE:EDGES.CMN'
	INCLUDE	'HERE:FILES.CMN'
	INCLUDE	'HERE:STRUCTURES.CMN'
C
C Functions
C
	LOGICAL		FLRREW		! rewind selected file
	LOGICAL		LIB$GET_VM
C
C Workspace
C
	LOGICAL		OK		! function return
	INTEGER		IERR		! ditto
C
C *****************************************************************************
C
C get the amount of space required for arrays in STRUCTURES.CMN
	IF (AREA_PTR.GT.0) THEN
	   OK = LIB$GET_VM(AREA_PTR*AREA_WIDTH*4,ADDR_AREA)
	   IF (.NOT.OK) GOTO 1000
	ENDIF
C
	IF (LINE_PTR.GT.0) THEN
	   OK = LIB$GET_VM(LINE_PTR*LINE_WIDTH*4,ADDR_LINE)
	   IF (.NOT.OK) GOTO 1000
	ENDIF
C
	IF (POINT_PTR.GT.0) THEN
	   OK = LIB$GET_VM(POINT_PTR*POINT_WIDTH*4,ADDR_POINT)
	   IF (.NOT.OK) GOTO 1000
	ENDIF
C
	IF (EDGE_PTR.GT.0) THEN
	   OK = LIB$GET_VM(EDGE_PTR*EDGE_WIDTH*4,ADDR_EDGE)
	   IF (.NOT.OK) GOTO 1000
	ENDIF
C
	IF (NODE_PTR.GT.0) THEN
	   OK = LIB$GET_VM(NODE_PTR*NODE_WIDTH*4,ADDR_NODE)
	   IF (.NOT.OK) GOTO 1000
	ENDIF
C
	IF (COORDS_PTR.GT.0) THEN
	   OK = LIB$GET_VM(COORDS_PTR*COORDS_WIDTH*4,ADDR_COORDS)
	   IF (.NOT.OK) GOTO 1000
	ENDIF
C
	IF (FACE_IDS_PTR.GT.0) THEN
	   OK = LIB$GET_VM(FACE_IDS_PTR*4,ADDR_FACE_IDS)
	   IF (.NOT.OK) GOTO 1000
	ENDIF
C
	IF (OEDGE_IDS_PTR.GT.0) THEN
	   OK = LIB$GET_VM(OEDGE_IDS_PTR*4,ADDR_OEDGE_IDS)
	   IF (.NOT.OK) GOTO 1000
	ENDIF
C
	IF (NODE_IDS_PTR.GT.0) THEN
	   OK = LIB$GET_VM(NODE_IDS_PTR*4,ADDR_NODE_IDS)
	   IF (.NOT.OK) GOTO 1000
	ENDIF
C
	IF (LINE_IDS_PTR.GT.0) THEN
	   OK = LIB$GET_VM(LINE_IDS_PTR*4,ADDR_LINE_IDS)
	   IF (.NOT.OK) GOTO 1000
	ENDIF
C
	IF (ATTR_PTR.GT.0) THEN
	   OK = LIB$GET_VM(ATTR_PTR*DESC_WIDTH*4,ADDR_ATTR_NAM)
	   IF (.NOT.OK) GOTO 1000
	   OK = LIB$GET_VM(ATTR_PTR*DESC_WIDTH*4,ADDR_ATTR_VAL)
	   IF (.NOT.OK) GOTO 1000
	ENDIF
C
C get space for features that have been ignored
	IF ((AREA_PTR+LINE_PTR+POINT_PTR).GT.0) THEN
	   OK = LIB$GET_VM((AREA_PTR+LINE_PTR+POINT_PTR)*
     &	                     IGNORE_WIDTH*4,ADDR_IGNORE)
	   IF (.NOT.OK) GOTO 1000
	ENDIF
	
C
C get space for EDGE_IX arrays
	MAX_EDGE_INDICES = MAX(MAX_FACE,MAX_OEDGE)*AVE_EDGES_PER_FACE
	IF (MAX_EDGE_INDICES.GT.0) THEN
	   OK = LIB$GET_VM(MAX_EDGE_INDICES*EDGE_IX_WIDTH*4,ADDR_EDGE_IX)
	   IF (.NOT.OK) GOTO 1000
	ENDIF
C
	GOTO 2000
C
C error getting virtual memory
1000	CALL LSL_PUTMSG(MSDS2I__NOVIRTMEM)
	CALL LSL_ADDMSG(OK)
	GOTO 9999
C
C Rewind the input MSDS dataset
C
2000	OK = FLRREW( INFILE_LUN, IERR )
	IF (OK) THEN
	   IF (HAD_LOG)
     &	      CALL LSL_PUTMSG(MSDS2I__MSDSREWOUND,INFILE)
	ELSE
	   CALL LSL_PUTMSG(MSDS2I__MSDSREWIND,INFILE)
	   CALL LSL_ADDMSG(OK)
	   IF (OK.EQ.LSL__SYSOPEN) CALL LSL_ADDMSG(IERR)
	ENDIF
C
9999	GET_SPACE = OK
	RETURN
	END
