	LOGICAL FUNCTION WRITE_ATTRIBUTES(START,END,ATTR_NAM,ATTR_VAL)
C
***	IDENT	13FE90
***	MODULE	WRITE_ATTRIBUTES
C
C Copyright (C) LaserScan Laboratories Ltd, Cambridge, England
C Author TJ Ibbs, 19 February 1988
C
C This routine writes out the attributes for a feature
C It returns TRUE if all went well, and FALSE otherwise
C
	IMPLICIT NONE
C
C Arguments
C
	INTEGER		START		! start of attributes in ATTRIBUTES
	INTEGER		END		! end of ditto
	INTEGER		ATTR_NAM(2,*)
	INTEGER		ATTR_VAL(2,*)
C
C Message files
C
	INCLUDE	'HERE:MSDS2IMSG.PAR'
C
C Common files
C
	INCLUDE	'HERE:COMMANDS.CMN'
	INCLUDE	'HERE:STRUCTURES.PAR'
C
	INCLUDE	'($DSCDEF)'
C
C functions
	INTEGER	STR$COPY_DX
	INTEGER	STR$CONCAT
C
C Workspace
C
	LOGICAL		OK		! function return
	INTEGER		I		! position in ATTRIBUTES
	INTEGER		LENGTH
C
	INTEGER*4	STRING(2)
	INTEGER*2	STRINGW(4)
	BYTE		B(4)
	EQUIVALENCE	(B,STRING,STRINGW)
	DATA		B/0,0,0,DSC$K_CLASS_D/
C
	CHARACTER*(MAX_NAM_LEN) EMPTY
	DATA		EMPTY/' '/
C
C *****************************************************************************
C
	OK = .TRUE.		! assume success
	IF (DEBUG_IFF) CALL WRITEF('Outputting %N attributes',END-START+1)
C
C Loop outputting each attribute in turn
C
	DO 2000 I = START,END
C
C	 get the attribute into a standard form
C
	   OK = STR$COPY_DX(STRING,ATTR_NAM(1,I))
	   IF (.NOT.OK) GOTO 9000
	   LENGTH = STRINGW(1)			! convert to long
	   CALL STR$REPLACE(STRING,EMPTY,1,LENGTH,STRING)
	   OK = STR$CONCAT(STRING,STRING,'=',ATTR_VAL(1,I))
	   IF (.NOT.OK) GOTO 9000
C
	   CALL IFFAC( 6, 0, %VAL(STRING(2)), STRINGW(1) )
C
2000	CONTINUE
C
9000	IF (.NOT.OK) THEN
	   CALL LSL_PUTMSG(MSDS2I__STRNGERR)
	   CALL LSL_ADDMSG(OK)
	ENDIF
	WRITE_ATTRIBUTES = OK
	RETURN
	END
