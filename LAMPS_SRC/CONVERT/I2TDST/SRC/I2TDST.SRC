	PROGRAM	I2TDST
C
***	MODULE	I2TDST
***	IDENT	16MR89
C
C	Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C	Author 		Andrew Trigg, 7th June 1988
C	Modified	Paul Pan, 14th February 1990
C
C	To convert IFF data into Sysscan's DST ASCII format
C
	IMPLICIT NONE
C
C Common:
	INCLUDE		'LSL$CMNLSL:CLD.CMN'
	INCLUDE		'LSL$CMNLSL:FILENAME.CMN'
	INCLUDE		'LSL$CMNLSL:STATUS.CMN'
	INCLUDE		'HERE:I2TDST.CMN'
	INCLUDE		'HERE:I2TDSTMSG.PAR'
C
C	Declarations
C
	LOGICAL		NOK,OK,ABSENT
	LOGICAL		HAD_SEMI		!version number present?
	LOGICAL		FPRES,FNEGA
	INTEGER		IJK
	INTEGER		THERE			!qualifier there?
	EXTERNAL	I2TDST_CLD
C
C Functions
	INTEGER 	LSL_INIT
	INTEGER 	DCL_STARTUP		!Gets parsed command line
	INTEGER 	DCL_QUAL		!Reads and parses qualifiers
	INTEGER 	DCL_FILE		!Reads and parses filenames
	LOGICAL 	DSTCONV			!Does the actual conversion
	LOGICAL 	FLWOPN			!Opens file for write
	LOGICAL		FLWSEL			!Selects file for write
	LOGICAL		IFFOPEN			!Opens IFF file for read
	LOGICAL		FLROPN			!Opens file for read
	LOGICAL 	FRTINI			!Initialises frtlib
	LOGICAL 	IFFCREATE		!Creates new IFF file
	LOGICAL		DOCONV			!Converts data
C
C	Initialise IFFLIB, LSLLIB 
C
	FSN=0
	CALL IFFTDY
	CALL LSL_INIT
C
C       DCL decoding
C
	OK=DCL_STARTUP('I2TDST',.FALSE.,I2TDST_CLD,.TRUE.)
	IF(.NOT.OK) THEN
	   CALL LSL_PUTMSG(IDST__UNAREADCMD)
	   GOTO 1000
	ENDIF
C
C	Get input filename
C
	OK=DCL_FILE('P1','LSL$IF:IFF.IFF',ABSENT,.FALSE.,.TRUE.)
	IF(OK) THEN
	   CALL EXPFLN(IFFFIL,IFFLEN)
        ELSE
	   CALL LSL_PUTMSG(IDST__UNAREADIFF)
	   GOTO 1000
	END IF
C
C	Get output filename
C
	OK=DCL_FILE('P2','LSL$DST:TDST.TDST',ABSENT,.FALSE.,.TRUE.)
	IF(OK) THEN
	   CALL EXPFLN(DSTFIL,DSTLEN)
        ELSE
	   CALL LSL_PUTMSG(IDST__UNAREADDST)
	   GOTO 1000
	END IF
C
C 	Check if we've got FRT qualifier 
C
	OK=DCL_QUAL('FRT',THERE,FPRES,FNEGA,.TRUE.)
	IF(.NOT.OK) THEN
	   CALL LSL_PUTMSG(IDST__UNAREADFRT)
	   GOTO 1000
	ENDIF
C
C	Get FRT filename
C
	IF(THERE) THEN
	   OK=DCL_FILE('FRT','LSL$FRT:FRT.FRT',ABSENT,.FALSE.,.TRUE.)
	   IF(OK) THEN
	      CALL EXPFLN(FRTFIL,FRTLEN)
           ELSE
	      CALL LSL_PUTMSG(IDST__UNAREADFRT)
	      GOTO 1000
	   END IF
	ELSE 
	   CALL LSL_PUTMSG(IDST__UNAREADFRT)
	   GOTO 1000
	END IF
C
C 	Check if we've got BNT qualifier 
C
	OK=DCL_QUAL('BNT',THERE,FPRES,FNEGA,.TRUE.)
	IF(.NOT.OK) THEN
	   CALL LSL_PUTMSG(IDST__UNAREADBNT)
	   GOTO 1000
	ENDIF
C
C	Get BNT filename
C
	IF(THERE) THEN
	   OK=DCL_FILE('BNT','LSL$BNT:BNT.BNT;0',ABSENT,.FALSE.,.TRUE.)
	   IF(OK) THEN
	      CALL EXPFLN(BNTFIL,BNTLEN)
           ELSE
	      CALL LSL_PUTMSG(IDST__UNAREADBNT)
	      GOTO 1000
	   END IF
	ELSE 
	   CALL LSL_PUTMSG(IDST__UNAREADBNT)
	   GOTO 1000
	END IF
C
C	Open input IFF file
C
	OK=IFFOPEN(1,IFFFIL)
	IF(.NOT.OK) THEN
	   CALL LSL_PUTMSG(IDST__UNAOPNIFF,IFFFIL)
	   GOTO 1000
	ENDIF
C
C	Create output DST file
C
	OK=FLWOPN(DSTLUN,DSTFIL)
	IF(.NOT.OK) THEN
	   CALL LSL_PUTMSG(IDST__UNACREDST,DSTFIL)
	   CALL LSL_ADDMSG(OK)
	   GOTO 1000
	END IF
C
C	Select TDST file for write
C
	OK=FLWSEL(DSTLUN)
	IF(.NOT.OK) THEN
	   CALL LSL_PUTMSG(IDST__UNASELWRI,DSTFIL)
	   GOTO 1000
	END IF
C
C	Open FRT file and initialise FRTLIB
C
	NOK=FRTINI(FRTFIL)
 	IF(NOK) THEN
	   CALL LSL_PUTMSG(IDST__UNAOPNFRT,FRTFIL)
	   CALL LSL_ADDMSG(NOK)
	   GOTO 1000
	END IF
C
C	Do the main body of the work converting from input to output
C
	OK=DOCONV()	
C
C	All done
C
1000	CALL LSL_EXIT(OK)
	STOP
	END
