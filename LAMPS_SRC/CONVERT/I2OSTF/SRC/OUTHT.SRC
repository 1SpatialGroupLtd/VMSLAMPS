C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1988-12-07 17:08:28.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE OUTHT(Z_IN,DZ_IN,CAPZ_IN,FSN)
C
***	IDENT	07DE88
***	MODULE	OUTHT
C
C	Copyright LaserScan Laboratories Ltd, Cambridge, England
C
C	Created					RJH	11-Dec-1987
C
C Description
C
C	Output OSTF+ height record
C
	IMPLICIT NONE
C
C Arguments
C
	REAL		Z_IN		! height
	REAL		DZ_IN		! difference in height
	INTEGER		CAPZ_IN		! height capture method
	INTEGER		FSN		! feature being output
C
C Common Blocks
C
	INCLUDE	'LSL$CMNIFF:CB.STR'
C
***	COMMON/HERE:ATTRIBUTES/		! for attribute codes
C
C Local Variables
C
	REAL		Z_TMP		! height
	INTEGER		Z_INT		! as an integer
	REAL		DZ_TMP		! difference in height
	INTEGER		DZ_INT		! as an integer
	EQUIVALENCE	(Z_TMP,Z_INT)
	EQUIVALENCE	(DZ_TMP,DZ_INT)
C
	INTEGER		N		! OSTF+ flag
C
	INTEGER		Z_OUT		! height (cm)
	INTEGER		DZ_OUT		! difference in height (deci)
	INTEGER		CAPZ_TMP	! capture method
	BYTE		CAPZ_OUT	! as a byte for output
	EQUIVALENCE	(CAPZ_TMP,CAPZ_OUT)
C
	BYTE		BUF_OUT(8)	! output buffer
C
C copy arguments
C
	Z_TMP = Z_IN
	DZ_TMP = DZ_IN
C
C set the record flag
C
	N = -24
C
C output the first record which consists of the flag and the difference 
C in height - if there is no difference in height, output blanks
C
	IF (DZ_INT .EQ. IFF_ABSENT) THEN
	   CALL EXPAND('%W%I4    ',BUF_OUT,N)
	   CALL FORMD(BUF_OUT)
	ELSE
	   DZ_OUT = NINT(DZ_IN * 10.0)
	   CALL FORMB(N,DZ_OUT)
	ENDIF
C
C set the capture method - if there isn't one, it will be set as unknown
C
	CAPZ_TMP = CAPZ_IN
	CALL CHECK_CHAR_ATT(CAPZ_TMP,RNGE_CAPZ,'CAPTURE_Z',FSN)
C
C set up the second record consisting of the capture method and height -
C if there is no height, output blanks
C
	IF (Z_INT .EQ. IFF_ABSENT) THEN
	   CALL EXPAND('%W%A1       ',BUF_OUT,CAPZ_OUT)
	ELSE
	   Z_OUT = NINT(Z_IN * 100.0)
	   CALL EXPAND('%W%A1 %I6',BUF_OUT,CAPZ_OUT,Z_OUT)
	ENDIF
C
C and output it
C
	CALL FORMD(BUF_OUT)
C
C Return 
C
	RETURN
	END
