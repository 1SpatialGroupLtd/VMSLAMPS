	SUBROUTINE PUTREC
C
***	IDENT	06DE90
***	MODULE	PUTREC
C
C	Copyright LaserScan Laboratories Ltd., Cambridge, England
C
C to output a record of data into the current block
C
Cmod	Alter source of SSDEF		RWR	18-Sep-84
c
C Author TJ Ibbs, 28 april 1982
C
	IMPLICIT NONE
C
	INCLUDE '($SSDEF)'
	INCLUDE	'HERE:I2OSTFMSG.PAR'
	INCLUDE 'LSL$CMNIFF:MHDMB.CMN'		! file containing MHBYTC
C
***	COMMON/HERE:BUF/
***	COMMON/HERE:COMMANDS/
C
C
	INTEGER*4	LIB$TRA_ASC_EBC	! translate ASCII to EBCDIC
C
	INTEGER		I		! workspace
	INTEGER*4	IERR		! System error
	CHARACTER*8	RECSTR		! String equivalenced onto RECBUF
	LOGICAL		VALIDREC	! everything but -6 is a valid 
C					! record to be counted
	EQUIVALENCE (RECBUF(1),RECSTR)
C
C------------------------------------------------------------------------------
C
C Test string
C
	VALIDREC = .TRUE.
	IF ( BYTE_COUNT ) THEN
	   IF ( RECSTR(1:4).EQ.'  -1' ) COUNTING = .TRUE.
	   IF ( RECSTR(1:4).EQ.'  -6' ) VALIDREC = .FALSE.
	   IF ( RECSTR(1:4).EQ.'  -2' ) THEN
	      MHBYTC = MHBYTC + 8
	      COUNTING = .FALSE.
	   ENDIF
	ENDIF
C
	IF (.NOT.ASCII) THEN
C
C	 translate to EBCDIC before outputting the text
C	 (note, we translate our string back into itself)
C
	   IERR = LIB$TRA_ASC_EBC(RECDSC, RECDSC)
	   IF (IERR.NE.SS$_NORMAL) THEN
	      CALL LSL_PUTMSG( I2OSTF__TRANEBC, BLKCNT, BLKPTR )
	      CALL LSL_ADDMSG( IERR )
	   ENDIF
C
	ENDIF
C
	DO 10 I = 1,8
	   BLKPTR = BLKPTR+1
	   BLKBUF(BLKPTR) = RECBUF(I)
	   IF ( COUNTING.AND.VALIDREC ) CALL COUNT_CH( RECBUF(I) )
10	CONTINUE
C
	RECPTR = 0		! record empty now
C
C note that BLKLEN should be a multiple of 8
C
	IF (BLKPTR.GE.BLKLEN) CALL FLUSH	! output full block
C
	RETURN
	END
