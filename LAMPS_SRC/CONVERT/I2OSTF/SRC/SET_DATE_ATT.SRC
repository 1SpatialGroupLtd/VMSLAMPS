C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1997-02-21 19:05:56.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL FUNCTION SET_DATE_ATT(ATT_VAL,ATT_RANGE,ATT_NAME,FSN,
     &	                                DATE_BUF)
C
***	IDENT	21FE97
***	MODULE	SET_DATE_ATT
C
C	Copyright Laser-Scan Laboratories Ltd., Cambridge, England
C
C	Created					RJH	08-Dec-1988
C
C Description
C
C	Check a date attribute value. This will be either a survey date 
C	or a change date.
C
C	It is assumed that ATT_VAL will not be zero.
C
	IMPLICIT NONE
C
C Arguments
C
	INTEGER		ATT_VAL		! attribute value as an integer
	INTEGER		ATT_RANGE(2)	! allowable range of them
	CHARACTER*(*)	ATT_NAME	! attribute name
	INTEGER		FSN		! feature being output
	BYTE		DATE_BUF(4)	! output buffer for date
C
C Parameters
C
	INCLUDE	'HERE:I2OSTFMSG.PAR'	! error numbers
C
C Functions called
C
	LOGICAL		CVT_DAY_DMY	! convert date to day,month,year
C
C Local Variables
C
	INTEGER		DAY,MONTH,YEAR	! day, month, year
C
C Assume we will be successful
C
	SET_DATE_ATT = .TRUE.
C
C First check that the date is within range
C
	IF (ATT_VAL .LT. ATT_RANGE(1) .OR. 
     &	    ATT_VAL .GT. ATT_RANGE(2)) THEN
 	   CALL LSL_PUTMSG( I2OSTF__BADDATE, ATT_VAL, ATT_NAME, FSN )
	   CALL LSL_ADDMSG( I2OSTF__USEBLANK, ATT_NAME )
	   SET_DATE_ATT = .FALSE.
	ELSEIF (CVT_DAY_DMY(ATT_VAL,DAY,MONTH,YEAR)) THEN
	   YEAR = MOD(YEAR, 100)
	   CALL EXPAND('%P0%W%I2%I2',DATE_BUF,YEAR,MONTH)
	ELSE
	   CALL LSL_PUTMSG( I2OSTF__INVALDATE, ATT_VAL, ATT_NAME, FSN )
	   CALL LSL_ADDMSG( I2OSTF__USEBLANK, ATT_NAME )
	   SET_DATE_ATT = .FALSE.
	ENDIF
C
C Return 
C
	RETURN
	END
