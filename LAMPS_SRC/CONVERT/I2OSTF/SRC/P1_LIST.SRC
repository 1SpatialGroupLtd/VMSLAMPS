C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1986-06-24 15:30:58.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL FUNCTION P1_LIST( ALL_SIM )
C
***	IDENT	24JN86
***	MODULE	P1_LIST
C
C Copyright (C) LaserScan Laboratories Ltd, Cambridge, England
C
C Author TJ Ibbs, 19 June 1986
C
C To read the list of inout filenames from the command line
C
C We return TRUE if something has gone wrong, and we should exit,
C and otherwise FALSE
C
	IMPLICIT NONE
C
C argument
C
	LOGICAL		ALL_SIM		! true if assume all files SIM
C
C included data
C
	INCLUDE	'LSL$CMNLSL:LSLLIBMSG.PAR'	! LSLLIB errors
	INCLUDE	'HERE:I2OSTFMSG.PAR'		! local errors
C
	INCLUDE	'LSL$CMNLSL:FILENAME.CMN'	! filename parsing
	INCLUDE	'LSL$CMNLSL:CLD.CMN'		! command line decoding
C
	INCLUDE	'HERE:COMMANDS.CMN'		! decoded command line
C
C functions
C
	LOGICAL		DCL_FILE
C
C workspace
C
	LOGICAL		OK		! return from functions
	INTEGER		IERR		! secondary return
	LOGICAL		ABSENT		! true if thing is absent
	INTEGER		I
C
C **********************************************************************
C assume the worst
C
	P1_LIST = .TRUE.
C
C and read the list of filenames
C
	OK = DCL_FILE(  'INFILE',	! the parameter name
     &			'LSL$IF:.IFF;0',! the default name
     &			ABSENT,		! out - was it absent
     &			.TRUE.,		! it is a list
     &			.TRUE. )	! it can report its own errors
C
	IF ( .NOT.OK ) GOTO 9999
C
C ABSENT should be iirelevant, so ignore it
C
C - the list of files are in /CLD/ FILARY, and there are NUMFIL of them
C
	IF ( NUMFIL.GT.INMAX ) THEN
	   CALL LSL_PUTMSG( I2OSTF__MAXINFILE, INMAX )
	   GOTO 9999
	ENDIF
C
C - we shall now copy them somewhere more convenient
C
	DO 200 I = 1,NUMFIL
	   INLEN(I)  = FIL_LEN(I)
	   INFILE(I) = FILARY(I)(:INLEN(I))
	   SIM(I)    = ALL_SIM
200	CONTINUE
C
	INCOUNT = NUMFIL
C
C **********************************************************************
C if we reach here, then we may assume that we have succeeded in
C reading in the list of names
C
 	P1_LIST = .FALSE.
C
9999	RETURN
	END
