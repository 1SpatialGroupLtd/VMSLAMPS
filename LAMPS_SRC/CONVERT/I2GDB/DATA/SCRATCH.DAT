	 
	 if (had_debug)
	 {
	    printf("CB %d %d\n", v_info.npts, v_info.flags);
	 }
	 
	 if !(v_info.flags & PEN_DOWN)
	 {
	    /* output the old coordinate buffer,
	     * initialise a new one
	     */
	    v_info.curr_pt_nr = 1;
	    output();
	    vtot = 0;
	    
	    /* set start vertex */
	    v_info.start_vertex.x = xbuf[0];
	    v_info.start_vertex.y = ybuf[0];
	  }

	  for (i = 0; i < v_info.npts; i++ )
	  {
	     v_info.vertex[vtot].x = xbuf[i];
	     v_info.vertex[vtot].y = ybuf[i];
	     if (v_info.zset)   v_info.vertex[vtot].z = zbuf[i];
	     vtot++;
	     
	     if ((v_info.npts % (max_vertices-1))==2)
		{
		if (vtot==max_vertices-1)
	           {
		   /* too many coords,
		    * output buffer
		    */
		    output();
		    CB_split_into_sections = TRUE;

		    if ( i < (v_info.npts-1) )
		      {
			/* start another buffer if more points to come
			 * last point of old becomes first point of new
			 */
			v_info.vertex[0] = v_info.vertex[vtot - 1];
			vtot = 1;
		      }
		    else {vtot=0;}
		  }
		}
	       else {
		 if (vtot==max_vertices)
		   {
		     /* too many coords,
		      * output buffer
		      */
		     output();
		     CB_split_into_sections = TRUE;

		     if ( i < (v_info.npts-1) )
		       {
			 /* start another buffer if more points to come
			  * last point of old becomes first point of new
			  */
			 v_info.vertex[0] = v_info.vertex[vtot - 1];
			 vtot = 1;
		       }
		     else {vtot=0;}
		   }
	       }
	    }	      
       
	 
	 break;
	 
      case AC:
	 
	 if (had_debug) printf ("%2.2s\n",(char *) &entry_code);

	 for ( i = 0; i < 256; i++)
