C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1989-06-20 09:27:20.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL FUNCTION STAPRO(NEWDAT)
C
***	IDENT	20JN89
***	MODULE	STAPRO
C
C	Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C	Based on CAD2IMAP STAPRO		RJH	15-Jun-1989
C
C	CONVERT I2IMAP Utility - Prepare for new data element
C
C Description
C
C	If necessary, closes down previous datatype and opens files for 
C	new datatype
C
	IMPLICIT NONE
C
C Parameter Files
C
	INCLUDE 'CMN:I2IMAPMSG.PAR'	! message definitions
C
C Arguments
C
	INTEGER*2	NEWDAT		! new datatype
C
C Common Blocks
C
	INCLUDE 'CMN:CALOG.CMN'		! flags
	INCLUDE 'CMN:FILES.CMN'		! filenames
	INCLUDE 'CMN:INFACE.CMN'	! INFORMAP data
C
C Local Variables
C
	REAL*8		X0,Y0		! coords of centre of drawing
	INTEGER*2	OPNFLG		! open flag
	INTEGER*2	KIND		! kind
	INTEGER*2	PREC		! data type precision
	INTEGER*2	IERR		! error code
	LOGICAL		ERROR		! failed ?
C
C Initialisation
C
	ERROR = .FALSE.
C
C If new data type different to last, first close previous files if 
C there are some open
C
	IF (NEWDAT .NE. MTYP) THEN
	   IF (MTYP .GT. 0) CALL TIDYWT		! was set to 0 at start
C
C Next set the new data type
C
	   MTYP = NEWDAT
C
C Set the open flag
C
	   OPNFLG = 0
C
C Open the appropriate files for the new data type
C
	   CALL PUTINF( GRALUN,		! in - graphic file LUN
     &			NGRLUN,		! in - non-graphic file LUN
     &			JSCHNM,		! in - schema name
     &			MTYP,		! in - data type to open
     &			JDRNM,		! in - drawing name
     &			OPNFLG,		! in - open flag
     &		        XM1,YM1,	!i/o - drawing SW corner
     &			XM2,YM2,	!i/o - drawing NE corner
     &			X0,Y0,		!out - centre of drawing
     &			DEL,		!i/o - drawing enlargement
     &			KIND,		!out - graphic type or error
     &			NGLEN,		!out - attribute record length
     &		        PREC,		!out - data type precision
     &			IERR		!out - error flag
     &		      )
C
C If that worked, mask the kind down to 4 bits
C
	   IF (IERR .EQ. 0) THEN
	      DATKND = (KIND .AND. 'F'X)
C
C Otherwise, output a message
C
	   ELSE
	      CALL LSL_PUTMSG(I2IMAP__PUTINF,MTYP)
	      ERROR = .TRUE.
	   ENDIF
	ENDIF
C
C Set things up for a pen-up move (i.e. the start of a new feature)
C
	IF (.NOT. ERROR) THEN
	   CURR_BUTN	= GREEN		! start feature with a pen up
	   NEW_NG       = .TRUE.	! write new non-graphic record
	   CALL FILLNG(NGARY)		! initialise non-graphic record
	ENDIF
C
C Assign function value
C
	STAPRO = (.NOT. ERROR)
C
C Return
C
	RETURN
	END
