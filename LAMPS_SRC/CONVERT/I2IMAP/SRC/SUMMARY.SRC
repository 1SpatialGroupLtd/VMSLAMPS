C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1989-02-03 10:39:14.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL FUNCTION SUMMARY
C
***	IDENT	06MR89
***	MODULE	SUMMARY
C
C	Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C	Created					ADT	03-Feb-1989
C
C	CONVERT I2IMAP Utility - Output summary file
C
C Description
C
C	Outputs summary details of the conversion process. After stage I of the
C	DEC/BGAS contract this includes the number of features with unknown 
C	feature codes, and the number of coordinate range errors.
C
C	Returns FALSE if something drastic goes wrong, TRUE otherwise
C
	IMPLICIT NONE
C
C Included Parameter Files
C
	INCLUDE 'CMN:I2IMAPMSG.PAR'	    ! message definitions
	INCLUDE 'LSL$CMNLSL:LSLLIBMSG.PAR'  ! LSLLIB message definitions
C
C Local Parameters
C
	BYTE		PLING		! comment delimiter
	PARAMETER	(PLING = '!')
C
C Common Blocks
C
	INCLUDE 'CMN:CAINT.CMN'		! feature description table
	INCLUDE 'CMN:CALOG.CMN'		! flags
	INCLUDE 'CMN:FILES.CMN'		! filenames
	INCLUDE 'LSL$CMNLSL:CMDCOM.CMN'	! command decoding
	INCLUDE 'LSL$CMNLSL:STATUS.CMN'	! LSLLIB status flag
C
C Functions called
C
	INTEGER*4	FLWOPN		! open file for writing
	INTEGER*4	FLWCLO		! close file for writing
	INTEGER*4	FLWLIN		! writes a line to file
	INTEGER*4	RDCOMM		! read a command
	LOGICAL		RDCHS		! read next character
	LOGICAL		RDFDT		! read a feature description
	LOGICAL		RDADT		! read an ancillary code descr.
C
C Local Variables
C
	INTEGER*4	LINE		! count line numbers
	INTEGER*4	I		! counter
	INTEGER*4	RESULT		! command read result
	INTEGER*4	ERRCOD		! LSLLIB error code
	INTEGER*4	RETCOD		! system error code
	BYTE		CH		! character read
	CHARACTER*23    DATE_TIME       ! current time and date
C
C Assume that everything goes well
C
	SUMMARY = .TRUE.
C
C Open the summary file for write
C
	ERRCOD = FLWOPN(SUMLUN,SUMFIL,RETCOD)
C
C Check for successful conclusion
C	
	IF (.NOT.ERRCOD) THEN
	   CALL LSL_PUTMSG(I2IMAP__ERROPNSUM,SUMFIL(1:SUMLEN))
	   CALL LSL_ADDMSG(ERRCOD)
	   IF (ERRCOD .EQ. LSL__SYSOPEN) CALL LSL_ADDMSG(RETCOD)
	   SUMMARY = .FALSE.
	   GOTO 9999
	END IF
C
C Write header details to summary file
C
	CALL EXPAND('!')
	CALL FLWLIN(,,RETCOD)
	CALL LIB$DATE_TIME(DATE_TIME)
	CALL EXPAND('! I2IMAP summary for %S, at %S',
     +DRWFIL(1:DRWLEN),DATE_TIME)
	CALL FLWLIN(,,RETCOD)
	CALL EXPAND('!')
	CALL FLWLIN(,,RETCOD)
C
C If the user wants to know then keep him informed
C
	IF(HAD_LOG)CALL LSL_PUTMSG(I2IMAP__WRITESUM)
C
C Write FCE and CRE entries to summary table
C
	CALL EXPAND('FCE  %I8',NUNKFC)
	CALL FLWLIN(,,RETCOD)
	CALL EXPAND('CRE  %I8',NINVCO)
	CALL FLWLIN(,,RETCOD)
	CALL FLWCLO(SUMLUN)
C
C Return
C
9999	RETURN
	END
