	LOGICAL FUNCTION RDTEL
C
***	IDENT	06MR89
***	MODULE	RDTEL
C
C	Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C	Created, based on IFF2IMAP RDFDT	ADT	03-Feb-1989
C
C Description
C
C	Reads a TRANS_ERR_LINES entry in the parameter file
C
C	Expects the datatype just read to be in INTARG(1) in /CMDCOM/
C		the linetype just read to be in INTARG(2) in /CMDCOM/
C
C	Returns FALSE if something goes wrong with a command line, 
C	TRUE otherwise
C
	IMPLICIT NONE
C
C Included Parameter Files
C
	INCLUDE 'CMN:CHECK.PAR'		    ! input checks
	INCLUDE 'CMN:I2IMAPMSG.PAR'	    ! message definitions
	INCLUDE 'LSL$CMNLSL:LSLLIBMSG.PAR'  ! LSLLIB message definitions
C
C Common Blocks
C
	INCLUDE 'CMN:CALOG.CMN'		! flags
	INCLUDE 'CMN:CAINT.CMN'		! feature description table
	INCLUDE 'LSL$CMNLSL:CLD.CMN'	! DCL command decoding
	INCLUDE 'LSL$CMNLSL:CMDCOM.CMN'	! command decoding
	INCLUDE 'LSL$CMNLSL:EXCEPTION.CMN'	! number reading errors
C
C Functions called
C
	LOGICAL		RDINT		! reads integer
C
C Local Variables
C
	INTEGER*4	I		! counter
	INTEGER*4	PENNUM		! pen number
	INTEGER*4	LOW		! lowest height in range
	INTEGER*4	HIGH		! highest height in range
	INTEGER*4	CAT		! text category
	LOGICAL		NOTHING		! not a symbol ?
C
C Assume that everything goes well
C
	RDTEL = .TRUE.
C
C Check that the datatype is within the permissible range
C
	IF ( INTARG(1).LT.MIN_DTYPE .OR. INTARG(1).GT.MAX_DTYPE ) THEN
	   CALL LSL_PUTMSG(I2IMAP__BADDTYPE,INTARG(1))
	   GOTO 9999
	ELSE
	   DEF_LINE(3) = INTARG(1)
	ENDIF
C
C Do the same for the linetype
C
	IF ( INTARG(2).LT.MIN_LTYPE .OR. INTARG(2).GT.MAX_LTYPE ) THEN
	   CALL LSL_PUTMSG(I2IMAP__BADLTYPE,INTARG(2))
	   GOTO 9999
	ELSE
	   DEF_LINE(4) = INTARG(2)
	ENDIF
	GOTO 9000
C
C Errors
C
9999	RDTEL = .FALSE.		! failure
C
C Return
C
9000	RETURN
	END
