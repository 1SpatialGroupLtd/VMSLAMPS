	LOGICAL FUNCTION RDADT
C
***	IDENT	19MR91
***	MODULE	RDADT
C
C	Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C	Implemented				RJH	 2-Jun-1989
C	Created					RJH	24-Sep-1987
C
C	CONVERT I2IMAP Utility - Read ADT entry
C
C Description
C
C	Reads an attribute description table entry
C
C	Expects the secondary command number just read to be in 
C		SECMDN    in /CMDCOM/
C	    and (if the command was ADT CODE) the AC code to be in 
C		INTARG(1) in /CMDCOM/
C
C	Returns FALSE if something goes wrong with a command line, 
C	TRUE otherwise
C
	IMPLICIT NONE
C
C Included Parameter Files
C
	INCLUDE 'CMN:CHECK.PAR'		    ! input checks
	INCLUDE 'CMN:I2IMAPMSG.PAR'	    ! message definitions
C
C Common Blocks
C
	INCLUDE 'CMN:ATTRIBUTES.CMN'	! attribute description table
	INCLUDE	'LSL$CMNFRT:FRTACD.CMN'	! FRT ACD common block
	INCLUDE 'LSL$CMNLSL:CMDCOM.CMN'	! command decoding
C
C Functions called
C
	INTEGER*4	RDCOMM		! read a command
	LOGICAL		ACDFND		! find attribute code
	LOGICAL		ACDFND_NAME	! find attribute name
	LOGICAL		READ_NAM	! read attribute name
	LOGICAL		READ_DTR	! read range of data tyeps
	LOGICAL		UP_NAM		! check attribute name
C
C Local Variables
C
	CHARACTER*(ACD_NAME_MAX) THIS_NAME	! an attribute name
	INTEGER*4		 L		! its length
	INTEGER*4		 RESULT		! command read result
	INTEGER*4		 ERRVAL		!error value returned
C
C External declaration
C
	INTEGER*4	FLDCMD_CMD_TABLE
	EXTERNAL	FLDCMD_CMD_TABLE
C
C...............................................................................
C Assume that everything goes well
C
	RDADT = .TRUE.
C
C...............................................................................
C and get ready for a new attribute description
C
	ATTR_PTR = ATTR_PTR + 1
	IF (ATTR_PTR.GT.MAX_ATTR_NUM) THEN
	   CALL LSL_PUTMSG(I2IMAP__TOOMANYATTDES,MAX_ATTR_NUM)
	   GOTO 9999
	ENDIF
C
C...............................................................................
C Despatch according to secondary command
C
	GOTO (100,200) SECMDN
	CALL LSL_PUTMSG(I2IMAP__UNKCMD,SECNST)	! unknown command
	GOTO 9999
C
C...............................................................................
C	ADT CODE - we have already read the code so check that it is in range 
C
100	IF ( INTARG(1).LT.0 .OR. INTARG(1).GT.MAX_WORD ) THEN	!check range
	   CALL LSL_PUTMSG(I2IMAP__BADATTCODE,INTARG(1))
	   GOTO 9999
	ENDIF
C
	IF (ACDFND(INTARG(1),.FALSE.)) THEN			!get its details
	   CALL LSL_PUTMSG(I2IMAP__DEFAULTACD,INTARG(1))
	ENDIF
C
	GOTO 300
C
C	........................................................................
C	ADT NAME - read in the attribute name
C
200	IF (.NOT. READ_NAM(THIS_NAME,L)) GOTO 9999		!read name
C
	IF ( ACDFND_NAME(THIS_NAME(1:L),) ) THEN		!get details
	   CALL LSL_ADDMSG(I2IMAP__BADATTNAME,THIS_NAME(1:L))
	   GOTO 9999
	ENDIF
C
CMOD	........................................................................
C	remember the attributes for Annotation and its number
C
	IF (THIS_NAME(1:L).EQ.'STARTX') THEN
	  HAD_SX = .TRUE.
	  ATTR_SX = ACD_CODE
	ELSE IF (THIS_NAME(1:L).EQ.'STARTY') THEN
	  HAD_SY = .TRUE.
	  ATTR_SY = ACD_CODE
	ELSE IF (THIS_NAME(1:L).EQ.'ENDX') THEN
	  HAD_EX = .TRUE.
	  ATTR_EX = ACD_CODE
	ELSE IF (THIS_NAME(1:L).EQ.'ENDY') THEN
	  HAD_EY = .TRUE.
	  ATTR_EY = ACD_CODE
	ENDIF
C
C...............................................................................
C Now save the appropriate things
C
300	ATTR_TAB(ATTR_COD,ATTR_PTR) = ACD_CODE
	ATTR_TAB(ATTR_TYP,ATTR_PTR) = ACD_DATA_TYPE
C
C	........................................................................
C	Read the command describing the field in the IFF entry
C
	RESULT = RDCOMM(FLDCMD_CMD_TABLE)
	IF (RESULT .LE. 0) GOTO 9999
C
	GOTO (400,500) RESULT			! and despatch
	CALL LSL_PUTMSG(I2IMAP__UNKCMD,CMDNST)	! unknown command
	GOTO 9999
C
C...............................................................................
C
400	GOTO (410,420) SECMDN			! despatch again
	CALL LSL_PUTMSG(I2IMAP__UNKCMD,SECNST)	! unknown command
	GOTO 9999
C
C		................................................................
C		AC VALUE - just set the field indicator
C
410		ATTR_TAB(ATTR_FLD,ATTR_PTR) = AC_VAL
		GOTO 600
C
C		................................................................
C		AC TEXT - set the field indicator, and leave the type unset
C
420		ATTR_TAB(ATTR_FLD,ATTR_PTR) = AC_TEXT
		ATTR_TAB(ATTR_TYP,ATTR_PTR) = UNSET_VAL
		GOTO 600
C
C	.......................................................................
C	CB - just set the field indicator
C
500	ATTR_TAB(ATTR_FLD,ATTR_PTR) = CB_COL
C
C...............................................................................
C
600	IF (.NOT. READ_NAM(ATTR_NAM(ATTR_PTR),L)) GOTO 9999	!attribute name
	IF (.NOT. UP_NAM(ATTR_NAM(ATTR_PTR)(1:L))) GOTO 9999	!check name
C
C	........................................................................
C	read the range of datatypes for this attribute
C
	IF (.NOT. READ_DTR(ATTR_DTR(MIN_DTYPE,ATTR_PTR),MIN_DTYPE,MAX_DTYPE))
     &		 GOTO 9999
C
C	........................................................................
C	finish
C
	GOTO 9000			! success
C
C...............................................................................
C Errors
C
9999	RDADT = .FALSE.			! failure
	ATTR_PTR = ATTR_PTR - 1		! no need to unset anything else
C
C...............................................................................
C	check that all the required ACD names were found for Attr annotation
C
9000	IF (HAD_SX.AND.HAD_SY.AND.HAD_EX.AND.HAD_EY) DO_ANNOTATION = .TRUE.
C
	RETURN
	END
