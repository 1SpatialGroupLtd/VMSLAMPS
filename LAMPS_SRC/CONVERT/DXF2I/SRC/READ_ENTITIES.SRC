C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1993-06-10 19:52:08.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL*4 FUNCTION READ_ENTITIES()
C
***	MODULE READ_ENTITIES
***	IDENT 10JN93
C
C ©Copyright Laser Scan Ltd, Cambridge, England.
C
C Author  :  A.T. Timms					 2 Nov 1987
C Modified:  A.D. Trigg 				29 Jun 1988
C	     A.D. Trigg 				 6 Sep 1988  
C
C - number of possible coords in polylines increased from
C 200 to 1000 and therefore multiple ST entries also accounted for.
C
CMOD961 Remove duplicate IFFEM and IFFEJ commands	JB 23 Jan 1991
C
CMOD1226  Add /SCAN					JB 10 Jun 1993
C
C Function to read DXF file ENTITIES section
C
	IMPLICIT NONE
C
	INCLUDE  'LSL$CMNLSL:READSTR.PAR'
	INCLUDE  'LSL$CMNLSL:TXTC.CMN'
	INCLUDE  'LSL$CMNIFF:IFFHAN.CMN'
	INCLUDE  'LSL$CMNDXFPAR:LOOKUP.CMN'
	INCLUDE  'HERE:DXF2I.CMN'
	INCLUDE  'HERE:DXF2IMSG.PAR'
C
C Functions
	INTEGER		FLRLIN		! Read a line from file
	INTEGER		READSTR		! Get a string
	INTEGER		DXF_ARC		! Process arc entries
	INTEGER		DXF_CIRCLE	! Process circle entries
	INTEGER		DXF_INSERT	! Process insert entries
	INTEGER		DXF_LINE	! Process line entries
	INTEGER		DXF_POINT	! Process point entries
	INTEGER		DXF_POLYLINE	! Process polyline entries
	INTEGER		DXF_SOLID	! Process solid entries
	INTEGER		DXF_TEXT	! Process text entries
	INTEGER		DXF_TRACE	! Process trace entries
C
C Workspace
	CHARACTER*255	STRING		! Any old string
C
	INTEGER*4	LEN		! Length of character string
C
C.......................................................................
C
	IF (HAD_LOG) CALL LSL_PUTMSG(DXF2I__RDENSC)
C
	CALL FLRSEL(DXFLUN)
C
	IF (HAD_SCAN) THEN
	  CALL FLWSEL(SCANLUN)
	ELSE
	  CALL IFFSEL(IFFLUN)
	  CALL FLWSEL(IFFLUN)
	ENDIF
C
C Read the next line from the DXF file
C
	READ_ENTITIES = FLRLIN()
	IF (.NOT.READ_ENTITIES) GOTO 999
	NUMLIN = NUMLIN+1
C
50	READ_ENTITIES = FLRLIN()
	IF (.NOT.READ_ENTITIES) GOTO 999
	NUMLIN = NUMLIN+1
C
	CALL BSLN
	LEN = READSTR(STRING,,ON_EOL) 
	IF (LEN.EQ.0) GOTO 50 			! Account for null
C
C Delegate according to the contents of string
C
	IF (STRING(1:LEN).EQ.'0')  THEN
	   GOTO 50
C
	ELSEIF (STRING(1:LEN).EQ.'ENDSEC') THEN
	   GOTO 5000					! Done
C
	ELSEIF (STRING(1:LEN).EQ.'ENDBLK') THEN
	   GOTO 5000					! Done
C
C Three group types not dealt with by this conversion :
C
	ELSEIF (STRING(1:LEN).EQ.'ATTDEF') THEN
	   GOTO 50
C
	ELSEIF (STRING(1:LEN).EQ.'ATTRIB') THEN
	   GOTO 50
C
	ELSEIF (STRING(1:LEN).EQ.'SHAPE')  THEN
	   GOTO 50
C
C---------------------------------------------------------------------
C Insert - insert a symbol at the correct position - will not be a true
C representation of the DXF symbol until /SYMBOL is installed. 
C---------------------------------------------------------------------
C
	ELSEIF (STRING(1:LEN).EQ.'INSERT') THEN
	   PROCESS_OK = DXF_INSERT()
	   GOTO 1001
C
C---------------------------------------------------------------------
C Line
C---------------------------------------------------------------------
C
	ELSEIF (STRING(1:LEN).EQ.'LINE') THEN
	   PROCESS_OK = DXF_LINE()
	   GOTO 1001
C
C---------------------------------------------------------------------
C Point
C---------------------------------------------------------------------
C
	ELSEIF (STRING(1:LEN).EQ.'POINT') THEN
	   PROCESS_OK = DXF_POINT()
	   GOTO 1001
C
C---------------------------------------------------------------------
C Text
C---------------------------------------------------------------------
C
	ELSEIF (STRING(1:LEN).EQ.'TEXT') THEN
	   PROCESS_OK = DXF_TEXT()
	   GOTO 1001
C
C---------------------------------------------------------------------
C Polyline
C---------------------------------------------------------------------
C
	ELSEIF (STRING(1:LEN).EQ.'POLYLINE') THEN
	   PROCESS_OK = DXF_POLYLINE()
	   GOTO 1001
C
C---------------------------------------------------------------------
C Circle
C---------------------------------------------------------------------
C
	ELSEIF (STRING(1:LEN).EQ.'CIRCLE') THEN
	   PROCESS_OK = DXF_CIRCLE()
	   GOTO 1001
C
C---------------------------------------------------------------------
C Arc
C---------------------------------------------------------------------
C
	ELSEIF (STRING(1:LEN).EQ.'ARC') THEN
	   PROCESS_OK = DXF_ARC()
	   GOTO 1001
C
C---------------------------------------------------------------------
C Trace
C---------------------------------------------------------------------
C
	ELSEIF (STRING(1:LEN).EQ.'TRACE') THEN
	   PROCESS_OK = DXF_TRACE()
	   GOTO 1001
C
C---------------------------------------------------------------------
C Solid
C---------------------------------------------------------------------
C
	ELSEIF (STRING(1:LEN).EQ.'SOLID') THEN
	   PROCESS_OK = DXF_SOLID()
	   GOTO 1001
	ENDIF
C
C---------------------------------------------------------------------
C Account for value of unused group type
C
	READ_ENTITIES = FLRLIN()
	IF (.NOT.READ_ENTITIES) GOTO 999
C
	NUMLIN = NUMLIN + 1
	GOTO 50
C
C....................................................................
C statistics
C
1001	CONTINUE
C
	PROCESS_TOTAL = PROCESS_TOTAL + 1
	IF (PROCESS_OK) THEN
	   PROCESS_SUCC = PROCESS_SUCC + 1
	ELSE
	   PROCESS_FAIL = PROCESS_FAIL + 1
	ENDIF
C
	GOTO 50
C
C....................................................................
C exit
999	CALL LSL_PUTMSG(DXF2I__RDLINERR,NUMLIN)
C
5000	RETURN
	END
C
