	SUBROUTINE WRITE_HEADER
C
***	MODULE WRITE_HEADER
***	IDENT 30JN93
C
C	©Copyright Laser-Scan Ltd, Cambridge, England.
C 	Author						J Barber 7-Jun-1993
C
C 	Routine to write blank IFF file HEADER entries in the absence of 
C	any DXF header
C
	IMPLICIT NONE
C
	INCLUDE  'LSL$CMNLSL:READSTR.PAR'
	INCLUDE  'LSL$CMNIFF:IFFHAN.CMN'
	INCLUDE  'LSL$CMNIFF:MHDEF.CMN'
C	INCLUDE  'LSL$CMNIFF:MAPDES.CMN'
	INCLUDE  'LSL$CMNIFF:MD2DES.CMN'
	INCLUDE  'LSL$CMNDXFPAR:LOOKUP.CMN'
	INCLUDE  'HERE:DXF2I.CMN'
	INCLUDE  'HERE:DXF2IMSG.PAR'
C
C Workspace
	REAL		XY(4,4)			! Corner point array
	REAL		CFT(10,2)		! Cubic coefficients
	INTEGER		II,III,JJ,JJJ		! Loop variables
	INTEGER*2	FC(4)
C
C AC variable CHAR duplicates of CMN DEF_TEXT_HEIGHT,DEF_POINT_SIZE
C
	CHARACTER*255	TEXTSIZE,PDSIZE
	INTEGER		TEXTSIZE_LEN,PDSIZE_LEN
C
	CHARACTER*255	CECOLOR,CELTYPE
	LOGICAL		HAD_CECOLOR,HAD_CELTYPE
	INTEGER		CECOLOR_LEN,CELTYPE_LEN
C
C Header variables for AC's only
C
	CHARACTER*255	LUNITS,LUPREC,PDMODE
	INTEGER		LUNITS_LEN,LUPREC_LEN,PDMODE_LEN
	LOGICAL		HAD_LUNITS,HAD_LUPREC,HAD_PDMODE
C
	CHARACTER*255	TDCREATE,TDINDWG,TDUPDATE,TDUSRTIMER
	INTEGER		TDCREATE_LEN,TDINDWG_LEN
	INTEGER		TDUPDATE_LEN,TDUSRTIMER_LEN
	LOGICAL		HAD_TDCREATE,HAD_TDINDWG
	LOGICAL		HAD_TDUPDATE,HAD_TDUSRTIMER
C
	CHARACTER*255	UCSNAME
	INTEGER		UCSNAME_LEN
	LOGICAL		HAD_UCSNAME
C
	CHARACTER*255	UCSORG(3)
	INTEGER		UCSORG_LEN(3)
	LOGICAL		HAD_UCSORG
C
	CHARACTER*255	UCSXDIR(3)
	INTEGER		UCSXDIR_LEN(3)
	LOGICAL		HAD_UCSXDIR
C
	CHARACTER*255	UCSYDIR(3)
	INTEGER		UCSYDIR_LEN(3)
	LOGICAL		HAD_UCSYDIR
C
	BYTE		AC(255)
	INTEGER*2	ACLEN
	INTEGER		ACTYPE
C
        DATA CFT/0.0,1.0,10*0.0,1.0,7*0.0/
C
C.......................................................................
C Initialise any variables as if there were a DXF header section
C
	CALL LSL_PUTMSG(DXF2I__DEFIFFHDR)
C
	HAD_RANGE      = .TRUE.		! pretend DXF header read 
C
	BY_LAYER       = .FALSE.
	LTYPE_BY_LAYER = .FALSE.
C
	HAD_CECOLOR    = .FALSE.
	HAD_CELTYPE    = .FALSE.
C
C Common block AC variables
	HAD_TEXT_HEIGHT = .FALSE.
	HAD_TEXT_STYLE  = .FALSE.
	HAD_POINT_SIZE  = .FALSE.
	HAD_LAYER_NAME  = .FALSE.
C
C Local AC variables
	HAD_LUNITS     = .FALSE.
	HAD_LUPREC     = .FALSE.
	HAD_PDMODE     = .FALSE.
	HAD_TDCREATE   = .FALSE.
	HAD_TDINDWG    = .FALSE.
	HAD_TDUPDATE   = .FALSE.
	HAD_TDUSRTIMER = .FALSE.
	HAD_UCSNAME    = .FALSE.
	HAD_UCSORG     = .FALSE.
	HAD_UCSXDIR    = .FALSE.
	HAD_UCSYDIR    = .FALSE.
C
C.......................................................................
C Write out IFF headers to IFF file
C
	CALL IFFSEL(IFFLUN)
	CALL FLWSEL(IFFLUN)
C
C Use SW origin for MD2 MD2LOC if had /ABSOLUTE qualifier
C
	IF (HAD_ABS) THEN
	  MD2LOC(1) = RA(1)		! = $EXTMIN
	  MD2LOC(2) = RA(3)		! = $EXTMIN
C
	  RA(1) = 0.0			! = RA(1) - MD2LOC(1)
	  RA(2) = RA(2) - MD2LOC(1)
	  RA(3) = 0.0 			! = RA(3) - MD2LOC(2)
	  RA(4) = RA(4) - MD2LOC(2)
	ELSE
	  MD2LOC(1) = 0
	  MD2LOC(2) = 0
	ENDIF
C
C Set scale, offset etc.
C
	MATV2  = 2
	MD2SCL = 1
	MD2PRJ = 0
	MD2UNT = 0
	MD2SPH = 0
C
	LPOSRA = LPOSE			! remember where the RAnge is
	CALL IFFRA(RA)
C
	HAD_RANGE       = .TRUE.
	HAD_FIRST_RANGE = .FALSE.	! no range values yet
	RANGE_UPDATE    = .FALSE.
C
	CALL IFFHI
 	CALL IFFMH(MHARR,MHLEN)	! map header
C
C	CALL IFFMD(MDARR,MDLEN)			! map descriptor
C
	CALL IFFMD(MD2ARR,MD2LEN)		! map descriptor
	CALL IFFNS(' File created by DXF2I ')
	CALL IFFCC(CFT)
C
C Control points - set array elements
C
	XY(1,1) = RA(1)
	XY(2,1) = RA(4)
	XY(1,2) = RA(1)
	XY(2,2) = RA(3)
	XY(1,3) = RA(2)
	XY(2,3) = RA(3)
	XY(1,4) = RA(2)
        XY(2,4) = RA(4)
C
C Loop to copy these into the rest of the array elements
C
	DO 1100 III = 1,4
	   DO 1005 JJJ = 1,2
		XY(JJJ+2,III) = XY(JJJ,III) 
1005	   CONTINUE
1100	CONTINUE
C
	CALL IFFCP(XY)
C
C reports
C
        IF (HAD_LOG) CALL LSL_PUTMSG
     &			(DXF2I__MAPEXTENT,RA(1),RA(2),RA(3),RA(4))
C
C initialise the feature counter
C
	PROCESS_TOTAL = 0
        PROCESS_SUCC  = 0
        PROCESS_FAIL  = 0
C
C set the default layer number to 0 and flag no layer open
C
	LSTIFFLAY = 0
	IN_LAYER = .FALSE.
C
	NF = 0
	DO 5 II = 1,4
	   FC(II) = 0
5	CONTINUE
C
999	RETURN
	END
C
