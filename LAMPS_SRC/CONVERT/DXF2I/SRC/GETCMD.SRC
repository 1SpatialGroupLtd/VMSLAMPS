	LOGICAL*4 FUNCTION GETCMD()
C
***	MODULE GETCMD
***	IDENT 12MY93
C
C ©Copyright Laser-Scan Ltd, Cambridge, England.
C
C Author  :  A.T. Timms (ripped off from IMP IRENUMBER)	 2 Oct 1987
C Modified:  A.D. Trigg					29 Jun 1988
C            P. Pan					 7 Jun 1990
C
CMOD961      J Barber	Move file opening to DXF2I.SRC  23 Jan 1991
C			Add /POINTSIZE to output text heights in points;
C			default /NOPOINTSIZE, ie mm./100
CMOD1004		Add /HEADER to output header feature
C			Add /QUIET to turn off certain messages
C
CMOD1156     J Barber					16-Oct-1992
C			Add /ABSOLUTE to output MD2 origin offset entry
C
CMOD1226     J Barber					29-Apr-1993
C			Add /SCAN to create a default parameter file
C			from the input DXF file
C
C Command line decoding and file opening function for DXF2I
C
	IMPLICIT NONE
C
	INCLUDE  'LSL$CMNLSL:CLD.CMN'
	INCLUDE  'LSL$CMNLSL:FILENAME.CMN'
	INCLUDE  'LSL$CMNIFF:IFFHAN.CMN'
	INCLUDE  'HERE:DXF2IMSG.PAR'
	INCLUDE  'LSL$CMNDXFPAR:LOOKUP.CMN'
	INCLUDE  'HERE:DXF2I.CMN'
C
C Command language definitions
C
	EXTERNAL DXF2I_CLD
C
C workspace
	LOGICAL		ABSENT		! .T. if file param. not found
	LOGICAL		LOCAL		! .T. if qual. is local
	LOGICAL		LOCNEG		! Set .T. if qual. locally negated
	LOGICAL		WHINGE		! Set .T. local error reporting
       	LOGICAL		FPRES
	LOGICAL		FNEGA
	LOGICAL		ERRCOD		! return error code
	INTEGER		THERE		! qualifier there?
C
C functions called
	INTEGER*4	DCL_FILE   	! Reads & parses file title from DCL 
			           	! command line
        INTEGER*4       DCL_STARTUP	! Looks for command line
	INTEGER*4	DCL_QUAL   	! Looks for command line qualifiers
C
C---------------------------------------------------------------------
C initialise logicals
C
	WHINGE  = .TRUE.		! LSLDCL local error reporting
	LOCAL   = .FALSE.       	! Set .T. if qual. is local
        LOCNEG  = .FALSE.       	! Set .T. if qual. locally negated
	THERE   = .FALSE.
C
	HAD_HDR   = .FALSE.		! no /HEADER qualifier
	HAD_LOG   = .FALSE.		! no /LOG qualifier
	HAD_PNT   = .FALSE.		! no /POINTSIZE qualifier
	HAD_QUIET = .FALSE.		! no /QUIET qualifier
	HAD_ABS   = .FALSE.		! no /ABSOLUTE qualifier
	HAD_SCAN  = .FALSE.		! no /SCAN qualifier
	HAD_PAR	  = .FALSE.		! no /PARAMETER qualifier
C
C---------------------------------------------------------------------
C Get command line for DXF2I. DCL_STARTUP will return set to
C SS$NORMAL if all is well.
C
	GETCMD = DCL_STARTUP(
     &	    		'DXF2I',	! Command verb
     &      		.FALSE.,	! Don't split parameter lists
     &      		DXF2I_CLD,	! CLD module name
     &      		WHINGE)		! .T. -local error reporting
        IF (.NOT.GETCMD) GOTO 999
C
C----------------------------------------------------------------
C Search for the qualifier 'SCAN' to determine whether output IFF file
C or PARAMETER file is required
C
	GETCMD=DCL_QUAL(
     &			'SCAN'		! qual. name
     &        		,HAD_SCAN	! returned .T. if qual. found
     &			,FPRES		! set if qual local to parameter
     &			,FNEGA 		! set if qual. negated locally
     &			,WHINGE)	! set-local error reporting
	IF (.NOT.GETCMD) GOTO 999
C
C----------------------------------------------------------------
C now hunt for the SCAN file qualifier
C
	IF (HAD_SCAN) THEN
   	   GETCMD=DCL_FILE(
     &			'SCAN'			! qualifier
     &			,'LSL$LOOKUP:DXF.SCAN'	! default file-name
     &			, ABSENT		! set if no file-name
     &			,.FALSE.		! don't expect list of files
     &  	        ,.TRUE.)		! set-local error reporting
C
           IF (.NOT.GETCMD) THEN
              CALL LSL_PUTMSG(DXF2I__ERRSCANAM)
	      GETCMD = DXF2I__ERRSCANAM
              GOTO 999
	   ENDIF
C
	   IF (ABSENT) THEN
	      SCANFIL = 'LSL$LOOKUP:DXF.SCAN'
	      SCANLEN = 19
	   ELSE
	      CALL EXPFLN(SCANFIL,SCANLEN)
	   ENDIF
        ENDIF
C
C----------------------------------------------------------------
C now check if the PARAMETER file qualifier is in the command line 
C
	GETCMD = DCL_QUAL('PARAMETER',HAD_PAR,FPRES,FNEGA,.TRUE.)
C
	IF (.NOT.GETCMD) THEN
           CALL LSL_PUTMSG(DXF2I__ERRPARNAM)
	   GETCMD = DXF2I__ERRPARNAM
           GOTO 999
        ENDIF 
C
	IF (.NOT.HAD_PAR .AND. .NOT.HAD_SCAN) THEN
	   CALL LSL_PUTMSG(DXF2I__NOPARSCAN)
	   GETCMD = DXF2I__NOPARSCAN
	   GOTO 999
	ENDIF
C
C now hunt for the PARAMETER file qualifier
C
	IF (HAD_PAR) THEN
	   GETCMD=DCL_FILE(
     &		'PARAMETER'			! qualifier
     &		,'LSL$LOOKUP:DXF.PAR'		! default file-name
     &		, ABSENT			! set if no file-name
     &		,.FALSE.			! don't expect list of files
     &          ,.TRUE.)			! set-local error reporting
C
	   IF (.NOT.GETCMD) THEN
	      CALL LSL_PUTMSG(DXF2I__ERRPARNAM)
	      GETCMD = DXF2I__ERRPARNAM
	      GOTO 999
	   ENDIF
C
	   IF (ABSENT) THEN
	      PARFIL = 'LSL$LOOKUP:DXF.PAR'
	      PARLEN = 18
	   ELSE
	      CALL EXPFLN(PARFIL,PARLEN)
	   ENDIF
	ENDIF
C
C---------------------------------------------------------------------
C Now we can hunt for the input DXF filename
C
	GETCMD = DCL_FILE(
     &			'P1',
     &			'LSL$DXF:DXF.DXF',
     &			ABSENT,
     &			.FALSE.,
     &			WHINGE)
C
        IF (GETCMD) THEN
	   CALL EXPFLN(DXFFIL,DXFLEN)
        ELSE
	   CALL LSL_PUTMSG(DXF2I__ERRDXFNAM)
	   GETCMD = DXF2I__ERRDXFNAM
           GOTO 999
        ENDIF 
C
C---------------------------------------------------------------------
C Don't need output IFF file if SCAN used
C
	IF (HAD_SCAN) GOTO 55
C
C Now we can hunt for the output IFF filename
C
	GETCMD = DCL_FILE(
     &			'P2',
     &			'LSL$IF:IFF.IFF',
     &			ABSENT,
     &			.FALSE.,
     &			WHINGE)
C
        IF (.NOT.GETCMD) THEN
	   CALL LSL_PUTMSG(DXF2I__ERRIFFNAM)
	   GETCMD = DXF2I__ERRIFFNAM
           GOTO 999
        ENDIF
C
	IF (ABSENT) THEN
	   CALL LSL_PUTMSG(DXF2I__ERRIFFNAM)
	   GETCMD = DXF2I__ERRIFFNAM
           GOTO 999
	ELSE
	   CALL EXPFLN(IFFFIL,IFFLEN)
        ENDIF
C
C----------------------------------------------------------------
55	CONTINUE
C
C now search for the qualifier 'LOG' 
C
	GETCMD=DCL_QUAL(
     &			'LOG'		! qual. name
     &        		,HAD_LOG	! returned .T. if qual. found
     &			,FPRES		! set if qual local to parameter
     &			,FNEGA 		! set if qual. negated locally
     &			,WHINGE)	! set-local error reporting
C
	IF(.NOT.GETCMD) GOTO 999
C
C----------------------------------------------------------------
C now search for the qualifier 'QUIET' 
C
	GETCMD=DCL_QUAL(
     &			'QUIET'		! qual. name
     &        		,HAD_QUIET	! returned .T. if qual. found
     &			,FPRES		! set if qual local to parameter
     &			,FNEGA 		! set if qual. negated locally
     &			,WHINGE)	! set-local error reporting
C
	IF(.NOT.GETCMD) GOTO 999
C
C----------------------------------------------------------------
C now search for the qualifier 'ABSOLUTE' 
C
	GETCMD=DCL_QUAL(
     &			'ABSOLUTE'	! qual. name
     &        		,HAD_ABS	! returned .T. if qual. found
     &			,FPRES		! set if qual local to parameter
     &			,FNEGA 		! set if qual. negated locally
     &			,WHINGE)	! set-local error reporting
C
	IF(.NOT.GETCMD) GOTO 999
C
C----------------------------------------------------------------
C now search for the qualifier 'HEADER' 
C
	GETCMD=DCL_QUAL(
     &			'HEADER'	! qual. name
     &        		,HAD_HDR	! returned .T. if qual. found
     &			,FPRES		! set if qual local to parameter
     &			,FNEGA 		! set if qual. negated locally
     &			,WHINGE)	! set-local error reporting
C
	IF(.NOT.GETCMD) GOTO 999
C
C----------------------------------------------------------------
C now search for the qualifier 'POINTSIZE'
C
	GETCMD = DCL_QUAL(
     &			'POINTSIZE'	! qual. name
     &        		,HAD_PNT	! returned .T. if qual. found
     &			,FPRES		! set if qual local to parameter
     &			,FNEGA 		! set if qual. negated locally
     &			,WHINGE)	! set-local error reporting
C
	IF (.NOT.GETCMD) GOTO 999
C
C----------------------------------------------------------------
C now check if the FRT file qualifier is in the command line 
C
	GETCMD = DCL_QUAL('FRT',THERE,FPRES,FNEGA,.TRUE.)
C
	IF (.NOT.GETCMD .OR. .NOT.THERE) THEN
           CALL LSL_PUTMSG(DXF2I__ERRFRTNAM)
	   IF (.NOT.THERE) GETCMD = DXF2I__ERRFRTNAM
           GOTO 999
        ENDIF 
C
C now hunt for the FRT file qualifier
C
   	GETCMD=DCL_FILE(
     &		'FRT'			! qualifier
     &		,'LSL$FRT:DXF.FRT'	! default file-name
     &		, ABSENT		! set if no file-name
     &		,.FALSE.		! don't expect list of files
     &          ,.TRUE.)		! set-local error reporting
C
        IF (GETCMD) THEN
	   CALL EXPFLN(FRTFIL,FRTLEN)
        ELSE
           CALL LSL_PUTMSG(DXF2I__ERRFRTNAM)
	   GETCMD = DXF2I__ERRFRTNAM
           GOTO 999
        ENDIF
C 
C----------------------------------------------------------------
C Exit
999	RETURN
	END
C
