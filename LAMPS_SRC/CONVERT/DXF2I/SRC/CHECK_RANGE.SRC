C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1993-06-30 18:04:48.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE CHECK_RANGE(DATA_BUF,NOOFPTS)
C
***	MODULE CHECK_RANGE
***	IDENT 30JN93
C
C ©Copyright Laser Scan Ltd, Cambridge, England.
C
C Author  :  P. Pan				         7-Jun-1990
C
CMOD1246   JB						29-Jun-1993
C	Set flag HAD_FIRST_RANGE to tell whether the range has been
C	preset with a valid coordinate value
C
C Subroutine to check the range
C
	IMPLICIT NONE
C
	INCLUDE  'LSL$DXFPAR:LOOKUP.CMN'
	INCLUDE  'HERE:DXF2I.CMN'
	INCLUDE  'HERE:DXF2IMSG.PAR'
C
C Workspace
	INTEGER		NOOFPTS			! no of pts
	REAL		DATA_BUF(2,NOOFPTS)	! data buffer
C
C Local Variables
	INTEGER		CURPT			! current point
C
C.......................................................................
C Inititialise the unset range
C
	IF (.NOT.HAD_FIRST_RANGE) THEN
	   RA(1) = DATA_BUF(1,1)
	   RA(2) = DATA_BUF(1,1)
	   RA(3) = DATA_BUF(2,1)
	   RA(4) = DATA_BUF(2,1)
C
	   HAD_FIRST_RANGE = .TRUE.
	ENDIF
C
C Check each point in turn, amending the range if necessary
C
	DO 100 CURPT=1,NOOFPTS
C
	   IF (DATA_BUF(1,CURPT).GT.RA(2)) THEN
     	      RA(2) = DATA_BUF(1,CURPT)
	      IF (.NOT.HAD_QUIET) CALL LSL_PUTMSG(DXF2I__RANGEUPDATE,NUMLIN)
	      RANGE_UPDATE = .TRUE.
	   ELSEIF (DATA_BUF(1,CURPT).LT.RA(1)) THEN
     	      RA(1) = DATA_BUF(1,CURPT)
	      IF (.NOT.HAD_QUIET) CALL LSL_PUTMSG(DXF2I__RANGEUPDATE,NUMLIN)
	      RANGE_UPDATE = .TRUE.
           ENDIF
C
	   IF (DATA_BUF(2,CURPT).GT.RA(4)) THEN
     	      RA(4) = DATA_BUF(2,CURPT)
	      IF (.NOT.HAD_QUIET) CALL LSL_PUTMSG(DXF2I__RANGEUPDATE,NUMLIN)
	      RANGE_UPDATE = .TRUE.
	   ELSEIF (DATA_BUF(2,CURPT).LT.RA(3)) THEN
     	      RA(3) = DATA_BUF(2,CURPT)
	      IF (.NOT.HAD_QUIET) CALL LSL_PUTMSG(DXF2I__RANGEUPDATE,NUMLIN)
	      RANGE_UPDATE = .TRUE.
	   ENDIF
C
100	CONTINUE
C
C.......................................................................
C
	RETURN
	END
C
