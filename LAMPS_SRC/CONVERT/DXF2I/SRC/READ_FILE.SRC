	LOGICAL*4 FUNCTION READ_FILE()
C
***	MODULE READ_FILE
***	IDENT 18JN93
C
C ©Copyright Laser-Scan Ltd, Cambridge, England.
C
C Author  :  A.T. Timms     				 2 Nov 1987
C Modified:  A.D. Trigg					 2 Jun 1988
C            P. Pan					13 Mar 1990
C            P. Pan					 7 Jun 1990
C
CMOD1226     J Barber					29 Apr 1993
C	     Add /SCAN facility with new routines SCAN_*
C
CMOD1234     J Barber					 7 Jun 1993
C	     Write blank IFF header entries if no DXF 
C	     header present
C
C Function to read DXF file and call relevant functions
C
	IMPLICIT NONE
C
	INCLUDE  'LSL$CMNLSL:LSLLIBMSG.PAR'
	INCLUDE  'LSL$CMNLSL:READSTR.PAR'
	INCLUDE  'LSL$CMNIFF:IFFHAN.CMN'
C
	INCLUDE  'LSL$CMNDXFPAR:LOOKUP.CMN'
	INCLUDE  'HERE:DXF2IMSG.PAR'
	INCLUDE  'HERE:DXF2I.CMN'
C
C Functions
	LOGICAL 	READ_HEADER	! Reads header
	LOGICAL 	READ_TABLES	! Reads tables
	LOGICAL 	READ_BLOCKS	! Reads blocks
	LOGICAL 	READ_ENTITIES	! Reads entities
	LOGICAL 	SCAN_HEADER	! Reads header
	LOGICAL 	SCAN_TABLES	! Reads tables
	LOGICAL 	SCAN_BLOCKS	! Reads blocks
	INTEGER		FLRLIN		! Read a line
	INTEGER		READSTR		! Get a string
	INTEGER		FLRSEL		! read selection
	INTEGER*2	EXPAND
C
C Workspace
	CHARACTER*255	STRING		! Any old character string
	CHARACTER*255	SCAN_LINE	! SCAN character string
	INTEGER		I
	INTEGER		LEN		! String length
	INTEGER*2	EXPLEN
C
C.......................................................................
C
	NUMLIN = 0
C
C select DXF file for input 
C
	READ_FILE = FLRSEL(DXFLUN)
C
C error handling
C
	IF (.NOT.READ_FILE) THEN
	   CALL LSL_PUTMSG(DXF2I__ERRSELDXF,DXFFIL(1:DXFLEN))
	   GOTO 1000
	ENDIF
C
C Get lines from DXF file
C
100	READ_FILE = FLRLIN()
C
	IF (READ_FILE.EQ.LSL__EOF) THEN
	   READ_FILE = LSL__NORMAL
	   GOTO 1000
	ENDIF
C
	IF (.NOT.READ_FILE) THEN
	   CALL LSL_PUTMSG(DXF2I__RDLINERR,NUMLIN)
	   GOTO 1000
	ENDIF
C
	CALL BSLN
	NUMLIN = NUMLIN+1
	LEN = READSTR(STRING,,ON_EOL)
C
C Allow for valid null strings
C
	IF (LEN.EQ.0) GOTO 100
C
C Delegate according to contents of string
C
	IF (STRING(1:LEN).EQ.'0') GOTO 100 
	IF (STRING(1:LEN).EQ.'2') GOTO 100 
	IF (STRING(1:LEN).EQ.'SECTION') GOTO 100
C
C Read header
C
	IF (STRING(1:LEN).EQ.'HEADER') THEN
	   IF (HAD_SCAN) THEN
	     READ_FILE = SCAN_HEADER()
	   ELSEIF (HAD_PAR) THEN
	     READ_FILE = READ_HEADER()
	   ENDIF
	   IF (.NOT.READ_FILE) GOTO 1000
C
C Read tables
C
	ELSEIF (STRING(1:LEN).EQ.'TABLES') THEN
C
	   IF (.NOT.HAD_RANGE .AND. .NOT.HAD_SCAN) THEN 
		CALL WRITE_HEADER  		! no header read or written
	   ENDIF
C
	   IF (HAD_SCAN) THEN
	     READ_FILE = SCAN_TABLES()
	   ELSEIF (HAD_PAR) THEN
	     READ_FILE = READ_TABLES()
	   ENDIF
	   IF (.NOT.READ_FILE) GOTO 1000
C
C Read blocks
C
	ELSEIF (STRING(1:LEN).EQ.'BLOCKS') THEN 
C
	   IF (.NOT.HAD_RANGE .AND. .NOT.HAD_SCAN) THEN 
		CALL WRITE_HEADER  		! no header read or written
	   ENDIF
C
	   IF (HAD_SCAN) THEN
	     READ_FILE = SCAN_BLOCKS()
	   ELSEIF (HAD_PAR) THEN
	     READ_FILE = READ_BLOCKS()
	   ENDIF
	   IF (.NOT.READ_FILE) GOTO 1000
C
C Read entities
C
	ELSEIF (STRING(1:LEN).EQ.'ENTITIES') THEN

	   IF (.NOT.HAD_RANGE .AND. .NOT.HAD_SCAN) THEN 
		CALL WRITE_HEADER  		! no header read or written
	   ENDIF
C
C Write out description to SCAN file
C
	   IF (HAD_SCAN) THEN
	     CALL FLWSEL(SCANLUN)
	     CALL FLWSTR('!')
C
	     EXPLEN = EXPAND('%WS% %S',SCAN_LINE,
     &	'!       Entity    Style          Colour FC')
	     CALL FLWSTR(SCAN_LINE(1:EXPLEN))
C
	     CALL FLWSTR('!')
	   ENDIF

	   READ_FILE = READ_ENTITIES()
	   IF (.NOT.READ_FILE) GOTO 1000
C
C End of file
C
	ELSEIF (STRING(1:LEN).EQ.'EOF') THEN
	   READ_FILE = LSL__NORMAL
	   GOTO 1000
	ENDIF
C
	GOTO 100
C
C.......................................................................
C Exit
1000	RETURN
	END
C
