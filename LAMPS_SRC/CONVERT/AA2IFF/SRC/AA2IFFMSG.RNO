.SUBTITLE MESSAGES (SUCCESS)

.!******************************************************************************
.PAGE
^*--------------------------------------------------------------------------------\*
.HL     2 ^^^*MESSAGES (SUCCESS)\*

These messages are used to   indicate that the program   has
succeeded in performing some action, and  do not require any
user action.

.LM +4

.NOJUSTIFY;.TP 10;.P -4
NORMAL, successful function return
.JUSTIFY

.P0; ^*Explanation:\*
This message is used internally by the program for debugging purposes
and will not normally appear to users.
.P0; ^*User action:\*
None.
.LM -4
.SUBTITLE MESSAGES (INFORMATIONAL)

.!******************************************************************************
.PAGE
^*--------------------------------------------------------------------------------\*
.HL     2 ^^^*MESSAGES (INFORMATIONAL)\*

These   messages  give information   only,    and require no
immediate action by  the  user.  They  are  used to  provide
information on  the  current  state  of the  program, or  to
supply explanatory  information in support  of  a warning or
error message.

.LM +4

.NOJUSTIFY;.TP 10;.P -4
FCFND, 'integer' feature code'(s)' found in parameter file
.JUSTIFY

.P0; ^*Explanation:\*
This message informs the user that the parameter file has been successfully
read, and feature codes found.
.P0; ^*User action:\*
None.

.NOJUSTIFY;.TP 10;.P -4
OPNFRT, FRT file 'filename' opened for read
.JUSTIFY

.P0; ^*Explanation:\*
This message informs the user that the FRT file has been successfully
opened for read. This message will be displayed when the /LOG qualifier 
is selected.
.P0; ^*User action:\*
None.

.NOJUSTIFY;.TP 10;.P -4
OPNPAR, PARAMETER file 'filename' opened for read
.JUSTIFY

.P0; ^*Explanation:\*
This message informs the user that the parameter file has been successfully
opened for read. This message will be displayed when the /LOG qualifier 
is selected.
.P0; ^*User action:\*
None.
.LM -4
.SUBTITLE MESSAGES (WARNING)

.!******************************************************************************
.PAGE
^*--------------------------------------------------------------------------------\*
.HL     2 ^^^*MESSAGES (WARNING)\*

These messages are  output when an error has   occurred that
can be corrected immediately by the user or that the program
will attempt to overcome.

.LM +4

.NOJUSTIFY;.TP 10;.P -4
ERRFCGT, FC 'integer' has wrong GT 'integer' in FRT file for 'string' entity
.JUSTIFY

.P0; ^*Explanation:\*
The graphical type (GT) from the FRT file for the indicated 
feature code (FC) in the parameter file is inappropriate for the associated 
entity. The program will use default graphical types dependent on the entity 
type.
.P0; ^*User action:\*
Check the FC in the entity entry in the parameter file, and 
the specification of the FRT file.

.NOJUSTIFY;.TP 10;.P -4
ERRFNDFC, error finding FC 'number' in FRT file
.JUSTIFY

.P0; ^*Explanation:\*
Error encountered when looking for IFF feature code, (read from the
parameter file, or defaulted) in the FRT file.
This error may be caused either by entering an incorrect FC entry in the
parameter file, or by specifying an incorrect FRT file. The program will 
use a default graphical type of 1 (linear).
.P0; ^*User action:\*
Check the FC in the parameter file, and the specification of the FRT file.

.NOJUSTIFY;.TP 10;.P -4
FCDEFAULT, default FC used for feature code 'string' at line 'number'
.JUSTIFY

.P0; ^*Explanation:\*
The AA feature at the given line has a default feature code assigned
as the AA code has not been given in the supplied parameter file.
.P0; ^*User action:\*
Amend the parameter file.

.NOJUSTIFY;.TP 10;.P -4
NOTLINEFTR, FC 'fc' is not a linear feature at line 'number'
.JUSTIFY

.P0; ^*Explanation:\*
The FC given in the parameter file (or defaulted to 0 if missing from 
the parameter file) is not a linear feature in the FRT file.
.P0; ^*User action:\*
Check the FC in the parameter file, and the specification of the FRT file.

.NOJUSTIFY;.TP 10;.P -4
NOTSYMBFTR, FC 'fc' is not a symbol feature at line 'number'
.JUSTIFY

.P0; ^*Explanation:\*
The FC given in the parameter file (or defaulted to 999 if missing from 
the parameter file) is not a symbol feature in the FRT file.
.P0; ^*User action:\*
Check the FC in the parameter file, and the specification of the FRT file.

.NOJUSTIFY;.TP 10;.P -4
NOTTEXTFTR, FC 'fc' is not a text feature at line 'number'
.JUSTIFY

.P0; ^*Explanation:\*
The FC given in the parameter file (or defaulted to 999 if missing from 
the parameter file) is not a text feature in the FRT file.
.P0; ^*User action:\*
Check the FC in the parameter file, and the specification of the FRT file.

.NOJUSTIFY;.TP 10;.P -4
UNKPRICMD, unknown primary command parameter at line 'number'
.JUSTIFY

.P0; ^*Explanation:\*
The primary command read from the parameter file is not recognised. Valid 
primary parameter entries are ARC, POINT, POLY and TEXT. The program will 
continue, ignoring the current line.
.P0; ^*User action:\*
Check the parameter file.
.LM -4
.SUBTITLE MESSAGES (ERROR)

.!******************************************************************************
.PAGE
^*--------------------------------------------------------------------------------\*
.HL     2 ^^^*MESSAGES (ERROR)\*

These  messages indicate an  error in processing  which will
cause  the program to terminate. The most likely  causes are
a   corrupt or otherwise  invalid  input file,  or an  error
related to command line processing and file manipulation.

.LM +4

.NOJUSTIFY;.TP 10;.P -4
ERRINTLIN, Error interpreting contents of AA file on line 'integer'
.JUSTIFY

.P0; ^*Explanation:\*
An error occured whilst trying to read the contents
of TXTBUF. This could be due to the presence of the wrong type of variable e.g. 
encountering a character string when trying to read an integer.
.P0; ^*User action:\*
Inspect the ASCII AA file around the indicated line
and look for any deviations from the expected format.

.NOJUSTIFY;.TP 10;.P -4
ERROPNFRT, error reading FRT file 'filename'
.JUSTIFY

.P0; ^*Explanation:\*
There was an error reading the FRT file.
.P0; ^*User action:\*
Check the FRT file and correct the error.

.NOJUSTIFY;.TP 10;.P -4
ERROPNPAR, error opening parameter file: 'filename'
.JUSTIFY

.P0; ^*Explanation:\*
The parameter file could not be opened.
The program will not be able to continue upon the 
detection of this error.
.P0; ^*User action:\*
Check the existence and status of the parameter file.

.NOJUSTIFY;.TP 10;.P -4
ERRRDCODE, error reading AA file feature code at line 'number'
.JUSTIFY

.P0; ^*Explanation:\*
The feature code in the indicated line number of the AA file could not be 
read. The program will not be able to continue upon the detection of this 
error.
.P0; ^*User action:\*
Check the AA file at the indicated location.

.NOJUSTIFY;.TP 10;.P -4
ERRRDPAR, error reading parameter file at line 'number'
.JUSTIFY

.P0; ^*Explanation:\*
The indicated line number of the parameter file could not be read.
The program will not be able to continue upon the detection of this error.
.P0; ^*User action:\*
Check the parameter file at the indicated location.

.NOJUSTIFY;.TP 10;.P -4
NOCOORD, no valid coordinate entries at line 'number'
.JUSTIFY

.P0; ^*Explanation:\*
There were no valid coordinate entries the given AA feature.
.P0; ^*User action:\*
Check the AA file and correct the errors.

.NOJUSTIFY;.TP 10;.P -4
NOPARFC, no valid entries in parameter file
.JUSTIFY

.P0; ^*Explanation:\*
There were no valid entity or FC entries in the given parameter file.
.P0; ^*User action:\*
Check the parameter file and correct the errors.

.NOJUSTIFY;.TP 10;.P -4
PARFILERR, error reading DST parameter file
.JUSTIFY

.P0; ^*Explanation:\*
There was an error in the specified parameter file rendering it unreadable.
Other messages will give further information and the line number.
.P0; ^*User action:\*
Check the parameter file and correct the error.

.NOJUSTIFY;.TP 10;.P -4
UNACREIFF, Unable to create specified IFF file 'file-spec'
.JUSTIFY

.P0; ^*Explanation:\*
It was not possible to open the IFF file as specified.
Further information should be obtainable from the adjoining system message.
.P0; ^*User action:\*
Repeat the specification after taking notice of the
IFFLIB error messages.

.NOJUSTIFY;.TP 10;.P -4
UNAOPNAA, Unable to open AA file 'file-spec'
.JUSTIFY

.P0; ^*Explanation:\*
The AA file specified does not exist, or could not
be opened.
.P0; ^*User action:\*
Check the spelling and path name of the file as 
specified, also check that LSL$AA points to where you expect it to.

.NOJUSTIFY;.TP 10;.P -4
UNAOPNPAR, Unable to open parameter file 'file-spec'
.JUSTIFY

.P0; ^*Explanation:\*
The parameter file specified does not exist, or could 
not be opened.
.P0; ^*User action:\*
Check the spelling and path name of the file as 
specified, also check that LSL$LOOKUP points to where you expect it to.
.LM -4
.SUBTITLE MESSAGES (OTHER)

.!******************************************************************************
.PAGE
^*--------------------------------------------------------------------------------\*
.HL     2 ^^^*MESSAGES (OTHER)\*

In addition to the above messages which are generated by the
program itself,   other messages  may  be   produced by  the
command line interpreter (CLI) and by  Laser-Scan libraries.
In particular, messages may be  generated by the IFF library
and  by the  Laser-Scan  I/O library,  LSLLIB.  IFF  library
messages are introduced by   '%IFF' and are  documented in
the IFF library users' guide. In most cases IFF errors will
be due to a corrupt input file, and this should be the first
area of investigation. If the  cause of  the error cannot be
traced by the  user, and  Laser-Scan are consulted, then the
output  file should  be  preserved to  facilitate diagnosis.
LSLLIB  messages  are  introduced  by    '%LSLLIB' and are
generally self-explanatory.  They are  used  to  explain the
details of program generated errors.
