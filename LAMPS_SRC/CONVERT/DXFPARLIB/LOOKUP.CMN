C
C common block for DXF's parameters lookup tables
C
C	Auth	Paul Pan, 22 February 1990
C
CMOD 971	Modified: MAXENT max. number of entries now set to 10000
C
CMOD1004	Introduce BLOCK EXPAND entries to parameter file
C		(with x, y offset and scaling for the local coords)
C		to signal the expansion of a symbol BLOCK from the
C		BLOCKS section to IFF		J Barber 13-Jun-1991
C
CMOD		Add /ABSOLUTE qualifier		J Barber 16-Oct-1992
C
CMOD1226	Add /SCAN to output a default parameter file
C		from the input DXF		J Barber 29-Apr-1993
C		Add FC codes for DXF entity types for /SCAN
C
CMOD1324	Add /DP qualifier to set the no. of decimal places
C		in the output coord values	J Barber 09-Dec-1993
C
CMOD1413	Add TEXT SIZE to parameter file
C						J Barber 20-Sep-1994
C
C (please note that these ENTRIES represent both LAYER, ENTITY and TEXT)
C
C input filename
C
	INTEGER		DXFLUN
	INTEGER		DXFLEN
	CHARACTER*255	DXFFIL
C
C output filename
	INTEGER		IFFLUN
	INTEGER		IFFLEN
	CHARACTER*255	IFFFIL
C
C FRT filename
	INTEGER		FRTLUN
	INTEGER		FRTLEN
	CHARACTER*255	FRTFIL
C
C PARAMETER filename
	INTEGER		PARLUN
	INTEGER		PARLEN
	CHARACTER*255	PARFIL
C
C PARAMETER filename
	INTEGER		SCANLUN
	INTEGER		SCANLEN
	CHARACTER*255	SCANFIL
C
C parameters
	PARAMETER (IFFLUN=10,DXFLUN=11,FRTLUN=12,PARLUN=13,SCANLUN=14)
C
	INTEGER		MAXENT 			! maximum no of entries
	PARAMETER	(MAXENT=10000)
C
	INTEGER		MAXEXPAND		! maximum no of BLOCK 
	PARAMETER	(MAXEXPAND=1000)	! EXPAND entries
C
C max number of pointsizes (pt's and mm's)
	INTEGER		MAXPOINT		! maximum no of point sizes
	PARAMETER	(MAXPOINT=100)
C
C max number of text fonts, (== different text fc's)
	INTEGER		MAXFONT			! maximum no of fonts
	PARAMETER	(MAXFONT=100)
C
	INTEGER		DEF_HEADER_AC
	PARAMETER	(DEF_HEADER_AC = 6)
C
	REAL		PI
	PARAMETER	(PI=3.14159265)
C
C LAYER lookup table, assuming all ENTRIES are LAYERS
C
        CHARACTER*30	DXFLAYNAM(MAXENT)	! DXF LAYER name
	INTEGER*2	DXFLAYLEN(MAXENT)	! DXF LAYER name'S length
	INTEGER*2	IFFOLAYNO(MAXENT)	! IFF overlay nos
	INTEGER*2	DXFLAYCOL(MAXENT)	! DXF LAYER colour by layer
	CHARACTER*30	DXFLAYLTYPE(MAXENT)	! DXF LAYER linetype by layer
	INTEGER*2	DXFLAYLTLEN(MAXENT)	! DXF LAYER linetype by layer
	INTEGER		TOTDXFLAY		! total number of DXF layers
C
C ENTITY lookup table, assuming all ENTRIES are ENTITIES
C
	INTEGER*2	DXFENTTYP(MAXENT)	! DXF ENTITY type
        CHARACTER*30	DXFENTNAM(MAXENT)	! DXF ENTITY name, just for 5-9
        INTEGER*2	DXFENTLEN(MAXENT)	! DXF ENTITY name's length
	INTEGER*2	ENTCOLOUR(MAXENT)	! feature colour
	INTEGER*2	IFFFCCODE(MAXENT)	! IFF feature code
	INTEGER*2	FRTGTTYPE(MAXENT)	! FRT graphical type
	INTEGER*2	FONTNUMBER(MAXENT)	! IFF feature code
C
C The array of mm sizes, indexed by point number
C
	LOGICAL		HAD_POINT_SIZES(MAXFONT)	! had TEXT SIZE entries
	REAL		POINT_SIZES(MAXPOINT, MAXFONT)	! and their array
C
C symbol lookup table, for DXF INSERT, assuming all are INSERTs and are
C different. This array stores the index to the definitions of the
C DXF BLOCKS section.
C
	INTEGER*2	DXFSYMBOL(MAXENT)       ! DXF INSERT
C
C line type lookup table, for DXF LINE, CIRCLE, ARC, TRACE, SOLID and
C POLYLINE, assuming all are different. This array stores the index to 
C the definitions of the line type, DXF TABLES section.
C
	INTEGER*2	DXFLINTYP(MAXENT)	! DXF line type
C
C text style lookup table, for DXF TEXT, assuming all are TEXTs and are
C different. This array stores the index to the definitions of the 
C text style, DXF TABLES section.
C
	INTEGER*2	DXFTEXSTY(MAXENT)	! DXF text style
C
C current parameter reading positions
C
	INTEGER		CURRLAYIND		! current LAYER reading index
	INTEGER		CURRENTIND		! current ENTITY reading index
C
C for SYMBOLs - DXF INSERT
C
	INTEGER		CURRSYMIND		! current symbol index
C
C for line types - DXF LINE, CIRCLE, ARC, TRACE, SOLID and POLYLINE
C
	INTEGER		CURRLININD		! current line type index
C
C for text styles - DXF TEXT
C
	INTEGER		CURRTEXIND		! current text style index
C
C for matching DXF LAYER and IFF layer
C
	INTEGER		SELLAYIND		! currently selected layer index
C
C for matching DXF ENTITY and IFF feature
C
	INTEGER		SELENTIND		! currently selected ent. index
C
C for matching colour
C
	INTEGER		SELCOLOUR		! currently selected colour
C
C for matching DXF type
C
	INTEGER		SELENTTYP		! currently selected DXF type
C
C current reading parameter file line number
C
	INTEGER		LINE			! as it says
C
C had /POINTSIZE, /HEADER, /LOG, /QUIET?
C
        LOGICAL		HAD_PAR			! had /parameter
        LOGICAL		HAD_PNT			! had /pointsize
        LOGICAL		HAD_HDR			! had /header
        LOGICAL		HAD_QUIET		! had /quiet
        LOGICAL		HAD_LOG			! had /log
        LOGICAL		HAD_ABS			! had /absolute
        LOGICAL		HAD_SCAN		! had /scan
        LOGICAL		HAD_DP			! had /decimal_places
C
	INTEGER		NUM_DP			! number of decimal_places
C
C ENTITY domain
C
        INTEGER		DXFNUMENT 		! No of DXF entities
	PARAMETER	(DXFNUMENT=10)
C
        INTEGER		DXFLINE			! DXF line
	PARAMETER	(DXFLINE=1)
        INTEGER		DXFPOLYLINE 		! DXF polyline
	PARAMETER	(DXFPOLYLINE=2)
        INTEGER		DXFCIRCLE 		! DXF circle
	PARAMETER	(DXFCIRCLE=3)
        INTEGER		DXFARC 			! DXF arc
	PARAMETER	(DXFARC=4)
        INTEGER		DXFTRACE 		! DXF trace
	PARAMETER	(DXFTRACE=5)
        INTEGER		DXFSOLID 		! DXF solid
	PARAMETER	(DXFSOLID=6)
        INTEGER		DXFTEXT 		! DXF text
	PARAMETER	(DXFTEXT=7)
        INTEGER		DXFINSERT 		! DXF BLOCK insert
	PARAMETER	(DXFINSERT=8)
        INTEGER		DXFEXPAND		! DXF BLOCK expand
	PARAMETER	(DXFEXPAND=9)
        INTEGER		DXFPOINT		! DXF point
	PARAMETER	(DXFPOINT=10)
C
C FC's for /SCAN output
	INTEGER*2	ARC_FC
	INTEGER*2	CIR_FC
	INTEGER*2	INS_FC
	INTEGER*2	LIN_FC
	INTEGER*2	POI_FC
	INTEGER*2	POL_FC
	INTEGER*2	SOL_FC
	INTEGER*2	TRA_FC
	INTEGER*2	TXT_FC
C
	LOGICAL		HAD_ARC_FC
	LOGICAL		HAD_CIR_FC
	LOGICAL		HAD_INS_FC
	LOGICAL		HAD_LIN_FC
	LOGICAL		HAD_POI_FC
	LOGICAL		HAD_POL_FC
	LOGICAL		HAD_SOL_FC
	LOGICAL		HAD_TRA_FC
	LOGICAL		HAD_TXT_FC
C
C EXPAND variables
	CHARACTER*30	EXPANDNAM(MAXEXPAND)
	INTEGER*2	EXPANDLEN(MAXEXPAND)
	REAL		EXPAND_XOFF(MAXEXPAND)
	REAL		EXPAND_YOFF(MAXEXPAND)
	REAL		EXPAND_ZOFF(MAXEXPAND)
	REAL		EXPAND_XSCL(MAXEXPAND)
	REAL		EXPAND_YSCL(MAXEXPAND)
	REAL		EXPAND_ZSCL(MAXEXPAND)
C
	INTEGER		CURREXPIND
C
C TEXT variables
	INTEGER		CURTEXTIND
	INTEGER		TOTDXFTEXT
C
C common blocks
C
	COMMON	/FC_BLK/ ARC_FC,CIR_FC,INS_FC,LIN_FC,POI_FC,
     &			 POL_FC,SOL_FC,TRA_FC,TXT_FC,
     &			 HAD_ARC_FC,HAD_CIR_FC,HAD_INS_FC,HAD_LIN_FC,
     &			 HAD_POI_FC,HAD_POL_FC,HAD_SOL_FC,HAD_TRA_FC,
     &			 HAD_TXT_FC
C
	COMMON	/LAYBLK/ DXFLAYNAM,DXFLAYLEN,IFFOLAYNO,DXFLAYCOL,
     &			 DXFLAYLTYPE,DXFLAYLTLEN,TOTDXFLAY
C
	COMMON	/ENTBLK/ DXFENTTYP,DXFENTNAM,DXFENTLEN,ENTCOLOUR,
     &			 IFFFCCODE,FRTGTTYPE,FONTNUMBER
C
	COMMON	/SYMBLK/ DXFSYMBOL
	COMMON	/TABBLK/ DXFLINTYP,DXFTEXSTY
	COMMON	/INDBLK/ CURRLAYIND,CURRENTIND,CURRSYMIND,
     &			 CURRLININD,CURRTEXIND
C
	COMMON  /SELBLK/ SELLAYIND,SELENTIND,SELCOLOUR,SELENTTYP
	COMMON	/EXPBLK/ EXPANDNAM,EXPANDLEN,CURREXPIND,
     &			 EXPAND_XOFF,EXPAND_YOFF,EXPAND_ZOFF,
     &			 EXPAND_XSCL,EXPAND_YSCL,EXPAND_ZSCL
C
	COMMON  /LINBLK/ LINE
	COMMON  /LOGBLK/ HAD_LOG,HAD_QUIET,HAD_PNT,HAD_HDR,HAD_ABS,
     &			 HAD_SCAN,HAD_PAR,HAD_DP,NUM_DP
C
	COMMON	/LENBLK/ IFFLEN,DXFLEN,FRTLEN,PARLEN,SCANLEN
	COMMON	/FILBLK/ IFFFIL,DXFFIL,FRTFIL,PARFIL,SCANFIL
C
	COMMON	/TEXTBLK/ CURTEXTIND,TOTDXFTEXT,
     &			  HAD_POINT_SIZES,POINT_SIZES
C
