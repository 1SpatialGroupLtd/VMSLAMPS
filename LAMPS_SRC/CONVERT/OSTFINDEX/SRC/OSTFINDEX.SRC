C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1987-10-26 19:01:04.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	PROGRAM	OSTFINDEX
C
***	MODULE	OSTFINDEX
***	IDENT	26OC87
C
C Copyright Laser-Scan Laboratories Ltd, Cambridge, England
C Author TJ Ibbs, 26 October 1987
C
C This is a very simple program to read the index (if any) from the
C start of an OSTF tape or file. It does not try to cope with the
C real world - it assumes that it is given a correct tape drive name
C or file specification.
C
	IMPLICIT NONE
C
C Parameters
C
	INTEGER		 UNIT		! the unit to read the OSTF on
	PARAMETER	(UNIT=1)
C
C Functions
C
	LOGICAL		LIB$GET_FOREIGN	! get the command line
C
C Workspace
C
 	CHARACTER*1024	NAME		! the name of the input
	INTEGER	     	NAMELEN		! the length of that name
 	LOGICAL		OK		! function return
	INTEGER		FLAG		! the flag at the start of a record
	INTEGER		OTHER		! the other bit of that record
	INTEGER		SHEET		! which sheet this is
	REAL		X1,Y1	      	! the bottom left corner of the sheet
	REAL		X2,Y2		! the top right corner
C
C *********************************************************************
C Get the name of our input
C
	OK = LIB$GET_FOREIGN( NAME,
     &			      'OSTF input from: ',
     &			      NAMELEN )
C
	IF (.NOT.OK) GOTO 9999
C
C So we should have the relevant input name in NAME
C - open it, crashing the program (!) if it doesn't work
C   (isn't FORTRAN i/o wonderful - if we don't allow it to crash,
C    then we won't get sensible error messages...)
C
	OPEN( UNIT=UNIT,  NAME=NAME(:NAMELEN),
     &	      TYPE='OLD', READONLY )
C
C So we can now look at the index
C - first of all, is there one?
C
	READ  (UNIT,1000)	FLAG,OTHER
1000	FORMAT(I4,I4)
C
	IF (FLAG.NE.-21) THEN
	   PRINT 2000,NAME(:NAMELEN)
2000	   FORMAT(1X,'There is no index at the start of ',A)
	   GOTO 9000
	ENDIF
C
C Having read the index header, output the number of sheets in the index
C
	IF (OTHER.EQ.1) THEN
	   PRINT 3000,NAME(:NAMELEN)
	ELSE
	   PRINT 3001,OTHER,NAME(:NAMELEN)
	ENDIF
3000	FORMAT(1X,'There is 1 sheet in ',A)
3001	FORMAT(1X,'There are',I5,' sheets in ',A)
C
C And loop reading the data from the index
C
	DO 500 SHEET = 1,OTHER
C
 	   READ  (UNIT,4000) X1,Y1,X2,Y2
4000	   FORMAT(F8.0/F8.0/F8.0/F8.0)
C
	   PRINT 5000,SHEET,NINT(X1),NINT(Y1),NINT(X2),NINT(Y2)
5000	   FORMAT(1X,'Sheet ',I3,' from ',I8,',',I8,
     &				   ' to ',I8,',',I8)
C
500	CONTINUE
C
C And we will not try to read the final -21, but take it on trust
C
C *********************************************************************
C rewind the input, and close it
C
9000	REWIND UNIT
	CLOSE (UNIT)
C
C and exit
C
9999	CALL EXIT(OK)
	END
