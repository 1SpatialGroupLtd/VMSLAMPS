C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1988-08-11 11:45:46.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	INTEGER FUNCTION CREATE_IFF_FILE()
C
***	MODULE CREATE_IFF_FILE
***	IDENT 03AU88
C
C Copyright Laser-Scan Laboratories Ltd, Cambridge, England
C Author: J.M. Billing			2 August 1988
C
C Routine to create a new IFF file for output of the tape
C contents
C
	IMPLICIT NONE
C
C common blocks
	INCLUDE	'LSL$MGD2I:MGD2I.CMN'
	INCLUDE 'LSL$MGD2I:MGD2IMSG.PAR'
	INCLUDE 'LSL$CMNIFF:MHDEF.CMN'
	INCLUDE 'LSL$CMNIFF:MD2DES.CMN'
C
C w/s
	INTEGER	I,J			! temporary count variables
	REAL	CC(10,2)		! cubic coefficients
C
C functions
	INTEGER	IFFCREATE		! to create a new IFF file
C
C Assume success
C
	CREATE_IFF_FILE = MGD2I__NORMAL
C
C Now create the new IFF file
C
	CREATE_IFF_FILE = IFFCREATE(
     &		OUT_IFF_LUN,			! logical unit number
     &		OUT_IFF_FILE(:OUT_IFF_LEN),	! output file name
     &		,				! no history
     &		,				! default size 100 blks
     &		.TRUE.,				! report when opened
     &		,)				! default o/p rev level
C
C Check for errors
C
	IF (.NOT.CREATE_IFF_FILE) THEN
	   CALL LSL_PUTMSG(CREATE_IFF_FILE)
	   GOTO 900
	ENDIF
C
C Set flag to indicate that IFF file is open
C
	IFF_OPEN = .TRUE.
C
C Write in the (null) header items
C
C RA - RAnge entry
C
	CALL IFFRA(IFF_RANGE)
C
C HI - HIstory entry
C
	CALL IFFHI
C
C MH - Map Header entry
C
	CALL IFFMH(MHARR,MHLEN)
C
C MD - Map Descriptor type 2 entry 
C Null indicated by first word being -1
C
	MD2ARR(1) = -1
	CALL IFFMD(MD2ARR,MD2LEN)
C
C NS - New Section entry
C
	CALL IFFNS ('MGD77 DATA',)
C
C CC - Cubic Coefficient entry
C
C Set up unit cubic coefficient array
C
	DO 20 I = 1,10
	   DO 10 J = 1,2
	      CC(I,J) = 0.0
10	   CONTINUE
20	CONTINUE
C
	CC(2,1) = 1.0
	CC(3,2) = 1.0
C
C and output it to IFF file
C
	CALL IFFCC(CC)
C
C CP - Control Point entry
C
	CALL IFFCP(IFF_CP)
C
C Exit
C
900	RETURN
	END
