C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1988-08-15 18:04:46.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	INTEGER FUNCTION REPLACE_CHARACTER
     &		(TEXT_BUFFER,LENGTH,MATCH_CHAR,REPLACEMENT_CHAR)
C
***	MODULE REPLACE_CHARACTER
***	IDENT 03AU88
C
C Copyright Laser-Scan Laboratories Ltd, Cambridge, England
C Author: J.M. Billing			2 August 1988
C
C Routine to search for all instances of character MATCH_CHAR in byte 
C array TEXT_BUFFER, and replace them with character REPLACEMENT_CHAR
C
	IMPLICIT NONE
C
C common blocks
	INCLUDE	'LSL$MGD2I:MGD2I.CMN'
	INCLUDE 'LSL$MGD2I:MGD2IMSG.PAR'
C
C argmuents
	INTEGER		LENGTH			! length of byte buffer
	BYTE		TEXT_BUFFER(LENGTH)	! byte buffer for search
	CHARACTER*1	MATCH_CHAR		! character to match
	CHARACTER*1	REPLACEMENT_CHAR	! character to replace
C
C w/s
	INTEGER		I			! count variable
C
C functions
C
C Assume success
C
	REPLACE_CHARACTER = MGD2I__NORMAL
C
C Loop to test each character in byte buffer in turn, replacing them if
C needed
C
	DO 10 I = 1,LENGTH
C
C Test if current character matches MATCH_CHAR
C
	   IF (TEXT_BUFFER(I).EQ.ICHAR(MATCH_CHAR)) THEN
C
C If have a match, replace the current character
C
	      TEXT_BUFFER(I) = ICHAR(REPLACEMENT_CHAR)
	   ENDIF
C
10	CONTINUE
C
C Exit
C
	RETURN
	END
