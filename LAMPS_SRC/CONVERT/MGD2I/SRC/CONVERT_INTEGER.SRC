C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1988-08-05 17:03:50.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	INTEGER FUNCTION CONVERT_INTEGER(BUFFER,LENGTH,RET_INT)
C
***	MODULE CONVERT_INTEGER
***	IDENT 03AU88
C
C Copyright Laser-Scan Laboratories Ltd, Cambridge, England
C Author: J.M. Billing			2 August 1988
C
C Routine to convert the string in the specified buffer with
C the specified length into an integer, returned in RET_INT.
C
	IMPLICIT NONE
C
C common blocks
	INCLUDE	'LSL$MGD2I:MGD2I.CMN'
	INCLUDE 'LSL$MGD2I:MGD2IMSG.PAR'
C
C arguments
	INTEGER	LENGTH		! length of buffer
	BYTE	BUFFER(LENGTH)	! byte buffer
	INTEGER	RET_INT		! returned integer value
C
C w/s
C
C functions
	LOGICAL	RDLONG		! to read integer from current buffer
C
C Assume success
C
	CONVERT_INTEGER = MGD2I__NORMAL
C
C Set current input buffer to be that passed as the argument
C
	CALL SETAUX(BUFFER, LENGTH)
C
C Now read the integer from the buffer
C Function returns .TRUE. if the read integer fails
C
	IF (RDLONG(RET_INT)) THEN
C
C Set return code to indicate problem
C
	   CONVERT_INTEGER = MGD2I__ILLEGNUM
C
C Report the problem to the user
C
	   CALL LSL_PUTMSG(CONVERT_INTEGER)
	ENDIF
C
C Reset the pointer to the standard input buffer
C
	CALL BSLN
C
C Exit
C
	RETURN
	END
