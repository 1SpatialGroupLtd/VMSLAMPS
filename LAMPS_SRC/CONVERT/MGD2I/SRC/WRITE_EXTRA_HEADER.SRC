C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1988-08-10 15:32:12.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	INTEGER FUNCTION WRITE_EXTRA_HEADER(BLOCK_NUM)
C
***	MODULE WRITE_EXTRA_HEADER
***	IDENT 03AU88
C
C Copyright Laser-Scan Laboratories Ltd, Cambridge, England
C Author: J.M. Billing			2 August 1988
C
C Routine to write the AC entries to the output IFF file associated
C with the additional type 1 header blocks
C
	IMPLICIT NONE
C
C common blocks
	INCLUDE	'LSL$MGD2I:MGD2I.CMN'
	INCLUDE 'LSL$MGD2I:MGD2IMSG.PAR'
C
C arguments
	INTEGER	BLOCK_NUM	! serial number of this hdr block ie 2-4
C
C w/s
	INTEGER	I		! index variable
C
C functions
	INTEGER	WRITE_AC	! output specified byte buffer as AC
	INTEGER	CHECK_HEADER_SEQUENCE ! validate header sequence numbers
C
C Assume success
C
	WRITE_EXTRA_HEADER = MGD2I__NORMAL
C
C Check that the sequence numbers in the header block are correct
C There are 24 sequences in each header block, numbered as follows
C	Block 1		numbers 01-24
C	Block 2		numbers 25-48
C	Block 3		numbers 49-72
C	Block 4		numbers 73-96
C
C Dont't check for any error return code from this validation process
C
	WRITE_EXTRA_HEADER = CHECK_HEADER_SEQUENCE(
     &		((BLOCK_NUM-1) * 24 + 1),	! lower sequence number
     &		( BLOCK_NUM    * 24)    )	! upper sequence number
C
C There are 24 sequences, each 80 characters long.
C
C Each sequence contains one item - additional documentation from
C characters 1 to 78.
C
C Each additional documentation item will start at an offset of
C	(Seq Num - 1) * 80 + 1
C within the block buffer.
C
C In a loop, output each of these to additional documentation ACs 
C to the header feature.
C
C 'I' holds the sequence number.
C
	DO 10 I = 1,24
C
C Output Additional documentation AC
C
	   WRITE_EXTRA_HEADER = WRITE_AC(
     &	      'M_Additional_doc',BLOCK_BUFFER((I-1)*80+1),78,TEXT_AC)
C
C Check for errors
C
C	   IF (.NOT.WRITE_EXTRA_HEADER) GOTO 900
C
10	CONTINUE
C
C Exit
C
900	RETURN
	END
