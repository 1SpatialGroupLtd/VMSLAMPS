C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1988-08-19 12:03:28.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	INTEGER FUNCTION UPDATE_IFF_HEADER()
C
***	MODULE UPDATE_IFF_HEADER
***	IDENT 03AU88
C
C Copyright Laser-Scan Laboratories Ltd, Cambridge, England
C Author: J.M. Billing			2 August 1988
C
C Routine to rewind IFF file and write the range entry (RA)
C and corner point entry (CP) determined from the points
C in the sheet as they were processed.
C Also writes local origin (i.e. coordinates of first sounding)
C and other information to map descriptor type 2 (MD) entry
C
C This operates on the currently selected IFF file
C
	IMPLICIT NONE
C
C common blocks
	INCLUDE	'LSL$MGD2I:MGD2I.CMN'
	INCLUDE 'LSL$MGD2I:MGD2IMSG.PAR'
	INCLUDE 'LSL$CMNIFF:MD2DES.CMN'
C
C w/s
	INTEGER	I	! temporary count
C
C functions
C
C Assume success
C
	UPDATE_IFF_HEADER = MGD2I__NORMAL
C
C Rewind the IFF file to the beginning
C
	CALL IFFRWD
C
C Find the range entry
C
	CALL IFFNXC('RA',IELEN)
C
C Check that it has been found
C
	IF (IELEN.EQ.-1) THEN
	   CALL LSL_PUTMSG(MGD2I__NOIFFRA)
	   GOTO 900
	ENDIF
C
C Now write the new range entries to it
C
	CALL EIHWR(IFF_RANGE,4,1)
C
C Rewind the IFF file to the beginning
C
	CALL IFFRWD
C
C Find the corner point entry
C
	CALL IFFNXC('CP',IELEN)
C
C Check that it has been found
C
	IF (IELEN.EQ.-1) THEN
	   CALL LSL_PUTMSG(MGD2I__NOIFFCP)
	   GOTO 900
	ENDIF
C
C Set up some corner points based on the coordinate range found
C Firstly the input points
C
	IFF_CP(1,1) = IFF_RANGE(1)	! NW X = RANGE Xmin
	IFF_CP(2,1) = IFF_RANGE(4)	! NW Y = RANGE Ymax
C
	IFF_CP(1,2) = IFF_RANGE(1)	! SW X = RANGE Xmin
	IFF_CP(2,2) = IFF_RANGE(3)	! SW Y = RANGE Ymin
C
	IFF_CP(1,3) = IFF_RANGE(2)	! SE X = RANGE Xmax
	IFF_CP(2,3) = IFF_RANGE(3)	! SW Y = RANGE Ymin
C
	IFF_CP(1,4) = IFF_RANGE(2)	! NE X = RANGE Xmax
	IFF_CP(2,4) = IFF_RANGE(4)	! NE Y = RANGE Ymax
C
C Now the output points, which are the same as the input points for
C each corner
C
	DO 10 I = 1,4
	   IFF_CP(3,I) = IFF_CP(1,I)	! X
	   IFF_CP(4,I) = IFF_CP(2,I)	! Y
10	CONTINUE
C
C Now write the new range entries to it
C
	CALL EIHWR(IFF_CP,16,1)
C
C Once again, rewind the IFF file to the beginning
C
	CALL IFFRWD
C
C And find the map descriptor entry
C
	CALL IFFNXC('MD',IELEN)
C
C Check that it has been found
C
	IF (IELEN.EQ.-1) THEN
	   CALL LSL_PUTMSG(MGD2I__NOIFFMD)
	   GOTO 900
	ENDIF
C
C Now read the map descriptor entry
C
	CALL EIHR(MD2ARR,MD2LEN,1)
C
C Now set up the local origin, which will be 0,0
C
	MD2LOC(1) = 0
	MD2LOC(2) = 0
C
C Set up the flag to indicate this is geographicals
C
	MATV2 = 2
C
C Set up the projection - here it is latitude & longitude
C
	MD2PRJ = 100
C
C Set up the units flag - degrees of arc
C
	MD2UNT = 4
C
C Set flag to indicate ZS entries are LONG LAT
C
	MD2FLP = .FALSE.
C
C Set (dummy) value for spheroid (WGS84) - this field is not really 
C properly specified
C
	MD2SPH = 22
C
C Set value for scale, use 1 because can't think of anything better
C
	MD2SCL = 1
C
C Now write back the modified map descriptor
C
	CALL EIHW(MD2ARR,MD2LEN,1)
C
C Exit
C
900	RETURN
	END
