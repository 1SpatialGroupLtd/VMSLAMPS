C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1988-08-18 20:36:06.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	PROGRAM MGD2I
C
***	MODULE MGD2I
***	IDENT  01AU88
C
C Copyright Laser-Scan Laboratories Ltd, Cambridge, England
C Author: J.M. Billing			1 August 1988
C 
C Tape transfer utility to transfer MGD77 format tapes
C to IFF files.
C
	IMPLICIT NONE
C
C Common blocks
C
	INCLUDE 'LSL$MGD2I:MGD2I.CMN'
	INCLUDE 'LSL$MGD2I:MGD2IMSG.PAR'
	INCLUDE '($SSDEF)'
C
C w/s
	INTEGER		STATUS		! completion status of program
C
C functions
	INTEGER	MGD2I_INIT		! initialisation routine
	INTEGER	DECODE_COMMAND_LINE	! read/decode the command line
	INTEGER	SETUP_TAPE		! position & check tape & device
	INTEGER	CREATE_IFF_FILE		! create output IFF file
	INTEGER	PROCESS_HEADER_BLOCKS	! read header block(s) from 
					! tape, and write to IFF file
	INTEGER	PROCESS_DATA_BLOCKS	! read next data block from 
					! tape, and write to IFF file
	INTEGER	UPDATE_HEADER_ZS	! update the header feature ZS
					! entry with coords of bottom 
					! left corner of IFF file
	INTEGER	UPDATE_IFF_HEADER	! update the RA, CP and MD
					! entries according to the
					! range and local origin
					! determined from the
					! coordinates of the soundings
					! read from the tape
	INTEGER	CLOSE_IFF_FILE		! close IFF file
					! delete it if termination
					! due to an error
	LOGICAL		FRTINI		! Initialise FRTLIB
C
C Set status to indicate normal successful completion
C
	STATUS = SS$_NORMAL
C
C Initialise LSLLIB
C
	CALL LSL_INIT
C
C Initialise the variables, flags etc for this utility
C
	IF (.NOT.MGD2I_INIT()) GOTO 900
C
C Decode the command line, setting up appropriate flags, semaphores
C and variables according to the command line parameters  & qualifiers
C Exit with error if decoding fails (return code is false)
C
	IF (.NOT.DECODE_COMMAND_LINE()) GOTO 900
C
C Set up the tape & tape device, ensuring that it is allocated/mounted
C Position the tape as specified by the command line
C Output appropriate diagnostics & messages
C
	IF (.NOT.SETUP_TAPE()) GOTO 900
C
C Create the output IFF file to which the data read from the tape
C will be transfered
C
	IF (.NOT.CREATE_IFF_FILE()) GOTO 900
C
C Initialise FRTLIB, declaring the FRT file we wish to use for
C translating the names of the ACs for holding the header and sounding
C attributes into the relevant codes
C FRTINI returns a .TRUE. value when it fails
C
	IF (FRTINI(FRT_FILE(:FRT_LEN))) GOTO 900
C
C Process the MGD77 header block(s) (up to 4 type 1 headers, and
C no type 2 headers)
C The header blocks are read from tape and transferred to a single
C feature in layer 0 of the IFF file, where the data is held in
C AC entries
C The feature code (in FS entry) is specified with a command qualifier
C
	IF (.NOT.PROCESS_HEADER_BLOCKS()) GOTO 900
C
C Process all the data blocks, transferring each sounding to
C individual features in layer 1 of the output IFF file
C Each feature contains a ZS entry (x=longitude, y=latitude, 
C z= depth or magnetic or gravity depending on the command line)
C and a number of AC entries, containing the various attributes
C associated with each sounding
C The feature code (in FS entry) is specified with a command qualifier
C The range of the coordinates present is determined by examining every
C point as it is processed
C The local origin is taken to be the first sounding. This is stored
C in the MD entry, and all ZS coordinates are converted to be
C relative to this origin.
C
	IF (.NOT.PROCESS_DATA_BLOCKS()) GOTO 900
C
C Now reposition IFF file at layer 0 header feature's ZS entry
C and write the coordinates of the bottom left corner of the 
C IFF file (as determined from its range) to it
C
	IF (.NOT.UPDATE_HEADER_ZS()) GOTO 900
C
C Now rewind the IFF file to the beginning, and write in the range
C (RA - determined by examining every point as it was processed),
C the corner points (CP - determined from the range) and the local
C origin (MD - equivalent to the first sounding's coordinates)
C
	IF (.NOT.UPDATE_IFF_HEADER()) GOTO 900
C
C Since the program has completed successfully, skip the code
C dealing with error conditions
C
	GOTO 950
C
C Now deal with errors, by setting the status code to indicate failure
C
900	STATUS = SS$_ABORT
C
C Now close the IFF file. The status argument indicates whether it
C should be closed and retained (STATUS is TRUE ie SS$_NORMAL) or 
C closed and deleted (STATUS is FALSE ie SS$_ABORT)
C
950	IF (.NOT.CLOSE_IFF_FILE(STATUS)) STATUS = SS$_ABORT
C
C Finally exit from the program
C
	CALL LSL_EXIT(STATUS)
C
	END
