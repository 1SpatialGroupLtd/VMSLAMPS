C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1988-08-11 11:48:52.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	INTEGER FUNCTION PROCESS_DATA_BLOCKS()
C
***	MODULE PROCESS_DATA_BLOCKS
***	IDENT 03AU88
C
C Copyright Laser-Scan Laboratories Ltd, Cambridge, England
C Author: J.M. Billing			2 August 1988
C
C Routine to read in every data block from the MGD77 tape
C and write out each sounding (separate data record) from it
C to separate features in layer 1 of the output IFF file
C
	IMPLICIT NONE
C
C common blocks
	INCLUDE	'LSL$MGD2I:MGD2I.CMN'
	INCLUDE 'LSL$MGD2I:MGD2IMSG.PAR'
C
C w/s
	LOGICAL	MORE_DATA		! .T. if more data blocks
C
C functions
	INTEGER	START_LAYER		! begin specified layer
	INTEGER	FINISH_LAYER		! finish writing current layer
	INTEGER	READ_DATA_BLOCK		! read next data block
	INTEGER WRITE_DATA_FEATURES	! write ftrs for soundings in
					! in current data block
	INTEGER	FINISH_FILE		! write final entries to end
					! of iff file
C
C Assume success
C
	PROCESS_DATA_BLOCKS = MGD2I__NORMAL
C
C Write the start of layer 1 of the IFF file, into which layer will
C be put all the sounding/data features
C
	PROCESS_DATA_BLOCKS = START_LAYER(1)
C
C Check for errors
C
	IF (.NOT.PROCESS_DATA_BLOCKS) GOTO 900
C
C Set flag to indicate there is still data to come
C
	MORE_DATA = .TRUE.
C
C Now read every data block in turn, and output it to a corresponding
C feature
C
10	PROCESS_DATA_BLOCKS = READ_DATA_BLOCK(MORE_DATA)
C
C Check for errors
C
	IF (.NOT.PROCESS_DATA_BLOCKS) GOTO 900
C
C Write out the contents of the data block to the features in
C the IFF file corresponding to individual soundings
C
	PROCESS_DATA_BLOCKS = WRITE_DATA_FEATURES()
C
C Check for errors
C
	IF (.NOT.PROCESS_DATA_BLOCKS) GOTO 900
C
C Loop to read the next block if there is any more data
C
	IF (MORE_DATA) GOTO 10
C
C Now finish off this layer
C
	PROCESS_DATA_BLOCKS = FINISH_LAYER()
C
C Check for errors
C
	IF (.NOT.PROCESS_DATA_BLOCKS) GOTO 900
C
C Finally, write the last entries to the IFF file to finish it off
C
	PROCESS_DATA_BLOCKS = FINISH_FILE()
C
C Check for errors
C
	IF (.NOT.PROCESS_DATA_BLOCKS) GOTO 900
C
C Exit
C
900	RETURN
	END
