C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1994-06-13 16:48:28.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE WRITE_FEATURE
C
***	IDENT	13JN94
***	MODULE	WRITE_FEATURE
C
C	Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
CMOD	Initialise the number of AC on the next feature	   ST   13-Jun-1994
C	to be zero - variable NUM_AC. Mod 1371.
C	Created						   RJH	21-Oct-1987
C
C	CONVERT IMAP2I Utility - Write feature to IFF file
C
C Description
C
C
	IMPLICIT NONE
C
C Included Parameter Files
C
	INCLUDE 'CMN:IMAP2IMSG.PAR'	! message definitions
	INCLUDE	'LSL$CMNIFF:CB.STR'	! record structure definition
C
C Common Blocks
C
	INCLUDE 'CMN:GLOBAL.CMN'	! global variables
	INCLUDE	'CMN:TABLES.CMN'	! parameter tables
	INCLUDE 'CMN:IFF_AC.CMN'	! AC details
	INCLUDE 'CMN:IFF_FEATURE.CMN'	! feature details
	INCLUDE 'CMN:TEXT.CMN'		! text data
	INCLUDE 'LSL$CMNIFF:IFFHAN.CMN'	! current position in IFF file
C
C If we are about to give up due to an error other than an IFF error 
C (i.e. an error from INFORMAP), then delete the current feature if it 
C has been started. This will normally only apply to line features. 
C
	IF (GIVE_UP) THEN
	   IF ((IERCD .EQ. 0) .AND. (IERNM .EQ. 1)) THEN
	      IF (DONE_START_FEATURE) CALL IFFDEL
	      DONE_START_FEATURE = .FALSE.		! just in case
	   ENDIF
C
C If we have not yet output start of feature data, because we have not
C flushed any point data, then output it now
C
	ELSE
	   IF ( .NOT.DONE_START_FEATURE ) CALL START_FEATURE
C
C Output any points remaining unflushed
C
	   CALL FLUSH
C
C Now, if we are an oriented symbol or text, then output the angle here
C
	   IF (ORI_SYM .OR. IS_TEXT) THEN
	      CALL IFFRO( ANGLE )
	   ENDIF
C
C If this was a text feature, output the text
C
	   IF (IS_TEXT) CALL IFFTX( TEXT, NCHS )
C
C and end the feature
C
	   CALL IFFEF
	ENDIF
C
C Set the number of attribute on the next feature to be zero
C
	NUM_AC = 0
C
C Check that the data was written successfully
C
	IF (.NOT. GIVE_UP) THEN
	   IF ((IERCD .NE. 0) .OR. (IERNM .NE. 1)) THEN
	      CALL LSL_PUTMSG(IMAP2I__IFFABORTED)
	      GIVE_UP = .TRUE.
	   ENDIF
	ENDIF
C
C Return
C
	RETURN
	END
