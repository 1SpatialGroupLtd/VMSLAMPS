C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1987-10-21 18:40:28.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE CONDAT
C
***	IDENT	21OC87
***	MODULE	CONDAT
C
C	Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C	Pinched from IMAP2CAD and modified	RJH	14-Oct-1987
C	Created					RJH	22-OCT-1985
C
C	CONVERT IMAP2I Utility - Data Conversion
C
C Description
C
C
	IMPLICIT NONE
C
C Included Parameter Files
C
	INCLUDE 'CMN:IMAP2IMSG.PAR'	! message definitions
C
C Common Blocks
C
	INCLUDE 'CMN:GLOBAL.CMN'	! global variables
	INCLUDE 'CMN:IFF_MAP.CMN'	! IFF map data
	INCLUDE 'CMN:INFDAT.CMN'	! INFORMAP data
	INCLUDE	'CMN:TABLES.CMN'	! translation tables
C
C Functions called
C
	LOGICAL		GET_LIMITS	! gets drawing limits
	LOGICAL		STARET		! starts data retrieval
C
C Local Variables
C
	INTEGER*4	CURDRA		! current drawing number
	LOGICAL		CANNOT		! cannot retrieve data type
C
C Set the initial INFORMAP data type
C
	DATTYP = MIN_DTYPE
C
C While not dealt with all INFORMAP datatypes, continue
C
100	IF ((DATTYP .GT. MAX_DTYPE) .OR. GIVE_UP) GO TO 300
C
C Check that the current INFORMAP data type is selected
C
	IF (SEL_TAB(DATTYP)) THEN
C
C Initialise current drawing number
C
	   CURDRA = 0
C
C Do each drawing in turn
C
200	   CURDRA = CURDRA + 1
	   CALL STR_TO_BUF(DRALIS(CURDRA),DRABUF,L)
C
C Start the retrieval of data, i.e. open files, etc.
C
	   IF (STARET()) THEN
C
C Find the drawing limits and write the stuff at the start of the 
C IFF file if this is the first time through
C
	      IF (.NOT. DONE_START_MAP) THEN
	         IF (GET_LIMITS()) THEN
	            CALL REPORT(2)
	            CALL WRITE_START
	         ENDIF
	      ENDIF
C
C Now get the data and output it - different courses of action according
C to the INFORMAP data type
C
	      IF (.NOT. GIVE_UP) THEN
	         IF ((DATKND .EQ. 1) .OR. (DATKND .EQ. 5)) THEN
	            CALL RETLIN
	         ELSE IF ((DATKND .EQ. 3) .OR. (DATKND .EQ. 4)) THEN
	            CALL RETSYM
	         ELSE IF (DATKND .EQ. 2) THEN
	            CALL RETTXT
	         ELSE
	            CALL LSL_PUTMSG(IMAP2I__UNKDKIND,DATKND)
	         ENDIF
	      ENDIF
C
C End the data retrieval, i.e. close the files
C
	      CALL ENDRET
	   ENDIF
C
C Repeat if there are still some drawings to do for this datatype
C
	   IF ((CURDRA .LT. NUMDRA) .AND. .NOT. GIVE_UP) GO TO 200
	ENDIF
C
C Increment the INFORMAP data type and go back for test
C
	DATTYP = DATTYP + 1
	GO TO 100
C
C Write stuff at end of IFF file
C
300	CALL WRITE_END
C
C Return
C
	RETURN
	END
