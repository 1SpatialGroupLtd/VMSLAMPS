C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1989-07-06 14:06:16.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE COORD( X, Y )
C
***	IDENT	06JL89
***	MODULE	COORD
C
C Copyright (C) LaserScan Laboratories Ltd, Cambridge, England
C
C Author TJ Ibbs, 7 May 1986
C Pinched from OSTF2I and modified for IMAP2I by R J Hulme, 21-Oct-1987
C
	IMPLICIT NONE
C
C arguments
C
	REAL*8		X	! X coordinate
	REAL*8		Y	! Y coordinate
C
C common blocks
C
	INCLUDE	'CMN:IFF_MAP.CMN'	! for the range
	INCLUDE	'CMN:IFF_POINTS.CMN'	! for the points
C
C local variables
C
	REAL*4	XNEW, YNEW	! co-ords relative to new origin
C
C *********************************************************************
C do we have room for this point?
C
	IF ( STPTR.GE.200 ) CALL FLUSH
C
C subtract the origin offset
C
	XNEW = X - XOFF
	YNEW = Y - YOFF
C
C check if this point is the first, and if not if it is the same
C as the last one - we don't want to duplicate points
C
	IF (DONE_ST .OR. (STPTR.GT.0)) THEN
	   IF (XNEW.EQ.STBUF(1,STPTR).AND.YNEW.EQ.STBUF(2,STPTR)) 
     &		GO TO 999
	ENDIF
C
C so we can now add this new point to our output list
C
	STPTR = STPTR+1
	STBUF(1,STPTR) = XNEW
	STBUF(2,STPTR) = YNEW
C
C and check the range
C
	IF ( STBUF(1,STPTR).GT.RANGE(X_MAX) ) 
     &				RANGE(X_MAX) = STBUF(1,STPTR)
	IF ( STBUF(1,STPTR).LT.RANGE(X_MIN) ) 
     &				RANGE(X_MIN) = STBUF(1,STPTR)
	IF ( STBUF(2,STPTR).GT.RANGE(Y_MAX) ) 
     &				RANGE(Y_MAX) = STBUF(2,STPTR)
	IF ( STBUF(2,STPTR).LT.RANGE(Y_MIN) ) 
     &				RANGE(Y_MIN) = STBUF(2,STPTR)
C
C that's all
C
999	RETURN
	END
