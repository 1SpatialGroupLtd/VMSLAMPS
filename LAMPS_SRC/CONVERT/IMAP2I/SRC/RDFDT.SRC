C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1987-10-21 19:47:22.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL FUNCTION RDFDT
C
***	IDENT	21OC87
***	MODULE	RDFDT
C
C	Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C	Created, based on IMAP2CAD RDFDT	RJH	08-Oct-1987
C
C	CONVERT IMAP2I Utility - Read facet description file
C
C Description
C
C	Reads in facet description file (.FDT)
C
	IMPLICIT NONE
C
C Included Parameter Files
C
	INCLUDE 'CMN:IMAP2IMSG.PAR'	    ! message definitions
	INCLUDE 'CMN:LUN.PAR'		    ! logical unit numbers
	INCLUDE 'LSL$CMNLSL:LSLLIBMSG.PAR'  ! LSLLIB message definitions
C
C Common Blocks
C
	INCLUDE 'LSL$CMNLSL:EXCEPTION.CMN'	! number reading errors
	INCLUDE 'CMN:FACET.CMN'		! facet description
	INCLUDE 'CMN:FILES.CMN'		! filenames
	INCLUDE 'CMN:FLAGS.CMN'		! flags
C
C Functions called
C
	INTEGER*4	FLROPN		! open file for reading
	INTEGER*4	FLRCLO		! close file for reading
	LOGICAL		FDT_LINE	! get the next relevant line
	LOGICAL		RDCH		! reads character
	LOGICAL		RDLONG		! reads a long integer
	LOGICAL		RDDBLE		! reads a double precision real
C
C Local Variables
C
	INTEGER*4	LINE		! count line numbers
	INTEGER*4	I		! counter
	INTEGER*4	ERRCOD		! LSLLIB error code
	INTEGER*4	RETCOD		! system error code
	LOGICAL		EOF		! end of file ?
	LOGICAL		MISSING		! not got all data ?
	BYTE		THISCH		! current character
C
C Assume that everything goes well
C
	RDFDT = .TRUE.
C
C Open our parameter file, read only
C
	ERRCOD = FLROPN(IMAP_FDT,FDTFIL,RETCOD)
C
C If unsuccessful output message
C
	IF (.NOT. ERRCOD) THEN
	   CALL LSL_PUTMSG(IMAP2I__ERROPNFAC,FDTFIL(1:FDTLEN))
	   CALL LSL_ADDMSG(ERRCOD)
	   IF (ERRCOD .EQ. LSL__SYSOPEN) CALL LSL_ADDMSG(RETCOD)
	   GOTO 9999
C
C Otherwise let them know what we are doing if that's what they'd like
C
	ELSEIF (HAD_LOG) THEN
	   CALL LSL_PUTMSG(IMAP2I__READFAC)
	ENDIF
C
C Haven't got a line yet
C
	LINE = 0
	EOF = .FALSE.
	MISSING = .FALSE.
	VAR = -1
C
C Get prefixes for facet name
C
	IF (.NOT. FDT_LINE(LINE,16,EOF)) GOTO 700
	IF (RDCH(THISCH)) GOTO 610
	XPREFIX = CHAR(THISCH)
	IF (RDCH(THISCH)) GOTO 610
	YPREFIX = CHAR(THISCH)
C
C Get facet dimensions
C
	IF (.NOT. FDT_LINE(LINE,1,EOF)) GOTO 700
	IF (RDLONG(XBASE)) GOTO 620
	IF (.NOT. FDT_LINE(LINE,4,EOF)) GOTO 700	! 3
	IF (RDLONG(YBASE)) GOTO 620
C
C Get origin and units
C
	IF (.NOT. FDT_LINE(LINE,4,EOF)) GOTO 700	! 3
	IF (RDLONG(XORIG)) GOTO 620
	IF (.NOT. FDT_LINE(LINE,1,EOF)) GOTO 700
	IF (RDLONG(YORIG)) GOTO 620
	IF (.NOT. FDT_LINE(LINE,1,EOF)) GOTO 700
	IF (RDLONG(TRUNC)) GOTO 620
C
C Skip the next few lines
C
	IF (.NOT. FDT_LINE(LINE,15,EOF)) GOTO 700	! 14
C
C Get the variable facet records
C
	VAR = 0
	DO 110 I=1,1000
	   IF (.NOT. FDT_LINE(LINE,1,EOF)) GOTO 700
	   IF (RDDBLE(VX(I)))  GOTO 620
	   IF (RDCH(THISCH))   GOTO 610			! comma
	   IF (RDDBLE(VY(I)))  GOTO 620
	   IF (RDCH(THISCH))   GOTO 610			! comma
	   IF (RDLONG(VXS(I))) GOTO 620
	   IF (RDCH(THISCH))   GOTO 610			! comma
	   IF (RDLONG(VYS(I))) GOTO 620
	   IF (RDCH(THISCH))   GOTO 610			! comma
	   IF (RDLONG(VXN(I))) GOTO 620
	   IF (RDCH(THISCH))   GOTO 610			! comma
	   IF (RDLONG(VYN(I))) GOTO 620
	   VAR = I
110	CONTINUE
C
C If there are still more facets, warn them
C
	IF (.NOT. FDT_LINE(LINE,1,EOF)) GOTO 700
	CALL LSL_PUTMSG(IMAP2I__MOREVARFAC,VAR)
	MISSING = .TRUE.
	GOTO 800
C
C Can't find character
C
610	CALL LSL_PUTMSG(LSL__UNEXPEOL)
	GOTO 690
C
C Can't read number
C
620	CALL LSL_PUTMSG(ERRNUM)
	IF (ERRNUM .EQ. LSL__HADEXCP) CALL LSL_ADDMSG(LSL_EXCP)
C
C Error decoding line
C
690	CALL LSL_ADDMSG(IMAP2I__LINEINFAC,LINE)
	MISSING = .TRUE.
	GOTO 800
C
C Have we had an error reading the line in ?
C
700	IF (.NOT. EOF) GOTO 9999
	IF (VAR .LT. 0) THEN
	   CALL LSL_PUTMSG(IMAP2I__UNEXPENDFAC)
	   MISSING = .TRUE.
	ENDIF
C
C Close the file
C
800	ERRCOD = FLRCLO(IMAP_FDT,RETCOD)
C
C If unsuccessful output message
C
	IF (.NOT. ERRCOD) THEN
	   CALL LSL_PUTMSG(IMAP2I__ERRCLOFAC,FDTFIL(1:FDTLEN))
	   CALL LSL_ADDMSG(ERRCOD)
	   IF (ERRCOD .EQ. LSL__SYSCLOSE) CALL LSL_ADDMSG(RETCOD)
C
C Otherwise just finish
C
	ELSE
	   IF (.NOT. MISSING) GOTO 9000
	ENDIF
C
C Failure
C
9999	RDFDT = .FALSE.
C
C Return
C
9000	RETURN
	END
