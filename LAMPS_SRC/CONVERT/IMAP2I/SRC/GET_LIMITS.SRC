        LOGICAL FUNCTION GET_LIMITS
C
***     IDENT   21OC87
***     MODULE  GET_LIMITS
C
C	Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C	Created					RJH	21-Oct-1987
C
C	CONVERT IMAP2I Utility - Get map limits
C
C Description
C
C
        IMPLICIT NONE
C
C Included Parameter Files
C
	INCLUDE 'CMN:IMAP2IMSG.PAR'	! message definitions
C
C Common Blocks
C
	INCLUDE 'CMN:FLAGS.CMN'		! flags
	INCLUDE 'CMN:GLOBAL.CMN'	! global variables
	INCLUDE 'CMN:IFF_MAP.CMN'	! IFF map data
	INCLUDE 'CMN:INFDAT.CMN'	! INFORMAP data
C
C Local Variables
C
	INTEGER		I,J		! DO loop variables
C
C Set the offset if it is required from the drawing limits
C
	IF (NEED_OFFSET_VAL) THEN
	   XOFF = XM1
	   YOFF = YM1
	ENDIF
C
C If we are translating a particular area of a drawing in working 
C storage, then the drawing must be at least partially in the required 
C area
C
	CHECK_AREA = HAD_AREA
	IF (HAD_AREA) THEN
	   IF (.NOT. HAD_FACET) THEN
	      IF (      XM2.LT.NGORIG(1) .OR. YM2.LT.NGORIG(2)
     &		   .OR. XM1.GT.NGTOPR(1)  .OR. YM1.GT.NGTOPR(2)
     &	         ) THEN
	         CALL LSL_PUTMSG(IMAP2I__NOTINAREA)
	         GIVE_UP = .TRUE.	! drawing outside required area
	      ELSEIF (    XM1.GE.NGORIG(1) .AND. YM1.GE.NGORIG(2)
     &		    .AND. XM2.LE.NGTOPR(1)  .AND. YM2.LE.NGTOPR(2)
     &		     ) THEN
	         CHECK_AREA  = .FALSE.	! no need to check area
	      ENDIF
	   ENDIF
C
C If an area was given, the boundaries specified are used for the 
C corner points
C
	   IF (.NOT. GIVE_UP) THEN
 	      CPS(1,1) = NGORIG(1) - XOFF
 	      CPS(2,1) = NGTOPR(2) - YOFF
 	      CPS(1,2) = NGORIG(1) - XOFF
 	      CPS(2,2) = NGORIG(2) - YOFF
 	      CPS(1,3) = NGTOPR(1) - XOFF
 	      CPS(2,3) = NGORIG(2) - YOFF
 	      CPS(1,4) = NGTOPR(1) - XOFF
 	      CPS(2,4) = NGTOPR(2) - YOFF
	   ENDIF
C
C Otherwise, the drawing limits are used (working storage only)
C
	ELSE
 	   CPS(1,1) = XM1 - XOFF
 	   CPS(2,1) = YM2 - YOFF
 	   CPS(1,2) = XM1 - XOFF
 	   CPS(2,2) = YM1 - YOFF
 	   CPS(1,3) = XM2 - XOFF
 	   CPS(2,3) = YM1 - YOFF
 	   CPS(1,4) = XM2 - XOFF
 	   CPS(2,4) = YM2 - YOFF
	ENDIF
C
C Copy what we have over to the destination side of the corner points
C
	DO 200 I=3,4
	   DO 100 J=1,4
	      CPS(I,J) = CPS(I-2,J)
100	   CONTINUE
200	CONTINUE
C
C Assign function value 
C
	GET_LIMITS = (.NOT. GIVE_UP)
C
C Return
C
	RETURN
        END
