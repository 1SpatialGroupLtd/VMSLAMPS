C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1989-06-22 16:44:24.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL FUNCTION UP_NAM(NAMSTR)
C
***	IDENT	22JN89
***	MODULE	UP_NAM
C
C	Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C	Pinched from I2IMAP and modified	RJH	22-Jun-1989
C	Created					RJH	13-Jun-1989
C
C	CONVERT IMAP2I Utility - Check & convert INFORMAP attribute name
C
C Description
C
C	Checks if a name is valid and converts it to upper case
C
	IMPLICIT NONE
C
C Included Parameter Files
C
	INCLUDE 'CMN:IMAP2IMSG.PAR'		! message definitions
C
C Arguments
C
	CHARACTER*(*)	NAMSTR		! name to be checked
C
C Local Variables
C
	INTEGER*4	L		! no. of significant chars
	INTEGER*4	I		! counter
	BYTE		THISCH		! current character
C
C Assume success
C
	UP_NAM = .TRUE.
C
C Get the length of the string
C
	L = LEN(NAMSTR)
C
C Convert the string to upper case
C
	CALL UPCASE(NAMSTR)
C
C Deal with each character in turn by extracting it from the string and 
C checking if it is alphabetic
C
	DO 10 I=1,L
	   THISCH = ICHAR(NAMSTR(I:I))
	   IF (THISCH .LT. 'A' .OR. THISCH .GT. 'Z') THEN
	      CALL LSL_PUTMSG(IMAP2I__BADATTNAME,NAMSTR)
	      UP_NAM = .FALSE.
	      GOTO 9999
	   ENDIF
10	CONTINUE
C
C Return
C
9999	RETURN
	END
