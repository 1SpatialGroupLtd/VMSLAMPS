C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1989-02-06 16:58:06.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE WRITE_START
C
***	IDENT	06FE89
***	MODULE	WRITE_START
C
C	Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C	Created					RJH	21-Oct-1987
C
C	CONVERT IMAP2I Utility - Write header data to IFF file
C
C Description
C
C
	IMPLICIT NONE
C
C Included Parameter Files
C
	INCLUDE 'CMN:IMAP2IMSG.PAR'	! message definitions
C
C Common Blocks
C
	INCLUDE 'CMN:FLAGS.CMN'		! flags
	INCLUDE 'CMN:GLOBAL.CMN'	! global variables
	INCLUDE 'CMN:IFF_FEATURE.CMN'	! feature details
	INCLUDE 'CMN:IFF_MAP.CMN'	! IFF map data
	INCLUDE 'LSL$CMNIFF:IFFHAN.CMN'	! current position in IFF file
	INCLUDE	'LSL$CMNIFF:MHDMB.CMN'	! OS style map header
	INCLUDE	'LSL$CMNIFF:MD2DES.CMN'	! map descriptor (type 2)
C
C Local Variables
C
	INTEGER		I,J,K		! DO loop/date variables
	CHARACTER*9	DAT		! date
	CHARACTER*8	TIM		! time
	BYTE		NEW_SECTION(42)	! for NS entry
C
C Initialise FSN's
C
	FSN = 0
C
C Initialise our cubic coefficients array 
C
	DO 20 I = 1,10
	   DO 10 J = 1,2
	      CC(I,J) = 0.0
10	   CONTINUE
20	CONTINUE
C
C Set up the unit matrix for the cubic coefficients
C
	CC(2,1) = 1.0
	CC(3,2) = 1.0
C
C Leave the map header unset by default
C
	MHDESC(1) = 0
	MHDESC(2) = 0
	MHDESC(3) = 0
	MHDESC(4) = 0
C
C Set up a type 2 map descriptor
C
	MATV2 = 2		! type 2 will be set
	MD2LOC(1) = XOFF
	MD2LOC(2) = YOFF
	MD2SCL = SCALE
C
C If this is to be an OS IFF file, set the customer description part of 
C the map header
C
	IF (HAD_OS) THEN
	   MHDESC(1) = 174	! length in longwords
	   MHDESC(2) = 2	! customer is OS
C
C Set the scale and origin offset in the MH and PC
C
	   MHMRCE = NINT(XOFF)
	   MHMRCN = NINT(YOFF)
	   MHSCSC = SCALE
	   PCMRCE = MHMRCE
	   PCMRCN = MHMRCN
	   PCSCSC = MHSCSC
	   MHBGI  = NINT(CPS(1,4)/10)
C
C Also set the projection, units and spheroid in the map descriptor
C
	   MD2PRJ = 101		! projection - UK national grid
	   MD2UNT = 2		! IFF units  - projection units (metres)
	   MD2SPH = 9		! spheroid   - Airy
	ENDIF
C
C Now assemble an NS entry
C
	CALL DATE( DAT )
	CALL TIME( TIM )
	CALL EXPAND
     &	   ('%WCreated by IMAP2I on %S at %S',NEW_SECTION,DAT,TIM)
C
C Assume that the range is something silly
C
	RANGE(X_MIN) =  32767
	RANGE(X_MAX) = -32767
	RANGE(Y_MIN) =  32767
	RANGE(Y_MAX) = -32767
C
C Now output all the stuff before the first feature
C
	LPOSRA = LPOSE			! remember where the RAnge is
	CALL IFFRA( RANGE )		! return & correct this later
	CALL IFFHI			! HI as new type IFF file
	CALL IFFMH( MHARR,MHLEN )	! output OS style map header
	CALL IFFMD( MD2ARR,MD2LEN )	! type 2 MD
	CALL IFFNS( NEW_SECTION, 42 )	! new section
	CALL IFFCC( CC )		! unit matrix cubic coefficients
	CALL IFFCP( CPS )		! sheet corners as corner pts
	LPOSNO = LPOSE			! remember where our NO is going
	CALL IFFNO( 1, 0, 0 )		! output everything in layer 1
C
C Header data now written successfully
C
	IF ((IERCD .EQ. 0) .AND. (IERNM .EQ. 1)) THEN
	   DONE_START_MAP = .TRUE.
C
C Error writing to IFF file
C
	ELSE
	   CALL LSL_PUTMSG(IMAP2I__IFFABORTED)
	   GIVE_UP = .TRUE.
	ENDIF
C
C Return
C
	RETURN
	END
