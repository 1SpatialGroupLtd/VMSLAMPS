	LOGICAL FUNCTION ADD_DTR(DTR_FLAGS,DTR_MIN,DTR_MAX)
C
***	IDENT	22JN89
***	MODULE	ADD_DTR
C
C	Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C	Pinched from I2IMAP and modified	RJH	22-Jun-1989
C	Created					RJH	 6-Jun-1989
C
C	CONVERT IMAP2I Utility - Add a datatype sub-range to selections
C
C Description
C
C	Adds a sub-range of INFORMAP datatypes read from the 
C	parameter file to the current selections
C
C	Expects the parameter file to be open, the current input line 
C	to be in TXTBUF, and the command line decoding pointer to be in 
C	position just before the sub-range to be read.
C
C	Returns FALSE if something goes wrong, TRUE otherwise
C
	IMPLICIT NONE
C
C Included Parameter Files
C
	INCLUDE 'CMN:IMAP2IMSG.PAR'	    ! message definitions
	INCLUDE 'LSL$CMNLSL:LSLLIBMSG.PAR'  ! LSLLIB message definitions
C
C Arguments
C
	INTEGER*4	DTR_MIN		! minimum datatype
	INTEGER*4	DTR_MAX		! maximum datatype
	LOGICAL*1	DTR_FLAGS(DTR_MIN:DTR_MAX)
C					! flags for datatype range
C Common Blocks
C
	INCLUDE 'LSL$CMNLSL:EXCEPTION.CMN'	! number reading errors
C
C Functions called
C
	LOGICAL		RDCHS		! read character
	LOGICAL		RDLONG		! read integer
C
C Local Variables
C
	INTEGER*4	FIRST		! first in range
	INTEGER*4	SECOND		! second in range	
	INTEGER*4	I		! counter
	LOGICAL		OK		! everything OK ?
	BYTE		NXTCH		! next character
C
C Initialisation
C
	OK = .TRUE.
C
C Read the first integer
C
	IF (RDLONG(FIRST)) THEN
C
C If we had an error, give a message
C
	   CALL LSL_PUTMSG(ERRNUM)
	   IF (ERRNUM .EQ. LSL__HADEXCP) CALL LSL_ADDMSG(LSL_EXCP)
	   OK = .FALSE.
C
C Now check for '-' and read the second number if we have a range
C
	ELSE
	   SECOND = FIRST
	   IF (.NOT. RDCHS(NXTCH)) THEN
	      IF (NXTCH .EQ. '-') THEN
	         IF (RDLONG(SECOND)) THEN
	            CALL LSL_PUTMSG(ERRNUM)
	            IF (ERRNUM .EQ. LSL__HADEXCP)
     &			CALL LSL_ADDMSG(LSL_EXCP)
	            OK = .FALSE.
	         ENDIF
	      ELSE
	         CALL BSCH
	      ENDIF
	   ENDIF
C
C Check the range is valid
C
	   IF (OK) THEN
	      IF (FIRST .GT. SECOND) THEN
	         CALL LSL_PUTMSG(IMAP2I__BADRANGE)
	         OK = .FALSE.
	      ELSEIF ((FIRST .GT. DTR_MAX) .OR. 
     &	              (FIRST .LT. DTR_MIN)) THEN
	         CALL LSL_PUTMSG(IMAP2I__BADDTYPE,FIRST)
	         OK = .FALSE.
	      ELSEIF ((SECOND .GT. DTR_MAX) .OR. 
     &	              (SECOND .LT. DTR_MIN)) THEN
	         CALL LSL_PUTMSG(IMAP2I__BADDTYPE,SECOND)
	         OK = .FALSE.
	      ENDIF
C
C Set up this sub-range in our selections
C
	      IF (OK) THEN
	         I = FIRST - 1
10	         I = I + 1
	         IF (DTR_FLAGS(I)) THEN
	            CALL LSL_PUTMSG(IMAP2I__BADRANGE)
	            OK = .FALSE.
	         ELSE
	            DTR_FLAGS(I) = .TRUE.
	         ENDIF
	         IF ((I .LT. SECOND) .AND. OK) GO TO 10
	      ENDIF
	   ENDIF
	ENDIF
C
C Assign function value
C
	ADD_DTR = OK
C
C Return
C
	RETURN
	END
