C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1989-07-06 14:59:06.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE FLUSH
C
***	IDENT	06JL89
***	MODULE	FLUSH
C
C Copyright (C) LaserScan Laboratories Ltd, Cambridge, England
C
C Author TJ Ibbs, 7 May 1986
C Pinched from OSTF2I and modified for IMAP2I by R J Hulme, 21-Oct-1987
C
C To output the contents of the current ST
C
	IMPLICIT NONE
C
C common blocks
C
	INCLUDE	'CMN:IFF_FEATURE.CMN'
	INCLUDE	'CMN:IFF_POINTS.CMN'
C
C workspace
C
	INTEGER*2	IENDS
C
C *********************************************************************
C if the buffer is empty, then RETURN at once, doing nothing
C
	IF ( STPTR.GT.0 ) THEN
C
C	 if we have not yet output the information that goes before the
C	 first ST, output it now
C
	   IF (.NOT.DONE_START_FEATURE) CALL START_FEATURE
C
C	 and work out whether we are drawing through the ST break
C
	   IF ( PEN_UP ) THEN
	      IENDS = 0		! pen up to the ST
	   ELSE
	      IENDS = 1		! pen down to the ST
	   ENDIF
C
C	 output any data we may have in our buffer
C
	   CALL IFFST( STBUF(1,1), STPTR, IENDS )
C
C	 set the continuity point
C
	   STBUF(1,0) = STBUF(1,STPTR)
	   STBUF(2,0) = STBUF(2,STPTR)
	   STPTR = 0
C
C	 and signal that we've output an ST for this feature
C
	   DONE_ST = .TRUE.
C
C	 assume that we will be drawing through the next ST break
C
	   PEN_UP = .FALSE.
C
	ENDIF
C
	RETURN
	END
