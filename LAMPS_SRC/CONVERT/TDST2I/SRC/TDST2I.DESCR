
	TDST2I Format


TDST data is broken into a hierarchy of levels:

a) MASTER level encompassing the whole dataset

b) General logic levels, in hierarchy (back up to MASTER)

Logic levels may contain several subsections (equivalent to features):

1)	POLYGON/VECTOR
2)	ARC
3)	TEXT
4)	POINT/SYMBOL

5)	MULTIPOINT	! collection of symbols?
6)	AREA		! several features enclosing a region
7)	OBJECT		! a collection of associated features

Sections 1 to 4 are converted naturally into IFF features.
Multipoint, Area and Object sections are ignored as there are no
IFF equivalents.

Areas and Objects are composed of their constituent components:
	Arc and Vector for Area 
	Arc, Vector, Text, Point and Multipoint for Object

It is assumed that these components are replicated in their respective
entities, and will therefore be converted into IFF features eventually.


All entities consist of:

1) no. of other logic levels to which this entity belongs, and their names.
These are ignored in TDST2I.
(In the I2TDST conversion, a block name table (BNT) file must be supplied
to give the hierarchy of levels and names for the IFF FC's)

2) no. of objects/areas this entity is a part of, and their ids.
These id's are stored in AC's for the feature if required.

3) geometric data, in particular colour, line style, symbol number, and
coordinates/text.

A parameter file may be supplied so that the user may select (for each of the
supported conversions ARC, POLYGON, POINT/SYMBOL and TEXT) particular FC's 
to be assigned to certain combinations of colour and line style/symbol number.
If, having given a parameter file, a particular TDST combination is absent from
the parameter file, this entity will be ignored. This allows, for example, to 
strip all red features from a TDST2I conversion.

In the absence of any parameter file, FC's will be derived from a combination
of colour and line pattern/symbol number, and default a GT used. This will
inevitably lead to entities/features (different GT's) having the same FC.

