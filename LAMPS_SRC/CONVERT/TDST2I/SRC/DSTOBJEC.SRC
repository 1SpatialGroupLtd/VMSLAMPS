C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1991-03-26 12:05:26.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL*4 FUNCTION DSTOBJEC
C
***	MODULE DSTOBJEC
***	IDENT 26MR91
C
C	Copyright Laser-Scan Ltd., Cambridge, England
C
C	Author  A.D.Trigg, 25th May 1988
C	Processes object entries within logic sections
C
CMOD879 J Barber   				27 April 1990
C	To read across and ignore object sections
C
	IMPLICIT NONE
C
	INCLUDE		'HERE:TDST2I.CMN'
	INCLUDE 	'HERE:TDST2IMSG.PAR'
	INCLUDE 	'LSL$CMNLSL:TXTC.CMN'
C
C  Functions
	INTEGER 	FLRLIN
	INTEGER 	READSTR
	LOGICAL		RDINT
	LOGICAL		RDREAL
	LOGICAL		RDCHS
C
	LOGICAL 	OBJARC
	LOGICAL 	OBJVEC
	LOGICAL 	OBJTEX
	LOGICAL 	OBJPOI
	LOGICAL 	OBJMUL
C
	INTEGER  	SS$_NORMAL
	EXTERNAL 	SS$_NORMAL
C
C  Declarations:
	INTEGER*2	NLEV,NOBJ
	INTEGER*2	NELEM,DUMMY
	BYTE		BDUMMY
	REAL		RDUMMY
	INTEGER		IJK,KJI
	INTEGER 	LEN
	INTEGER*2 	TYPE
	CHARACTER*30 	STRING
C
	BYTE 		NAME_ARRAY(30,MAX_OBJ)
	INTEGER*2	NAME_LEN(MAX_OBJ)
	BYTE		AC_ARRAY(30)
C
C ******************************************************************
C Assume success
C
	DSTOBJEC = %LOC(SS$_NORMAL)
C
C Reset object, level counts
C
	NOBJ = 0
	NLEV = 0
C
C First line either: nlev (followed by level names,ids on further lines)
C		     nobj == 0
C		  or x y ang size
C
C Read and ignore number of levels to which poly belongs
C
	DSTOBJEC = FLRLIN()
	IF (.NOT.DSTOBJEC) GOTO 999
C
	NUMLIN = NUMLIN + 1
	CALL BSLN
C
C Read first as integer (with nothing else on line)
C
	IF (.NOT.RDINT(NLEV) .AND. RDCHS(BDUMMY) ) THEN	   ! an int = nlev
	   GOTO 499
	ELSE
C
C Try as a real
C
	   IF (RDREAL(RDUMMY)) THEN	! failure to read int or real
	      GOTO 900
	   ELSE				! object attribute data 
	      GOTO 699
	   ENDIF
	ENDIF
C
499	DO 501 IJK = 1,NLEV
	   DSTOBJEC = FLRLIN()
	   IF (.NOT.DSTOBJEC) GOTO 999
C
	   NUMLIN = NUMLIN + 1
501	CONTINUE
C
C Read number of objects to which poly belongs [= 0]
C
	DSTOBJEC = FLRLIN()
	IF (.NOT.DSTOBJEC) GOTO 999
C
	NUMLIN = NUMLIN + 1
	CALL BSLN
C
C Read first as integer (with nothing else on line)
C
	IF (.NOT.RDINT(NOBJ) .AND. RDCHS(BDUMMY) ) THEN	   ! an int = nobj
	   GOTO 599
	ELSE
C
C Try as a real
C
	   IF (RDREAL(RDUMMY)) THEN	! failure to read int or real
	      GOTO 900
	   ELSE
	      GOTO 699
	   ENDIF
	ENDIF
C
599	DO 600 IJK = 1,NOBJ
	   DSTOBJEC = FLRLIN()
	   IF (.NOT.DSTOBJEC) GOTO 999
C
	   NUMLIN = NUMLIN + 1
600	CONTINUE
C
C Read and ignore object attribute information
C
	DSTOBJEC = FLRLIN()
	IF (.NOT.DSTOBJEC) GOTO 999
C
	NUMLIN=NUMLIN+1
C
699	CONTINUE
C
C Read object name id for future checking??
C
	DSTOBJEC=FLRLIN()
	IF (.NOT.DSTOBJEC) GOTO 999
C
	NUMLIN=NUMLIN+1
	CALL BSLN
C
	LEN=READSTR(STRING)
C
C Find the number of elements assoc. with the object
C
	DSTOBJEC=FLRLIN()
	IF (.NOT.DSTOBJEC) GOTO 999
C
	NUMLIN=NUMLIN+1
	CALL BSLN
C
	IF (RDINT(NELEM)) GOTO 900
C
C Read each element data
C
	DO 500 IJK=1,NELEM
	   DSTOBJEC=FLRLIN()
	   IF (.NOT.DSTOBJEC) GOTO 999
C
	   NUMLIN=NUMLIN+1
	   CALL BSLN
C
	   IF(RDINT(TYPE))GOTO 900
C
	   IF (TYPE.EQ.0) THEN
	      DSTOBJEC=OBJVEC()
	   ELSEIF (TYPE.EQ.1) THEN
	      DSTOBJEC=OBJARC()
	   ELSEIF (TYPE.EQ.2) THEN
	      DSTOBJEC=OBJTEX()
	   ELSEIF (TYPE.EQ.3) THEN
	      DSTOBJEC=OBJPOI()
	   ELSEIF (TYPE.EQ.4) THEN
	      DSTOBJEC=OBJMUL()
	   ENDIF
C
	   IF (.NOT.DSTOBJEC) GOTO 1000
500	CONTINUE
C
	GOTO 1000
C
900	DSTOBJEC = DSTI__ERRINTLIN
	CALL LSL_PUTMSG(DSTOBJEC,NUMLIN)
	GOTO 1000
C
999	CALL LSL_PUTMSG(DSTOBJEC)
	CALL LSL_ADDMSG(DSTI__ERRINTLIN,NUMLIN)
C
1000	RETURN
	END
C
