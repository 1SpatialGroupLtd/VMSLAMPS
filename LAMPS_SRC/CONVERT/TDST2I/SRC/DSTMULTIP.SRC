C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1991-03-26 12:49:02.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL*4 FUNCTION DSTMULTIP
C
***	MODULE DSTMULTIP
***	IDENT 26MR91
C
C	Copyright Laser-Scan Ltd., Cambridge, England
C
C	Author 	A.D.Trigg, 25th May 1988
c
CMOD879 J Barber 				27 April 1990
C
C	To output object names to which multipoint belongs to ACs
C	All multipoint processing is now commented out so that
C	the fields are just read and ignored
C
C Processes multipoint entries within logic sections.
C DST files have the concept of a 'multipoint' which is a collection
C of associated points. As there is no equivalent in IFF the feature
C is translated into a number of individual point/symbol features.
C
	IMPLICIT NONE
C
	INCLUDE 	'HERE:TDST2I.CMN'
	INCLUDE 	'HERE:TDST2IMSG.PAR'
	INCLUDE		'LSL$CMNLSL:TXTC.CMN'
C
C  Functions
	INTEGER 	FLRLIN
	INTEGER 	READSTR
	LOGICAL		RDINT
	LOGICAL		RDREAL
C
	INTEGER		SS$_NORMAL
	EXTERNAL	SS$_NORMAL
C
C  Declarations:
	INTEGER*2	NLEV,NOBJ,DUMMY
	INTEGER		IJK,KJI,NOP,LEN
	INTEGER*2 	COLOUR		!Colour ID number
	REAL*4		MPHGHT		!Height of feature
	REAL*4		STBUF(2)	!Coord array
	REAL*4		SYM_ANGLE	!Rotn angle
	INTEGER*2 	FS(4)		!Feature status of current feature
	INTEGER*2 	NUMPOS		!Number of points in multipoint feature
	INTEGER*2	NUMSYM		!Symbol ID number
C
	BYTE		NAME_ARRAY(30,MAX_OBJ)
	INTEGER*2	NAME_LEN(MAX_OBJ)
	BYTE		AC_ARRAY(30)
	CHARACTER*30	STRING
C
C ******************************************************************
C Assume success
C
	DSTMULTIP = %LOC(SS$_NORMAL)
C
C Reset object, level counts
C
	NOBJ = 0
	NLEV = 0
C
C First line either: nlev (followed by level names,ids on further lines)
C		     nobj (followed by object names on further lines)
C		  or nsym sno colour height
C
C Read and ignore number of levels to which points belong
C
	DSTMULTIP=FLRLIN()
	IF(.NOT.DSTMULTIP) GOTO 999
C
	NUMLIN=NUMLIN+1
	CALL BSLN
C
C Read first as integer
C
	IF (RDINT(NLEV)) GOTO 900
C
C Check if there is a second integer on the line
C
	IF (RDINT(NLEV)) THEN		! no second int, so it was nlev
	   GOTO 499
	ELSE				! point attribute data
	   GOTO 699
	ENDIF
C
499	DO 500 IJK=1,NLEV
	   DSTMULTIP=FLRLIN()
	   IF(.NOT.DSTMULTIP) GOTO 999
C
	   NUMLIN=NUMLIN+1
500	CONTINUE
C
C Read number of objects to which points belong
C
	DSTMULTIP=FLRLIN()
	IF(.NOT.DSTMULTIP) GOTO 999
C
	NUMLIN=NUMLIN+1
	CALL BSLN
C
C Read first as integer
C
	IF (RDINT(NOBJ)) GOTO 900
C
C Check if there is a second integer on the line
C
	IF (RDINT(NLEV)) THEN		! no second int, so it was nlev
	   GOTO 599
	ELSE				! point attribute data
	   GOTO 699
	ENDIF
C
599	DO 600 IJK=1,NOBJ
	   DSTMULTIP=FLRLIN()
	   IF(.NOT.DSTMULTIP) GOTO 999
C
	   NUMLIN=NUMLIN+1
C
C	   CALL BSLN
C	   LEN = READSTR(STRING)
C
C Store the object names
C
C	   IF (HAD_OBJ) THEN
C	      NAME_LEN(IJK) = LEN
C	      DO 650 KJI = 1,LEN
C		 NAME_ARRAY(KJI,IJK) = TXTBUF(KJI)
C650	      CONTINUE
C	   ENDIF
C
600	CONTINUE
C
C Read multipoint attribute information which applies to each point
C in the feature
C
	DSTMULTIP=FLRLIN()
	IF(.NOT.DSTMULTIP) GOTO 999
C
	NUMLIN=NUMLIN+1
C
699	CONTINUE
C
	CALL BSLN
C
	IF(RDINT(NUMPOS)) GOTO 900	!Number of pts in the multipoint
C	IF(RDINT(NUMSYM)) GOTO 900	!Symbol ID number [= 0]
C	IF(RDINT(COLOUR)) GOTO 900	!Colour ID number
C	IF(RDREAL(MPHGHT)) GOTO 900	!Multipoint height
C
C	FS(1)=(MOD(COLOUR,5)*5)+MOD(NUMSYM,5)+36
C	CALL LIB$INSV(1,14,2,FS(3))
C
C Loop for every point in the multipoint feature to extract coord
C information 
C
	DO 800 IJK=1,NUMPOS
	   NUMFEAT=NUMFEAT+1
	   DSTMULTIP=FLRLIN()
	   IF(.NOT.DSTMULTIP) GOTO 999
C
	   NUMLIN=NUMLIN
 	   CALL BSLN
C
C	   IF(RDREAL(STBUF(1)))  GOTO 900
C	   IF(RDREAL(STBUF(2)))  GOTO 900
C	   CALL UPDATE_RANGE(STBUF(1),STBUF(2))
C	   IF(RDREAL(SYM_ANGLE)) GOTO 900
C
C	   CALL IFFNF(NUMFEAT,NUMFEAT)
C	   CALL IFFFS(FS)
C
C	   IF (HAD_OBJ) THEN
C	      DO 850 NOP = 1,NOBJ
C		 DO 860 KJI = 1,NAME_LEN(NOP)
C		    AC_ARRAY(KJI) = NAME_ARRAY(KJI,NOP)
C860		 CONTINUE
C
C		 CALL IFFAC(AC_NUMBER,0,AC_ARRAY,NAME_LEN(NOP) )
C850	      CONTINUE
C	   ENDIF
C
C	   CALL IFFAC(3,MPHGHT,,)
C	   CALL IFFST(STBUF,1,0)
C	   CALL IFFEF
800	CONTINUE
C
	GOTO 1000
C
900	DSTMULTIP = DSTI__ERRINTLIN
	CALL LSL_PUTMSG(DSTMULTIP,NUMLIN)
	GOTO 1000
C
999	CALL LSL_PUTMSG(DSTMULTIP)
	CALL LSL_ADDMSG(DSTI__ERRINTLIN,NUMLIN)
C
1000	RETURN
	END
C
