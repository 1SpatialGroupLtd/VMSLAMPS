C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1996-06-14 16:51:56.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL FUNCTION READ_FEATCLASS
C
***	IDENT	14JN96
***	MODULE	READ_FEATCLASS
C
C Copyright (C) LaserScan Ltd, Cambridge, England
C
C Author TJ Ibbs, 13 October 1987
CMOD	Handle OS level 3 data				VLG	02-Apr-1990
CMOD							VLG	08-Jun-1990
CMOD	tidied code, added new function IS_CONTINUATION	 SG 	25-Jun-1991
CMOD	Allow for divider after the {FEATDES} field of	 ST	21-Oct-1993
C	the [FEATCLASS] record. Mod 1310.
CMOD    Implement CITF96 changes (WI/CC 1545)           TJM     12-Jun-1996
C
C Read a feature classification record
C
	IMPLICIT NONE
C
C Common files
C
	INCLUDE 'NTF2IMSG.PAR'
	INCLUDE	'CITF.CMN'
	INCLUDE	'COMMANDS.CMN'
	INCLUDE	'NTFDATA.CMN'
	INCLUDE	'RECORD.CMN'
	INCLUDE	'STORE_RECORDS.CMN'
C
C Functions
C
	LOGICAL		IS_CONTINUATION
	LOGICAL		READ_CONTINUE
	LOGICAL		RDINT
C
C Workspace
C
	INTEGER		CODE,POS
	LOGICAL		OK
	CHARACTER*4	FEAT__CODE
	CHARACTER*10	CODE__COM
	CHARACTER*20	ST__CLASS
C
C............................................................................
C
	OK = .TRUE.
C
	IF ( OUTPUT.AND.(FEAT_PTR.EQ.0) ) THEN
	  CALL FLWSTR('Feature classification data:')
	  CALL FLWRTF('	  FC  Comparison  Standard code         Description')
	ENDIF
C
C............................................................................
C
	FEAT_PTR = FEAT_PTR + 1				! next array element
	IF (FEAT_PTR.EQ.(MAX_STORE+1)) THEN		! array full
	   CALL LSL_PUTMSG(NTF2I__TOOMNYREC,'FEATCLASS',MAX_STORE)
	ELSEIF (FEAT_PTR.LE.MAX_STORE) THEN		! space in array
C
C	   ................................................................
C	   read feature code FEAT_CODE field
C
	   FEAT__CODE = STRING(3:6)
	   CODE__COM = STRING(7:16)
	   ST__CLASS = STRING(17:36)
C
	   CALL SETAUX( %REF(FEAT__CODE),4)		! FEAT_CODE field
	   IF (RDINT(CODE)) THEN			! attempt to read number
	      FEAT_CODE(FEAT_PTR) = FEAT_PTR		! dummy value
	      FCNAMES(FEAT_PTR) = FEAT__CODE		! store as text
	      N_FCNAMES = N_FCNAMES + 1
	   ELSE 					! sucess
	      FEAT_CODE(FEAT_PTR) = CODE		! store in array
	   ENDIF
C
C	   ................................................................
C	   other forms of feature code, for comparison purposes
C
	   IF (CODE__COM.NE.' ') THEN			! non-empty CODE_COM
	      COMPARISON(FEAT_PTR)(1:10) = CODE__COM 	! store
	      COMPARISON(FEAT_PTR)(11:20) ='          ' ! pad with spaces
	   ELSEIF (STRING(17:36).NE.' ') THEN		! non-empty STCLASS
	      COMPARISON(FEAT_PTR) = ST__CLASS		! store
	   ELSE						! No comparison code 
	      FEAT_CODE(FEAT_PTR) = 0			! ignore FCODE
	      FEAT_PTR = FEAT_PTR - 1			! decrement array ptr
	   ENDIF
	ENDIF
C
	IF (HAD_CITF93.OR.HAD_CITF96) CALL WRITE_LINE_TO_MH4()
C
C............................................................................
C
	POS = INDEX(STRING(1:LENGTH),DIVIDER)-1
	IF (POS.LE.0) POS = LENGTH-2
	IF (OUTPUT) CALL FLWRTF('%T%S4  %S10  %S20  %S',
     &		FEAT__CODE,CODE__COM,ST__CLASS, STRING(37:POS))
C
C............................................................................
C ignore any continuations
C
200	IF ( IS_CONTINUATION(STRING,LENGTH)) THEN
	   OK = READ_CONTINUE('FEATCLASS')
	   IF (OK) THEN
	      IF (HAD_CITF93.OR.HAD_CITF96) CALL WRITE_LINE_TO_MH4()
	      GOTO 200
	   ENDIF
	ENDIF
C
C............................................................................
C
999	READ_FEATCLASS = OK
	RETURN
	END
