C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1996-06-14 18:33:14.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL FUNCTION UPDATE_IFF_FILE( RA_POSN,  CP_POSN )
C
***     MODULE UPDATE_IFF_FILE
***     IDENT	14JN96
C
C Copyright Laser-Scan Laboratories Ltd, Cambridge, England
C
C Author	S Gupta 26-September-1991
C
C update the RAnge and CP entries, ripped from close_iff_file
C
CMOD    Implement CITF96 changes (WI/CC 1545)           TJM     12-Jun-1996
C
	IMPLICIT NONE
C
C Arguments
C
	INTEGER		RA_POSN		! the position of the RA entry
	INTEGER		CP_POSN		! and the CP entry
C
C Message definitions
C
	INCLUDE	'LUNS.PAR'
	INCLUDE 'NTF2IMSG.PAR'
C
C Common files
C
	INCLUDE	'LSL$CMNIFF:IFFHAN.CMN'
	INCLUDE	'LSL$CMNIFF:MHDMB.CMN'
	INCLUDE	'LSL$CMNLSL:FILENAME.CMN'
	INCLUDE	'CITF.CMN'
	INCLUDE	'COMMANDS.CMN'
	INCLUDE	'FILENAME.CMN'
	INCLUDE	'NTFDATA.CMN'
C
C Functions
C
	REAL		XCONVERT,YCONVERT
C
C Workspace
C
	LOGICAL		OK
	INTEGER*2	IECODE,IELEN
	INTEGER*2	IERR
	REAL		RANGE(4)
	REAL		CORNER_PTS(4,4)
	REAL		R_XMAX, R_XMIN, R_YMAX, R_YMIN
	INTEGER		STORAGE_SCALE
C
C#############################################################################
C Assume the best
C
	OK = .TRUE.
C
C------------------------------------------------------------------------------
C Calculate the range coordinates. XMIN is held at the NTF LEVEL OF ACCURACY.
C So, if XY_MULT were 0.01, a minimum coord of 32.9 would be held in XMIN as
C 3290 so it must be XCONVERTed again.
C
	R_XMIN = XCONVERT(XMIN)
	R_XMAX = XCONVERT(XMAX)
	R_YMIN = YCONVERT(YMIN)
	R_YMAX = YCONVERT(YMAX)
C
C	......................................................................
C	set the values of the array used for the range
C
	RANGE(1) = R_XMIN
	RANGE(2) = R_XMAX
	RANGE(3) = R_YMIN
	RANGE(4) = R_YMAX
C
C	......................................................................
C	check that the NTF range was right and give a warning if not.
C
	IF (.NOT.(HAD_CITF93.OR.HAD_CITF96) .AND.
     &      NTF_RANGE_PRESENT) THEN
	   IF (XMIN - XMIN_NTF .NE. 0) THEN
	      CALL LSL_PUTMSG(NTF2I__BADXMIN,XMIN_NTF,XMIN)
	   ENDIF
	   IF (XMAX - XMAX_NTF .NE. 0) THEN
	      CALL LSL_PUTMSG(NTF2I__BADXMAX,XMAX_NTF,XMAX)
	   ENDIF
	   IF (YMIN - YMIN_NTF .NE. 0) THEN
	      CALL LSL_PUTMSG(NTF2I__BADYMIN,YMIN_NTF,YMIN)
	   ENDIF
	   IF (YMAX - YMAX_NTF .NE. 0) THEN
	      CALL LSL_PUTMSG(NTF2I__BADYMAX,YMAX_NTF,YMAX)
	   ENDIF
	ENDIF
C
C------------------------------------------------------------------------------
C use the same coordinates to set up the corner points in the IFF file
C if we dont have an appropriate scale, leave the max_min values alone
C
	IF (OS_DATA) THEN
	  IF (MHSTSC.EQ.1250) THEN
	    R_XMAX = 500.0
	    R_XMIN = 0.00
	    R_YMAX = 500.0
	    R_YMIN = 0.00
	  ELSEIF (MHSTSC.EQ.2500) THEN
	    R_XMAX = 1000.0
	    R_XMIN = 0.00
	    R_YMAX = 1000.0
	    R_YMIN = 0.00
          ELSEIF (MHSTSC.EQ.10000) THEN
	    R_XMAX = 5000.0
	    R_XMIN = 0.00
	    R_YMAX = 5000.0
	    R_YMIN = 0.00
	  ENDIF
	ENDIF
C
C------------------------------------------------------------------------------
C
	CORNER_PTS(1,1) = R_XMIN				! north-West
	CORNER_PTS(2,1) = R_YMAX
	CORNER_PTS(3,1) = R_XMIN
	CORNER_PTS(4,1) = R_YMAX
C
	CORNER_PTS(1,2) = R_XMIN				! south-west
	CORNER_PTS(2,2) = R_YMIN
	CORNER_PTS(3,2) = R_XMIN
	CORNER_PTS(4,2) = R_YMIN
C
	CORNER_PTS(1,3) = R_XMAX				! south-east
	CORNER_PTS(2,3) = R_YMIN
	CORNER_PTS(3,3) = R_XMAX
	CORNER_PTS(4,3) = R_YMIN
C
	CORNER_PTS(1,4) = R_XMAX				! north-east
	CORNER_PTS(2,4) = R_YMAX
	CORNER_PTS(3,4) = R_XMAX
	CORNER_PTS(4,4) = R_YMAX
C
C------------------------------------------------------------------------------
C move back to the RA entry
C
	CALL IFFPKE( IECODE,IELEN,RA_POSN )
	IF ((IELEN.EQ.-1).OR.(IECODE.NE.'RA')) THEN
	   CALL LSL_PUTMSG(NTF2I__UPDRA,IECODE,IELEN)
	   OK = .FALSE.
	   GOTO 9999
	ELSE
	   IF (FSN.EQ.0) THEN
	      RANGE(1)=0.0
	      RANGE(2)=0.0
	      RANGE(3)=0.0
	      RANGE(4)=0.0
	   ENDIF
	   CALL EIHWR( RANGE,4,1 )
	ENDIF
C
C------------------------------------------------------------------------------
C update the CP
C
	CALL IFFPKE( IECODE,IELEN,CP_POSN )
	IF ((IELEN.EQ.-1) .OR. (IECODE.NE.'CP') ) THEN
	   CALL LSL_PUTMSG(NTF2I__UPDCP)
	   OK = .FALSE.
	   GOTO 9999
	ELSE
	   CALL EIHWR( CORNER_PTS,16,1 )
	ENDIF
C
C###############################################################################
C
9999	UPDATE_IFF_FILE=OK
	RETURN
	END
