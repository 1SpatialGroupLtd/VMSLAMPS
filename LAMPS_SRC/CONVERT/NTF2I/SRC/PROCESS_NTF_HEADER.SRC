C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1993-07-07 15:05:22.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL FUNCTION PROCESS_NTF_HEADER
C
***	IDENT	07JL93
***	MODULE	PROCESS_NTF_HEADER
C
C Copyright (C) LaserScan Laboratories Ltd, Cambridge, England
C
C Author SG 15-JULY-1991
C
C 	process the ntf header records, adapted from READ_NTF()
C
CMOD	moved out of sequence code which opened and parsed ATTR and FRT files
C	to NTF2I, after CMDLIN				SG	17-sep-1991
CMOD	BS7567 (v2.0) support added (W93/13)		ST	07-Jul-1993
C
	IMPLICIT NONE
C
C Includes:
C
	INCLUDE	'NTF2IMSG.PAR'
	INCLUDE 'LSL$CMNLSL:LSLLIBMSG.PAR'
C
	INCLUDE	'ATTRIBUTE.CMN'
	INCLUDE	'COMMANDS.CMN'
	INCLUDE	'RECORD.CMN'
	INCLUDE	'STORE_RECORDS.CMN'
	INCLUDE	'NTFDATA.CMN'
C
C Functions
C
	LOGICAL		READ_RECORD		! read next record from NTF
	LOGICAL		READ_CONTINUE
	LOGICAL		IS_CONTINUATION
	LOGICAL		CHECK_IF_WARNED
	LOGICAL		READ_VOLHDREC
	LOGICAL		READ_DBQUAL
	LOGICAL		READ_DBHREC
	LOGICAL		READ_FEATCLASS
	LOGICAL		READ_ATTDESC		! Read attribute desc record
	LOGICAL		READ_ATTCOM		! Read combined attr record
C
C Workspace
C
	LOGICAL		OK			! Function return
	INTEGER		I
C
	CHARACTER*2	NTF$_REC_DESCR
C
C *****************************************************************************
C
	OK     = .TRUE.				! assume success
	RECNUM = 0				! no records read yet
	FEAT_PTR = 0				! No FEATCLASS records read yet
	N_FCNAMES = 0		
	HAD_TXT_GEOM = .FALSE.
C
C Set field widths and types of default attributes that are in attribute file
C
	CALL SET_DEFAULT_ATTS()
C
C..............................................................................
C read the first record
C
	OK=READ_RECORD()
	IF (.NOT.OK) GOTO 9999
C
C	.......................................................................
C	insist on a volume header record
C
	NTF$_REC_DESCR = STRING(1:2)
	OK = (NTF$_REC_DESCR.EQ.REC$_VOLHEAD)			! VOLHDREC?
	IF (OK) THEN						! yes
	   OK = READ_VOLHDREC()					! process it
	ELSE							! no
	   CALL LSL_PUTMSG(NTF2I__NOVOLHDREC)			! complain
	   CALL LSL_ADDMSG(NTF2I__UNEXPREC, NTF$_REC_DESCR, RECNUM)
	ENDIF
	IF (.NOT.OK) GOTO 9999					! errors
C
C..........................................................................
C now we know the level, we can validate the /ATTR qualifier. We may have
C already opened the ATTRIBUTE file, but that was not an expensive operation
C
	IF (HAD_ATTRIBUTE.AND.(LEVEL.LT.2).AND.VERSION.EQ.1.1) THEN
	   CALL LSL_PUTMSG ( NTF2I__NOATTR )
	   HAD_ATTRIBUTE = .FALSE.
	ENDIF

C ......................................................................
C after this, read each record in turn
C
	DO WHILE (OK.AND.( SEC_REC.LT.SECRECNUM ) )	! while more records
	  OK=READ_RECORD()				! read record
	  IF (.NOT.OK) GOTO 9999			! err
4000	  NTF$_REC_DESCR = STRING(1:2)			! change REC_DESCR
C
C	  ................................................................
C
	  IF ( NTF$_REC_DESCR.EQ.REC$_DBQUAL) THEN
	     CALL READ_DBQUAL()
C
C	  ................................................................
C
	  ELSE IF ( NTF$_REC_DESCR.EQ.REC$_DBHREC) THEN
	    OK = READ_DBHREC()
C 
C	  ................................................................
C
	  ELSE IF ( NTF$_REC_DESCR.EQ.REC$_FEATCLASS) THEN
	    OK = READ_FEATCLASS()
C
C	  ................................................................
C
	  ELSE IF ( NTF$_REC_DESCR.EQ.REC$_ATTDESC) THEN
	    IF ( LEVEL.GT.1.AND.HAD_ATTRIBUTE ) THEN		! is it allowed
	      OK = READ_ATTDESC()
	    ELSE						! not allowed
	      IF ( LEVEL.EQ.1 ) THEN
		 IF (VERSION.EQ.1.1) THEN
		    CALL LSL_PUTMSG( NTF2I__NOTATLEVEL,REC$_ATTDESC,1)
		 ENDIF
	      ELSE
	         CALL LSL_PUTMSG( NTF2I__ATTDESCIGN )
		 CALL WRITEF('-NTF2I-I-MISC, no ATTRIBUTE file given')
	      ENDIF
C
C	      ..............................................................
C 	      skim through any continuation records
C
	      DO WHILE (IS_CONTINUATION(STRING,LENGTH))
	        OK = READ_CONTINUE('ATTDESC')
	      END DO
	    ENDIF
C
C	  ................................................................
	  ELSE IF ( NTF$_REC_DESCR.EQ.REC$_ATTCOM) THEN
	      OK = READ_ATTCOM()
C
C	  ................................................................
	  ELSE IF ( NTF$_REC_DESCR.EQ.REC$_COMMENT ) THEN
	     CALL READ_COMMENT()
C
C	  ................................................................
C
	  ELSE						! not recognised
	     OK = CHECK_IF_WARNED( NTF$_REC_DESCR, NTF2I__UNEXPREC, RECNUM)
	  ENDIF
C
C	  ................................................................
C
	END DO
C
C ****************************************************************************
C Sort out our return status
C
9999	PROCESS_NTF_HEADER = OK
	RETURN
	END
