	LOGICAL FUNCTION CALC_SYMB_POINT(NCOORDS)
C
***     MODULE CALC_SYMB_POINT
***     IDENT  11DE92
C
C Copyright Laser-Scan Ltd, Cambridge, England
C
C       Author					S Townrow 11-Dec-1992
C
C Description
C
C A routine to find the second point of a scaled symbol if the CITF feature
C had a DT (distance) and OR (orientation) attribute.
C
	IMPLICIT NONE
C
C Messages:
C
	INCLUDE 'NTF2IMSG.PAR'
C
C Argument:
C
	INTEGER*4	NCOORDS
C
C Commons:
C
	INCLUDE 'CITF.CMN'
	INCLUDE 'NTFDATA.CMN'
C
C Workspace:
C
	LOGICAL		OK		! Success flag
	INTEGER*4	I
	REAL*4		XO,YO,DX,DY
	INTEGER*4	ANINT
	REAL*4		REALINT
	EQUIVALENCE 	(ANINT,REALINT)
	REAL		PI
	PARAMETER	(PI=3.1415926)
C
C------------------------------------------------------------------------------
C
	OK=.TRUE.	! Assume success
	IF (NCOORDS.GT.1) THEN
	   GOTO 999
	ENDIF
C
C Check UNITS
C
	IF (XY_UNIT.EQ.3) DT = DT * 0.3048
C
C Get symbol point
C
	ANINT = OUTBUF(POINT_X,1)
	XO = REALINT
	ANINT = OUTBUF(POINT_Y,1)
	YO = REALINT
C
C Find the x and y components
C
	IF (OR.EQ.0.0) THEN
	   DX = DT
	ELSE
	   DX = DT*COS(OR)
	ENDIF
C
C Calculate the second point
C
	DY = DT*SIN(OR)
	REALINT = XO + DX
	OUTBUF(POINT_X,2) = ANINT
	REALINT = YO + DY
	OUTBUF(POINT_Y,2) = ANINT
	NCOORDS = 2
C
C The rest of the per-point attributes should be absent as it is not a captured
C point
C
	DO 500 I = 3,20
	   OUTBUF(I,2) = IFF_ABSENT
500	CONTINUE
C
C------------------------------------------------------------------------------
C
999	CALC_SYMB_POINT=OK
	RETURN
	END
