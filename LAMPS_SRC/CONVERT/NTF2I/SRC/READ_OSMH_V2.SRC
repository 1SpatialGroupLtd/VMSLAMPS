C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1993-06-03 17:01:52.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL FUNCTION READ_OSMH_V2
C
***     MODULE READ_OSMH_V2
***     IDENT	03JN93
C
C Copyright Laser-Scan Laboratories Ltd, Cambridge, England
C
C Author						ST 02-Jun-93
C
C Based on READ_OSMH, this routine read the OS specific data from the SECHREC
C for NTF v2.0 (BS7567).
C
	IMPLICIT NONE
C
C Commons:
C
	INCLUDE 'NTF2IMSG.PAR'
	INCLUDE 'LSL$CMNIFF:MHDMB.CMN'  ! OS map header common
	INCLUDE	'LSL$CMNIFF:MD2DES.CMN'	! and the map descriptor
	INCLUDE 'COMMANDS.CMN'
	INCLUDE	'NTFDATA.CMN'
	INCLUDE	'RECORD.CMN'
C
C Functions:
C
	LOGICAL		RDINT		! read an integer from input buffer
	LOGICAL		RDLONG		! read a long integer
	LOGICAL		OSMH_TO_BINDAY	! convert to ICL bindary days
	LOGICAL		READ_CONTINUE	! read next record
	LOGICAL		IS_CONTINUATION
C
C Workspace:
C
	LOGICAL		OK,HAD_ERR	! Success flag2
	INTEGER		I,J
C
	INTEGER		YEAR,MONTH,DAY	! full form of date
C
	CHARACTER*8	NTF$_COPYRIGHT
	CHARACTER*8	NTF$_LAST_AMND
	CHARACTER*9	NTF$_STORAGE_SCALE
	CHARACTER*8	NTF$_SURV_DATE
C
	CHARACTER*4	NTF$_YEAR
	CHARACTER*2	NTF$_DAY
	CHARACTER*2	NTF$_MONTH

C
C--------------------------------------------------------------------------
C We can start the map header off at once
C
	PCSCSC = MD2SCL		! Source scale - already read for MD
	MHMRCE = MD2LOC(1)	! Sheet origin
	MHMRCN = MD2LOC(2)
	PCMRCE = MHMRCE		! In both required places, MH and PC
	PCMRCN = MHMRCN
C
C--------------------------------------------------------------------------
C already have the 2nd record of the SECHREC entry in hand,
C
	NTF$_SURV_DATE = STRING(53:60)			! survey date
	NTF$_LAST_AMND = STRING(61:68)			! date of last amendmnt
	NTF$_COPYRIGHT = STRING(69:76)			! date of copyright
C
C--------------------------------------------------------------------------
C read stuff from SURV_DATE
C
	NTF$_YEAR  = NTF$_SURV_DATE(1:4)
	NTF$_MONTH = NTF$_SURV_DATE(5:6)
	HAD_ERR = .FALSE.
C
C	..................................................................
C	Read the survey year and month
C
	CALL SETAUX(%REF(NTF$_YEAR),4)			! set reading buffer
	HAD_ERR = RDINT(YEAR)				! Get the year
	IF (.NOT.HAD_ERR) THEN				! had an error?
	  CALL SETAUX(%REF(NTF$_MONTH),2)		! set reading buffer
	  HAD_ERR = RDINT(MONTH)			! Now get the month
	ENDIF
C
C	..................................................................
C	did we read the month and year ok?
C
	IF (HAD_ERR) THEN				! an error occured
	   CALL LSL_PUTMSG(NTF2I__SECHREC,'SURVEY_DATE',SEC_REC)
	   CALL LSL_ADDSTR(NTF$_SURV_DATE)
	   CALL LSL_ADDMSG(NTF2I__ABASECHREC)
	   GOTO 1000
	ENDIF
C
C	..................................................................
C	Note that this field is now superseded by MHOSUR, but MHOSUR 
C	gets set by the "SURVEY_DATES_FIRST_LAST" OS extension field
C
	CALL OSMH_PUTMY( MHSURD, MONTH,YEAR )		! store it
C
C--------------------------------------------------------------------------
C read LAST_AMND field, could have expressed as nested IFs, but too cryptic
C
	NTF$_YEAR  = NTF$_LAST_AMND(1:4)
	NTF$_MONTH = NTF$_LAST_AMND(5:6)
	NTF$_DAY   = NTF$_LAST_AMND(7:8)
	YEAR  = 0
	MONTH = 0
	DAY   = 0
	MHDLA = 0					! default
C
C	..................................................................
C
	IF (NTF$_DAY.NE.' ') THEN
	  CALL SETAUX(%REF(NTF$_DAY),2)			! Get the day
	  OK = .NOT.RDINT(DAY) 
	ENDIF
C
	IF ((OK).AND.(NTF$_MONTH.NE.' ')) THEN		! blank field
	  CALL SETAUX(%REF(NTF$_MONTH),2)
	  OK = .NOT.RDINT(MONTH)
	ENDIF
C
	IF ((OK).AND.(NTF$_YEAR.NE.' ')) THEN
	    CALL SETAUX(%REF(NTF$_YEAR),4)
	    OK = .NOT.RDINT(YEAR)
	ENDIF
C
C	..................................................................
C	and convert it to an ICL binary date in the map header (Obsolete)
C
	IF (OK.AND.(YEAR.GT.0)) OK = OSMH_TO_BINDAY( MHDLA, DAY,MONTH,YEAR )
C
C	..................................................................
C	cleanup after errors
C
	IF (.NOT.OK) THEN
	  CALL LSL_PUTMSG(NTF2I__SECHREC,'LAST_AMND',SEC_REC)
	  CALL LSL_ADDSTR(NTF$_LAST_AMND)
	  CALL LSL_ADDMSG(NTF2I__ABASECHREC)
	  GOTO 1000
	ENDIF
C
C--------------------------------------------------------------------------
C Copyright date - only interested in the year
C
	NTF$_YEAR = NTF$_COPYRIGHT(1:4)
	MHCPYD = 0
C
	IF (NTF$_YEAR.NE.' ') THEN
	  CALL SETAUX(%REF(NTF$_YEAR),4)
	  IF (RDINT(MHCPYD)) THEN
	    CALL LSL_PUTMSG(NTF2I__SECHREC,'COPYRIGHT',SEC_REC)
	    CALL LSL_ADDSTR(NTF$_COPYRIGHT)
	    CALL LSL_ADDMSG(NTF2I__ABASECHREC)
	  ENDIF
	ENDIF
C
C--------------------------------------------------------------------------
C optional continuation record at v2.0
C
1000	IF (IS_CONTINUATION(STRING,LENGTH)) THEN
	  OK = READ_CONTINUE('SECHREC')
	  IF (.NOT.OK) GOTO 999
	ELSE
	  OK = .TRUE.
	  GOTO 999
	ENDIF
C
C-------------------------------------------------------------------------
C Check if we have a short OS header. A small scale (eg 625000) file has a
C 3rd header record shorter than a large scale file. Therefore we must skip
C the remaining fields since they are not present.
C
	IF (LENGTH.EQ.32) GOTO 999
C
C--------------------------------------------------------------------------
C Ignore the SQNAME and SQDATE, as we're not really interested in them.
C
	NTF$_STORAGE_SCALE		= STRING(31:39)
C
C	-------------------------------------------------------------------
C	Storage scale
C 
	MHSTSC = 0
	IF (NTF$_STORAGE_SCALE.NE.' ') THEN
	  CALL SETAUX(%REF(NTF$_STORAGE_SCALE),9)
	  IF (RDLONG(MHSTSC)) THEN
	    CALL LSL_PUTMSG(NTF2I__SECHREC,'STORAGE_SCALE',SEC_REC)
	    CALL LSL_ADDSTR(NTF$_STORAGE_SCALE)
	    CALL LSL_ADDMSG(NTF2I__ABASECHREC)
	    GOTO 2000
	  ENDIF
	ENDIF
C	-------------------------------------------------------------------
C	Use scale to calcluate BGI
C
	IF (MHSTSC.GT.0) MHBGI = INT(0.4 * FLOAT(MHSTSC) / 10.0)
C
C Ignore any remaining continuation records
C
2000	IF (IS_CONTINUATION(STRING,LENGTH)) THEN
	  OK = READ_CONTINUE('SECHREC')
	  IF (.NOT.OK) GOTO 999
	  GOTO 2000
	ENDIF
C
C .......................................................................
C
999	READ_OSMH_V2=OK
	RETURN
	END
