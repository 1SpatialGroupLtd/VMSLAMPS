C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1996-06-14 17:51:44.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL FUNCTION READ_VOLTERM
C
***	IDENT	14JN96
***	MODULE	READ_VOLTERM
C
C Copyright (C) LaserScan Laboratories Ltd, Cambridge, England
C
C Author TJ Ibbs, 5 October 1987
C
CMOD    Implement CITF96 changes (WI/CC 1545)           TJM     12-Jun-1996
C
	IMPLICIT NONE
C
C Messages
C
	INCLUDE	'($DMTDEF)'
	INCLUDE	'NTF2IMSG.PAR'
C
C Common files
C
	INCLUDE	'LSL$CMNLSL:FILENAME.CMN'
	INCLUDE	'CITF.CMN'
	INCLUDE	'COMMANDS.CMN'
	INCLUDE	'FILENAME.CMN'
	INCLUDE	'NTFDATA.CMN'
	INCLUDE	'RECORD.CMN'
C
C Functions
C
	LOGICAL 	TTRSTR
C
C Local vars
C
	INTEGER		POS		! position of CONT_VOL flag
	LOGICAL		OK		! Function return
C
C------------------------------------------------------------------------------
C
	OK = .TRUE.
C
C Check this is a VOLTERM
C
	IF (STRING(1:2).NE.REC$_VOLTERM) THEN
	   CONT_VOL = .FALSE.
	   OK = .FALSE.
	   GOTO 999
	ENDIF
C
C if the free text in the record is not blank, output it to our
C log file
C
	IF ( STRING(3:LENGTH-2).NE.' ' .AND. OUTPUT ) THEN
	   CALL FLWRTF('Volume termination record:')
	   CALL FLWRTF('	%S',STRING(3:LENGTH - 2))
	ENDIF
C
C   If the continuation mark is set then its a multi-volume set so
C   dismount tapedrive, prompt user to reload, then remount.
C
	IF (HAD_CITF93.OR.HAD_CITF96) THEN
	   IF (FIXED) THEN
	      POS = 79
	   ELSE
	      POS = 66
	   ENDIF
	ELSE
	   POS = LENGTH - 1
	ENDIF
	CONT_VOL = STRING(POS:POS).EQ.'1'
	IF (CONT_VOL.AND.IS_MAGTAPE)  THEN
	   CALL SYS$DISMOU(DEVICE(:DEVLEN),%VAL(DMT$M_UNLOAD))
	   VOLCOUNT = VOLCOUNT + 1
	   CALL WRITEF('Please mount volume %N on %S',
     &			VOLCOUNT,DEVICE(:DEVLEN))
	   OK = TTRSTR(,,'press RETURN when ready:')
	   OK = TTRSTR(,,'Are you sure? If so press RETURN again:')
	   CALL MOUNT_TAPE(DEVICE(:DEVLEN),.TRUE.)
	ELSE
	   VOLCOUNT = 1
	ENDIF
C
999	READ_VOLTERM = OK
	RETURN
	END
