	LOGICAL FUNCTION FIND_GEOM(IN_GEOM_ID,END,LEV,FOUND)
C
***     MODULE FIND_GEOM
***     IDENT	17JN96
C
C Copyright Laser-Scan Ltd, Cambridge, England
C
C Author					S. Townrow	12-Dec-94
C
C Given a GEOM_ID, this routine does the actual string manipulation to find it
C in the current record in hand including any continuation records.
C
CMOD    With MERIDIAN data can have the start AND end of a link MIK 17-Jun-1996
C       at the same node. If END doesn't equal -1 then need to
C       get the other end required. Mod 1546
C
C
	IMPLICIT NONE
C
C Arguments:
C
	INTEGER		IN_GEOM_ID		! the GEOM_ID we're looking for
	INTEGER		END			! which end of the found line
	INTEGER		LEV			! the level of the found line
	LOGICAL		FOUND			! result indicator
C
C Common:
C
	INCLUDE 'LUNS.PAR'
	INCLUDE 'CACHE.PAR'
	INCLUDE	'RECORD.CMN'
	INCLUDE 'FILE_REC.CMN'
	INCLUDE 'CACHE.CMN'
C
C Functions:
C
	LOGICAL		RDINT			! read an integer
	LOGICAL		RDLONG			! read a bigger integer
	LOGICAL		READ_CONTINUE		! read continuation record
	LOGICAL		READ_RECORD		! read the next record
        LOGICAL         IS_CONTINUATION		! does the record continue?
C
C Workspace:
C
	LOGICAL		OK			! Success flag
	INTEGER		I,POS			! general loop
	INTEGER         END_REQUIRED            ! which end do we require
C
	INTEGER*4	NODE_ID			! The fields in a NODEREC
	INTEGER*4	NUM_LINKS
	INTEGER*4	DIR
	INTEGER*4	GEOM_ID
	INTEGER*4	LEVEL
C
	CHARACTER*6	NTF$_NODE_ID		! The fields in a NODEREC
	CHARACTER*4	NTF$_NUM_LINKS
	CHARACTER*1	NTF$_DIR
	CHARACTER*6	NTF$_GEOM_ID
	CHARACTER*1	NTF$_LEVEL
C
C------------------------------------------------------------------------------
C
	OK = .TRUE.
	FOUND = .FALSE.
C
C Check if we need a particular end.
C
	IF (END.NE.-1) THEN
	   IF (END.EQ.1) THEN
	      END_REQUIRED = 2
	   ELSE
	      END_REQUIRED = 1
	   ENDIF
	ELSE
	   END_REQUIRED = -1
	ENDIF
C
C Get the NODE_ID number
C
	NTF$_NODE_ID = STRING(3:8)
	CALL SETAUX(%REF(NTF$_NODE_ID),6)
	OK = .NOT.RDLONG(NODE_ID)		! read NODE_ID field	
C
	IF (.NOT.OK) THEN
C
C If it failed, use the string to report the error
C
	   CALL WRITEF('%%NTF2I-E-MISC, unable to read NODE_ID field from NODEREC %S',NTF$_NODE_ID(1:6))
	   GOTO 999
	ENDIF
C
C see how many links come into this node
C
	NTF$_NUM_LINKS = STRING(15:18)
	CALL SETAUX(%REF(NTF$_NUM_LINKS),4)
	OK = .NOT.RDINT(NUM_LINKS)		! read NUM_LINKS field	
C
	IF (.NOT.OK) THEN
	   CALL WRITEF('%%NTF2I-E-MISC, unable to read NUM_LINKS field from NODEREC %^L%I0',NODE_ID)
	   GOTO 999
	ENDIF
C
C Start reading the links from character position 19
C
	POS = 19
C
C Loop around all the links at this node
C
	DO 100 I = 1,NUM_LINKS
C
C------------------------------------------------------------------------------
C Read the direction
C
	   NTF$_DIR = STRING(POS:POS)
	   CALL SETAUX(%REF(NTF$_DIR),1)
	   OK = .NOT.RDINT(DIR)				! read DIR field
C
	   IF (.NOT.OK) THEN
	      CALL WRITEF('%%NTF2I-E-MISC, unable to read DIR field from NODEREC %^L%I0',NODE_ID)
	      GOTO 999
	   ENDIF
	   POS = POS + 1
C
C Check for continuation
C
	   IF (POS.GE.LENGTH-1) THEN
	      IF ( IS_CONTINUATION(STRING,LENGTH)) THEN	! any more ?
		 OK = READ_CONTINUE('NODEREC')		! check record exists
		 IF (OK) THEN
		    POS = 3
		 ELSE
		    CALL WRITEF('%%NTF2I-E-MISC, unable to read continuation record for NODEREC %^L%I0',NODE_ID)
		    OK = .FALSE.
		    GOTO 999
		 ENDIF
	      ELSE
		 CALL WRITEF('%%NTF2I-E-MISC, insufficient info in NODEREC %^L%I0 - no continuation record found',NODE_ID)
		 OK = .FALSE.
		 GOTO 999
	      ENDIF
	   ENDIF
C
C------------------------------------------------------------------------------
C Read the GEOM_ID
C
	   NTF$_GEOM_ID = STRING(POS:POS+5)
	   CALL SETAUX(%REF(NTF$_GEOM_ID),6)
	   OK = .NOT.RDLONG(GEOM_ID) ! read GEOM_ID field
C
	   IF (.NOT.OK) THEN
	      CALL WRITEF('%%NTF2I-E-MISC, unable to read GEOM_ID field from NODEREC %^L%I0',NODE_ID)
	      GOTO 999
	   ENDIF
	   POS = POS + 6
C
C Check for continuation
C       
	   IF (POS.GE.LENGTH-1) THEN
	      IF ( IS_CONTINUATION(STRING,LENGTH)) THEN	! any more ?
		 OK = READ_CONTINUE('NODEREC')		! check record exists
		 IF (OK) THEN
		    POS = 3
		 ELSE
		    CALL WRITEF('%%NTF2I-E-MISC, unable to read continuation record for NODEREC %^L%I0',NODE_ID)
		    OK = .FALSE.
		    GOTO 999
		 ENDIF
	      ELSE
		 CALL WRITEF('%%NTF2I-E-MISC, insufficient info in NODEREC %^L%I0 - no continuation record found',NODE_ID)
		 OK = .FALSE.
		 GOTO 999
	      ENDIF
	   ENDIF
C
C------------------------------------------------------------------------------
C Ignore the orientation
C
	   POS = POS + 4
C       
C Check for continuation
C
	   IF (POS.GE.LENGTH-1) THEN
	      IF ( IS_CONTINUATION(STRING,LENGTH)) THEN	! any more ?
		 OK = READ_CONTINUE('NODEREC')		! check record exists
		 IF (OK) THEN
		    POS = 3
		 ELSE
		    CALL WRITEF('%%NTF2I-E-MISC, unable to read continuation record for NODEREC %^L%I0',NODE_ID)
		    OK = .FALSE.
		    GOTO 999
		 ENDIF
	      ELSE
		 CALL WRITEF('%%NTF2I-E-MISC, insufficient info in NODEREC %^L%I0 - no continuation record found',NODE_ID)
		 OK = .FALSE.
		 GOTO 999
	      ENDIF
	   ENDIF
C
C------------------------------------------------------------------------------
C Read the level
C
	   NTF$_LEVEL = STRING(POS:POS)
	   CALL SETAUX(%REF(NTF$_LEVEL),1)
	   OK = .NOT.RDINT(LEVEL)			! read LEVEL field
	   IF (.NOT.OK) THEN
	      CALL WRITEF('%%NTF2I-E-MISC, unable to read LEVEL field from NODEREC %^L%I0',NODE_ID)
	      GOTO 999
	   ENDIF
	   POS = POS + 1
C
C------------------------------------------------------------------------------
C cache the result
C
	   IF (GEOM_ID.LE.CACHE_MAX_GEOM_ID) THEN
	      IF(DIR .EQ. 1) CACHE_START_LEVEL(GEOM_ID) = LEVEL
	      IF(DIR .EQ. 2) CACHE_END_LEVEL(GEOM_ID) = LEVEL
	   ENDIF
C
C------------------------------------------------------------------------------
C
	   IF (IN_GEOM_ID.EQ.GEOM_ID) THEN 		! we have a match
	      IF (END_REQUIRED.EQ.-1.OR.END_REQUIRED.EQ.DIR) THEN
		 END = DIR
		 LEV = LEVEL
		 FOUND = .TRUE.
		 GOTO 999
	      ENDIF
	   ENDIF
C
C------------------------------------------------------------------------------
C Check for continuation
C
	   IF (POS.GE.LENGTH-1) THEN
	      IF ( IS_CONTINUATION(STRING,LENGTH)) THEN	! any more ?
		 OK = READ_CONTINUE('NODEREC')		! check record exists
		 IF (OK) THEN
		    POS = 3
		 ELSE
		    CALL WRITEF('%%NTF2I-E-MISC, unable to read continuation record for NODEREC %^L%I0',NODE_ID)
		    OK = .FALSE.
		    GOTO 999
		 ENDIF
	      ELSE
		 IF (I.LT.NUM_LINKS) THEN
		    CALL WRITEF('%%NTF2I-E-MISC, insufficient info in NODEREC %^L%I0 - no continuation record found',NODE_ID)
		 ENDIF
		 GOTO 999
	      ENDIF
	   ENDIF
C
C------------------------------------------------------------------------------
C
100	CONTINUE
C
999	FIND_GEOM = OK
	RETURN
	END
