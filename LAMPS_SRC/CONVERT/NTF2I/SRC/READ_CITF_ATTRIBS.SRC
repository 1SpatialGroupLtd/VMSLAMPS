C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1992-12-18 19:22:50.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL FUNCTION READ_CITF_ATTRIBS(IS_POINT)
C
***     MODULE READ_CITF_ATTRIBS
***     IDENT  20NO92
C
C Copyright Laser-Scan Ltd, Cambridge, England
C
C       Author					S Townrow 5-Nov-1992
C
C Description
C
C A parallel routine to READ_LINE_ATTRIBS which just handle CITF files.
C It is intended to determine whether an ATTREC has been found and call the
C appropriate routine.
C
	IMPLICIT NONE
C
C Messages:
C
	INCLUDE 'NTF2IMSG.PAR'
C
C Commons:
C
	INCLUDE 'COMMANDS.CMN'
	INCLUDE	'RECORD.CMN'
	INCLUDE	'STORE_RECORDS.CMN'
	INCLUDE	'NTFDATA.CMN'
	INCLUDE 'LUNS.PAR'
	INCLUDE 'FILE_REC.CMN'
	INCLUDE 'ID_STORAGE.CMN'
C
C Arguments
C
	LOGICAL*4	IS_POINT
C
C Functions:
C
	LOGICAL		READ_RECORD	! read the next record
	LOGICAL		READ_CITF_ATTREC
	LOGICAL		RDINT
	LOGICAL		IS_CONTINUATION
	LOGICAL		READ_CONTINUE
C
C Workspace:
C
	LOGICAL		OK		! Success flag
	INTEGER		IOS
	LOGICAL		JUMPED
	INTEGER		INITIAL_RECORD
C
C############################################################################
C Assume success
C 
	OK=.TRUE.
	JUMPED = .FALSE.
	INITIAL_RECORD = SEC_REC
C
C---------------------------------------------------------------------------
	IF (.NOT.REC_IN_HAND) THEN
	   OK = READ_RECORD()
	   IF (OK) THEN
	      REC_IN_HAND = .TRUE.
	   ELSE
	      GOTO 999
	   ENDIF
	ENDIF
C
C----------------------------------------------------------------------------
C See if we are in a position to read the attribute record
C ( i.e. have we had an FRT and an attribute file )
C
	IF (.NOT.HAD_ATTRIBUTE) THEN
	   DO WHILE (IS_CONTINUATION(STRING,LENGTH))
	      CALL READ_CONTINUE('ATTREC')
	   END DO
	ELSE
	   DO WHILE(STRING(1:2).EQ.REC$_ATTREC)
 	      OK = READ_CITF_ATTREC(IS_POINT)
	      REC_IN_HAND = .FALSE.
	      IF (.NOT.OK) GOTO 999
	      OK = READ_RECORD()
	      IF (OK) THEN
		 REC_IN_HAND = .TRUE.
	      ELSE
		 REC_IN_HAND = .FALSE.
		 GOTO 999
	      ENDIF
	   END DO
	ENDIF
C
C##############################################################################
C rejoin errors
C
999	IF (JUMPED) THEN				!return to record
	  SEC_REC = INITIAL_RECORD -1
	  CALL READ_RECORD()
	ENDIF
C
	READ_CITF_ATTRIBS = OK
	RETURN
	END
