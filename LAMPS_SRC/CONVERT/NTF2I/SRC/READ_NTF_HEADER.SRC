C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1993-07-07 14:05:20.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL FUNCTION READ_NTF_HEADER()

***	IDENT	07JL93
***	MODULE READ_NTF_HEADER
C
C Copyright Laser-Scan Ltd, Cambridge, England
C
C	Author SG 15-July-91
C
C reads and processes ntf header records upto the first section header record
C
C	.-----------{ pseudo code }-------------.
C	|					|
C	| read chunk				|
C	| process chunk				|
C	| remove temporary files		|
C	`---------------------------------------'
C
CMOD	after processing header, if the /LSL qualifier is present process any
C	comment records at the end of the file which may contain MD information 
C	for the next section				SG	14-Aug-1991
CMOD	BS7567 (v2.0) support added (W93/13)		ST	07-Jul-1993
C
	IMPLICIT NONE
C
	INCLUDE 'RECORD.CMN'
	INCLUDE 'ID_STORAGE.CMN'
	INCLUDE 'COMMANDS.CMN'
C
	LOGICAL READ_NTF_CHUNK
	LOGICAL	PROCESS_NTF_HEADER
	LOGICAL	OPEN_FILES
	LOGICAL	CLOSE_FILES
C
	LOGICAL OK
	INTEGER	RECORD_NUM
C
C...............................................................................
C
	SECTION_NUM = 0
	HAVE_SECH = .FALSE.
C
C...........................................................................
C
	OK = READ_NTF_CHUNK()				!read a chunk from NTF
	IF (OK) THEN
	  OK = OPEN_FILES('OLD')			!open files for read
	  IF (OK) THEN
	    SEC_REC = 0					!start at 1st record
	    OK = PROCESS_NTF_HEADER()			!process header records
	    IF (LSL) CALL READ_I2NTF_INFO()		!process comments
	    CALL CLOSE_FILES('DELETE',6)		!close, delete files
	  ELSE
	    CALL WRITEF ('%%NTF2I-E-MISC, temporary files corrupt')
	    CALL WRITEF ('-NTF2I-W-MISC, possible disk fault')
	  ENDIF
	ELSE
	  CALL WRITEF('%%NTF2I-E-MISC, unable to read NTF header records')
	ENDIF
C
C..............................................................................
C
	READ_NTF_HEADER = OK
	RETURN
	END		
