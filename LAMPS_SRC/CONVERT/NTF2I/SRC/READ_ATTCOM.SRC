 	LOGICAL FUNCTION READ_ATTCOM
C
***     MODULE READ_ATTCOM
***     IDENT  20NO92
C
C Copyright Laser-Scan Ltd, Cambridge, England
C
C       Author					S Townrow 20-Nov-1992
C
C Description
C
C A parallel routine to READ_ATTREC which just handle CITF files.
C It is intended to deal with CITF attributes.
C
	IMPLICIT NONE
C
C Parameter files
C
	INCLUDE 'NTF2IMSG.PAR'
C
C Common files
C
	INCLUDE	'CITF.CMN'
	INCLUDE	'COMBATTS.CMN'
	INCLUDE	'COMMANDS.CMN'
	INCLUDE	'RECORD.CMN'
	INCLUDE	'STORE_RECORDS.CMN'
C
C Functions
C
	LOGICAL		IS_CONTINUATION
	LOGICAL		READ_CONTINUE
	LOGICAL		RDINT
C
C Workspace
C
	INTEGER		CODE,POS
	INTEGER		I,J,K,N
	LOGICAL		OK
	LOGICAL		NEEDS_EXPANDING
	INTEGER		NUM_FIELD
	CHARACTER*2	MNEM
	CHARACTER*2	NTF$_ATTCOM_MNEM
	CHARACTER*3	NTF$_NUM_FIELD
	CHARACTER*2	EXP_ATT(255)		! allow lots when expanding
	INTEGER*4	EXP_NUM			! but only 20 really allowed
C
C............................................................................
C
	OK = .TRUE.
C
!	IF ( OUTPUT.AND.(COMB_ATT_PTR.EQ.0) ) THEN
!	  CALL FLWSTR('Feature classification data:')
!	  CALL FLWRTF('	  FC  Comparison  Standard code         Description')
!	ENDIF
C
	NTF$_ATTCOM_MNEM = STRING(3:4)
	NTF$_NUM_FIELD = STRING(5:7)
C
C Is there space for any more ATTCOMs
C
	IF (COMB_ATT_PTR.EQ.NUM_COMB_ATTS+1) THEN	! array full
	   CALL LSL_PUTMSG(NTF2I__TOOMNYATTCOMS,NUM_COMB_ATTS)
	   GOTO 999
	ENDIF
C
C Find the number of component attributes
C
	CALL SETAUX(%REF(NTF$_NUM_FIELD),3) ! NUM_FIELD field
	IF (RDINT(NUM_FIELD)) THEN ! attempt to read num
	   GOTO 999
	ENDIF
C
C Combined attribute must consist of at least 2 other attributes
C
	IF (NUM_FIELD.LT.2) THEN
	   CALL LSL_PUTMSG(NTF2I__ATTCOMTWO,NTF$_ATTCOM_MNEM)
	   GOTO 999
	ENDIF
C
C See if the ATTCOM is already in the list
C
	DO 50 I = 1,COMB_ATT_PTR
	   IF (NTF$_ATTCOM_MNEM.EQ.COMB_ATT(I)) THEN
	      CALL LSL_PUTMSG(NTF2I__ATTCOMDEF,NTF$_ATTCOM_MNEM)
	      GOTO 999
	   ENDIF
50	CONTINUE
C
C Read component attributes
C
	NUM_FIELD = MIN(NUM_FIELD,COMB_MAX_EXP_LEN)
	POS = 8
	EXP_NUM = 0
	DO 100 I = 1, NUM_FIELD
	   EXP_NUM = EXP_NUM + 1
	   EXP_ATT(EXP_NUM) = STRING(POS:POS+1)
	   POS = POS + 2
100	CONTINUE
C
C Expand all components in case they themselves are combined attributes
C
150	DO 200 I = 1,EXP_NUM
	   NEEDS_EXPANDING = .FALSE.
	   MNEM = EXP_ATT(I)
	   IF (MNEM.EQ.NTF$_ATTCOM_MNEM) THEN 		! recursive definition!
	      CALL LSL_PUTMSG(NTF2I__ATTCOMREC,MNEM)
	      GOTO 999
	   ENDIF
C
C See if it is another combined attribute
C
	   DO 300 J = 1,COMB_ATT_PTR
	      IF (MNEM.EQ.COMB_ATT(J)) THEN
		 NEEDS_EXPANDING = .TRUE.
		 GOTO 310
	      ENDIF
300	   CONTINUE
310	   IF (NEEDS_EXPANDING) THEN
	      N = COMB_ATT_NUM_COMP(J)
C
C Shift others up
C
	      DO 400 K = EXP_NUM, I+1, -1
		 EXP_ATT(K+N-1) = EXP_ATT(K)
400	      CONTINUE
C
C Insert new ones into the array
C
	      DO 450 K = 1, N
		 EXP_ATT(I+K-1) = COMB_ATT_COMP(K,J)
450	      CONTINUE
	      EXP_NUM = EXP_NUM + N - 1
	      GOTO 150		! nasty but it works
	   ENDIF
200	CONTINUE
C
C Check that the num of attribute components does not exceed COMB_MAX_EXP_LEN
C
	IF (EXP_NUM.GT.COMB_MAX_EXP_LEN) THEN
	   CALL LSL_PUTMSG(NTF2I__NESTATTS,NTF$_ATTCOM_MNEM,COMB_MAX_EXP_LEN)
	   GOTO 999	   
	ENDIF
C
C Check that components exist and are properly defined
C


C       
C Store it away
C
	COMB_ATT_PTR = COMB_ATT_PTR + 1
	COMB_ATT(COMB_ATT_PTR) = NTF$_ATTCOM_MNEM
	COMB_ATT_NUM_COMP(COMB_ATT_PTR) = EXP_NUM
	DO 500 I = 1,EXP_NUM
	   COMB_ATT_COMP(I,COMB_ATT_PTR) = EXP_ATT(I)
500	CONTINUE
C
C............................................................................
C ignore any continuations
C
	IF ( IS_CONTINUATION(STRING,LENGTH)) THEN
	   OK = READ_CONTINUE('ATTCOM')
	   IF (OK) GOTO 200
	ENDIF
C
C............................................................................
C
999	READ_ATTCOM = OK
	RETURN
	END
