C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1994-01-17 13:22:06.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL FUNCTION READ_RECORD
C
***	IDENT	17JA94
***	MODULE	READ_RECORD
C
C Copyright (C) LaserScan Laboratories Ltd, Cambridge, England
C
C Author TJ Ibbs, 7 October 1987
C Modified for variable length records 
C	Iain McLeman	, 21 August 1989
C
C	To read the next NTF record and its' length into /RECORD/
C	- returns TRUE if it succeeds, FALSE if it fails
C	NB end-of-file (tapemark) does not cause an error to be output,
C	but does cause FALSE to be returned
C
CMOD	Handle NTF 1.1					       VLG 31-Oct-1989
C
CMOD	Adjust for NTF files without CR at end of line		SG
C
CMOD	Source copied to function READ_NTF_RECORD.SRC, this	SG  9-Jul-1991
C	function modified to read only from relative file.
C	Since this file had already been created by the
C	original read_record, the records had already been
C	validated. However the file may have been corrupted
C	in between, so its just as well to be wary, the file
C	is assumed to be open.
C
CMOD	removed conflicting variable RECNUM, count of		SG 15-Jul-1991
C	records refers to section only.
CMOD	Routine no longer returns FALSE when get to last	ST 17-Jan-1994
C       record because there may be another SECHREC
C       to follow. Mod 1330.
C 
	IMPLICIT NONE
C
C Message definitions
C
	INCLUDE	'LSL$CMNLSL:LSLLIBMSG.PAR'
	INCLUDE	'HERE:NTF2IMSG.PAR'
	INCLUDE	'HERE:LUNS.PAR'
C
C Common files
	INCLUDE	'HERE:RECORD.CMN'			! for STRING
	INCLUDE	'HERE:FILE_REC.CMN'			! for file structures
C
	LOGICAL		RECOGNISED
C
	LOGICAL		OK				! function result
	INTEGER		IOS				! status flag
	CHARACTER*2	NTF$_REC_DESCR
C
C *****************************************************************************
C
	IF (SEC_REC.LT.SECRECNUM) THEN
10	  SEC_REC = SEC_REC + 1				! count the record
	  READ(REL_LUN,REC=SEC_REC,IOSTAT=IOS) REL_REC	! read record
	  OK = IOS.EQ.0					! set status flag
	  IF (OK) THEN					! no problems
	    LENGTH = REL_REC.LEN	
	    LENGTH = MIN(80,LENGTH)
	    NTF$_REC_DESCR = REL_REC.REC(1:2)
	    IF ( RECOGNISED(REL_REC.REC) ) THEN		! is it recognised?
	       STRING(1:LENGTH) = REL_REC.REC(1:LENGTH)
	    ELSE					! not recognised
	       CALL LSL_PUTMSG (NTF2I__UNEXPREC, NTF$_REC_DESCR, SEC_REC)
	       CALL WRITEF('-NTF2I-W-MISC, relative file may be corrupt')
	     CALL WRITEF('-NTF2I-I-MISC, attempting to read another record')
	       GOTO 10
	    ENDIF
	  ELSE
	    CALL WRITEF('%%NTF2I-E-MISC, bad record in relative file')
	    CALL WRITEF('-NTF2I-I-MISC, record %I of %I',SEC_REC, SECRECNUM)
	    CALL WRITEF('-NTF2I-I-MISC, IOS WAS %I',IOS)
	  ENDIF
	ELSE
	  OK = .TRUE.
	ENDIF
C
C..............................................................................
C
999	READ_RECORD = OK
	RETURN
	END
