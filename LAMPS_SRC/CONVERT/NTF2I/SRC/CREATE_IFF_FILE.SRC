C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1996-06-13 11:25:48.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL FUNCTION CREATE_IFF_FILE( RA_POSN, NO_POSN,CP_POSN )
C
***     MODULE CREATE_IFF_FILE
***     IDENT  13JN96
C
C Copyright Laser-Scan Laboratories Ltd, Cambridge, England
C
C Author	TJI Ibbs, 6 October 1987
C
C Creates a new IFF file, writing the relevant information to the
C header entries
C
CMOD	bug fix to code which sets the control points		SG 25-9-91
C
CMOD    Implement CITF96 changes (WI/CC 1545)           TJM     13-Jun-1996
C
	IMPLICIT NONE
C
C Arguments
C
	INTEGER		RA_POSN		! returns the position of the RA entry
	INTEGER		NO_POSN		! and the NO entry
	INTEGER		CP_POSN		! and the NO entry
C
C Message definitions
C
	INCLUDE 'HERE:NTF2IMSG.PAR'
C
C Common files
C
	INCLUDE 'LSL$CMNIFF:MD2DES.CMN'	 !  Common for version 2 MD
	INCLUDE 'LSL$CMNIFF:MHDMB.CMN'   !  OS map header common
	INCLUDE 'LSL$CMNIFF:MHOSGB.CMN'  !  New OS type 3/4 map header common
	INCLUDE 'LSL$CMNIFF:IFFHAN.CMN'	 !  General IFF user interface
C
	INCLUDE	'LSL$CMNLSL:FILENAME.CMN'
	INCLUDE	'HERE:FILENAME.CMN'
C
	INCLUDE 'HERE:CITF.CMN'
	INCLUDE 'HERE:COMMANDS.CMN'
	INCLUDE	'HERE:NTFDATA.CMN'
	INCLUDE	'HERE:LUNS.PAR'
C
C Functions
C
	LOGICAL		IFFCREATE	!  Create a new IFF file
	REAL		XCONVERT
	REAL		YCONVERT
C
C Workspace
C
	INTEGER*4	OK		! Function return
	INTEGER*4	REV		! Revision of file
	INTEGER*4	ACTUALHDSZ	! actual size of header in bytes
	REAL		COEFF(10,2)	! Cubic coefficients
	REAL		CPTS(4,4)	! Control points
	REAL		RANGE(4)	! The range of data in the map
	REAL		R_XMAX,R_XMIN,R_YMAX,R_YMIN
C
C Define an NS entry
C
	CHARACTER*25	NS
	DATA		NS	/'IFF file created by NTF2I'/
C
C Set the unit matrix in the coefficients
C
	DATA	COEFF	/0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,
     &			 0.0,0.0,1.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0/
C
C##############################################################################
C Create the new IFF file
C
	IF (HAD_CITF93.OR.HAD_CITF96) THEN
	   REV = 1
	ELSE
	   REV = 0
	ENDIF
	OK = IFFCREATE( IFFLUN, IFFFILE(:IFFLEN), ,,LOG,REV )
	IF (.NOT.OK) GOTO 9999
C
C------------------------------------------------------------------------------
C the RANGE and CP arrays have not been initilalised so spurious data will
C be output. This is not important since since the range and CP will be updated
C before we close the file
C
	RA_POSN = LPOSE				! remember where we're writing
	CALL IFFRA(RANGE)			! and write
C
	CALL IFFHI				! create a blank history file
C
C------------------------------------------------------------------------------
C Map Header - if requested an OS map header has been constructed, otherwise
C we output an unset map header
C
C MHDESC is equivalenced onto MHARR in the common, reseting this will 
C indicate an unset map header
C
	IF (HAD_CITF93.OR.HAD_CITF96) THEN
	   ACTUALHDSZ = CURRMHLIN * 80
	   IF (ACTUALHDSZ.GT.TABLEHDSZ) THEN
	      ACTUALHDSZ = MIN(ACTUALHDSZ,MH2BYSZ)
	      CALL LSL_PUTMSG(NTF2I__MHLEN,ACTUALHDSZ)
	   ELSE
	      ACTUALHDSZ = TABLEHDSZ
	   ENDIF
	   CALL IFFMH(MH2ARR,(ACTUALHDSZ+1)/2 + 2)
	ELSE
	   IF (.NOT.OS_DATA) THEN
	      MHDESC(1)=MHI4SZ			! length is standard
	      MHDESC(2)=0			! MH is unset
	   ELSE
	      MHDESC(1)=MHI4SZ			! again
	      MHDESC(2)=2			! is OS -the rest already set
	   ENDIF
	   CALL IFFMH(MHARR,MHLEN) 		! from the MHDMB common
	ENDIF
C
C	.......................................................................
C	The array MD2ARR is built by equivalencing in the MD2DES common block
C
	CALL IFFMD(MD2ARR,MD2LEN)		!write a type 2 MD
C
	CALL IFFNS( %REF(NS), LEN(NS) )		! New Section
C
	CALL IFFCC ( COEFF )			! Calibration Coefs
C
C	.......................................................................
C	as above, The cp will contain spurious data here. it is just a dummy
C
	CP_POSN = LPOSE				! remember these, update later
	CALL IFFCP( CPTS )			! Write the entry
C
C------------------------------------------------------------------------------
C put everything into layer 1 as NTF does not support layers
C
	NO_POSN=LPOSE				! remember where we are
	CALL IFFNO ( 1,0,0 )			! write a dummy value
C
C ........................................................................
C And return - that's all we do
C
9999	CREATE_IFF_FILE = OK
	RETURN
	END
