C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1987-10-15 18:27:48.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE DEDUCE_IFF_NAME( REFERENCE, NAME, LENGTH )
C
***	IDENT	15OC87
***	MODULE	DEDUCE_IFF_NAME
C
C Copyright (C) LaserScan Laboratories Ltd, Cambridge, England
C
C Author TJ Ibbs, 9 October 1987
C
	IMPLICIT NONE
C
C Arguments:
C
	CHARACTER*10	REFERENCE	! The section header reference
	CHARACTER*10	NAME		! Resulting IFF name
	INTEGER		LENGTH		! Resultant name's length
C
C Messages:
C
	INCLUDE	'LSL$CMNLSL:LSLLIBMSG.PAR'
	INCLUDE 'HERE:NTF2IMSG.PAR'
C
C Functions:
C
	LOGICAL		STR$UPCASE	! upper-case the string
	LOGICAL		STR$TRIM	! trim off trailing spaces/tab
C
	INTEGER		STR$FIND_FIRST_NOT_IN_SET
C
C Workspace:
C
	LOGICAL		OK		! Function return
	INTEGER		RESULT		! Result of function
	INTEGER		REPLACED	! Count of replaced characters
C
C *****************************************************************************
C We must check that the reference is acceptable as a VMS filename
C - first, uppercase it (if we have an error, attempt to carry on regardless)
C
	OK = STR$UPCASE( NAME, REFERENCE )
	IF (.NOT.OK) THEN
	   CALL LSL_PUTMSG(NTF2I__IFFNAME,REFERENCE)
	   CALL LSL_ADDMSG(OK)
	ENDIF
C
C And trim off any trailing spaces - again, try to continue
C
	OK = STR$TRIM( NAME, NAME, LENGTH )
	IF (.NOT.OK) THEN
	   CALL LSL_PUTMSG(NTF2I__IFFNAME,NAME)
	   CALL LSL_ADDMSG(OK)
	ENDIF
C
C Do we actually have any name left?
C
	IF (LENGTH.EQ.0) THEN
	   NAME   = 'IFF'
	   LENGTH = 3
	   CALL LSL_PUTMSG(NTF2I__NOTVMSNAME,REFERENCE)
	   CALL LSL_ADDMSG(NTF2I__USENAME,NAME(:LENGTH))
	   GOTO 999
	ENDIF
C
C Now check that each character of the name is acceptable
C
	REPLACED = 0			! no characters replaced yet
C
1000	RESULT = STR$FIND_FIRST_NOT_IN_SET( NAME(:LENGTH),
     &					   'ABCDEFGHIJKLMNOPQRSTUVWXYZ'//
     &					   '0123456789'//
     &					   '_$' )
C
	IF (RESULT.GT.0) THEN		! there is an unacceptable character
	   NAME(RESULT:RESULT) = '_'	! replace it with an underline
	   REPLACED = REPLACED + 1	! and count the substitution
	   GOTO 1000			! and try again
	ENDIF
C
C So we should now have an acceptable name (however strange it may be!)
C - if we did change it, tell the user
C
	IF (REPLACED.GT.0) THEN
	   CALL LSL_PUTMSG(NTF2I__NOTVMSNAME,REFERENCE)
	   CALL LSL_ADDMSG(NTF2I__USENAME,NAME(:LENGTH))
	ENDIF
C
999	RETURN
	END
