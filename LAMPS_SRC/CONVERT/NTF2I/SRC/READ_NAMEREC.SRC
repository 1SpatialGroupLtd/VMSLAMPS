	LOGICAL FUNCTION 
     &		READ_NAMEREC(FC,TEXT_STR,TEXTLEN,NAME_ID,OUT_FEAT_CODE,IS_LAB)
C
***     MODULE READ_NAMEREC
***     IDENT  26JN91
C
C Copyright Laser-Scan Laboratories Ltd, Cambridge, England
C
C Author	IM	02-09-87
C Reads the name (text) record
C
CMOD	Modified						TJI 05-Oct-1987
CMOD	Modified						VLG 26-Oct-1989
CMOD	tidied source,restructured,meaningful names added	SG  26-June-1991
C
	IMPLICIT NONE
C
C Arguments:
C
	INTEGER		FC				! feature code
	CHARACTER*(*)	TEXT_STR			! the text itself
	INTEGER		TEXTLEN				! its length
	INTEGER		NAME_ID				! NTF ID code
	BYTE		OUT_FEAT_CODE(4)
	LOGICAL		IS_LAB
C
C Messages:
C
	INCLUDE 'HERE:NTF2IMSG.PAR'
	INCLUDE 'HERE:COMMANDS.CMN'
	INCLUDE	'HERE:RECORD.CMN'
	INCLUDE	'HERE:STORE_RECORDS.CMN'
C
C Functions:
C
	LOGICAL		RDINT				! read an integer
	LOGICAL		RDLONG
	LOGICAL		READ_CONTINUE
	LOGICAL		IS_CONTINUATION
C
C Workspace:
C
	LOGICAL		OK				! Success flag
	LOGICAL		MATCH
	INTEGER		I,INDEX				! loop counter
C	
	CHARACTER*6	NTF$_NAME_ID
	CHARACTER*4	NTF$_FEAT_CODE
	CHARACTER*2	NTF$_TEXT_LEN
C
C ........................................................................
C Initialisations
C 
	IS_LAB = .FALSE.
	OK=.TRUE.
	NTF$_NAME_ID = STRING(3:8)
	NTF$_FEAT_CODE = STRING(9:12)
	NTF$_TEXT_LEN = STRING(13:14)
C
C ........................................................................
C read the various bits
C
C 	..................................................................
C 	Get the NAME_ID in case we need it for messages later
C
	CALL SETAUX(%REF(NTF$_NAME_ID),6)			! NAME_ID
	OK = .NOT.RDLONG(NAME_ID)
	IF (.NOT.OK) THEN
	   CALL LSL_PUTMSG(NTF2I__NAMEREC,NAME_ID,RECNUM)
	   CALL LSL_ADDMSG(NTF2I__ERRORRD,'NAME_ID')
	   CALL LSL_ADDSTR(NTF$_NAME_ID)
	   GOTO 999
	ENDIF
C
C 	..................................................................
C	Get the feature code
C
	MATCH = .FALSE.					! default
	FC = 0						! default FC =0
C
	IF (NTF$_FEAT_CODE.NE.' ') THEN			! something in field
	  CALL SETAUX(%REF(NTF$_FEAT_CODE),4)		! Feature code
	  OK = .NOT. RDINT(FC)
C
C	  ..................................................................
C	  couldn't read feature code as a number, may be its a label
C
	  IF (.NOT.OK) THEN				! error while reading
	     INDEX = 0						!initialise
	     DO WHILE( (.NOT.MATCH).AND.(INDEX.LT.N_FCNAMES) )
	       INDEX = INDEX+1					! increment
	       MATCH =  (NTF$_FEAT_CODE .EQ. FCNAMES(INDEX))	! compare
	     END DO
C
	     IF (.NOT.MATCH) THEN				! not matched
	       CALL LSL_PUTMSG(NTF2I__UNKNFC,NTF$_FEAT_CODE,RECNUM)	! warn
	       FC = 0						! reset to 0
	     ELSE
	       FC = 28						! FC = OS text
	       DO  100 INDEX = 1,4
		  OUT_FEAT_CODE(INDEX) = ICHAR(NTF$_FEAT_CODE(INDEX:INDEX))
100	       CONTINUE
	       IS_LAB = .TRUE.					!not true FC
	     ENDIF
	  ENDIF
	ENDIF
C
C	........................................................................
C	Get the text length
C
	CALL SETAUX(%REF(NTF$_TEXT_LEN),2)			! Get the value 
	OK = .NOT.RDINT(TEXTLEN)
	IF (.NOT.OK) THEN
	   CALL LSL_PUTMSG(NTF2I__NAMEREC,NAME_ID,RECNUM)
	   CALL LSL_ADDMSG(NTF2I__ERRORRD,'TEXT_LEN')
	   CALL LSL_ADDSTR(NTF$_TEXT_LEN)
	   GOTO 999
	ENDIF	
C
C	........................................................................
C	now the text
C
	IF (TEXTLEN.LE.64) THEN				!all text in this record
	   TEXT_STR=STRING(15:14+TEXTLEN)
	ELSE						!text overflows record
	   TEXT_STR=STRING(15:78)			!get text from record
C
	   IF (.NOT.IS_CONTINUATION(STRING,LENGTH)) THEN
	     CALL LSL_PUTMSG( NTF2I__NAMEREC,NAME_ID,RECNUM )
	     CALL LSL_ADDMSG( NTF2I__SHORTXT,65,TEXTLEN )
	     GOTO 999
	   ENDIF
	   OK = READ_CONTINUE('NAMEREC')
	   IF (.NOT.OK) THEN
	     CALL LSL_PUTMSG( NTF2I__NAMEREC,NAME_ID,RECNUM )
	     GOTO 999
	  ENDIF
C
	  TEXT_STR(65:TEXTLEN)=STRING(3:)		! read rest of text
	ENDIF
C
C ........................................................................
C So we can return
C
999	READ_NAMEREC=OK
	RETURN
	END
