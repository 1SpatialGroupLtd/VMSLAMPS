C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1993-06-03 17:01:42.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL FUNCTION IS_CONTINUATION(IN_STRING,LENGTH)

***	IDENT	03JN93
***	MODULE	IS_CONTINUATION

C	Author		SG	24-June-1991
C
C	This function attempts to solve the problem of NTF format files not 
C	having embedded carriage returns at the end of each line. The lack of 
C	<CR>s causes NTF2I to behave strangely (even crashes at one point).
C
C	Continuation marks are '1's placed at the end of each line. A file in
C	the proper NTF format will have a carriage return after it. currently 
C	ntf2i alway looks at the last but one position in the string for the 
C	continuation mark. it is obvious that if not carriage return is
C	present. the mark will occur at the end of the string. 
C
CMOD	modified to set a global variable which allows other modules to 
C	correctly read a string					SG 
C
CMOD	this works if the last or last but one character is a one, but what 
C	happens if there are extra blanks between the 1 and the end of record
C	in this case go back along the record and see if the last non-space 
C	character is a '1'					SG  12-Aug-1991
CMOD	BS7567 (v2.0) support added (W93/13)		   	ST  02-Jun-1993
C
	IMPLICIT NONE
C
C Arguments
C
	CHARACTER*80	IN_STRING
	INTEGER		LENGTH
C
C Common blocks
C
	INCLUDE 'NTFDATA.CMN'
C
C Function
C
	INTEGER		INDEX
C
C Workspace
C
	CHARACTER	END,PREV,CH
	INTEGER		POS
	LOGICAL		OK
C
C............................................................................
C
	IS_CONTINUATION = .FALSE.
	END  = IN_STRING(LENGTH:LENGTH)
	PREV = IN_STRING(LENGTH-1:LENGTH-1)
C
C............................................................................
C check for a continuation marker.
C
	IS_CONTINUATION = 
     &		( ((END.EQ.EOR_MARKER).AND.(PREV.EQ.'1')).OR. (END.EQ.'1').OR.
     &	          ((VERSION.EQ.2.0).AND.(PREV.EQ.'1')))
C
C............................................................................
C if no sucess then its possible that there may be extra characters between the
C '1' and the EOR (eg ferranti data). in this case work from the end of record 
C backwards, skip over the EOR, and blanks. if the last non space character was 
C a '1' then twas a continuation record.
C
	IF (.NOT.IS_CONTINUATION) THEN			! no success
	  OK = .FALSE.					! dont know whats at end
	  POS = LENGTH					! start at end of string
	  DO WHILE ( (.NOT.OK).AND.(POS.GE.3))		! do until no more
	    CH = IN_STRING(POS:POS)			! remember current char
	    OK = .NOT.( (CH.EQ.' ').OR.(CH.EQ.EOR_MARKER) )	!space ?
	    IF (OK) THEN				! not a space
	      IS_CONTINUATION = CH.EQ.'1'		!   set return
	    ELSE					! was a space
	      POS = POS-1				!   previous charcter
	    ENDIF
	  END DO
	ENDIF
C
C............................................................................
C
	RETURN
	END
