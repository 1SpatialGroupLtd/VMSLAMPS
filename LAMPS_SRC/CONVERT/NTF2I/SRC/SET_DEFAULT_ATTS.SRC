	SUBROUTINE SET_DEFAULT_ATTS
C
***	IDENT	14JN96
***	MODULE	SET_DEFAULT_ATTS
C
C Copyright (C) LaserScan Laboratories Ltd, Cambridge, England
C
C Author S Townrow	 15-January-1992
C
C Description:
C	There are some attributes which come for free with NTF 1.1 and do
C	not have to be described in an attribute descriptor record (40).
C	In the case where they are not described, NTF2I ignores them. This
C	should not happen and so this routine adds the size and type of
C	the default attibutes to the internal lists. They must have already
C	been specified in the attribute file so that their output AC number
C	is known. Codes such as LC,FC and ST do not need to be in the
C	attribute file because they will automatically be placed in the
C	Secondary FC (AC 1).
C	If any default attributes are defined in the attdesc (40) record
C	then the size and type given to the attribute by this routine will
C	be correctly overwritten when the attdesc record is read by the
C	routine READ_ATTDESC
C
CMOD	BS7567 (v2.0) support added (W93/13)		ST	07-Jul-1993
C	    ...there are no default attributes at v2.0
C
CMOD    Implement CITF96 changes (WI/CC 1545)           TJM     13-Jun-1996
C
	IMPLICIT NONE
C
C Includes:
C
	INCLUDE	'CITF.CMN'
	INCLUDE	'CITFATTS.CMN'
	INCLUDE	'ATTRIBUTE.CMN'
	INCLUDE	'NTFDATA.CMN'
	INCLUDE	'LSL$CMNFRT:FRTACD.CMN'
C
C Local variables
C
	LOGICAL		MATCH
	INTEGER		I,J,NUM_ATTS,IND
C
C *****************************************************************************
C
	IF (HAD_CITF93.OR.HAD_CITF96) THEN
	   DO 50 I = 1,NUM_CITF_ATTS
	      NTF_NAM_IGN(I) = CITF_DEF_ATT(I)
	      NTF_LEN_IGN(I) = CITF_DEF_WIDTH(I)
50	   CONTINUE
	   IGN_PTR=NUM_CITF_ATTS
	   NUM_ATTS = ATTR_PTR
	   DO 60 I = 1,NUM_CITF_ATTS
	      MATCH = .FALSE.
	      DO 70 J = 1,NUM_ATTS
		 IF (NTF_ATT_NAME(J).EQ.CITF_DEF_ATT(I)) THEN
		    MATCH = .TRUE.
		    IND = J
		    GOTO 65
		 ENDIF
 70	      CONTINUE
 65	      IF (MATCH) THEN
		 FIELD_WIDTH(IND)  = CITF_DEF_WIDTH(I)
		 ATTR_TRANS(IND)   = CITF_DEF_TYPE(I)
		 ATT_R_MULT(IND)   = CITF_DEF_MULT(I)
	      ELSE
		 ATTR_PTR = ATTR_PTR+1
		 NTF_ATT_NAME(ATTR_PTR) = CITF_DEF_ATT(I)
		 FIELD_WIDTH(ATTR_PTR)  = CITF_DEF_WIDTH(I)
		 ATTR_TRANS(ATTR_PTR)   = CITF_DEF_TYPE(I)
		 ATT_R_MULT(ATTR_PTR)   = CITF_DEF_MULT(I)
	      ENDIF
 60	   CONTINUE
	ELSE
	   IF (VERSION.EQ.2.0) THEN
	      IGN_PTR = 1
	   ELSE
	      NTF_NAM_IGN(1)='AC'
	      NTF_LEN_IGN(1)=5
	      NTF_NAM_IGN(2)='CH'
	      NTF_LEN_IGN(2)=6
	      NTF_NAM_IGN(3)='CM'
	      NTF_LEN_IGN(3)=1
	      NTF_NAM_IGN(4)='CT'
	      NTF_LEN_IGN(4)=1
	      NTF_NAM_IGN(5)='GB'
	      NTF_LEN_IGN(5)=6
	      NTF_NAM_IGN(6)='HT'
	      NTF_LEN_IGN(6)=6
	      NTF_NAM_IGN(7)='OR'
	      NTF_LEN_IGN(7)=6
	      NTF_NAM_IGN(8)='PN'
	      NTF_LEN_IGN(8)=255
	      NTF_NAM_IGN(9)='SC'
	      NTF_LEN_IGN(9)=1
	      NTF_NAM_IGN(10)='SY'
	      NTF_LEN_IGN(10)=6
C
	      IGN_PTR=11
C
	      DO 100 I=1,ATTR_PTR
		 IF (NTF_ATT_NAME(I).EQ.'AC') THEN
		    FIELD_WIDTH(I)=5
		    ATTR_TRANS(I)=ACD_DATATYPE_R
		    ATT_R_MULT(I) = 100
		 ELSEIF (NTF_ATT_NAME(I).EQ.'CH') THEN
		    FIELD_WIDTH(I)=6
		    ATTR_TRANS(I)=ACD_DATATYPE_D
		 ELSEIF (NTF_ATT_NAME(I).EQ.'CM') THEN
		    FIELD_WIDTH(I)=1
		    ATTR_TRANS(I)=ACD_DATATYPE_C
		 ELSEIF (NTF_ATT_NAME(I).EQ.'CT') THEN
		    FIELD_WIDTH(I)=1
		    ATTR_TRANS(I)=ACD_DATATYPE_C
		 ELSEIF (NTF_ATT_NAME(I).EQ.'GB') THEN
		    FIELD_WIDTH(I)=6
		    ATTR_TRANS(I)=ACD_DATATYPE_R
		    ATT_R_MULT(I) = 1000
		 ELSEIF (NTF_ATT_NAME(I).EQ.'HT') THEN
		    FIELD_WIDTH(I)=6
		    ATTR_TRANS(I)=ACD_DATATYPE_R
		    ATT_R_MULT(I) = 100
		 ELSEIF (NTF_ATT_NAME(I).EQ.'OR') THEN
		    FIELD_WIDTH(I)=6
		    ATTR_TRANS(I)=ACD_DATATYPE_R
		    ATT_R_MULT(I) = 100
		 ELSEIF (NTF_ATT_NAME(I).EQ.'PN') THEN
		    FIELD_WIDTH(I)=255
		    ATTR_TRANS(I)=6
		 ELSEIF (NTF_ATT_NAME(I).EQ.'SC') THEN
		    FIELD_WIDTH(I)=1
		    ATTR_TRANS(I)=ACD_DATATYPE_C
		 ELSEIF (NTF_ATT_NAME(I).EQ.'SY') THEN
		    FIELD_WIDTH(I)=6
		    ATTR_TRANS(I)=ACD_DATATYPE_D
		 ENDIF
 100	      CONTINUE
	   ENDIF
	ENDIF
C
C ****************************************************************************
C
	RETURN
	END
