	LOGICAL FUNCTION WRITE_POLY(NTF$_POLY_ID, NTF$_SIGN, START_X, START_Y)
C
***	MODULE WRITE_POLY
***	IDENT 01AUG91
C
C Copyright Laser-Scan Ltd, Cambridge, England
C
C	Author	SG 01-August-1991
C
C	generates a feature from specified POLY_ID.
C
	IMPLICIT NONE
C
	CHARACTER*6	NTF$_POLY_ID
	CHARACTER	NTF$_SIGN
	REAL		START_X
	REAL		START_Y
C
	INCLUDE 'HERE:LUNS.PAR'
	INCLUDE 'HERE:FILE_REC.CMN'
	INCLUDE 'HERE:RECORD.CMN'
C
	LOGICAL		RDINT
	LOGICAL		RDLONG
	LOGICAL		WRITE_COORDS
	LOGICAL		READ_RECORD
	LOGICAL		READ_CHAIN
C
	CHARACTER*6	NTF$_CHAIN_ID
	LOGICAL		OK
	INTEGER		INITIAL_RECORD
	INTEGER		POLY_ID
	INTEGER		CHAIN_ID
	INTEGER		IOS
C
	INTEGER		MAX_COORDS
	PARAMETER	( MAX_COORDS = 10000 )
	REAL		COORDS(2,MAX_COORDS)
	INTEGER		NUM_COORDS
C
C###############################################################################
C Initialise 
C
	INITIAL_RECORD = SEC_REC			!starting record
C
C------------------------------------------------------------------------------
C read the record associated with the polygon ID
C
	CALL SETAUX (%REF(NTF$_POLY_ID),6)
	OK = .NOT.RDLONG(POLY_ID)
	IF (OK) THEN
	  READ(POLYG_LUN,KEY=POLY_ID,KEYID=0,IOSTAT=IOS) ID_REC
	  OK = IOS.EQ.0
	  IF (OK) THEN
	    SEC_REC = ID_REC.RECORD_NUM -1
	    OK = READ_RECORD()
	    IF (.NOT.OK) THEN
	      CALL WRITEF('%%NTF2I-E-MISC, couldnt read POLYGON record')
	      CALL WRITEF('-NTF2I-W-MISC, Data files corrupt')
	    ENDIF
	  ELSE
	    CALL WRITEF('%%NTF2I-E-MISC, POLYGON record doesnt exist')
	    CALL WRITEF('-NTF2I-I-MISC, "%I", IOS was "%I"', POLY_ID, IOS)
	  ENDIF
	ELSE
	  CALL WRITEF('%%NTF2I-E-MISC, Bad POLY_ID field from CPOLY record')
	  CALL WRITEF('-NTF2I-I-MISC, "%S" record "%I"', NTF$_POLY_ID, SEC_REC)
	ENDIF
C
	IF (.NOT.OK) GOTO 999
C
C------------------------------------------------------------------------------
C we are at the polygon record. Only interested in the geometry part
C
	NTF$_CHAIN_ID = STRING(9:14)
	CALL SETAUX( %REF(NTF$_CHAIN_ID),6)
	OK = .NOT.RDLONG(CHAIN_ID)
	IF (OK) THEN
	  OK = READ_CHAIN(COORDS,NUM_COORDS,MAX_COORDS,CHAIN_ID)
	ELSE
	  CALL WRITEF('%%NTF2I-E-MISC, Bad CHAIN_ID field from POLY record')
	  CALL WRITEF('-NTF2I-I-MISC, "%S" record "%I"', NTF$_CHAIN_ID, SEC_REC)
	ENDIF
C
	IF (.NOT.OK) GOTO 999
C
C------------------------------------------------------------------------------
C reverse the coordinates if need be, and then write them out
C
	IF (NTF$_SIGN.EQ.'-') CALL REVERSE_COORDS (COORDS, NUM_COORDS)
	CALL WRITE_COORDS( COORDS, NUM_COORDS)
C
C------------------------------------------------------------------------------
C remember the starting coords
C
	START_X = COORDS(1,1)
	START_Y = COORDS(2,1)
C
C###############################################################################
C return to the record we started from. then exit
C
999	SEC_REC = INITIAL_RECORD -1
	CALL READ_RECORD
C
	WRITE_POLY = OK
	RETURN
	END
