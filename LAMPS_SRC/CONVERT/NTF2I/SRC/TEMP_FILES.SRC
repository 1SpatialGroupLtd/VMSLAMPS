C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 2000-01-13 15:45:28.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL FUNCTION TEMP_FILES()
C
***	IDENT	13JA00
***	MODULE TEMP_FILES
C
C Copyright Laser-Scan Ltd, Cambridge, England
C
C	Author 						ST 01-Jun-1993
C
CMOD    Routine now copes with filenames containing	ST 21-Mar-1995
C	directory names by searching back to front
C	through the string to locate the `.' (Mod 1380)
C
C This builds the names for the temporary work files from the input filename
C and the PID so that they are unique. This enables the program to be run 
C several times in the same directory without a clash in the names when they
C were previously hard coded.
C The format of the temporay files is:
C       filename_PID.file-type
C eg
C      		LSL$DATA_ROOT:[LSL.NTF]SJ13SW_42000849.POINT_TMP
CWidths are:			<n>          1   <8>  1 <9>
C
	IMPLICIT NONE
C
	INCLUDE 'LUNS.PAR'
	INCLUDE	'LSL$CMNLSL:FILENAME.CMN'
	INCLUDE 'COMMANDS.CMN'
	INCLUDE 'FILENAME.CMN'
	INCLUDE '($JPIDEF)'		! Definitions for $GETJPI
	INCLUDE '($SSDEF)'		! System status codes
C
C Functions
C
	INTEGER		EXPAND
C
C Workspace
C
	STRUCTURE /JPIITMLST/		! Structure declaration for
	 UNION				!  $GETJPI item lists
	  MAP
	   INTEGER*2 BUFLEN,CODE
	   INTEGER*4 BUFADR,RETLENADR
	  END MAP
	  MAP				! A longword of 0 terminates
	   INTEGER*4 END_LIST		!  an item list
	  END MAP
	 END UNION
	END STRUCTURE
C
	RECORD /JPIITMLST/ JPILIST(2)	! Declare the item list for
C
	INTEGER*4	SYS$GETJPIW	! Status value
	INTEGER*4	OK,PID		! PID for $GETJPI
	INTEGER*2	IOSB(4)		! I/O Status Block for $GETJPI
	CHARACTER*255	PRCNAM		! Process name for $GETJPI
	INTEGER		PRCNAM_LEN	! Process name length
	INTEGER*4	POS,MIN,I
C
C..............................................................................
C initialisations
C
	JPILIST(1).BUFLEN	= 4
	JPILIST(1).CODE		= JPI$_PID
	JPILIST(1).BUFADR	= %LOC(PID)
	JPILIST(1).RETLENADR	= 0
	JPILIST(2).END_LIST	= 0
C
	OK = SYS$GETJPIW(
     &	     		%VAL(1),	! Event flag 1
     &	     		,		! No PID
     &	     		,		! No process name
     &	     		JPILIST,	! Item list
     &	     		IOSB,		! Always use IOSB with $GETJPI
     &	     		,		! No AST
     &	     		)		! No AST arg
C
C Check the status in both OK and the IOSB, if OK is ok then copy IOSB(1) to OK
C
	IF (OK) OK = IOSB(1)
C
	IF (.NOT.OK) THEN
	   CALL LIB$SIGNAL(%VAL(OK))
	   GOTO 999
	ENDIF
C
C Build the filenames
C
	IF (IS_MAGTAPE) THEN
C
C Don't want the magtape device as part of the name
C
	   PRCNAM_LEN = EXPAND('%WS% %X.',PRCNAM,PID)
	ELSE
C
C Don't want filename extension, so find the '.'
C
C	   POS = INDEX(NTFFILE(1:NTFLEN),'.')-1
C	   IF (POS.LE.0) POS = NTFLEN
C	   POS = MIN(POS,12)			! truncate the name to 12 chars
C	   PRCNAM_LEN = EXPAND('%WS% %S_%X.',PRCNAM,NTFFILE(1:POS),PID)
C
C Start from the end and work backwards
C
	   DO 80 POS = NTFLEN,1,-1
	      IF (NTFFILE(POS:POS).EQ.'.')  GOTO 85
80	   CONTINUE
85	   POS = POS - 1
	   IF (POS.LE.0) POS = NTFLEN
	   PRCNAM_LEN = EXPAND('%WS% %S_%X.',PRCNAM,NTFFILE(1:POS),PID)
	ENDIF
C
C Set the array containing the filenames to be the unique name plus the
C extension (which is already in the array - see LUNS.PAR)
C
	REL_FNAME = PRCNAM(1:PRCNAM_LEN)//REL_FNAME(1:255-PRCNAM_LEN)
	DO 100 I = 1,NUM_ID_FILES
	   ARRAY_FNAME(I) = PRCNAM(1:PRCNAM_LEN)//
     &			    ARRAY_FNAME(I)(1:255-PRCNAM_LEN)
100	CONTINUE
C
C.............................................................................
C
999	TEMP_FILES = OK
C
	RETURN
	END
