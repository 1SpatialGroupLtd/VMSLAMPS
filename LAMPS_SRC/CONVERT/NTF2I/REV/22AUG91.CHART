new format of technical documentation for NTF2I, started  by S.Gupta on 5-August-1991,

NTF2I code  based on original code by T.Ibbs. (which had been severely hacked and spaghettized by TJI and VLG)

The visual lay-out of this chart reflects the relationships between functions and procedures within NTF2I

It is hoped that this document will be amended as and when changes are made to the structure of NTF2I.


SG			05-Aug-1991			first release of updated NTF2I documentation
SG			14-Aug-1991			Added new funtions READ_I2NTF_INFO(), PROCESS_I2NTF_COMMENT()
SG			16-Aug-1991			Added detail to description of above functions, modified READ_SECHREC
SG			23-Aug-1991			Corrected bad assumptions when dealing with polygon records.

                               NTF2I
                                 |
   +-----------+------------+----+--------------+----------------+
   |           |            |                   |                |
initialise   CMDLIN()   OPEN_LOG()      .-------+-------.   close log file 
               |            |           | PROCESS_NTF() |
          read command   open log       `-------+-------'
          line and set     file                 |
          flags                                 |
                                                |
                                                |
           +------------------+-----------------+-----------------------------------------+-------------------+---------------+
           |                  |                                                           |                   |               |
	OPEN_NTF()    READ_NTF_HEADER()                                          READ_NTF_SECTIONS()    READ_VOLTERM()  CLOSE_NTF()
           |                  |                                                           |                   |               |
     open NTF file            |                                                           |            copy free text    close the
                              |                                                           |            to log file       NTF file
                              |                                                           |
           +----------------+-+----------------+------------+------------+                |
           |                |                  |            |            |                |
    READ_NTF_CHUNK()   OPEN_FILES()      PROCESS_NTF    READ_I2NTF  CLOSE_FILES()         |
           |                |              HEADER()        INFO()        |                |
           |          open relative and        |            |       close and delete      |
           |          indexed files for        |            |     relative and indexed    |
           |          read                     |            |            files            |
           |                                   |            |                             |
           |                                   |            |              .--------------+--------------.
           |                                   |            |              |  while haven't had  VOLTERM |
Open files for write                           |            |              `--------------+--------------'
read record                                    |            |                             |
if SECHREC then                                |            |          +-----------+------+-----+------------+------------+
  remember                                     |            |          |           |            |            |            |
else                                           |            |        READ_       OPEN_        READ_        READ_        CLOSE_
  write to relative file                       |            |      NTF_CHUNK()  FILES()     SECTION()   I2NTF_INFO()    FILES()
  STORE_ID()                                   |            |          |           |            |            |            |
endif                                          |            |      pre-read     open files      |   decipher comments    close and
close files (keep)                             |            |      section      for read        |   with MD info for    delete files
                                               |            |                                   |   next section

.--------------------------------------------------------------------------------------------------------------------------------.
|**   L A S E R        S C A N        S P E C I F I C        E X T E N S I O N       T O        N T F        S T A N D A R D   **|
`--------------------------------------------------------------------------------------------------------------------------------'
                                                            |
                                                     READ_I2NTF_INFO()
                                                            |
                                                            |
                                                            |
                                                            |
               +---------------------------+----------------+--------------------------+
               |                           |                                           |
     initialise all MD fields      locate end of file                         while more comments
     read from comments            work backwards in file                              |
                                     find last non-comment record          +-----------+----------+
                                                                           |                      |
                                                                       READ_RECORD       PROCESS_I2NTF_COMMENT()
                                                                                                  |
                                                                                                  |



                                                    |
                                                    |
                                          PROCESS_I2NTF_COMMENT
                                                    |
                     +------------------------------+------+----------------------------------+
                     |                                     |                                  |
                get key_field                       get data_field                 act on result of comparison
                     |                                     |                          of key_field
    read first 13 characters of comment      if the key field was recognised                   |
    adjust for trailing spaces               data fields starts at posn 19                     |
    compare with key-fields we recognise     set pointer to start of data                      |
                                             set pointer to end of string                      |
                                             find last non-space character                     |
                                                and ensure its not preceeded                   |
                                                by a space                                     |
                                             read data field                                   |
                                                                                               |
                                                                                               |
       +---------------------+----------------------+---------------------+------------------+-+-----------------+
       |                     |                      |                     |                  |                   |
       1                     2                      3                     4                  5                   6
   "IFF file"           "Spheroid"             "Projection"            "Scale"           "Units"            "Height data"
       |                     |                      |                     |                  |                   |
adjust data field       lookup against      lookup against         read a real number    lookup against     lookup against
skip over device name      MD2_SPH           MD2_PROJ                                    MD2_UNT            MD2_UNT
ignore version number

Note:  READ_I2NTF_INFO() does not conform to the NTF standard. I2NTF transmits some IFF specific data via comments. In order to
correctly extract the file it is necessary to decipher these comments. 

Note:  when looking up, the key_fields are in the form of a textual description. These must be compared against arrays held in the
MD2DES and MD2NAM common blocks. this will then give an index which is looked up against the codes for the names of the key-field.
the function to do this is MATCH_NAME 

Note: the "Height data" field is not part of the map descriptor. This field is input as part of the command line to I2NTF and as
such was never contained in the original IFF file. although we will read this field (as it may be needed at a later date) it will
be ignored in this release of NTF2I 

                                               |
                                        PROCESS_NTF_HEADER()
                                               |
                                               |
      +--------------------------------+-------+------------------+
      |                                |                          |
read 1st record                validate combination        .------+-----.
ensure vol header              of /ATTRIBUTE LEVEL         |            | 
      |                        and /FRT qualifiers     read next      process
      |                                |                record          |  
READ_VOLHDREC()                      RDATT()                            |
      |                                |                                |
      |                            read attributes                      |
read NTFLEVEL, must be 1,2 or 3                                         |
read NTFVER  , must be 1.1                                              |
read NTFOR,EOR,DIVIDER                                                  |
                                                                        |             
                                                                        |
                                                                        |
    +--------------------+----------------+-----------------------------+-------+-------------------------+
    |                    |                |                                     |                         |
    |                    |                |                             .-------+-------.           READ_COMMENT()
  READ_                READ_             READ_                       read next       skip over             |
 DBQUAL()             DBHREC()         FEATCLASS()                   record        continuation       copy record
    |                     |                |                            |           records          to log file
output data     extract dbase header  read FEAT_CODE as integer         |
from record     info from record,     if failed store as  string        |
read and copy   get compulsory        read CODE_COM or ST_CLAS          |
continuations   continuation record   ignore FEAT_CODE if neither       |
                extract more info     ignore continuation records       |
                                                                        |
                                                                        |
                                                                 read VAL_TYPE
                                                                 if not known
                                                                   store FWIDTH and VAL_TYPE
                                                                 else
                                                                   check FINTER type with stored
                                                                   set conversion flags
                                                                   read FWIDTH if not free format
                                                                   read  decimal points if REAL
                                                                 endif
                                                                 process continuation lines

                                                                   |
                                                            READ_SECTION()
                                                                   |
                                                                   |
                                                                   |                       
            +-----------------+--------------------------+----+-------------------+-----------------------------------+
            |                 |                 .--------+--------.               |                                   |
          READ_             CREATE_             | Process Records |      level 3, post-process                  CLOSE_IFF_FILE()
        SECHREC()        IFF_FILE()             `--------+--------'               |                                      |
            |                 |                          |                 close layer 1                         close current layer
            |           create IFF file              .---+----.            update NO                             update current NO
            |           write RA,HI,MH,              |        |            create layer 2                        update RA
            |            MD,NS,CC,CP            read next    READ_         PROCESS_CPOLY -----------------.      call EF
            |            start layer 1            record    STRING()       PROCESS_COLLECT -----------.   |      close file
            |                                                  |                                      |   |
            |                                                  |                                      |   |
            |                                                  `---------------------------------.    |   |
            |                                                                                    |    |   |
      +-----+------+--------------+-------------------+------------+------------------+          |    |   |
      |            |              |                   |            |                  |          |    |   `-----------------------
read record      DEDUCE_      set OS scale         READ_       Overwrite           ignore        |    |
ensure its a    IFF_NAME()    get IFF filename    _OSMH()      MD info which    continuations    |    |
SECHREC             |         read STRUC_TYPE        |         was read from                     |    |
               work out       read  XYLEN      read OS stuff   comments at end                   |    |
               IFF filename   read  XY_UNIT    from 2nd part   of prev section                   |    `----------------------------
               from SECTREF   read  XY_MULT    SECHREC and 6                                     |
                              read  ZLEN       continuations                                     |
                              read  ZUNIT                                                        |
                              read  ZMULT                                                        |
                              read xyz data                                                      `---------------------------------
                              get continuation
                              get XMIN,XMAX   
                              get YMIN,YMAX   

PROCESS_CPOLY()
      |
for as many CPOLYs as were encountered
  lookup the record number of the CPOLY in indexed file
  read the CPOLY record in
  READ_CPOLY ------------------------- remember the record number at start
end for                                jump over data part of CPOLY record
                                       process THE ATT_ID, NAME_ID (get FC and associated text)
                                       start new feature
                                       put 'CPOLY in the text field of an AC 6
                                       return to the start of the CPOLY record
                                       for as many parts in CPOLY
                                          read the POLY_ID
                                          WRITE_POLY() --------------------------------- lookup the POLY_ID in indexed file
                                          remember the start point (on a stack)         get the associated record
                                       end for                                          read the GEOM_ID field
                                       for as many parts in CPOLY record                WRITE_COORDS() - gets,writes the coords
                                          write invisible lines linking                 return the starting coordinates
                                          the polygons                                  
                                       end for                                          
                                      end feature





PROCESS_COLLECT
      |
for as many COLLECTs as were encountered
  lookup the record number of the COLLECT in indexed file
  read the COLLECT record in
  READ_COLLECT ----------------------- remember the record number at start
end for                                jump over data part of COLLECT record
                                       process THE ATT_ID, NAME_ID (get FC and associated text)
                                       start new feature,
                                       write  AC 6 with 'COLLECT' as the text field
                                       return to the start of the COLLECT record
                                       for as many parts in COLLECT
                                          read the REC_DESCR and I  from NTF$_ID field in collect
                                          GET_ID_LUN() --- associate the REC_DESCR with indexed file
                                          associate the REC_ID with a FSN 
                                          write an AC 9 with the FSN
                                        end for
                                        write ST entry as being the maximum coordinate in the IFF file
                                        close the feature
                                        
                           
              |
        READ_STRING()
              |
.-------------+-----------.
| Look at REC_DESCR field |
`-------------+-----------'
              |
 .------------'
 |                                          			note in READ_LINEAR, unknown or undecipherable feature codes are    
 +-'09'- READ_SECQUAL()                         		stored as FC 0 and the text (from which the FC was to be gotten
 |           |                                  		is stored as optional text in AC type 0
 |       write entry to log file                
 |       write continuation entry to log file                   Note that as new features are generated, their FSNs are associated
 |                                                              with the ID fields. This is written back to the indexed files
 +-'15'----------------------------------------------.          and subsequently used to generate collect records
 |                                                   |
 |                                              READ_LINEAR()
 |                                                   |
 |           +----------------+----------------------+--------+------------------------------+------------------------+
 |           |                |                               |                              |                        |
 |        write NF     get feature code               get other attributes          process coordinates          finish writing
 |                            |                       only get HT, OR                        |                      feature
 |                   .--------+-------------------.   write out as ACs           +-----------+------------+
 |                   |                            |                        read ID field                  |
 |         .---------+---------.           if not recognised                     |                get geometry attributes
 |         |                   |             default to FC 0            +--------+--------+       write out as ACs
 |      level 3           not level 3      write ISTAT entry            |                 |               |
 |         |                   |           if FC was 0             POINT, LINE          CLINE          +--+--------------+
 |     get ATT_ID      read FEAT_CODE        write AC 1 with            |                 |       WRITE_COORDS()    if point feature
 |     GET_ATTRIB()    field                 FEAT_CODE field        interpret as     interpret as      |            (symbol)
 |          |                                as optional text         GEOM_ID          CHAIN_ID        |            if had rotation
 |  use ATTI_ID to find ATTREC                                          |                 |            |            write RO entry
 |  read attribute code                                    .------------'                 |            `----.
 |  if its the one we want                                 |                              |                 |
 |     read in the data field                       READ_GEOMETRY()                  READ_CHAIN()      write coords as STs in 
 |  else                                                   |                              |            blocks of 200
 |     attempt to skip over attribute          if level 3                                 |
 |     carry on reading until finished           use GEOM_ID to get RECORD          use CHAIN_ID to get CHAINREC
 |     or we get the code we want              else                                 read number of parts
 |  endif                                        next record is the one we want     for as many parts
 |                                             endif                                   get the GEOM_ID
 |                                             while there are more coords             get direction
 |                                               read coords                           READ_GEOMETRY()
 |                                               store them                            reverse coords if neccesary
 |
 +-'23'- READ_LINEAR()                          
 |

 |
 +-'11'- READ_TEXT()------------------------.
 |                                          |
 |                      +-------------------+-------------+--------------------------+------------------------+
 |                      |                                 |                          |                        |
 |                READ_NAMPOSTN()                   locate NAMEREC              READ_NAMEREC()          write feature
 |                      |                                 |                          |                        |
 |             read FONT field                     if level 3                  get NAME_ID text        work out text coords
 |             read TEXT_HT field                    get record associated     read FEAT_CODE field    work out ISTAT entry
 |             determine ACTUAL_HT                   with NAME_ID              if not integer          write - NF FS
 |             read DIG_POSN field                 else                          read as a label       if non numerical feature code
 |             read ORIENT,convert to radians        get the previous            store in BYTE array     write AC 1 with FC as label
 |             if level 3                            record to NAMPOSTN          set FC to be 28       write TH TX RO EF
 |               read GEOM_ID                        (must be NAMEREC)         read TEXT_len
 |               READ_GEOMETRY()                   endif                       read TEXT
 |                       
 +-'13'- curved text, ignore
 |
 +-'08'- quality record, ignore
 |
 +-'90'- READ_COMMENT() 
 |
 +- valid level 3 entries
 |        |
 |        +-'16'- Node record, can't process it            
 |        |
 |        +-'31'- polygon, ----------------------------------.
 |        |                                                  |
 |        |                                                  |
 |        |                        +-------------------------+-------------------------------+
 |        |                        |                                                         |
 |        |                PROCESS_SEED_POINT()                          convert to a cline feature and process as a CLINE
 |        |                        |
 |        |                extract GEOM_ID and NAME_ID
 |        |                read seed point coordinate and name
 |        |                generate a text feature at
 |        |                   point taken from GEOMETRY record
 |        |                   name taken from NAME record
 |        |
 |        +-'26'- READ_LINEAR()      (complex line)          
 |        |
 |        +-'24'- SAVE_CHAIN()                               
 |
 |
 +-'07' , '09' - end of section or volume, set FINISH flag
 |
 +-error, unrecognised entry
