C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1987-12-02 13:05:56.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE SCASYM( ANGLE, DISTANCE )
C
***	IDENT	02DE87
***	MODULE	SCASYM
C
C Copyright (C) LaserScan Laboratories Ltd, Cambridge, England
C
C Author TJ Ibbs, 7 May 1986
C
C To insert a second point or a scale symbol
C
	IMPLICIT NONE
C
C arguments
C
	REAL		ANGLE		! orientation of symbol
	INTEGER		DISTANCE	! 'size' of symbol
C
C common blocks
C
	INCLUDE	'LSL$CMNIFF:MHDMB.CMN'	! for MHBGI
	INCLUDE	'CMN:POSITION.CMN'	! for STBUF,STPTR
C
C workspace
C
   	REAL		X,Y
	REAL		DISTAN
C
	INTEGER		THIS_Z_INT
	INTEGER		THIS_DZ_INT
	EQUIVALENCE	(ZBUF(2),THIS_Z_INT)
	EQUIVALENCE	(DZBUF(2),THIS_DZ_INT)
C
C **********************************************************************
C allow for the size of the units
C
	DISTAN = DISTANCE * (FLOAT(MHBGI)/1000.0)
C
C work out the offset of this next point
C
	X = DISTAN * COS(ANGLE)
	Y = DISTAN * SIN(ANGLE)
C
C and add this in to the first point, to give the second
C
	STBUF(1,2) = STBUF(1,1) + X
	STBUF(2,2) = STBUF(2,1) + Y
C
	STPTR = STPTR+1
C
C make sure the heights and capture methods are unset
C
       	THIS_Z_INT  = IFF_ABSENT
	THIS_DZ_INT = IFF_ABSENT
	CXYBUF(2)   = IFF_ABSENT
	CZBUF(2)    = IFF_ABSENT
C
	RETURN
	END
