	SUBROUTINE OSGRID( GRINT )
C
***	MODULE	OSGRID
***	IDENT	15AP87
C
C Copyright Laser-Scan Laboratories Ltd., Cambridge, England
C
C copied and adapted for OSTF2I		RJH	15-Apr-1987
C moved to DIGSYS & revamped		TJI	09-Feb-1984
C deal with scales of 625,000 etc	PGH	28-Sep-1983
C Created as program TIF		PGH	28-Jan-1983
C
C subroutine to create an OS style grid in layer 0
C
	IMPLICIT NONE
C
C arguments
C
	INTEGER*4	GRINT		! grid interval, 0 for default
C
C common blocks
C
	INCLUDE	'LSL$CMNIFF:MHDMB.CMN'	! OS style mapheader
	INCLUDE	'LSL$CMNIFF:IFFHAN.CMN'	! IFF error numbers, etc
	INCLUDE	'CMN:OSTF2IMSG.PAR'	! message numbers
C
C workspace
C
	INTEGER*4	GRSTEP		! grid interval to use
	INTEGER*4	MAPEXT		! map extent
	INTEGER*4	LPOSNO		! NO position
	INTEGER*4	I,J		! for loops
	INTEGER*2	FSN		! feature serial number
	INTEGER*2	FSARR(4)	! feature status array
	INTEGER*2	ISEQ		! internal sequence no.
	REAL		GRIDBUF(2,2)	! coordinates for IFF ST entry
C
C calculate the map extent
C
	MAPEXT = MHBGI * 10		! silly, but true
C
C find the grid interval
C
	IF (GRINT .EQ. 0) THEN
	   IF (MHSCSC .GE. 250000) THEN
	      GRSTEP = 10000
	   ELSEIF (MHSCSC .GE. 10000) THEN
	      GRSTEP = 1000
	   ELSE
	      GRSTEP = 100
	   ENDIF
	ELSE
	   GRSTEP = GRINT
	ENDIF
C
C check it agrees with the extent
C
	IF (GRSTEP.GT.MAPEXT) THEN
	   CALL LSL_PUTMSG(OSTF2I__GRIDBIG,GRSTEP,MHBGI)
	   GRSTEP = MHBGI
	ELSEIF (GRSTEP.LT.1) THEN
	   CALL LSL_PUTMSG(OSTF2I__GRIDSMALL,GRSTEP,MHBGI)
	   GRSTEP = MHBGI
	ENDIF
C
C output the NO entry
C
	LPOSNO = LPOSE
	CALL IFFNO(0,0,0)
C
C output grid
C
	FSN = 0				! set start FSN value
	FSARR(1) = 398			! grid feature code
C
	GRIDBUF(1,1) = 0.0
	GRIDBUF(1,2) = MAPEXT
C
	DO 100 I = 0,MAPEXT,GRSTEP	! step thro' grid lines
	   GRIDBUF(2,1) = I
	   GRIDBUF(2,2) = I
	   FSN = FSN + 1		! next FSN
	   ISEQ=0			! init. internal sequence no.
	   CALL IFFNF(FSN,ISEQ)		! start feature
	   CALL IFFFS(FSARR)		! it's a grid feature
	   CALL IFFTH(0)		! no size
	   CALL IFFST(GRIDBUF,2,0)	! output the line
	   CALL CHECK_RANGE(GRIDBUF,2)	! update RAnge
	   CALL IFFEF			! a very simple feature
100	CONTINUE
C
C and now draw lines other way across the other way...
C
	GRIDBUF(2,1) = 0
	GRIDBUF(2,2) = MAPEXT
C
	DO 200 I = 0,MAPEXT,GRSTEP
	   GRIDBUF(1,1) = I
	   GRIDBUF(1,2) = I
	   FSN = FSN + 1
	   ISEQ=0
	   CALL IFFNF(FSN,ISEQ)
	   CALL IFFFS(FSARR)
	   CALL IFFTH(0)
	   CALL IFFST(GRIDBUF,2,0)
	   CALL CHECK_RANGE(GRIDBUF,2)
	   CALL IFFEF
200	CONTINUE
C
C now update the NO and output the EO 
C
	CALL IFFUNO(LPOSNO)
	CALL IFFEO
C
C and that's all it does...
C
	RETURN
	END
