	LOGICAL FUNCTION MAP_HEADER( OLD_DMC, ICUVAL, RECORD )
C
***	IDENT	15JL91
***	MODULE	MAP_HEADER
C
C Copyright (C) LaserScan Laboratories Ltd, Cambridge, England
C
C Author TJ Ibbs, 2 April 1986
C
C To read the secondary map header (which is rather large, and optional)
C
C Return TRUE if we have a fatal error, FALSE otherwise
C
	IMPLICIT NONE
C
C arguments
C
	INTEGER		ICUVAL(2)	! values read from a record
	LOGICAL		OLD_DMC		! true if old format header
	CHARACTER*8	RECORD		! Current record
C
C common blocks
C
	INCLUDE	'LSL$CMNIFF:MHDMB.CMN'		! OS style mapheader
	INCLUDE 'LSL$CMNIFF:MHOSGB.CMN'		! New OS map header
	INCLUDE 'LSL$CMNOSMH:OSMH_NEW_MH.CMN'	! New map header variables
	INCLUDE 'LSL$CMNOSMH:OSMH_NEW.PAR'	! Header field definitions
	INCLUDE	'CMN:RECCMN.CMN'		! for RECNUM
	INCLUDE	'CMN:FILES.CMN'			! for MHTYPE
	INCLUDE	'CMN:OSTF2IMSG.PAR'		! message numbers
C
C workspace
C
	INTEGER		HDR_VERSION	! OSTF-4 header version number
	INTEGER		I,J,K		! for DO loops
	INTEGER		DAY,MONTH,YEAR	! for a date
	INTEGER		MONTH1,MONTH2	! the months for a pair of dates
	INTEGER		YEAR1,YEAR2	! the years  for a pair of dates
	LOGICAL		OK		! error return code
	BYTE		LETTERS(16)	! to hold text before packing
	CHARACTER*1	N,S,E,W		! for edge-matching
	INTEGER		HEADLEN		! actual length of header
	INTEGER		NRECORD		! count of records in header
C
C functions
C
	LOGICAL		OSMH_NEW_GETFLD ! get field from header
	LOGICAL		GETREC		! to read the next record
	LOGICAL		OSMH_UPGRADE	! upgrades map header
C
C **********************************************************************
C assume the worst
C
	MAP_HEADER = .TRUE.
C
C remember the OSTF-4 header version number
C
	HDR_VERSION = ICUVAL(2)
C
C Only do this for type 2 map headers. The ELSE appears near the end...
C
	IF ( MHTYPE.EQ.2 ) THEN
C
C MHDIDB - date of initial databanking
C
	IF ( GETREC( RECORD ) ) GOTO 99900
	READ (RECORD,2000,ERR=99901) DAY,MONTH,YEAR
2000	FORMAT (I2,X,I2,X,I2)
C
	CALL TO_BINDAY( MHDIDB,DAY,MONTH,YEAR )
C
C MHEDTN - edition    (12 chars)
C MHSURT - survey type (4 chars)
C
	IF ( GETREC( RECORD ) ) GOTO 99900
 	READ (RECORD,2001,ERR=99901) (LETTERS(I),I=1,8)
2001	FORMAT(8A1)
C
	IF ( GETREC( RECORD ) ) GOTO 99900
 	READ (RECORD,2001,ERR=99901) (LETTERS(I+8),I=1,8)
C
	CALL OSMH_PUTCHAR( LETTERS(1), MHEDTN, 12 )
	CALL OSMH_PUTCHAR( LETTERS(13), MHSURT, 4 )
C
C MHCIND - content indicator
C
	IF (HDR_VERSION .EQ. 1) THEN
C
	   IF ( GETREC( RECORD ) ) GOTO 99900
	   READ (RECORD,2001,ERR=99901) (LETTERS(I),I=1,8)
C
	   CALL OSMH_PUTCHAR( LETTERS(1), MHCIND, 8 )
C
C MHSURD - survey date
C
	ELSE
C
	   IF ( GETREC( RECORD ) ) GOTO 99900
	   READ (RECORD,2003,ERR=99901) MONTH,YEAR
2003	   FORMAT(2I4)
C
	   IF (YEAR.GT.0.AND.YEAR.LT.100) YEAR=YEAR+1900
	   CALL OSMH_PUTMY( MHSURD, MONTH, YEAR )
C
	ENDIF
C
C MHREVD - revision date
C
	IF ( GETREC( RECORD ) ) GOTO 99900
	READ (RECORD,2003,ERR=99901) MONTH,YEAR
C
	IF (YEAR.GT.0.AND.YEAR.LT.100) YEAR=YEAR+1900
	CALL OSMH_PUTMY( MHREVD, MONTH, YEAR )
C
C MHLEVD - levelling dates
C
	IF ( GETREC( RECORD ) ) GOTO 99900
 	READ (RECORD,2003,ERR=99901) MHLEVD(1), MHLEVD(2)
C
C MHBOUD - boundary date
C
	IF ( GETREC( RECORD ) ) GOTO 99900
	READ (RECORD,2003,ERR=99901) MONTH,YEAR
C
	IF (YEAR.GT.0.AND.YEAR.LT.100) YEAR=YEAR+1900
	CALL OSMH_PUTMY( MHBOUD, MONTH, YEAR )
C
C MHSDUP - digital update date
C
	IF (HDR_VERSION .EQ. 1) THEN
C
	   IF ( GETREC( RECORD ) ) GOTO 99900
	   READ (RECORD,2000,ERR=99901) DAY,MONTH,YEAR
C
	   CALL TO_BINDAY( MHSDUP,DAY,MONTH,YEAR )
C
C MHSTRD - structure date
C
	   IF ( GETREC( RECORD ) ) GOTO 99900
	   READ (RECORD,2000,ERR=99901) DAY,MONTH,YEAR
C
	   CALL TO_BINDAY( MHSTRD,DAY,MONTH,YEAR )
C
C MHCVAL - check values
C
	   IF ( GETREC( RECORD ) ) GOTO 99900
	   READ (RECORD,2001,ERR=99901) (LETTERS(I),I=1,8)
C
	   CALL OSMH_PUTCHAR( LETTERS(1), MHCVAL, 8 )
C
C MHBYTC - byte count
C
	   IF ( GETREC( RECORD ) ) GOTO 99900
	   READ (RECORD,2004,ERR=99901) MHBYTC
C
C MHUNSS - unspecified (short)
C
	   IF ( GETREC( RECORD ) ) GOTO 99900
	   READ (RECORD,2003,ERR=99901) MHUNSS(1),MHUNSS(2)
C
C MHFLAG - update flags
C
	   IF ( GETREC( RECORD ) ) GOTO 99900
	   READ (RECORD,2001,ERR=99901) (LETTERS(I),I=1,8)
C
	   CALL OSMH_PUTCHAR( LETTERS(1), MHFLAG, 8 )
C
C MHSTRC - structure category
C MHBNUM - batch number
C
   	   IF ( GETREC( RECORD ) ) GOTO 99900
	   READ (RECORD,2003,ERR=99901) MHSTRC,MHBNUM
C
C MHQCD - quality control date
C
 	   IF ( GETREC( RECORD ) ) GOTO 99900
	   READ (RECORD,2003,ERR=99901) MONTH,YEAR
C
	   IF (YEAR.GT.0.AND.YEAR.LT.100) YEAR=YEAR+1900
	   CALL OSMH_PUTMY( MHQCD, MONTH, YEAR )
C
C MHOSUR - original survey dates
C
 	   IF ( GETREC( RECORD ) ) GOTO 99900
	   READ (RECORD,2002,ERR=99901) MONTH1,YEAR1,MONTH2,YEAR2
2002	   FORMAT(4I2)
C
	   IF (YEAR1.GT.0.AND.YEAR1.LT.100) YEAR1=YEAR1+1900
	   CALL OSMH_PUTMY( MHOSUR(1), MONTH1, YEAR1 )
	   IF (YEAR2.GT.0.AND.YEAR2.LT.100) YEAR2=YEAR2+1900
	   CALL OSMH_PUTMY( MHOSUR(2), MONTH2, YEAR2 )
C
C MHDUPD - digital update dates
C
	ELSE
C
	   DO 200 I = 1,6
   	      IF ( GETREC( RECORD ) ) GOTO 99900
	      READ (RECORD,2003,ERR=99901) MONTH,YEAR
	      IF (YEAR.GT.0.AND.YEAR.LT.100) YEAR=YEAR+1900
	      CALL OSMH_PUTMY( MHDUPD(I), MONTH, YEAR )
200	   CONTINUE
C
C MHHWMD, MHLWMD - high and low water mark dates
C
	   IF ( GETREC( RECORD ) ) GOTO 99900
 	   READ (RECORD,2003,ERR=99901) MHHWMD, MHLWMD
C
C MHSRVD - selected revision date
C
 	   IF ( GETREC( RECORD ) ) GOTO 99900
	   READ (RECORD,2003,ERR=99901) MONTH,YEAR
C
	   IF (YEAR.GT.0.AND.YEAR.LT.100) YEAR=YEAR+1900
	   CALL OSMH_PUTMY( MHSRVD, MONTH, YEAR )
C
C MHMULS - multi-year survey date
C
	   IF ( GETREC( RECORD ) ) GOTO 99900
 	   READ (RECORD,2003,ERR=99901) YEAR1,YEAR2
C
	   IF (YEAR1.GT.0.AND.YEAR1.LT.100) YEAR1=YEAR1+1900
	   IF (YEAR2.GT.0.AND.YEAR2.LT.100) YEAR2=YEAR2+1900
	   CALL OSMH_PUTHALVES( MHMULS, YEAR1, YEAR2 )
C
	ENDIF
C
C MHCPYD - copyright date
C MHCVI  - contour vertical interval
C
	IF ( GETREC( RECORD ) ) GOTO 99900
 	READ (RECORD,2003,ERR=99901) MHCPYD, MHCVI
C
C MHMENU - menu version number
C
	IF ( GETREC( RECORD ) ) GOTO 99900
	READ (RECORD,2004,ERR=99901) MHMENU
2004	FORMAT(I8)
C
C date data was written to tape - ignore it for the moment
C
	IF ( GETREC( RECORD ) ) GOTO 99900
	READ (RECORD,2000,ERR=99901) DAY,MONTH,YEAR
C
C MHEMSx - edgematch status
C
	IF ( GETREC( RECORD ) ) GOTO 99900
	READ (RECORD,2005,ERR=99901) N,E,S,W
2005	FORMAT(1X,1A,1X,1A,1X,1A,1X,1A)
C
C insert the appropriate ICL letter, if it was found in the input
C
	IF (N.EQ.'N') CALL LIB$INSV( 46, 0, 6, MHEMSN )
	IF (E.EQ.'E') CALL LIB$INSV( 37, 0, 6, MHEMSE )
	IF (S.EQ.'S') CALL LIB$INSV( 51, 0, 6, MHEMSS )
	IF (W.EQ.'W') CALL LIB$INSV( 55, 0, 6, MHEMSW )
C
C in the earliest form of DMC (as described in the 'yellow book'),
C that is where the map header ended
C in the intermediate form, there were another 2 records
C in the latest form, there are another 32 records after those 2
C
C we will make an attempt to cope with any one of those forms
C - read the next record
C
	IF ( GETREC( RECORD ) ) GOTO 99900
	READ (RECORD,2003,END=99901) ICUVAL(1), ICUVAL(2)
C
C and does it make sense as a flag, or as the first part of a double
C date (the multi-year MHW date)?
C if it is negative, then it is a flag, and we go off to treat it
C as a flag
C
	IF ( ICUVAL(1).LT.0 ) THEN
    	   CALL LSL_PUTMSG( OSTF2I__OLDHDR1 )
	   OLD_DMC = .TRUE.
	   GOTO 9000
	ENDIF
C
C otherwise, it is MHMHWM - multi-year high water mark
C
 	READ (RECORD,2003,ERR=99901) YEAR1,YEAR2
C
	IF (YEAR1.GT.0.AND.YEAR1.LT.100) YEAR1=YEAR1+1900
	IF (YEAR2.GT.0.AND.YEAR2.LT.100) YEAR2=YEAR2+1900
	CALL OSMH_PUTHALVES( MHMHWM, YEAR1, YEAR2 )
C
	IF ( GETREC( RECORD ) ) GOTO 99900
 	READ (RECORD,2003,ERR=99901) YEAR1,YEAR2
C
	IF (YEAR1.GT.0.AND.YEAR1.LT.100) YEAR1=YEAR1+1900
	IF (YEAR2.GT.0.AND.YEAR2.LT.100) YEAR2=YEAR2+1900
	CALL OSMH_PUTHALVES( MHMLWM, YEAR1, YEAR2 )
C
C and check whether we have ended the map header again
C
	IF ( GETREC( RECORD ) ) GOTO 99900
	READ (RECORD(1:4),2006,ERR=99901) (LETTERS(I),I=1,4)
2006	FORMAT(4A1)
C
C this is either a flag, or it is the contractor's identity,
C but OS have gone and done one of their non-standard, non-upwards 
C compatible changes to the format yet again - the contractors ID is 
C now a character field, so to check for a flag, we have to look at 
C each character
C
	IF (LETTERS(1).EQ.'-' .OR. LETTERS(2).EQ.'-' .OR. 
     &	                           LETTERS(3).EQ.'-') THEN
C
C it looks like a flag, so read the record again properly
C
	   READ (RECORD,2003,END=99901) ICUVAL(1), ICUVAL(2)
C
C if it is negative, then it is definitely a flag, and we go off to 
C treat it as such
C
	   IF ( ICUVAL(1).LT.0 ) THEN
    	      CALL LSL_PUTMSG( OSTF2I__OLDHDR2 )
	      OLD_DMC = .TRUE.
	      GOTO 9000
	   ENDIF
	ENDIF
C
C if it is the contractor's identity, we now interpret it according to 
C the OSTF-4 header version ...
C
C MHCID - contractors ID (primary and secondary codes)
C MHHUC - house unit count
C
	IF (HDR_VERSION .EQ. 1) THEN
	   CALL OSMH_PUTCHAR( LETTERS(1), MHCID, 4 )
	   READ (RECORD(5:8),2007,END=99901) MHHUC
2007	   FORMAT(I4)
C
C MHCONT - contractors identity (old version)
C
	ELSE
	   READ (RECORD(1:4),2007,END=99901) MHCONT
	ENDIF
C
C MHWI1D - wards in 1 district
C
	J = 0
C
	DO 400 I=1,10
	   IF ( GETREC( RECORD ) ) GOTO 99900
 	   READ (RECORD,2001,ERR=99901) (LETTERS(K),K=1,8)
	   J = J+1
	   CALL OSMH_PUTCHAR( LETTERS(1), MHWI1D(J), 4 )
	   J = J+1
	   CALL OSMH_PUTCHAR( LETTERS(5), MHWI1D(J), 4 )
400	CONTINUE
C
C MHWI2D - wards in 2 district
C
	J = 0
C
	DO 500 I=1,10
	   IF ( GETREC( RECORD ) ) GOTO 99900
 	   READ (RECORD,2001,ERR=99901) (LETTERS(K),K=1,8)
	   J = J+1
	   CALL OSMH_PUTCHAR( LETTERS(1), MHWI2D(J), 4 )
	   J = J+1
	   CALL OSMH_PUTCHAR( LETTERS(5), MHWI2D(J), 4 )
500	CONTINUE
C
C MHEDIC - electoral division in county
C
	J = 0
C
	DO 600 I=1,10
	   IF ( GETREC( RECORD ) ) GOTO 99900
 	   READ (RECORD,2001,ERR=99901) (LETTERS(K),K=1,8)
	   J = J+1
	   CALL OSMH_PUTCHAR( LETTERS(1), MHEDIC(J), 4 )
	   J = J+1
	   CALL OSMH_PUTCHAR( LETTERS(5), MHEDIC(J), 4 )
600	CONTINUE
C
C MHDUPC - digital update count
C MHPLUS - OSTF+ indicator
C MHNSUP - number of setup points
C                                                    
	IF ( GETREC( RECORD ) ) GOTO 99900
	IF (HDR_VERSION .EQ. 1) THEN
	   READ (RECORD,2003,ERR=99901) MHDUPC, MHPLUS
	ELSE
	   READ (RECORD,2003,ERR=99901) MHDUPC, MHNSUP
	ENDIF
C
C let them know if we had an OSTF-3 header
C
	IF (HDR_VERSION .EQ. 0) CALL LSL_PUTMSG( OSTF2I__OLDHDR3 )
C
C now upgrade the header if we had an old version
C
9000	IF (HDR_VERSION .EQ. 0) THEN
	   OK = OSMH_UPGRADE()
	   IF (.NOT. OK) THEN
	      CALL LSL_PUTMSG( OSTF2I__MHUPGRADE )
	      CALL LSL_ADDMSG( OK )
	   ENDIF
	ENDIF
C
	ELSE
C
C For type 3 headers, get the -20 header length from the LSL$OS_MH_TABLE table.
C The header length is divided by 8 (because a CHAR*8 record is read in) and 1
C is subtracted (because the -20 record was already read in PROCESS).
C Then read in whole header into MH2BYTE, 8 chars at a time.
C
	   IF ( .NOT.OSMH_NEW_GETFLD( MH_TWENTY )) GOTO 9999
C
	   HEADLEN = MH_SIZE / 8 - 1
C
	   NRECORD = 0
9500 	   CONTINUE
C
	      IF ( GETREC( RECORD ) ) GOTO 99900
	      READ (RECORD(1:4),2006,ERR=99901) (LETTERS(I),I=1,4)
C
C this could be a flag, so to check, we have to look at each character
C
	      IF (LETTERS(1).EQ.' ' .AND. LETTERS(2).EQ.' ' .AND.
     &            LETTERS(3).EQ.'-' .AND. LETTERS(4).GE.'0' .AND.
     &            LETTERS(4).LE.'9' .OR.
     &		  LETTERS(1).EQ.' ' .AND. LETTERS(2).EQ.'-' .AND.
     &            LETTERS(3).GE.'0' .AND. LETTERS(3).LE.'9' .AND.
     &            LETTERS(4).GE.'0' .AND. LETTERS(4).LE.'9') THEN
C
C it looks like a flag, so read the record again properly
C
	         READ (RECORD,2003,END=99901) ICUVAL(1), ICUVAL(2)
C
C if it is negative, then it is definitely a flag, to mark end.
C
	         IF ( ICUVAL(1).LT.0 ) THEN
C and that is all of the header. 
C Test header size. If too long or too short display error message.
C
		    IF (NRECORD.LT.HEADLEN) THEN
           	       OLD_DMC = .TRUE.
	   	       CALL LSL_PUTMSG( OSTF2I__SHORTHDR )
		    ELSE IF (NRECORD.GT.HEADLEN) THEN
           	       CALL LSL_PUTMSG( OSTF2I__LONGHDR )
		    ENDIF
C
	            GOTO 9501
	         ENDIF
	      ENDIF
	      CALL COPY_TO_MH( RECORD )
	      NRECORD = NRECORD + 1
	      GOTO 9500
	ENDIF
C
9501	MAP_HEADER = .FALSE.
	GOTO 9999
C
C **********************************************************************
C unexpected end of file
C
99900	CALL LSL_PUTMSG( OSTF2I__UNEXPEOF )
	GOTO 9999
C
C error reading a record
C
99901	CONTINUE
	CALL LSL_PUTMSG( OSTF2I__BADHDR2 )
C
9999	RETURN
	END
