C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1989-11-02 19:10:50.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL FUNCTION DO_INDEX( OUTPUT, OLD_DMC )
C
***	IDENT	08AU86
***	MODULE	DO_INDEX
C
C Copyright LaserScan Laboratories Ltd., Cambridge, England
C
C To read the tape index from an OSTF tape/file
C
C Author TJ Ibbs			24 May 1985
C Modified for OSTF2I, TJ Ibbs		 2 Apr 1986
C Modified to handle backspace 		08 Aug 1986
C  separately if have a serial connection
C  to the tape unit.
C
	IMPLICIT NONE
C
C Returns TRUE if it fails, FALSE otherwise
C
C arguments
C
	LOGICAL		OUTPUT		! in - true if to output the index
	LOGICAL		OLD_DMC		!out - true if no index
C
C *********************************************************************
C common blocks
C
	INCLUDE	'CMN:OSTF2IMSG.PAR'	! message numbers
	INCLUDE	'CMN:FILES.CMN'		! for DMCLUN
 	INCLUDE	'CMN:RECCMN.CMN'	! for RECNUM
C
C function
C
	LOGICAL		GETREC		! get next record
	LOGICAL		BACK_SP		! Backspace one block
C
C *********************************************************************
C
C local workspace
C
	CHARACTER*8	RECORD		! next record to read
	INTEGER		I,J		! DO loop variables
	INTEGER		ICUVAL(2)	! input data
	INTEGER		MAPCNT		! count of how many maps
	REAL		INDEX(4)	! data about a map
C
C *********************************************************************
C assume that we succeed
C
	DO_INDEX = .FALSE.
	OLD_DMC  = .FALSE.
C
C the index is the first thing on the tape, and has the format:
C
C		-21	<number of maps>	start of index
C		map 1 SW corner easting
C	 	map 1 SW corner northing
C		map 1 NE corner easting
C		map 1 NE corner northing
C		map 2 etc...
C		...
C		-21	0			end of index
C
C there will then follow enough -6 (dummy) records to fill the current
C block - these will be read by PROCESS
C
C so we read the first 8 character record
C
	IF ( GETREC(RECORD) ) GOTO 90300
	READ ( RECORD, 5000, ERR=99900 ) ICUVAL(1), ICUVAL(2)
5000	FORMAT(2I4)
C
C if this value is not -21, then we complain and rewind
C otherwise, read the index in
C
	IF (ICUVAL(1).NE.-21) THEN
	   CALL LSL_PUTMSG( OSTF2I__NOINDX )
C
C Now we have to check if the tape is connected to the host via a serial port.
C If so, we use the library tape routine to perform the backspace over the
C complete block of data.
C
	   IF (SERIAL_MT) THEN
	      IF (.NOT. BACK_SP()) GOTO 9999	! If Backspace failed - exit
	   ELSE
	      REWIND DMCLUN			! unread that record
	   ENDIF
	   OLD_DMC = .TRUE.	! it's old format data
	   RECNUM  = 0		! reset our record count
	   GOTO 9000
	ENDIF
C
C so we have the start of the index - note how many maps we have
C
	MAPCNT = ICUVAL(2)
	IF ( OUTPUT ) THEN
	   IF ( MAPCNT.EQ.1 ) THEN
	      TYPE *,'Index of maps - there is    1 map listed'
	   ELSE
	      WRITE(*,21001) MAPCNT
21001	      FORMAT(X,'Index of maps - there are ',I4,' maps listed')
	   ENDIF
	ENDIF
C
C and now get the coordinates in
C
	DO 2150 I = 1,ICUVAL(2)
C
C	 read the map reference and limits
C
	   DO 2140 J=1,4
	      IF ( GETREC(RECORD) ) GOTO 90300
	      READ (RECORD,21002,ERR=99900) INDEX(J)
21002	      FORMAT(F8.0)
2140	   CONTINUE
C
C	 and reflect them to the user
C
	   IF ( OUTPUT ) WRITE (*,21003) I, (NINT(INDEX(J)), J=1,4)
21003	   FORMAT(X,'Map ',I4,' from ',I8,',',I8,' to ',I8,',',I8)
C
2150	CONTINUE
C
C and we should now read a final -21
C
	IF ( GETREC(RECORD) ) GOTO 90300
	READ ( RECORD, 5000, ERR=99900 ) ICUVAL(1), ICUVAL(2)
C
	IF ( ICUVAL(1).NE.-21 ) THEN
	   CALL LSL_PUTMSG( OSTF2I__ENDINDX )
	ENDIF
C
	GOTO 9000		! and that's the end
C
C *********************************************************************
C
C come here if we read end of file
C
90300	CALL LSL_PUTMSG( OSTF2I__ENDINDX )
	GOTO 9999
C
C *********************************************************************
C
C come here if we fail to read a record
C
99900	CALL LSL_PUTMSG( OSTF2I__ERRINDX )
	GOTO 9999
C
C *********************************************************************
C
C general failure return
C
9999	DO_INDEX = .TRUE.
C
C success exit joins here
C
9000	RETURN
	END
