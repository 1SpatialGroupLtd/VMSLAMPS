C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1988-08-11 14:29:20.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL FUNCTION STDUMP
C
***	IDENT	11AU88
***	MODULE	STDUMP
C
C	Copyright LaserScan Laboratories Ltd., Cambridge, England
C
C Author J Barber 19 July 1988 for CEDD2I 
C
C This subroutine opens a new DUMP file to receive hex dump of dataset
C   from the tape if mounted FOREIGN
C It returns TRUE if it succeeds, and FALSE if some (described)
C   failure occurs
C
	IMPLICIT NONE
C
C common blocks...
C
***     PARAMETER/LSL$CMNLSL:LSLLIBMSG/
***     PARAMETER/HERE:CEDD2IMSG/
***	COMMON/HERE:PARAMS/             ! for DUMP 
C
C  workspace...
C
        INTEGER         RETVAL          ! for errors
        INTEGER         IERR
C
C  functions
C
	INTEGER		FLWOPN
C
C **********************************************************
	STDUMP = .TRUE.		  
        DUMPOPN = .FALSE.
C
C  open file for write
C
        RETVAL = FLWOPN (DUMPLUN, DUMPFILE, IERR, )
        IF (.NOT.RETVAL) THEN
           CALL LSL_PUTMSG (CEDD2I__FILOPNERR, 
     &                                 DUMPFILE(:DUMPLEN))
           CALL LSL_PUTMSG (RETVAL)
           IF (RETVAL.EQ.LSL__SYSOPEN) CALL LSL_PUTMSG (IERR)
           STDUMP = .FALSE.
           GOTO 999
        ENDIF
C
        DUMPOPN = .TRUE.
        CALL FLWRTF
        CALL WRITEF
        CALL WRITEF (' Dumping data to file %S', DUMPFILE
     &                                               (1:DUMPLEN))
        CALL WRITEF
        CALL FLWRTF
C
999	RETURN				! back to the main program
	END
C
