C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1988-09-12 16:05:02.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE ENDIFF (INLUN)
C
***	IDENT	12SE88
***	MODULE	ENDIFF
C
C	Copyright LaserScan Laboratories Ltd., Cambridge, England
C
C Author TJ Ibbs, 15 March 1983
C   modified for CEDD2I   JB 1 June 1988
C
C This subroutine finishes off and tidies up the current IFF file
C
	IMPLICIT NONE
C
        INTEGER*2           INLUN       ! unit to close
C
***     PARAMETER/HERE:CEDD2IMSG/
***	COMMON/HERE:STATE/		! do we have an IFF file?
***     COMMON/HERE:PARAMS/
***     COMMON/HERE:DESCR/
C
        INTEGER*2           I           ! loop count
C
C  ************************************************************
C and check if we have a file open
C
	IF (.NOT.INIFF (INLUN)) THEN
           CALL LSL_PUTMSG (CEDD2I__NOTINFILE, INLUN)
        ELSE                            ! in the file
           IF (INFTR) CALL IFFEF
C
           IF (INLAY(0).AND.INLAY(1)) THEN
              CALL LSL_PUTMSG (CEDD2I__TWOLAYERS)
           ENDIF
C                                       ! end current overlays
           DO 10 I = 0,3
           IF (INLAY(I)) CALL ENDLAY(I)
10         CONTINUE
C
 	   CALL IFFEM			   ! end the map
	   CALL IFFEJ			   ! end the job
C
           CALL WRITEF
           IF (INLUN.EQ.FEALUN) THEN
              IF (DIAG) THEN
                 CALL IFFCLO (FEALUN)
                 CALL WRITEF (' Temporary FEAture IFF file %S closed',
     &                                                  FEANAM(:TMPLEN))
              ELSE
                 CALL IFFCDL (FEALUN)
                 CALL WRITEF (' Temporary FEAture IFF file %S deleted',
     &                                                  FEANAM(:TMPLEN))
              ENDIF
              INIFF (FEALUN) = .FALSE.
           ELSEIF (INLUN.EQ.SEGLUN) THEN
              IF (DIAG) THEN
                 CALL IFFCLO (SEGLUN)
                 CALL WRITEF (' Temporary SEGment IFF file %S closed',
     &                                                  SEGNAM(:TMPLEN))
              ELSE
                 CALL IFFCDL (SEGLUN)
                 CALL WRITEF (' Temporary SEGment IFF file %S deleted',
     &                                                  SEGNAM(:TMPLEN))
              ENDIF
              INIFF (SEGLUN) = .FALSE.
           ELSEIF (INLUN.EQ.IFFLUN) THEN
              CALL IFFCLO (INLUN)                 ! close the IFF file
              CALL WRITEF (' IFF file %S closed', FULNAM(:FULLEN))
              INIFF (IFFLUN) = .FALSE.
           ELSE
              CALL LSL_PUTMSG (CEDD2I__NOTINFILE, INLUN)
           ENDIF
	ENDIF
C
	RETURN
	END
C
