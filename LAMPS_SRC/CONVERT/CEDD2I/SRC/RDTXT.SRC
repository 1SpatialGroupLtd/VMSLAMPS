C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1988-09-09 16:56:50.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL FUNCTION RDTXT
C
***	IDENT	09SE88
***	MODULE	RDTXT
C
C	Copyright LaserScan Laboratories Ltd., Cambridge, England
C
C Author J Barber 13 July 1988 for CEDD2I 
C
C This function reads the contents of the TXT record of a CEDD
C   dataset
C It returns TRUE if it succeeds, and FALSE if some (described)
C   failure occurs
C
	IMPLICIT NONE
C
C common blocks...
C
***     PARAMETER/HERE:CEDD2IMSG/
***     PARAMETER/LSL$CMNLSL:LSLLIBMSG/
***	COMMON/HERE:PARAMS/             ! for DIAG
***     COMMON/HERE:STATE/
C
C  functions
C
        LOGICAL         RDINT
        INTEGER         FLWSTR
        INTEGER         READSTR
C
C  workspace...
C
        INTEGER*2       LENGTH          ! length of block
        INTEGER*2       LEN             ! length of line
C
        INTEGER         RETVAL,CHRLEN
        INTEGER         IERR            ! for errors
        INTEGER*2       I               ! loop count
        INTEGER*2       DCP1,PTR
C
        CHARACTER*25    TITLE
        CHARACTER*41    HALFLINE
        CHARACTER*82    LINE            ! line of text
C
        BYTE            DELETE
        DATA            DELETE /Z7F/
C
C **********************************************************
	RDTXT = .TRUE.		  
C
        IF (DIAG) CALL WRITEF ('.Contents of TXT record: ')
        CALL WRITEF
C
        TITLE = 'Text length'
C
        CALL DCPSAV (DCP1)
        IF (DCP1.NE.9) THEN
           CALL LSL_PUTMSG (CEDD2I__TXTCNTERR, TITLE, DCP1)
           RDTXT = .FALSE.
           GOTO 999
        ENDIF
        CALL SETWIN ( , 4)
C
        LENGTH = 0
        IF (.NOT.RDINT (LENGTH)) THEN
           IF (BLKERR.OR.DELFND) THEN
              CALL LSL_PUTMSG (CEDD2I__UNEXPEND, TITLE, DCP1)
              RDTXT = .FALSE.
              GOTO 999
           ENDIF
        ENDIF
        CALL SETWIN (DCP1+4, )
C
        IF (DIAG) THEN
           CALL WRITEF ('.%S %^W%N', TITLE, LENGTH)
           CALL WRITEF
        ENDIF
C
        IF (LENGTH.LE.0) THEN
           CALL WRITEF ('  no data in text file for TXT record')
           GOTO 999
        ELSEIF (LENGTH.GT.1968) THEN
           CALL WRITEF ('  data in text file too long for TXT record -')
           CALL WRITEF ('    some will be lost')
        ENDIF
C
        CALL DCPSAV (PTR)
        IF (PTR.NE.13) THEN
           CALL LSL_PUTMSG (CEDD2I__TXTCNTERR, TITLE, PTR)
        ENDIF
C
C  for each line
C
        DO 100  I = 1,24
C
        LEN = LENGTH - (I-1)*82
        IF (LEN.LE.0) GOTO 999
        IF (LEN.LE.82) THEN
           CALL SETWIN ( , LEN)
        ELSE
           CALL SETWIN ( , 82)
        ENDIF
C
        HALFLINE = '                                         '
        LINE = HALFLINE//HALFLINE
        CHRLEN = READSTR (LINE, DELETE, , .FALSE., RETVAL)
        IF (DELFND.OR.BLKERR .OR. CHRLEN.LT.LEN .OR. 
     &                                        .NOT.RETVAL) THEN
           CALL LSL_PUTMSG (CEDD2I__UNEXPEND, TITLE, PTR)
           GOTO 150
        ENDIF
C
        IF (DIAG) CALL WRITEF ('     %S', LINE)
C
        CALL FLWSEL (TXTLUN)
        RETVAL = FLWSTR (LINE, IERR)
        IF (.NOT.RETVAL) CALL LSL_PUTMSG (IERR)
C
100     CONTINUE
C
150     IF (DIAG) CALL WRITEF ('     %S', LINE)
        CALL FLWSEL (TXTLUN)
        RETVAL = FLWSTR (LINE, IERR)
        IF (.NOT.RETVAL) CALL LSL_PUTMSG (IERR)
C
999     RETURN	                ! back to the main program
	END
C
