C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1988-08-31 16:14:20.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL FUNCTION DSI_READ_LONG (LEN, OUTNUM, TITLE, REPLACE)
C
***	IDENT	31AU88
***	MODULE	DSI_READ_LONG
C
C	Copyright LaserScan Laboratories Ltd., Cambridge, England
C
C Author J Barber, 16 May 1988
C
C This function read a character string of length LEN
C
	IMPLICIT NONE
C
        INTEGER*2        LEN            ! no. of chars to read
        INTEGER          OUTNUM         ! result
        CHARACTER*25     TITLE          
        INTEGER          REPLACE        ! no. to use on finding no 
C                                       !   long word 
C                                       ! ( if = -1 disable print)
***     PARAMETER/HERE:CEDD2IMSG/
***     COMMON/HERE:PARAMS/
***     COMMON/HERE:STATE/
C
C  function
C
        LOGICAL         RDLONG          ! read long word
C
C workspace
C
	INTEGER*2	PTR             ! locally saved pointer
        INTEGER*2       RESTRT
C
C  ****************************************************************
C be optimistic initially
C
	DSI_READ_LONG  = .TRUE.
        RDLONGERR = .FALSE.
C
        CALL DCPSAV (PTR)
C
        CALL SETWIN ( , LEN)
C
        IF (RDLONG (OUTNUM)) THEN
           IF (BLKERR.OR.DELFND) THEN
              DSI_READ_LONG = .FALSE.
              GOTO 999
           ENDIF
           OUTNUM = REPLACE
           IF (REPLACE.EQ.0) THEN
              IF (DIAG) CALL LSL_PUTMSG (CEDD2I__DSIPUT0, TITLE, PTR)
           ELSEIF (REPLACE.EQ.1) THEN
              IF (DIAG) CALL LSL_PUTMSG (CEDD2I__DSIPUT1, TITLE, PTR)
           ENDIF
           RDLONGERR = .TRUE.
        ENDIF
C
        RESTRT = PTR + LEN
        IF (RESTRT.GT.1980) RESTRT = MOD (RESTRT, 1972)
        CALL SETWIN (RESTRT, )
C
        IF (FULL_DIAG .AND. REPLACE.NE.-1) CALL WRITEF 
     &                                      ('.%S %N', TITLE, OUTNUM)
C
999	RETURN		                  ! return with it
	END
C
