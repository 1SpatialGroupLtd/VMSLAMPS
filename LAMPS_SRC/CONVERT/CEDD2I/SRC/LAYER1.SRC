C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1988-08-09 12:19:40.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE LAYER1
C
***	IDENT	09AU88
***	MODULE	LAYER1
C
C       Copyright LaserScan Laboratories Ltd., Cambridge, England
C
C Author J Barber, 23 June 1988 
C
C This subroutine outputs any info into layer 1 AC's
C
	IMPLICIT NONE
C
C common blocks...
C
***     PARAMETER/HERE:CEDD2IMSG/
***     COMMON/LSL$CMNFRT:FRTACD/
***     COMMON/HERE:FTRHED/
***     COMMON/HERE:PARAMS/
***     COMMON/HERE:DESCR/
C
C  functions
C
        LOGICAL         ACDFND_NAME
C
C workspace...
C
        INTEGER*2       I
        INTEGER*2       ACTYPE
C
        BYTE            CACVAL(4)            ! for character AC's
C
C  **********************************************************
        IF (DIAG) THEN
           CALL WRITEF 
     & ('.Outputting Feature Header info to ACs in layer 1')
           CALL WRITEF
        ENDIF
C
C  source code
C
        IF (.NOT.ACDFND_NAME ('Source_code')) THEN
           ACTYPE = ACD_CODE
           CALL IFFAC (ACTYPE, SOURCE)
        ENDIF
C
C  source scale reciprocal
C
        IF (.NOT.ACDFND_NAME ('Source_scale')) THEN
           ACTYPE = ACD_CODE
           CALL IFFAC (ACTYPE, RECIPR)
        ENDIF
C
C  source date
C
        IF (.NOT.ACDFND_NAME ('Source_date')) THEN
           ACTYPE = ACD_CODE
           CALL IFFAC (ACTYPE, SRCDAT)
        ENDIF
C
C  collection system code
C
        IF (.NOT.ACDFND_NAME ('Collection_system')) THEN
           ACTYPE = ACD_CODE
           CALL IFFAC (ACTYPE, COLSYS)
        ENDIF
C
C  maintenance date
C
        IF (.NOT.ACDFND_NAME ('Maintenance_date')) THEN
           ACTYPE = ACD_CODE
           CALL IFFAC (ACTYPE, MNTDAT)
        ENDIF
C
C  accuracies
C
        IF (.NOT.ACDFND_NAME ('Feature_horiz_acc')) THEN
           ACTYPE = ACD_CODE
           CALL IFFAC (ACTYPE, FTRHAC)
        ENDIF
C
        IF (.NOT.ACDFND_NAME ('Feature_vert_acc')) THEN
           ACTYPE = ACD_CODE
           CALL IFFAC (ACTYPE, FTRVAC)
        ENDIF
C
C  base product
C
        IF (.NOT.ACDFND_NAME ('Base_product')) THEN
           ACTYPE = ACD_CODE
           CALL IFFAC (ACTYPE, BASPRD)
        ENDIF
C
C  security
C
        DO 10 I = 1,4
           CACVAL(I) = ' '
10      CONTINUE
C
        CACVAL(1) = ICHAR (SECRTY)
C
        IF (.NOT.ACDFND_NAME ('Security_class')) THEN
           ACTYPE = ACD_CODE
           CALL IFFAC (ACTYPE, CACVAL)
        ENDIF
C
C  data handling category
C
        DO 20 I = 1,4
           CACVAL(I) = ' '
20      CONTINUE
C
        DO 25 I = 1,2
        CACVAL(1) = ICHAR (DSHAND(I:I))
25      CONTINUE
C
        IF (.NOT.ACDFND_NAME ('Data_handling')) THEN
           ACTYPE = ACD_CODE
           CALL IFFAC (ACTYPE, CACVAL)
        ENDIF
C
C  portrayal
C
        IF (.NOT.ACDFND_NAME ('Portrayal')) THEN
           ACTYPE = ACD_CODE
           CALL IFFAC (ACTYPE, PORTRL)
        ENDIF
C
C  FACS code - prefix, main
C
        DO 30 I = 1,4
           CACVAL(I) = ' '
30      CONTINUE
C
        CACVAL(1) = ICHAR (FACSPR)
C
        IF (.NOT.ACDFND_NAME ('FACS_prefix')) THEN
           ACTYPE = ACD_CODE
           CALL IFFAC (ACTYPE, CACVAL)
        ENDIF
C
        DO 40 I = 1,4
           CACVAL(I) = ICHAR (FACS(I:I))
40      CONTINUE
C
        IF (.NOT.ACDFND_NAME ('FACS_code')) THEN
           ACTYPE = ACD_CODE
           CALL IFFAC (ACTYPE, CACVAL)
        ENDIF
C
C   FACS attribute fields 1 to 26
C
        DO 50 I = 1,9
C
        IF (HAD_ATTRB(I)) THEN
C
           ACTYPE = 1100 + I
           CALL IFFAC (ACTYPE, IATTRA(I))
C
        ENDIF
C
50      CONTINUE
C
        DO 60 I = 10,13
C
        IF (HAD_ATTRB(I)) THEN
C
           ACTYPE = 1100 + I
           CALL IFFAC (ACTYPE, RATTRA(I))
C
        ENDIF
C
60      CONTINUE
C
        DO 70 I = 14,22
C
        IF (HAD_ATTRB(I)) THEN
C
           ACTYPE = 1100 + I
           CALL IFFAC (ACTYPE, IATTRB(I))
C
        ENDIF
C
70      CONTINUE
C
        DO 80 I = 23,26
C
        IF (HAD_ATTRB(I)) THEN
C
           ACTYPE = 1100 + I
           CALL IFFAC (ACTYPE, RATTRB(I))
C
        ENDIF
C
80      CONTINUE
C
C  value attribute fields 1 to 2 (and 3 to 12)
C
        DO 90 I = 1,2
C
        IF (HAD_VATTRB(I)) THEN
C
           ACTYPE = 1200 + I
           CALL IFFAC (ACTYPE, VATTRB(I))
C
        ENDIF
C
90      CONTINUE
C
C  text attributes - value field contains rhe length of string
C
        IF (.NOT.ACDFND_NAME ('Text_attribute')) THEN
           ACTYPE = ACD_CODE
           CALL IFFAC (ACTYPE, 10, TATTR1, 10)
        ENDIF
C
        IF (.NOT.ACDFND_NAME ('Text_attribute')) THEN
           ACTYPE = ACD_CODE
           CALL IFFAC (ACTYPE, 10, TATTR2, 10)
        ENDIF
C
        IF (.NOT.ACDFND_NAME ('Text_attribute')) THEN
           ACTYPE = ACD_CODE
           CALL IFFAC (ACTYPE, 20, LTATTR, 20)
        ENDIF
C
        IF (HDRCNT.EQ.4) GOTO 999
C
        DO 100 I = 3,12
C
        IF (HAD_VATTRB(I)) THEN
C
           ACTYPE = 1200 + I
           CALL IFFAC (ACTYPE, VATTRB(I))
C
        ENDIF
C
100     CONTINUE
C
999     IF (DIAG) CALL WRITEF ('.Feature ACs completed')
C
	RETURN            ! and return with it all done
	END
C
