	SUBROUTINE ENDLAY (IN)
C
***	IDENT	03AU88
***	MODULE	ENDLAY
C
C	Copyright LaserScan Laboratories Ltd., Cambridge, England
C
C Author TJ Ibbs,        16 March 1983
C  modified for CEDD2I   JB 1 June 1988
C
C This routine, on just about to output an EO entry, goes back to the 
C   relevant NO entry and adds a pointer to the EO to it, and finally 
C   returns to where it started from and outputs the EO
C
        IMPLICIT NONE
C
        INTEGER*2        IN             ! layer to close
C
C common blocks
C
***     PARAMETER/HERE:CEDD2IMSG/
***     COMMON/HERE:PARAMS/
***     COMMON/HERE:DESCR/
***	COMMON/LSL$CMNIFF:IFFHAN/	! for LPOSE
C
C workspace...
C
	INTEGER*2	IELEN, IECODE
        INTEGER*2       NLWDS, NSTRT    ! no. , pos,n of words to
C                                       !               be written
C  **************************************************************
C  remember - LPOSE is the next position to be written 
C     (ie the posn of the last word written + 1)
C  firstly we reposition to the NO entry matching our soon-to-be EO
C
        IF (.NOT.INLAY(IN)) THEN
           CALL LSL_PUTMSG (CEDD2I__NOTINLAYER, IN)
           GOTO 999
        ENDIF
C
	CALL IFFPKE (IECODE, IELEN, LPOSNO(IN))
C
	IF (IECODE.NE.'NO') THEN                 ! found IECODE entry
           CALL LSL_PUTMSG (CEDD2I__NOREPOSERR, IECODE, IN, LPOSNO(IN))
           GOTO 999
        ELSEIF (IELEN.EQ.-1) THEN                ! unexpected IFF end
           CALL LSL_PUTMSG (CEDD2I__NOREPOSNEOF, LPOSNO(IN))
           GOTO 999
        ENDIF
C
C  otherwise, we have the entry safely in hand - add pointer
C  to where we shall write the EO entry
C
        NLWDS = 1
        NSTRT = 3
        CALL EIHWL (LPOSE, NLWDS, NSTRT)     ! write EO pos'n to the NO 
C
C  we can now safely write the EO entry, which will get written at
C   LPOSE quite naturally
C
999	IF (INLAY(IN)) CALL IFFEO
        INLAY(IN) = .FALSE.
C
        IF (DIAG) THEN
           CALL WRITEF
           CALL WRITEF ('.Layer %^W%N closed', IN)
           CALL WRITEF
        ENDIF
C
	RETURN
	END
C
