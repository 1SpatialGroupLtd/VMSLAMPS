C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1988-08-31 16:11:44.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL FUNCTION DSI_READ_STRING 
     &                      (LEN, DESTINATION, TITLE, TEST)
C
***	IDENT	31AU88
***	MODULE	DSI_READ_STRING
C
C	Copyright LaserScan Laboratories Ltd., Cambridge, England
C
C Author J Barber, 16 May 1988
C
C This function read a character string of length LEN
C
	IMPLICIT NONE
C
        INTEGER*2        LEN
        CHARACTER*(*)    DESTINATION
        CHARACTER*25     TITLE
        INTEGER          TEST              ! disable print with -1
C
***     PARAMETER/HERE:CEDD2IMSG/
***     COMMON/HERE:PARAMS/
***     COMMON/HERE:STATE/
C
C  a note about READSTR (using the local RDCH):
C  At present READSTR ignores trailing spaces in the 'length of string'
C  returned. As this return is the only way of telling whether RDCH has
C  stopped reading because of its 'end of line' termination ('DEL') it
C  is important to count the spaces to check that READSTR has read the 
C  requested no. of characters. This is done by forcing READSTR to 
C  "terminate" at 'DELETE' given in the argument list. Although RDCH 
C  will return TRUE ('end of line') before the term. char. is tested, 
C  trailing spaces will end up being counted as normal characters.
C
C  function
C
        INTEGER         READSTR         ! read text
C
C workspace
C
	INTEGER*2	PTR             ! locally saved pointer
        INTEGER*2       RESTRT          ! restart pointer
        INTEGER         CHRLEN,RETVAL   ! for READSTR
C
        BYTE            DELETE
        DATA            DELETE /Z7F/    ! Hex version of ASCII 'DEL'
C
C  ****************************************************************
C be optimistic initially
C
	DSI_READ_STRING = .TRUE.
        RDSTRERR = .FALSE.
C
        CALL DCPSAV (PTR)
C
        CALL SETWIN ( , LEN)
C
        CHRLEN = READSTR (DESTINATION,
     &                    DELETE, ,   ! stop ignoring trailing spaces
     &                    .FALSE.,    ! don't ignore leading spaces
     &                    RETVAL)
C
        IF (BLKERR.OR.DELFND) THEN
           DSI_READ_STRING = .FALSE.
           RDSTRERR = .TRUE.
           GOTO 999
        ELSEIF (CHRLEN.NE.LEN) THEN
           CALL LSL_PUTMSG (CEDD2I__DSILENERR, TITLE, PTR, CHRLEN)
           RDSTRERR = .TRUE.
        ELSEIF (.NOT.RETVAL) THEN
           CALL LSL_PUTMSG (CEDD2I__DSIRDCHERR, TITLE, PTR)
           CALL LSL_PUTMSG (RETVAL)
           RDSTRERR = .TRUE.
        ENDIF
C
        RESTRT = PTR + LEN
        IF (RESTRT.GT.1980) RESTRT = MOD (RESTRT, 1972)
        CALL SETWIN (RESTRT, )
C
        IF (FULL_DIAG .AND. TEST.NE.-1) CALL WRITEF 
     &                              ('.%S %S', TITLE, DESTINATION)
C
999	RETURN		                  ! return with it
	END
C
