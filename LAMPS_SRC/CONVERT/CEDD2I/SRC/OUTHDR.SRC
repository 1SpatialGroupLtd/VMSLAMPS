C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1988-07-29 12:59:16.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE OUTHDR (FULL)
C
***	IDENT	29JL88
***	MODULE	OUTHDR
C
C	Copyright LaserScan Laboratories Ltd., Cambridge, England
C
C Author TJ Ibbs, 15 March 1983
C Modified CC Brunt, 25 August 1983
C Modified J Barber, 14 April 1988 to create MD2
C Modified J Barber, 30 May 1988 for CEDD2I
C
C This subroutine outputs the information obtained from the header
C   DSI record into the IFF header entries.
C
	IMPLICIT NONE
C
        LOGICAL         FULL            ! proper IFF?
C
C common blocks...
C
***     COMMON/HERE:PARAMS/
***	COMMON/HERE:DESCR/		! for RANGE
***	COMMON/LSL$CMNIFF:IFFHAN/	! for LPOSE 
***     COMMON/LSL$CMNIFF:MHDEF/        ! default map header
***	COMMON/LSL$CMNIFF:MD2DES/	! for type 2map descriptor
***	COMMON/LSL$CMNLSL:EXPC/		! for EXPBUF, etc
C
C workspace...
C
	BYTE		DATBUF(10)	! to hold the date
	BYTE		TIMBUF(9)	! and the time
	INTEGER         I		! loop variable
	REAL		CFT(10,2)	! cubic coefficients
	REAL		CPTS(4,4)	! corner points
C
C  *********************************************************
        IF (FULL) LPOSRA = LPOSE        ! where to return for
C                                       !  final Range
	CALL IFFRA (RANGE)              ! for RAnge
        CALL IFFHI                      ! for HIstory entry
C
C   and output the map header next
C
        MHDESC(1) = 174
        MHDESC(2) = 0                   ! unset MH
        MHDESC(3) = 0
        MHDESC(4) = 0
C
	CALL IFFMH (MHARR, MHLEN)
C
C   set up the map descriptor
C
        MATV2 = 2                       ! MD type
C
C   output the map descriptor
C
	CALL IFFMD (MD2ARR, MD2LEN)
C
C   start with the New Section itself...
C
	CALL TIME(TIMBUF)
	TIMBUF(9) = 0
C
C  and the date
C
	CALL DATE(DATBUF)
	DATBUF(10) = 0
C
C lower-case 2nd and 3rd letters of month name
C
	DATBUF(5) = DATBUF(5)-'A'+'a'
	DATBUF(6) = DATBUF(6)-'A'+'a'
C
	CALL EXPAND ('Created by CEDD2I on %AZ at %AZ',
     &					  DATBUF, TIMBUF)
C
C and thus we have our New Section declaration
C
	CALL IFFNS (EXPBUF, EXPLEN)
C
C and now the cubic coefficients...
C
	DO 100 I = 1,10
	   CFT(I,1) = 0.0
	   CFT(I,2) = 0.0
100	CONTINUE
C
	CFT(2,1) = 1.0		! the sole non-zero elements
	CFT(3,2) = 1.0		! are set up
C
	CALL IFFCC (CFT)	! output the cubic coefficients
C
C lastly, we must output CP array -
C The corner points are thus:
C
C	the first variable is x,y for digitised, x,y for required
C	coordinates. In this case, we thus have these two identical
C
C	the second variable gives us which corner - in the standard
C	order NW, SW, SE, NE. We shall be boring and assign all of
C	these explicitly, because it's clearer what we're doing then
C
C Let us go through the first set of corner points
C
C 1st corner - NW corner of the map
C
	CPTS(1,1) = RANGE(1)		! X is X zero
	CPTS(2,1) = RANGE(4)		! Y is the Y extent
C
C 2nd corner - SW corner (origin) of the map
C
	CPTS(1,2) = RANGE(1)		! since it's the origin
	CPTS(2,2) = RANGE(3)		! these must be zero
C
C 3rd corner - SE corner of the map
C
	CPTS(1,3) = RANGE(2)		! X is the X extent
	CPTS(2,3) = RANGE(3)		! Y is Y zero
C
C 4th corner - NE corner of the map
C
	CPTS(1,4) = RANGE(2)		! X is the X extent
	CPTS(2,4) = RANGE(4)		! Y is the Y extent
C
C and we can copy this first set of corner point values into the
C second set...
C
	DO 200 I = 1,4			! loop round all corners
	   CPTS(3,I) = CPTS(1,I)	!    for X
	   CPTS(4,I) = CPTS(2,I)	!    and for Y
200	CONTINUE
C
C and now we can output it
C
        IF (FULL) LPOSCP = LPOSE        ! for final Range
	CALL IFFCP(CPTS)
C
        IF (DIAG) THEN
           CALL WRITEF ('.Header information output')
           CALL WRITEF
        ENDIF
C
999	RETURN				! and return with it all done
	END
C
