C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1988-09-02 20:49:38.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE LAYER0
C
***	IDENT	02SE88
***	MODULE	LAYER0
C
C       Copyright LaserScan Laboratories Ltd., Cambridge, England
C
C Author J Barber, 23 June 1988 
C
C This subroutine outputs any DSI info not directly translatable to
C   the MD2 entry, or used in the program, into layer 0 as the AC's
C   for a dummy area feature bounding the whole map
C
	IMPLICIT NONE
C
C common blocks...
C
***     PARAMETER/HERE:CEDD2IMSG/
***	COMMON/LSL$CMNIFF:IFFHAN/	! for   LPOSE
***     COMMON/LSL$CMNFRT:FRTACD/
***     COMMON/HERE:SCRIPT/
***     COMMON/HERE:PARAMS/
***     COMMON/HERE:DESCR/
C
C  functions
C
        LOGICAL         ACDFND_NAME
C
C workspace...
C
        INTEGER*2       I
        INTEGER*2       ACTYPE
        INTEGER*2       ENCL_FSN
	INTEGER*2	ZERO
        INTEGER*2       NPTS
        INTEGER*2       ISTAT(4)
        DATA            ISTAT /0,0,0,0/
C
        REAL            STBUF(2,4)
C
        BYTE            CACVAL(20)       ! byte version of char string
C
C ***************************************************************
        IF (DIAG) THEN
           CALL WRITEF
     & ('.Outputting DSI information to area feature ACs in layer 0')
           CALL WRITEF
        ENDIF
C
        ENCL_FSN = 1
	ZERO = 0
        CALL IFFNF (ENCL_FSN, ZERO)     ! FSN = 1
        INFTR = .TRUE.
        ISNSUM = ZERO                   ! total no. of features
C
        ISTAT(1) = AREA0                ! area FC of whole map
        CALL IFFFS (ISTAT)
C
        DO 10 I = 1,5
        CACVAL(I) = ICHAR (PRODCT(I:I))
10      CONTINUE
C
C  series designator/product
C
        IF (.NOT.ACDFND_NAME ('Product_type')) THEN
           ACTYPE = ACD_CODE
           CALL IFFAC (ACTYPE, 5, CACVAL, 5)
        ENDIF
C
C  reference ID
C
        DO 20 I = 1,20
        CACVAL(I) = ICHAR (REFNCE(I:I))
20      CONTINUE
C
        IF (.NOT.ACDFND_NAME ('Dataset_ID')) THEN
           ACTYPE = ACD_CODE
           CALL IFFAC (ACTYPE, 20, CACVAL, 20)
        ENDIF
C
        IF (.NOT.ACDFND_NAME ('Edition_no')) THEN
           ACTYPE = ACD_CODE
           CALL IFFAC (ACTYPE, EDNNUM)
        ENDIF
C
C  compilation date
C
        IF (.NOT.ACDFND_NAME ('Compilation_date')) THEN
           ACTYPE = ACD_CODE
           CALL IFFAC (ACTYPE, CMPDAT)
        ENDIF
C
C  revision date
C
        IF (.NOT.ACDFND_NAME ('Revision_date')) THEN
           ACTYPE = ACD_CODE
           CALL IFFAC (ACTYPE, REVDAT)
        ENDIF
C
C  IHO format date
C
        IF (.NOT.ACDFND_NAME ('IHO_Format_date')) THEN
           ACTYPE = ACD_CODE
           CALL IFFAC (ACTYPE, IHODAT)
        ENDIF
C
C  FACS format date
C
        IF (.NOT.ACDFND_NAME ('FACS_Format_date')) THEN
           ACTYPE = ACD_CODE
           CALL IFFAC (ACTYPE, FACDAT)
        ENDIF
C
C  map data type
C
        DO 30 I = 1,4
        CACVAL(I) = ' '
30      CONTINUE
C
        DO 35 I = 1,3
        CACVAL(I) = ICHAR (MAPTYP(I:I))
35      CONTINUE
C
        IF (.NOT.ACDFND_NAME ('Data_type')) THEN
           ACTYPE = ACD_CODE
           CALL IFFAC (ACTYPE, CACVAL)
        ENDIF
C
C  horiz units
C
        DO 40 I = 1,4
        CACVAL(I) = ' '
40      CONTINUE
C
        DO 45 I = 1,3
        CACVAL(I) = ICHAR (XUNITS(I:I))
45      CONTINUE
C
        IF (.NOT.ACDFND_NAME ('Horiz_units')) THEN
           ACTYPE = ACD_CODE
           CALL IFFAC (ACTYPE, CACVAL)
        ENDIF
C
C  horiz resolution
C
        IF (.NOT.ACDFND_NAME ('Horiz_resn')) THEN
           ACTYPE = ACD_CODE
           CALL IFFAC (ACTYPE, XNUMBR)
        ENDIF
C
C  geodetic datum
C
        DO 50 I = 1,4
        CACVAL(I) = ' '
50      CONTINUE
C
        DO 55 I = 1,3
        CACVAL(I) = ICHAR (GEODTM(I:I))
55      CONTINUE
C
        IF (.NOT.ACDFND_NAME ('Geodetic_datum')) THEN
           ACTYPE = ACD_CODE
           CALL IFFAC (ACTYPE, CACVAL)
        ENDIF
C
C  ellipsoid/spheroid
C
        DO 60 I = 1,4
        CACVAL(I) = ' '
60      CONTINUE
C
        DO 65 I = 1,3
        CACVAL(I) = ICHAR (ELLIPS(I:I))
65      CONTINUE
C
        IF (.NOT.ACDFND_NAME ('Ellipsoid')) THEN
           ACTYPE = ACD_CODE
           CALL IFFAC (ACTYPE, CACVAL)
        ENDIF
C
C  vert units
C
        DO 70 I = 1,4
        CACVAL(I) = ' '
70      CONTINUE
C
        DO 75 I = 1,3
        CACVAL(I) = ICHAR (ZUNITS(I:I))
75      CONTINUE
C
        IF (.NOT.ACDFND_NAME ('Vert_units')) THEN
           ACTYPE = ACD_CODE
           CALL IFFAC (ACTYPE, CACVAL)
        ENDIF
C
C  vert resolution
C
        IF (.NOT.ACDFND_NAME ('Vert_resn')) THEN
           ACTYPE = ACD_CODE
           CALL IFFAC (ACTYPE, ZNUMBR)
        ENDIF
C
C  vert reference code
C
        DO 80 I = 1,4
        CACVAL(I) = ICHAR (VREF(I:I))
80      CONTINUE
C
        IF (.NOT.ACDFND_NAME ('Vert_ref_code')) THEN
           ACTYPE = ACD_CODE
           CALL IFFAC (ACTYPE, CACVAL)
        ENDIF
C
C  sounding datum
C
        DO 90 I = 1,4
        CACVAL(I) = ICHAR (SNDDTM(I:I))
90      CONTINUE
C
        IF (.NOT.ACDFND_NAME ('Sounding_datum')) THEN
           ACTYPE = ACD_CODE
           CALL IFFAC (ACTYPE, CACVAL)
        ENDIF
C
C  false origins
C
        IF (.NOT.ACDFND_NAME ('X_false_origin')) THEN
           ACTYPE = ACD_CODE
           CALL IFFAC (ACTYPE, ORIGIN(1))
        ENDIF
C
        IF (.NOT.ACDFND_NAME ('Y_false_origin')) THEN
           ACTYPE = ACD_CODE
           CALL IFFAC (ACTYPE, ORIGIN(2))
        ENDIF
C
        IF (.NOT.ACDFND_NAME ('Z_false_origin')) THEN
           ACTYPE = ACD_CODE
           CALL IFFAC (ACTYPE, ORIGIN(3))
        ENDIF
C
C   projection code
C
        DO 100 I = 1,4
        CACVAL(I) = ' '
100     CONTINUE
C
        DO 105 I = 1,2
        CACVAL(I) = ICHAR (PROJN(I:I))
105     CONTINUE
C
        IF (.NOT.ACDFND_NAME ('Projection')) THEN
           ACTYPE = ACD_CODE
           CALL IFFAC (ACTYPE, CACVAL)
        ENDIF
C
C  projection parameters
C
        DO 91 I = 1,10
        CACVAL(I) = ICHAR (PRJPAR(1)(I:I))
91      CONTINUE
C
        IF (.NOT.ACDFND_NAME ('Projn_parameter_A')) THEN
           ACTYPE = ACD_CODE
           CALL IFFAC (ACTYPE, 10, CACVAL, 10)
        ENDIF
C
        DO 92 I = 1,10
        CACVAL(I) = ICHAR (PRJPAR(2)(I:I))
92      CONTINUE
C
        IF (.NOT.ACDFND_NAME ('Projn_parameter_B')) THEN
           ACTYPE = ACD_CODE
           CALL IFFAC (ACTYPE, 10, CACVAL, 10)
        ENDIF
C
        DO 93 I = 1,10
        CACVAL(I) = ICHAR (PRJPAR(3)(I:I))
93      CONTINUE
C
        IF (.NOT.ACDFND_NAME ('Projn_parameter_C')) THEN
           ACTYPE = ACD_CODE
           CALL IFFAC (ACTYPE, 10, CACVAL, 10)
        ENDIF
C
        DO 94 I = 1,10
        CACVAL(I) = ICHAR (PRJPAR(4)(I:I))
94      CONTINUE
C
        IF (.NOT.ACDFND_NAME ('Projn_parameter_D')) THEN
           ACTYPE = ACD_CODE
           CALL IFFAC (ACTYPE, 10, CACVAL, 10)
        ENDIF
C
C  recompilation count
C
        IF (.NOT.ACDFND_NAME ('Compn_count')) THEN
           ACTYPE = ACD_CODE
           CALL IFFAC (ACTYPE, CMPCNT)
        ENDIF
C
C  revision count
C
        IF (.NOT.ACDFND_NAME ('Revn_count')) THEN
           ACTYPE = ACD_CODE
           CALL IFFAC (ACTYPE, REVCNT)
        ENDIF
C
C  producer spec stock number
C
        DO 110 I = 1,15
        CACVAL(I) = ICHAR (PSSNUM(I:I))
110     CONTINUE
C
        IF (.NOT.ACDFND_NAME ('Product_spec')) THEN
           ACTYPE = ACD_CODE
           CALL IFFAC (ACTYPE, 15, CACVAL, 15)
        ENDIF
C
C  product spec stock date
C
        IF (.NOT.ACDFND_NAME ('Product_spec_date')) THEN
           ACTYPE = ACD_CODE
           CALL IFFAC (ACTYPE, PSSDAT)
        ENDIF
C
C  spec change number
C
        IF (.NOT.ACDFND_NAME ('Spec_change_number')) THEN
           ACTYPE = ACD_CODE
           CALL IFFAC (ACTYPE, PSCHNO)
        ENDIF
C
C  producer - country
C
        DO 120 I = 1,4
        CACVAL(I) = ' '
120     CONTINUE
C
        DO 125 I = 1,2
        CACVAL(I) = ICHAR (PRODCR(I:I))
125     CONTINUE
C
        IF (.NOT.ACDFND_NAME ('Country')) THEN
           ACTYPE = ACD_CODE
           CALL IFFAC (ACTYPE, CACVAL)
        ENDIF
C
C  producer - agency
C
        DO 130 I = 1,4
        CACVAL(I) = ' '
130     CONTINUE
C
        DO 135 I = 3,5
        CACVAL(I-2) = ICHAR (PRODCR(I:I))
135     CONTINUE
C
        IF (.NOT.ACDFND_NAME ('Agency')) THEN
           ACTYPE = ACD_CODE
           CALL IFFAC (ACTYPE, CACVAL)
        ENDIF
C
C  producer - branch
C
        DO 140 I = 1,4
        CACVAL(I) = ' '
140     CONTINUE
C
        DO 145 I = 6,8
        CACVAL(I-5) = ICHAR (PRODCR(I:I))
145     CONTINUE
C
        IF (.NOT.ACDFND_NAME ('Branch')) THEN
           ACTYPE = ACD_CODE
           CALL IFFAC (ACTYPE, CACVAL)
        ENDIF
C
C  digitising system
C
        DO 150 I = 1,10
        CACVAL(I) = ICHAR (DIGSYS(I:I))
150     CONTINUE
C
        IF (.NOT.ACDFND_NAME ('Dig_system')) THEN
           ACTYPE = ACD_CODE
           CALL IFFAC (ACTYPE, 10, CACVAL, 10)
        ENDIF
C
C  processing system
C
        DO 160 I = 1,10
        CACVAL(I) = ICHAR (PROSYS(I:I))
160     CONTINUE
C
        IF (.NOT.ACDFND_NAME ('Proc_system')) THEN
           ACTYPE = ACD_CODE
           CALL IFFAC (ACTYPE, 10, CACVAL, 10)
        ENDIF
C
C  grid code
C
        DO 170 I = 1,4
        CACVAL(I) = ' '
170     CONTINUE
C
        DO 175 I = 1,2
        CACVAL(I) = ICHAR (GRIDCD(I:I))
175     CONTINUE
C
        IF (.NOT.ACDFND_NAME ('Grid_code')) THEN
           ACTYPE = ACD_CODE
           CALL IFFAC (ACTYPE, CACVAL)
        ENDIF
C
C  accuracies
C
        IF (.NOT.ACDFND_NAME ('Abs_horiz_acc')) THEN
           ACTYPE = ACD_CODE
           CALL IFFAC (ACTYPE, MHAHAC)
        ENDIF
C
        IF (.NOT.ACDFND_NAME ('Abs_vert_acc')) THEN
           ACTYPE = ACD_CODE
           CALL IFFAC (ACTYPE, MHAVAC)
        ENDIF
C
        IF (.NOT.ACDFND_NAME ('Rel_horiz_acc')) THEN
           ACTYPE = ACD_CODE
           CALL IFFAC (ACTYPE, MHRHAC)
        ENDIF
C
        IF (.NOT.ACDFND_NAME ('Rel_vert_acc')) THEN
           ACTYPE = ACD_CODE
           CALL IFFAC (ACTYPE, MHRVAC)
        ENDIF
C
        IF (.NOT.ACDFND_NAME ('Height_acc')) THEN
           ACTYPE = ACD_CODE
           CALL IFFAC (ACTYPE, MHVHAC)
        ENDIF
C
C  data generalisation
C
        IF (.NOT.ACDFND_NAME ('Data_gen')) THEN
           ACTYPE = ACD_CODE
           CALL IFFAC (ACTYPE, DATGEN)
        ENDIF
C
C  match/merge numbers
C
        IF (.NOT.ACDFND_NAME ('N_mm_number')) THEN
           ACTYPE = ACD_CODE
           CALL IFFAC (ACTYPE, MMVNUM(1))
        ENDIF
C
        IF (.NOT.ACDFND_NAME ('E_mm_number')) THEN
           ACTYPE = ACD_CODE
           CALL IFFAC (ACTYPE, MMVNUM(2))
        ENDIF
C
        IF (.NOT.ACDFND_NAME ('S_mm_number')) THEN
           ACTYPE = ACD_CODE
           CALL IFFAC (ACTYPE, MMVNUM(3))
        ENDIF
C
        IF (.NOT.ACDFND_NAME ('W_mm_number')) THEN
           ACTYPE = ACD_CODE
           CALL IFFAC (ACTYPE, MMVNUM(4))
        ENDIF
C
C  match/merge dates
C
        IF (.NOT.ACDFND_NAME ('N_mm_date')) THEN
           ACTYPE = ACD_CODE
           CALL IFFAC (ACTYPE, MMDATE(1))
        ENDIF
C
        IF (.NOT.ACDFND_NAME ('E_mm_date')) THEN
           ACTYPE = ACD_CODE
           CALL IFFAC (ACTYPE, MMDATE(2))
        ENDIF
C
        IF (.NOT.ACDFND_NAME ('S_mm_date')) THEN
           ACTYPE = ACD_CODE
           CALL IFFAC (ACTYPE, MMDATE(3))
        ENDIF
C
        IF (.NOT.ACDFND_NAME ('W_mm_date')) THEN
           ACTYPE = ACD_CODE
           CALL IFFAC (ACTYPE, MMDATE(4))
        ENDIF
C
C  earliest date
C
        IF (.NOT.ACDFND_NAME ('Earliest_source_date')) THEN
           ACTYPE = ACD_CODE
           CALL IFFAC (ACTYPE, ESRCDT)
        ENDIF
C
C  latest date
C
        IF (.NOT.ACDFND_NAME ('Latest_source_date')) THEN
           ACTYPE = ACD_CODE
           CALL IFFAC (ACTYPE, LSRCDT)
        ENDIF
C
C  data collection code/criteria
C
        IF (.NOT.ACDFND_NAME ('Data_colln_code')) THEN
           ACTYPE = ACD_CODE
           CALL IFFAC (ACTYPE, DCCODE)
        ENDIF
C
        IF (.NOT.ACDFND_NAME ('Data_colln_crit')) THEN
           ACTYPE = ACD_CODE
           CALL IFFAC (ACTYPE, DCCRIT)
        ENDIF
C
C  now the coordinates for the enclosing feature
C
        ZERO = 0
        CALL IFFTH (ZERO)
C
        STBUF(1,1) = RANGE(1)
        STBUF(2,1) = RANGE(3)
        STBUF(1,2) = RANGE(1)
        STBUF(2,2) = RANGE(4)
C
        STBUF(1,3) = RANGE(2)
        STBUF(2,3) = RANGE(4)
        STBUF(1,4) = RANGE(2)
        STBUF(2,4) = RANGE(3)
C
        LPOSST = LPOSE                  ! for final Range
C
        NPTS = 4
        ZERO = 0
        CALL IFFST (STBUF, NPTS, ZERO)
C
        CALL IFFEF
        INFTR = .FALSE.
C
        IF (DIAG) THEN
           CALL WRITEF ('.Feature %^W%N in layer 0 completed', ISNSUM)
           CALL WRITEF
        ENDIF
C
999	RETURN				! and return with it all done
	END
C
