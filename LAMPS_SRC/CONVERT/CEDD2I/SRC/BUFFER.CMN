C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1988-09-11 18:28:56.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
C
C this common block holds the information obtained from a CEDD magtape, 
C or disc copy file, and is composed of a string of ASCII characters
C
C the length of the buffer is:
C
        INTEGER         INLEN               ! for tape file
        INTEGER         LONG_INLEN
        INTEGER         MAX_INLEN
        INTEGER*2       BUFLEN              ! for disc file
C
	PARAMETER	(INLEN  = 1980)
        PARAMETER       (LONG_INLEN = 1984)
        PARAMETER       (MAX_INLEN = 2048)
        PARAMETER       (BUFLEN = 1980)
C
C  read from the magtape or disc into a byte buffer...
C     BYTBUF will contain the 1980 byte logical data record
C     MAX_BYTBUF contains the max allowable blocksize, which may 
C     include a 4 byte record control word from a tape created 
C     non-FOREIGN
C
	BYTE		BYTBUF (INLEN)
        BYTE            MAX_BYTBUF (MAX_INLEN)
C
        EQUIVALENCE     (BYTBUF(1), MAX_BYTBUF(1))
C
        INTEGER         IN4LEN
        PARAMETER       (IN4LEN = 495)
        INTEGER         INTBUF (IN4LEN)
C
        EQUIVALENCE     (BYTBUF(1), INTBUF(1))
C
C and we have a fill counter, which records how many bytes we read
C
        INTEGER*2       BUFCNT        ! for disc file
	INTEGER         BYTCNT        ! for tape file
C
C and we have a common block for all of this:
C
	COMMON /BUFFER/ MAX_BYTBUF, BYTCNT, BUFCNT
C
