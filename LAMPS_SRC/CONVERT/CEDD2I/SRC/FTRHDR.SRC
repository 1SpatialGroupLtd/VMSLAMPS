	LOGICAL FUNCTION FTRHDR 
C
***	IDENT	08SE88
***	MODULE	FTRHDR
C
C	Copyright LaserScan Laboratories Ltd., Cambridge, England
C
C Author J Barber, 15 June 1988
C
C This subroutine reads the feature headers of each feature,
C   each consisting of 40 chars
C
C At any stage the feature header reading may encounter a record/
C   block boundary, hence the MOD(1972) checking
C
C Returns TRUE for success, FALSE for unexpected end of record
C   (end of blocks not at HDRCNT*40)
C
	IMPLICIT NONE
C
***     PARAMETER/HERE:CEDD2IMSG/
***	COMMON/HERE:PARAMS/	        ! for DIAG
***     COMMON/HERE:STATE/
***     COMMON/HERE:DESCR/              ! for HDRCNT
***     COMMON/HERE:FTRHED/
C
C functions called
C
        INTEGER         READSTR         ! read text
        LOGICAL         RDLONG          ! read numbers
        LOGICAL         RDREAL
        LOGICAL         CVTDAY          ! convert DDMMYY to date
C
C workspace
C
	INTEGER*2	DCP1            ! decode pointer save
	INTEGER*2	PTR		! locally saved pointer
        INTEGER*2       RESTRT
        INTEGER*2       I               ! loop counter
        INTEGER         CHRLEN,RETVAL   ! for READSTR
        INTEGER         CHKSUM
C
        CHARACTER*1     RESCHR
	CHARACTER*25	TITLE		! for DIAG
        CHARACTER*10    TEXT(2)
        CHARACTER*20    LTEXT
        CHARACTER*40    EXTEXT          ! extra text, if any
C
        BYTE            DELETE
        DATA            DELETE /Z7F/    ! Hex version of ASCII 'DEL'
C
C  ****************************************************************
C be optimistic initially
C
	FTRHDR = .TRUE.
C
        CALL DCPSAV (DCP1)
C
C  first the code for source used for dataset collection
C
	CALL SETWIN ( , 2)	
C
	TITLE = 'Source Code'
C
        SOURCE = 0
	IF (RDLONG (SOURCE)) THEN
           IF (DELFND.OR.BLKERR) THEN
              CALL LSL_PUTMSG (CEDD2I__UNEXPEND, TITLE, DCP1)
              FTRHDR = .FALSE.
              GOTO 999
           ENDIF
C unable to read field in HDR block; outputting 0
   	   IF (DIAG) CALL LSL_PUTMSG (CEDD2I__FEAPUT0, TITLE, DCP1)
	   SOURCE = 0
	ENDIF
C
        RESTRT = DCP1+2
        IF (RESTRT.GT.1980) RESTRT = MOD (RESTRT, 1972)
        CALL SETWIN (RESTRT, )
C
	IF (FULL_DIAG) CALL WRITEF('.%S %N', TITLE, SOURCE)
C
C  source scale reciprocal
C
	CALL DCPSAV (PTR)
        CHKSUM = DCP1+2
        IF (PTR.NE.CHKSUM .AND. PTR.NE.CHKSUM-1972) THEN
           FTRHDR = .FALSE.
           CALL LSL_PUTMSG (CEDD2I__FEACNTERR, TITLE, PTR)
           GOTO 999
        ENDIF
	CALL SETWIN ( , 8)	
C
	TITLE = 'Source Scale Reciprocal'
C
        RECIPR = 0
	IF (RDLONG (RECIPR)) THEN
           IF (DELFND.OR.BLKERR) THEN
              CALL LSL_PUTMSG (CEDD2I__UNEXPEND, TITLE, PTR)
              FTRHDR = .FALSE.
              GOTO 999
           ENDIF
C unable to read field in HDR block; outputting zero
   	   IF (DIAG) CALL LSL_PUTMSG (CEDD2I__FEAPUT0, TITLE, PTR)
	   RECIPR = 0
	ENDIF
C
        RESTRT = PTR+8
        IF (RESTRT.GT.1980) RESTRT = MOD (RESTRT, 1972)
        CALL SETWIN (RESTRT, )
C
	IF (FULL_DIAG) CALL WRITEF('.%S %N', TITLE, RECIPR)
C
	CALL DCPSAV (PTR)
        CHKSUM = DCP1+10
        IF (PTR.NE.CHKSUM .AND. PTR.NE.CHKSUM-1972) THEN
           CALL LSL_PUTMSG (CEDD2I__FEACNTERR, TITLE, PTR)
           FTRHDR = .FALSE.
           GOTO 999
        ENDIF
C
	TITLE = 'Source Date'
C
        SRCDAT = 0
        IF (.NOT.CVTDAY (.TRUE., SRCDAT, TITLE)) THEN
           IF (DELFND.OR.BLKERR) THEN
              CALL LSL_PUTMSG (CEDD2I__UNEXPEND, TITLE, PTR)
              FTRHDR = .FALSE.
              GOTO 999
           ENDIF
        ENDIF
C
C  collection system code
C
	CALL DCPSAV (PTR)
        CHKSUM = DCP1+16
        IF (PTR.NE.CHKSUM .AND. PTR.NE.CHKSUM-1972) THEN
           CALL LSL_PUTMSG (CEDD2I__FEACNTERR, TITLE, PTR)
           FTRHDR = .FALSE.
           GOTO 999
        ENDIF
	CALL SETWIN ( , 2)	
C
	TITLE = 'Collection System'
C
        COLSYS = 0
	IF (RDLONG (COLSYS)) THEN
           IF (DELFND.OR.BLKERR) THEN
              CALL LSL_PUTMSG (CEDD2I__UNEXPEND, TITLE, PTR)
              FTRHDR = .FALSE.
              GOTO 999
           ENDIF
C unable to read field in HDR block; outputting zero
   	   IF (DIAG) CALL LSL_PUTMSG (CEDD2I__FEAPUT0, TITLE, PTR)
	   COLSYS = 0
	ENDIF
C
        RESTRT = PTR+2
        IF (RESTRT.GT.1980) RESTRT = MOD (RESTRT, 1972)
        CALL SETWIN (RESTRT, )
C
	IF (FULL_DIAG) CALL WRITEF('.%S %N', TITLE, COLSYS)
C
C   maintenance date
C
	CALL DCPSAV (PTR)
        CHKSUM = DCP1+18
        IF (PTR.NE.CHKSUM .AND. PTR.NE.CHKSUM-1972) THEN
           CALL LSL_PUTMSG (CEDD2I__FEACNTERR, TITLE, PTR)
           FTRHDR = .FALSE.
           GOTO 999
        ENDIF
C
	TITLE = 'Maintenance Date'
C
        MNTDAT = 0
        IF (.NOT.CVTDAY (.TRUE., MNTDAT, TITLE)) THEN
           IF (DELFND.OR.BLKERR) THEN
              CALL LSL_PUTMSG (CEDD2I__UNEXPEND, TITLE, PTR)
              FTRHDR = .FALSE.
              GOTO 999
           ENDIF
        ENDIF
C
C  horiz accuracy (metres/10)
C
	CALL DCPSAV (PTR)
        CHKSUM = DCP1+24
        IF (PTR.NE.CHKSUM .AND. PTR.NE.CHKSUM-1972) THEN
           CALL LSL_PUTMSG (CEDD2I__FEACNTERR, TITLE, PTR)
           FTRHDR = .FALSE.
           GOTO 999
        ENDIF
	CALL SETWIN ( , 4)	
C
	TITLE = 'Horizontal Accuracy'
C
        FTRHAC = 0
	IF (RDLONG (FTRHAC)) THEN
           IF (DELFND.OR.BLKERR) THEN
              CALL LSL_PUTMSG (CEDD2I__UNEXPEND, TITLE, PTR)
              FTRHDR = .FALSE.
              GOTO 999
           ENDIF
C unable to read field in HDR block; outputting zero
   	   IF (DIAG) CALL LSL_PUTMSG (CEDD2I__FEAPUT0, TITLE, PTR)
	   FTRHAC = 0
	ENDIF
C
        RESTRT = PTR+4
        IF (RESTRT.GT.1980) RESTRT = MOD (RESTRT, 1972)
        CALL SETWIN (RESTRT, )
C
	IF (FULL_DIAG) CALL WRITEF ('.%S %N', TITLE, FTRHAC)
C
C  vert accuracy (metres/10)
C
	CALL DCPSAV (PTR)
        CHKSUM = DCP1+28
        IF (PTR.NE.CHKSUM .AND. PTR.NE.CHKSUM-1972) THEN
           CALL LSL_PUTMSG (CEDD2I__FEACNTERR, TITLE, PTR)
           FTRHDR = .FALSE.
           GOTO 999
        ENDIF
	CALL SETWIN ( , 4)	
C
	TITLE = 'Vertical Accuracy'
C
        FTRVAC = 0
	IF (RDLONG (FTRVAC)) THEN
           IF (DELFND.OR.BLKERR) THEN
              CALL LSL_PUTMSG (CEDD2I__UNEXPEND, TITLE, PTR)
              FTRHDR = .FALSE.
              GOTO 999
           ENDIF
C unable to read field in HDR block; outputting zero
   	   IF (DIAG) CALL LSL_PUTMSG (CEDD2I__FEAPUT0, TITLE, PTR)
	   FTRVAC = 0
	ENDIF
C
        RESTRT = PTR+4
        IF (RESTRT.GT.1980) RESTRT = MOD (RESTRT, 1972)
        CALL SETWIN (RESTRT, )
C
	IF (FULL_DIAG) CALL WRITEF('.%S %N', TITLE, FTRVAC)
C
C  base product code
C
	CALL DCPSAV (PTR)
        CHKSUM = DCP1+32
        IF (PTR.NE.CHKSUM .AND. PTR.NE.CHKSUM-1972) THEN
           CALL LSL_PUTMSG (CEDD2I__FEACNTERR, TITLE, PTR)
           FTRHDR = .FALSE.
           GOTO 999
        ENDIF
	CALL SETWIN ( , 3)	
C
	TITLE = 'Base Product'
C
        BASPRD = 0
	IF (RDLONG (BASPRD)) THEN
           IF (DELFND.OR.BLKERR) THEN
              CALL LSL_PUTMSG (CEDD2I__UNEXPEND, TITLE, PTR)
              FTRHDR = .FALSE.
              GOTO 999
           ENDIF
C unable to read field in HDR block; outputting zero
   	   IF (DIAG) CALL LSL_PUTMSG (CEDD2I__FEAPUT0, TITLE, PTR)
	   BASPRD = 0
	ENDIF
C
        RESTRT = PTR+3
        IF (RESTRT.GT.1980) RESTRT = MOD (RESTRT, 1972)
        CALL SETWIN (RESTRT, )
C
	IF (FULL_DIAG) CALL WRITEF('.%S %N', TITLE, BASPRD)
C
C  security classification - T, S, C, R, U
C
	CALL DCPSAV (PTR)
        CHKSUM = DCP1+35
        IF (PTR.NE.CHKSUM .AND. PTR.NE.CHKSUM-1972) THEN
           CALL LSL_PUTMSG (CEDD2I__FEACNTERR, TITLE, PTR)
           FTRHDR = .FALSE.
           GOTO 999
        ENDIF
	CALL SETWIN ( , 1)
C
	TITLE = 'Security'
C
        SECRTY = ' '
        CHRLEN = READSTR (SECRTY, DELETE, , .FALSE., RETVAL)
C
        IF (DELFND.OR.BLKERR) THEN
           CALL LSL_PUTMSG (CEDD2I__UNEXPEND, TITLE, PTR)
           FTRHDR = .FALSE.
           GOTO 999
        ELSEIF (CHRLEN.LT.1) THEN
           CALL LSL_PUTMSG (CEDD2I__FEALENERR, TITLE, PTR, CHRLEN)
           RESTRT = PTR+1
           IF (RESTRT.GT.1980) RESTRT = MOD (RESTRT, 1972)
	   CALL SETWIN (RESTRT, )
        ELSEIF (.NOT.RETVAL) THEN
           CALL LSL_PUTMSG (CEDD2I__FEARDCHERR, TITLE, PTR)
           CALL LSL_PUTMSG (RETVAL)
           RESTRT = PTR+1
           IF (RESTRT.GT.1980) RESTRT = MOD (RESTRT, 1972)
	   CALL SETWIN (RESTRT, )
        ENDIF
C
	IF (FULL_DIAG) CALL WRITEF('.%S %S', TITLE, SECRTY)
C
C  data handling category
C
	CALL DCPSAV (PTR)
        CHKSUM = DCP1+36
        IF (PTR.NE.CHKSUM .AND. PTR.NE.CHKSUM-1972) THEN
           CALL LSL_PUTMSG (CEDD2I__FEACNTERR, TITLE, PTR)
           FTRHDR = .FALSE.
           GOTO 999
        ENDIF
	CALL SETWIN ( , 2)	
C
	TITLE = 'Data Handling'
C
        DSHAND = '  '
        CHRLEN = READSTR (DSHAND, DELETE, , .FALSE., RETVAL)
C
        IF (DELFND.OR.BLKERR) THEN
           CALL LSL_PUTMSG (CEDD2I__UNEXPEND, TITLE, PTR)
           FTRHDR = .FALSE.
           GOTO 999
        ELSEIF (CHRLEN.LT.2) THEN
           CALL LSL_PUTMSG (CEDD2I__FEALENERR, TITLE, PTR, CHRLEN)
           RESTRT = PTR+2
           IF (RESTRT.GT.1980) RESTRT = MOD (RESTRT, 1972)
	   CALL SETWIN (RESTRT, )
        ELSEIF (.NOT.RETVAL) THEN
           CALL LSL_PUTMSG (CEDD2I__FEARDCHERR, TITLE, PTR)
           CALL LSL_PUTMSG (RETVAL)
           RESTRT = PTR+2
           IF (RESTRT.GT.1980) RESTRT = MOD (RESTRT, 1972)
	   CALL SETWIN (RESTRT, )
        ENDIF
C
	IF (FULL_DIAG) CALL WRITEF('.%S %S', TITLE, DSHAND)
C
C  portrayal
C
	CALL DCPSAV (PTR)
        CHKSUM = DCP1+38
        IF (PTR.NE.CHKSUM .AND. PTR.NE.CHKSUM-1972) THEN
           CALL LSL_PUTMSG (CEDD2I__FEACNTERR, TITLE, PTR)
           FTRHDR = .FALSE.
           GOTO 999
        ENDIF
	CALL SETWIN ( , 2)	
C
	TITLE = 'Portrayal'
C
        PORTRL = 0
	IF (RDLONG (PORTRL)) THEN
           IF (DELFND.OR.BLKERR) THEN
              CALL LSL_PUTMSG (CEDD2I__UNEXPEND, TITLE, PTR)
              FTRHDR = .FALSE.
              GOTO 999
           ENDIF
C unable to read field in HDR block; outputting zero
   	   IF (DIAG) CALL LSL_PUTMSG (CEDD2I__FEAPUT0, TITLE, PTR)
	   PORTRL = 0
	ENDIF
C
        RESTRT = PTR+2
        IF (RESTRT.GT.1980) RESTRT = MOD (RESTRT, 1972)
        CALL SETWIN (RESTRT, )
C
	IF (FULL_DIAG) CALL WRITEF('.%S %N', TITLE, PORTRL)
C
        IF (HDRCNT.EQ.1) GOTO 999
C
C   second  block of 40 chars
C
C   the FACS code in 2 parts - prefix, and code
C
	CALL DCPSAV (PTR)
        CHKSUM = DCP1+40
        IF (PTR.NE.CHKSUM .AND. PTR.NE.CHKSUM-1972) THEN
           CALL LSL_PUTMSG (CEDD2I__FEACNTERR, TITLE, PTR)
           FTRHDR = .FALSE.
           GOTO 999
        ENDIF
        CALL SETWIN ( , 1)
C
	TITLE = 'FACS Prefix'
C
        FACSOK = .FALSE.                   ! till proved otherwise
C
        FACSPR = ' '
        CHRLEN = READSTR (FACSPR, DELETE, , .FALSE., RETVAL)
C
        IF (DELFND.OR.BLKERR) THEN
           CALL LSL_PUTMSG (CEDD2I__UNEXPEND, TITLE, PTR)
           FTRHDR = .FALSE.
           GOTO 999
        ELSEIF (CHRLEN.LT.1) THEN
           CALL LSL_PUTMSG (CEDD2I__FEALENERR, TITLE, PTR, CHRLEN)
           RESTRT = PTR+1
           IF (RESTRT.GT.1980) RESTRT = MOD (RESTRT, 1972)
	   CALL SETWIN (RESTRT, )
        ELSEIF (.NOT.RETVAL) THEN
           CALL LSL_PUTMSG (CEDD2I__FEARDCHERR, TITLE, PTR)
           CALL LSL_PUTMSG (RETVAL)
           RESTRT = PTR+1
           IF (RESTRT.GT.1980) RESTRT = MOD (RESTRT, 1972)
	   CALL SETWIN (RESTRT, )
        ENDIF
C
	TITLE = 'FACS Code'
C
	CALL SETWIN ( , 4)	
C
        FACS = '    '
        CHRLEN = READSTR (FACS, DELETE, , .FALSE., RETVAL)
C
        IF (DELFND.OR.BLKERR) THEN
           CALL LSL_PUTMSG (CEDD2I__UNEXPEND, TITLE, PTR)
           FTRHDR = .FALSE.
           GOTO 999
        ELSEIF (CHRLEN.LT.4) THEN
           CALL LSL_PUTMSG (CEDD2I__FEALENERR, TITLE, PTR, CHRLEN)
           RESTRT = PTR+4
           IF (RESTRT.GT.1980) RESTRT = MOD (RESTRT, 1972)
	   CALL SETWIN (RESTRT, )
        ELSEIF (.NOT.RETVAL) THEN
           CALL LSL_PUTMSG (CEDD2I__FEARDCHERR, TITLE, PTR)
           CALL LSL_PUTMSG (RETVAL)
           RESTRT = PTR+4
           IF (RESTRT.GT.1980) RESTRT = MOD (RESTRT, 1972)
	   CALL SETWIN (RESTRT, )
        ENDIF
C
	IF (FULL_DIAG) CALL WRITEF('.%S %S%S', TITLE, FACSPR, FACS)
C
        FACSOK = .TRUE.                          ! got FACS code
C
C  all mandatory fields read 
C
C  reserved character
C
	CALL DCPSAV (PTR)
        CHKSUM = DCP1+45
        IF (PTR.NE.CHKSUM .AND. PTR.NE.CHKSUM-1972) THEN
           CALL LSL_PUTMSG (CEDD2I__FEACNTERR, TITLE, PTR)
           FTRHDR = .FALSE.
           GOTO 999
        ENDIF
        CALL SETWIN ( , 1)
C
        TITLE = 'FACS reserve'
C
        CHRLEN = READSTR (RESCHR, DELETE, , .FALSE., RETVAL)
C
        IF (DELFND.OR.BLKERR) THEN
           CALL LSL_PUTMSG (CEDD2I__UNEXPEND, TITLE, PTR)
           FTRHDR = .FALSE.
           GOTO 999
        ELSEIF (CHRLEN.LT.1) THEN
           CALL LSL_PUTMSG (CEDD2I__FEALENERR, TITLE, PTR, CHRLEN)
           RESTRT = PTR+1
           IF (RESTRT.GT.1980) RESTRT = MOD (RESTRT, 1972)
	   CALL SETWIN (RESTRT, )
        ELSEIF (.NOT.RETVAL) THEN
           CALL LSL_PUTMSG (CEDD2I__FEARDCHERR, TITLE, PTR)
           CALL LSL_PUTMSG (RETVAL)
           RESTRT = PTR+1
           IF (RESTRT.GT.1980) RESTRT = MOD (RESTRT, 1972)
	   CALL SETWIN (RESTRT, )
        ENDIF
C
	IF (FULL_DIAG) CALL WRITEF ('.%S %S', TITLE, RESCHR)
C
C  now the attribute fields (not mandatory)
C
	CALL DCPSAV (PTR)
        CHKSUM = DCP1+46
        IF (PTR.NE.CHKSUM .AND. PTR.NE.CHKSUM-1972) THEN
           CALL LSL_PUTMSG (CEDD2I__FEACNTERR, TITLE, PTR)
           FTRHDR = .FALSE.
           GOTO 999
        ENDIF
C
        TITLE = 'Attribute Field'
C
        DO 100 I = 1,9
C
        CALL DCPSAV (PTR)
	CALL SETWIN ( , 2)	
C
        HAD_ATTRB(I) = .FALSE.
        IATTRA(I) = 0
	IF (RDLONG (IATTRA(I))) THEN         ! field not used
           IF (DELFND.OR.BLKERR) THEN
              CALL LSL_PUTMSG (CEDD2I__UNEXPEND, TITLE, PTR)
              FTRHDR = .FALSE.
              GOTO 999
           ENDIF
C unable to read field in HDR block; outputting zero
	   IATTRA(I) = 0
	ELSE
           HAD_ATTRB(I) = .TRUE.
	ENDIF
C
        RESTRT = PTR+2
        IF (RESTRT.GT.1980) RESTRT = MOD (RESTRT, 1972)
        CALL SETWIN (RESTRT, )
C
	IF (FULL_DIAG) CALL WRITEF ('.%S no. %^W%N : %N', 
     &                                   TITLE, I, IATTRA(I))
C
100     CONTINUE
C
	CALL DCPSAV (PTR)
        CHKSUM = DCP1+64
        IF (PTR.NE.CHKSUM .AND. PTR.NE.CHKSUM-1972) THEN
           CALL LSL_PUTMSG (CEDD2I__FEACNTERR, TITLE, PTR)
           FTRHDR = .FALSE.
           GOTO 999
        ENDIF
C
        DO 200 I = 10,13
C
        CALL DCPSAV (PTR)
	CALL SETWIN ( , 3)
C
        HAD_ATTRB(I) = .FALSE.
        RATTRA(I) = 0.0
	IF (RDREAL (RATTRA(I))) THEN
           IF (DELFND.OR.BLKERR) THEN
              CALL LSL_PUTMSG (CEDD2I__UNEXPEND, TITLE, PTR)
              FTRHDR = .FALSE.
              GOTO 999
           ENDIF
C unable to read field in HDR block; outputting zero
	   RATTRA(I) = 0.0
	ELSE 
           HAD_ATTRB(I) = .TRUE.
	ENDIF
C
        RESTRT = PTR+3
        IF (RESTRT.GT.1980) RESTRT = MOD (RESTRT, 1972)
        CALL SETWIN (RESTRT, )
C
	IF (FULL_DIAG) CALL WRITEF('.%S no. %^W%N : %F5.3', 
     &                                   TITLE, I, RATTRA(I))
C
200     CONTINUE
C
	CALL DCPSAV (PTR)
        CHKSUM = DCP1+76
        IF (PTR.NE.CHKSUM .AND. PTR.NE.CHKSUM-1972) THEN
           CALL LSL_PUTMSG (CEDD2I__FEACNTERR, TITLE, PTR)
           FTRHDR = .FALSE.
           GOTO 999
        ENDIF
C
        DO 300 I = 14,15
C
        CALL DCPSAV (PTR)
	CALL SETWIN ( , 2)	
C
        HAD_ATTRB(I) = .FALSE.
        IATTRB(I) = 0
	IF (RDLONG (IATTRB(I))) THEN
           IF (DELFND.OR.BLKERR) THEN
              CALL LSL_PUTMSG (CEDD2I__UNEXPEND, TITLE, PTR)
              FTRHDR = .FALSE.
              GOTO 999
           ENDIF
C unable to read field in HDR block; outputting zero
	   IATTRB(I) = 0
	ELSE 
           HAD_ATTRB(I) = .TRUE.
	ENDIF
C
        RESTRT = PTR+2
        IF (RESTRT.GT.1980) RESTRT = MOD (RESTRT, 1972)
        CALL SETWIN (RESTRT, )
C
	IF (FULL_DIAG) CALL WRITEF('.%S no. %^W%N : %N', 
     &                                   TITLE, I, IATTRB(I))
C
300     CONTINUE
C
C   third block (optional)
C
        IF (HDRCNT.LT.3) GOTO 999
C
	CALL DCPSAV (PTR)
        CHKSUM = DCP1+80
        IF (PTR.NE.CHKSUM .AND. PTR.NE.CHKSUM-1972) THEN
           CALL LSL_PUTMSG (CEDD2I__FEACNTERR, TITLE, PTR)
           FTRHDR = .FALSE.
           GOTO 999
        ENDIF
C
        DO 400 I = 16,22
C
        CALL DCPSAV (PTR)
	CALL SETWIN ( , 2)	
C
        HAD_ATTRB(I) = .FALSE.
        IATTRB(I) = 0
	IF (RDLONG (IATTRB(I))) THEN
           IF (DELFND.OR.BLKERR) THEN
              CALL LSL_PUTMSG (CEDD2I__UNEXPEND, TITLE, PTR)
              FTRHDR = .FALSE.
              GOTO 999
           ENDIF
C unable to read field in HDR block; outputting zero
	   IATTRB(I) = 0
	ELSE 
           HAD_ATTRB(I) = .TRUE.
	ENDIF
C
        RESTRT = PTR+2
        IF (RESTRT.GT.1980) RESTRT = MOD (RESTRT, 1972)
        CALL SETWIN (RESTRT, )
C
	IF (FULL_DIAG) CALL WRITEF('.%S no. %^W%N : %N', 
     &                                   TITLE, I, IATTRB(I))
C
400     CONTINUE
C
	CALL DCPSAV (PTR)
        CHKSUM = DCP1+94
        IF (PTR.NE.CHKSUM .AND. PTR.NE.CHKSUM-1972) THEN
           CALL LSL_PUTMSG (CEDD2I__FEACNTERR, TITLE, PTR)
           FTRHDR = .FALSE.
           GOTO 999
        ENDIF
C
        DO 500 I = 23,26
C
        CALL DCPSAV (PTR)
	CALL SETWIN ( , 3)
C
        HAD_ATTRB(I) = .FALSE.
        RATTRB(I) = 0.0
	IF (RDREAL (RATTRB(I))) THEN
           IF (DELFND.OR.BLKERR) THEN
              CALL LSL_PUTMSG (CEDD2I__UNEXPEND, TITLE, PTR)
              FTRHDR = .FALSE.
              GOTO 999
           ENDIF
C unable to read field in HDR block; outputting zero
	   RATTRB(I) = 0.0
	ELSE 
           HAD_ATTRB(I) = .TRUE.
	ENDIF
C
        RESTRT = PTR+3
        IF (RESTRT.GT.1980) RESTRT = MOD (RESTRT, 1972)
        CALL SETWIN (RESTRT, )
C
	IF (FULL_DIAG) CALL WRITEF ('.%S no. %^W%N : %F5.3', 
     &                                   TITLE, I, RATTRB(I))
C
500     CONTINUE
C
C  value attribute fields
C
	CALL DCPSAV (PTR)
        CHKSUM = DCP1+106
        IF (PTR.NE.CHKSUM .AND. PTR.NE.CHKSUM-1972) THEN
           CALL LSL_PUTMSG (CEDD2I__FEACNTERR, TITLE, PTR)
           FTRHDR = .FALSE.
           GOTO 999
        ENDIF
C
        TITLE = 'Value Attribute Field'
C
        DO 600 I = 1,2
C
        CALL DCPSAV (PTR)
	CALL SETWIN ( , 7)
C
        HAD_VATTRB(I) = .FALSE.
        VATTRB(I) = 0.0
	IF (RDREAL (VATTRB(I))) THEN
           IF (DELFND.OR.BLKERR) THEN
              CALL LSL_PUTMSG (CEDD2I__UNEXPEND, TITLE, PTR)
              FTRHDR = .FALSE.
              GOTO 999
           ENDIF
C unable to read field in HDR block; outputting zero
	   VATTRB(I) = 0.0
	ELSE 
           HAD_VATTRB(I) = .TRUE.
	ENDIF
C
        RESTRT = PTR+7
        IF (RESTRT.GT.1980) RESTRT = MOD (RESTRT, 1972)
        CALL SETWIN (RESTRT, )
C
	IF (FULL_DIAG) CALL WRITEF('.%S no. %^W%N : %F10.3',
     &                                   TITLE, I, VATTRB(I))
C
600     CONTINUE
C
C   fourth block (optional)
C
        IF (HDRCNT.LT.4) GOTO 999
C
C   text attributes
C
	CALL DCPSAV (PTR)
        CHKSUM = DCP1+120
        IF (PTR.NE.CHKSUM .AND. PTR.NE.CHKSUM-1972) THEN
           CALL LSL_PUTMSG (CEDD2I__FEACNTERR, TITLE, PTR)
           FTRHDR = .FALSE.
           GOTO 999
        ENDIF
C
        TITLE = 'Text Attribute Field'
C
        DO 700 I = 1,2
C
        CALL DCPSAV (PTR)
	CALL SETWIN ( , 10)	
C
        TEXT(I) = '          '
        CHRLEN = READSTR (TEXT(I), DELETE, , .FALSE., RETVAL)
C
        IF (DELFND.OR.BLKERR) THEN
           CALL LSL_PUTMSG (CEDD2I__UNEXPEND, TITLE, PTR)
           FTRHDR = .FALSE.
           GOTO 999
        ELSEIF (CHRLEN.LT.10) THEN
           CALL LSL_PUTMSG (CEDD2I__FEALENERR, TITLE, PTR, CHRLEN)
           RESTRT = PTR+10
           IF (RESTRT.GT.1980) RESTRT = MOD (RESTRT, 1972)
	   CALL SETWIN (RESTRT, )
        ELSEIF (.NOT.RETVAL) THEN
           CALL LSL_PUTMSG (CEDD2I__FEARDCHERR, TITLE, PTR)
           CALL LSL_PUTMSG (RETVAL)
           RESTRT = PTR+10
           IF (RESTRT.GT.1980) RESTRT = MOD (RESTRT, 1972)
	   CALL SETWIN (RESTRT, )
        ENDIF
C
	IF (FULL_DIAG) CALL WRITEF ('.%S no. %^W%N : %S', 
     &                                 TITLE, I, TEXT(I))
C
700     CONTINUE
C
        DO 750 I = 1,10
           TATTR1(I) = ICHAR (TEXT(1)(I:I))
           TATTR2(I) = ICHAR (TEXT(2)(I:I))
750     CONTINUE
C
	CALL DCPSAV (PTR)
        CHKSUM = DCP1+140
        IF (PTR.NE.CHKSUM .AND. PTR.NE.CHKSUM-1972) THEN
           CALL LSL_PUTMSG (CEDD2I__FEACNTERR, TITLE, PTR)
           FTRHDR = .FALSE.
           GOTO 999
        ENDIF
C
	CALL SETWIN ( , 20)	
C
        LTEXT = '                    '
        CHRLEN = READSTR (LTEXT, DELETE, , .FALSE., RETVAL)
C
        IF (DELFND.OR.BLKERR) THEN
           CALL LSL_PUTMSG (CEDD2I__UNEXPEND, TITLE, PTR)
           FTRHDR = .FALSE.
           GOTO 999
        ELSEIF (CHRLEN.LT.20) THEN
           CALL LSL_PUTMSG (CEDD2I__FEALENERR, TITLE, PTR, CHRLEN)
           RESTRT = PTR+20
           IF (RESTRT.GT.1980) RESTRT = MOD (RESTRT, 1972)
	   CALL SETWIN (RESTRT, )
        ELSEIF (.NOT.RETVAL) THEN
           CALL LSL_PUTMSG (CEDD2I__FEARDCHERR, TITLE, PTR)
           CALL LSL_PUTMSG (RETVAL)
           RESTRT = PTR+20
           IF (RESTRT.GT.1980) RESTRT = MOD (RESTRT, 1972)
	   CALL SETWIN (RESTRT, )
        ENDIF
C
	IF (FULL_DIAG) CALL WRITEF('.%S no. 3 : %S', 
     &                                 TITLE, LTEXT)
C
C  convert to byte array
C
        DO 780 I = 1,20
           LTATTR(I) = ICHAR (LTEXT(I:I))
780     CONTINUE
C
C  fifth block (optional)
C
        IF (HDRCNT.LT.5) GOTO 999
C
C  value attribute fields
C
	CALL DCPSAV (PTR)
        CHKSUM = DCP1+160
        IF (PTR.NE.CHKSUM .AND. PTR.NE.CHKSUM-1972) THEN
           CALL LSL_PUTMSG (CEDD2I__FEACNTERR, TITLE, PTR)
           FTRHDR = .FALSE.
           GOTO 999
        ENDIF
C
        TITLE = 'Value Attribute Field'
C
        DO 800 I = 3,7
C
        CALL DCPSAV (PTR)
	CALL SETWIN ( , 8)
C
        HAD_VATTRB(I) = .FALSE.
        VATTRB(I) = 0.0
	IF (RDREAL (VATTRB(I))) THEN
           IF (DELFND.OR.BLKERR) THEN
              CALL LSL_PUTMSG (CEDD2I__UNEXPEND, TITLE, PTR)
              FTRHDR = .FALSE.
              GOTO 999
           ENDIF
C unable to read field in HDR block; outputting zero
	   VATTRB(I) = 0.0
	ELSE 
           HAD_VATTRB(I) = .TRUE.
	ENDIF
C
        RESTRT = PTR+8
        IF (RESTRT.GT.1980) RESTRT = MOD (RESTRT, 1972)
        CALL SETWIN (RESTRT, )
C
	IF (FULL_DIAG) CALL WRITEF ('.%S no. %^W%N : %F10.3', 
     &                                   TITLE, I, VATTRB(I))
C
800     CONTINUE
C
C   sixth block (optional)
C
        IF (HDRCNT.LT.6) GOTO 999
C
	CALL DCPSAV (PTR)
        CHKSUM = DCP1+200
        IF (PTR.NE.CHKSUM .AND. PTR.NE.CHKSUM-1972) THEN
           CALL LSL_PUTMSG (CEDD2I__FEACNTERR, TITLE, PTR)
           FTRHDR = .FALSE.
           GOTO 999
        ENDIF
C
        DO 900 I = 8,12
C
        CALL DCPSAV (PTR)
	CALL SETWIN ( , 8)
C
        HAD_VATTRB(I) = .FALSE.
        VATTRB(I) = 0.0
	IF (RDREAL (VATTRB(I))) THEN
           IF (DELFND.OR.BLKERR) THEN
              CALL LSL_PUTMSG (CEDD2I__UNEXPEND, TITLE, PTR)
              FTRHDR = .FALSE.
              GOTO 999
           ENDIF
C unable to read field in HDR block; outputting zero
	   VATTRB(I) = 0.0
	ELSE 
           HAD_VATTRB(I) = .TRUE.
	ENDIF
C
        RESTRT = PTR+8
        IF (RESTRT.GT.1980) RESTRT = MOD (RESTRT, 1972)
        CALL SETWIN (RESTRT, )
C
	IF (FULL_DIAG) CALL WRITEF ('.%S no. %^W%N : %F10.3', 
     &                                   TITLE, I, VATTRB(I))
C
900     CONTINUE
C
        CALL DCPSAV (PTR)
        CHKSUM = DCP1+240
        IF (PTR.NE.CHKSUM .AND. PTR.NE.CHKSUM-1972) THEN
           CALL LSL_PUTMSG (CEDD2I__FEACNTERR, TITLE, PTR)
           FTRHDR = .FALSE.
           GOTO 1000
        ENDIF
C
        IF (HDRCNT.GT.6) THEN
C
           TITLE = 'Extra Header text'
C
           DO 950 I = 7,HDRCNT
           CALL SETWIN ( , 40)
C
           EXTEXT = '                                        '
           CHRLEN = READSTR (EXTEXT, DELETE, , .FALSE., RETVAL)
C
           IF (DELFND.OR.BLKERR) THEN
              CALL LSL_PUTMSG (CEDD2I__UNEXPEND, TITLE, PTR)
              FTRHDR = .FALSE.
              GOTO 999
           ELSEIF (CHRLEN.LT.40) THEN
              CALL LSL_PUTMSG (CEDD2I__FEALENERR, TITLE, PTR, CHRLEN)
              RESTRT = PTR+40
              IF (RESTRT.GT.1980) RESTRT = MOD (RESTRT, 1972)
	      CALL SETWIN (RESTRT, )
           ELSEIF (.NOT.RETVAL) THEN
              CALL LSL_PUTMSG (CEDD2I__FEARDCHERR, TITLE, PTR)
              CALL LSL_PUTMSG (RETVAL)
              RESTRT = PTR+40
              IF (RESTRT.GT.1980) RESTRT = MOD (RESTRT, 1972)
              CALL SETWIN (RESTRT, )
           ENDIF
C
           IF (FULL_DIAG) CALL WRITEF ('.%S  %S', 
     &                                 TITLE, EXTEXT)
C
950        CONTINUE
C
        ENDIF
C
999     CALL DCPSAV (PTR)
        CHKSUM = DCP1+HDRCNT*40
        IF (PTR.NE.CHKSUM .AND. PTR.NE.CHKSUM-1972) THEN
           CALL LSL_PUTMSG (CEDD2I__FEACNTERR, TITLE, PTR)
           FTRHDR = .FALSE.
        ENDIF
C
1000    IF (DIAG) THEN
           CALL WRITEF 
           CALL WRITEF ('.Feature Header finished at %S at %^W%N',
     &                                           TITLE, PTR)
        ENDIF
C
        RETURN		       ! return with it
	END
C
