C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1986-10-09 19:33:36.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE ST_TO_ZS( NPTS, STBUF, ZSBUF, HAD_HEIGHT, HEIGHT )
C
***	IDENT	09OC86
***	MODULE	ST_TO_ZS
C
C	Copyright LaserScan Laboratories Ltd., Cambridge, England
C
C Author TJ Ibbs, 9 Oct 1986
C
C This routine generalises an ST into a ZS
C
	IMPLICIT NONE
C
C Arguments:
C
	INTEGER*2     	NPTS		! number of points
	REAL		STBUF(2,NPTS)	! input point buffer
	REAL		ZSBUF(3,NPTS)	! output point buffer
	LOGICAL		HAD_HEIGHT	! true if height was given
	REAL		HEIGHT		! the height of STBUF
C
***	COMMON/HERE:SIF/
C
C workspace
C
	INTEGER		I		! DO loop variable
	REAL		T_HEIGHT	! our own height
C
C check that we had a height AC
C
	IF ( HAD_HEIGHT ) THEN
	   T_HEIGHT = HEIGHT
	ELSE
	   CALL MOAN( MSG__NOHEIGHT, FSN )
	   T_HEIGHT = 0.0
	ENDIF
C
C so loop through all the points
C
	DO 100 I = 1,NPTS
C
	   ZSBUF(1,I) = STBUF(1,I)
	   ZSBUF(2,I) = STBUF(2,I)
	   ZSBUF(3,I) = T_HEIGHT
C
100	CONTINUE
C
C and that's all we do
C
	RETURN
	END
