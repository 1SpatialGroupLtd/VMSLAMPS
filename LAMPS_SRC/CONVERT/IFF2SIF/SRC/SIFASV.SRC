	SUBROUTINE SIFASV(CURR_FSN)
C
***	IDENT	25MY94
***	MODULE	SIFASV
C
C	Copyright Laser-Scan Ltd., Cambridge, England.
C
C	Created					J Cadogan	28-Mar-1990
C
C	CONVERT IFF2SIF Utility - Output ASV command
C
C Description
C
C	Outputs the ASsociative Values command as follows:
C	
C		ASV/DE=delimiter,ID=ident,KE=pocc,values
C
	IMPLICIT NONE
C
C Parameter Files
C
	INCLUDE	'LSL$CMNIFF:CB.STR'	! record structure definition
C
C Local Parameters
C
C
C Arguments
C
	INTEGER*4	CURR_FSN	! current FSN
C
C Common Blocks
C
	INCLUDE	'HERE:SIFMT.CMN'		! 
	INCLUDE 'HERE:ACD.CMN'
	INCLUDE	'HERE:SIF.CMN'		! 
C	INCLUDE	'LSL$CMNLSL:EXPC.CMN'	! output common block
C
C Functions called
C
	INTEGER*4	READSTR		! read a string
C
C Local Variables
C
	INTEGER*4	I,J		! loop counter
	INTEGER*4	LEN		! length of string
	CHARACTER*80	TMPSTR		! temporary string
	LOGICAL		NO_VALUE	! flag absence of a value
	REAL		ACC		! accuracy
	PARAMETER	(ACC=0.1)
C
	CALL EXPAND('ASV/DE=!,ID=%N,KE=0,!',CURR_FSN)

	DO 50 I=1,NAC

	   CALL CHECK_CHAR(ACD_NAME_LIST(I)(1:ACD_NAME_LEN_LIST(I)))
	   CALL APPEND('!')
C
C Now we can go ahead and deal with the actual attribute, depending on 
C its type - first the value field in AC.
C
C Deal with an integer and we have a text string then flag no value.
C
	   IF (ACD_DATA_TYPE .EQ. ACD_DATATYPE_I) THEN 
	      IF (AC_VALUE(I).I.EQ.0.AND..NOT.NO_ACTEXT(I)) THEN
	         NO_VALUE = .TRUE.
	      ELSE
	         CALL APPEND('%N!',AC_VALUE(I).I)
	      ENDIF
C
C Deal with a real and we have a text string then flag no value.
C
	   ELSEIF (ACD_DATA_TYPE .EQ. ACD_DATATYPE_R) THEN
	      IF (((AC_VALUE(I).R-ACC).LT.ACC).AND..NOT.NO_ACTEXT(I)) THEN
	         NO_VALUE = .TRUE.
	      ELSE
	         CALL APPEND('%F6.4',AC_VALUE(I).R)
	         CALL APPEND('!')
	      ENDIF
C
C Deal with a string and we have a text string then flag no value.
C
	   ELSEIF (ACD_DATA_TYPE .EQ. ACD_DATATYPE_C) THEN
	      IF (AC_VALUE(I).C.EQ.'    '.AND..NOT.NO_ACTEXT(I)) THEN
	         NO_VALUE = .TRUE.
	      ELSE
	         CALL APPEND('%S!',AC_VALUE(I).C(1:4))
	      ENDIF
	   ENDIF
C
C Now deal with an AC text field if we have one. Output text only
C if there is no value.
C
	   IF (NO_VALUE) THEN
	      IF (.NOT.NO_ACTEXT(I)) THEN
	         DO 100 J=1,ACTLEN(I)
	            TMPSTR(J:J) = CHAR(ACTEXT(J,I))
100	         CONTINUE
	         CALL CHECK_CHAR(TMPSTR(1:ACTLEN(I)))
	         CALL APPEND('!')
	      ENDIF
	   ENDIF
50	CONTINUE
C
	CALL SIFOUT
C
C Return
C
	RETURN
	END
