	SUBROUTINE SIFSYM( MIRROR, DIM, ORI, ANGLE , XSCALE , YSCALE , NAME )
C
***	IDENT	02JA92
***	MODULE	SIFSYM
C
C	Copyright LaserScan Laboratories Ltd., Cambridge, England
C
C Author TJ Ibbs, 23 January 1985
C
C Routine to output a SIF generate symbol command
C
C NB - assumed to have been prefixed by an appropriate MTX command,
C generated by SIFMTX
C
	IMPLICIT NONE
C
C Arguements
C
C
C MIRROR	states whether the symbol is to be reflected
C
C		0 => don't reflect
C		1 => reflect in X axis
C		2 => reflect in Y axis
C
C ORI		is the origin of this symbol - where to put it
C
C ANGLE		is the rotation angle of the symbol
C
C XSCALE	x scale factor for symbol
C
C YSCALE	y scale factor for symbol
C
C NAME		is the cell name which states what this symbol is
C
	INTEGER		MIRROR
	INTEGER		DIM
	REAL		ORI(DIM)	! origin
	REAL		ANGLE		
	REAL		XSCALE
	REAL		YSCALE
	CHARACTER*(*)	NAME		! name of symbol
C
C Functions called
C
	REAL		DEGREE		! convert radians to degrees
	INTEGER		UORX		! change map space into UORs
	INTEGER		UORY
	INTEGER		UORZ
C
C Common blocks
C
	INCLUDE 'HERE:CONTROL.CMN'
***	COMMON/SIF/
C
C Workspace
C
	INTEGER		MX			! flag mirroring in x
	INTEGER		MY			! flag mirroring in y
	REAL		T11			! trans. matrix parameters
	REAL		T21
	REAL		T12
	REAL		T22

C
C For SCITEX option MTX can't be used - must calculate transformation
C matrix.
	IF (HAD_SCITEX) THEN
C
C Calculate transformation matrix
C
	   MX = 1
	   MY = 1
	   IF (MIRROR.EQ.1) MX = -1			! flag mirroring in x
	   IF (MIRROR.EQ.2) MY = -1			! flag mirroring in y
	   T11 = MY*XSCALE*COS(ANGLE)
	   T21 = MX*XSCALE*SIN(ANGLE)
	   T12 = MY*YSCALE*-1*SIN(ANGLE)
	   T22 = MX*YSCALE*COS(ANGLE)
C
	   CALL EXPAND('SYM/')				! start off the line
C
C now see if we need to add on a mirroring request
C
	   IF (MIRROR.LT.0 .OR. MIRROR.GT.2) THEN
	      CALL MOAN( MSG__SYMMIRROR, MIRROR, FSN )
	   ELSEIF (MIRROR.EQ.1) THEN
	      CALL APPEND('MX,')			! reflect in X
	   ELSEIF (MIRROR.EQ.2) THEN
	      CALL APPEND('MY,')			! reflect in Y
	   ENDIF
C
C and now the origin
C
	   CALL APPEND('%^LOR=%U%N,%U%N,',UORX(ORI(1)),UORY(ORI(2)))
	   IF (DIM.EQ.3) CALL APPEND('%^L%U%N,',UORZ(ORI(3)))
C
C and now the martrix
C
	   CALL APPEND('MA=%F5.3,%F5.3,%F5.3,%F5.3,',
     &			T11,T21,T12,T22)
	ELSE
C
C Normal SIF output
C
	   CALL EXPAND('SYM/')				! start off the line
C
C now see if we need to add on a mirroring request
C
	   IF (MIRROR.LT.0 .OR. MIRROR.GT.2) THEN
	      CALL MOAN( MSG__SYMMIRROR, MIRROR, FSN )
	   ELSEIF (MIRROR.EQ.1) THEN
	      CALL APPEND('MX,')			! reflect in X
	   ELSEIF (MIRROR.EQ.2) THEN
	      CALL APPEND('MY,')			! reflect in Y
	   ENDIF
C
C and now the origin
C
	   CALL APPEND('%^LOR=%U%N,%U%N,',UORX(ORI(1)),UORY(ORI(2)))
	   IF (DIM.EQ.3) CALL APPEND('%^L%U%N,',UORZ(ORI(3)))
	ENDIF
C
C and finally, the symbol name itself
C
	CALL CHECK_CHAR( NAME )
	CALL SIFOUT
C
	RETURN
	END
