C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1989-12-21 14:43:36.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL FUNCTION CHECK_SCITEX
C
***	IDENT	11DE89
***	MODULE	CHECK_SCITEX
C	Copyright Laser-Scan Laboratories Ltd., Cambridge, England.
C
C	Created					JMC	07-12-1989
C
C	CONVERT IFF2SIF Utility - Check if /SCITEX option allowed.
C
C Description
C
C Checks if customer has licence for /SCITEX option.
C
	IMPLICIT NONE
C
C Common Blocks
C
	INCLUDE 'HERE:LICENCE.PAR'
	INCLUDE 'HERE:IFF2SIFMSG.PAR'
	INCLUDE 'HERE:CONTROL.CMN'
C
C arguments
C
	INCLUDE '($LIBDEF)'
	INCLUDE '($SSDEF)'
C
C functions called
C
	INTEGER*4	LIB$FIND_FILE
	INTEGER*4	LIB$FIND_IMAGE_SYMBOL
	INTEGER*4	LIB$MATCH_COND
	INTEGER*4	TRNALL
C
C Local Variables
C
	INTEGER*4	CONTEXT		! context for LIB$FIND_FILE
	CHARACTER*(1)	TEMP		! file specification
	INTEGER*4	IERR		! error code
	INTEGER		ADDRESS		! address of entry point;
	INTEGER		INT		! returned by SCITEX_LICENCE
C
	EXTERNAL 	EXP_HANDLER
C
	ADDRESS = 0			! assume no routine
C
	CHECK_SCITEX = .TRUE.
	HAD_SCITEX = .FALSE.
C
C Check if logical name has been set up.
C
	IF (TRNALL('LSL$IFF2SIF_SCITEX',TEMP).EQ.SS$_NOLOGNAM) THEN
	   CALL MOAN(MSG__NOLOGNAM)
	   CHECK_SCITEX = .FALSE.
	   GOTO 999
	ENDIF
C
C Check whether file exists first
C (use same default as LIB$FIND_IMAGE_SYMBOL)
C
	CONTEXT = 0			! clear context
	IERR = LIB$FIND_FILE('LSL$IFF2SIF_SCITEX'
     &			,TEMP,CONTEXT,'SCITEX_LICENCE.EXE')
	CALL LIB$FIND_FILE_END(CONTEXT)
C
C now get entry point of routine in shared image
C
	IF (IERR) THEN 			!file was found
	   CALL LIB$ESTABLISH(EXP_HANDLER) ! set condition handler
	   IERR = LIB$FIND_IMAGE_SYMBOL('LSL$IFF2SIF_SCITEX',
     &				     'SCITEX_LICENCE',ADDRESS)
	   IF (.NOT.IERR) THEN
C
C condition handler outputs message for all but LIB$_KEYNOTFOU
	      IF (LIB$MATCH_COND(IERR,LIB$_KEYNOTFOU)) THEN
	         CALL MOAN(IERR)
	      ENDIF
	   ENDIF
C	ELSE
C	   CALL MOAN(IERR)
	ENDIF
C
	IF (.NOT.IERR) THEN
	   CALL MOAN(MSG__NOLICENCE)
	   ADDRESS = 0
	   CHECK_SCITEX = .FALSE.
	   GOTO 999
	ENDIF
C
C Image found - execute it in order to flag that it has been found.
C
	CALL JACKET(%VAL(ADDRESS),INT)
	HAD_SCITEX = INT.EQ.CHECK_INT
	IF (.NOT.HAD_SCITEX) THEN
	   CALL MOAN(MSG__NOLICENCE)
	   CHECK_SCITEX = .FALSE.
	ENDIF
C
C Return
C
999	RETURN
	END
