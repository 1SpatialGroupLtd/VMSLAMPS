	SUBROUTINE CHECK_CHAR( STRING )
C
***	IDENT	07OC86
***	MODULE	CHECK_CHAR
C
C	Copyright LaserScan Laboratories Ltd., Cambridge, England
C
C Author TJ Ibbs, 12 March 1985
C
C This routine will output the given string, continuing on new
C lines if necessary. It will always output a non-space as the last
C character in a record, but is otherwise unintelligent.
C
C Always leaves ready for a SIFOUT
C
C NB assumes that an EXPAND has already occurred
C
	IMPLICIT NONE
C
C Arguments
C
	CHARACTER*(*)	STRING		! the string to be output
C
C common blocks
C
***	COMMON/HERE:SIF/
***	COMMON/HERE:SIFMT/
C***	COMMON/LSL$CMNLSL:EXPC/
C
C function
C
	LOGICAL		ROOM_FOR	! space left in buffer?
C
C workspace
C
	INTEGER		LENGTH		! the length of the string
	INTEGER		HERE		! one end of substring
	INTEGER		THERE		! other end
	INTEGER		POSN, TEMP
C
	LENGTH = LEN(STRING)
	HERE   = 1			! start at first char
	THERE  = LENGTH			! end at last
C
C check things initially
C
	IF ( ROOM_FOR(LENGTH) ) THEN
	   CALL APPEND('%S', STRING(HERE:THERE) )
	   GOTO 9999			! that was easy
	ELSE
	   CALL SIFOUT
	   CALL EXPAND('%S',CONTIN)	! start with a standard line
	ENDIF
C
C
C now, will the string we have left fit?
C
100	IF ( ROOM_FOR( THERE-HERE+1 ) ) THEN
C
C	 output the remainder of it
C
	   CALL APPEND('%S', STRING(HERE:THERE) )
	   GOTO 9999
C
	ELSE
C
C	 otherwise, we must split the string up
C
	   TEMP = RECSIZ-EXPLEN		! space left in the record
	   POSN = HERE+TEMP-1		! limit to fit in this line
C
C	 check we don't end on a space
C	 - if we find too many spaces, ignore them
C
200	   IF ( STRING(POSN:POSN).EQ.' ' ) THEN
	      POSN = POSN-1
	      IF (POSN.LT.HERE) THEN
	         CALL MOAN( MSG__TOOMANYSPACES, STRING(1:LENGTH) )
	         THERE = HERE+TEMP-1
	         GOTO 300
	      ENDIF
	      GOTO 200
	   ENDIF
C
C	 so output this bit of string
C
	   THERE = POSN
	   CALL APPEND('%S', STRING(HERE:THERE) )
	   CALL SIFOUT
C
300	   HERE  = THERE+1
	   THERE = LENGTH
	   CALL EXPAND('%S',CONTIN)
	   GOTO 100
C
	ENDIF
C
9999	RETURN
	END
