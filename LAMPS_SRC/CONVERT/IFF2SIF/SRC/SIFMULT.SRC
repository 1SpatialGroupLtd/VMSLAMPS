C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1986-11-24 17:26:12.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE SIFMULT
C
***	IDENT	24NO86
***	MODULE	SIFMULT
C
C	Copyright LaserScan Laboratories Ltd., Cambridge, England
C
C Author TJ Ibbs, 6 February 1985
C
C Calculates the FACTOR and ZFACTOR values, for working out UORs
C
C Note that FACTOR and ZFACTOR are REAL*8
C
C UORs are calculated as
C
C	 coord in UORs =  coord in map units *  FACTOR
C	height in UORs = height in map units * ZFACTOR
C
	IMPLICIT NONE
C
***	COMMON/HERE:SIF/
C
	IF ( HAD_UORUNIT ) THEN
C
C	 if we have had the UOR unit (in metres) then we can calculate
C	 FACTOR and ZFACTOR
C
C	 if the IFF unit scale is 500 (ie 1:500) then 1 map unit
C	 is 1/500 ground units - ie the map is in 1/500 of the
C	 ground units
C
C	 if 1 UOR is 0.1 metres on the ground, then this is held as
C	 0.1 * 1/500 metres in the IFF file
C
C	 thus in our example, 1 UOR = 1/5000 metres in the IFF file
C
C	 thus we have
C
C		coord in UORs = coord in IFF units * 5000
C
	   FACTOR = IFFSCALE / UORUNIT
C
C	 - if we are scaling in Z, then similar maths can be
C	 applied to our Z coordinates
C	 - alternatively, we might just be multiplying Z by
C	 a constant
C
	   IF ( SCALING_Z ) THEN
	      ZFACTOR = ZSCALE / UORUNIT	! scale as in X,Y
	   ELSEIF ( MULTIPLYING_Z ) THEN
	      ZFACTOR = ZSCALE			! multiply by a constant
	   ELSE
	      ZFACTOR = 1.0			! leave as it is
	   ENDIF
C
C	 so we have defined our scale factors
C
	   HAD_FACTOR = .TRUE.
C
	ELSE
C
C	 otherwise we must complain
C
	   CALL MOAN( MSG__NOFACTOR )
	   FACTOR  = 1.0
	   IF ( MULTIPLYING_Z ) THEN	! UORs not relevant to Z
	      ZFACTOR = ZSCALE		! multiplying by a constant
	   ELSE
	      ZFACTOR = 1.0		! assume not specified yet
	   ENDIF
C
	ENDIF
C
	RETURN
	END
