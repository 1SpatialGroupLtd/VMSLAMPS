;
; * This file is part of the LAMPS distribution, released as a software
; * preservation project to archive digital history for future historians.
; * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
; *
; * Timestamp of this file for the 2002 release was: 1986-10-27 12:24:50.000000000 +0000
; *
; * This program is free software: you can redistribute it and/or modify
; * it under the terms of the GNU General Public License as published by
; * the Free Software Foundation, version 3.
; *
; * This program is distributed in the hope that it will be useful, but
; * WITHOUT ANY WARRANTY; without even the implied warranty of
; * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
; * General Public License for more details.
; *
; * You should have received a copy of the GNU General Public License
; * along with this program. If not, see http://www.gnu.org/licenses/.
;
	.TITLE		MOANING
	.IDENT		/27OC86/

	.LIBRARY	/LSL$LIBRARY:LSLMACLIB/

	$SSDEF
;
; Copyright Laser-Scan Laboratories Limited, Cambridge, England.
;
; Author: Tony J Ibbs		7 Oct 1986
;
; provides the following routines:
;
;		call INFORM( message, args )
;		call MOAN( message, args )
;		call DIAGNOS( message, args )
;		if ( HADMOAN() ) then
;		call MOAN_EXIT
;
; assemble with LSL$CMNLSL:EXPC.MAR
;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;

	DATA_PSECT   	MOANING

TRUE:	.LONG	1
FALSE:	.LONG	0

HAD_MOAN:	.BYTE	0		; ever called MOAN?
JUST_HAD_MOAN:	.BYTE	0		; called MOAN since HADMOAN?
DEBUGGING:	.BYTE	0		; well, are we?

RETVAL:		.BLKL	1

SAVMAX:	.LONG	MAX_EXPMAX
SAVBUF:	.BLKB	MAX_EXPMAX
SAVLEN:	.BLKL	1

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

	CODE_PSECT	MOANING
;
; output an error message - args as for LSL_PUTMSG
;
	.ENTRY	MOAN,^M<>
	MOVB	#1,HAD_MOAN
	MOVB	#1,JUST_HAD_MOAN
	CALLG	(AP),OUT_MSG
	RET
;
; output a plain message - args as for LSL_PUTMSG
;
	.ENTRY	INFORM,^M<>
	PUSHAL	FALSE
	PUSHAL	FALSE
	PUSHAL	FALSE
	CALLS	#3,G^LSL_SETMSG		; suppress the foreparts of the message
	CALLG	(AP),OUT_MSG		; output it
	PUSHAL	TRUE
	PUSHAL	TRUE
	PUSHAL	TRUE
	CALLS	#3,G^LSL_SETMSG		; reenable the foreparts
	RET
;
; output a debug message
;
	.ENTRY	DIAGNOS,^M<>
	BLBC	DEBUGGING,10$		; does nothing if not debugging
	CALLG	(AP),INFORM
10$:	RET
;
; set DEBUGGING - call DIAGNOSING(true/false)
;
	.ENTRY	DIAGNOSING,^M<>
	MOVB	@4(AP),DEBUGGING
	RET
;
; and output the message
;
	.ENTRY	OUT_MSG,^M<>
	PUSHAL	SAVMAX
	PUSHAL	SAVLEN
	PUSHAL	SAVBUF
	CALLS	#3,G^SAVE_EXPC		; save EXPC contents
	CALLG	(AP),G^LSL_PUTMSG	; output the message
	PUSHAL	SAVMAX
	PUSHAL	SAVLEN
	PUSHAL	SAVBUF
	CALLS	#3,G^RESTORE_EXPC	; restore EXPC contents
	RET
;
; has MOAN been called recently?
;
	.ENTRY	HADMOAN,^M<>
	MOVB	JUST_HAD_MOAN,R0	; did we just have MOAN?
	CLRB	JUST_HAD_MOAN		; not any longer
	RET
;
; exit, taking account of any MOAN we might have had
;
	.ENTRY	MOAN_EXIT,^M<>
	BLBC	HAD_MOAN,10$		; jump if we have never MOANed

	MOVL	#SS$_ABORT,RETVAL	; exit with ABORT
	BRB	20$

10$:	MOVL	#SS$_NORMAL,RETVAL	; exit with NORMAL
20$:	PUSHAL	RETVAL
	CALLS	#1,G^LSL_EXIT		; and exit neatly
	RET

	.PSECT
	.END
