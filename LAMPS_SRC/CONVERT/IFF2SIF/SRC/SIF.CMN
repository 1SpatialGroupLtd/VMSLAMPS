C
C general management common file for IFF2SIF
C
C introduce the error message parameters for SIF
C
	INCLUDE		'HERE:IFF2SIFMSG.PAR'
	INCLUDE		'LSL$CMNLSL:EXPC.CMN'
C
C now for more obvious things
C - useful parameters
C
	INTEGER		 STMAX
	INTEGER		 PTSMAX, CURMAX
	INTEGER		 ERRLEV
	INTEGER		 COORD_MAX
	CHARACTER*4	 CONTIN
	PARAMETER	(STMAX=200)
	PARAMETER	(PTSMAX=101)
	PARAMETER	(ERRLEV=63)
	PARAMETER	(COORD_MAX=10)
	PARAMETER	(CONTIN='    ')
C
C STMAX		is the maximum number of points we allow in an ST or ZS
C PTSMAX	is the maximum number of points allowed in an LST
C ERRLEV	is the level on which erroneous features are output
C COORD_MAX	is the maximum integer width that can occur (10 chars)
C CONTIN	is the continuation flag - 4 spaces
C
	REAL		 NOUGHT,MAXSIGNED,MAXINT
	PARAMETER	(NOUGHT   = 0.0D0)
	PARAMETER	(MAXSIGNED= 2147483647.0D0)
	PARAMETER	(MAXINT   = 4294967295.0D0)
C
C NOUGHT	is the minimum coordinate value we can output
C MAXSIGNED	is the maximum value that can be stored in a signed
C		longword - ie an INTEGER*4
C MAXINT	is the maximum integer we can output - it can only be
C		output as an unsigned longword
C
C - useful variables
C
	REAL*8		FACTOR, ZFACTOR
	REAL		IFFSCALE, SHTSCALE, ZSCALE
	LOGICAL		SCALING_Z, MULTIPLYING_Z
	REAL*8		UORUNIT
C
	LOGICAL		HAD_FACTOR, HAD_SHTSCALE
	LOGICAL		HAD_UORUNIT
	LOGICAL		HAD_AC
C
	INTEGER		DIMENSION
	INTEGER		FSN
	LOGICAL		FORCED
	LOGICAL		REFLECT
	INTEGER		IGNORE
	LOGICAL		NEED_SIFOUT
	LOGICAL		HAD_RANGE
	LOGICAL		HAD_JUST
	INTEGER		JUST,TXTLOC
	LOGICAL		USED_MM
	LOGICAL		TLFRAC
	REAL		OFF_X, OFF_Y, OFF_Z
	LOGICAL		OFFSET_FROM_MD
	LOGICAL		HAD_OFFSET, HAD_ZOFFSET
	LOGICAL		IN_COMPLEX_STRING
	BYTE		ASVBUF(MAX_EXPMAX+1)
	INTEGER*2	ASVBUFPTR
C
C FACTOR	is used to change X,Y map units into UORs - the functions
C		UORX and UORY calculate
C
C			posn in UORs = posn in map units * FACTOR
C
C ZFACTOR	is used to change Z (height) units into UORs - the function
C		UORZ calculates
C
C			height in UORs = height in map units * ZFACTOR
C
C		NOTE that FACTOR and ZFACTOR are REAL*8 - double precision
C
C SCALING_Z	is true if Z values are to be scaled in the same manner
C		as X,Y values - ie if ZFACTOR is to be used, and is
C		set to ZSCALE/UORUNIT
C
C MULTIPLYING_Z	is true if Z values are to be scaled by being multiplied
C		by a constant - ie if ZFACTOR is to be used, and is
C		set to ZSCALE
C
C If Z values are not being scaled, then both SCALING_Z and
C MULTIPLYING_Z will be false
C
C IFFSCALE	is the scale of the IFF units (eg 1:1)
C SHTSCALE	is the scale of the sheet     (eg 1:2500)
C ZSCALE	is the scale of the height units (generally different from
C		the X,Y scale in IFFSCALE), if SCALING_Z is true
C
C UORUNIT	is the size of a UOR in metres
C		NOTE that UORUNIT is a REAL*8 - double precision
C
C HAD_UORUNIT shows that the user has just given the relevant
C command, and HAD_FACTOR shows that FACTOR and ZFACTOR have been
C calculated
C
C DIMENSION	is the number of dimensions to the data - either 2 or 3
C
C FSN		is the feature serial number (from the IFF file) of the
C		current feature - used in error messages
C
C FORCED	is true if we have forced this feature to be output as
C		a line (allows FORCE_LINE not to do it again)
C
C REFLECT	is true if to reflect IFF info as it is read (for
C		debugging)
C
C IGNORE	is the layer to ignore
C
C NEED_SIFOUT	is true (during line/curve output) if we have output
C		pat of a record, and must call SIFOUT to output it
C
C HAD_RANGE	is true if we have read and accepted the IFF file's
C		RAnge entry
C
C HAD_JUST	is true if the user has specified an overriding text
C		justification
C
C JUST		is that value
C
C TXTLOC	...is that value for use with defining text locating point
C
C USED_MM	is true if size values in the SDF were given in mm on
C		the sheet (or more precisely, if the UNITS MM_ON_SHEET
C		command has been given in the SDF). If this is true,
C		and HAD_SHTSCALE, then we should read the SDF again, as
C		changing the sheet scale changes the mm on sheet to
C		metres on the ground transformation
C
C TLFRAC 	is true iff Text Level is to be taken FRom ACs
C		rather than from SDF, the default
C
C OFFSET_FROM_MD is true if the X,Y offsets are to be taken from a
C		 (type 2) map descriptor entry in each file. Thus
C		 will set OFF_X,Y and HAD_OFFSET
C
C OFF_X,Y	the X,Y offsets (in map units) to be applied to the data
C HAD_OFFSET	true if X,Y offsets have been specified
C
C OFF_Z		the offset to be applied to height data
C HAD_ZOFFSET	true if Z offset has been specified
C
C IN_COMPLEX_STRING	is true if we have started a BST, and will thus
C			need an EST to end it
C
C - and the common block itself
C
	COMMON /SIF/ FACTOR, ZFACTOR,
     &		     IFFSCALE, SHTSCALE, ZSCALE, UORUNIT,
     &		     SCALING_Z, MULTIPLYING_Z,
     &		     DIMENSION, FSN,
     &		     HAD_FACTOR, HAD_SHTSCALE,
     &		     HAD_UORUNIT, HAD_AC,
     &		     FORCED, REFLECT, IGNORE, NEED_SIFOUT,
     &		     HAD_RANGE, HAD_JUST, JUST, TXTLOC, USED_MM, TLFRAC,
     &		     OFF_X, OFF_Y, OFF_Z, HAD_OFFSET, HAD_ZOFFSET,
     &		     OFFSET_FROM_MD, IN_COMPLEX_STRING, ASVBUF, ASVBUFPTR
C
