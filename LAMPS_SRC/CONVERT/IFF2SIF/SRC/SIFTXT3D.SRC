	SUBROUTINE SIFTXT3D( ORI, ANGLE, HEIGHT, WIDTH, MIRROR, TEXT )
C
***	IDENT	08JA92
***	MODULE	SIFTXT3D
C
C	Copyright LaserScan Laboratories Ltd., Cambridge, England
C
C Author TJ Ibbs, 19 November 1986
C
C Outputs a GENERATE TEXT LINE command for 3d -
C
C	TXT/OR=orix,oriy,oriz, TH=height, TW=width,
C	    MA=<matrix values>,
C	    text
C
C This is instead of the 2d TX3-TXT pair (TX3 does not work in 3d)
C
	IMPLICIT NONE
C
***	COMMON/HERE:SIF/
C
C Arguments are:
C
	REAL		ORI(3)
	REAL		ANGLE
	INTEGER		HEIGHT, WIDTH
	INTEGER		MIRROR
	CHARACTER*(*)	TEXT
C
C ORI()		is the origin of the text line in map units
C
C ANGLE		is the angle to rotate the text by, and is given to
C		us in radians, widdershins from X (standard notation)
C
C HEIGHT	is the height of the text in UORS
C WIDTH		is the width  of the text in UORS
C
C MIRROR	states whether the text is to be reflected
C
C		0 => don't reflect
C		1 => reflect in X axis
C		2 => reflect in Y axis
C
C TEXT		is the text to be output
C
C functions called
C
	INTEGER		UORX,UORY,UORZ	! convert map units to UORs
	LOGICAL		HADMOAN		! did we complain?
C
	CALL EXPAND('TXT/')
C
C now see if we need to add on a mirroring request
C
	IF (MIRROR.LT.0 .OR. MIRROR.GT.2) THEN
	   CALL MOAN( MSG__TXTMIRROR, MIRROR, FSN )
	ELSEIF (MIRROR.EQ.1) THEN
	   CALL APPEND('MX,')			! reflect in X
	ELSEIF (MIRROR.EQ.2) THEN
	   CALL APPEND('MY,')			! reflect in Y
	ENDIF
C
C add in the origin
C
	CALL APPEND('OR=%U%N,%U%N,%U%N,',
     &			UORX(ORI(1)),UORY(ORI(2)),UORZ(ORI(3)) )
C
C and output height and width
C
	CALL CHECK_ROOM( 2*COORD_MAX + 8 )
	CALL APPEND('%^LTH=%U%N,TW=%U%N,', HEIGHT, WIDTH )
C
C now we output our matrix - this is simply to rotate the text
C in the XY plane
C - note that "-" signs must be allowed for in the numbers, as well
C   as each comma, and also that we do not transform in Z, so these
C   values can be output explcitly
C
   	CALL CHECK_ROOM( 3 + 2*(6+1+1) + 4 )
	CALL APPEND('MA=%F6.4,%F6.4,0.0,',
     &			COS(ANGLE), SIN(ANGLE) )
C
   	CALL CHECK_ROOM( 3*(6+1+1) + 4 )
	CALL APPEND('%F6.4,%F6.4,0.0,',
     &			-SIN(ANGLE), COS(ANGLE) )
C
   	CALL CHECK_ROOM( 12 )
	CALL APPEND('0.0,0.0,1.0,')
C
C and finally the text itself
C
	CALL CHECK_CHAR( TEXT )
	CALL SIFOUT
C
	RETURN
	END
