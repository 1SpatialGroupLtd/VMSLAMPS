C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1986-10-24 16:23:34.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE USE_ST( DIM, NPTS, STBUF, PENUP, TYPE )
C
***	IDENT	24OC86
***	MODULE	USE_ST
C
C	Copyright LaserScan Laboratories Ltd., Cambridge, England
C
C Author TJ Ibbs, 4 April 1985 - abstracted from OUTPUT
C
C This routine deals with an ST or ZS entry for a linear feature
C
	IMPLICIT NONE
C
C Arguments:
C
	INTEGER		DIM		! dimension of data
	INTEGER*2	NPTS		! number of points to read
	REAL		STBUF(DIM,NPTS)	! point buffer
	LOGICAL		PENUP		! pen up/down flag
	CHARACTER*2	TYPE		! string type (open, etc)
C
C common blocks required
C
***	COMMON/HERE:SIF/
***	COMMON/HERE:SIFCOM/
C
C now, if this is a line or curve, then we must output these
C points as we find them
C
	IF ( IS_LINE.OR.IS_HOLE.OR.IS_SHAPE ) THEN
	   CALL LINE( PENUP, DIM, NPTS, STBUF, TYPE )
	ELSEIF ( IS_CURVE ) THEN
	   CALL CURVE( PENUP, DIM, NPTS, STBUF )
	ENDIF
C
C and that's all we do
C
9000	RETURN
	END                        
