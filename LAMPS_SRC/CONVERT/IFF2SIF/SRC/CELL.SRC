	SUBROUTINE CELL( DIM, NPTS, STBUF, HADRO, RO )
C
***	IDENT	25MY94
***	MODULE	CELL
C
C	Copyright LaserScan Laboratories Ltd., Cambridge, England
C
C Author TJ Ibbs, 30 January 1985
C
C Outputs a cell (symbol)
C 	- output the angle and scaling
C	- output the symbol position and name
C
	IMPLICIT NONE
C
C Arguments
C
	INTEGER		DIM		! number of dimensions
	INTEGER*2	NPTS  		! number of points in STBUF
	REAL		STBUF(DIM,NPTS)	! defining points
	LOGICAL		HADRO		! are we to use the RO entry
	REAL		RO		! angle of cell in radians
C
C common
C
	INCLUDE 'HERE:CONTROL.CMN'
***	COMMON/HERE:SIF/
***	COMMON/HERE:SIFCOM/
***	COMMON/LSL$CMNFRT:FRTCOM/
C
C workspace
C
	REAL	ANGLE		! symbol rotation
	REAL	DX,DY		! symbol point displacement
	REAL	XMIN,XMAX,YMIN,YMAX
	REAL	BASESC		! base scale size
	REAL	SCALE		! symbol scaling
C
C functions
C
	LOGICAL	SRISCN		! scan a symbol for size at scale 1.0
C
C and for STBUF
C
	INTEGER		 X,Y
	PARAMETER	(X=1,Y=2)
C
C do we have a displacement? - only consider 2 dimensions!
C
	IF ( NPTS.EQ.2 ) THEN
	   DX = STBUF(1,2)-STBUF(1,1)
	   DY = STBUF(2,2)-STBUF(2,1)
	ENDIF
C
C if we were given the RO explicitly, then use it
C
C or, if the symbol only has one defining point, output it horizontally
C
C otherwise, we have two points in STBUF, and calculate the rotation
C from them
C
	IF (HADRO) THEN
	   ANGLE = RO
	ELSEIF (NPTS.EQ.1) THEN
	   ANGLE = 0.0				! default to horizontal
	ELSE
	   IF (DX.EQ.0.AND.DY.EQ.0) THEN
	      CALL MOAN( MSG__NORO, FSN )	! points are coincident
	      ANGLE = 0.0			! force horizontal
	   ELSE
	      ANGLE = ATAN2( DY,DX )
	   ENDIF
	ENDIF
C
C and do we need a scale - yes if the symbol is scaled
C
	IF ( FRTGT.EQ.SCATYP .AND. NPTS.EQ.2 ) THEN
	   IF (DX.EQ.0.AND.DY.EQ.0) THEN
	      CALL MOAN( MSG__NODXDY, FSN )	! points are coincident
	      SCALE = 1.0			! force unit size
	   ELSE
	      IF ( SRISCN(FRTSC,XMIN,XMAX,YMIN,YMAX) ) THEN
		 CALL MOAN( MSG__SCANSYM, FRTFC, FSN )
		 SCALE = 1.0
	      ELSE
		 BASESC = SQRT( DX**2 + DY**2 )
		 SCALE  = SQRT( (XMAX-XMIN)**2 + (YMAX-YMIN)**2 )
		 SCALE  = SCALE/BASESC
	      ENDIF
	   ENDIF
	ELSE
	   SCALE = 1.0			! not a scaled symbol
	ENDIF
C
C
C Check if there were ACs in this feature, if so output the IDE and 
C ASV commands
C
	IF (HAD_AC) THEN
	   CALL SIFIDE(FSN)
	   CALL SIFASV(FSN)
	   HAD_AC = .FALSE.
	ENDIF
C
C now output what we've deduced
C
C MTX entry not required for SCITEX
C
	IF (.NOT.HAD_SCITEX) THEN
	   CALL SIFMTX( 0, ANGLE, SCALE, SCALE )
	ENDIF
	CALL SIFSYM( 0, DIM, STBUF(1,1),
     &			ANGLE, SCALE, SCALE , SIF_CELL(1:CELL_LEN) )
C
	RETURN
	END
