C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1987-12-16 16:55:38.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL FUNCTION GET_NEXT_FILE
C
***	IDENT	16DE87
***	MODULE	GET_NEXT_FILE
C
C Copyright LaserScan Laboratories Ltd., Cambridge, England
C Author TJ Ibbs, 16 December 1987
C
C This routine obtains the next file to be output.
C It prompts the user as appropriate, and/or reads filenames from
C the current INPUT_LIST
C
C It returns TRUE if we succesfully get a file to be translated, and
C FALSE if we are to stop our processing (for instance, because the
C user has responded to the prompt with <CTRL/Z>)
C
	IMPLICIT NONE
C
	INCLUDE	'LSL$CMNLSL:LSLLIBMSG.PAR'
C
C common blocks
C
***	COMMON/HERE:SIF/		! error messages & general
***	COMMON/HERE:SIFFILE/		! file names, etc
***	COMMON/LSL$CMNLSL:TXTC/		! for TXTPTR
C
C workspace
C
	LOGICAL		OK
	INTEGER		IERR
	BYTE		CH
C
C functions called
C
	LOGICAL		FLRSTR		! read a line
	LOGICAL		RDCHS		! read a character
	LOGICAL		GETFILNAM	! read a filename
	LOGICAL		TTRSTR		! prompt the user
	LOGICAL		OBEY		! interpret the response
C
C *********************************************************************
C enter our main command input loop
C
20	IF ( USE_INPUT_LIST ) THEN
C
C	 we are reading the names of the files to be output from
C	 an input list - get the next line
C
	   CALL FLRSEL( INLUNIT )		! select the right file
	   OK = FLRSTR( ,, IERR )		! and read a line
	   IF ( .NOT.OK ) THEN
	      IF ( OK.EQ.LSL__EOF ) THEN
		 CALL INFORM( MSG__ENDLIST )	! end of input list
	      ELSE
	         CALL MOAN( OK )
	         IF ( OK.EQ.LSL__SYSREAD ) CALL LSL_ADDMSG(IERR)
	      ENDIF
	      CALL FLRCLO( INLUNIT )	! close the file
	      GET_NEXT_FILE = .FALSE.	! end processing
	      GOTO 9999			! and return
	   ENDIF
C
C	 check for a blank or comment line
C
	   CALL BSLN
	   IF ( RDCHS(CH) ) GOTO 20
	   IF ( CH.EQ.'!' ) GOTO 20
C
C	 and read the filename
C
	   CALL BSLN
	   OK = GETFILNAM( FILENAME, NAMLEN, 'LSL$IF:.IFF;0', .TRUE. )
	   IF ( .NOT.OK ) THEN
	      CALL MOAN( MSG__IFFNAMERR )	! error in filename
	      CALL LSL_ADDMSG( OK )		! explain
	      CALL LSL_ADDSTR( TXTDSC )		! and show the line
	      GET_NEXT_FILE = .FALSE.		! failure - end processing
	      GOTO 9999				! return
	   ENDIF
C
	ELSE
C
C	 so we must prompt the user for a command
C
	   OK = TTRSTR( ,, 'iff2sif> ', IERR )
	   IF ( .NOT.OK ) THEN
	      IF ( OK.NE.LSL__EOF ) THEN
	         CALL MOAN( OK )
	         IF ( OK.EQ.LSL__SYSERR ) CALL LSL_ADDMSG(IERR)
	      ENDIF
	      GET_NEXT_FILE = .FALSE.	! end processing
	      GOTO 9999			! return
	   ENDIF
C
C	 if they just hit return, don't bother with anything else
C
	   IF ( TXTPTR.EQ.0 ) GOTO 20
C
C	 otherwise, read the command from the line
C	 - OBEY returns FALSE if we have been given an IFF file
C	   to output, and TRUE if we haven't.
C
	   IF ( OBEY() ) GOTO 20
C
	ENDIF
C
	GET_NEXT_FILE = .TRUE.		! we have a file to output
C
C *********************************************************************
C
9999	RETURN
	END
