C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1987-11-25 18:02:08.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL FUNCTION READRA()
C
***	IDENT	25NO87
***	MODULE	READRA
C
C	Copyright LaserScan Laboratories Ltd., Cambridge, England
C
C Author TJ Ibbs, 3 April 1985 - taken from OUTPUT
C
C This routine reads the RA entry, and tells the user how it maps into
C SIF UORs
C
C We return TRUE if we fail in some manner, in which case the IFF file
C should be abandoned
C
C We return FALSE if the rest of the IFF file can now be read
C
	IMPLICIT NONE
C
C common blocks required
C
***	COMMON/HERE:SIF/
***	COMMON/LSL$CMNIFF:IFFHAN/
C
C workspace
C
	INTEGER*2	IECODE		! IFF entry name
	INTEGER*2	IELEN		! length of that entry (-1=eof)
C
	REAL		RANGE(4)	! real range
	INTEGER*4	INTRA(4)	! integer range
	INTEGER		I		! for DO loop
C
C functions used
C
	INTEGER		UORX,UORY	! translate map coords to UORs
	LOGICAL		HADMOAN		! did we moan?
C
C *********************************************************************
C
C assume the worst
C
	READRA = .TRUE.
C
C the RAnge entry is the first thing in the IFF file...
C
	CALL IFFNXT(IECODE, IELEN)	! get next entry from IFF file
	IF (IELEN .LT. 0) THEN		! end of file
	   CALL MOAN( MSG__IFFEOF, 0 )	! unexpected - no EJ found
	   CALL MOAN( MSG__EMPTYIFF )
	   GOTO 9000			! we return with failure
	ENDIF
C
	IF (IECODE .NE. 'RA') THEN
	   CALL MOAN( MSG__NORANGE, IECODE )
	   GOTO 9000			! we return with failure
	ENDIF
C
C now, we will check that the range makes sense...
C - call HADMOAN to unset the 'moaned' flag
C
	CALL HADMOAN
C
	CALL EIHRR( RANGE, 4, 1 )
C
	INTRA(1) = UORX( RANGE(1) )
	INTRA(2) = UORX( RANGE(2) )
	INTRA(3) = UORY( RANGE(3) )
	INTRA(4) = UORY( RANGE(4) )
C
	CALL INFORM( MSG__BLANK )
	CALL INFORM( MSG__RANGE, INTRA(1),INTRA(3),INTRA(2),INTRA(4) )
	IF (HAD_OFFSET) THEN
	   CALL INFORM( MSG__OFFSETUOR, UORX(0.0), UORY(0.0) )
	ENDIF
C
	READRA    = .FALSE.		! success
C
C failure joins us here
C
9000	RETURN
	END
