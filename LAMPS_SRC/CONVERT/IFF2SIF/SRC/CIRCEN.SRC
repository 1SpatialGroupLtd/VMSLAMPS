	LOGICAL FUNCTION CIRCEN( IN1, IN2, IN3, CEN, RADIUS )
C
***	IDENT	20NO86
***	MODULE	CIRCEN
C
C Copyright Laser Scan Laboratories Limited, Cambridge, England.
C
C Author S Hancock   10 July 1984
C Adapted for IFF2SIF by TJ Ibbs, 30 January 1985
C
C To convert circumcircle definition to centre-pt, radius definition
C
	IMPLICIT NONE
C
C Arguments
C
	REAL	IN1(2),IN2(2),IN3(2)	! the original three points
	REAL	CEN(2)			! the resulting circle centre
	REAL	RADIUS			! the radius of the circle
C
***	COMMON/HERE:SIF/
C
C local variables
C
	REAL*4 	X1,Y1			! point A
	REAL*4	X2,Y2			! point B
	REAL*4 	X3,Y3			! point C
	REAL*4	DXS,DYS			! vector BA
	REAL*4	DXE,DYE			! vector BC
	REAL*4	SQDS,SQDE		! squares of vector lengths
	REAL*4 	CP			! vector product BAxBC
	REAL*4	TEMP
C
	REAL		 SQMIN		! minimum square of angle &
	PARAMETER 	(SQMIN=1.0E-4)	! radius
C
	CIRCEN=.TRUE.
	X1=IN1(1)
	Y1=IN1(2)
	X2=IN2(1)
	Y2=IN2(2)
	X3=IN3(1)
	Y3=IN3(2)
	DXS=X1-X2
	DYS=Y1-Y2
	DXE=X3-X2
	DYE=Y3-Y2
	SQDS= DXS*DXS+DYS*DYS			! square of length BA
	SQDE= DXE*DXE+DYE*DYE			! square of length BC
C
	IF(SQDS.LT.SQMIN.OR.SQDE.LT.SQMIN)THEN
	   CALL MOAN( MSG__CLOSECIRCLE, FSN )	! points too close
	   GOTO 90				! reject them
	END IF
C
	CP=DXS*DYE-DYS*DXE			! cross product
C
	IF((CP*CP).LT.(SQDS*SQDE*SQMIN))THEN
	   CALL MOAN( MSG__LINEARCIRCLE, FSN )	! points collinear
	   GOTO 90				! so reject them
	END IF
C
	TEMP=0.5/CP
	CEN(1)=X2+TEMP*(SQDS*DYE-SQDE*DYS)	! so we now know the
	CEN(2)=Y2+TEMP*(SQDE*DXS-SQDS*DXE)	! centre of the circle
C
	RADIUS = SQRT( (CEN(1)-X1)**2 + (CEN(2)-Y1)**2 )
C
	CIRCEN=.FALSE.			! finish OK
C
90	RETURN
	END
