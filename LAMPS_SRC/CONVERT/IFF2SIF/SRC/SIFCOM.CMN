C
C This common block holds the data about each feature code, and
C also about the current feature code
C It is also used to work out what level texts should go into,
C and other like details
C
C *********************************************************************
C Firstly, we define the storage for the feature code to SIF
C translation - in IFF we organise data by feature code, but SIF
C has no such concept
C
C we can have up to MAX_SIFCNT different codes, where we have
C
	INTEGER		 MAX_SIFCNT
	PARAMETER	(MAX_SIFCNT = 500)
C
C we have a table of integers, forming the main table:
C
C	1: feature code		(as used for digitising - cf FRT)
C	2: feature type		(eg LINE, SHAPE, CELL)
C	3: level
C	4: line style		(normally 0 = solid)
C	5: line weight
C	6: line colour		(or other subsidiary coding)
C	7: text font		(only used for TEXT type)
C	8: cell name length	(only used for CELL type - symbols)
C
	INTEGER		SIFINT(8,MAX_SIFCNT)
C
C and a subsidiary table of reals
C
C	1: text height		(only used for TEXT type)
C	2: text width		(only used for TEXT type)
C
	REAL		SIFFLT(2,MAX_SIFCNT)
C
C and a subsidiary character field
C
C	1: cell name		(only used for CELL type - symbols)
C
	INTEGER		 MAX_CELL_SIZ
	PARAMETER	(MAX_CELL_SIZ=20)
C
	CHARACTER*(MAX_CELL_SIZ)	SIFSTR(MAX_SIFCNT)
C
C and the number of feature codes defined is
C
	INTEGER		SIFCNT
C
C *********************************************************************
C and we have parameters to describe the different types
C
	INTEGER		LINE_TYP, SHAPE_TYP, HOLE_TYP, CURVE_TYP
	INTEGER		TEXT_TYP, CELL_TYP
	INTEGER		CIRCLE_TYP, ARC_TYP
	INTEGER		MAXTYP
C
	PARAMETER	(LINE_TYP  = 1)
	PARAMETER	(SHAPE_TYP = 2)
	PARAMETER	(HOLE_TYP  = 3)
	PARAMETER	(CURVE_TYP = 4)
	PARAMETER	(TEXT_TYP  = 5)
	PARAMETER	(CELL_TYP  = 6)
	PARAMETER	(CIRCLE_TYP= 7)
	PARAMETER	(ARC_TYP   = 8)
C
	PARAMETER	(MAXTYP    = 8)
C
C *********************************************************************
C and logicals set up to state what sort of thing we are
C
	LOGICAL		IS_LINE
	LOGICAL		IS_SHAPE
	LOGICAL		IS_HOLE
	LOGICAL		IS_CURVE
	LOGICAL		IS_TEXT
	LOGICAL		IS_CELL
	LOGICAL		IS_CIRCLE
	LOGICAL		IS_ARC
C
C *********************************************************************
C and define the current feature
C
	INTEGER		SIFIND		! pointer into arrays above
C
	INTEGER		SIF_FC		! current feature code
	INTEGER		SIF_TYP		! its feature type
	INTEGER		SIF_LEVEL	! its level
	INTEGER		SIF_STYLE	! its line style
	INTEGER		SIF_WEIGHT	! its line weight
	INTEGER		SIF_COLOUR	! its colour (or whatever)
	INTEGER		SIF_FONT	! its font	(if a TEXT)
	REAL		SIF_HEIGHT	! its height	(if a TEXT)
	REAL		SIF_WIDTH	! its width	(if a TEXT)
	CHARACTER*(MAX_CELL_SIZ)
     &			SIF_CELL	! its name	(if a CELL)
	INTEGER		CELL_LEN	! its name's length
C
C *********************************************************************
C and storage for the various point sizes
C
	INTEGER		 MAX_PTSIZ
	PARAMETER	(MAX_PTSIZ = 30)
C
	INTEGER		 PT_HT, PT_WD
	PARAMETER	(PT_HT = 1, PT_WD = 2)
C
C store the height and width for each of (up to) 30 point sizes
C
	REAL		PTSIZ(2,MAX_PTSIZ)
C
C (the values in PTSIZ are set to -1.0 if they are unset)
C
C and how do we determine our text size ?
C
	INTEGER		 USE_TH
	INTEGER		 USE_SDF
	INTEGER		 USE_PT
	PARAMETER	(USE_TH = -1, USE_SDF = 0, USE_PT = 1)
C
	INTEGER		TXTSIZ
C
C the values of TXTSIZ are as follows
C
C	USE_TH		use the size in the TH entry (in mm on sheet)
C	USE_PT		use the size in PTSIZ (from POINTSIZE in SDF)
C	USE_SDF		use the size from the SDF FC definition
C
C and our text level ?
C
	INTEGER		 USE_AC
	INTEGER		 USE_CATEGORY
	PARAMETER	(USE_AC = -1,USE_CATEGORY=-2)
C
	INTEGER		TXTLEV
C
C and the values of TXTLEV are
C
C	USE_AC		use the level in the AC entry
C	USE_SDF		use the level from the SDF FC definition
C	USE_CATEGORY	use the level from the CATEGORY definition
C
C If TXTLEV = USE_CATEGORY, we must have read some CATEGORY definitions
C from the SDF. These are stored as follows:
C
	INTEGER		 MAX_CATEGORY
	PARAMETER	(MAX_CATEGORY = 63)
C
	INTEGER		CATEGORY_LEVEL(0:MAX_CATEGORY)
C
C (values are -1 if unset)
C
C *********************************************************************
C and the common blocks themselves
C
	COMMON/SIF_STORE/ SIFINT, SIFFLT, SIFCNT
	COMMON/CHR_STORE/ SIFSTR
C
	COMMON/IS/ IS_LINE, IS_SHAPE, IS_HOLE,   IS_CURVE,
     &		   IS_TEXT, IS_CELL,  IS_CIRCLE, IS_ARC
C
	COMMON/SIF_CURRENT/ SIFIND,
     &			    SIF_FC,    SIF_TYP,    SIF_LEVEL,
     &			    SIF_STYLE, SIF_WEIGHT, SIF_COLOUR,
     &			    SIF_FONT,  SIF_HEIGHT, SIF_WIDTH,
     &			    CELL_LEN
C
	COMMON/SIF_CELL/ SIF_CELL
C
	COMMON/PT_SIZES/ PTSIZ, TXTSIZ
C
	COMMON/TEXT_LEVEL/ TXTLEV,CATEGORY_LEVEL
C
