C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1985-05-02 12:34:20.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL FUNCTION SIFFND(FC)
C
***	MODULE	SIFFND
***	IDENT	02MY85
C
C Copyright Laser Scan Laboratories Ltd., Cambridge, England.
C Adapted from FRTLIB's FRTFND, author Paul Hardy, 20 June 1983
C Written 29 January 1985 by TJ Ibbs - and later changed by
C Andrew Morris to separate out the binary-search into an
C independant subroutine FINDFC for use elsewhere in IFF2SIF.
C
C returns TRUE if it fails to find Feature Code FC in the list,
C otherwise the attributes of FC are set up in /SIFCOM/.
C
	IMPLICIT NONE
C
	INTEGER*2	FC		! Feature Code
C
***	COMMON/HERE:SIF/
***	COMMON/HERE:SIFCOM/
C
C workspace
C
	LOGICAL		ERR		! error?
C
C functions
C
	LOGICAL		FINDFC
C
C nothing to do if currently selected
C
	IF (FC.EQ.SIF_FC) GOTO 9000
C
C init things
C
	SIFFND = .TRUE.		! assume will fail
C
C find index SIFIND into SIFINT for this FC
C
	ERR = FINDFC(FC)
	IF (ERR) GOTO 9999	! if error, give up
C
C found the FC in table - set things up
C
	SIF_FC    = SIFINT(1,SIFIND)
	SIF_TYP   = SIFINT(2,SIFIND)
	SIF_LEVEL = SIFINT(3,SIFIND)
	SIF_STYLE = SIFINT(4,SIFIND)
	SIF_WEIGHT= SIFINT(5,SIFIND)
	SIF_COLOUR= SIFINT(6,SIFIND)
C
	IF ( SIF_TYP.EQ.TEXT_TYP ) THEN
	   SIF_FONT   = SIFINT(7,SIFIND)
	   SIF_HEIGHT = SIFFLT(1,SIFIND)
	   SIF_WIDTH  = SIFFLT(2,SIFIND)
	ELSEIF ( SIF_TYP.EQ.CELL_TYP ) THEN
	   CELL_LEN = SIFINT(8,SIFIND)
	   SIF_CELL = SIFSTR(SIFIND)
	   SIF_CELL = SIF_CELL(1:CELL_LEN)
	ENDIF
C
C and decide on what we IS
C
	IS_LINE   = SIF_TYP.EQ.LINE_TYP
	IS_SHAPE  = SIF_TYP.EQ.SHAPE_TYP
	IS_HOLE   = SIF_TYP.EQ.HOLE_TYP
	IS_CURVE  = SIF_TYP.EQ.CURVE_TYP
	IS_TEXT   = SIF_TYP.EQ.TEXT_TYP
	IS_CELL   = SIF_TYP.EQ.CELL_TYP
	IS_CIRCLE = SIF_TYP.EQ.CIRCLE_TYP
	IS_ARC    = SIF_TYP.EQ.ARC_TYP
C
C all set up
C
9000	SIFFND = .FALSE.		! success
C
C that's all
C
9999	RETURN
	END
