	LOGICAL FUNCTION RDPTSIZ( IN_METRES )
C
***	MODULE	RDPTSIZ
***	IDENT	07OC86
C
C Copyright Laser Scan Laboratories Ltd., Cambridge, England.
C
C Author Tony J Ibbs, 11 March 1985, adapted from original SIFINI
C
C returns FALSE if it succeeds in reading the point-size details on
C this line, and placing them in /SIFCOM/
C
	IMPLICIT NONE
C
C Arguments
C
	LOGICAL		IN_METRES	! are units metres on t'ground
C					! (input variable only)
C
***	COMMON/HERE:SIF/
***	COMMON/HERE:SIFCOM/
C
C functions called
C
	LOGICAL		RDREAL		! read a real number
	LOGICAL		RDLONG		! read a long integer
	REAL		MM_TO_METRES	! convert to metres on t'ground
C
C workspace
C
	INTEGER		POINT		! current point-size
	REAL		RNUM1,RNUM2	! real number
C
C
	RDPTSIZ = .TRUE.		! assume failure
C
C
C we have a point size definition - assume that we are at its start
C
C - so read the point size number
C
	IF ( RDLONG(POINT) ) THEN
	   CALL MOAN( MSG__BADPTSIZNUM )
	   GOTO 9000
	ELSEIF ( POINT.LT.1 .OR. POINT.GT.MAX_PTSIZ ) THEN
	   CALL MOAN( MSG__PTSIZRANGE, POINT, MAX_PTSIZ )
	   GOTO 9000
	ENDIF
C
C and now read the rest of the line...
C
C - first the height for this size
C
	IF ( RDREAL(RNUM1) ) THEN
	   CALL MOAN( MSG__BADPTARG, RNUM1 )
	   GOTO 9000
	ELSEIF ( RNUM1.LE.0.0 ) THEN
	   CALL MOAN( MSG__PTSIZNEG, RNUM1 )
	   GOTO 9000
	ELSE
	   IF ( IN_METRES ) THEN
	      PTSIZ(PT_HT,POINT) = RNUM1
	   ELSE
	      PTSIZ(PT_HT,POINT) = MM_TO_METRES(RNUM1)
	   ENDIF
	ENDIF
C
C - and then the width
C
	IF ( RDREAL(RNUM2) ) THEN
	   CALL MOAN( MSG__BADPTARG, RNUM2 )
	   GOTO 9000
	ELSEIF ( RNUM2.LE.0.0 ) THEN
	   CALL MOAN( MSG__PTSIZNEG, RNUM2 )
	   GOTO 9000
	ELSE
	   IF ( IN_METRES ) THEN
	      PTSIZ(PT_WD,POINT) = RNUM2
	   ELSE
	      PTSIZ(PT_WD,POINT) = MM_TO_METRES(RNUM2)
	   ENDIF
	ENDIF
C
	CALL DIAGNOS( MSG__PTSIZIS, POINT, RNUM1, PTSIZ(PT_HT,POINT),
     &					   RNUM2, PTSIZ(PT_WD,POINT) )
C
C and finally, we come here at the end of the line
C
	RDPTSIZ = .FALSE.		! success
C
9000	RETURN
C
	END
