C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1994-05-25 16:23:46.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE ARC( DIM, NPTS, STBUF )
C
***	IDENT	25MY94
***	MODULE	ARC
C
C	Copyright LaserScan Laboratories Ltd., Cambridge, England
C
C Author TJ Ibbs, 31 January 1985
C
C Routine to output an arc
C
	IMPLICIT NONE
C
C Arguments
C
	INTEGER		DIM		! dimension - 2 or 3
	INTEGER*2	NPTS 		! size of STBUF
	REAL		STBUF(DIM,NPTS)	! defining points
C
***	COMMON/HERE:SIF/
***	COMMON/HERE:SIFCOM/
***	COMMON/LSL$CMNFRT:FRTCOM/
C
C workspace
C
	INTEGER		SIGN		! direction of arc
C
C an arc - check that we have our three defining points
C
	IF ( NPTS.LT.3 ) THEN
	   CALL MOAN( MSG__NEEDTHREE, FSN )
	   GOTO 9999				! give up
	ENDIF
C
C a circle arc - work out which points to output
C
	IF ( FRTGT.EQ.CLOTYP ) THEN
	   SIGN = +1			! clockwise arc
	ELSEIF ( FRTGT.EQ.ANTTYP ) THEN
	   SIGN = -1			! anticlockwise arc
	ELSE
	   SIGN = 0			! circumcircle arc
	ENDIF
C
C Check if there were ACs in this feature, if so output the IDE and 
C ASV commands
C
	IF (HAD_AC) THEN
	   CALL SIFIDE(FSN)
	   CALL SIFASV(FSN)
	   HAD_AC = .FALSE.
	ENDIF
C
	CALL SIFARC( SIGN, DIM, STBUF )
C
9999	RETURN
	END
