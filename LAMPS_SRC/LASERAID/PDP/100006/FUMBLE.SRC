C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1980-02-21 12:19:54.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE FUMBLE
C
C Copyright Laser-Scan Laboratories Ltd,Cambridge,England
C Authors P.Hardy & M.C.Fulford
C
C	Created 22.v.78
C	Last edited 27/xi/79
C
C Fumble around in the dark for a line on which to start.
C
	PARAMETER MAXTRY=30
C
***	COMMON/PARAMS/
C
***	COMMON/RSE/
***	COMMON/SCCORR/
***	COMMON/SCPARM/
***	COMMON/LKPARM/
***	COMMON/LINKS/
***	COMMON/LKFOLL/
***	COMMON/DIGC/
C
C w/s
	REAL C(2)
	LOGICAL*1 GOTCHN
	INTEGER FSTCON
C
	FSTCON = 1
	BSTCON = 0
	DO 10 I = 1,MAXCON
	  NXTBST(I) = 0
10	  CONTINUE
	CALL CSRD(C(X),C(Y))
	GOTCHN = .FALSE.
C
C do first try with default type
	CALL PARIO(4,LTYPE)
C
C try several times going upwards
	DO 40 NTRY=1,MAXTRY
C
C scan in both directions
	  DO 30 L=1,2
	    IU=L
	    IV=3-IU
	    IDIR=2-IU
	    WID=IWID*CR(IV)*WAR
	    ID(IV)=0
	    ID(IU)=WID
	    CALL DISMOD(0)
	    START(IU)=C(IU)-WID/2.
	    START(IV)=C(IV)
	    CALL MOVETO(START(X),START(Y))
C now set up and do scan
	    CALL SCANBY(ID(X),ID(Y),1)
	    NEGOT = 0
	    RSEOFF(X) = 0
	    RSEOFF(Y) = 0
	    CALL SCSET(0)
C chain and grow
	    CALL SETCHN
	    CALL GROW(CHWT,RGROW,IU,IV,EDGING)
C convert to lists
	    CALL CHNLST
C examine chains
	    DO 20 I=1,MAXCHN
	      IF(CHAIN(I).EQ.0) GOTO 20
	      IF(LENGTH(I).LE.LIMIT(5)) GOTO 20
	      QUALTY(FSTCON) = LENGTH(I)*IPIT*WGHT(1)
	      CONNCT(1,FSTCON) = 0
	      CONNCT(2,FSTCON) = I
	      GOTCHN=.TRUE.
C choose start point of chain
	      CONNCT(3,FSTCON) = 1
	      IF(NEBUF(L+1,NODE(FIRST(J))).LE.
     *    INT(WID-FLOAT(NEBUF(L+1,NODE(LAST(J)))))) CONNCT(3,FSTCON) = 2
	      CONNCT(4,FSTCON) = 4
	      CALL ADDASS(NXTBST,QUALTY,BSTCON,FSTCON,1)
20	      CONTINUE
	    IF (GOTCHN) GOTO 50
C
30	    CONTINUE      ! end loop for two scans
	  CALL FBRD(N)
	  IF(N.EQ.16) GOTO 50
	  IF(NTRY.EQ.1) CALL PARIO(4,PTYPE)  ! widen scan area
	  IF(NTRY.GT.1) C(Y)=C(Y)+WID  ! go upwards by one scan width
40	  CONTINUE
C
C put us at position found
50	CALL CSWT(START(X),START(Y))
C and set up next scan
	NEXT(X)=START(X)
	NEXT(Y)=START(Y)
C set type back to line default
	CALL PARIO(4,LTYPE)
C set up assessment of situation
	SCAN = .FALSE.
	VERY = BSTCON.LE.0
	CNFSED = FSTCON .GT. 2
	NOTAPP = .FALSE.
	LOST = VERY
C set up context for LINK
	SCNND = .TRUE.
	GROWN = .TRUE.
	LISTED = .TRUE.
	FORKED = .FALSE.
	ASSED = .TRUE.
C and a command number
	FRKCOM = 1
	IF (VERY.OR.CNFSED) FRKCOM = 7
C
	RETURN
C
	END
