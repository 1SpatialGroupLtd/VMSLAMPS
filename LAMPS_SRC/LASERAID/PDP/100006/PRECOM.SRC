C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1980-02-21 11:44:38.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	INTEGER FUNCTION PRECOM
C
C Copyright Laser-Scan Laboratories Ltd,Cambridge,England
C
C Author M.C.Fulford
C
C	Created  5.vi.78
C	Last edited 10/vii/79
C
C To hand back the next command from the pre-digitisings file
C Result:
C	+n - command (as from RDCOMM)
C	 0 - minor error,continue, file's open
C	-1 - text in TXTBUF for RDCOMM
C	-2 - EJ,eof or error, file's closed
C
***	COMMON/PARAMS/
C
	PARAMETER MAXNIE = 18
C
***	COMMON/MASTER/
***	COMMON/TEXTC/
***	COMMON/IFFHAN/
***	COMMON/GUIDE/
***	COMMON/MAINC/
***	COMMON/COEFFS/
C
C function(s)
	LOGICAL SETOVR
C
C workspace
	REAL CUR(2)	! cursor position
	REAL AGUIDE(0:3),BGUIDE(0:3) ! CP polynomials
	REAL APGUID(0:3),BPGUID(0:3)
	INTEGER NEWOVR	! layer number
	LOGICAL*1 MARKED! if an entry is marked
	INTEGER NPTS	!  no. of points in feature
	REAL PREPOS(2)	! accumulated points in feature
	INTEGER IELIST(MAXNIE)
	INTEGER CODLST(7)
C these entries match commands in /MAINC/ (CMDPST.MAC)
	DATA  IELIST/'NS', 'TC', 'CH', 'NO', 'SS',
     *               'SL', 'NF', 'FS', 'TH', 'ST',
     *               'EF', 'EO', 'CC', 'CP', 'RA',
     *               'EJ', 'MD', 'VO'/
C command names corresponding to some of the above entries
	DATA CODLST/3RID ,3RTC ,3RMPS,3ROV ,3RSS ,
     *              3RPT ,3RNF /
C
C
	NEWOVR = -1
	CALL IFFSEL(SAVLUN)
	CALL RFSTOP
C
5	CALL IFFNXT(IECODE,IELEN)
	IF (SKPGUD .NE. 0) GOTO 30
	IF (IELEN .LT. 0) GOTO 170
	CALL EIHMK(1)		! for error recovery in 'SKIP' command
	DO 10 I = 1,MAXNIE
	  NIE = I
	  IF (IELIST(I).EQ.IECODE) GOTO (110,110,110,120,120,
     *                                    120,120,130,  5,140,
     *                                    150,  5,  5,  5,  5,
     *                                    170,  5,  5),NIE
10	  CONTINUE
C couldn't find an entry
	CALL WRITEF(' Unknown code "%C" in guidance file',IECODE)
	PRECOM = 0
	USEGUD = .FALSE.
	GOTO 900
C
C skipping to specified NF
C
30	IF (IELEN .LT. 0) GOTO 38	! end of file
	IF (IECODE .EQ. IELIST(4)) GOTO 34	! NO
	IF (IECODE .EQ. IELIST(7)) GOTO 36	! NF
	GOTO 5					! ignore all others
C NO - remember layer number
34	CALL EIHRI (NEWOVR, 1, 1)
	GOTO 5
C NF - is it "our" feature ?
36	CALL EIHRI (INTARG, 1, 1)
	IF (INTARG .NE. SKPGUD) GOTO 5		! if not
	SKPGUD = 0				! unset skipping
	IF (NEWOVR .GE. 0) EOP = SETOVR(NEWOVR,.TRUE.)	! set new layer
	NIE = 7					! NF command number
	GOTO 120
C end of file
38	CALL WRITEF('Unable to find NF %N%C',SKPGUD,7)
	MARKED = LPOSM.NE.0
	IF (   MARKED  ) CALL IFFRWM
	IF (.NOT.MARKED) CALL IFFRWD
	PRECOM = 0
	SKPGUD = .FALSE.
	USEGUD = .FALSE.
	GOTO 900
C
C NS,CH,TC
C
110	CALL EIHR(TXTBUF(1),IELEN,1)
	TXTPTR = IELEN*2
	IF (TXTBUF(TXTPTR).NE.0)TXTPTR= TXTPTR+1
	TXTBUF(TXTPTR) = 0
	DCPTR = 0
	CALL WRITEF('%5 %S',CODLST(NIE),TXTBUF(1))
	PRECOM = FLMGCM+NIE-1
	ITGUD = -1
	GOTO 900
C
C NO,SS,SL,NF
C
120	CALL EIHRI(INTARG,1,1)
	IF (NIE.EQ.4 .AND. INTARG.EQ.CNROVR) GOTO 124
	IF (NIE.EQ.7 .AND. INTARG.EQ. 0) GOTO 126
	NUMINT = 1
	PRECOM = FLMGCM+NIE-1
	CALL WRITEF('%5%N',CODLST(NIE),INTARG)
	HADPOS = .FALSE.
	ITGUD = -1
	NPTS = 0
	PREPOS(X) = 0
	PREPOS(Y) = 0
	GOTO 900
C ignore corner tick overlay
124	CALL IFFNXC('EO',IELEN)
	GOTO 5
C ignore NF 0
126	CALL IFFNXC('EF',IELEN)
	GOTO 5
C
C FS
C
130	CALL EIHRI(N,1,1)
	IF (N.LT.0 .OR. N.GT.MAXITF) GOTO 135
	ITGUD = GUDITF(N)
	IF (ITGUD .GT. 0) GOTO 5
	CALL WRITEF('IT %N not in table%C',N,7)
	GOTO 5
C
135	CALL WRITEF('Illegal IT %N in guidance file%C',N,7)
	GOTO 5
C
C ST
C
140	HADPOS = .TRUE.
	CALL EIHRS(N,I)
	DO 145 I = 1,N
	  NPTS = NPTS+1
	  CALL EIHRR(CUR(1),2,(I-1)*4+1)
	  CALL GETAB(CPTS(3,1), AGUIDE(0), BGUIDE(0))
	  CALL GETAB(CPTS(1,1), APGUID(0), BPGUID(0))
	  CALL AB4TRN(AGUIDE(0),BGUIDE(0),
     *        APGUID(0),BPGUID(0),2,CUR(X),CUR(Y))
	  PREPOS(X) = PREPOS(X)+CUR(X)
	  PREPOS(Y) = PREPOS(Y)+CUR(Y)
145	  CONTINUE
	GOTO 5
C
C EF
C
150	PRECOM = 0
	USEGUD = .FALSE.
	IF (HADPOS) CALL CSWT(PREPOS(X)/NPTS, PREPOS(Y)/NPTS)
C see about auto-start
	IF (ITGUD .GT. 0 .AND.
     *      GUDTIM.GT. 0 .AND.
     *      FASTEF) QUECOM = ITGUD
	QUETIM = GUDTIM
	GOTO 900
C
C EJ or eof
C
170	CALL WRITEF(' End of guidance file %S',GUDNAM(1))
	CALL IFFCLO(SAVLUN)
	USEGUD = .FALSE.
	FASTEF = .FALSE.
	GUDOPN = .FALSE.
	ITGUD = -1
	PRECOM = -2
C
C
900	CALL IFFSEL(IFFLUN)
	RETURN
	END
