C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1980-07-22 17:20:18.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE CHKFID(FIDERR)
C
C Copyright Laser-Scan Laboratories Ltd, Cambridge, England
C Author Martin Fulford
C
C 	Original 8.xi.76
C	Converted from old CORNER routine 16.July.80
C	Last modified 22/July/80
C
***	COMMON/PARAMS/
C
	LOGICAL*1 FIDERR        ! .TRUE. if fid out of range
C
***	COMMON/DIGC/
***	COMMON/MASTER/
***	COMMON/COEFFS/
***	COMMON/TEXTC/
***	COMMON/SCPARM/
***	COMMON/GRPARM/
C
C w/s
	REAL CUR(2),CT(2)
	INTEGER CWD
	LOGICAL*1 CURSED,OUTSAV,FND,CLRED
C command table:
	EXTERNAL NULLCM
C
C function:
	INTEGER RDCOMM
C
	CALL CSRD(CT(X), CT(Y))
	CLRED = .TRUE.
	CALL FBWT16("100212)
	CURSED = .FALSE.
**	IF	\OSGRID
	FIDPOS(X) = CPTS(X,NFID)
	FIDPOS(Y) = CPTS(Y,NFID)
**	ENDC
	CUR(X) = FIDPOS(X)
	CUR(Y) = FIDPOS(Y)
	CALL CSWT(CUR(X),CUR(Y))
	GOTO 50		! try automatically
C
10	CALL DISMOD(1)
	IF (.NOT.CURSED) GOTO 20
	CALL MOVTO(CUR(X), CUR(Y))
	CALL PLTCHR(0)
20	CALL CURSOR
30	DCPTR = -1
	TXTPTR = -2
C Read from FBs or keyboard
	CWD = RDCOMM(NULLCM)
	IF (CWD.LE.0) GOTO 30
C FB pressed
	GOTO (30, 50, 30, 60,
     *        30, 30, 30, 40,
     *        30, 30, 30, 30,
     *        30, 30, 30, 80), CWD
	GOTO 30
C measure
40	CALL PARIO(4,PTYPE)
	CALL FAX(.TRUE.,IWID,IPIT)
	CALL CSRD(CUR(X),CUR(Y))
	CURSED = .TRUE.
	CLRED = .TRUE.
	GOTO 10
C Measure the corner automatically
C
50	OUTSAV = GRDOUT
	GRDOUT = .FALSE.
	CALL PARIO(4,FIDTYP)
	CALL CSRD(CUR(X),CUR(Y))
	CALL FIDFND(CUR,CUR,FND,.FALSE.)
	GRDOUT = OUTSAV
	CURSED = FND
	IF (.NOT.FND) CALL WRITEF('Can''t find corner %C',7)
	CALL CSWT(CUR(X),CUR(Y))
	IF (CURSED) GOTO 70
	GOTO 10
C
C Accept digitisation
60	IF (.NOT. CURSED) CALL CSRD(CUR(X),CUR(Y))
C 
C Test check fiducial results
70	CUR(X) = CUR(X)-FIDPOS(X)
	CUR(Y) = CUR(Y)-FIDPOS(Y)
	CALL WRITEF('Fiducial error %F10.1,%F10.1',CUR(X),CUR(Y))
	FIDERR = ABS(CUR(X)).GT.FIDMAX .OR. ABS(CUR(Y)).GT.FIDMAX
	IF (FIDERR) CALL WRITEF('Fiducial error limit exceeded')
	GOTO 90
C
C Aborted
80	CALL MSG('Aborted')
C
90	CALL PARIO(4,LTYPE)
	CALL CSWT(CT(X),CT(Y))
	RETURN
C
	END
