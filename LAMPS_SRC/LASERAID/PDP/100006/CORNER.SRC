C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1980-10-30 14:53:56.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE CORNER(FIDERR)
C
C Copyright Laser-Scan Laboratories Ltd, Cambridge, England
C Authors Paul Hardy & Martin Fulford
C
C 	Written 8.xi.76
C	Last modified 4/vi/79
C
***	COMMON/PARAMS/
C
	INTEGER CMD		! what to do:
C					1 - measure CPs
C					2 - measure check fid
	LOGICAL*1 FIDERR        ! .TRUE. if fid out of range
C
***	COMMON/DIGC/
***	COMMON/NUMC/
***	COMMON/LKPARM/
***	COMMON/MASTER/
***	COMMON/COEFFS/
***	COMMON/TEXTC/
***	COMMON/SCPARM/
***	COMMON/GRPARM/
C
C w/s
	REAL CX(4),CY(4),CUR(2),R,CTMP(4,4)
	INTEGER KYLIST(4)	! oppposite corners in Y
	INTEGER NEWS(4)		! names of corners
	INTEGER RC,NREAL,RDCOMM,CWD,IPITSV,IWIDSV
	LOGICAL*1 RDREAL,CURSED,OUTSAV,FND,CLRED
	LOGICAL*1 HADLIN
C
C command table:
	EXTERNAL NULLCM
C
C data:
	DATA KYLIST/2,1,4,3/
	DATA NEWS/2HNW, 2HSW, 2HSE, 2HNE/
	DATA CX/-45000.,-45000.,45000.,45000./
	DATA CY/30000.,-30000.,-30000.,30000./
C until we arrange things better:
	CMD = 1
	IF (NFID .NE. 0) CMD = 2
C
	CALL RDABO
	IF (CMD.EQ.1) CALL TXCLR
	HADLIN = .FALSE.
	CLRED = .TRUE.
	CALL FBWT16("100212)
C
	DO 170 I = 1,4
	  IF (CMD.EQ.2.AND.NFID.NE.I) GOTO 170
	  CURSED = .FALSE.
	  NREALS = 0
 
	  DO 10 J = 1,4
10	    CTMP(J,I) = CPTS(J,I)
	  IF (CMD.EQ.2) GOTO 40
	  IF (I.EQ.1 .OR. .NOT.CLRED) GOTO 30
	  CALL RDABO
	  CALL TXCLR
	  HADLIN = .TRUE.
	  DO 20 KK = 1,I-1
	    CALL WRITEF('%C %F10.0%F10.0%F12.3%F9.3',NEWS(KK),
     *	             CTMP(1,KK),CTMP(2,KK),CTMP(3,KK),CTMP(4,KK))
20	    CONTINUE
30	  IF (.NOT.HADLIN) CALL WRITEF(' ')
	  CALL WRITEF('%$%F9.3 %F9.3  ?  ',CTMP(3,I),CTMP(4,I))
	  CLRED = .FALSE.
	  HADLIN = .FALSE.
40	  IF (.NOT.CPGOT) GOTO 50
	  CUR(X) = CTMP(X,I)
	  CUR(Y) = CTMP(Y,I)
	  IF (I.EQ.1 .OR. CMD.EQ.2) GOTO 60
	  CUR(X) = CUR(X)+(CTMP(X,I-1)-CPTS(X,I-1))	! add last error
	  CUR(Y) = CUR(Y)+(CTMP(Y,I-1)-CPTS(Y,I-1))
	  GOTO 60
50	  CUR(X) = CX(I)
	  CUR(Y) = CY(I)
60	  CALL CSWT(CUR(X),CUR(Y))
	  IF (CPGOT) GOTO 150  ! try automatically
C
70	  CALL DISMOD(1)
	  CALL CURSOR
80	  DCPTR = -1
	  TXTPTR = -2
C Read from FBs or keyboard
	  CWD = RDCOMM(NULLCM,NNULLC)
	  IF (CWD) 100,90,130
C Nothing or error
90	  HADLIN = .TRUE.
	  IF (DCPTR.LT.0) GOTO 80
	  CALL MSGF('Just number please')
	  GOTO 80
C Number typed
100	  DCPTR = 1
	  CLRED = .TRUE.
	  HADLIN = .TRUE.
110	  IF (NREALS.EQ.2) GOTO 120
	  HADDOT = RDREAL(R)
	  NREALS = NREALS+1
	  CTMP(NREALS+2,I) = R
	  IF (DCPTR.LT.TXTPTR) GOTO 110
	  GOTO 80
C too many reals
120	  CALL MSGF('Too many reals')
	  GOTO 80
C FB pressed
130	  IF (CWD.EQ.16) GOTO 350
	  IF (CWD.EQ. 8) GOTO 140
	  IF (CWD.EQ.2) GOTO 150
	  IF (CWD.EQ.4) GOTO 160
	  GOTO 80
C measure
140	  CALL PARIO(4,PTYPE)
	  CALL FAX(.TRUE.,IWID,IPIT)
	  CALL CSRD(CUR(X),CUR(Y))
	  CURSED = .TRUE.
	  CLRED = .TRUE.
	  RC = 0
	  GOTO 70
C Measure the corner automatically
C
150	  OUTSAV = GRDOUT
	  GRDOUT = .FALSE.
	  CALL PARIO(4,FIDTYP)
	  CALL CSRD(CUR(X),CUR(Y))
	  CALL FIDFND(CUR,CUR,FND,.FALSE.)
	  GRDOUT = OUTSAV
	  CURSED = FND
	  IF (.NOT.FND) CALL WRITEF('Can''t find corner %C',7)
	  CALL CSWT(CUR(X),CUR(Y))
	  IF (CURSED.AND.CMD.EQ.2) GOTO 340
	  GOTO 70
C
C Accept digitisation
160	  IF (.NOT. CURSED) CALL CSRD(CUR(X),CUR(Y))
	  IF (CMD.EQ.2) GOTO 340   ! fiducial check
	  CTMP(1,I) = CUR(X)
	  CTMP(2,I) = CUR(Y)
	  CALL DISMOD(0)
	  IF (CPTHIK .LT. 0) GOTO 170
	  CALL THICK(CPTHIK)
	  CALL MOVTO(CUR(X)-500.,CUR(Y))
	  CALL LINBY(1000.,0.)
	  CALL MOVTO(CUR(X),CUR(Y)-500.)
	  CALL LINBY(0.,1000.)
	  CALL THICK(0.0)
170	  CONTINUE
C
C 'ACCEPT' puts CP into IFF
C
C  First show what we've got
180	CALL RDABO
	CALL TXCLR
	DO 190 I = 1,4
	  CALL WRITEF('%C %F10.0%F10.0%F12.3%F9.3',NEWS(I),
     *	                CTMP(1,I),CTMP(2,I),CTMP(3,I),CTMP(4,I))
190	  CONTINUE
C if repeat cp then print shifts
	IF (.NOT.CPDONE) GOTO 210
	CALL WRITEF('Shift since last CP')
	DO 200 I = 1,4
	  CALL WRITEF('%C %F10.0%F10.0',NEWS(I),
     *                  CTMP(1,I)-CPTS(1,I),CTMP(2,I)-CPTS(2,I))
200	  CONTINUE
C And ask question
210	CALL MSG('OK?')
	CALL DISMOD(1)
	CALL CURSOR
	CALL FBWT16("100010)
220	DCPTR = -1
	TXTPTR = -2
	CWD = RDCOMM(NULLCM,NNULLC)
	IF (CWD .EQ.  4) GOTO 230
	IF (CWD .EQ. 16) GOTO 350
	GOTO 220
C accepted so update CPTS
230	DO 240 I = 1,4
	  DO 240 J = 1,4
240	    CPTS(J,I) = CTMP(J,I)
C And tick coordinates
250	IF (TIKSIZ .LT. 0) GOTO 290
	DO 280 J = 1,4
	  KX = 5-J
	  KY = KYLIST(J)
	  DO 270 I = 1,3
	    TX = CTMP(X,J)
	    TY = CTMP(Y,J)
	    IF (I .EQ. 2) GOTO 260
	    K = KX
	    IF (I .EQ. 3) K = KY
	    DX = CTMP(X,K) - CTMP(X,J)
	    DY = CTMP(Y,K) - CTMP(Y,J)
	    R = SQRT(DX*DX + DY*DY)
	    TX = TX + DX*(TIKSIZ/R)
	    TY = TY + DY*(TIKSIZ/R)
260	    TICKS(X,I,J) = TX
	    TICKS(Y,I,J) = TY
270	    CONTINUE
280	  CONTINUE
290	CPDONE = .TRUE.
	EOP = .TRUE.	! start a new section with these CPs
	IF (INOVER) CALL IFFEO ! closing any open overlay
	INOVER = .FALSE.
	CPGOT = .TRUE.
	CALL WRITEF('CP Done')
C read in check fiducial info
	CALL FBWT16(0)
300	CALL PROMRD('Which corner as fiducial (1-4) ?  ')
	IF (INTARG .LT. 0) GOTO 330	! no change
	NFID = INTARG
	IF (NFID.EQ.0) GOTO 360		! none
	IF (NFID.GT.4) GOTO 300		! ditto
310	CALL PROMRD('Every how many features ?  ')
	NFIDNF = INTARG
	IF (NFIDNF.LE.0) GOTO 310
320	CALL PROMRD('Maximum permitted error ?  ')
	IF (INTARG.LE.0) GOTO 320
	FIDMAX = INTARG
330	CALL WRITEF('Fid %N every %N feature%m with error limit %F0.1',
     *	        NFID,NFIDNF,FIDMAX)
	GOTO 360
C 
C Test check fiducial results
340	CUR(X) = CUR(X)-CPTS(X,NFID)
	CUR(Y) = CUR(Y)-CPTS(Y,NFID)
	CALL WRITEF('Fiducial error %F10.1,%F10.1',CUR(X),CUR(Y))
	FIDERR = ABS(CUR(X)).GT.FIDMAX .OR. ABS(CUR(Y)).GT.FIDMAX
	IF (FIDERR) CALL WRITEF('Fiducial error limit exceeded')
	GOTO 360
C
C Aborted
350	CALL MSG('Aborted')
C
360	CALL PARIO(4,LTYPE)
	RETURN
C
	END
C
	SUBROUTINE PROMRD(PROMPT)
C routine to put out a prompt and read an integer
***	COMMON/TEXTC/
C
	LOGICAL*1 PROMPT(80)
	INTEGER CWD,RDCOMM
C
	EXTERNAL NULLCM
C
10	CALL WRITEF('%$%S',PROMPT)
	DCPTR = -1
	TXTPTR = -2
20	CWD = RDCOMM(NULLCM,NNULLC)
	IF (CWD)50,30,20
C nothing or error
30	IF (DCPTR.LT.0) GOTO 40
	CALL MSGF('Just number please')
	GOTO 10
C nothing
40	INTARG = -1
C number
50	RETURN
	END
