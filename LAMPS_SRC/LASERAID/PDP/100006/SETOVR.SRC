C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1980-02-21 12:53:06.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL FUNCTION SETOVR (NOVER,TYPE)
C
C Copyright Laser-Scan Laboratories Ltd,Cambridge,England
C
C Author M.C.Fulford
C
C	Created 15.i.79
C	Last edited 17/i/79
C
C Set up for layer NOVER, creating a new layer if none exists. In 
C the event of an error, a message is output. OVRNUM in /DIGC/ is
C set if operation is successful, otherwise it is set to -1. Result
C of function is "operation successful">
C
***	COMMON/PARAMS/
C
	INTEGER NOVER		! number of new layer
	LOGICAL*1 TYPE		! type out conformation
C
***	COMMON/MASTER/
***	COMMON/DIGC/
C
C
	OVRNUM = -1
	SETOVR = .FALSE.
	IF (NOVER .GT. 0) GOTO 5
	CALL WRITEF('Illegal layer number %N%C',NOVER,7)
	GOTO 90
C
5	DO 10 I = 1,MAXOVR
	  J = I
	  IF (OVRLAY(I) .EQ. NOVER) GOTO 30
	  IF (OVRLAY(I) .LT.   0  ) GOTO 20
10	  CONTINUE
	CALL WRITEF('No room for layer %N%C',NOVER,7)
	GOTO 90
C create a new layer
20	OVRLAY(J) = NOVER
	FNUM  (J) = 1
	IF (TYPE) CALL WRITEF('Layer %N created & selected',NOVER)
	GOTO 40
C select an existing layer
30	IF (TYPE) CALL WRITEF('Layer %N selected',NOVER)
40	OVRNUM = J
	SETOVR = .TRUE.
C
90	RETURN
	END
