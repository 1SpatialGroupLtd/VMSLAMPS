	SUBROUTINE SCHECK
C
C Copyright Laser-Scan Laboratories Ltd,Cambridge,England
C
C Author M.C.Fulford
C	Last edited 06/Aug/80
C
C To use PEER  to examine and set up the digtiser's behaviour
C  and to adjust parameters in /SCPARM/ & /SCCORR/
C
***	COMMON/PARAMS/
C
	PARAMETER NCHKFB=22	! number of non-setting commands
	PARAMETER SPOTSZ = 15.	! spot size in microns
C
***	COMMON/SCPARM/
***	COMMON/CHKC/
***	COMMON/DIGC/
***	COMMON/MASTER/
***	COMMON/TEXTC/
***	COMMON/SCCORR/
C
C Arrays equivalenced to /SCPARM/
	INTEGER NSCP(10)
	EQUIVALENCE (IMOD,NSCP(1))
C and /SCCORR/
	REAL RSCC(9),PH(2),SP(2)
	EQUIVALENCE (WAR,RSCC(1))
	EQUIVALENCE (PH,PHX),(SP,SPX)
C
	INTEGER CWD,RDCOMM,PHPAR(2),TYPE,LSTWID,NLIN
	REAL ST(2),PHASE,SEPL(2),VSTX,VSTY
	INTEGER ID(2)
	LOGICAL*1 WHLINE
C
	DATA PHPAR/3RPHX,3RPHY/
C
	WHLINE = .FALSE.
C
C clear refresh picture
C
10	NQUIT = 1
	DCPTR = -1
	TXTPTR = -2
15	CALL DISMOD(1)
	CALL CURSOR
C refresh loop
20	CALL FBWT16("114637)
	CWD = RDCOMM(CHKCM(1))
	IF (CWD) 10,30,60
C end of args or error
30	IF (DCPTR .LT. 0) GOTO 20
	GOTO 10

C DEAL WITH COMMANDS

60	IF (CWD .GT. NCHKFB) GOTO  500
	N = 0
	GOTO (100,202,209,800,
     *        110, 20, 20,450,
     *        203, 20, 20,450,
     *        204, 20, 20,800,
     *        400,208,207,713,420,430),CWD

C START OF MOVE

100	CALL CSRD(ST(X),ST(Y))
	CALL DISMOD(1)
	CALL MOVTO(ST(X),ST(Y))
	CALL LINTOC
	NQUIT = 2
	WHLINE = .FALSE.
	GOTO 20

C phase graph
110	TYPE=1
	LSTWID=-1
	GOTO 201

C Phase and threshold graphs

209	N = N+1		! white line
208	N = N+1		! error
207	N = N+1		! S/W phase
	N = N+2
204	N = N+1		! focus
203	N = N+1		! threshold
202	N = N+1		! OF() & CR()
201	N = N+1		! H/W phase

200	IF (NQUIT .EQ. 1) GOTO 230
	CALL CSRD(XE,YE)
	ID(X) = XE-ST(X)
	ID(Y) = YE-ST(Y)
230	IF (ID(X).EQ.0.AND.ID(Y).EQ.0) GOTO 239
	IF (N .EQ. 8) GOTO 300
	IF (N .EQ. 9) GOTO 310
240	IF(N.NE.1.OR.WHLINE) GOTO 250
	CALL PARIO(4,TYPE)
	IPIT=5
	IF(IWID.EQ.LSTWID) GOTO 350
250	IF (N.EQ.2.AND..NOT.WHLINE) GOTO 239
	CALL PEER(N,ST(X),ST(Y),ID(X),ID(Y),IV)
	PHASE=PH(IV)
	IF(N.EQ.1.AND..NOT.WHLINE) GOTO 350  ! phase for all types
	GOTO 10

239	CALL WRITEF('Bad vector')
	GOTO 10

C Check information from digitiser
C keep looking until an error is found, or FB16 pressed.

300	CALL CHKINF(ST(1),ID(1),NERRS)
	IF (NERRS .EQ. 0) GOTO 300
	GOTO 10


C Draw white line

310	CALL DISMOD(0)
	IDIR = 0
	IF (IABS(ID(Y)) .LT. IABS(ID(X))) IDIR = 1
	IV = IDIR+1
	IU = 3-IV
	SEPL(IU) = 0.
	SEPL(IV) = SPOTSZ
	NLIN = IWID*CR(IV)*WAR/SPOTSZ
C Parameters for white line on P/C set up now
	DO 315 I = 1,2
	VSTX = ID(X)*2.
	VSTY = ID(Y)*2.
	CALL MOVETO(ST(X)-ID(X)/2.+SEPL(X)*3.,
     &                   ST(Y)-ID(Y)/2.+SEPL(Y)*3.)
	DO 312 J = 1,NLIN
	CALL DRAWBY(VSTX,VSTY)
	CALL MOVEBY(SEPL(X),SEPL(Y))
	VSTX = -VSTX
	VSTY = -VSTY
312	CONTINUE
	SEPL(IV) = -SEPL(IV)
315	CONTINUE
C
	WHLINE = .TRUE.
	GOTO 10
C
C White line drawn


C phase for all types

350	INTARG=PHPAR(IV)     ! either PHX or PHY
	CALL PARIO(5,NPH)    ! find type slot
	CALL PARIO(6,NPH)    ! download that slot
	REALAR(TYPE)=PHASE   ! update it
	CALL PARIO(2,NPH)    ! and write back
	TYPE=TYPE+1
	LSTWID=IWID
	IF(TYPE.LE.MAXTYP) GOTO 240  ! try with other types
	CALL PARIO(4,LTYPE)  ! set back to default
	GOTO 10

C ADJUST REFRESH

400	CALL RFAJST
	GOTO 20

C Set current line type

420	LTYPE=INTARG
	CALL PARIO(4,LTYPE)
	GOTO 20

C print type tables

430	CALL PARIO(3,0)
	GOTO 20

C FACSIMILE

450	CALL FAX(CWD .EQ. 8,IWID,IPIT)
	GOTO 10

C PARAMETER SETTING COMMANDS

500	N = CWD-NCHKFB
	IF (N .LE. 10) GOTO 600
	N = N-10
	IF (N .LE. 9) GOTO 610
	N = N-9
	IF (N .LE. 1) GOTO 620
	GOTO 10

C SET /SCPARM/
600	NSCP(N) = INTARG
	GOTO 20
C SET /SCCORR/
610	RSCC(N) = REALA1
	GOTO 20
C /MASTER/
620	REDFOC = INTARG
	CALL DISMOD(0)
	CALL FLEVEL(REDFOC)
	GOTO 15
C write /SCPARM/ & /SCCORR/
713	CALL WRITEF(
     *   'MOD %N FRQ %N WID %N PIT %N WLO %N TLO %N TSW %N TMS %N',
     *   IMOD,IFRQ,IWID,IPIT,IWLO,ITLO,ITSW,ITMS)
	CALL WRITEF('WAR %F6.2 CRX %F6.2 CRY %F6.2 FLE %N',
     *     WAR,CRX,CRY,REDFOC)
	CALL WRITEF(
     *    'OFX%F5.1 OFY%F5.1  PHX%F6.2 PHY%F6.2 SPX%F6.2 SPY%F6.2',
     *              OFX,OFY,PHX,PHY,SPX,SPY)
	GOTO 20
C

800	RETURN
	END
