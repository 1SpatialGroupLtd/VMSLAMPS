C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1980-08-05 11:15:10.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE FIDFND(EXP,FD,FOUND,INFO)
C
C Fiducial finding routine
C Written by M.C.Fulford
C
C	Last edited 3/x/78
C
***	COMMON/PARAMS/
C
	REAL EXP(2),FD(2)
	LOGICAL FOUND,INFO
C
***	COMMON/GRPARM/
***	COMMON/RSE/
***	COMMON/SCCORR/
***	COMMON/SCPARM/
C
C Expected position in EXP(X),EXP(Y)
C   Actual position in FD(X),FD(Y) (if found)
C Modified to deal with T-junctions and corners.
C
	LOGICAL  MUL
	REAL C0(2),C1(2),SRCH(2),GOFF(2)
	INTEGER ID(2),NFD
	REAL FDLIST(2,20)
C
	LOGICAL LINFIT
C number of scans in each vector:
	DATA  NSCANS/50/
C
C
	CALL DISMOD(0)
	GOFF(X) = 0.0
	GOFF(Y) = 0.0
	FD(X) = EXP(X)
	FD(Y) = EXP(Y)
	MAGIC4 = ISCAT
	NFD = 0
C Repeat whole process several times
	DO 850 ITHING=1,IGREP+IGRAVE
C IWID & IPIT should really be inverse functions of ITHING
C Search for lines in both axes
	DO 800 IAXIS=1,2
C Set up scan vector
	MAGIC1 = IMIN0(NESIZE,NSCANS)
	EXPHIT = MAGIC1
	MAGIC1 = MAGIC1*IPIT
	ID(IAXIS) = MAGIC1
	ID(3-IAXIS) = 0
	CALL SETDIR(ID,IDIR,IU,IV)
	KWIDTH = IWID*WAR*CR(IV)*0.75
	MAGIC2 = (MAGIC1*1.0)/KWIDTH+1.0
C Actual search loop
	DO 100 ISRCH=1,MAGIC2
	  IOFF = ISRCH/2
	  IOFF = IOFF*KWIDTH
	  IF (MOD(ISRCH,2) .EQ. 0) IOFF = -IOFF
C Move start point about
	  SRCH(X) = FD(X)-ID(X)/2
	  SRCH(Y) = FD(Y)-ID(Y)/2
	  SRCH(IAXIS)   = SRCH(IAXIS)+GOFF(IAXIS)
	  SRCH(3-IAXIS) = SRCH(3-IAXIS)+IOFF
	  CALL MOVTO(SRCH(X),SRCH(Y))
CCC absorb any junk
CCC20	  INE = NEGET(NEBUF,-NESIZE)
CCC	  IF (INE .GT. 0) GOTO 20
	  CALL SCANBY(ID(X),ID(Y),1)
	  CALL SCSET(0)
C See what was there
	  INE = NEGET(NEBUF,-NESIZE)
	  IF (INE .LE. 0) GOTO 100
C Assuming that we are satisfied with one NEBUF full
C of data, select our feature hits.
C These are all the single encounters.
	  NHITS = 0
	  NLAST = 0
	  DO 60 I=1,INE
	    IW = NEBUF(1,I)
C See if multiple hit
	    MUL = .FALSE.
	    IF (IW .LT. "40000) GOTO 40
C Yes
	    IW = IW-"40000
	    MUL = .TRUE.
C See if edge or line
40	    IF (IW.EQ."37770 .OR. IW.EQ."37774) GOTO 60
C Ignore edges completely
C Is this line a multiple hit?
	    IF (MUL) GOTO 50
C No - store it (if room)
	    IF (NHITS .GE. NESIZE) GOTO 60
	    NLAST = NHITS
	    NHITS = NHITS+1
	    NEBUF(1,NHITS) = OFFNSS+0.5
	    DO 45 J=2,3
45	      NEBUF(J,NHITS) = NEBUF(J,I)
	    GOTO 60
C More than one hit on scan - ignore all of them
50	    NHITS = NLAST
C
60	    CONTINUE
C
C Having sorted out the data, have we seen a line ?
C
	  QUAL = FLOAT(NHITS)/EXPHIT
	  IF (ITHING .EQ. 1) QUAL = QUAL+QUAL
	  IF (QUAL .GE. FQUAL) GOTO 120
	  IF (INFO) CALL WRITEF('Quality only %E')
C No line seen, carry on searching
100	  CONTINUE
C Search failed to find anything
110	FOUND = .FALSE.
	RETURN
C
C Fit a line to what we saw
C First time round get rough line
C then suppress wild points and fit a second time.
C
120	RMS = 0.0
	RMAX = 0.0
	NBUM = 0
	NGOOD = 0
	GU = 0.0
	DO 300 IPASS=1,2
	IF (.NOT.LINFIT(NEBUF,1,NHITS,
     *                  1,IU+1,IV+1,OFFNSS,A0,A1)) GOTO 110
C Get residual at each point
	DO 200 I=1,NHITS
	  IF (NEBUF(1,I) .LT. 0) GOTO 200
	  U = NEBUF(IU+1,I)
	  V = NEBUF(IV+1,I)
	  D = ABS(V-(A0+A1*U))
	  GOTO(140,160),IPASS
C Pass one - set weights & suppress bad 'uns
140	  NEBUF(1,I) = D+0.5
	  IF (D .LT. MAGIC4) GOTO 200
C Bad one
	  NBUM = NBUM+1
C ABANDON IF > 1/2 ARE BAD
	  IF (NBUM .GE. NHITS/2) GOTO 110
	  NEBUF(1,I) = -1
	  GOTO 200
C Pass two - get residual totals & centre of line
160	  RMS = RMS+D*D
	  IF (D .GT. RMAX) RMAX = D
	  GU = GU+NEBUF(IU+1,I)
	  NGOOD = NGOOD+1
C
200	  CONTINUE
300	CONTINUE
C Fitting done,inform operator of quality
	RMS = SQRT(RMS/NGOOD)
	NBUM = (NBUM*100.0)/NHITS
	IF (INFO) CALL WRITEF(
     *     'A0 %E	A1 %E	RMS %N	MAX %N  %N%% BAD',
     *     A0,A1,IFIX(RMS),IFIX(RMAX),NBUM)
C Record the line for this axis expressed in absolute coords.
	C0(IAXIS) = A0+SRCH(IV)-SRCH(IU)*A1
	C1(IAXIS) = A1
	GOFF(IAXIS) = GOFF(IAXIS) + GU/NGOOD - ID(IU)/2
C Repeat for other axis
800	CONTINUE
C
C Come here if lines found in both axes
C Compute their intersection
	R = 1.0-C1(1)*C1(2)
	FD(X) = (C0(2)+C1(2)*C0(1))/R
	FD(Y) = (C0(1)+C1(1)*C0(2))/R
C settling ?
	IF (ITHING .LE. IGREP) GOTO 850
C no - add point to list
	IF (NFD .LT. 20) NFD = NFD+1
	FDLIST(X,NFD) = FD(X)
	FDLIST(Y,NFD) = FD(Y)
C Now measure the fid again about the new centre
850	CONTINUE
C
C We have now measured the fid several times
C
	FOUND = .TRUE.
C compute average of measurements
	FD(X) = 0.
	FD(Y) = 0.
	DO 870 I = 1,NFD
	  FD(X) = FD(X) + FDLIST(X,I)/NFD
	  FD(Y) = FD(Y) + FDLIST(Y,I)/NFD
870	  CONTINUE
C debugging ?
	IF (GRDOUT.AND..NOT.DMAGRD) CALL IFFST(FDLIST,NFD,0)
	IF (GRDOUT.AND.DMAGRD) CALL IFFST(FD(1),1,0)
	RETURN
C
C
	END
