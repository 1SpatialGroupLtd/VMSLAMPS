C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1980-05-21 12:51:18.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE IFWSYS (LUN)
C
C Copyright Laser-Scan Laboratories Ltd,Cambridge,England
C
C Author M.C.Fulford
C
C	Created 10.x.79 from IFFSYS
C	Last edited 10.x.79
C	Edited by Alan Wylie 18.x.79 to include NHATCH
C
C	Last edited 26-Mar-1980
C
C To write parameters to patch file
C
***	COMMON/PARAMS/
C
	INTEGER LUN		! unit number
C
***	COMMON/MASTER/
***	COMMON/IFFHAN/
***	COMMON/MPEP/
**	IF	TWOICH
***	COMMON/ELFPAR/
**	ENDC
	COMMON/THKPAR/SEP,SPOT
***	COMMON/SCPARM/
***	COMMON/SCCORR/
***	COMMON/LKPARM/
***	COMMON/SCOTS/
***	COMMON/LNKC/
***	COMMON/LKFOLL/
***	COMMON/COEFFS/
***	COMMON/NUMC/
***	COMMON/GRPARM/
***	COMMON/GRID/
***	COMMON/TYPES/
***	COMMON/DIGC/
C
	INTEGER EXPAND,EXPMAC
C
	INTEGER TF10(-1:0)
	DATA TF10(-1),TF10(0)/'1','0'/
C
C open file for writing
	CALL IFFOPN(LUN,SYSNAM(1))
	IF (IERCD .EQ. 0) GOTO 10
C error when opening file
	CALL WRITEF('Can''t open %S40',SYSNAM(1))
	GOTO 80
C write parameters, clearing file first
10	CALL IFFCLR
C set echo first
	CALL IFFCH(NUM(1),EXPAND('ECHO %C',TF10(ECHO)))
C /SCPARM/
	CALL IFFCH(NUM(1),EXPAND(
     *     'MOD %N FRQ %N WID %N PIT %N TLO %N TSW %N TMS %N',
     *     IMOD,  IFRQ,  IWID,  IPIT,  ITLO,   ITSW,  ITMS   ))
C /SCCORR/
	CALL IFFCH(NUM(1),EXPAND(
     *     'WAR %F6.2 CRX %F6.2 CRY %F6.2',WAR,CRX,CRY))
	CALL IFFCH(NUM(1),EXPAND(
     *     'OFX %F6.2 OFY %F6.2 PHX %F6.2 PHY%F7.2',OFX,OFY,PHX,PHY))
C /LKPARM/
	CALL IFFCH(NUM(1),EXPAND
     *      ('ID %N HOLE %N RIP %N DIF %F7.1 INI%N',
     *             IDSIZE,HOLE,RIPPLE,WIDDIF,INICOM))
	CALL IFFCH(NUM(1),EXPAND(
     *     'THK%F6.1 HCH %N PTH%F6.1 CWW%F5.2 CWU%F5.2 CWV%F5.2',
     *     THKNSS,NHATCH,THKPNT,CHWT(1),CHWT(2),CHWT(3)))
	CALL IFFCH(NUM(1),EXPAND(
     *       'RGR%F4.1 ETA%F5.1 GAP%F6.0 SHA %F7.2 CRS %N',
     *        RGROW,ETA,GAPSIZ,SHRPNS,CRSSNG))
	CALL IFFCH(NUM(1),EXPAND(
     *     'STI%F7.0 SMA%F5.1 BET%F5.2 NEA%F5.1 PRL%F5.1 BIA%F6.2',
     *      STFFNS,  SMLLNS,  BETA,    NEARNS,  PRLLNS,  BIAS))
	CALL IFFCH(NUM(1),EXPAND(
     &       'ANG %F7.3 LEN %F7.3 DST %F7.3 WTH %F7.3',
     *      ANGWGT,LENWGT,DSTWGT,WTHWGT))
	CALL IFFCH(NUM(1),EXPAND(
     *       'CRC %F0.4 CRD %F7.0',
     *        CRUCOS,   CRUDIS))
	CALL IFFCH(NUM(1),EXPAND(
     *     'MPB %N MPN%F6.1 BCH%C TCH%C EDG%C SMO%C LIN%C JNC%C',
     *     NMPBAK,MPNEAR,TF10(BAKCHK),TF10(TMPCHK),TF10(EDGING),
     *     TF10(SMOING),TF10(LINING),TF10(JNCING)))
	CALL IFFCH(NUM(1),EXPAND(
     *     'CHF %N TIK%F6.1 CHP%F6.1 SQT %F6.1',
     *     CPCHEK,TIKSIZ,CPTHIK,SQUTOL))
	DO 20 I=1,MAXLIM
20	  CALL IFFCH(NUM(1),EXPAND('LIM%N %&7',I,LIMIT(I)))
	DO 30 I=1,MAXWT
30	  CALL IFFCH(NUM(1),EXPAND('W%N %&7',I,WGHT(I)))
C /MPEP/
	CALL IFFCH(NUM(1),EXPAND
     *  ('H%F2.1 S%F2.1 E%F2.1 MPL %N MPF%N MPX %N',
     *    H(1),S(1),E(1),MPLIM,MPLEFT,MPTOTE))
C /ELFPAR/
**	IF	ELF
	CALL IFFCH(NUM(1),EXPAND('EPS %F0.2',EPSLON))
**	ENDC
**	IF	JNCTN
	CALL IFFCH(NUM(1), EXPAND(
     *     'EPS %F0.2 PRC %F0.2 DRT %F2.2 DWD %F5.0 VLN %N PDS %N',
     &     EPSLON,PARCOS,DIVRAT,DIVWID,VECLEN,PARDIS))
	CALL IFFCH(NUM(1),EXPAND(
     *     'DJP %N',
     *     DIVJMP))
**	ENDC
C /THKPAR/
	CALL IFFCH(NUM(1),EXPAND('SEP%F6.3 SPOT%F6.3 ',SEP,SPOT))
C /GRPARM/ & /GRID/
	CALL IFFCH(NUM(1),EXPAND(
     *     'SCT%N REP%N AVE%N OFF%F5.2 QUA%F5.2 GRI%F5.2 OUT%C',
     *     ISCAT,IGREP,IGRAVE,OFFNSS,FQUAL,GRIDSQ,TF10(GRDOUT)))
	CALL IFFCH(NUM(1),EXPAND('DMA %C',TF10(DMAGRD)))
C /TYPES/
	DO 50 I=1,MAXPAR
	  CALL IFFCH(NUM(1),EXPAND(
     *      'PAR %I3 %5',I,PNAME(I)))
	  IF (PNAME(I) .EQ. 0) GOTO 50
	  CALL EXPAND('SET %N',I)
	  DO 40 J=1,MAXTYP
	    N = EXPAND('%S %F7.2',NUM(1),PVALUE(J,I))
40	    CONTINUE
	  CALL IFFCH(NUM(1),N)
50	  CONTINUE
	CALL IFFCH(NUM(1),EXPAND('TYP%N',LTYPE))
C  Macro commands
	DO 60 I=1,MACNUM
	  M = EXPAND('DEF%I3 %5 ',I,LNKCM(LNKMAC+I*2-1))
60	  CALL IFFCH(NUM(1),M+EXPMAC(I,NUM(M+1)))
C And the codedness thereof
	DO 70 I=1,MACNUM
70	  IF(CODED(I))CALL IFFCH(NUM(1),EXPAND('COD%N',I))
C red refresh level
	CALL IFFCH(NUM(1),EXPAND('FLE %N',REDFOC))
C and set up the standard pair of commands
	CALL IFFCH(NUM(1),EXPAND('FB12END'))
	CALL IFFCH(NUM(1),EXPAND('FB4GO'))
C preserve the cubic coefficients & corner points
	CALL IFFCC(CFT)
	CALL IFFCP(CPTS)
C
C finished with file
	CALL IFFCLO(LUN)
80	RETURN
	END
