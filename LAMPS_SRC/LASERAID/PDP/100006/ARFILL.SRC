	SUBROUTINE ARFILL (PNT, NPTS, THK,NHATCH)
C
C Copyright Laser-Scan Laboratories Ltd,Cambridge,England
C
C Author M.C.Fulford
C
C	Created 15.v.79
C	Updated by Alan Wylie,	23/x/79
C 		Horizontal and vertical fill,of minimum
C		linewidth and spacing THK.
C
C	Routine to fill in a feature.
C
C parameters:
***	COMMON/PARAMS/
C
	PARAMETER MAXSCT = 20	! max number of intersections
C
C arguments:
	REAL PNT(2,1)		! data points, last point assumed
C				  same as first
	INTEGER NPTS		! number of points
	REAL THK		! paint-out thickness
	INTEGER NHATCH		!0=Thick fill
C				 1=Horizontal fill
C				 2=Vertical fill
C				 3=Horizontal and vertical fill
C
C workspace:
	LOGICAL HORIZ		! Flag to keep present direction of fill
	INTEGER LHATCH		! Working value of NHATCH
	REAL VMIN,VMAX		! limits to feature
	REAL VSLICE		! current raster line
	REAL INTSCT(MAXSCT)	! list of intersections (sorted)
	INTEGER NSCT		! number of intersections (even)
	REAL DV,ALPHA,VSCT	! intersection calculation
C
C check for silly cases
	IF(NPTS.LT.3.OR.THK.LE.0.OR.NHATCH.LT.0.OR.NHATCH.GT.3)GOTO 150
C loop for horizontal and vertical lines
	LHATCH=NHATCH
	IF(LHATCH.GT.0)GOTO 10
	CALL THICK(THK)
	LHATCH=1
	GOTO 15
10	CALL THICK(0)
15	IF(IAND(LHATCH,1).EQ.0)GOTO 20
C horizontal
	U=X
	V=Y
	LHATCH=LHATCH-1
	HORIZ=.TRUE.
	GOTO 30
20	IF(IAND(LHATCH,2).EQ.0)GOTO 150
C vertical
	U=Y
	V=X
	LHATCH=LHATCH-2
	HORIZ=.FALSE.
30	VMIN = PNT(V,1)
	VMAX = PNT(V,1)
C get limits
	DO 40 I = 2, NPTS
	  IF (PNT(V,I) .LT. VMIN) VMIN = PNT(V,I)
	  IF (PNT(V,I) .GT. VMAX) VMAX = PNT(V,I)
40	  CONTINUE
C start raster scan at bottom of feature
	VSLICE = VMIN+THK/2
C find all intersections with this scan line
50	NSCT = 0		! none yet
	DO 110 I = 1,NPTS-1
	  DV = PNT(V,I+1)-PNT(V,I)
	  IF (DV .EQ. 0) GOTO 110	! ignore horizontals
	  ALPHA = (VSLICE-PNT(V,I))/DV	! vertical ratio
	  IF (ALPHA.LT.0 .OR.
     *        ALPHA.GT.1) GOTO 110	! no intersection
	  USCT = PNT(U,I)*(1-ALPHA)+PNT(U,I+1)*ALPHA
C add this intersection to list, sorting as we go
	  IF (NSCT .LE. 0) GOTO 70	! empty list
	  DO 60 J = 1,NSCT		! seek position
	    ISCT = J
	    IF (INTSCT(ISCT) .GT. USCT) GOTO 80
60	    CONTINUE
C insert at top of list
70	  ISCT = NSCT+1
	  GOTO 100
C shift top bit of list
80	  DO 90 J = NSCT,ISCT,-1
	    INTSCT(J+1) = INTSCT(J)
90	    CONTINUE
C insert new entry
100	  INTSCT(ISCT) = USCT
	  NSCT = NSCT+1			! another entry
	  IF (NSCT .GE. MAXSCT) GOTO 120	! no room for more
C
110	  CONTINUE	! to get all intersections
C
C here with intersection list complete or full
120	IF (NSCT .LT. 2) GOTO 140	! empty raster
	DO 130 I = 1, NSCT-1, 2
	  IF (HORIZ) GOTO 125
	  CALL MOVTO(VSLICE, INTSCT( I ))
	  CALL LINTO(VSLICE, INTSCT(I+1))
	  GOTO 130
125	  CALL MOVTO(INTSCT( I ), VSLICE)
	  CALL LINTO(INTSCT(I+1), VSLICE)
130	  CONTINUE
C
140	VSLICE = VSLICE+THK	! on to next raster line
	IF (VSLICE .LE. VMAX-THK/2) GOTO 50
C here when scanned whole feature
C
	GOTO 20
150	RETURN
	END
