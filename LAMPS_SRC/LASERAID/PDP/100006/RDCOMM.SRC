C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1980-08-05 11:02:00.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	INTEGER FUNCTION RDCOMM(ARR)
C
C Copyright Laser Scan Laboratories Ltd., Cambridge, England.
C Author  R. Fairbairns
C
C Coded and typed 18.iii.76
C Rehashed for MPS LASERAID Paul Hardy September 76
C Query facility added March 78 - M.C.Fulford
C Queued commands added  Jan 79 - M.C.Fulford
C Query facility extended July 80 - M.C.Fulford
C ? ? facility added to above August 80 - A.J.Wylie
C	Last edited 05/Aug/80
C
C To read a command from the keyboard, function buttons or
C to return "queued" command
C
***	COMMON/PARAMS/
C
C argument:
	INTEGER ARR(1)
C ARR is an array of 'coded' command names
C
***	COMMON/MASTER/
***	COMMON/TEXTC/
***	COMMON/LDXPAR/
C
C w/s
**	IF	LTHELP
	INTEGER LTHTSK(2)	! LTH's task name
	INTEGER SNDBUF(4)	! packet for LTH
	INTEGER OURTSK		! our name (to select help file)
	INTEGER DOLLS		! $$$
**	ENDC
	REAL TX,TY
	INTEGER I1,I2,I3
	LOGICAL*1 WAIT
	INTEGER CWD, PTR, CTRL, NMNEMW, ARGCTW, TOLD
	LOGICAL*1 ZZZ(2), NMNEM, ARGCTL, NMNEMC, ARGCTC
	EQUIVALENCE (CTRL,ZZZ(1),NMNEM), (ZZZ(2),ARGCTL)
	EQUIVALENCE (NMNEMW, NMNEMC), (ARGCTW, ARGCTC)
C
C functions called
	INTEGER MYR50
	LOGICAL RDREAL,RDINT
C
C data:
**	IF	LTHELP
	DATA LTHTSK/3RLTH,3R.../
	DATA OURTSK/3RFLF/	! & LAJ, ELA later
	DATA DOLLS/3R$$$/
**	ENDC
C
C queued command wanted ?
	IF (QUECOM .LE. 0) GOTO 5
C set up mark time for queued command
	CALL CANMT			! remove outstanding one
	IDS = (QUETIM*0.01)*TKPERS	! express delay in ticks
	CALL MARK (MRKEFN,IDS,1)
C clear EFNs, Refresh picture and wait for event
5	WAIT=.FALSE.
C if more chars to decode, don't wait
	IF (DCPTR .LE. TXTPTR) GOTO 15
	WAIT=.TRUE.
	CALL REFRSH
10	TOLD=NEWTIM(TIDLE)  ! time the idle state
	CALL WFLOR(LDEFN,TTIEFN,MRKEFN)
	CALL CLREF(LDEFN)
	TOLD=NEWTIM(TOLD)
C
15	INTARG = 0
	NUMINT = 0
	NUMREL = 0
C queued command come up ?
	CALL READEF (MRKEFN, IDS)
	IF (IDS.EQ.2) GOTO 55
C anything from FBs ?
	CALL FBRD(RDCOMM)
	IF(RDCOMM.NE.0) GOTO 105
C any chars left ??
	IF(DCPTR.GT.TXTPTR) CALL READ
C
C lose leading spaces
	DCPTR = DCPTR-1
20	DCPTR = DCPTR+1
	IF (DCPTR.GT.TXTPTR) GOTO 50
	IF (TXTBUF(DCPTR).EQ.32) GOTO 20
	IF (TXTBUF(DCPTR) .EQ. "77) GOTO 25
	IF ((TXTBUF(DCPTR).GE.48.AND.TXTBUF(DCPTR).LE.57)
     *         .OR.TXTBUF(DCPTR).EQ.45) GOTO 60
	CWD = MYR50(DCPTR)
	IF (CWD .NE. 0) GOTO 30
C syntax error
	TXTBUF(TXTPTR+1) = 0
	CALL MSGF('Don''t understand "%S20"',TXTBUF(DCPTR))
	GOTO 45
C
C '?' - type out FB meanings or provide help
25	DCPTR = DCPTR+1		! accept the '?'
	CWD = MYR50(DCPTR)
**	IF	LTHELP
	IF (CWD.NE.0) GOTO 251
C no mnemonic - was it "? ?" ?
	IF (TXTBUF(DCPTR) .NE. "77) GOTO 26	! no
C yes - set $$$ which LTA should understand
	CWD=DOLLS
C use LTH to give detailed help
C first send a packet to LTH
251	SNDBUF(1) = 1
	SNDBUF(2) = OURTSK
	SNDBUF(3) = ARR(0)
	SNDBUF(4) = CWD
	CALL SEND(LTHTSK, SNDBUF, , IDS)
	IF (IDS .LE. 0) GOTO 26		! didn't work
C now let go of terminal and start LTH
	CALL RDABO
	CALL DETACH
	CALL REQUES(LTHTSK,,IDS)
	IF (IDS .LE. 0) GOTO 255	! couldn't start it
C go to sleep ( & hope LTH wakes us up)
C (we could also enable checkpointing)
	CALL SUSPND
C been awoken - regain our terminal
	CALL ATTACH
	CALL READ
	GOTO 20
C revert to old system
255	CALL ATTACH
	CALL READ
**	ENDC
C type out command table & mode
26	CALL FBTYPE(ARR(1), ARR(0))
	GOTO 20
C
C read 'coded' commands
30	PTR = 0
	RDCOMM = 0
35	PTR = PTR+1
	RDCOMM = RDCOMM+1
	CTRL = ARR(PTR)
	NMNEMC = NMNEM
	IF (NMNEMW .LE. 0) GOTO 42	! end of table
	DO 40 I = 1,NMNEMW
	   PTR = PTR+1
	   IF (CWD.EQ.ARR(PTR)) GOTO 65
40	   CONTINUE
	GOTO 35	! no match with any mnemonic for this command
C
C unknown mnemonic
42	CALL MSGF('Unexpected "%5"',CWD)
C failure exit
45	RDCOMM = 0
	GOTO 105
C
C failed because of end of line
50	DCPTR = -1
	TXTPTR=-2
	IF(.NOT.WAIT) GOTO 45
	CALL CSAJST(TX,TY)  ! update cursor position
	CALL LDINPM(1,I1,I2,I3)
	IF(I3.EQ.1) GOTO 10    ! refresh picture hasn't changed
	GOTO 45
C
C queued command sprung
55	CALL CLREF(MRKEFN)
	IF (QUECOM .LE. 0) GOTO 5	! nowt to do
	RDCOMM = QUECOM			! return queued command
	GOTO 105
C
C read integer command
60	IF (RDINT(INTARG)) GOTO 45
	RDCOMM = -1
	GOTO 105
C
C found a 'coded' command
65	ARGCTC = ARGCTL
	NRELS = (ARGCTW/8).AND.7
	NINTS = ARGCTW.AND.7
C read integer arguments for this command, if any
	IF (NINTS .LE. 0) GOTO 75
	DO 70 I = 1,NINTS
	  IF (.NOT.RDINT(INTAR(I))) NUMINT = NUMINT+1
70	  CONTINUE
C read real arguments for this command, if any
75	IF (NRELS .LE. 0) GOTO 105
	DO 80 I = 1,NRELS
	  IF (.NOT.RDREAL(REALAR(I))) NUMREL = NUMREL+1
80	  CONTINUE
C
105	IF (RDCOMM.NE.0) QUECOM = 0  ! we don't want queued command now
	RETURN
C
	END
