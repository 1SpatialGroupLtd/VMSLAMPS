C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1980-02-21 12:15:40.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE DRWMP(IU,IV,ID,ST)
C
C Copyright Laser-Scan Laboratories Ltd,Cambridge,England
C
C Author Paul Hardy
C
C	Created 26.x.77
C 	Last edited 22/1/79
C
***	COMMON/PARAMS/
***	COMMON/BLG/
***	COMMON/MPEP/
***	COMMON/SCCORR/
***	COMMON/SCPARM/
C
	INTEGER ID(2)
	REAL ST(2)       ! start of vector
C
	REAL D(2),P(2)
C
	VW=IWID*WAR*CR(IV)
	IF(NMP(1).LE.0) GOTO 900
	DO 10 I=1,NMP(1)
	   D(X)=MP1(X,I)-ST(X)
	   D(Y)=MP1(Y,I)-ST(Y)
	   Z=D(IU)/ID(IU)
	   IF(Z.LT.-0.1.OR.Z.GT.1.1)  GOTO 10  ! not in scan (IU)
	   IF(ABS(D(IV)-Z*ID(IV)).GT.VW) GOTO 10 ! ditto IV
	   IX=D(X)
	   IY=D(Y)
	   CALL DRWX(IX,IY,6)
10	   CONTINUE
C and now for backlogged points
100	IF(INDEX(1).LE.0) GOTO 900
	P(X)=MP1(X,NMP(1))-ST(X)
	P(Y)=MP1(Y,NMP(1))-ST(Y)
	DO 110 I=1,INDEX(1)
	   D(X)=P(X)+XBLG(1,I)
	   D(Y)=P(Y)+YBLG(1,I)
	   Z=D(IU)/ID(IU)
	   IF(Z.LT.-0.1.OR.Z.GT.1.1) GOTO 110  ! not in scan
	   IF(ABS(D(IV)-Z*ID(IV)).GT.VW) GOTO 110  ! ditto
	   IX=D(X)
	   IY=D(Y)
	   CALL DRWX(IX,IY,4)
110	   CONTINUE
C
900	CALL TXEND
	RETURN
	END
C
	SUBROUTINE DRWX(IX,IY,IS)
C
C to draw cross at position IX,IY on tek
C
	CALL TXMTO(IX-IS,IY+IS)
	CALL TXLTO(IX+IS,IY-IS)
	CALL TXMTO(IX+IS,IY+IS)
	CALL TXLTO(IX-IS,IY-IS)
	CALL TXMTO(IX,IY)
	RETURN
	END
