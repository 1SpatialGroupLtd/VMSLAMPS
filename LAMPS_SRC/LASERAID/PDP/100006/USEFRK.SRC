C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1980-02-21 12:00:10.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE USEFRK(FSTCON,CONGOT,QCON,CRSTYP,JNCTYP)
C
C Copyright Laser-Scan Laboratories Ltd,Cambridge,England
C
C Author M.C.Fulford
C
C	Created 22.vii.77
C	Last edited 18/v/78
C
C To use the fork information produced by CUTLER, to decide
C which of the available line segments should be attached next.
C
C On entry, we assume that a line segment has just been issued
C to TOMP, leaving the number in LSTSEL & the direction of attachment
C in LSTWAY (both in /LKFOLL/)
C
***	COMMON/PARAMS/
C
	INTEGER FSTCON		! first connection
	INTEGER CONGOT		! number of connections
	REAL QCON		! quality for confusion
	INTEGER CRSTYP		! behaviour at crossings/mergings:-
C			1 - choose opposite branch (i.e. crossing)
C			2 - choose same branch (i.e. merging)
	INTEGER JNCTYP		! type of junction found:-
C			0 - nothing
C			1 - crossing track
C			2 - sharp corner
C			3 - branching into two
C
***	COMMON/FORKS/
***	COMMON/LKFOLL/
C
C w/s
	INTEGER LSTCHN		! last chain output
	INTEGER THTFRK		! that fork
	INTEGER NXTFRK		! next fork
	INTEGER ISTEM		! chain number of stem
C
C
	LSTCHN = CONNCT(2,LSTSEL)
	FSTCON = 1
	JNCTYP = 0
C
C delete the fork on 'this' end of our chain
	N = ENDFRK(LSTWAY,LSTCHN)
	IF (N .GT. 0) FRKTYP(N) = 0
C look at the fork on 'that' end
	THTFRK = ENDFRK(3-LSTWAY,LSTCHN)
C is our chain attached to any others ?
	IF (THTFRK .EQ. 0) GOTO 900
C yes, is it a stem or a branch ?
	IF (FORK(1,THTFRK) .EQ. LSTCHN) GOTO 600  !  stem
C we are a branch to the new fork
C this means:
C	a) a crossing
C	b) a sharp corner
C	c) a general confusion
C
C decide between these cases by looking at the fork containing
C the stem of our fork
	ISTEM = FORK(1,THTFRK)
	IF (ISTEM .EQ. 0) GOTO 500
	NXTFRK = ENDFRK(1,ISTEM)
	IF (NXTFRK.EQ.THTFRK) NXTFRK = ENDFRK(2,ISTEM)
C is there such a fork ?
	IF (NXTFRK .EQ. 0) GOTO 90		! no - (b)
C yes - how is our stem attached to it ?
	IF (FORK(1,NXTFRK) .EQ. ISTEM) GOTO 400 ! stem - (a)
	IF (FORK(2,NXTFRK) .EQ. ISTEM .OR.
     *      FORK(3,NXTFRK) .EQ. ISTEM) GOTO 500	! branch - (c)
C not attached ??
	GOTO 500
C
C come here for case (b) - sharp corner
C
C we offer :
C	i) the other branch
C	ii) the stem
C what we ought to do is to process the stem points to produce
C some real points for the corner, or else compute the intersection
C of the two branches
C in the meantime:-
90	CONNCT(2,1) = FORK(2,THTFRK)+FORK(3,THTFRK)-LSTCHN
	CONNCT(3,1) = 3-LSTWAY		! goes the other way
	QUALTY(1) = QCON-1.0		! ensure confused
	CONNCT(2,2) = FORK(1,THTFRK)
	CONNCT(3,2) = LSTWAY
	QUALTY(2) = QUALTY(1)-1.0
	CONGOT = 2
	JNCTYP = 2
	GOTO 800
C
C case (a) - a crossing
C we offer:
C	  i) the two outgoing branches (in appropriate order)
C	 ii) our companion branch
C	iii) the joining stemm
400	N = 0
	IF (LSTCHN .EQ. FORK(2,THTFRK)) N = 1
	IF (CRSTYP .EQ. 1) N = 1-N
	CONNCT(2,1) = FORK(2+N,NXTFRK)
	CONNCT(2,2) = FORK(3-N,NXTFRK)
	CONNCT(3,1) = LSTWAY
	CONNCT(3,2) = LSTWAY
	QUALTY(1) = QCON+1.
	QUALTY(2) = QCON+1.
C
	CONNCT(2,3) = FORK(2,THTFRK)+FORK(3,THTFRK)-LSTCHN
	CONNCT(3,3) = 3-LSTWAY
	QUALTY(3) = QUALTY(2) - 1.0
C
	CONNCT(2,4) = FORK(1,THTFRK)
	CONNCT(3,4) = LSTWAY
	QUALTY(4) = QUALTY(3) - 1.0
	CONGOT = 4
	JNCTYP = 1
	GOTO 800
C
C case (c) - a nonsense
C for the moment we will let MATCH sort out the mess, but one day ...
500	GOTO 900
C
C we are a stem to the new fork
C our track would seem to have split into two.
C offer the two branches
C ideally we would remove the merged bit of the stem
C
600	CONNCT(2,1) = FORK(2,THTFRK)
	CONNCT(2,2) = FORK(3,THTFRK)
	CONNCT(3,1) = LSTWAY
	CONNCT(3,2) = LSTWAY
	QUALTY(1) = QCON+1.
	QUALTY(2) = QCON+1.
	CONGOT = 2
	JNCTYP = 3
C tidy up & complete the connections
800	DO 820 I = FSTCON, FSTCON+CONGOT-1
	  CONNCT(1,I) = 0
	  CONNCT(4,I) = 0
820	  CONTINUE
C
C exit
C
900	RETURN
	END
