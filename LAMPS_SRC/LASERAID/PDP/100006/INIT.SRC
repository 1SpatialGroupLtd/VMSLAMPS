	SUBROUTINE INIT
C
C Copyright Laser-Scan Laboratories Ltd, Cambridge, England
C
C Authors Paul Hardy & M.C.Fulford
C
C	Created in about 1976
C
C	Last edited 16/July/1980
C
C
C Initialisation of MPS and HRD1
C
**	IF	ELF
**	IFTF
C
***	COMMON/PARAMS/
C
***	COMMON/INITC/
***	COMMON/ISCBUF/
***	COMMON/MASTER/
***	COMMON/LDREFR/
***	COMMON/TEXTC/
***	COMMON/FFCOM/
***	COMMON/COEFFS/
***	COMMON/GUIDE/
***	COMMON/NUMC/
***	COMMON/LDXPAR/
***	COMMON/WRITEC/
***	COMMON/IFFHAN/
***	COMMON/DIGC/
C
C
	INTEGER IELIST(4)	! list of expected IFF entries
	INTEGER IO,EJ,MD,NF,NO
C w/s
	INTEGER CWD		! command returned by RDCOMM
	INTEGER TIMBUF(8) 	! for GETTIM's results
	LOGICAL*1 USEHRD	! use the display
	LOGICAL*1 NEWIFF        ! not OLD IFF !
	LOGICAL*1 MOVEPC	! new photochromic desired
	LOGICAL*1 HADIFF	! had IFF command
	INTEGER SAVPTR		! for file titles
	BYTE DEFNAM(40)		! default system file name
	REAL COEFT(10,2)	! dummy coefficients
	INTEGER IDESC(MDLEN)	! null MD entry
	REAL OFFSET(2,4)	! CP offsets
	LOGICAL*1 DUFFCP(4)	! if CP is non-standard
	REAL DUFVAL(2,4)	! the position
	INTEGER NEWS(4)		! names of CPs
**	IFTF
C
C
C functions:
	INTEGER RDCOMM
	LOGICAL RDFILT
	EXTERNAL RTIDY
C
	DATA COEFT/0.,1.,8*0.,0.,0.,1.,7*0./
	DATA IDESC/MDLEN*0/
	DATA IELIST/'RA', 'NS', 'CC', 'CP'/
	DATA IO,EJ,MD,NF,NO/'IO','EJ','MD','NF','NO'/
**	IFT
	DATA OFFSET/0.,200., 0.,0., 200.,0., 200.,200./
	DATA DUFFCP/4*.FALSE./
	DATA DUFVAL/8*0.0/
	DATA NEWS/'NW','SW','SE','NE'/
**	IFTF
C
C Initialise
C suppress arithmetic error counting
	DO 10 I = 70,75
	  CALL ERRSET (I,,.FALSE.)
10	  CONTINUE
	EOP=.TRUE.
	CPDONE=.FALSE.
	CPGOT =.FALSE.
	CCGOT = .FALSE.
	EFPEND = .FALSE.
	INOVER = .FALSE.
	OVRNUM = -1	! no layer selected
	WX = 57.	! improved cursor limits (pro. tem.)
	NSMESS(1)=0
	HADTIK = .FALSE.
	GUDOPN = .FALSE.
	USEGUD = .FALSE.
	LDLUN=2
	LDEFN = LDLUN
	ITPNT=0
	POUTD=.TRUE.
	QDRNT = 0
	NFID = 0
	CHFRMT = -1
	CATGRY = 4	! only ELA uses this, but it's always there
C
C find out clock rate
	CALL GETTIM (TIMBUF)
	TKPERS = TIMBUF(8)
C
C initialise terminal LUNs
	CALL TTINIT
C set up devices
	CALL ASNLUN(TTILUN,'TI',0)
	CALL ASNLUN(TTOLUN,'TI',0)
C the next two are necessary 'cos ATTACH might otherwise
C acquire the LUNs if they are set up to TT:
	CALL ASNLUN(IFFLUN,'IF',0)
	CALL ASNLUN(SAVLUN,'IF',0)
	CALL ATTACH
C announce version,options & date of creation
**	IFT
	CALL IDENT('ELA')
**	IFF
	CALL IDENT('FLF')
**	IFTF
C FF streams for TX drawing
	FFILUN = TTILUN
	FFIEFN = TTIEFN
	FFOLUN = TTOLUN
	FFOEFN = TTOEFN
C
C
C read MCR line
	CALL GETMCR(TXTBUF, IDS)
	IF (IDS .LT. 0) GOTO 360
	DCPTR = 4
	TXTPTR = IDS
	TXTBUF(TXTPTR+1) = 0
	USEHRD = .TRUE.
	MOVEPC = .FALSE.
	HADIFF = .FALSE.
	ITEM = 0
**	IFT
	CALL EXPAND('%WLK:[100,1]LNK.ELA;0',DEFNAM(1))
**	IFF
	CALL EXPAND('%WLK:[100,1]LNK.FLF;0',DEFNAM(1))
**	IFTF
	CALL EXPAND('%W%S',SYSNAM(1),DEFNAM(1))
C
20	ITEM = ITEM+1
	SAVPTR = DCPTR
	CWD = RDCOMM(INITCM(1))
	IF (CWD) 40,30,50
C end of line or error
30	IF (DCPTR .LT. 0) GOTO 110	! end of line
C "just number" joins
40	IF (ITEM .NE. 1) GOTO 400	! strange number or error
**	IFT
	GOTO 400
**	IFF
	CWD=1                           ! assume IFF command
	DCPTR = SAVPTR			! try it again
**	IFTF
C command
50	GOTO ( 60, 60, 70, 80, 90,
     *        100,100,100,100,
     *        105,105,105,105),CWD
	GOTO 20
C define data file
60	IF (HADIFF) GOTO 440
	NEWIFF = CWD.EQ.1
**	IFT
C MAP fff		- descriptor for new file
C OLD fff		- ditto for existing file
	IF (RDFILT(IFFNAM, 40, 'IF:IFF.IFF', .FALSE.,
     *             .FALSE.)) GOTO 380
**	IFF
C IFF/TO/NEW fff	- file name for new data file
C OLD/APP/UPD fff	- file name for existing file
	IF (RDFILT(IFFNAM,40,'IF:IFF.IFF',.TRUE.,.FALSE.)) GOTO 380
**	IFTF
	HADIFF = .TRUE.
	GOTO 20
C WITH xxxx - alternative constants file name
70	IF (RDFILT(SYSNAM,40,DEFNAM,.FALSE.,.FALSE.)) GOTO 390
	GOTO 20
C NOD - don't use the HRD
80	USEHRD = .FALSE.
	GOTO 20
C NP - new photochromic
90	MOVEPC = .TRUE.
	GOTO 20
C The next two sets of commands are only used if ELF is set
C NW,SW,SE,NE		- select corner
100	IF (QDRNT .NE. 0) GOTO 420
	QDRNT = CWD-INIQAD+1
	GOTO 20
C CNW, CSW, CSE, CNE x y - set non-standard CP value
105	DUFVAL(X,CWD-INIQAD-3) = REALA1
	DUFVAL(Y,CWD-INIQAD-3) = REALA2
	DUFFCP(CWD-INIQAD-3) = .TRUE.
	GOTO 20
C
C processed command line - get started
110	IF (.NOT.HADIFF) GOTO 370	! IFF filename not given
**	IFT
	IF (QDRNT .LE. 0) GOTO 430
**	IFTF
C start the HRD (perhaps)
	IF (.NOT.USEHRD) GOTO 120
	CALL LDINIT(127)
	CALL TRSET(1)	! work in counts
	CALL SCBUF(IBUF,ISIZE)
	CALL UNITS(0.001)
	CALL CHSIZE(400.0,400.0,0.0)
C and the separate refresh CH size, since we're
C using RF's LDLIB
	CALL DISMOD(1)
	CALL CHSIZE(400.,400.,0.0)
	CALL DISMOD(0)
	CALL LDINPM(1,BLUFOC,N,N)
	IF (MOVEPC) CALL PCFRAM(1.0)
C set up IFF
120	CALL IFFTDY (RTIDY)
C open constants file
	CALL LINOUT(SYSNAM)
	CALL IFFOPN(SAVLUN, SYSNAM(1),5120)
	IF (IERCD .EQ. 0) GOTO 130
	CALL WRITEF('Can''t open system file')
***	IFF
	CALL WRITEF('Note that system files are now .FLF - to use an')
	CALL WRITEF('old file you must rename it or use WITH XYZ.IFF')
***	IFTF
	GOTO 450
C
C open output IFF file
130	IF(NEWIFF) GOTO 140
	CALL WRITEF('%S;0',IFFNAM)	! try existing file
	CALL IFFOPN(IFFLUN, NUM(1))
	IF (IERCD .EQ. 0) GOTO 180	! found it
	IF (IERCD.NE.IO .OR. IERNM.NE.-26) GOTO 150
C create new IFF file
140	CALL LINOUT(IFFNAM)		! not there - create one
	CALL IFFOPN(IFFLUN, IFFNAM(1))
	IF (IERCD .EQ. 0) GOTO 160
C eror when trying to open output file
150	CALL IFFCLO(SAVLUN)
	GOTO 450
C
C Initialise new IFF file
C
160	CALL IFFCLR             ! in case old empty file
	IDESC(1) = -1
	CALL IFFMD(IDESC,MDLEN)	! null MD entry
	CALL IFFRA(COEFT)	! dummy RAnge entry owtn by reprocessor
C set unit transform
	DO 170 I = 1,2
	  DO 170 J = 1,10
	    CFT(J,I) = COEFT(J,I)
170	    CONTINUE
	GOTO 305
C
C Set up for old file
C
180	CALL IFFRWD
	DO 240 NIE = 1,4
190	  CALL IFFNXT(IECODE, IELEN)	! look at next entry
	  IF (IELEN .LT. 0) GOTO 330	! EOF
	  IF (IECODE.EQ.MD) GOTO 190    ! skip map descriptor
	  IF (IECODE.EQ.EJ.AND.NIE.EQ.2) GOTO 160  ! empty file
	  IF (IECODE .NE. IELIST(NIE)) GOTO 340
C deal with entry
	  GOTO (200, 210, 220, 230),NIE
C RA - do nothing
200	  GOTO 240
C NS - type the message
210	  CALL EIHR(NUM(1), IELEN, 1)
	  NUM(IELEN*2+1) = 0
	  CALL LINOUT(NUM(1))
	  GOTO 240
C CC - read in coefficients
220	  CALL EIHRR(CFT(1,1), 20, 1)
	  CCGOT = .TRUE.
	  GOTO 240
C CP - read 'em in
230	  CALL EIHRR(CPTS(1,1), 16, 1)
	  CPGOT = .TRUE.
240	  CONTINUE
C
C remove the EJ from the end of the file
250	CALL IFFNXT(IECODE,IELEN)
	IF(IELEN.LT.0) GOTO 280
	IF(IECODE.EQ.NO) GOTO 270
	IF(IECODE.EQ.EJ) GOTO 290
	IF(IECODE.EQ.NF) GOTO 260
	GOTO 250
C NF - record largest feature numbers
260	CALL EIHRI(N,1,1)
	IF(OVRNUM.GT.0 .AND. N.GT.FNUM(OVRNUM)) FNUM(OVRNUM)=N
	GOTO 250
C NO - set up for overlay
270	CALL EIHRI(N,1,1)
	CALL SETOVR(N,.FALSE.)
	IF (OVRLAY(OVRNUM).EQ.CNROVR) HADTIK = .TRUE.
	GOTO 250
C
C end of file - moan but continue
280	CALL WRITEF('Couldn''t find "EJ" entry')
	GOTO 300
C
C EJ - tidy up end of file
290	CALL EIHMK(1)			! mark the EJ
	CALL IFFNXT(IECODE, IELEN)	! move to next entry
	CALL IFFVOM			! remove the EJ
	CALL EIHMK(0)			! remove marker
	GOTO 300			! ignore anything after EJ
CCC
CCC	IF (IELEN .LT. 0) GOTO 300	! done if at EOF
CCC	CALL WRITEF('Entry "%C" found after "EJ"',IECODE)
CCC	GOTO 250			! keep looking
C report on overlays
300	IF (OVRLAY(OVRNUM).EQ.CNROVR) OVRNUM = -1
C new IFF file joins
305	CONTINUE
**	IFT
	CALL SETOVR(QDRNT,.FALSE.)		! default selection
**	IFTF
	IF (OVRNUM.GT.0)CALL WRITEF('Layer %N selected',OVRLAY(OVRNUM))
**	IFT
C set CPs for this quadrant
	IF (CPGOT) GOTO 320		! use previous ones
	DO 310 I = 1,4
	  CPTS(2+X,I) = OFFSET(X,I) + OFFSET(X,QDRNT)
	  CPTS(2+Y,I) = OFFSET(Y,I) + OFFSET(Y,QDRNT)
	  IF (.NOT.DUFFCP(I)) GOTO 310
	  IF (ABS(CPTS(2+X,I)-DUFVAL(X,I)).GT.30 .OR.
     *        ABS(CPTS(2+Y,I)-DUFVAL(Y,I)).GT.30) 
     *    CALL WRITEF('Suspicious CP %C %F7.2 %F7.2',
     *                 NEWS(I),DUFVAL(X,I),DUFVAL(Y,I))
	  CPTS(2+X,I) = DUFVAL(X,I)
	  CPTS(2+Y,I) = DUFVAL(Y,I)
310	  CONTINUE
**	IFTF
C tidy up & exit
320	MESSAG=0
	DCPTR = -1	! finished with command line now
	TXTPTR = -2
	RETURN
C Errors in data file
330	CALL WRITEF('Expected entry "%C" not in IFF file',IELIST(NIE))
	GOTO 350
C
340	CALL WRITEF
     *    ('Entry "%C" found in IFF file when "%C" was expected',
     *     IECODE, IELIST(NIE))
C close files
350	CALL IFFCLO(IFFLUN)
	CALL IFFCLO(SAVLUN)
	GOTO 450		! then exit
C
C
360	CALL MSGF('GETMCR error')
	GOTO 450
C
370	CALL MSGF('No IFF filename given')
	GOTO 450
C
380	CALL MSGF('Illegal filename')
	GOTO 450
C
390	CALL MSGF('Constants file name absent/too long')
	GOTO 450
C
400	CALL MSGF('Error in command line')
	GOTO 450
C
420	CALL MSGF('Quadrant specified twice')
	GOTO 450
C
430	CALL MSGF('No quadrant specified')
	GOTO 450
C
440	CALL MSGF('Output file specified twice')
	GOTO 450
C
450	CALL EXIT
C
	END
C
**	ENDC
