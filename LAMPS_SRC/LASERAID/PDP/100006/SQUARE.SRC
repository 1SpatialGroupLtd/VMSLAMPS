	SUBROUTINE SQUARE(MP,NMP,SQUTOL,TRKWID,CLOSED)
C
C Copyright Laser-Scan Laboratories Ltd, Cambridge, England
C
C Author Paul Hardy
C
C Written 9.8.78
C Last edited 23/viii/78
C
C Routine to square buildings for OS trial
C
***	COMMON/PARAMS/
C
C
	REAL MP(2,NMP)  ! list of master points
	REAL SQUTOL	! angular tolerance for par & perp
	REAL TRKWID	! track width
	LOGICAL*1 CLOSED
C
C w/s
	INTEGER ISL(MAXMP),NSQ
	REAL ANG(2),P(2,MAXMP),ATHETA,APHI,THELEN,PHILEN
	REAL DX,DY,D,DMAX,DXL,DYL,THETA,PHI,ALPHA,PI,PIBY2
C
	DATA PI/3.141592653/
C
C set up
	RADTOL=SQUTOL*PI/180.
	PIBY2=PI/2.
C find longest segment
	DMAX=-1.
	DO 10 I=1,NMP-1
	   DX=MP(X,I+1)-MP(X,I)
	   DY=MP(Y,I+1)-MP(Y,I)
	   D=DX*DX+DY*DY
	   IF(D.LE.DMAX) GOTO 10
	   DMAX=D
	   LONGST=I
	   DXL=DX
	   DYL=DY
10	   CONTINUE
C remember orientation of major segment
	THETA=ATAN2(DYL,DXL)
	IF(THETA.LT.0.0) THETA = THETA + PI
	PHI=THETA+PIBY2
C sort into random, perpendicular and parallel (0,1,2)
	LASTSL=-1
	LSTMAJ=-1
	ATHETA=0.0
	APHI=0.0
	NTHETA=0
	NPHI=0
	THELEN=0.0
	PHILEN=0.0
	DO 80 I=1,NMP-1
	   DX=MP(X,I+1)-MP(X,I)
	   DY=MP(Y,I+1)-MP(Y,I)
	   D=SQRT(DX*DX+DY*DY)
	   ALPHA=ATAN2(DY,DX)
	   IF(ALPHA.LT.0.0) ALPHA = ALPHA + PI
	   ISLOPE=0
C is it a 'theta'?
	   IF (ABS(ALPHA-THETA).GE.RADTOL) GOTO 20
C yes - mark it as such and add to mean angle
	   ISLOPE=1
	   NTHETA=NTHETA+1
	   ATHETA=ATHETA+ALPHA*D
	   THELEN=THELEN+D
	   GOTO 40
C not a 'theta' - is it a 'phi'?
20	   IF (ALPHA.LT.THETA) ALPHA = ALPHA+PI
	   IF (ABS(ALPHA-PHI).GE.RADTOL) GOTO 40
C it's a 'phi' - mark it and add to mean of perps
30	   ISLOPE = 2
	   NPHI=NPHI+1
	   APHI=APHI+ALPHA*D
	   PHILEN=PHILEN+D
C
C add to mean for segment
40	   XS=XS+MP(X,I)
	   YS=YS+MP(Y,I)
	   DS=DS+D
	   NSEG=NSEG+1
	   IF(ISLOPE.EQ.LASTSL) GOTO 70  ! same slope
	   IF(I.EQ.1) GOTO 50  ! first segment
	   NS=NS+1
	   P(X,NS)=XS/NSEG  ! mean
	   P(Y,NS)=YS/NSEG
	   ISL(NS)=LASTSL
50	   XS=MP(X,I)
	   YS=MP(Y,I)
	   DOLD=DS
	   DS=D
	   NSEG=1
C now check for spurious "other"s
	   IF(ISLOPE.EQ.0) GOTO 70  ! change to other
	   IF(LASTSL.NE.0) GOTO 70  ! not change from other
	   IF(LSTMAJ.NE.ISLOPE) GOTO 60  ! other at corner or start
C we now have "perp - other - perp" or "par - other - par"
	   ISL(NS)=3-ISLOPE  ! make it the opposite major
	   IF(DOLD.GT.TRKWID) GOTO 70  ! large one so keep it
	   XS=XS+(P(X,NS-1)+P(X,NS))/2.
	   YS=YS+(P(Y,NS-1)+P(Y,NS))/2.
	   NSEG=3
	   NS=NS-2
	   GOTO 70
C "other" at corner - remove it
60	   NS=NS-1
	   LASTSL=LSTMAJ
	   GOTO 70
C remember what's what
70	   LASTSL=ISLOPE
	   IF(ISLOPE.NE.0) LSTMAJ = ISLOPE
D	   CALL WRITEF('I=%N,ISLOPE=%N,NS=%N,ISL(NS)=%N',
D     &          I,ISLOPE,NS,ISL(NS))
C
80	   CONTINUE
C deal with end conditions
	IF(LASTSL.NE.ISL(1)) GOTO 90
C here with start same as end
	P(X,1)=(P(X,1)+XS/NSEG)/2.
	P(Y,1)=(P(Y,1)+YS/NSEG)/2.
	IF(ISLOPE.NE.0) GOTO 110 ! a major
	ISL(1)=3-LSTMAJ ! force opposite major
	GOTO 110
C preserve end
90	NS=NS+1
	P(X,NS)=XS/NSEG
	P(Y,NS)=YS/NSEG
	ISL(NS)=ISLOPE
	DOLD=DS
	IF(ISLOPE.NE.0) GOTO 110  ! major
	IF(ISL(1).EQ.LSTMAJ) GOTO 100  ! spurious other
	NS=NS-1
	GOTO 110  ! ignore it
100	ISL(NS)=3-LSTMAJ  ! force to opposite major
	IF(DOLD.GT.TRKWID) GOTO 110  ! large so keep it
C here with short ending other
	P(X,1)=(P(X,1)+P(X,NS-1)+P(X,NS))/3.
	P(Y,1)=(P(Y,1)+P(Y,NS-1)+P(Y,NS))/3.
	NS=NS-2
C
C now intersect all segments to find verteces
110	ANG(2)=PHI
	IF(NPHI.NE.0) ANG(2)=APHI/PHILEN  ! use mean if possible
	ANG(1)=ATHETA/THELEN
	ANG(1)=ANG(1)+PIBY2
	ANG(2)=ANG(2)+PIBY2
	SINTH2=SIN(ANG(ISL(NS)))
	COSTH2=COS(ANG(ISL(NS)))
	R2=P(X,NS)*COSTH2+P(Y,NS)*SINTH2
	DO 120 I=1,NS
	   IF(ISL(I).EQ.0) CALL WRITEF('SEG %N ISL=%N',I,ISL(I))
	   COSTH1=COSTH2
	   SINTH1=SINTH2
	   COSTH2=COS(ANG(ISL(I)))
	   SINTH2=SIN(ANG(ISL(I)))
	   R1=R2
	   R2=P(X,I)*COSTH2+P(Y,I)*SINTH2
C find intersect
	   A12=COSTH1*SINTH2-COSTH2*SINTH1
	   IF(ABS(A12).LT.0.5) CALL WRITEF('A12=%F',A12)
	   MP(X,I)=(R1*SINTH2-R2*SINTH1)/A12
	   MP(Y,I)=(R2*COSTH1-R1*COSTH2)/A12
120	   CONTINUE
C add closing point
	NMP=NS+1
	MP(X,NMP)=MP(X,1)
	MP(Y,NMP)=MP(Y,1)
C
	RETURN
	END
