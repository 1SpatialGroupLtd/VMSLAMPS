C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1980-02-21 11:48:30.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL FUNCTION RDREAL(R)
C
C Copyright Laser Scan Laboratories Ltd., Cambridge, England.
C Author  R. Fairbairns
C
C Coded 23.iii.76
C Typed 24.iii.76
C Edited 18/v/78
C
C To read a real number from the HRD text input buffer
C Syntax of numbers is as FORTRAN real, but '&' replaces 'E'
C E.G.  -123.45& 7       654.3& -21   -12.34
C   there must not be a space before the ampersand
C
C The function result is .TRUE. if no number read
C
	REAL R
C
C R is what's to hold the real result
C
***	COMMON/TEXTC/
C
C w/s
	LOGICAL*1 NEGTVE,HADDOT
C
C preliminary ideas
	R = 0.0
	HADDOT = .FALSE.
	RDREAL = .TRUE.
	NEGTVE = .FALSE.
C skip leading spaces
	DCPTR = DCPTR-1
1	DCPTR = DCPTR+1
	IF (TXTBUF(DCPTR).EQ.32.AND.DCPTR.LT.TXTPTR) GOTO 1
	IF (TXTBUF(DCPTR).NE.45) GOTO 2
	NEGTVE = .TRUE.
	DCPTR = DCPTR+1
	IF (DCPTR.GT.TXTPTR) GOTO 24
C
C now loop to extract digits
2	N = TXTBUF(DCPTR)-48
	IF (N.LT.0.OR.N.GT.9) GOTO 20
	RDREAL = .FALSE.
	IF (HADDOT) GOTO 21
	R = R*10.0+FLOAT(N)
22	DCPTR = DCPTR+1
	IF (DCPTR.LE.TXTPTR) GOTO 2
C
C end of the number - take account of the sign
23	IF (NEGTVE) R = -R
C
C return value
24	RETURN
C
C digit after a .
21	FRACTN = FRACTN*0.1
	R = R+FRACTN*FLOAT(N)
	GOTO 22
C
C not a digit - is it a 'legal' dot or ampersand?
20	IF (TXTBUF(DCPTR).EQ."56 .AND. .NOT.HADDOT) GOTO 30	! .
	IF (TXTBUF(DCPTR).EQ."46) GOTO 40			! &
	GOTO 23		! neither
C dot
30	HADDOT = .TRUE.
	FRACTN = 1.0
	GOTO 22
C ampersand
40	DCPTR = DCPTR+1
	CALL RDINT(NEXP)
	R = R*(10.**NEXP)
	GOTO 23
C
	END
