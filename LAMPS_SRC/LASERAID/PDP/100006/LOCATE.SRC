C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1980-08-01 10:35:10.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE LOCATE
C
C Copyright Laser-Scan Laboratories Ltd,Cambridge,England
C
C Author M.C.Fulford
C
C	Created 27.iv.78
C Common block /NULLC/ removed AJW 1-Aug-1980
C	Last edited 1/Aug/80
C
C Lash-up feature find routine, made from TRNPNT
C
***	COMMON/PARAMS/
C
C
	PARAMETER HITTOL=1500.0	! area to search in
	PARAMETER MAXHIT = 4	! max no. of hits stored
	PARAMETER MAXDRW = 10	! amount of feature refreshed
C
	INTEGER*4 HITNF(MAXHIT)
	INTEGER  HITPNT(MAXHIT)
	REAL     HITDIS(MAXHIT)
	REAL     HITA(0:3,MAXHIT),HITB(0:3,MAXHIT)
	INTEGER HITNUM
	INTEGER WSTHIT
C
	REAL XC,YC		! cursor in current space
	INTEGER CWD		! command
	INTEGER*4 THISNF	!  address of feature being considered
	INTEGER PNTCNT		! number of nearest point in it
	REAL THSDIS		! distance to that point
	INTEGER SLOT		! where hit was stored last
	INTEGER CHOICE		! hit to be displayed
C
***	COMMON/IFFHAN/
***	COMMON/TEXTC/
***	COMMON/COEFFS/
C
	INTEGER CP,TH,ST,NF,EF		! IFF codes
	REAL A(0:3),B(0:3),AP(0:3),BP(0:3)! 4 point transforms
	REAL XP,YP,PNT(2)		! coordinates
	REAL THK			! thickness
	REAL CPOLD(4,4)			! corner points
	LOGICAL*1 PENUP
	LOGICAL*1 DRWING		! if to paint out
C
	INTEGER RDCOMM
C
C Command table:
	EXTERNAL NULLCM
C
	DATA CP,TH,ST,NF,EF/'CP','TH','ST','NF','EF'/
C
C get polynomial for this CP space
	CALL GETAB(CPTS(1,1),AP(0),BP(0))
C & the default for the other space
	CALL GETAB(CPTS(1,1), A(0), B(0))
	CALL CSRD(XC,YC)
	CALL DISMOD(0)
	CALL FBWT16("100000)
	CALL IFFRWD
	HITNUM = 0
C look at each item in the IFF file
10	CALL FBRD(N)		! see if operator's fed up
	IF (N .EQ. 16) GOTO 900
	CALL IFFNXT(IECODE, IELEN)
	IF (IELEN .LT. 0) GOTO 80		! EOF
	IF (IECODE .EQ. CP) GOTO 20
	IF (IECODE .EQ. NF) GOTO 40
	IF (IECODE .EQ. ST) GOTO 60
	GOTO 10
C CP - set new polynomial
20	CALL EIHRR(CPOLD(1,1), 16, 1)
	CALL GETAB(CPOLD(1,1), A(0), B(0))
	GOTO 10
C NF - record position
40	THISNF = LPOSH
	PNTCNT = 0
	SLOT = 0
	GOTO 10
C ST - look for point near cursor
60	CALL EIHRS(NPTS, IENDS)
	DO 70 I = 1,NPTS
	  PNTCNT = PNTCNT+1
	  CALL EIHRR(PNT(1), 2, (I-1)*4+1)
	  CALL AB4TRN(A,B,AP,BP,2,PNT(X),PNT(Y))
	  DX = PNT(X)-XC
	  DY = PNT(Y)-YC
	  IF (ABS(DX) .GT. HITTOL) GOTO 70
	  IF (ABS(DY) .GT. HITTOL) GOTO 70
	  THSDIS = DX*DX+DY*DY
	  IF (HITNUM .LT. MAXHIT) GOTO 62 ! add it - we've room
	  IF (THSDIS.GT.HITDIS(WSTHIT)) GOTO 70 ! full of better 'uns
C decide where hit goes
62	  IF (HITNUM .EQ. 0) GOTO 64	  ! 1st hit
C do we already have a hit for this feature ?
	  IF (SLOT .EQ. 0) GOTO 63	! no
C yes - is this better ?
	  IF (THSDIS .LT. HITDIS(SLOT)) GOTO 66 ! yes
	  GOTO 70	! no - leave old hit
C new feature - use worst hit's slot
63	  SLOT = WSTHIT
	  IF (HITNUM .GE. MAXHIT) GOTO 66
C unless we have a spare slot to use
64	  HITNUM = HITNUM+1
	  SLOT = HITNUM
C remember hit
66	  HITNF(SLOT) = THISNF
	  HITPNT(SLOT)= PNTCNT
	  HITDIS(SLOT) = THSDIS
	  DO 67 J = 0,3
	    HITA(J,SLOT) = A(J)
	    HITB(J,SLOT) = B(J)
67	    CONTINUE
C choose new worst hit
	  WSTHIT = 1
	  IF (HITNUM .EQ. 1) GOTO 70
	  DO 68 J = 2,HITNUM
	    IF(HITDIS(J).GT.HITDIS(WSTHIT)) WSTHIT = J
68	    CONTINUE
C
70	  CONTINUE
	GOTO 10
C
C end of file reached
80	IF (HITNUM .LE. 0) GOTO 900 ! nowt seen
C choose best hit
	CHOICE = 1
	DO 90 I = 1,HITNUM
	  IF(HITDIS(I).LT.HITDIS(CHOICE))CHOICE = I
90	  CONTINUE
C
C editing the feature
C
110	CALL DISMOD(1)
	DRWING = .FALSE.
C
120	CALL IFFPKE(IECODE,IELEN,HITNF(CHOICE))
	PENUP = .TRUE.
	PNTCNT = 0
C
140	CALL IFFNXT(IECODE,IELEN)
	IF (IELEN .LT. 0) GOTO 280
	IF (IECODE .EQ. ST) GOTO 160
	IF (IECODE .EQ. TH) GOTO 150
	IF (IECODE .EQ. EF) GOTO 280
	GOTO 140
C TH
150	CALL EIHRI(ITHK,1,1)
	CALL THICK(FLOAT(ITHK))
	GOTO 140
C
C ST
160	CALL EIHRS(NPTS,IENDS)
	IF ((IENDS.AND.1).EQ.0) PENUP = .TRUE.
	N1ST = HITPNT(CHOICE) - MAXDRW - PNTCNT
	NLST = HITPNT(CHOICE) + MAXDRW - PNTCNT
	IF (DRWING .OR. N1ST .LT. 1) N1ST = 1
	IF (DRWING .OR. NLST.GT.NPTS) NLST = NPTS
	IF (N1ST .GT. NLST) GOTO 270
	DO 260 I = N1ST,NLST
	  CALL EIHRR(PNT(1),2,(I-1)*4+1)
	  CALL AB4TRN(HITA(0,CHOICE),HITB(0,CHOICE),
     *                AP,BP,2,PNT(X),PNT(Y))
	  IF (PENUP) CALL MOVTO(PNT(X),PNT(Y))
	  IF(.NOT.PENUP)CALLLINTO(PNT(X),PNT(Y))
	  PENUP = .FALSE.
260	  CONTINUE
270	PNTCNT = PNTCNT+NPTS
	GOTO 140
C EF or end-of-file
280	IF (DRWING) GOTO 110
C if one-point feature, draw a cross
	IF (PNTCNT .EQ. 1) CALL PLTCHR("130)
C get command
	CALL FBWT16("110011)
300	CWD = RDCOMM(NULLCM)
	GOTO (380,300,300,400,
     *        300,300,300,300,
     *        300,300,300,300,
     *        420,300,300,900),CWD
	DCPTR = -1
	TXTPTR = -2
	GOTO 300
C next option
380	CHOICE = CHOICE+1
	IF (CHOICE .GT. HITNUM) CHOICE = 1
	GOTO 110
C repaint
400	DRWING = .TRUE.
	CALL DISMOD(0)
	GOTO 120
C delete
420	CALL IFFPKE(IECODE,IELEN,HITNF(CHOICE))
	CALL EIHMK(1)
	CALL IFFNXC('EF',IELEN)
	IF (IELEN.GE.0) CALL IFFNXT(IECODE,IELEN)
	CALL IFFVOM
	CALL EIHMK(0)
C EXIT
900	CALL THICK(0.0)
	CALL DISMOD(1)
	RETURN
	END
