	INTEGER FUNCTION APPSEG(NEAR,NMPIFF,OUTPUT)
C
C Copyright Laser-Scan Laboratories Ltd,Cambridge,England
C
C Originated by M.C.Fulford 18.iv.79
C
C Created from TOMP by A.J.Wylie 29.xi.79
C Minor bug fixed by M.C.Fulford 9/Jun/80
C   ( CHAIN(CONNCT(2,CHNSEL)) always zeroed now )
C Junction flagging added by A.J.Wylie 8/July/80
C	Last edited 8/July/80
C
C Output /TRKSEG/ to MP
C Result is:-
C	<0 - feature closed
C	=0 - nothing
C	>0 - feature too big for IFF reprocessor
C
***	COMMON/PARAMS/
***	COMMON/DIGC/
***	COMMON/LKPARM/
***	COMMON/MPEP/
***	COMMON/LKFOLL/
***	COMMON/TRKSEG/
***	COMMON/LINKS/
C
C parameters
	LOGICAL*1 OUTPUT,NEAR
	INTEGER NMPIFF
C
C workspace
	REAL DX(3),DY(3),RR(3),HH,RR2COS
	REAL DOT12
	INTEGER N,MOLD
C
C statement function
	DOT(I,J) = DX(I)*DX(J)+DY(I)*DY(J)
C
	APPSEG = 0
	IF (SEGLEN.LE.0) GOTO 90
	DO 40 I = 1,SEGLEN
	  MOLD = NMP(1)
	  CALL BUNCH(SEGPT(X,I),SEGPT(Y,I))
C
**	IF JNCTN
C
C If it is a junction point, make sure it is in the MP1 buffer,
C and set the flag in /MPEP/ with the number of arms
	  IF (I.NE.1.OR.SEGJUN.EQ.0) GOTO 5
	    CALL FLUSH		! to make sure it is in the buffer
	    MPJUN(NMP(1))=SEGJUN	! mark it as a junction
5	  CONTINUE
C
**	ENDC
C
C preserve first point.
	  IF(NMP(1).EQ.MOLD) GOTO 10  ! not a new master point
	  IF(.NOT.((NMP(1).EQ.1).AND.PENUP)) GOTO 10
	  SEC(X) = MP1(X,1)
	  SEC(Y) = MP1(Y,1)
	  GOTO 20
C check for closure if closed feature
10	  IF(OPEN) GOTO 20
	  IF(.NOT.NEAR) GOTO 20
	  IF(NMP(1).LT.3) GOTO 20
	  DX(2) = SEGPT(X,I)-SEC(X)
	  DY(2) = SEGPT(Y,I)-SEC(Y)
	  DX(1) = MP1(X,MOLD)-SEC(X)
	  DY(1) = MP1(Y,MOLD)-SEC(Y)
C now check for overshoot
	  DOT12 = DOT(1,2)
	  IF(DOT12.GT.0) GOTO 20
C angle is obtuse so check perpendicular distance
	  DX(3) = DX(2)-DX(1)
	  DY(3) = DY(2)-DY(1)
	  RR(1) = DOT(1,1)
	  RR(2) = DOT(2,2)
	  RR(3) = DOT(3,3)
	  RR2COS = RR(1)+RR(3)-RR(2)
	  HH = RR(1)-0.25*RR2COS*RR2COS/RR(3)
	  IF(HH.GT.LIMIT(13)) GOTO 20  ! not near enough
C close enough so closed
	  APPSEG = -1
	  NMP(1) = NMP(1)+1
	  MP1(X,NMP(1)) = SEGPT(X,I)
	  MP1(Y,NMP(1)) = SEGPT(Y,I)
	  GOTO 60
C
20	  IF (NMP(1) .LE. MPLIM) GOTO 40
	  N = NMPIFF+(NMP(1)-MPLEFT)
	  IF (N+MPLEFT .LE. MPTOTE) GOTO 30
	  APPSEG = 1	!too big
	  GOTO 60
C
30	  NMPIFF = N
	  CALL OUTMP1(MPLEFT,THKNSS,PENUP,OUTPUT)
40	  CONTINUE
C
60	IF (TRKWID.LE.0) TRKWID = SEGWID
	TRKWID = (TRKWID+SEGWID)/2
90	CHAIN(CONNCT(2,CHNSEL)) = 0
	RETURN
	END
