	INTEGER FUNCTION PARALL(PARCHN,P1,P2)
C
C Copyright Laser-Scan Laboratories Limited,Cambridge,England.
C
C Author Alan J. Wylie.
C
C	Created 09.01.80
C
C	Last edited 25/02/80
C
C Returns in PARCHN those chains from LINKS and RSE of which
C the points on them closest to P1 and P2 define a line close
C and parallel to the vector P1P2
C The result is the number of parallel chains
C
C
***	COMMON/PARAMS/
***	COMMON/LINKS/
***	COMMON/RSE/
***	COMMON/ELFPAR/
C
C
C arguments:
	INTEGER PARCHN(3,MAXCHN),P1(2),P2(2)
C
C PARCHN(1,N) is the number of the Nth parallel chain
C PARCHN(2,N) is the point closest to P1
C PARCHN(3,N)  is the point closest to P2
C
C functions:
	INTEGER PARVEC
	LOGICAL TSTATT
C local w/s:
	INTEGER PARRES			! result of PARALL
	INTEGER NR1,NR2			! points closest to P1 & P2
	INTEGER FI,LI			! FIRST(I),LAST(I)
	INTEGER ENC1(2),ENC2(2)		! ENCBUF(NR1),..(NR2)
	LOGICAL*1 FOUND
	INTEGER OFFSET
	REAL D1,D2			! distances P1-NR1 & D2-NR2
C code:
	PARALL=1		! count
	DO 50 I=1,MAXCHN
	   PARCHN(1,I)=0
	   PARCHN(2,I)=0	! clear result array
	   PARCHN(3,I)=0
	   IF (CHAIN(I).LE.0) GOTO 50
	   FI=FIRST(I)
	   LI=LAST(I)
	   FOUND=TSTATT(P1(X),P1(Y),I,99999999.0,0,0,NR1,B,D1)
	   NR1=NR1+FI-1
	   IF (.NOT.FOUND) GOTO 50
	   FOUND=TSTATT(P2(X),P2(Y),I,99999999.0,0,0,NR2,B,D2)
	   NR2=NR2+FI-1
	   IF (.NOT.FOUND) GOTO 50
	   IF (NR1.NE.NR2) GOTO 30
C If two points are same,and at end of chain,move closer one away
	      OFFSET=VECLEN
	      IF (NR1.EQ.LI) OFFSET=-VECLEN
	      IF (NR1.NE.FI) GOTO 50
	      IF (D1.GT.D2) GOTO 10
		 NR1=NR1+OFFSET
		 GOTO 20
10	      CONTINUE
		 NR2=NR2+OFFSET
20	      CONTINUE
C Off end ?
	   IF (NR1.LT.FI.OR.NR2.LT.FI.OR.NR1.GT.LI.OR.NR2.GT.LI) GOTO 50
30	   DO 40 J=1,2
	      ENC1(J)=ENCBUF(J,NODE(NR1))
	      ENC2(J)=ENCBUF(J,NODE(NR2))
40	   CONTINUE
	   PARRES=PARVEC(P1,P2,ENC1,ENC2,PARDIS,PARCOS)
	   IF (PARRES.LE.0) GOTO 50
	      PARCHN(1,PARALL)=I
	      PARCHN(2,PARALL)=NR1
	      PARCHN(3,PARALL)=NR2
	      PARALL=PARALL+1
50	CONTINUE
	PARALL=PARALL-1
C
C
	RETURN
	END
