C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1980-05-16 12:41:28.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE PAINT (LFPOS, DIRN, OTHIK, GOTWIN, PNTWIN, NHATCH)
C
C Copyright Laser-Scan Laboratories Ltd,Cambridge,England
C
C Author M.C.Fulford
C
C	Created 5.iv.78
C	NHATCH added				AJW	18.OCT.79
C	Coordinate transform using AB4TRN	MCF	27.FEB.80
C	Errors in previous change amended	MCF	16/MAY/80
C
C Full transforming paint-out - area filling version (conditional)
C now has optional window.
C
C Options:-
C	a) paintout from LFPOS, forwards, not transforming
C	b) paintout whole file backwards,transforming
C	c) paintout whole file forwards,transforming
C	d) catchup on "paintout suppressed" features, from LFPOS
C
C parameters:
***	COMMON/PARAMS/
C
	PARAMETER MAXNS = 6		! sizes of lists
	PARAMETER MAXNO = 6
	PARAMETER MAXNF = 120
**	IF	ELF
	PARAMETER MAXFIL = 600
**	ENDC
	PARAMETER PSBIT = "40	! paint-out suppress bit
C
C arguments:
	INTEGER*4 LFPOS		! where to start looking
	LOGICAL*1 DIRN		! direction (TRUE => forwards)
	REAL      OTHIK		! over-riding thickness
	LOGICAL*1 GOTWIN	! window defined
	REAL PNTWIN(2,2)	! the window
	INTEGER NHATCH		!Type of paintout
C
C common blocks:
***	COMMON/COEFFS/		! for current CP coords
***	COMMON/MASTER/		! for integer arguments
C
C workspace:
	INTEGER CP,TH,ST,EF,FS,NO,NF,EO	! IFF codes
	REAL CPOLD(4,4)		! old CPs
	REAL PNT(2)		! coordinates
	REAL A(0:3),B(0:3),AP(0:3),BP(0:3)	! polynomials
C lists of IFF entries
	INTEGER*4 NSLIST(MAXNS),NOLIST(MAXNO),NFLIST(MAXNF)
	INTEGER NSNUM,NONUM,NFNUM
	INTEGER NSLIM,NOLIM,NFLIM
	INTEGER OVSEL		! how many selected overlays
	INTEGER OVLST(8)	! their numbers
	LOGICAL*1 CTCHNG	!  catching up
	LOGICAL*1 WANTED	! feature wanted for paint-out
	LOGICAL*1 DRAW		! draw this feature
	LOGICAL*1 FORTH		! direction of paintout
	LOGICAL*1 PENUP		! pen's up
	REAL WINDOW(2,2)	! our copy of window
**	IF	ELF
	REAL FILLNG(2, MAXFIL)	! points for area filling
**	ENDC
	INTEGER NFILL		! number of points (only used if ELF)
C
C functions:
	LOGICAL INSIDE
C
C data:
	DATA CP,TH,ST,EF,FS,NO,NF/'CP','TH','ST','EF','FS','NO','NF'/
	DATA EO/'EO'/
C
C function definition:
	INSIDE(PX,PY) = WINDOW(X,1).LT.PX .AND.
     *                  PX.LT.WINDOW(X,2) .AND.
     *                  WINDOW(Y,1).LT.PY .AND.
     *                  PY.LT.WINDOW(Y,2)
C
C
C set up our copy of the window
	DO 10 I = 1,2
	DO 10 J = 1,2
	  WINDOW(I,J) = 0.0
	  IF (GOTWIN) WINDOW(I,J) = PNTWIN(I,J)
10	  CONTINUE
C
	CALL DISMOD(0)
	CALL FLEVEL(BLUFOC)
	CALL FBWT16("100000)
	CTCHNG = .FALSE.
	CALL GETAB(CPTS(1,1),AP(0),BP(0))
	CALL GETAB(CPTS(1,1), A(0), B(0))
C set up list of selected overlays
	OVSEL = NUMINT
	IF (OVSEL .LE. 0) GOTO 40
	DO 20 I = 1,OVSEL
	  OVLST(I) = INTAR(I)
20	  CONTINUE
C decide on what to to
40	IF (LFPOS .EQ. 0) GOTO 60
	CALL IFFPKE( IECODE, IELEN, LFPOS)
	FORTH = .TRUE.
	GOTO 280
C whole file
60	FORTH = DIRN
	CALL IFFRWD
	IF (FORTH) GOTO 280
C get NS list for file
80	NSLIM = -1
100	CALL IFFRWD
	CALL GETLST('NS',NSLIST,MAXNS,NSNUM,NSLIM,0)
	IF (NSNUM) 640,640,120
120	DO 620 INS = NSNUM,1,-1
	  NOLIM = -1
140	  CALL IFFPKE(IECODE,IELEN,NSLIST(INS))
	  CALL IFFNXC('CP',IELEN)
	  IF (IELEN .GE. 0) GOTO 160
	  CALL WRITEF('No CP after NS')
	  GOTO 640
C set transform for this section
160	  CALL EIHRR(CPOLD(1,1), 16, 1)
	  CALL GETAB(CPOLD(1,1), A(0), B(0))
C set up NO list for this section
	  CALL GETLST('NO',NOLIST,MAXNO,NONUM,NOLIM,'NS')
	  IF (NONUM)640,620,180
C  look at each overlay
180	  DO 600 INO = NONUM,1,-1
	    NFLIM = -1
200	    CALL IFFPKE(IECODE,IELEN,NOLIST(INO))
	    CALL EIHRI(N,1,1)		! look at overlay number
	    IF (OVSEL .LE. 0) GOTO 240	! no selection
	    DO 220 I = 1,OVSEL		! see if overlay wanted
	      IF (OVLST(I) .EQ. N) GOTO 240
220	      CONTINUE
	    GOTO 600			! not wanted
C get list of features in this overlay
240	    CALL GETLST('NF',NFLIST,MAXNF,NFNUM,NFLIM,'NO')
	    IF (NFNUM)640,600,260
C look at each feature in the list
260	    DO 580 INF = NFNUM,1,-1
	      CALL IFFPKE(IECODE,IELEN,NFLIST(INF))
	      NFILL = 0
C FORTH cases join in here
280	      DRAW = .TRUE.
300	      CALL FBRD(N)
	      IF (N .EQ. 16) GOTO 640
	      CALL IFFNXT(IECODE,IELEN)
320	      IF (IELEN  .LT.  0) GOTO 550
	      IF (IECODE .EQ. NF) GOTO 330
	      IF (IECODE .EQ. TH) GOTO 440
	      IF (IECODE .EQ. ST) GOTO 460
	      IF (IECODE .EQ. EF) GOTO 550
	      IF (IECODE .EQ. FS) GOTO 380
	      IF (IECODE .EQ. CP) GOTO 420
	      IF (IECODE .EQ. NO) GOTO 340
	      GOTO 300
C NF -  set up feature
330	      NFILL = 0		! only used if ELF
	      PENUP = .TRUE.
	      GOTO 280
C NO - see if overlay wanted
340	      CALL EIHRI(N, 1, 1)
	      IF (OVSEL .LE. 0) GOTO 300	! yes
	      DO 360 I = 1,OVSEL
	        IF (OVLST(I) .EQ. N) GOTO 300	! yes
360	        CONTINUE
	      IECODE = EO			! no - skip it
	      CALL IFFNXC(IECODE, IELEN)
	      GOTO 320
C FS - see if feature wanted
380	      CALL EIHRI(N, 1, 2)
	      IF (CTCHNG) GOTO 400
	      WANTED = (N.AND.PSBIT).EQ.0
	      GOTO 300
C catching up
400	      WANTED = (N.AND.PSBIT).NE.0
	      IF (WANTED) CALL EIHWI(N.AND..NOT.PSBIT, 1, 2)
	      GOTO 300
C CP - set new polynomial
420	      CALL EIHRR(CPOLD(1,1), 16, 1)
	      CALL GETAB(CPOLD(1,1), A(0), B(0))
	      GOTO 300
C TH - set thickness
440	      CALL EIHRI(ITHK, 1, 1)
	      THK = ITHK
	      IF (OTHIK .GT. 0) THK = OTHIK
	      CALL THICK(THK)
	      GOTO 300
C ST - paint it out or add it to list
460	      IF (.NOT.DRAW .OR. .NOT.WANTED) GOTO 300
	      CALL EIHRS(NPTS, IENDS)
	      IF ((IENDS.AND."1).EQ.0) PENUP = .TRUE.
	      DO 520 I = 1,NPTS
	        CALL FBRD(N)
	        IF (N .EQ. 16) GOTO 640
	        CALL EIHRR(PNT(1), 2, (I-1)*4+1)
	        CALL AB4TRN (A,B, AP,BP, 10, PNT(X), PNT(Y))
**	IF	ELF
C add it to list (if inside window)
	        PENUP = .TRUE.		! indicate clipped
	        IF (GOTWIN.AND..NOT.INSIDE(PNT(X),PNT(Y))) GOTO 520
	        IF (NFILL .LT. MAXFIL-1) NFILL = NFILL+1
	        FILLNG(X, NFILL) = PNT(X)
	        FILLNG(Y, NFILL) = PNT(Y)
	        PENUP = .FALSE.		! this point not clipped
**	IFF
C paint out the line, applying the window (if any)
	        IF ((.NOT.GOTWIN).OR.INSIDE(PNT(X),PNT(Y))) GOTO 490
	        PENUP = .TRUE.		! clip this point
	        GOTO 520
C
490	        IF (.NOT.PENUP) CALL LINTO(PNT(X), PNT(Y))
	        IF (     PENUP) CALL MOVTO(PNT(X), PNT(Y))
	        PENUP = .FALSE.
**	ENDC
520	        CONTINUE
	      IF (NPTS .GT. 1) GOTO 540
	      CALL MOVBY(0.0, -100.)
	      CALL THICK(200.)
	      CALL LINBY(0.0,  200.)
540	      GOTO 300
C EF and end-of-file - fill in feature (if ELF)
550	      CONTINUE
**	IF	ELF
	      FILLNG(X,NFILL+1) = FILLNG(X,1)	! extra closing point
	      FILLNG(Y,NFILL+1) = FILLNG(Y,1)
	      IF (PENUP) NFILL = NFILL+1	! if last was clipped
	      CALL ARFILL(FILLNG, NFILL, THK, NHATCH)
**	ENDC
	      NFILL = 0
	      IF (.NOT.FORTH) GOTO 580	! get next NF
	      IF (IELEN.LT.0) GOTO 640	! stop on EOF
	      GOTO 300			! keep looking
C loop to get next feature
580	      CONTINUE		! end of NF list
	    GOTO 200		! try for some more
C
600	    CONTINUE		! end of NO list
	  GOTO 140		! any more ?
C
620	  CONTINUE		! end of NS list
	GOTO 100		! for more
C
C here when no more NSs or FB16 pressed
C
640	CALL THICK(0.)
	CALL FLEVEL(REDFOC)
	RETURN
	END
