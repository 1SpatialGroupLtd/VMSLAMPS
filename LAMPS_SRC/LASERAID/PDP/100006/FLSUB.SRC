	SUBROUTINE FLSUB(CWD)
C
C Copyright Laser-Scan Laboratories Ltd,Cambridge,England
C
C Author M.C.Fulford
C
C	Created 1.vi.78
C	Categorisation (ELF only)		MCF	30/MAY/80
C
C To deal with simple commands in the main program
C
C Command numbers defined in CMDPST ( /MAINC/ )
C When changing this routine, ensure you don't upset the workings
C of PRECOM.
C
***	COMMON/PARAMS/
C
	INTEGER CWD		! command number
C
***	COMMON/MASTER/
***	COMMON/DIGC/
***	COMMON/COEFFS/
***	COMMON/TEXTC/
***	COMMON/GUIDE/
***	COMMON/LKPARM/
***	COMMON/TIMING/
***	COMMON/MAINC/
C
C workspace
	LOGICAL*1 LOG,FIDERR
	REAL TX,TY		! temporary record of a position
	LOGICAL*1 GOTWIN	! windowed
	REAL PNTWIN(2,2)	! the window
	INTEGER CMD		! sub-command number
C
C functions
	LOGICAL PEND
	LOGICAL SETOVR
	LOGICAL RDFILT
	LOGICAL GETWIN
	INTEGER RDCOMM
C
C command table
	EXTERNAL WINCM,CATCM
C
C
	MESSAG = 0
	GOTWIN = .FALSE.
	GOTO (100,100,100,200,
     *        100,100,100,160,
     *        240,250,260,280,
     *        270,590,600,100,
     *        300,140,170,150,180,210,230,310,320,340,350,360,
     *        370,390,400,410,430,440,450,470,480,490,500,
     *        530,540,
**	IF	ELF
     *        585,
**	ENDC
     *        610,620,630,640,650,660,680,690,700,730),CWD
C unexpected command number
100	CALL WRITEF(' FLSUB entered with CWD of %N !',CWD)
	GOTO 130
C corner points needed, or no layer selected
110	CONTINUE
C reset command decoding
120	DCPTR = -1
	TXTPTR = -2
C return
130	RETURN
C
C
C GUI [n] - open guidance file n
C
140	IF (PEND(2)) GOTO 110
	LOG = .NOT.RDFILT(GUDNAM,40,'GU:IFF.IFF;0',
     *                    .TRUE.,.FALSE.)
	CALL SETGUD(LOG)
	GOTO 130
C SKIp to feature n in guidance file
150	SKPGUD = INTARG
C fall through to join ...
C Get Next Feature
160	USEGUD = .TRUE.
	GOTO 130
C VFG i [r]  - Very Fast Guidance control
C	i	0,1 => disable,enable it
C	r	time delay in seconds
C		ommitting this leaves delay unchanged,
C		supplying a zero, or -ve number, diables
C		the queued command auto-start.
170	FASTEF = INTARG.NE.0
	IF (NUMREL .GT. 0) GUDTIM = REALA1*100.
	GOTO 130
C WINdow command (followed by REP or FOR)
180	GOTWIN = .TRUE.
	CMD = RDCOMM(WINCM)
	IF (CMD .LE. 0) GOTO 190
	IF (GETWIN(PNTWIN)) GOTO 120
	GOTO (200,210), CMD
190	CALL MSGF('Illegal argument to WIN')
	GOTO 120
C REPaint out, or REFresh
200	LOG = .FALSE.
	GOTO 220
C paint-out FORwards
210	LOG = .TRUE.
C paint-outs
220	IF (PEND(2)) GOTO 110
	CALL NEWTIM(TPAINT)
	CALL PAINT(0,LOG,THKPNT,GOTWIN,PNTWIN,NHATCH)
	CALL NEWTIM(TMAIN)
	POUTD = .TRUE.
	GOTO 130
C LOCate feature
230	IF (PEND(2)) GOTO 110
	CALL LOCATE
	GOTO 130
C set no paint out (paint out suppressed)
240	POSUPR=.NOT.POSUPR
	GOTO 130
C set auto find
250	DOFIND=.NOT.DOFIND
	GOTO 130
C set DRLMS map (all IT 0)
260	DRLMS=.NOT.DRLMS
	GOTO 130
C set closed feature
270	OPEN=.NOT.OPEN
	GOTO 130
C set reverse
280	IF(OPEN) GOTO 290
	REVRSE=.TRUE.
	GOTO 130
290	CALL WRITEF('Can''t reverse open feature%C',7)
	GOTO 130
C set paint only
300	PAINTO=.TRUE.
	GOTO 130
C MCF	- measure check fid (repeatedly)
310	QUECOM = FLMMCF
	QUETIM = CHFRMT
	GOTO 330	!  join CP
C CP	- digitise corners of map
320	NFID = 0
C MCF joins
330	CALL PEND(1)
	CALL NEWTIM(TCORN)
	CALL CSRD (TX, TY)
	CALL CORNER(FIDERR)
	CALL CSWT (TX, TY)
	CALL NEWTIM(TMAIN)
	GOTO 130
C CFT r	- set check fid remeasurement time
340	CHFRMT = REALA1*100.
	GOTO 130
C CHF [i [j [r]]] - check fid parameters
350	IF (NUMINT.GE.1) NFID = INTAR(1)
	IF (NUMINT.GE.2) NFIDNF = INTAR(2)
	IF (NUMREL.GE.1) FIDMAX = REALA1
	CALL WRITEF('Fid %N every %N feature%m with error limit %F0.1',
     *	        NFID,NFIDNF,FIDMAX)
	GOTO 130
C CAL [r]	- calibrate with given grid spacing
360	CALL PEND(1)
	EFPEND = .FALSE.
	CALL NEWTIM(TINIT)
	CALL CSRD(TX,TY)
	CALL CALIB
	CALL CSWT(TX,TY)
	CALL NEWTIM(TMAIN)
	GOTO 120
C set OPerator IDent etc for new section header
370	I = 1
380	NSMESS(I) = TXTBUF(DCPTR)
	IF (NSMESS(I).EQ.0) GOTO 120
	I = I+1
	DCPTR = DCPTR+1
	GOTO 380
C put TC <text> into MPS
390	IF (PEND(3)) GOTO 110
	CALL IFFTC(TXTBUF(DCPTR+1))
	GOTO 120
C MPS <text> - insert literal text
400	IF (PEND(3)) GOTO 110
	CALL IFFCH(TXTBUF(DCPTR+1))
	GOTO 120
C select new overlay (OV n)
410	IF(NUMINT.EQ.0) GOTO 420
	CALL PEND(1)
	EOP = SETOVR(INTARG,.TRUE.)
	GOTO 130
420	IF(OVRNUM.GT.0)CALL WRITEF('Layer %N selected',OVRLAY(OVRNUM))
	IF(OVRNUM.LE.0)CALL WRITEF('No layer selected')
	GOTO 130
C SS i - SS entry in file (symbol select)
430	IF (PEND(3)) GOTO 110
	CALL IFFSS(INTARG)
	GOTO 130
C PT i - SL entry (plotter type or symbol library)
440	IF (PEND(3)) GOTO 110
	CALL IFFSL(INTARG)
	GOTO 130
C set NF number
450	IF (INTARG.LE.0 .OR. INTARG.GT.9999) GOTO 460
	FNUM(OVRNUM) = INTARG
	GOTO 130
460	CALL WRITEF(' NF number out of range')
	GOTO 130
C PON - print overlay numbers
470	CALL WRITEF('Layer numbers:')
	CALL TABTYP (OVRLAY, MAXOVR)
	GOTO 420
C PMF - print maximum feature numbers
480	CALL WRITEF('Maximum feature numbers:')
	CALL TABTYP (FNUM  , MAXOVR)
	GOTO 420
C
C Commands dealing with the IT & type settings for FBs
C
C ITF n m	set IT code for FBn to m
490	IF (INTARG.LT.0 .OR. INTARG.GT.MAXFB) GOTO 510
	ITFTAB(INTARG) = INTAR(2)	! no check on code
	GOTO 130
C TYF n m	set type for FBn to m
500	IF (INTARG.LT.0 .OR. INTARG.GT.MAXFB) GOTO 510
	IF (INTAR(2).LT.0.OR.INTAR(2).GT.MAXTYP) GOTO 520
	TYFTAB(INTARG) = INTAR(2)
	GOTO 130
C errors in ITF & TYF
510	CALL WRITEF('Illegal FB')
	GOTO 130
520	CALL WRITEF('Illegal type')
	GOTO 130
C PFB		print FB meanings
530	CALL WRITEF('IT:')
	CALL WRITEF('%(3 %I4%)   -',ITFTAB(1),ITFTAB(2),ITFTAB(3))
	CALL WRITEF('%(3 %I4%)   -',ITFTAB(5),ITFTAB(6),ITFTAB(7))
	CALL WRITEF('Type:')
	CALL WRITEF('%(3 %I4%)   -',TYFTAB(1),TYFTAB(2),TYFTAB(3))
	CALL WRITEF('%(3 %I4%)   -',TYFTAB(5),TYFTAB(6),TYFTAB(7))
	GOTO 130
C control of IT code meanings in guidance file
C GIT n m	IT n implies FB m
C GIT n		remove allocation for IT n
C GIT		type out all allocations
540	IF (NUMINT.GT.0) GOTO 560
	LOG = .TRUE.
	DO 550 I = 0,MAXITF
	  IF (GUDITF(I).LE.0) GOTO 550
	  IF (LOG) CALL WRITEF('  IT   FB')
	  LOG = .FALSE.
	  CALL WRITEF('%I4%I5',I,GUDITF(I))
550	  CONTINUE
	GOTO 130
C deal with a specific IT code
560	IF (INTARG.LT.0 .OR. INTARG.GT.MAXITF) GOTO 570
	GUDITF(INTARG) = 0		! remove allocation
	IF (NUMINT .LE. 1) GOTO 130	! that's all
	IF (INTAR(2).LT.0 .OR. INTAR(2).GT.MAXFB
     *      .OR.INTAR(2).EQ.4) GOTO 580
	GUDITF(INTARG) = INTAR(2)
	GOTO 130
C
570	CALL WRITEF('Illegal IT code')
	GOTO 120
580	CALL WRITEF('Illegal FB number')
	GOTO 120
**	IF	ELF
C
C CAT ccc	set category (& hence IT code) for subsequent
C		features (used for labelling woodland plates.)
C
C	
C ccc can be one of:
C
C	FP, P	Forestry plantation
C	FO, F	Forestry other
C	D	Dedicated or Approved
C	O	Other
C
585	CWD = RDCOMM(CATCM)
	IF (CWD .GT. 0) GOTO 588
	CALL WRITEF('Illegal argument to CAT')
	GOTO 120
C
588	CATGRY = CWD
	GOTO 130
**	ENDC
C decrement/increment NF number
590	INTARG = FNUM(OVRNUM)-MANNFI
	GOTO 450
600	INTARG = FNUM(OVRNUM)+MANNFI
	GOTO 450
C initiate system check
610	CALL NEWTIM(TINIT)
	CALL SCHECK
	CALL NEWTIM(TMAIN)
	GOTO 130
C MNF - manual NF number increment
620	MANNFI = INTARG
	GOTO 130
C ANF - automatic NF number increment
630	AUTNFI = INTARG
	GOTO 130
C set MIDDLE  (two part digitisation)
640	MIDDLE=.TRUE.
	GOTO 130
C print timings
650	CALL NEWTIM(TSTOP)
	CALL PRTTIM(INTARG)
	CALL NEWTIM(TMAIN)
	GOTO 130
C Zero TImings
660	CALL NEWTIM(TSTOP)
	DO 670 I = 1,MAXTIM
	  TIMING(I) = 0
670	  CONTINUE
	CALL NEWTIM(TSTART)
	GOTO 130
C PCF [f]   - p/c frame move by f (default 1.0) frames
680	IF (NUMREL .EQ. 0) REALA1 = 1.0
	CALL PCFRAM(REALA1)
	GOTO 130
C TYPE n - set track type
690	LTYPE = INTARG
	CALL PARIO(4,LTYPE)
	GOTO 130
C CANcel last feature
700	IF (.NOT. EFPEND) GOTO 710
	CALL IFFDEL
	FNUM(OVRNUM) = PNDNUM
	CALL WRITEF('Feature %N deleted',FNUM(OVRNUM))
	EFPEND = .FALSE.
	GOTO 720
710	CALL WRITEF('Too late!%C',7)
720	GOTO 130
C tell operator WHAt's going on
730	CALL WRITEF('ID: %S', NSMESS(1))
	CALL WRITEF('Output file: %S', IFFNAM(1))
	CALL WRITEF('Patch file:  %S', SYSNAM(1))
	IF (GUDOPN) CALL WRITEF('Guidance file: %S',GUDNAM(1))
	GOTO 130
C
	END
