.;
.; Copyright Laser-Scan Laboratories Ltd,Cambridge,England
.;
.; Author M.C.Fulford
.;
.;	Command file to remake various Laseraids
.;
.;	Last edited 14/JAN/81
.;
	SET /UIC=[100,6]
	.ENABLE SUBSTITUTION
	.ENABLE GLOBAL
	.ENABLE ESCAPE
	.;
	.IFDF $FL .GOTO DOIT
	.SETF $MAP
	.SETT $NWSSG
	.SETF $FL
	.SETF $CRF
	.SETF $JNCTN
	.SETF $TWICH
	.SETF $AJW
	.ASK $ELF ELF
	.IFF $ELF .ASK $JNCTN JUNCTIONS
	.IFT $JNCTN .SETT $AJW
	.IFT $AJW ; AJW MODS
	.IFF $AJW .ASK $AJW AJW MODS
	.IFT $ELF .SETT $TWICH
	.IFT $JNCTN .SETT $TWICH
	.ASK $LTHLP Extended operator help
	.ASK $OSGRD OS type grid (multi-point setup)
	.; the last compilation:
	PIP TI:=[100,5]PARAMS.MAC
	.ASK $CHNGE are you changing between ELA & FLF
	.SETT $NWSSG
	; NEW SSG
	.SETF $NULL
	.IFF $CHNGE .ASK $NULL NULL
	.IFT $NULL .GOTO NULL
	.SETF $MAIN
	.SETF $FLFTN
	.SETF $FLSUB
	.SETF $SST
	.SETF $IO
	.SETF $MACIO
	.SETF $COMMS
	.SETF $PARAM
	.SETF $INIT
	.SETF $LINK
	.SETF $LNKSB
	.SETF $SYS
	.SETF $FOLL
	.SETF $FORK
	.SETF $BASIC
	.SETF $CHAIN
	.SETF $BUNCH
	.SETF $NWBUN
	.SETF $DIGIT
	.SETF $DGINT
	.SETF $MATCH
	.SETF $CONSL
	.SETF $DRAW
	.SETF $ROLL
	.SETF $MANDG
	.SETF $POINT
	.SETF $PAINT
	.ASK $FL FORTRAN LISTINGS
	.SETF $TEMP
	.IFF $CHNGE .GOTO 6
	.SETT $MAIN
	.SETT $FLFTN
	.SETT $FLSUB
	.SETT $IO
	.SETT $PARAM
	.SETT $INIT
	.SETT $LINK
	.IFT $AJW .SETT $LNKSB
	.SETT $SYS
	.SETT $FOLL
	.SETT $BASIC
	.SETT $DIGIT
	.SETT $DGINT
	.SETT $MATCH
	.SETT $CONSL
	.SETT $DRAW
	.SETT $PAINT
.6:	.IFT $MAIN ; MAIN
	.IFF $MAIN .ASK $MAIN MAIN
	.IFF $MAIN .GOTO 20
	.IFT $FLSUB ; * FLSUB
	.IFF $FLSUB .ASK $FLSUB * FLSUB
	.IFT $FLFTN ; * FLFTN
	.IFF $FLFTN .ASK $FLFTN * FLFTN
	.ASK $SST * SST
	.IFT $IO ; * I/O
	.IFF $IO .ASK $IO * I/O
	.IFT $IO .ASK $MACIO * * MACIO
	.IFT $IO .ASK $COMMS * * COMMS
	.IFT $IO .IFT $PARAM ; * * PARAMS
	.IFT $IO .IFF $PARAM .ASK $PARAM * * PARAMS
.20:	.IFT $INIT ; INIT
	.IFF $INIT .ASK $INIT INIT
	.ASK $FAX FAX
	.ASK $CHECK CHECK
	.ASK $CORN CORNER
	.SETF $NWCRN
	.IFT $CORN .ASK $NWCRN new corner routines
	.IFT $LINK ; LINKOVER
	.IFF $LINK .ASK $LINK LINKOVER
	.IFT $LINK .IFF $LNKSB .IFT $AJW .ASK $LNKSB * LNKSUB
	.ASK $STOMC MACRO CALLING
	.IFT $SYS ; IFFSYS
	.IFF $SYS .ASK $SYS IFFSYS
	.IFT $FOLL ; FOLLOW
	.IFF $FOLL .ASK $FOLL FOLLOW
	.IFF $FOLL .GOTO 60
	.ASK $FORK * FORK
	.IFT $BASIC ; * BASIC
	.IFF $BASIC .ASK $BASIC * BASIC
	.ASK $CHAIN * CHAIN
	.ASK $BUNCH * BUNCH
	.IFT  $BUNCH .ASK $NWBUN ** NEW BUNCHING METHOD
	.IFT $DIGIT ; * DIGIT
	.IFF $DIGIT .ASK $DIGIT * DIGIT
	.IFF $DIGIT .GOTO 60
	.IFT $DGINT ; * * INTELLIGENCE
	.IFF $DGINT .ASK $DGINT * * INTELLIGENCE
	.IFT $MATCH ; * * END MATCHING
	.IFF $MATCH .ASK $MATCH * * END MATCHING
.60:	.IFT $CONSL ; CONSL
	.IFF $CONSL .ASK $CONSL CONSL
	.IFF $CONSL .GOTO 65
	.IFT $DRAW ; * DRAW
	.IFF $DRAW .ASK $DRAW * DRAW
	.ASK $ROLL * ROLL & FUMBLE
	.ASK $MANDG * MANDIG
	.ASK $POINT * POINT FEATURES
.65:	.ASK $CALIB CALIB
	.SETT $NWCAL
	.IFT $CALIB .ASK $NWCAL new calibration routines
	.IFT $PAINT ; PAINT
	.IFF $PAINT .ASK $PAINT PAINT
	.ASK $ODDS ODDS
.NULL:	.ASK $TKB TKB
	.SETF $XPVER
	.IFT $TKB .ASK $XPVER * EXPERIMENTAL VERSION
	.IFT $TKB .ASK $MAP * LMP MAP
	.SETF $CRF
	.IFT $TKB .IFF $MAP .ASK $CRF * CRF
	.;
	.ASK $BATCH BATCH
	.IFF $BATCH .GOTO DOIT
	.OPEN [100,6]LABAT.TMP
	.DATA .ENABLE GLOBAL
	.IFT $ELF .DATA .SETT $ELF
	.IFF $ELF .DATA .SETF $ELF
	.IFT $JNCTN .DATA .SETT $JNCTN
	.IFF $JNCTN .DATA .SETF $JNCTN
	.IFT $TWICH .DATA .SETT $TWICH
	.IFF $TWICH .DATA .SETF $TWICH
	.IFT $LTHLP .DATA .SETT $LTHLP
	.IFF $LTHLP .DATA .SETF $LTHLP
	.IFT $NULL .DATA .SETT $NULL
	.IFF $NULL .DATA .SETF $NULL
	.IFT $NWSSG .DATA .SETT $NWSSG
	.IFF $NWSSG .DATA .SETF $NWSSG
	.IFT $FL .DATA .SETT $FL
	.IFF $FL .DATA .SETF $FL
	.IFT $AJW .DATA .SETT $AJW
	.IFF $AJW .DATA .SETF $AJW
	.IFT $OSGRD .DATA .SETT $OSGRD
	.IFF $OSGRD .DATA .SETF $OSGRD
	.IFT $NULL .GOTO NULL2
	.IFT $MAIN .DATA .SETT $MAIN
	.IFF $MAIN .DATA .SETF $MAIN
	.IFT $FLFTN .DATA .SETT $FLFTN
	.IFF $FLFTN .DATA .SETF $FLFTN
	.IFF $FLSUB .DATA .SETF $FLSUB
	.IFT $FLSUB .DATA .SETT $FLSUB
	.IFF $SST .DATA .SETF $SST
	.IFT $SST .DATA .SETT $SST
	.IFT $IO .DATA .SETT $IO
	.IFF $IO .DATA .SETF $IO
	.IFT $MACIO .DATA .SETT $MACIO
	.IFF $MACIO .DATA .SETF $MACIO
	.IFT $COMMS .DATA .SETT $COMMS
	.IFF $COMMS .DATA .SETF $COMMS
	.IFT $PARAM .DATA .SETT $PARAM
	.IFF $PARAM .DATA .SETF $PARAM
	.IFT $INIT .DATA .SETT $INIT
	.IFF $INIT .DATA .SETF $INIT
	.IFT $FAX .DATA .SETT $FAX
	.IFF $FAX .DATA .SETF $FAX
	.IFT $CHECK .DATA .SETT $CHECK
	.IFF $CHECK .DATA .SETF $CHECK
	.IFT $CORN .DATA .SETT $CORN
	.IFF $CORN .DATA .SETF $CORN
	.IFT $NWCRN .DATA .SETT $NWCRN
	.IFF $NWCRN .DATA .SETF $NWCRN
	.IFT $POINT .DATA .SETT $POINT
	.IFF $POINT .DATA .SETF $POINT
	.IFT $LINK .DATA .SETT $LINK
	.IFF $LINK .DATA .SETF $LINK
	.IFT $LNKSB .DATA .SETT $LNKSB
	.IFF $LNKSB .DATA .SETF $LNKSB
	.IFT $STOMC .DATA .SETT $STOMC
	.IFF $STOMC .DATA .SETF $STOMC
	.IFT $SYS .DATA .SETT $SYS
	.IFF $SYS .DATA .SETF $SYS
	.IFT $FOLL .DATA .SETT $FOLL
	.IFF $FOLL .DATA .SETF $FOLL
	.IFT $FORK .DATA .SETT $FORK
	.IFF $FORK .DATA .SETF $FORK
	.IFT $BASIC .DATA .SETT $BASIC
	.IFF $BASIC .DATA .SETF $BASIC
	.IFT $CHAIN .DATA .SETT $CHAIN
	.IFF $CHAIN .DATA .SETF $CHAIN
	.IFT $BUNCH .DATA .SETT $BUNCH
	.IFF $BUNCH .DATA .SETF $BUNCH
	.IFT $NWBUN .DATA .SETT $NWBUN
	.IFF $NWBUN .DATA .SETF $NWBUN
	.IFT $DIGIT .DATA .SETT $DIGIT
	.IFF $DIGIT .DATA .SETF $DIGIT
	.IFT $DGINT .DATA .SETT $DGINT
	.IFF $DGINT .DATA .SETF $DGINT
	.IFT $MATCH .DATA .SETT $MATCH
	.IFF $MATCH .DATA .SETF $MATCH
	.IFT $CONSL .DATA .SETT $CONSL
	.IFF $CONSL .DATA .SETF $CONSL
	.IFT $DRAW .DATA .SETT $DRAW
	.IFF $DRAW .DATA .SETF $DRAW
	.IFT $ROLL .DATA .SETT $ROLL
	.IFF $ROLL .DATA .SETF $ROLL
	.IFT $MANDG .DATA .SETT $MANDG
	.IFF $MANDG .DATA .SETF $MANDG
	.IFT $CALIB .DATA .SETT $CALIB
	.IFF $CALIB .DATA .SETF $CALIB
	.IFT $NWCAL .DATA .SETT $NWCAL
	.IFF $NWCAL .DATA .SETF $NWCAL
	.IFT $PAINT .DATA .SETT $PAINT
	.IFF $PAINT .DATA .SETF $PAINT
	.IFT $ODDS .DATA .SETT $ODDS
	.IFF $ODDS .DATA .SETF $ODDS
.NULL2:	.IFT $TKB .DATA .SETT $TKB
	.IFF $TKB .DATA .SETF $TKB
	.IFT $XPVER .DATA .SETT $XPVER
	.IFF $XPVER .DATA .SETF $XPVER
	.IFT $CRF .DATA .SETT $CRF
	.IFF $CRF .DATA .SETF $CRF
	.IFT $MAP .DATA .SETT $MAP
	.IFF $MAP .DATA .SETF $MAP
	.IFT $BATCH .DATA .SETT $BATCH
	.IFF $BATCH .DATA .SETF $BATCH
	.DATA .CHAIN LA.CMD
	.CLOSE LABAT.TMP
	BAT LABAT.TMP
	BAT /LI
	PIP LABAT.TMP/PU
	.GOTO END
	.;
	.;
	.;
.DOIT:	 TIME
	.IFF $FL ASN NI:=FL:
	.IFT $FL ASN SY:=FL:
	SET /UIC=[100,5]
	.OPEN [100,5]PARAMS.MAC
	.IFT $ELF   .DATA ELF    = 1	; forestry Laseraid (ELA)
	.IFF $ELF   .DATA ELF    = 0	; normal Laseraid (FLF)
	.IFT $NWSSG .DATA NEWSSG = 1	; 114
	.IFF $NWSSG .DATA NEWSSG = 0	; 102
	.IFT $TWICH .DATA TWOICH = 1	; junctions or ELF
	.IFF $TWICH .DATA TWOICH = 0	; no junctions and ELF
	.IFT $JNCTN .DATA JNCTN  = 1	; junctions
	.IFF $JNCTN .DATA JNCTN  = 0	; no junctions
	.IFT $AJW   .DATA AJW    = 1	; AJW mods
	.IFF $AJW   .DATA AJW    = 0	; no AJW mods
	.IFT $LTHLP .DATA LTHELP = 1	; extended operator assistance
	.IFF $LTHLP .DATA LTHELP = 0	; no special help
	.IFT $OSGRD .DATA OSGRID = 1	; multi-point setup
	.IFF $OSGRD .DATA OSGRID = 0	; separate grid
	.CLOSE
	PIP PARAMS.MAC/PU
	.IFT $NULL .GOTO 1500
	.;
.100:	.IFF $MAIN .GOTO 200
	.IFF $FLSUB .GOTO 110
	.SETS S ""
	.IFT $NWCRN .SETS S ".NEW"
	ADC FLSUB=PARAMS.MAC/TR,[100,6]FLSUB'S',PEND,TABTYP,SETOVR
	F4P FLSUB,FL:FLSUB/LI:0/-SP=FLSUB/TR:NAMES
	PIP FLSUB.FTN;*/DE
	.IFT $FL .XQT LST FL:FLSUB.LST/S/-L
.110:	.IFF $FLFTN .GOTO 120
	MAC FLCMDPST = PARAMS,SOLTB,[100,6]CMDPST
	MAC FFCOM = FFCOM
	.SETS S ""
	.IFT $NWCRN .SETS S ".NEW"
	ADC FLFTN=PARAMS.MAC/TR,[100,6]FLMAIN'S',FLFBLK,NEWTIM
	F4P FLFTN,FL:FLFTN/LI:0/-SP=FLFTN/TR:NAMES
	PIP FLFTN.FTN;*/DE
	.IFT $FL .XQT LST FLFTN.LST/S/-L
.120:	.IFF $SST .GOTO 130
	MAC DEBUG = [100,6]DEBUG
	MAC FLFSST= SOLTB,[100,6]FLFSST
	ADC WINDUP=[100,6]WINDUP
	F4P WINDUP,FL:WINDUP/LI:0/-SP=WINDUP/TR:NAMES
	.IFT $FL .XQT LST WINDUP.LST/-L/S
	PIP DEBUG.OBJ/AP=WINDUP.OBJ
	ADC SST=[100,6]FLDSST,BCKTRC
	F4P SST,FL:SST/LI:0/-SP=SST/TR:NAMES
	.IFT $FL .XQT LST SST.LST/-L/S
	PIP WINDUP.FTN;*,SST.FTN;*/DE
.130:	.IFF $IO .GOTO 160
	.IFF $MACIO .GOTO 140
	;;MAC RW=READ
	;;MAC WRITE=WRITE
	MAC RW=DECIO
	MAC EXPLODE=EXPLODE
	MAC MEDIUM=[100,2]MEDIUM
	MAC MYR50=MYR50
	PIP RW.OBJ=EXPLODE.OBJ,MYR50.OBJ/AP
	PIP EXPLODE.OBJ;*,MYR50.OBJ;*/DE
.140:	.IFT $COMMS ADC COMMS=[100,6]RDREAL,FBTYPE,RDNUM
	.IFT $COMMS ADC COMMS/AP=PARAMS.MAC/TR,[100,6]RDCOMM
	.IFT $COMMS F4P COMMS,FL:COMMS/LI:0/-SP=COMMS/TR:NAMES
	.IFT $COMMS PIP COMMS.FTN;*/DE
	.IFT $COMMS .IFT $FL .XQT LST FL:COMMS.LST/S/-L
	.IFF $PARAM .GOTO 150
	ADC PARAM=PARAMS.MAC/TR,[100,6]PARIO,INOUT
	F4P PARAM,FL:PARAM/LI:0/-SP=PARAM/TR:NAMES
	PIP PARAM.FTN;*/DE
	.IFT $FL .XQT LST FL:PARAM.LST/S/-L
.150:	PIP IO.OBJ=RW.OBJ,COMMS.OBJ
.160:	PIP FLMAIN.OBJ=FLFTN.OBJ,IO,FLCMDPST,FFCOM,DEBUG,PARAM
	.;
.200:	.IFF $INIT .GOTO 300
	MAC INICOM=SOLTB,PARAMS,[100,6]INICOM
	MAC GETTIM=[100,6]GETTIM
	ADC FLINIT=PARAMS.MAC/TR,[100,6]INIT,RDFILT,GETITM,TIDY
	F4P FLINIT,FL:FLINIT/LI:0/-SP=FLINIT/TR:NAMES
	PIP FLINIT.OBJ=INICOM.OBJ,GETTIM.OBJ/AP
	PIP FLINIT.FTN;*/DE
	.IFT $FL .XQT LST FL:FLINIT.LST/S/-L
	ADC GUIDE = [100,6]PRECOM,SETGUD,GETAB,AB4TRN
	F4P GUIDE,FL:GUIDE/LI:0/-SP=GUIDE/TR:NAMES
	PIP GUIDE.FTN;*/DE
	.IFT $FL .XQT LST FL:GUIDE.LST/S/-L
	.;
.300:	.IFF $FAX .GOTO 400
	ADC FAX = [100,6]FAX,EDGDMP
	F4P FAX,FL:FAX/LI:0/-SP=FAX/TR:NAMES
	PIP FAX.FTN;*/DE
	.IFT $FL .XQT LST FL:FAX.LST/S/-L
	.;
.400:	.IFF $CHECK .GOTO 500
	MAC CHKCOM=SOLTB,CHKCOM
	ADC SCHECK=[100,6]SCHECK,PEER,LINFIT,SETDIR,CHKINF
	F4P SCHECK,FL:SCHECK/LI:0/-SP=SCHECK/TR:NAMES
	PIP SCHECK.OBJ=CHKCOM.OBJ/AP
	PIP SCHECK.FTN;*,CHKCOM.OBJ;*/DE
	.IFT $FL .XQT LST FL:SCHECK.LST/S/-L
	.;
.500:	.IFF $CORN .GOTO 550
	ADC CORNER=[100,6]FIDFND,LINFIT,SETDIR
	.IFF $NWCRN ADC CORNER/AP=[100,6]CORNER
	.IFT $NWCRN ADC CORNER/AP=PARAMS.MAC/TR,[100,6]CHKFID
	.IFT $NWCRN .IFF $OSGRD ADC CORNER/AP=PARAMS.MAC/TR,[100,6]CORNER.NEW
	F4P CORNER,FL:CORNER/LI:0/-SP=CORNER/TR:NAMES
	PIP CORNER.FTN;*/DE
	.IFT $FL .XQT LST FL:CORNER.LST/S/-L
	.;
.550:	.IFF $POINT .GOTO 600
	ADC AUTX=[100,6]AUTX
	F4P AUTX,FL:AUTX/LI:0/-SP=AUTX/TR:NAMES
	PIP AUTX.FTN;*/DE
	.IFT $FL .XQT LST FL:AUTX.LST/S/-L
	ADC POINT=[100,6]POINT
	F4P POINT,FL:POINT/LI:0/-SP=POINT,[100,3]NEBIT/TR:NAMES
	PIP POINT.FTN;*/DE
	.IFT $FL .XQT LST FL:POINT.LST/S/-L
	.;
.600:	.IFF $LINK .GOTO 620
	MAC LNKCOM=SOLTB,PARAMS,[100,6]LNKCOM
	.IFT $AJW ADC LINKOVER=PARAMS.MAC/TR,[100,6]LINK.AJW,[100,6]SETDIR
	.IFF $AJW ADC LINKOVER=PARAMS.MAC/TR,[100,6]LINK,[100,6]SETDIR
	F4P LINKOVER,FL:LINKOVER/LI:0/-SP=LINKOVER,[100,3]NEBIT/TR:NAMES/CO:12
	PIP LINKOVER.FTN;*/DE
	.IFT $FL .XQT LST FL:LINKOVER.LST/S/-L
	PIP LINKOVER.OBJ=LNKCOM.OBJ/AP
	.;
	.IFF $LNKSB .GOTO 620
	ADC LNKDRW=PARAMS.MAC/TR,[100,6]LNKDRW
	F4P LNKDRW,FL:LNKDRW/LI:0/-SP=LNKDRW/TR:NAMES
	PIP LNKDRW.FTN;*/DE
	.IFT $FL .XQT LST FL:LNKDRW.LST/S/-L
	.;
	ADC LNKTEK=PARAMS.MAC/TR,[100,6]LNKTEK
	F4P LNKTEK,FL:LNKTEK/LI:0/-SP=LNKTEK/TR:NAMES
	PIP LNKTEK.FTN;*/DE
	.IFT $FL .XQT LST FL:LNKTEK.LST/S/-L
	.;
.620:	.IFF $ELF .GOTO 630
	PIP ELFRTS.SRC=[100,3]TSTATT.FTN,MERSCN,CHNMER,EDGROW,EDGFTR,GETFTR,ICHNIN
	ADC ELFRTS = PARAMS.MAC/TR,ELFRTS
	F4P ELFRTS,FL:ELFRTS/LI:0/-SP=ELFRTS/TR:NAMES
	.IFT $FL LST FL:ELFRTS.LST/-L/S
	PIP ELFRTS.*/PU
	.;
.630:	.IFF $JNCTN .GOTO 640
	PIP JNCRTS.FTN;*/DE
	ADC JNCRTS.FTN   =PARAMS.MAC/TR,[100,3]TSTATT.FTN,MERSCN.FTN,CHNMER.FTN
	ADC JNCRTS.FTN/AP=PARAMS.MAC/TR,[100,3]EDGROW.FTN,ICHNIN.FTN
	F4P JNCRTS,FL:JNCRTS/LI:0/-SP=JNCRTS/TR:NAMES
	.IFT $FL .XQT LST FL:JNCRTS.LST/-L/S
	.;
	PIP JNCTRK.FTN;*/DE
	ADC JNCTRK=PARAMS.MAC/TR,[100,6]JNCTRK,[100,3]TSTATT.FTN
	F4P JNCTRK,FL:JNCTRK/LI:0/-SP=JNCTRK/TR:NAMES
	.IFT $FL .XQT LST FL:JNCTRK.LST/S/-L
	.;
.640:	.IFF $STOMC .GOTO 650
	ADC STOMAC=[100,6]NXTCOM,GETMAC,EXPMAC
	F4P STOMAC,FL:STOMAC/LI:0/-SP=STOMAC/TR:NAMES
	PIP STOMAC.FTN;*/DE
	.IFT $FL .XQT LST FL:STOMAC.LST/S/-L
	.;
.650:	.IFF $SYS .GOTO 700
	ADC IFFSYS=[100,6]IFFSYS
	F4P IFFSYS,FL:IFFSYS/LI:0/-SP=IFFSYS/TR:NAMES
	PIP IFFSYS.FTN;*/DE
	.IFT $FL .XQT LST FL:IFFSYS.LST/S/-L
	ADC IFRSYS=PARAMS.MAC/TR,[100,6]IFRSYS,EXPMAC,SETMAC
	F4P IFRSYS,FL:IFRSYS/LI:0/-SP=IFRSYS/TR:NAMES
	PIP IFRSYS.FTN;*/DE
	.IFT $FL .XQT LST FL:IFRSYS.LST/S/-L
	ADC IFWSYS = PARAMS.MAC/TR,[100,6]IFWSYS,EXPMAC
	F4P IFWSYS,FL:IFWSYS/LI:0/-SP=IFWSYS/TR:NAMES
	PIP IFWSYS.FTN;*/DE
	.IFT $FL .XQT LST FL:IFWSYS.LST/S/-L
	.;
.700:	.IFF $FOLL .GOTO 1000
	.IFF $FORK .GOTO 750
	ADC FORK   =PARAMS.MAC/TR,[100,6]CUTLER.SRC,FRKRTS,RTREAT
	ADC FORK/AP=PARAMS.MAC/TR,[100,6]SMLFTR,EDGLIN,USEFRK
	F4P FORK,FL:FORK/-SP/LI:0=FORK/TR:NAMES
	PIP FORK.FTN;*/DE
	.IFT $FL  .XQT LST FL:FORK.LST/S/-L
	.;
.750:	.IFF $BASIC .GOTO 780
	ADC BASIC = PARAMS.MAC/TR,[100,6]OUTMP1,GTLST2,NOTVEX,NEWVEC
	.IFT $AJW ADC BASIC/AP = PARAMS.MAC/TR,[100,6]NXTSEG,APPSEG
	.IFF $AJW ADC BASIC/AP = PARAMS.MAC/TR,[100,6]TOMP
	F4P BASIC,FL:BASIC/LI:0/-SP=BASIC/TR:NAMES
	PIP BASIC.FTN;*/DE
	.IFT $FL .XQT LST FL:BASIC.LST/S/-L
	.;
.780:	.IFF $CHAIN .GOTO 820
	ADC LNKRTS=[100,6]GROW,SETCHN,CMPCT
	.IFT $AJW ADC LNKRTS/AP=[100,6]CRUSH,VECCOS
	F4P LNKRTS,FL:LNK/LI:0/-SP=LNKRTS,[100,3]CHNLST,[100,3]SMOOTH/TR:NAMES
	PIP LNKRTS.FTN;*/DE
	.IFT $FL .XQT LST FL:LNK.LST/S/-L
	.;
.820:	.IFF $BUNCH .GOTO 840
	.IFF $NWBUN ADC BUNCH=PARAMS.MAC/TR,[100,6]ADDPT,BUNCHODD
	.IFT $NWBUN ADC BUNCH=PARAMS.MAC/TR,[100,6]BUNCH
	F4P BUNCH,FL:BUNCH/LI:0/-SP=BUNCH/TR:NAMES
	PIP BUNCH.FTN;*/DE
	.IFT $FL .XQT LST FL:BUNCH.LST/S/-L
	.;
.840:	PIP FOLLOW.OBJ=BASIC.OBJ,LNKRTS.OBJ,BUNCH.OBJ
	.IFF $DIGIT .GOTO 1000
	.;
	.IFF $DGINT .GOTO 850
	ADC DIGINT=PARAMS.MAC/TR,[100,6]ASSESS,ADDASS
	F4P DIGINT,FL:DIGINT/LI:0/-SP=DIGINT/TR:NAMES
	PIP DIGINT.FTN;*/DE
	.IFT $FL  .XQT LST FL:DIGINT.LST/S/-L
	.;
.850:	.IFF $JNCTN .GOTO 880
	ADC JUNCTN=PARAMS.MAC/TR,[100,6]USEJNC,DIVERG,PARALL,[100,3]TSTATT.FTN
	F4P JUNCTN,FL:JUNCTN/LI:0/-SP=JUNCTN,[100,6]PARVEC.SRC/TR:NAMES
	PIP JUNCTN.FTN;*/DE
	.IFT $FL .XQT LST FL:JUNCTN.LST/S/-L
	.;
.880:	.IFF $MATCH .GOTO 920
	ADC MATCH=PARAMS.MAC/TR,[100,6]MATCH,ONTRAK,CENTRE,SIMPLE,TSTCON
	F4P MATCH,FL:MATCH/LI:0/-SP=MATCH/TR:NAMES
	PIP MATCH.FTN;*/DE
	.IFT $FL  .XQT LST MATCH.LST/S/-L
.920:	.;
.1000:	.IFF $CONSL .GOTO 1050
	.IFF $DRAW .GOTO 1020
	ADC TXRTS=PARAMS.MAC/TR,[100,6]DRWSCN,DRWCHN,DRWPTS,DRWFRK,DRWMP,DRWBUF
	.IFT $AJW   ADC TXRTS/AP=PARAMS.MAC/TR,[100,6]DRWTRK
	.IFT $JNCTN ADC TXRTS/AP=PARAMS.MAC/TR,[100,6]DRWJNC
	F4P TXRTS,FL:TXRTS/LI:0/-SP=TXRTS/TR:NAMES
	PIP TXRTS.FTN;*/DE
	.IFT $FL .XQT LST FL:TXRTS.LST/S/-L
	.IFF $TWICH .GOTO 1020
	F4P EXRTS,FL:EXRTS/LI:0/-SP=[100,3]DRWELF,DRWSQ/TR:NAMES
	.IFT $FL .XQT LST FL:EXRTS.LST/S/-L
	.;
.1020:	.IFF $ROLL .GOTO 1040
	ADC FUMBLE=PARAMS.MAC/TR,[100,6]FUMBLE
	F4P FUMBLE,FL:FUMBLE/LI:0/-SP=FUMBLE/TR:NAMES
	PIP FUMBLE.FTN;*/DE
	.IFT $FL .XQT LST FL:FUMBLE.LST/S/-L
	ADC ROLL=PARAMS.MAC/TR,[100,6]RALONG,SQUARE,AB4TRN,GETAB,ADDASS
	F4P ROLL,FL:ROLL/LI:0/-SP=ROLL/TR:NAMES
	PIP ROLL.FTN;*/DE
	.IFT $FL  .XQT LST FL:ROLL.LST/S/-L
	.;
.1040:	.IFF $MANDG .GOTO 1050
	ADC MANDIG = [100,6]MANDIG
	F4P MANDIG,FL:MANDIG/LI:0/-SP=MANDIG/TR:NAMES
	PIP MANDIG.FTN;*/DE
	.IFT $FL .XQT LST FL:MANDIG.LST/S/-L
	.;
.1050:	.IFF $CALIB .GOTO 1100
	.SETS S ""
	.IFT $NWCAL .SETS S ".NEW"
	ADC CALIB=PARAMS.MAC/TR,[100,6]CALIB'S',GETRES,GETPT
	F4P CALIB,FL:CALIB/LI:0/-SP=CALIB/TR:NAMES
	PIP CALIB.FTN;*/DE
	.IFT $FL  .XQT LST FL:CALIB.LST/S/-L
	.;
	ADC MEASURE=PARAMS.MAC/TR,[100,6]AUTGRD'S',FIDFND,LINFIT,SETDIR
	F4P MEASURE,FL:MEASURE/LI:0/-SP=MEASURE/TR:NAMES
	PIP MEASURE.FTN;*/DE
	.IFT $FL  .XQT LST MEASURE.LST/S/-L
	.;
	ADC SOLVE=[100,6]SOLVE,MA01A
	F4P SOLVE,FL:SOLVE/LI:0/-SP=SOLVE/TR:NAMES
	PIP SOLVE.FTN;*/DE
	.IFT $FL  .XQT LST SOLVE.LST/S/-L
	.;
.1100:	.IFF $PAINT .GOTO 1200
	ADC PAINT=PARAMS.MAC/TR,[100,6]GETAB,PAINT2,GETLST,LOCATE,AB4TRN,GETWIN
	.IFT $ELF ADC PAINT/AP=PARAMS.MAC/TR,[100,6]ARFILL,CLKWIS
	F4P PAINT,FL:PAINT/LI:0/-SP=PAINT/TR:NAMES
	PIP PAINT.FTN;*/DE
	.IFT $FL .XQT LST FL:PAINT.LST/S/-L
	.;
.1200:	.IFF $ODDS .GOTO 1500
	ADC ODDS=[100,6]NEWSEC,NEWOVR,PRTTIM
	F4P ODDS,FL:ODDS/LI:0/-SP=ODDS/TR:NAMES
	PIP ODDS.FTN;*/DE
	.IFT $FL .XQT LST FL:ODDS.LST/S/-L
	.;
.1500:	.IFF $TKB .GOTO 1630
	SET /UIC=[100,6]
	PIP IDENT.SRC;*/DE
	RUN GENDAT
	SET /UIC=[100,5]
	F4P IDENT=[100,6]IDENT.SRC/TR:NAMES
	.SETS MAPSW ""
	.IFT $CRF .SETS MAPSW "/MA/CR"
	.SETS LA "LA"
	.IFT $ELF .SETS LA "ELA"
	.IFF $ELF .IFF $NWSSG .SETS LA "FLF"
	.IFT $JNCTN .SETS LA "LAJ"
	.OPEN [100,5]'LA'TKB.TMP
	.SETS TSKEXT ""
	.IFT $XPVER .SETS TSKEXT ".EXP"
	.DATA [100,1]'LA''TSKEXT'/FP,[100,1]'LA'/-SP'MAPSW'=[100,5]'LA'ODL.TMP/MP
	.DATA UNITS = 3
	.DATA ACTFIL = 0
	.IF LA = "LA" .DATA TASK = ...LA.
	.IF LA <> "LA" .DATA TASK = ...'LA'
	.CLOSE
	PIP [100,5]'LA'TKB.TMP/PU
	ADC 'LA'ODL.TMP=PARAMS.MAC/TR,[100,6]LA.ODL/COM
	PIP 'LA'ODL.TMP/PU
	.; ensure dont overwrite active program
	.IFNINS 'LA' .GOTO 1550
	.IFT $XPVER .GOTO 1550
	.IFNACT 'LA' .GOTO 1540
	; *** PROGRAM ACTIVE - NO TASK BUILD ***
	.GOTO 1630
	;
.1540:	.IFF $XPVER REM 'LA'
.1550:	.IFF $XPVER PIP [100,1]CONTIG.'LA'=[100,1]'LA'.TSK/RE/NV
	.IFF $XPVER PIP [100,1]'LA'.MAP;*,'LA'.TSK;*/DE
	TIME
	.IFT $CRF .IFNINS CRF... INS [1,54]CRF
	TKB @[100,5]'LA'TKB.TMP
	PIP *.OBJ/PU
	PIP /FR
	TIME
	SET /UIC=[100,1]
	.SETS SIZE ""
	.IF LA = "LA" .SETS SIZE "/BL:350."
	.IF LA = "ELA" .SETS SIZE "/BL:350."
	.IF LA = "FLF" .SETS SIZE "/BL:350."
	.IF LA = "LAJ" .SETS SIZE "/BL:400."
	.IFF $XPVER PIP CONTIG.'LA'/UP/CO'SIZE'='LA'.TSK
	.IFF $XPVER PIP 'LA'.TSK/RE/NV=CONTIG.'LA'
	.IFT $MAP LMP 'LA'.MAP/M/L:LD:LS:IFF4P:F4P:SYS
.1600:	.IFF $XPVER .IFINS 'LA' REM 'LA'
	.IFINS 'LA' .GOTO 1610
	.IFF $XPVER INS 'LA'
	.IFINS 'LA' .GOTO 1630
.1610:	; REMOVE AND INSTALL 'LA'
	.;
.1630:	.IFT $FL  PIP FL:[100,5]*.LST;*/DE
	ASN =FL:
	.IFF $TKB .GOTO 1640
	     PIP [100,1]'LA'.MAP/PU
	     PIP [100,5]*.OBJ,*.TMP/PU
	     .GOTO 1650
.1640:
	     .IFF $XPVER .GOTO 1650
	          PIP [100,1]'LA'.EXP/PU
.1650:
.END:	
	TIME
