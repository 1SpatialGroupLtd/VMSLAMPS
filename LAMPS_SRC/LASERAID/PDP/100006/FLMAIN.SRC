C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1980-08-06 12:09:10.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	PROGRAM FLMAIN
C
C Copyright Laser-Scan Laboratories Ltd, Cambridge, England
C
C Authors Martin Fulford & Paul Hardy
C
C 	Last edited 26.v.78
C	Rehashed for FLSUB 6.vi.78
C	CATegorisation mechanism		MCF	30/MAY/80
C
C FLF main program
C Waits for selection of new feature or exit
C
***	COMMON/PARAMS/
C
***	COMMON/IFFHAN/
***	COMMON/MASTER/
***	COMMON/TEXTC/
***	COMMON/MAINC/
***	COMMON/GUIDE/
***	COMMON/DIGC/
***	COMMON/NUMC/
***	COMMON/LKFOLL/
***	COMMON/LKPARM/
***	COMMON/COEFFS/
***	COMMON/TIMING/
C
C functions
	LOGICAL PEND
	INTEGER RDCOMM
	INTEGER PRECOM
	INTEGER CLKWIS
C command tables
	EXTERNAL HOLECM
C
C w/s
	REAL TX,TY              ! temporary workspace
	INTEGER CWD,ISTAT(2),EC,RC
	INTEGER NNF      	! feature numbers for fiducial check
	INTEGER*4 LFPOS		! position to paint-out from
	INTEGER*4 LSTPOS	! start of current feature
	INTEGER*4 LSTFS         ! position of last FS
	LOGICAL*1 FIDERR        ! TRUE if fid check failed
**	IF	ELF
	INTEGER CATCH(4)	! CATegorisation CHaracters
**	ENDC
	INTEGER NOUGHT		! for coercion
	INTEGER NUMABO          ! number of consecutive FB16 presses
C
**	IF	ELF
	DATA CATCH/'P', 'F', 'D', ' '/
**	ENDC
	DATA NOUGHT/0/
	DATA NUMABO/0/,NNF/0/
C
C Initialise IFF & HRD1
	STARTM = SECNDS(0.0)
	CALL NEWTIM(TSTART)
	CALL NEWTIM(TINIT)
	CALL INIT
	CALL SETSST
	CALL LINK(1,RC,.FALSE.)	! initialise
	CALL MSGF('Initialisation complete')
	CALL NEWTIM(TMAIN)  ! timing main now
C abort button - reset
10	NUMABO = NUMABO+1
	IF (NUMABO .GE. 2) CALL CSWT(0., 0.)
	ITGUD = -1
C general reset
20	PAINTO = .FALSE.
	MIDDLE = .FALSE.
	REVRSE = .FALSE.
30	DCPTR = -1
	TXTPTR = -2
C redisplay
40	CALL FBWT16("160177)
	IF (ITGUD .LT. 0) GOTO 50
	CALL FBWT16("160010)
	CALL FBWT(ITGUD,1)
50	IF (GUDOPN) CALL FBWT(8,1)
	CALL FBWT(9,POSUPR+NOUGHT)
	CALL FBWT(10,DOFIND+NOUGHT)
**	UNLESS ELF
	CALL FBWT(11,DRLMS+NOUGHT)
**	ENDC
	CALL FBWT(13,OPEN+NOUGHT)
	CALL FBWT(12,NOUGHT-REVRSE)
	CALL DISMOD(1)
	CALL CURSOR
	IF (OVRNUM .LE. 0) CALL EXPAND('  ?')
**	IF	ELF
	IF (OVRNUM .GT. 0) CALL EXPAND('  %N%C%C%C',
     *               FNUM(OVRNUM),"15,"12,CATCH(CATGRY))
**	IFF
	IF (OVRNUM .GT. 0) CALL EXPAND('  %N',FNUM(OVRNUM))
**	ENDC
	CALL CHARS(NUM(1))
C
C get next command
C
60	IF (.NOT.USEGUD) GOTO 90
C pre-digitised command wanted
70	IF (.NOT.GUDOPN) GOTO 80	! but not available
	CWD = PRECOM()
	IF (CWD .GT. 0) GOTO 140
	GOTO (30,90,30),CWD+3
C no guidance file open
80	FASTEF = .FALSE.
	USEGUD = .FALSE.
	ITGUD  = -1
C Read next command from FBs or KB
90	CWD = RDCOMM(MAINCM(1))
**	IF	ELF
	IF (CWD) 100,100,140
**	IFF
	IF (CWD)150,100,140
**	ENDC
C end of args or error
100	IF (DCPTR.LT.0) GOTO 90
C syntax error
110	CALL WRITEF('Eh?')
	GOTO 130
C
C remains of general error handling
120	IF (MESSAG.EQ.0) GOTO 40
	CALL WRITEF('MESSAG %N',MESSAG)
130	MESSAG = 0
	USEGUD = .FALSE.
	GOTO 20
C
C Despatch table for commands
140	IF (CWD.NE.16) NUMABO = 0
	IF (CWD .GE. FLMLOC) GOTO (270,280,
     *                             290,70),CWD-FLMLOC+1
	IF (CWD .GT. 16) GOTO 160
	GOTO (170,170,170,160,
     *        170,170,170,160,
     *        160,160,160,160,
     *        160,160,160,10),CWD
	GOTO 110		! strange command
C
C
C just number- treat as 'NF' command (unless we're ELA)
150	CWD = FLMNF
C process command with a routine (enables overlaying)
160	CALL FLSUB(CWD)
	GOTO 120
C
C New feature selected
C
170	IF (PEND(3)) GOTO 120
	ITYPE = ITFTAB(CWD)
	LTYPE = TYFTAB(CWD)
**	UNLESS	ELF
	IF (DRLMS) ITYPE = 0  	! force IT 0 for all feature types
**	ENDC
	IF (POUTD) LSTPOS = LPOSE	! save position for paint out
**	IF	ELF
	ISTAT(1) = CATGRY
**	IFF
	ISTAT(1) = ITYPE
**	ENDC
	ISTAT(2) = 0
	ISQ = 0
	CALL IFFNF(FNUM(OVRNUM),ISQ)
	LSTFS = LPOSE
	CALL IFFFS(ISTAT)
	ITHK = THKNSS
	CALL IFFTH(ITHK)
	IF (CWD.EQ.6) GOTO 180   	! point feature
C line or small feature
	CALL PARIO(4,LTYPE)	! set up for track type
	CALL NEWTIM(THELP)  	! time help from now on
	I = 3			! LINK's command - normal feature or ..
	IF (CWD .EQ. 7) I = 5	! .. small feature
	CALL LINK(I,RC,DOFIND)  ! now follow it
	CALL NEWTIM(TMAIN)  	! back to main
	GOTO 190
C  point feature
180	CALL PARIO(4,LTYPE)		!  'point' parameters
	RC = CWD
	CALL NEWTIM(TPOINT)
	CALL POINT(RC)
	CALL NEWTIM(TMAIN)
C did we get anything ?
190	IF (RC.GE.0) GOTO 200
C rejected
	CALL IFFDEL
	EFPEND = .FALSE.
	USEGUD = .FALSE.
	CALL MSG('Abandoned')
	GOTO 20
C check the fiducial if neccessary
200	NNF = NNF+1
	FIDERR = .FALSE.
	IF (NFID.EQ.0.OR.NNF.LT.NFIDNF) GOTO 210
	NNF = 0
	CALL CSRD(TX,TY)
	CALL NEWTIM(TCORN)
	CALL CORNER(FIDERR)
	CALL NEWTIM(TMAIN)
	CALL CSWT(TX,TY)
	IF (FIDERR) CALL WRITEF('Type "CAN" to delete feature%C',7)
210	IF (POUTD) LFPOS = LSTPOS
	POUTD = .NOT. POSUPR
	IF (.NOT.POUTD.OR.FIDERR) GOTO 220
C accepted, so paint out
	CALL NEWTIM(TPAINT)
	CALL PAINT(LFPOS,.FALSE.,THKPNT,.FALSE.,0.0,NHATCH)
	CALL NEWTIM(TMAIN)
C re-write feature status
220	ISTAT(2) = ISTAT(2).OR.RC
**	IF	ELF
	CALL IFFPKE(IECODE,IELEN,LSTFS)
	I = CLKWIS()
	REVRSE = (I.GT.0).XOR.(TRKPOL.LT.0)	! choose polarity & ..
	IF (I.NE.0 .AND. TRKPOL.NE.0) GOTO 250	! .. decide if we can
C couldn't decide - ask operator
230	CALL WRITEF('%$Hole or wood ?')
	CALL FBWT16(0)
240	CWD = RDCOMM(HOLECM)
	REVRSE = CWD.EQ.1
	IF (CWD .GT. 0) GOTO 250	! valid answer
	IF (DCPTR .LT. 0) GOTO 240	! blank line
	GOTO 230			! error
C here with polarity decided
250	IF (REVRSE) CALL WRITEF('%C reversed feature',7)
**	ENDC
	IF (REVRSE) ISTAT(2) = ISTAT(2).OR.4
	IF (PAINTO) ISTAT(2) = ISTAT(2).OR.16
	CALL IFFPKE(IECODE,IELEN,LSTFS)
	CALL EIHWI(ISTAT,2,1)
C tidy up
	EFPEND = .TRUE.
	PNDNUM = FNUM(OVRNUM)
**	IF	ELF
	IF (REVRSE) GOTO 260
**	ENDC
	FNUM(OVRNUM) = FNUM(OVRNUM)+AUTNFI
C prepare for next feature
260	ITGUD = -1
	IF (.NOT.FIDERR) USEGUD = FASTEF
	GOTO 20
C
C enter system adjust mode
C
270	CALL NEWTIM(THELP)
	CALL LINK(4,RC,.FALSE.)
	CALL NEWTIM(TMAIN)
	GOTO 20
C
C save at End Of Session
280	CONTINUE	! behaves as EOJ
C tidy up at End Of Job
290	CALL WINDUP
C
	END
C
	SUBROUTINE RTIDY
C To tidy up after an IFF error
	RETURN
	END
