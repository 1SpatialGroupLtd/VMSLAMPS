C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1980-02-21 12:11:52.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE CHKINF(ST,ID,NERRS)
C
C Copyright Laser-Scan Laboratories Ltd,Cambridge,England
C
C Author M.C.Fulford
C
C	Created 4.vii.77
C	Last edited 22/iii/77
C
C To check the results of an edge mode scan.
C
***	COMMON/PARAMS/
C
	REAL ST(2)	! start point
	INTEGER ID(2)	! scan vector
	INTEGER NERRS	! number of errors found
C			 or -1 if aborted with FB16
C
***	COMMON/RSE/
***	COMMON/SCPARM/
***	COMMON/ISCBUF/
***	COMMON/NUMC/
C
	LOGICAL*1 MULT
	INTEGER THSSCN,LSTSCN,MISSED,WAY,V(2),IE(2)
	INTEGER WORD
	BYTE BYTE(2)
	EQUIVALENCE (BYTE(1),WORD)
C
	INTEGER WRITEF,EXPAND
C
C SCAN
C
	NERRS = 0
	CALL SETDIR(ID,IDIR,IU,IV)
	CALL DISMOD(0)
	CALL FBWT16("100000)
	CALL MOVTO(ST(X),ST(Y))
	CALL SCANBY(ID(X),ID(Y),1)
	CALL SCSET(0)
C fill NEBUF
	INE = NEGET(NEBUF,-NESIZE)
	CALL FBRD(K)
	IF(K.EQ.16) GOTO 800  ! given up
	IF (INE .LE. 0) GOTO 900  ! empty scan
C check the results
	LSTSCN = 0
	THSSCN = 0
	MISSED = 0
	DO 600 ISCAN = 1,INE
	   CALL FBRD(K)
	   IF (K .EQ. 16) GOTO 800 ! given up
	   K = 0	   ! no error messages yet
	   IW = NEBUF(1,ISCAN)
	   MULT = (IW.AND."40000).NE.0
	   IF (ISCAN.EQ.1 .AND. MULT)
     *        K = WRITEF('First encounter multiple')
	   IWW = IW.AND.(.NOT."40000)
	   IF ((IWW.NE."37770.AND.IWW.NE."37774) .AND. (IMOD.EQ.0))
     *        K = WRITEF('Width of %O',IW)
	   IF (.NOT.MULT) GOTO 200
C
	   IDU = NEBUF(IU+1,ISCAN)-NEBUF(IU+1,ISCAN-1)
	   IF (IDU .NE. 0)
     *        K = WRITEF('Multiple but IDU = %N.',IDU)
	   V(1) = NEBUF(IV+1, ISCAN )
	   V(2) = NEBUF(IV+1,ISCAN-1)
	   IDV = V(1) - V(2)
	   IF (ISCAN-THSSCN .EQ. 1) IDV1ST = IDV
	   IF (IDV1ST*IDV .LE. 0)
     *        K = WRITEF('DV1 %N. DV %N.',IDV1ST,IDV)
	   IE(1) = NEBUF(1,ISCAN).AND."37774
	   IE(2) = NEBUF(1,ISCAN-1).AND."37774
	   IF (IE(1).EQ.IE(2) .AND. IMOD.EQ.0)
     *        K = WRITEF('EDGE %O REPEATED',IE(1))
	   IF (IMOD .NE. 1) GOTO 500
C check overlapping of lines
C we can't trust edge info in line mode
	   IF (IE(1).EQ."37774 .OR. IE(1).EQ."37770) GOTO 500
	   IF (IE(2).EQ."37774 .OR. IE(2).EQ."37770) GOTO 500
	   WAY = 1
	   IF (IDV .LE. 0) WAY = 2
	   IOVLP = V( WAY ) - IE( WAY )/2 -
     *             V(3-WAY) + IE(3-WAY)/2
	   IF (IOVLP .LE. 0)
     *        K = WRITEF('Overlap of %N.',IOVLP)
	   GOTO 500
C
200	   LSTSCN = THSSCN
	   THSSCN = ISCAN
	   IF (LSTSCN .EQ. 0) GOTO 250
	   IDU = NEBUF(IU+1,THSSCN)-NEBUF(IU+1,LSTSCN)
	   IF (IDU*ID(IU) .LE. 0)
     *        K = WRITEF('IDU %N. ID(U) %N.',IDU,ID(IU))
	   IF (IDU .NE. 0) MISSED = MISSED+ABS(IDU)/IPIT-1
250	   CONTINUE
C
500	   IF (K .EQ. 0) GOTO 600 ! no error
	   NERRS = NERRS+1
	   DO 550 I = MAX(1,ISCAN-2),MIN(INE,ISCAN+2)
	     J = ' '
	     IF (I .EQ. ISCAN) J = '*'
	     CALL WRITEF('%I4%C %O8 %I6.%I6.',I,J,
     *        NEBUF(1,I),NEBUF(2,I),NEBUF(3,I))
550	     CONTINUE
	   J = ISCAN+MISSED+1
	   CALL EXPAND(' ')
	   DO 570 I = MAX(1,J-3),MIN(ISIZE,J+3)
	      WORD = IBUF(I)
	      IC   = BYTE(1)
	      IW   = BYTE(2)
	      IC = IC.AND."377
	      IW = IW.AND."377
	      CALL EXPAND('%S%O4.%O1',NUM(1),IW,IC)
570	      CONTINUE
	   CALL WRITEF('%S',NUM(1))
	   CALL WRITEF (' ')
C
600	   CONTINUE
	GOTO 900	! looked at all points
C abandoned or nothing seen
800	NERRS = -1
C
900	RETURN
	END
