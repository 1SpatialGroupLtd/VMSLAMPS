C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1980-02-21 12:46:20.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE RALONG(NMIN,NMAX,WHAT,ROLPOS)
C
C Copyright Laser-Scan Laboratories Ltd,Cambridge,England
C
C Author M.C.Fulford
C
C	Created 8/vii/77
C	last edited 16/vi/78
C
C To roll along the MP points, between points NMIN & NMAX.
C
***	COMMON/PARAMS/
C
	INTEGER NMIN,NMAX	!  limits of travel
	INTEGER WHAT		! what to do:
C					1 - align cursor
C					2 -  go back one point
C					3 - go forward one point
	REAL ROLPOS(2)      ! returned position
C
***	COMMON/MPEP/
C
C w/s
	REAL D(2),T,R
	INTEGER K
C
C
	GOTO (40,60,50),WHAT
C
C
40	CALL CSAJST(ROLPOS(X),ROLPOS(Y))
	D(X) = MP1(X,NMP(1))-MP1(X,NMP(1)-1)
	D(Y) = MP1(Y,NMP(1))-MP1(Y,NMP(1)-1)
	R = D(X)*D(X) + D(Y)*D(Y)
	IF (R .LE. 0.) GOTO 50	! go to top of null segment
	T = ((D(X)*(ROLPOS(X)-MP1(X,NMP(1)-1))) +
     *       (D(Y)*(ROLPOS(Y)-MP1(Y,NMP(1)-1))))/R
C are we outside segment ?
	IF (T .LT. 0.) GOTO 60
	IF (T .GT. 1.) GOTO 50
C no
	ROLPOS(X) = MP1(X,NMP(1)-1) + T*D(X)
	ROLPOS(Y) = MP1(Y,NMP(1)-1) + T*D(Y)
	GOTO 80
C step forward
50	K = 0
	IF (NMP(1) .GE. NMAX) GOTO 70
	NMP(1) = NMP(1)+1
	K = -1
	GOTO 70
C step backwards
60	K = -1
	IF (NMP(1) .LE. NMIN) GOTO 70
	NMP(1) = NMP(1)-1
	K = 0
C
70	K = NMP(1)+K
	ROLPOS(X) = MP1(X,K)
	ROLPOS(Y) = MP1(Y,K)
C
80	CALL CSWT(ROLPOS(X),ROLPOS(Y))
	RETURN
	END
