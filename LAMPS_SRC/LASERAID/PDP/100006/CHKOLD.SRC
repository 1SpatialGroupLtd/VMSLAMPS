	SUBROUTINE CHKOLD (CLSNS2, OURNF)
C
C Copyright Laser-Scan Laboratories Ltd,Cambridge,England
C
C Author M.C.Fulford
C
C	Created 9.viii.79 from LOCATE
C	Last edited 15/viii/79
C
C	Checks if any of the line segments chosen by ASSESS or FUMBLE lie
C on any already digitised features & removes those that are.
C
C	LOST, VERY are set up appropriately
C
***	COMMON/PARAMS/
C
C
C
	REAL CLSNS2		! closeness allowed (squared)
	INTEGER*4 OURNF		! address of current feature
C
C
***	COMMON/IFFHAN/
***	COMMON/RSE/
***	COMMON/LINKS/
***	COMMON/COEFFS/
***	COMMON/LKFOLL/
C
	INTEGER CP,ST,NF		! IFF codes
	REAL A(0:3),B(0:3),AP(0:3),BP(0:3)! 4 point transforms
	REAL XP,YP			! coordinates
	REAL PNT(2),PRVPNT(2)		! current & previous points
	REAL DA(2),DB(2)		! vectors
	REAL DADA,DADB			! dot products
	REAL CPOLD(4,4)			! corner points
C
	DATA CP,ST,NF/'CP','ST','NF'/
C
C check that we've got some work to do
	IF (BSTCON .LE. 0) GOTO 110
C get polynomial for this CP space
	CALL GETAB(CPTS(1,1),AP(0),BP(0))
C & the default for the other space
	CALL GETAB(CPTS(1,1), A(0), B(0))
	CALL FBWT16("100000)
	CALL IFFRWD
C look at each item in the IFF file
10	CALL FBRD(N)		! see if operator's fed up
	IF (N .EQ. 16) GOTO 120
	CALL IFFNXT(IECODE, IELEN)
	IF (IELEN .EQ. -1) GOTO 110		! EOF
	IF (IECODE .EQ. CP) GOTO 20
	IF (IECODE .EQ. NF) GOTO 30
	IF (IECODE .EQ. ST) GOTO 40
	GOTO 10
C CP - set new polynomial
20	CALL EIHRR(CPOLD(1,1), 16, 1)
	CALL GETAB(CPOLD(1,1), A(0), B(0))
	GOTO 10
C NF - is it our current feature ?
30	PENUP = .TRUE.
	IF (LPOSH .NE. OURNF) GOTO 10
	GOTO 110			! no more to do
C ST - see if segments lie on it
40	CALL EIHRS(NPTS, IENDS)
	IF ((IENDS .AND. 1) .EQ. 0) PENUP = .TRUE.
	DO 100 I = 1,NPTS
	  PNTCNT = PNTCNT+1
	  CALL EIHRR(PNT(1), 2, (I-1)*4+1)	! extract points
C transform to our space
	  CALL AB4TRN(A,B,AP,BP,2,PNT(X),PNT(Y))
	  IF (PENUP) GOTO 90
	  DA(X) = PNT(X) - PRVPNT(X)
	  DA(Y) = PNT(Y) - PRVPNT(Y)
	  DADA = DA(X)*DA(X) + DA(Y)*DA(Y)
	  IF (DADA .EQ. 0) GOTO 90
C look at all segments
	  J = BSTCON
	  L = 0
50	  K = NODE(FIRST(J))
C look at both ends of each segment
	  DO 70 II = 1,2
	    PX = START(X)+ENCBUF(X,K)
	    PY = START(Y)+ENCBUF(Y,K)
	    DB(X) = PX - PRVPNT(X)
	    DB(Y) = PY - PRVPNT(Y)
	    DADB  = DA(X)*DB(X) + DA(Y)*DB(Y)
	    ALPHA = DADB/DADA
	    IF (ALPHA .LE. 0 .OR.
     *       ALPHA .GE. 1) GOTO 60	! not alongside
	    DH2 = (DB(X) - ALPHA*DA(X))**2 +
     *            (DB(Y) - ALPHA*DA(Y))**2
	    IF (DH2 .GT. CLSNS2) GOTO 60	! not near
C remove this entry
	    IF (L .EQ. 0) BSTCON    = NXTBST(J)
	    IF (L .NE. 0) NXTBST(L) = NXTBST(J)
C has that emptied the list ?
	    IF (BSTCON .LE. 0) GOTO 110
	    GOTO 80
C
60	    K = NODE(LAST(J))
70	    CONTINUE
	  L = J
80	  J = NXTBST(J)
	  IF (J .GT. 0) GOTO 50
C
C examined all segments - now try next point
90	  PRVPNT(X) = PNT(X)
	  PRVPNT(Y) = PNT(Y)
	  PENUP = .FALSE.
100	  CONTINUE
	GOTO 10
C
C end of file reached - any connections left ?
110	LOST = BSTCON .EQ. 0
	IF (.NOT.LOST) NLOST = 1
	NLOST = NLOST+1
	VERY = NLOST.GT.5
120	RETURN
	END
