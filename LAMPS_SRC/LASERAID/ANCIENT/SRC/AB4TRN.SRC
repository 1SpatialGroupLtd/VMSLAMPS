C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1988-06-20 13:56:58.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE AB4TRN(A,B,AP,BP,N,XP,YP)
C
***	MODULE	AB4TRN
***	IDENT	23JA81
C
**	IF VAX
	  IMPLICIT CHARACTER*1 (A-Z)
**	ENDC
C
C Copyright Laser-Scan Laboratories Ltd,Cambridge,England
C
C	Iteration convergence		MCF	27-Feb-1980
C	Created				MCF	27-Apr-1978
C
C 4-point alpha/beta transform
C
***	PARAMETER/PARAMS/
C
	REAL A(0:3),B(0:3),AP(0:3),BP(0:3)! 4 point transforms
	REAL XP,YP			! coordinates
	REAL ALPHA,BETA,ALPHA1,BETA1	! ratios
	REAL E
	INTEGER N			! iteration limit (ignored)
	INTEGER J
C
C get position in old space
	ALPHA = .5
	BETA  = .5
	DO 10 J = 1,6			! instead of N
	  ALPHA1 = (XP-A(0)- BETA*A(2))/(A(1)+ BETA*A(3))
	  BETA1  = (YP-B(0)-ALPHA*B(1))/(B(2)+ALPHA*B(3))
	  E = MAX(ABS(ALPHA-ALPHA1),ABS(BETA-BETA1))
	  ALPHA = ALPHA1
	  BETA  = BETA1
	  IF (E .LT. 0.001) GOTO 20	! gives 0.1 % accuracy
10	  CONTINUE
C transform to position in new space
20	XP = AP(0)+ALPHA*AP(1)+ BETA*(AP(2)+ALPHA*AP(3))
	YP = BP(0)+ALPHA*BP(1)+ BETA*(BP(2)+ALPHA*BP(3))
	RETURN
C
	END
