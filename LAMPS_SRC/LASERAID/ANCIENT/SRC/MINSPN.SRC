	SUBROUTINE MINSPN (GOTMST)
C
C Copyright Laser-Scan Laboratories Ltd,Cambridge,England
C
C Author M.C.Fulford
C
C	Created 16.iii.78
C	Last edited 18/iii/78
C
C To create a minimum spanning tree from the points in
C /RSE/. The tree consists of points (NEBUF) connected
C by NODE & NXT. For point I :
C
C	NODE(I) = 0  -> this is the base point of a treee
C
C	NODE(I) > 0  -> point is in the tree, NODE(I) is the
C			next point in the tree
C
C	NODE(I) < 0  ->  point is outside the tree, -NODE(I)
C			is the nearest point in the tree
C
C		In the latter two cases, NXT(I) is the distance
C		to the next point.
C
***	COMMON/PARAMS/
C
	LOGICAL*1 GOTMST	! managed to build a tree
C
***	COMMON/RSE/
***	COMMON/LINKS/
C
	LOGICAL NEBIT
C
C
	GOTMST = .FALSE.
	DO 5 I = 1,NESIZE
	  NODE(I) = 0
5	  CONTINUE
C fill up /RSE/
	RETRY = .TRUE.
	NELO = -1
10	IF (.NOT.NEBIT(I,J)) GOTO 20
	  IF (NELO .LT. 0) NELO = I
	  NEHI = J
	  GOTO 10
C are there points to process ?
20	IF (NELO .LT. 0) GOTO 900
C yes - we will therefore build a tree soon
	GOTMST = .TRUE.
C start of tree is point NEHI
	NETOP = NEHI - 1
	NODE(NEHI) = 0
C initialise structure
	DO 100 I = NELO, NETOP
	  NODE(I) = -NEHI
	  NXT (I) = 32767
100	  CONTINUE
	K = NEHI		! this is 1st selected point
C
C add our selected point to the tree
150	NODE(K) = -NODE(K)
C go through all the outside points & update these points
C which are nearest to our new point
	DO 200 I = NELO, NETOP
	  IF (NODE(I) .GE. 0) GOTO 200		! in tree
	  DX = NEBUF(1+X,I) - NEBUF(1+X,K)
	  DY = NEBUF(1+Y,I) - NEBUF(1+Y,K)
	  IDIS = SQRT(DX*DX + DY*DY)
	  IF (IDIS .GT. NXT(I)) GOTO 200
	    NODE(I) = -K
	    NXT (I) = IDIS
200	  CONTINUE
C find nearest point to tree
	MIN = 32767
	K = 0
	DO 300 I = NELO, NETOP
	  IF (NODE(I) .GE. 0) GOTO 300
	  IF (NXT(I) .GT. MIN) GOTO 300
	    MIN = NXT(I)
	    K = I
300	  CONTINUE
C did we get one ?
	IF (K .GT. 0) GOTO 150
C no - all points are now in the tree
900	RETURN
	END
