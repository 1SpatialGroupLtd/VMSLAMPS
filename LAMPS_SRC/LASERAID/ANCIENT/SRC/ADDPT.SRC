C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1980-02-21 12:07:28.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE ADDPT(J,XB,YB)
***	COMMON/PARAMS/
	INTEGER J
	REAL XB,YB
C
C Copyright Laser-Scan Laboratories Ltd,Cambridge,England
C
C Author M.C.Fulford based on R.Fairbairns' idea
C
C	Last edited 10/x/78
C
C routine to add a point to a stream being bunched.
C point goes eventually into MP1 or MP2 buffer,
C  depending on J.
C
***	COMMON/BLG/
***	COMMON/MPEP/
C
C are there any bunched points yet ?
	IF (NMP(J) .GT. 0) GOTO 100
C no - set up the first one
	NMP(J) = 1
	INDEX(J) = 0
	MP(X,1,J) = XB
	MP(Y,1,J) = YB
	GOTO 900
C
C already got some bunched points (usual case)
C  consider this point to see if it is approximately
C  on the straight line as defined by the points in
C  the backlog buffer.
C
C is the backlog buffer full ?
100	IF (INDEX(J) .LT. MAXBLG) GOTO 200
C yes - empty the buffer
150	CALL BFLUSH(J)
C get this point relative to start of segment
200	DX = XB-MP(X,NMP(J),J)
	DY = YB-MP(Y,NMP(J),J)
	DS = DX*DX+DY*DY
C any points to compare it with ?
	IF (INDEX(J) .EQ. 0) GOTO 400
C prevent long segments
	IF (DS .GT. S(J)*S(J)) GOTO 150
C see if this point can be added to segment
	DO 300 I=1,INDEX(J)
	  DX1 = DX-XBLG(J,I)
	  DY1 = DY-YBLG(J,I)
	  DS1 = DX1*DX1+DY1*DY1
	  DCOSN = DS+DS1-SQRS(J,I)
	  IF (DCOSN .GE. 0.0) GOTO 250
C acute end angle
	  IF (DS1 .GT. H(J)) GOTO 150
	  GOTO 300
C obtuse end angle
250	  IF (DS1-0.25*DCOSN*DCOSN/DS .GT. H(J)) GOTO 150
C keep looking along list
300	  CONTINUE
C
C new data point can now be added, segment may have been flushed
C
400	INDEX(J) = INDEX(J) + 1
	XBLG(J,INDEX(J)) = DX
	YBLG(J,INDEX(J)) = DY
	SQRS(J,INDEX(J)) = DS
C
900	RETURN
	END
