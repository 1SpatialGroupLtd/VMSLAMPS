C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1981-02-10 16:14:30.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE RSTSCN
C
C Copyright Laser-Scan Laboratories Ltd,Cambridge,England
C
C Author M.C.Fulford
C
C
 
C	Created 15/i/80
C
C   To scan a rectangle, storing the chains seen in a raster file, for
C later extraction.
C
***	COMMON/PARAMS/
C
C
***	COMMON/RASTER/
**	IF VAX
***	  COMMON/EFNETC/
**	ENDC
C
C functions:
	LOGICAL GETWIN
C
C
C
	CALL DISMOD(0)
C guidance file open ?
	IF (GUDOPN) GOTO 70
C no - we can use the LUN
	IF (RSTOPN) GOTO 10
C must open a file first
	CALL IFFOPN(SAVLUN, 'GU:RASTER.IFF;1')
	IF (IERCD .NE. 0) GOTO 70
	RSTOPN = .TRUE.
C initialise file
10	CALL IFFSEL(SAVLUN)
	CALL IFFCLR
C now get a window, FB16 aborts
	IF (GETWIN(RSTWIN)) GOTO 80
C scan the window, FB16 aborting
	NRSTX = (RSTTRH(X)-RSTBLH(X))/RSTCEL+1
	NRSTY = (RSTTRH(Y)-RSTBLH(Y))/RSTCEL+1
	DO 60 IDIR = 0,1
	  U = 2-IDIR
	  V = 1+IDIR
	  DO 50 IX = 1,NRSTX
	    DO 50 IX = 1,NRSTX
	      DO 40 IY = 1,NRSTY
	        CALL FBWT16("100000)
	        CALL FBRD(IFB)
	        IF (IFB .EQ. 16) GOTO 80
	        ST(X) = IX*RSTCEL + RSTBLH(X)
	        ST(Y) = IY*RSTCEL + RSTBLH(Y)
	        ST(V) = ST(V)+RSTCEL/2
	        ID(U) = RSTCEL
	        ID(V) = 0
C scan the area
	        CALL MOVTO(ST(X), ST(Y))
	        CALL SCANBY(ID(X),ID(Y),1)
	        CALL SETCHN
	        NODTOP = (0,1)
	        CALL GROW(,,,)
	        CALL CMPCT(,,,)
C store a pointer to this cell's data
	        CALL IFFWL(LPOSW, 1, HDRADD(IX,IY,U))
	        RESTORE LPOSW ?
C store the chains
	        DO 30 I = 1,MAXCHN
	          IF (CHAIN(I) .LE. 0) GOTO 30
	          CALL IFFWI(LENGTH(I))
	          N = CHAIN(I)
	          DO 20 J = 1,LENGTH(I)
	            CALL IFFWI(ENCBUF(0,N),3)
	            N = NXT(N)
20	            CONTINUE
30	          CONTINUE
	        CALL IFFWI(-1)
C
40	        CONTINUE
50	      CONTINUE
60	  CONTINUE
C
70	CALL IFFSEL(IFFLUN)
	GOTO 90
C operation aborted
80	CALL IFFCLO(SAVLUN)
	RSTOPN = .FALSE.
	CALL IFFSEL(IFFLUN)
C
90	RETURN
	END
