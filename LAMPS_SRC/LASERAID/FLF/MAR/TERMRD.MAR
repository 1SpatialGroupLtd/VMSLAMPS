;
; * This file is part of the LAMPS distribution, released as a software
; * preservation project to archive digital history for future historians.
; * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
; *
; * Timestamp of this file for the 2002 release was: 1986-05-28 11:57:12.000000000 +0100
; *
; * This program is free software: you can redistribute it and/or modify
; * it under the terms of the GNU General Public License as published by
; * the Free Software Foundation, version 3.
; *
; * This program is distributed in the hope that it will be useful, but
; * WITHOUT ANY WARRANTY; without even the implied warranty of
; * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
; * General Public License for more details.
; *
; * You should have received a copy of the GNU General Public License
; * along with this program. If not, see http://www.gnu.org/licenses/.
;
	.TITLE	TERMRD
	.IDENT /28MY86/

; Copyright Laser-Scan Laboratories Limited, Cambridge, England.

;MOD	Tidied					 DM	28-May-1986
;MOD	SYS$LIBRARY:LSLMACLIB now LSL$LIBRARY:	AJW	06-Dec-1983
;MOD	_PSECTs added				AJW	31-Mar-1982
;	Author					PGH	   Feb-1981

; Terminal Reading routines for Full Duplex driver.
;
; Calls provided are:-
;
;	CALL TTRINI	initialises everything
;	CALL READ	reads in a line & sets up /TEXTC/
;	CALL RDABO	aborts any outstanding read request
;

	.LIBRARY	/LSL$LIBRARY:LSLMACLIB/

	CODE_PSECT FLF

; CALL TTRINI	will set up channel for reading

.ENTRY	TTRINI,	^M<>
	$TRNLOG_S	LOGNAM=TTDESC,-		; translate log name of term
			RSLLEN=EQVLEN,-		; length
			RSLBUF=EQVDSC		; destination
	BLBS	R0,10$				; ok
	WARNSIGNAL				; moan if not

10$:	$ASSIGN_S	DEVNAM=EQVDSC,-
			CHAN=TTILUN
	BLBS	R0,20$				; ok ?
	WARNSIGNAL

; set things up for READ to queue the first read
20$:	$SETEF_S	EFN=TTIEFN
	MOVW	#-1,TTBTCT			; nothing read ...
	MOVW	#1,TTIOSB			; ... successfully
	RET

; CALL READ - exits if a read is pending
;	    - resets /TEXTC/ if read present and not dealt with
;	    - if neither of above, queues next read

.ENTRY	READ,	^M<R2>
	TSTW	TTIOSB		; something pending ?
	BNEQ	10$		; no - so see what happened
99$:	RET			; if pending then nothing to do yet

; here with something happened since last called
10$:	CMPW	TTIOSB,#SS$_ABORT	; was last transfer aborted ?
	BNEQ	20$			; if not then ok
	MOVW	#-1,TTBTCT		; if so then throw away any results
20$:	TSTW	TTBTCT			; were there any results then
	BLSS	30$			; no results so try again
	BRW	50$			; we got something !

; here to actually queue the next read
30$:	$QIO_S		FUNC=#IO$_READVBLK,-
			EFN=TTIEFN,-
			CHAN=TTILUN,-
			IOSB=TTIOSB,-
			P1=TXTBUF,-
			P2=TXTLIM
	BLBS	R0,40$			; ok ?
	WARNSIGNAL			; no so moan

40$:	BRW	99$			; common exit

; here with something to return to the outer levels
50$:	BLBS	TTIOSB,60$		; j if no error
	MOVZWL	TTIOSB,R0		; return error code
	WARNSIGNAL			; i/p error message + trace
	BRB	70$

; here if ok
60$:	MOVZWL	TTBTCT,R0		; byte count
	CLRB	TXTBUF[R0]		; null at end
	MOVW	R0,TXTPTR		; set TXTPTR
	MOVW	#1,DCPTR		; reset decode pointer
70$:	MOVW	#-1,TTBTCT		; mark as done
	BRW	99$			; and common exit

; CALL RDABO aborts any pending read request

.ENTRY	RDABO,	^M<>
	TSTW	TTIOSB
	BNEQ	20$		; branch if no outstanding transfer to cancel
	$CANCEL_S	CHAN=TTILUN
	BLBS	R0,10$			; ok ?
	WARNSIGNAL

10$:	$WAITFR_S	EFN=TTIEFN	; wait until gone away
20$:	MOVW	#-1,TTBTCT		; nothing read
	RET

	DATA_PSECT FLF

; local storage

TTDESC:	.ASCID	/TT/		; string descriptor for device name
EQVDSC:				; string descriptor for translation
EQVLEN:	.LONG	40		; length of translated string
EQVPTR:	.LONG	EQVBUF		; pointer to name
EQVBUF:	.BLKB	40		; space for logical name translation

	.PSECT

	.END
