C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1980-06-10 13:14:58.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	PROGRAM IFS
C
C Copyright Laser-Scan Laboratories Ltd,Cambridge,England
C
C Author M.C.Fulford
C
C	Created 23/nov/78
C
C To smooth lines in an IFF file.
C
C Designed for the Kongsberg trial.
C
	PARAMETER IFFLUN = 1
C
	INCLUDE 'NUMC.COM'
C
	REAL STBUF(2,2)
	LOGICAL*1 INST
	INTEGER ST
C
	INTEGER WRITEF
C
	EXTERNAL IFFRET
C
	DATA ST/'ST'/
C
C
10	ASSIGN 20 TO ITIDY
	CALL IFFTDY(IFFRET, ITIDY)
C
20	CALL GETCML(NUM, IDS, 'IFS>')
	IF (IDS) 30,20,40
30	IF (IDS.NE.-10) CALL WRITEF('Error %N in command line',IDS)
	CALL EXIT
C
40	DECODE (IDS, 140, NUM) IFFN
	CALL WRITEF('IF:IFF.%N;0',IFFN)
	CALL IFFOPN(IFFLUN, NUM)
	ASSIGN 130 TO ITIDY
	CALL IFFTDY(IFFRET, ITIDY)
	CALL IFFRWD
C
50	INST = .FALSE.
C
60	CALL IFFNXT(IECODE,IELEN)
	IF (IELEN .LT. 0) GOTO 130
	IF (IECODE .EQ. ST) GOTO 70
	IF (INST) GOTO 110
	GOTO 60
C
C ST entry
C
70	IF (INST) GOTO 80
	CALL EIHMK(1)
	S1 = 0
	SX = 0
	SY = 0
	SXX = 0
	SXY = 0
	SYY = 0
80	CALL EIHRS(NPTS, IENDS)
	IF (NPTS .LE. 0) GOTO 60
	DO 100 I = 1,NPTS
	  CALL EIHRR(RX, 1, I*4-3)
	  CALL EIHRR(RY, 1, I*4-1)
	  IF (INST .OR. I.NE.1) GOTO 90
	  RX1 = RX
	  RY1 = RY
90	  S1=S1+1
	  SX = SX+RX
	  SY = SY+RY
	  SXX = SXX+RX*RX
	  SXY = SXY+RX*RY
	  SYY = SYY+RY*RY
100	  CONTINUE
	INST = .TRUE.
	GOTO 60
C
C ST finished
C
110	SXXP = SXX - SX*SX/S1 
	SXYP = SXY - SX*SY/S1
	SYYP = SYY - SY*SY/S1
C
	COS2PH = SXYP*2
	SIN2PH = SXXP-SYYP
	R = SQRT(COS2PH*COS2PH+SIN2PH*SIN2PH)
	COS2PH = COS2PH/R
	SIN2PH = SIN2PH/R
	COSALF = -.7071
	SINALF = .7071
	SINPHI = 1-COS2PH
	COSPHI = SIN2PH
	R = SQRT(SINPHI*SINPHI+COSPHI*COSPHI)
	SINPHI = SINPHI/R
	COSPHI = COSPHI/R
	COSTH = COSALF*COSPHI + SINALF*SINPHI
	SINTH = SINALF*COSPHI - COSALF*SINPHI
	R = COSTH*SX/S1 + SINTH*SY/S1
	STBUF(1,1) = RX1
	STBUF(2,1) = RY1
	STBUF(1,2) = RX
	STBUF(2,2) = RY
	DO 120 I = 1,2
	  T = STBUF(1,I)*SINTH - STBUF(2,I)*COSTH
	  STBUF(1,I) = R*COSTH + T*SINTH
	  STBUF(2,I) = R*SINTH - T*COSTH
120	  CONTINUE
	CALL IFFVOM
	CALL IFFST(STBUF, 2, 0)
	CALL EIHMK(0)
	GOTO 50
C
130	CALL IFFCLO(IFFLUN)
	GOTO 10
C
140	FORMAT(I10)
C
	END
C
	SUBROUTINE WRTOUT
C
C
	INCLUDE 'NUMC.COM'
C
	WRITE(5,10)(NUM(I),I=1,NUMSIZ)
10	FORMAT(' ',<NUMSIZ>A1)
	RETURN
	END
