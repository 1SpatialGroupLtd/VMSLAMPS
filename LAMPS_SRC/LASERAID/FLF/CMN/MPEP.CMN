C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1986-05-28 13:24:28.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
C Common block to hold master points
C
CMOD	Converged				 DM	28-May-1986
CMOD	SECPOS no longer conditionalised	 DM	30-Nov-1982
CMOD	SECPOS added				 DM	22-Nov-1982
CMOD	SECJAN and SECJOA added			 DM	19-Nov-1982
CMOD	MPJUN removed				 DM	28-Oct-1982
CMOD	MPTYPE added, MPJUN equivalenced to it	 DM	20-Oct-1982
CMOD	MP1 in COMMON, and MP removed		AJW	30-Sep-1982	
CMOD	MPIARM,MPOARM added			AJW	30-Sep-1982
CMOD	New junction stuff			AJW	30-Jul-1982
C
	REAL      H(MPLEV)	! sideways tolerance
	REAL      S(MPLEV)	! longest tolerable segment
	REAL      E(MPLEV)	! crowding limit, before weeding
	REAL      MP1(2,MAXMP)	! the master points
	INTEGER   NMP(MPLEV)	! the number of master points
	INTEGER   MPLIM		! the size of chunk to be output
	INTEGER   MPLEFT	! & the chunk to leave behind
	INTEGER   MPTOTE	! max. number of points in a feature
	INTEGER   MPJANG(MAXBRA,MAXMP)	! angle of arm in degrees
	INTEGER   MPIARM(MAXMP)		! no. of incoming arm
	INTEGER   MPOARM(MAXMP)		! no. of outgoing arm
	INTEGER   NMPIFF	! total number of points in feature
	INTEGER	  MPTYPE(MAXMP)	! <0 => manual point
C				   0 => ordinary point
C				  >0 => junction point (if JNCING)
	INTEGER	  SECJAN(MAXBRA)	! saved values for 1st point
	INTEGER	  SECJOA
	INTEGER*4 SECPOS	! position of 1st ST in feature
C
	COMMON/MPEP/H,S,E,MP1,NMP,MPLIM,MPLEFT,MPTOTE,MPJANG,
     &		    MPIARM,MPOARM,NMPIFF,MPTYPE,SECJAN,SECJOA,SECPOS
C
