	SUBROUTINE STNDAC(RDONLY)
C
***	MODULE	STNDAC
***	IDENT	25JL86
C
C Copyright Laser-Scan Laboratories Limited, Cambridge, England.
C
C Author: D. Meader
C
C	Created 				 DM	25-Jul-1986
C
C SAC type value [text] - show, create, alter or remove the Standing
C Ancillary Code. This AC is inserted in all subsequent features until
C explicitly disabled (by SAC 0). Note that SAC 0 0 is a valid setting.
C 'Value' is examined for a decimal point and is stored as a real number
C if one is found. AC type 3 is a special case and is ALWAYS stored as a
C real (the decimal point may be omitted if appropriate).
C
**	IF VAX
	IMPLICIT NONE
**	ENDC
C
***	PARAMETER/PARAMS/
C
	LOGICAL*1 RDONLY	! only allowed to print the SAC ?
C
***	COMMON/MASTER/
***	COMMON/TXTC/
C
	BYTE	  ICH		! single character
	INTEGER*2 III,JJJ
	INTEGER*4 LLL
C
C functions:
	INTEGER	  EXPAND
	LOGICAL	  RDCH
	LOGICAL	  RDCHS
	LOGICAL	  RDINT
	LOGICAL	  RDLONG
	LOGICAL	  RDREAL
C
C ......................................................................
C
	IF (RDCHS(ICH)) GO TO 110		! any arguments ?
	IF (RDONLY) GO TO 100			! allowed to alter SAC ?
	CALL BSCH
	IF (RDINT(JJJ)) GO TO 90		! get the AC type
	IF (RDCHS(ICH)) GO TO 60		! prepare to get value
	JJJ=JJJ + ACBASE			! add any AC base value
	IF (JJJ.LE.0) GO TO 90			! *true* AC 0 is illegal
	III=DCPTR - 1
	IF (JJJ.EQ.3) GO TO 30			! AC 3 is special
10	IF (ICH.EQ.'.') GO TO 30		! look for decimal point
	IF (RDCH(ICH)) GO TO 20
	IF (ICH.NE.' ') GO TO 10
20	DCPTR=III				! it's an integer
	IF (RDLONG(LLL)) GO TO 60
	GO TO 40
30	DCPTR=III				! it's a real
	IF (RDREAL(LLL)) GO TO 60
40	SACSET=.TRUE.
	SACTYP=JJJ
	SACVAL=LLL
	DO 50 JJJ=III,DCPTR-1			! save value as typed
	   SACVTX(JJJ-III+1)=TXTBUF(JJJ)	! (for reporting)
50	CONTINUE
	SACVTX(DCPTR-III+1)=0
	IF (.NOT.RDCHS(ICH)) CALL BSCH		! look for text
	III=EXPAND('%W%A80',SACTXT,TXTBUF(DCPTR))
	SACTXT(III+1)=0
	GO TO 120				! confirm the setting
C
C ......................................................................
C
60	IF (JJJ.EQ.0) GO TO 70			! 0 ==> remove the AC
	CALL WRITEF('Illegal AC value')
	GO TO 130
70	IF (SACSET) GO TO 80
	CALL WRITEF('Standing AC was not set')
	GO TO 130
80	CALL WRITEF('Standing AC removed')
	SACSET=.FALSE.
	GO TO 130
90	CALL WRITEF('Illegal AC type')
	GO TO 130
100	CALL WRITEF('You cannot alter the Standing AC in this mode%C',7)
	GO TO 130
C
110	IF (SACSET) GO TO 120			! display current value
	CALL WRITEF('No standing AC set')
	GO TO 130
120	CALL WRITEF('Standing AC %N %A %A',SACTYP,SACVTX,SACTXT)
C
130	RETURN
	END
