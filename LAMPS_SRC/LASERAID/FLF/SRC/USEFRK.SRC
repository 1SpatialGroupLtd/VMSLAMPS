	SUBROUTINE USEFRK(FSTCON,CONGOT,QCON,CRSTYP,JNCTYP)
C
***	MODULE	USEFRK
***	IDENT	01JN81
C
**	IF VAX
	  IMPLICIT NONE
**	ENDC
C
C Copyright Laser-Scan Laboratories Ltd,Cambridge,England
C
C	Tidied					AJW	01-Jun-1981
C	Created					MCF	22-Aug-1977
C
C To use the fork information produced by CUTLER, to decide
C which of the available line segments should be attached next.
C
C On entry, we assume that a line segment has just been issued
C to TOMP, leaving the number in LSTSEL & the direction of attachment
C in LSTWAY (both in /LKFOLL/)
C
C parameters:
***	PARAMETER/PARAMS/
C
C arguments:
	INTEGER   FSTCON	! first connection
	INTEGER   CONGOT	! number of connections
	REAL      QCON		! quality for confusion
	INTEGER   CRSTYP	! behaviour at crossings/mergings:-
C			1 - choose opposite branch (i.e. crossing)
C			2 - choose same branch (i.e. merging)
	INTEGER   JNCTYP	! type of junction found:-
C			0 - nothing
C			1 - crossing track
C			2 - sharp corner
C			3 - branching into two
C
C common blocks:
***	COMMON/FORKS/
***	COMMON/LKFOLL/
C
C workspace:
	INTEGER   LSTCHN	! last chain output
	INTEGER   THTFRK	! that fork
	INTEGER   NXTFRK	! next fork
	INTEGER   ISTEM		! chain number of stem
	INTEGER   I,N
C
C
	LSTCHN = CONNCT(2,LSTSEL)
	FSTCON = 1
	JNCTYP = 0
C
C delete the fork on 'this' end of our chain
	N = ENDFRK(LSTWAY,LSTCHN)
	IF (N .GT. 0) FRKTYP(N) = 0
C look at the fork on 'that' end
	THTFRK = ENDFRK(3-LSTWAY,LSTCHN)
C is our chain attached to any others ?
	IF (THTFRK .EQ. 0) GOTO 70
C yes, is it a stem or a branch ?
	IF (FORK(1,THTFRK) .EQ. LSTCHN) GOTO 40  !  stem
C we are a branch to the new fork
C this means:
C	a) a crossing
C	b) a sharp corner
C	c) a general confusion
C
C decide between these cases by looking at the fork containing
C the stem of our fork
	ISTEM = FORK(1,THTFRK)
	IF (ISTEM .EQ. 0) GOTO 30
	NXTFRK = ENDFRK(1,ISTEM)
	IF (NXTFRK.EQ.THTFRK) NXTFRK = ENDFRK(2,ISTEM)
C is there such a fork ?
	IF (NXTFRK .EQ. 0) GOTO 10		! no - (b)
C yes - how is our stem attached to it ?
	IF (FORK(1,NXTFRK) .EQ. ISTEM) GOTO 20 ! stem - (a)
	IF (FORK(2,NXTFRK) .EQ. ISTEM .OR.
     &      FORK(3,NXTFRK) .EQ. ISTEM) GOTO 30	! branch - (c)
C not attached ??
	GOTO 30
C
C come here for case (b) - sharp corner
C
C we offer :
C	i) the other branch
C	ii) the stem
C what we ought to do is to process the stem points to produce
C some real points for the corner, or else compute the intersection
C of the two branches
C in the meantime:-
10	CONNCT(2,1) = FORK(2,THTFRK)+FORK(3,THTFRK)-LSTCHN
	CONNCT(3,1) = 3-LSTWAY		! goes the other way
	QUALTY(1) = QCON-1.0		! ensure confused
	CONNCT(2,2) = FORK(1,THTFRK)
	CONNCT(3,2) = LSTWAY
	QUALTY(2) = QUALTY(1)-1.0
	CONGOT = 2
	JNCTYP = 2
	GOTO 50
C
C case (a) - a crossing
C we offer:
C	  i) the two outgoing branches (in appropriate order)
C	 ii) our companion branch
C	iii) the joining stemm
20	N = 0
	IF (LSTCHN .EQ. FORK(2,THTFRK)) N = 1
	IF (CRSTYP .EQ. 1) N = 1-N
	CONNCT(2,1) = FORK(2+N,NXTFRK)
	CONNCT(2,2) = FORK(3-N,NXTFRK)
	CONNCT(3,1) = LSTWAY
	CONNCT(3,2) = LSTWAY
	QUALTY(1) = QCON+1.
	QUALTY(2) = QCON+1.
C
	CONNCT(2,3) = FORK(2,THTFRK)+FORK(3,THTFRK)-LSTCHN
	CONNCT(3,3) = 3-LSTWAY
	QUALTY(3) = QUALTY(2) - 1.0
C
	CONNCT(2,4) = FORK(1,THTFRK)
	CONNCT(3,4) = LSTWAY
	QUALTY(4) = QUALTY(3) - 1.0
	CONGOT = 4
	JNCTYP = 1
	GOTO 50
C
C case (c) - a nonsense
C for the moment we will let MATCH sort out the mess, but one day ...
30	GOTO 70
C
C we are a stem to the new fork
C our track would seem to have split into two.
C offer the two branches
C ideally we would remove the merged bit of the stem
C
40	CONNCT(2,1) = FORK(2,THTFRK)
	CONNCT(2,2) = FORK(3,THTFRK)
	CONNCT(3,1) = LSTWAY
	CONNCT(3,2) = LSTWAY
	QUALTY(1) = QCON+1.
	QUALTY(2) = QCON+1.
	CONGOT = 2
	JNCTYP = 3
C tidy up & complete the connections
50	DO 60 I = FSTCON, FSTCON+CONGOT-1
	  CONNCT(1,I) = 0
	  CONNCT(4,I) = 0
60	  CONTINUE
C
C exit
C
70	RETURN
	END
