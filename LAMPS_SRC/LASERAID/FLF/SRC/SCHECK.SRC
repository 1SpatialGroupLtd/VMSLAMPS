	SUBROUTINE SCHECK
C
***	MODULE	SCHECK
***	IDENT	16JN86
C
C Copyright Laser-Scan Laboratories Limited, Cambridge, England.
C
CMOD	PSP brought into line with INOUT	 DM	10-Jun-1986
CMOD	WAR can no longer be set interactively	 DM	04-Jun-1986
CMOD	Only call CSRD if HADLDI		 DM	30-May-1986
CMOD	Always do H/W PHAse for ALL widths 	 DM	23-May-1985
CMOD	NCHKFB changed, and warning added	AJW	12-Mar-1984
CMOD	FRK and TBK added			AJW	09-Mar-1984
CMOD	Area scan conditionally included	AJW	29-Jun-1983
CMOD	Make white line have broader border	WJJ	14-Feb-1983
CMOD	Add Tek clear button in place of 'OK'.	WJJ	04-Feb-1983
CMOD	Suppress old tests, add lights for new	WJJ	03-Feb-1983
CMOD	Add quality checks and restore old 	WJJ	02-Feb-1983
CMOD	tests (in PEER), only button commands
CMOD	Calls BLUFOC before drawing WHL, and
CMOD	REDFOC after				AJW	22-Jan-1982
CMOD	parameter setting improved, parameters
CMOD	defining numbers of commands added	AJW	15-Jan-1982
CMOD	T E X T C changed			AJW	 1-Jul-1981
CMOD	/CHECK/ removed,
CMOD	and CHKCM made EXTERNAL			AJW	27-May-1981
CMOD	MOVETO changed to MOVTO			AJW	20-May-1981
CMOD	Tidied and software phase removed	AJW	01-May-1981
CMOD	Created					MCF
C
C Uses PEER to examine and set up the digtiser's behaviour
C and to adjust parameters in /SCPARM/ & /SCCORR/.
C
**	IF VAX
	IMPLICIT NONE
**	ENDC
C
C parameters:
***	PARAMETER/PARAMS/
C
	PARAMETER NCHKFB=24	! number of non-setting commands
	PARAMETER SPOTSZ=15.0	! spot size in microns
C
C common blocks:
***	COMMON/DIGC/
***	COMMON/MASTER/
***	COMMON/SCCORR/
***	COMMON/SCPARM/
***	COMMON/TXTC/
C
C arrays equivalenced to /SCPARM/
	INTEGER      NSCP(SCPINM)
	EQUIVALENCE (NSCP(1),IMOD)
C
C and /SCCORR/
	REAL         RSCC(SCCRNM)
	EQUIVALENCE (RSCC(1),CRX)
C
C workspace:
	INTEGER   CWD
	INTEGER   I,J,N
	INTEGER   ID(2)
	INTEGER   IU,IV
	INTEGER   LSTWID
	INTEGER   NERRS
	INTEGER   NLIN
	INTEGER   NPH
	INTEGER   NQUIT
	INTEGER   PHPAR(2)
	INTEGER   TYPE
	LOGICAL*1 WHLINE
	REAL	  PHASE
	REAL	  PH(2)
	REAL	  SEPL(2)
	REAL	  ST(2)
	REAL	  VSTX,VSTY
	REAL	  XE,YE
C
	EQUIVALENCE (PH,PHX)
C
C function:
	INTEGER   RDCOMM
C
C command table:
	EXTERNAL CHKCM
	INTEGER  CHKCM
C
C data:
	DATA PHPAR/3RPHX,3RPHY/
C
C ......................................................................
C
	WHLINE=.FALSE.
C
C clear refresh picture
10	NQUIT=1
	DCPTR=-1
	TXTPTR=-2
20	CALL DISMOD(1)
	CALL CURSOR
C
C refresh loop
30	CONTINUE
**	IF AREA
	  CALL FBWT16("176637)
**	IFF
	  CALL FBWT16("174637)
**	ENDC
	CWD=RDCOMM(CHKCM,.FALSE.)
	IF (CWD) 10,40,50
C
C end of args or error
40	IF (DCPTR.LT.0) GO TO 30
	GO TO 10
C
C deal with commands
50	IF (CWD.GT.NCHKFB) GO TO 350
	N=0
C	STA , OCR , WHL , TXZ
C	PHA , ... , ... , CUR
C	THR , ... ,(ARE), CLO
C	FOC , QUL , QUW , ABA
C
C	ZER,RFK,TBK,ERR,(SPH),PSP,TYP,PTY
C
C **********************************************************************
C ********** if any commands are added, NCHKFB MUST be changed *********
C **********************************************************************
	GO TO ( 70,180, 90, 60,
     & 		80, 30, 30,340,
     &	       170, 30,440,340,
     &	       160,120,110,450,
     &	       290,300,310,100, 30,430,320,330),CWD
C
C TXZ - clear Tek screen
60	CALL TXCLR
	GO TO 30
C
C START - set up start of vector
70	IF (HADLDI) CALL CSRD(ST(X),ST(Y))
	CALL DISMOD(1)
	CALL MOVTO(ST(X),ST(Y))
	CALL LINTOC
	NQUIT=2
	WHLINE=.FALSE.
	GO TO 30
C
C PHAse graph
80	TYPE=1
	LSTWID=-1
	GO TO 190
C
C Phase and threshold graphs
90	N=N + 1		! white line
100	N=N + 1		! DMA error checking
110	N=N + 1		! Line width quality
120	N=N + 1		! Line position quality
130	N=N + 1		! Software phase check (suppressed)
140	N=N + 1		! Scanning rate v. IWID (suppressed)
150	N=N + 1		! threshold - area (suppressed)
160	N=N + 1		! focus
170	N=N + 1		! threshold
180	N=N + 1		! OF() & CR()
190	N=N + 1		! H/W phase
C
	IF (NQUIT.EQ.1) GO TO 200
	IF (HADLDI) CALL CSRD(XE,YE)
	ID(X)=XE - ST(X)
	ID(Y)=YE - ST(Y)
200	IF (ID(X).EQ.0.AND.ID(Y).EQ.0) GO TO 230
	IF (N.EQ.10) GO TO 240
	IF (N.EQ.11) GO TO 250
210	IF(N.NE.1) GO TO 220
	CALL PARIO(4,TYPE)
	IPIT=5
	IF(IWID.EQ.LSTWID) GO TO 280
220	IF (N.EQ.2.AND..NOT.WHLINE) GO TO 230
	CALL PEER(N,ST(X),ST(Y),ID(X),ID(Y),IV)
	PHASE=PH(IV)
	IF (N.EQ.1) GO TO 280			! phase for all types
	GO TO 10
C
230	CALL WRITEF('Bad vector')
	GO TO 10
C
C ERR - check information from digitiser
C keep looking until an error is found, or FB16 pressed.
240	CALL CHKINF(ST(1),ID(1),NERRS)
	IF (NERRS.EQ.0) GO TO 240
	GO TO 10
C
C draw white line
250	CALL DISMOD(0)
	CALL FLEVEL(BLUFOC)
	IDIR=0
	IF (IABS(ID(Y)).LT.IABS(ID(X))) IDIR=1
	IV=IDIR + 1
	IU=3 - IV
	SEPL(IU)=0.0
	SEPL(IV)=SPOTSZ
	NLIN=1.5*IWID*CR(IV)*WAR/SPOTSZ
C
C parameters for white line on P/C set up now
	DO 270 I=1,2
	  VSTX=ID(X)*2.0
	  VSTY=ID(Y)*2.0
	  CALL MOVTO(ST(X)-ID(X)/2.0+SEPL(X)*3.0,
     &               ST(Y)-ID(Y)/2.0+SEPL(Y)*3.0)
	  DO 260 J=1,NLIN
	    CALL DRAWBY(VSTX,VSTY)
	    CALL MOVBY(SEPL(X),SEPL(Y))
	    VSTX=-VSTX
	    VSTY=-VSTY
260	  CONTINUE
	  SEPL(IV)=-SEPL(IV)
270	CONTINUE
C
	CALL FLEVEL(REDFOC)
	WHLINE=.TRUE.
	GO TO 10
C
C phase for all types
280	INTARG=PHPAR(IV)     ! either PHX or PHY
	CALL PARIO(5,NPH)    ! find type slot
	CALL PARIO(6,NPH)    ! download that slot
	REALAR(TYPE)=PHASE   ! update it
	CALL PARIO(2,NPH)    ! and write back
	TYPE=TYPE + 1
	LSTWID=IWID
	IF(TYPE.LE.MAXTYP) GO TO 210  ! try with other types
	CALL PARIO(4,LTYPE)  ! set back to default
	GO TO 10
C
C adjust refresh
290	CALL RFAJST
	GO TO 30
C
C refresh kick rate
300	IF (INTARG.LE.0) INTARG=6
	CALL LDRFKK(INTARG)
	GO TO 30
C
C tracker ball kick rate
310	IF (INTARG.LE.0) INTARG=8
	CALL LDTBKK(INTARG)
	GO TO 30
C
C set current line type
320	LTYPE=INTARG
	CALL PARIO(4,LTYPE)
	GO TO 30
C
C print type tables
330	CALL PARIO(3,0)
	GO TO 30
C
C facsimile
340	CALL FAX(CWD.EQ.8,IWID,IPIT)
	GO TO 10
C
C parameter setting commands
350	N=CWD - NCHKFB
	IF (N.LE.SCPINM) GO TO 360
	N=N - SCPINM
	IF (N.LE.SCCRNM) GO TO 390
	N=N - SCCRNM
	IF (N.EQ.1) GO TO 410
	CALL WRITEF('SCHECK: Bad command table')
	GO TO 10
C
C set /SCPARM/
360	IF (NUMINT.EQ.0) GO TO 370
	NSCP(N)=INTARG
	GO TO 30
370	INTARG=NSCP(N)
380	CALL WRITEF('Current value is %N',INTARG)
	GO TO 30
C
C set /SCCORR/
390	IF (NUMREL.EQ.0) GO TO 400
	RSCC(N)=REALA1
	GO TO 30
400	REALA1=RSCC(N)
	CALL WRITEF('Current value is %F0.3',REALA1)
	GO TO 30
C
C set /MASTER/
410	IF (NUMINT.EQ.0) GO TO 420
	REDFOC=INTARG
	CALL DISMOD(0)
	CALL FLEVEL(REDFOC)
	GO TO 20
420	INTARG=REDFOC
	GO TO 380
C
C display /SCPARM/ & /SCCORR/
430	CALL WRITEF(
     &'Scanning:   MOD %I5   FRQ %I5   WID %I5   PIT %I5',
     &		   IMOD,     IFRQ,     IWID,     IPIT)
	CALL WRITEF(
     &'            TLO %I5   TSW %I5   FLE %I5   TMS %I5',
     &		   ITLO,     ITSW,     REDFOC,	ITMS)
	CALL WRITEF(
     &'            CRX %F5.2   CRY %F5.2',
     &		   CRX,        CRY)
	CALL WRITEF(
     &'            OFX %F5.0   OFY %F5.0',
     &		   OFX,        OFY)
	CALL WRITEF(
     &'            PHX %F5.1   PHY %F5.1',
     &		   PHX,        PHY)
	GO TO 30
C
440	CONTINUE
**	IF AREA
C facsimile - using the MCE Area-scanner
	CALL FAXARE (IWID, IPIT)
	GO TO 10
**	IFF
	GO TO 30
**	ENDC
C
450	RETURN
	END
