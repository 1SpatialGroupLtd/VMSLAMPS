C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1986-05-28 14:45:34.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE LNKDRW(MODPIC,MANUAL,ROLING,MOVING,SQARED,ROLPOS,
     &                    NXTDIR,BOX)
C
***	MODULE	LNKDRW
***	IDENT	28MY86
C
C Copyright Laser-Scan Laboratories Limited, Cambridge, England.
C
CMOD	Converged				 DM	28-May-1986
CMOD	Show no. of arms if snapped jnc; tidied	 DM	06-May-1986
CMOD	... unless we're ROLING			 DM	27-Apr-1983
CMOD	Draws '+' at first point of TRKSEG
CMOD	if it is an EOF junction ...		AJW	05-Nov-1982
CMOD	MPJUN replaced by MPTYPE		 DM	28-Oct-1982
CMOD	no. of arms of junction closer to jnc	AJW	07-Oct-1982
CMOD	Always put cursor up on ROLING		WJJ	07-Oct-1982
CMOD	KKK initialised to 32767, not -1	AJW	05-Aug-1982
CMOD	Plots + at first point
CMOD	PARAMETER MAXREF for number of points	AJW	30-Jul-1982
CMOD	Only last 3 junctions			AJW	30-Jul-1982
CMOD	PLTCHRs '+' at each junction		AJW	29-Jul-1982
CMOD	Truncates refresh buffer if MODPIC	AJW/WJJ	30-Mar-1982
CMOD	MCE area-scanner oddments added		JHR	11-Mar-1982
CMOD	Draw only 25 points in refresh and
CMOD	 draw them forwards			WJJ	08-Feb-1982
CMOD	Calculates no. of master points on
CMOD	basis of line length			AJW	17-Nov-1981
CMOD	Displays no. of arms in refresh		AJW	02-Mar-1981
CMOD	Tidied					AJW	27-Jan-1981
CMOD	Split out from LINK			AJW	18-Jan-1980
C
**	IF VAX
	IMPLICIT NONE
**	ENDC
C
C parameters:
***	PARAMETER/PARAMS/
C
	PARAMETER MAXLEN=10000.0	! 10 cm * 1000 counts/cm
	PARAMETER MAXREF=25		! number of points back
C
C arguments:
	LOGICAL*1 MODPIC
	LOGICAL*1 MANUAL
	LOGICAL*1 ROLING
	LOGICAL*1 SQARED
	LOGICAL*1 BOX
	INTEGER   MOVING
	INTEGER   NXTDIR
	REAL      ROLPOS(2)
C
C common blocks:
***	COMMON/BLG/
**	COMMON/EXPC/
***	COMMON/LKFOLL/
***	COMMON/LKPARM/
***	COMMON/MPEP/
***	COMMON/SCPARM/
***	COMMON/SCCORR/
***	COMMON/TRKSEG/
C
C local workspace:
	INTEGER   III,JJJ,KKK,LLL
	INTEGER   NU,NV
	REAL	  LEN
	REAL      VW(2)
	REAL	  XO,YO,XP,YP
C
C ......................................................................
C
	IF (MODPIC) GO TO 130		! truncate and redraw tramlines
C
C get cursor right for this state.
	CALL DISMOD(1)
	IF (MANUAL.OR.ROLING) GO TO 20
	IF (MOVING.EQ.2) GO TO 10
	CALL CSWT(NEXT(X),NEXT(Y))
	GO TO 20
10	CALL CSWT(NEXT(X)+NXTID(X),NEXT(Y)+NXTID(Y))
C
C draw about MAXLEN of the digitised line, unless squared building (in
C which case draw all of it).
20	III=NMP(1)			! get the last point
	IF (ROLING) III=III - 1
	IF (III.LE.0) GO TO 70
	XP=MP1(X,III)
	YP=MP1(Y,III)
	LEN=0.0
	JJJ=III
	LLL=0
	KKK=-32767
C
C loop backwards along the line.
30	III=III - 1
	   IF (JJJ-III.GE.MAXREF) GO TO 50
	   IF (III.LE.0) GO TO 50
	   IF (MPTYPE(III).LE.0) GO TO 40
	   IF (LLL.GE.2) GO TO 40	! get 3rd junction back
	   KKK=III
	   LLL=LLL + 1
40	   XO=MP1(X,III)
	   YO=MP1(Y,III)
	   LEN=LEN + MAX(ABS(XO-XP),ABS(YO-YP))
	   XP=XO
	   YP=YO
	IF (LEN.LE.MAXLEN.OR.SQARED) GO TO 30
50	CALL MOVTO(XP,YP)
	IF (III.EQ.KKK.AND.MPTYPE(III).GT.0) CALL PLTCHR(43)
C
C now go forwards drawing the points ...
60	III=III + 1
	   CALL LINTO(MP1(X,III),MP1(Y,III))
	   IF (III.GE.KKK.AND.MPTYPE(III).GT.0) CALL PLTCHR(43)
	IF (III.LT.JJJ) GO TO 60
C
C and the backlogged points ...
	IF (INDEX(1).GT.0) CALL LINBY(XBLG(1,INDEX(1)),YBLG(1,INDEX(1)))
C
C and the line elements being considered.
70	IF (SEGLEN.LT.2.OR.CHNSEL.EQ.0) GO TO 110
	CALL MOVTO(SEGPT(X,1),SEGPT(Y,1))
	DO 80 III=2,SEGLEN
	   CALL LINTO(SEGPT(X,III),SEGPT(Y,III))
80	CONTINUE
	IF (SEGJUN.LE.0) GO TO 90
C
C display number of junction arms in refresh.
	CALL EXPAND(' %N',SEGJUN)
	GO TO 100
C
C spot 'snapped' junction.
90	IF (CONNCT(4,CHNSEL).NE.4) GO TO 120	! prediction chain ?
	IF (LSTSEL.LE.0) GO TO 120
	IF (CONNCT(4,LSTSEL).NE.5) GO TO 120	! junction last ?
	CALL MOVTO(MP1(X,NMP(1)),MP1(Y,NMP(1)))
	CALL EXPAND(' %N',MPTYPE(NMP(1)))
100	CALL CHARZ(EXPBUF)
	CALL MOVTO(SEGPT(X,SEGLEN),SEGPT(Y,SEGLEN))
	GO TO 120
C
110	IF (SEGLEN.NE.1.OR.ROLING.OR.SEGJUN.LE.0) GO TO 120
	CALL MOVTO(SEGPT(X,1),SEGPT(Y,1))
	CALL PLTCHR(43)
C
C for ROLING or MANUAL display a line to the cursor if any master points
C and draw the cursor (relying on RALONG writing the cursor position).
120	IF (.NOT.(MANUAL.OR.ROLING)) GO TO 140
	IF (NMP(1).GT.0) CALL LINTOC
	CALL CURSOR
	GO TO 160
C
130	CALL RFTRNC			! come here if MODPIC
C
C draw the next scan vector ... or nothing at all !
140	IF (.NOT.DRWVEC) GO TO 160
	CALL SETDIR(NXTID,III,NU,NV)	! to get NU & NV
	IF (NXTDIR.LT.0) GO TO 150	! (unless we have our own ideas)
	NU=2 - NXTDIR
	NV=1 + NXTDIR
150	VW(NU)=0
	VW(NV)=IWID*WAR*CR(NV)/2.0
	CALL RFMARK
		      CALL MOVTO( NEXT(X)+VW(X),   NEXT(Y)+VW(Y))
		      CALL LINBY( FLOAT(NXTID(X)), FLOAT(NXTID(Y)))
	IF (.NOT.BOX) CALL MOVBY(-2.0*VW(X),      -2.0*VW(Y))
	IF (     BOX) CALL LINBY(-2.0*VW(X),      -2.0*VW(Y))
		      CALL LINBY(-FLOAT(NXTID(X)),-FLOAT(NXTID(Y)))
	IF (     BOX) CALL LINBY( 2.0*VW(X),       2.0*VW(Y))
C
160	RETURN
	END
