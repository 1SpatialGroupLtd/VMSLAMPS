C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1986-07-25 17:33:24.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
**	IF VAX
	OPTIONS /CHECK=NOBOUNDS
**	ENDC
	SUBROUTINE IFWSYS(LUN)
C
***	MODULE	IFWSYS
***	IDENT	25JL86
C
C Copyright Laser-Scan Laboratories Limited, Cambridge, England.
C
CMOD	SAC preserved (if set)			 DM	25-Jul-1986
CMOD	CFT reinstated (to preserve accuracy)	 DM	30-Jun-1986
CMOD	FCOEFF, CPMEAS replace CFT, CPTS	 DM	26-Jun-1986
CMOD	Brought into line with INOUT		 DM	10-Jun-1986
CMOD	Redundant parameters removed		 DM	04-Jun-1986
CMOD	Converged; ELF and BRF added; ITF => FCF DM	28-May-1986
CMOD	STH added (point feature paintout size)	 DM	14-Mar-1986
CMOD	STRLEN introduced			 DM	28-Feb-1986
CMOD	PNT added (default point feature mode)	 DM	18-Oct-1985
CMOD	INV added (invert polarity of encs)	 DM	03-Oct-1985
CMOD	TF10() mechanism replaced ABS(WORD())	 DM	20-Aug-1985
CMOD	Preserve AC base (ACB) in patch file	 DM	10-Sep-1984
CMOD	Function buttons now always preserved	 DM	12-Jul-1983
CMOD	EPS, CRC, CRD now under AREA cond too	 DM	23-May-1983
CMOD	FCT added				AJW	13-Apr-1983
CMOD	/COEFFS/ removed			AJW	07-Apr-1983
CMOD	writes out FPR, PPR, WPR, and multiple
CMOD	REDFOC/FLE command eliminated		AJW	05-Apr-1983
CMOD	Reformat parameters in patch file	WJJ	16-Dec-1982
CMOD	SPD - SPDIS added			AJW	10-Oct-1982
CMOD	OPTIONS statement added, DUMMY removed	AJW	23-Aug-1982
CMOD	LINING not printed out			AJW/WJJ	30-Mar-1982
CMOD	Junction parameters removed		AJW	19-Jan-1982
CMOD	DUMMY array added to force error if
CMOD	compiled /CHECK=BOUNDS			AJW	12-Jan-1982
CMOD	New GROW limits output (CHLIM(4))	WJJ	22-Dec-1981
CMOD	NUMC changed to EXPC			AJW	 7-May-1981
CMOD	APPMAC, rather than EXPMAC, used	MCF	20-Oct-1980
CMOD	Created from IFFSYS			MCF	10-Oct-1979 
C
C Writes parameters to patch file.
C
C *** MUST NOT BE COMPILED WITH ARRAY BOUNDS CHECKING ***
C
**	IF VAX
	IMPLICIT NONE
**	ENDC
C
C parameters:
***	PARAMETER/PARAMS/
C
C argument:
	INTEGER LUN		! unit number
C
C common blocks:
***	COMMON/DIGC/
***	COMMON/ELFPAR/
***	COMMON/EXPC/
***	COMMON/GRID/
***	COMMON/GRPARM/
***	COMMON/IFFHAN/
***	COMMON/JNCLST/
***	COMMON/LKFOLL/
***	COMMON/LKPARM/
***	COMMON/LNKC/
***	COMMON/MASTER/
***	COMMON/MPEP/
***	COMMON/SCCORR/
***	COMMON/SCOTS/
***	COMMON/SCPARM/
	COMMON/THKPAR/SEP,SPOT
	REAL          SEP,SPOT
***	COMMON/TYPES/
C
C workspace:
	INTEGER	  I,J,N
	LOGICAL*1 BYTVAR
C
C functions:
	INTEGER	  EXPAND,APPMAC,WORD
	INTEGER*4 STRLEN
C
C ......................................................................
C
C statement function
	WORD(BYTVAR)=BYTVAR		! coercion
C
C ......................................................................
C
C open file for writing.
	CALL IFFOPN(LUN,SYSNAM)
	IF (IERCD.EQ.0) GO TO 10
C
C error when opening file.
	CALL WRITEF(
     &	   'Can''t open patch file %S',SYSNAM(1:STRLEN(SYSNAM)))
	GO TO 80
C
C write parameters, clearing file first.
10	CALL IFFCLR
C
C set echo first.
	CALL IFFCH(EXPBUF,EXPAND('ECH %I5',ABS(WORD(ECHO))))
C
C /SCPARM/ & /SCCORR/ & /MASTER/.
	CALL IFFCH(EXPBUF,EXPAND(
     &  'MOD %I5  FRQ %I5  WID %I5  PIT %I5',
     &   IMOD,    IFRQ,    IWID,    IPIT))
	CALL IFFCH(EXPBUF,EXPAND(
     &  'TLO %I5  TSW %I5  FLE %I5  TMS %I5',
     &   ITLO,    ITSW,    REDFOC,  ITMS))
	CALL IFFCH(EXPBUF,EXPAND(
     &  'CRX %F5.2  CRY %F5.2',
     &   CRX,       CRY))
	CALL IFFCH(EXPBUF,EXPAND(
     &  'OFX %F5.0  OFY %F5.0',
     &   OFX,       OFY))
	CALL IFFCH(EXPBUF,EXPAND(
     &  'PHX %F5.1  PHY %F5.1',
     &   PHX,       PHY))
	CALL IFFCH(EXPBUF,EXPAND(
     &  'FPR %I5  PPR %I5  WPR %I5',
     &   FPRIO,   PPRIO,   WPRIO))
	CALL IFFCH(EXPBUF,EXPAND(' '))
C 
C most relevant following parameters.
	CALL IFFCH(EXPBUF,EXPAND(
     & 'ELF %N JNC %N INV %N VEX %N SMO %N EDG %N BCH %N TCH %N BRF %N',
     &    ABS(WORD(ELF)),ABS(WORD(JNCING)),ABS(WORD(INVPOL)),
     &    ABS(WORD(VEXING)),ABS(WORD(SMOING)),ABS(WORD(EDGING)),
     &	  ABS(WORD(BAKCHK)),ABS(WORD(TMPCHK)),ABS(WORD(BRIEF))))
	CALL IFFCH(EXPBUF,EXPAND(' '))
	CALL IFFCH(EXPBUF,EXPAND(
     &  'TYP %I5  ID  %I5  INI %I5',
     &   LTYPE,   IDSIZE,  INICOM))
	CALL IFFCH(EXPBUF,EXPAND(
     &  'ETA %F5.1  H %F7.0  S %F7.0  E %F7.0 ',
     &   ETA,       H(1),    S(1),    E(1),  ))
	CALL IFFCH(EXPBUF,EXPAND(
     &  'CRC %F5.3  CRD %F5.0',
     &   CRUCOS,    CRUDIS))
	CALL IFFCH(EXPBUF,EXPAND(
     &  'GAP %F5.0  SHA %F5.2',
     &   GAPSIZ,    SHRPNS))
	CALL IFFCH(EXPBUF,EXPAND(
     &  'CRS %I5  JPT %F5.0  JAT %F5.0  JWT %F5.2',
     &   CRSSNG,  JPOSTL,    JANGTL,    JWIDTL))
	CALL IFFCH(EXPBUF,EXPAND(
     &  'NEA %F5.2  BET %F5.2  PRL %F5.2',
     &   NEARNS,    BETA,      PRLLNS))
	CALL IFFCH(EXPBUF,EXPAND(
     &  'MPN %F5.1  MPB %I5',
     &   MPNEAR,    NMPBAK))
	CALL IFFCH(EXPBUF,EXPAND(
     &  'CLU %F5.2  CLV %F5.2  CLW %F5.2  CLX %F5.2',
     &   CHLIM(1),  CHLIM(2),  CHLIM(3),  CHLIM(4)))
	CALL IFFCH(EXPBUF,EXPAND(
     &  'EPS %F5.1  HOL %I5  RIP %I5',
     &   EPSLON,    HOLE,    RIPPLE))
	CALL IFFCH(EXPBUF,EXPAND(
     &  'ANG %F5.3  LEN %F5.3  DST %F5.3  WTH %F5.3',
     &   ANGWGT,    LENWGT,    DSTWGT,    WTHWGT))
	CALL IFFCH(EXPBUF,EXPAND(
     &  'DIF %F5.2  SMA %F5.2  STI %F5.0  BIA %F5.2',
     &   WIDDIF,    SMLLNS,    STFFNS,    BIAS))
	CALL IFFCH(EXPBUF,EXPAND(' '))
C
C others.
	CALL IFFCH(EXPBUF,EXPAND(
     &  'THK %F5.1  PTH %F5.1  STH %F5.1  HCH %I5  SPD %F5.0',
     &   THKNSS,    THKPNT,    SNGLTH,    NHATCH,  SPDIS))
	CALL IFFCH(EXPBUF,EXPAND(
     &  'SEP %F5.3  SPO %F5.3',
     &   SEP,       SPOT))
	CALL IFFCH(EXPBUF,EXPAND(
     &  'OFF %F5.2  QUA %F5.2  SCT %I5  REP %I5  AVE %I5',
     &   OFFNSS,    FQUAL,     ISCAT,   IGREP,   IGRAVE))
	CALL IFFCH(EXPBUF,EXPAND(
     &  'GRI %F5.1  TIK %F5.0  CHF %I5  FCT %I5',
     &   GRIDSQ,    TIKSIZ,    CPCHEK,  CORCCP))
	CALL IFFCH(EXPBUF,EXPAND(
     &  'MPL %I5  MPF %I5  MPX %I5',
     &   MPLIM,   MPLEFT,  MPTOTE))
	CALL IFFCH(EXPBUF,EXPAND(
     &  'SQT %F5.0',
     &   SQUTOL))
	CALL IFFCH(EXPBUF,EXPAND(' '))
C
C limits and weights.
	DO 20 I=1,MAXLIM
	  CALL IFFCH(EXPBUF,EXPAND('LIM%N %&7',I,LIMIT(I)))
20	CONTINUE
	CALL IFFCH(EXPBUF,EXPAND(' '))
C
	DO 30 I=1,MAXWT
	  CALL IFFCH(EXPBUF,EXPAND('W%N %&7',I,WGHT(I)))
30	CONTINUE
	CALL IFFCH(EXPBUF,EXPAND(' '))
C
C /TYPES/.
	DO 50 I=1,MAXPAR
	  CALL IFFCH(EXPBUF,EXPAND('PAR %I3 %5',I,PNAME(I)))
	  IF (PNAME(I).EQ.0) GO TO 50
	  CALL EXPAND('SET %N',I)
	  DO 40 J=1,MAXTYP
	    N=EXPAND('%A %F7.2',EXPBUF,PVALUE(J,I))
40	  CONTINUE
	  CALL IFFCH(EXPBUF,N)
50	CONTINUE
	CALL IFFCH(EXPBUF,EXPAND('TYP%N',LTYPE))
C
C macro commands.
	DO 60 I=1,MACNUM
	  CALL EXPAND('DEF%I3 %5 ',I,LNKCM(LNKMAC+I*2-1))
	  CALL IFFCH(EXPBUF,APPMAC(I))
60	CONTINUE
C
C and the codedness thereof.
	DO 70 I=1,MACNUM
	  IF (CODED(I)) CALL IFFCH(EXPBUF,EXPAND('COD%N',I))
70	CONTINUE
C
C and set up the standard pair of commands.
	CALL IFFCH(EXPBUF,EXPAND('FB12END'))
	CALL IFFCH(EXPBUF,EXPAND('FB4GO'))
C
C preserve the function buttons.
	CALL IFFCH(EXPBUF,EXPAND('FCF%(7 %N%)',
     &		   ITFTAB(1),ITFTAB(2),ITFTAB(3),ITFTAB(4),
     &		   ITFTAB(5),ITFTAB(6),ITFTAB(7)))
	CALL IFFCH(EXPBUF,EXPAND('TYF%(7 %N%)',
     &  	   TYFTAB(1),TYFTAB(2),TYFTAB(3),TYFTAB(4),
     &		   TYFTAB(5),TYFTAB(6),TYFTAB(7)))
C
C preserve the Standing Ancillary Code (if set).
	IF (SACSET) 
     &	  CALL IFFCH(EXPBUF,EXPAND('SAC %N %A %A',SACTYP,SACVTX,SACTXT))
C
C preserve the Ancillary Code Base.
	CALL IFFCH(EXPBUF,EXPAND('ACB %N',ACBASE))
C
C preserve the default point feature mode.
	CALL IFFCH(EXPBUF,EXPAND('PNT %N',PNTINI))
C
C preserve the cubic coefficients & corner points.
	CALL IFFCC(CFT)
	CALL IFFCP(CPMEAS)
C
C finished with file.
	CALL IFFCLO(LUN)
80	RETURN
	END
