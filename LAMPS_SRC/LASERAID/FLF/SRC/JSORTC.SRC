	LOGICAL*4 FUNCTION JSORTC
C
***	MODULE	JSORTC
***	IDENT	12MY86
C
C Copyright Laser-Scan Laboratories Limited, Cambridge, England.
C
CMOD	Tidied; messages standardised		 DM	12-May-1986
CMOD	Debugging				AJW	15-Jul-1982
CMOD	Rehashed				AJW	13-Jul-1982
CMOD	BRATPT removed				AJW	09-Jul-1982
CMOD	T P C H A R changed to TPTCHN		AJW	08-Jul-1982
CMOD	Now does JSORTPs stuff as well		AJW	29-Jun-1982
CMOD	fails if CHN,FCHN,TPTS,ARM inconsistent	AJW	25-Jun-1982
CMOD	JUNTRI(2,J)=IND1+NTPTS-1 before 100	AJW	22-Jun-1982
CMOD	BRATPT set up (TPTs on each branch)	 DM	10-Jun-1982
CMOD	JNCNUM added				AJW	01-Jun-1982
CMOD	CHNSNS right way round, and JUNTRI
CMOD	indexed the right way round		AJW	20-Nov-1981
CMOD	Created					AJW	28-Oct-1981
C
C Sorts the chains by junction into standard junction format.
C
**	IF VAX
	IMPLICIT NONE
**	ENDC
C
C parameters:
***	PARAMETER/PARAMS/
C
	PARAMETER L=1,R=2
C
C common blocks:
***	COMMON/JUNCOM/
***	COMMON/JUNCTN/
***	COMMON/LINKS/
C
C local workspace:
	INTEGER   ARM		! curent arm
	INTEGER   CHN		! current chain
	INTEGER   CHNL,CHNR	! left and right chains of arm
	INTEGER   FCHN		! first chain in this junction
	INTEGER   FTPT		! counts TPTs used as first TPT
	INTEGER   III,JJJ,KKK	! temp variables
	INTEGER   JNC		! current junction
	INTEGER   TPT		! current transition point
	INTEGER   TPUSED(MAXTPT)! 0=> unused,-1=> used,1=> being tried
	INTEGER   JTRPTS(MAXBRA,MAXJUN)	! TPTS for each junction
C
C ......................................................................
C
	JSORTC=.FALSE.			! assume sucess
	JNC=0				! set up first junction
	FTPT=1				! and first TPT
	TPUSED(1)=1			! say we're trying it
	DO 10 III=1,NUMTPS
	  TPUSED(III)=0			! clear "used" array
10	CONTINUE
C
C here to start the next junction.
20	JNC=JNC + 1
	  IF (JNC.LE.MAXJUN) GO TO 30
	  CALL WRITEF('JSORTC: Too many junctions%C',7)
	  JNC=JNC - 1
	  GO TO 140
C
C here to try a new starting TPT.
30	  TPT=FTPT
	    ARM=1
	    JTRPTS(ARM,JNC)=TPT
	    CHN=TPTCHN(3,TPT)		! set up first chain
	    FCHN=CHN
C
C loop finding matching TPTs until we have a junction.
40	    III=0
C
C loop through all unused TPTS to find a match.
50	      III=III + 1
		IF (III.GT.NUMTPS) GO TO 70
		IF (TPUSED(III).NE.0) GO TO 50
		KKK=TPTCHN(3,III)
C
C check that this_chain = new(that_chain)
	      IF (KKK.NE.TPTCHN(2,TPT)) GO TO 50
C
C and that_chain = old(this_chain)
	      IF (CHN.NE.TPTCHN(1,III)) GO TO 50
C
	      TPT=III		! move TPT on round junction
	      TPUSED(TPT)=1	! we're trying it
	      CHN=KKK		! chain TPT is on
	      ARM=ARM + 1
	      IF (ARM.LE.MAXBRA) GO TO 60
	      CALL WRITEF('JSORTC:Too many arms%C',7)
	      JSORTC=.TRUE.
	      GO TO 210
C
C finished if this new( this_chain) = first_chain,
C		or old(first_chain) = this_chain.
60	      JTRPTS(ARM,JNC)=TPT
	      IF ((TPTCHN(2, TPT).EQ.FCHN) .OR.
     &            (TPTCHN(1,FTPT).EQ. CHN)) GO TO 100
	    GO TO 40
C
C here if ran out of transition points or mismatched.
70	    DO 80 III=1,MAXTPT	! reset all TPTs we tried
	      IF (TPUSED(III).EQ.1) TPUSED(III)=0
80	    CONTINUE
C
90	    FTPT=FTPT + 1	! loop until we find a new TPT to try
	      IF (FTPT.GT.NUMTPS) GO TO 140
	    IF (TPUSED(FTPT).NE.0) GO TO 90
	  GO TO 30
C
C here if finished with this junction - is everything consistent ?
100	  IF (.NOT.((TPTCHN(2, TPT).EQ.FCHN) .AND.
     &              (TPTCHN(1,FTPT).EQ. CHN))) GO TO 70
C
	  DO 110 III=1,MAXTPT
	    IF (TPUSED(III).EQ.1) TPUSED(III)=-1
110	  CONTINUE
C
	  JNCBRA(JNC)=ARM
C
C set up arms ...
	  DO 120 ARM=1,JNCBRA(JNC)
	    TPT=JTRPTS(ARM,JNC)
	    BRACHN(L,ARM,JNC)=TPTCHN(3,TPT)
	    BRACHN(R,ARM,JNC)=TPTCHN(2,TPT)
120	  CONTINUE
C
	  DO 130 ARM=2,JNCBRA(JNC)
	    TPT=JTRPTS(ARM,JNC)
	    BRAFST(L,ARM-1,JNC)=CLONOD(TRPTAR(1,TPT))
	    BRAFST(R,ARM,  JNC)=CLONOD(TRPTAR(2,TPT))
130	  CONTINUE
C
	  TPT=JTRPTS(1,JNC)
	  BRAFST(L,JNCBRA(JNC),JNC)=CLONOD(TRPTAR(1,TPT))
	  BRAFST(R,1,          JNC)=CLONOD(TRPTAR(2,TPT))
C
C and go round for another junction.
	GO TO 20
C
C ......................................................................
C
C here with all junctions found - did we really find any ?
140	IF (JNCBRA(JNC).LE.0) JNC=JNC - 1
	IF (JNC.GE.1) GO TO 150
	JSORTC=.TRUE.
	GO TO 210
C
C set up the BRALSTS.
C start them off at the ends of the chain, and then if any junction has
C the same chain as an arm, pull the last point in to the first point of
C that arm.
150	JNCNUM=JNC
	DO 200 JNC=1,JNCNUM
	  DO 190 ARM=1,JNCBRA(JNC)
	    CHNL=BRACHN(L,ARM,JNC)
	    CHNR=BRACHN(R,ARM,JNC)
	    BRALST(L,ARM,JNC)=LAST(CHNL)
	    BRALST(R,ARM,JNC)=FIRST(CHNR)
	    DO 180 III=1,JNCNUM
	      IF (III.EQ.JNC) GO TO 180
	      DO 170 JJJ=1,JNCBRA(III)
		IF (CHNL.NE.BRACHN(R,JJJ,III)) GO TO 160
		IF (BRAFST(R,JJJ,III).LT.BRAFST(L,ARM,JNC)) GO TO 160
		BRALST(L,ARM,JNC)=MIN(BRALST(L,ARM,JNC),
     &				      BRAFST(R,JJJ,III))
160		IF (CHNR.NE.BRACHN(L,JJJ,III)) GO TO 170
		IF (BRAFST(L,JJJ,III).GT.BRAFST(R,ARM,JNC)) GO TO 170
		BRALST(R,ARM,JNC)=MAX(BRALST(R,ARM,JNC),
     &				      BRAFST(L,JJJ,III))
170	      CONTINUE
180	    CONTINUE
190	  CONTINUE
200	CONTINUE
C
210	RETURN
	END
