	INTEGER*4 FUNCTION ELEMNT(IEND,ICHN,IEDGE,JEND,JCHN,JEDGE)
C
***	MODULE	ELEMNT
***	IDENT	21MR86
C
C Copyright Laser-Scan Laboratories Limited, Cambridge, England.
C
C Author: D. Meader
C
C	Created 				 DM	28-Jan-1986
C
C Looks for the chain element which is the next logical connection to
C end IEND of chain ICHN along edge IEDGE.
C Returns .TRUE. if none.
C
	IMPLICIT NONE
C
***	PARAMETER/PARAMS/
C
	INTEGER*4 IEND
	INTEGER*4 ICHN
	INTEGER*4 IEDGE
	INTEGER*4 JEND			! end of JCHN to be appended
	INTEGER*4 JCHN			! chain element to be appended
	INTEGER*4 JEDGE			! edge to which JCHN belongs
C
***	COMMON/ANACOM/
***	COMMON/LINKS/
***	COMMON/LKPARM/
C
	INTEGER*4 I,J			! temporary variables
C
C ......................................................................
C
	ELEMNT=.FALSE.			! assume we succeed
	IF (IEDGE.LE.0) GO TO 70	! silly edge ?
	JEND=IEND
	JCHN=ICHN
	JEDGE=IEDGE
	IF (JEND.EQ.1) GO TO 20		! appending backwards ?
C
C ... usual case - we're appending to the far end of JCHN.
C ... locate the next chain along from JCHN. If we've come to the
C ... end of JEDGE then we need to explore the join structure first to
C ... find the next edge.
	I=CURCHN(JEDGE)			! last chain sharing JEDGE
	IF (I.EQ.JCHN) GO TO 30		! is this our current chain ?
10	J=CHNMAP(I,JEDGE)		! get the next chain back from I
	   IF (J.EQ.JCHN) GO TO 50	! is I the chain we want ?
	   IF (J.EQ.0) GO TO 60		! data structure is duff !!
	   I=J
	GO TO 10			! go round again
C
C ... we're appending to the near end of JCHN.
C ... locate the next chain back from JCHN.
20	I=CHNMAP(JCHN,JEDGE)
	IF (I.GT.0) GO TO 50
C
C ... get the edge joined to JEND of JEDGE.
C ... check that this isn't just JEDGEs neighbour (e.g. end of line).
30	J=JOIEND(JEND,JEDGE)
	IF (J.LE.0) GO TO 70		! finished if none
	I=JOILST(JEND,JEDGE)
	IF (JEDGE.EQ.NEIGBR(I)) GO TO 70
	JEDGE=I
	JEND=3 - J
C
C ... now locate the appropriate chain.
	I=CURCHN(JEDGE)			! last chain sharing JEDGE
	IF (JEND.EQ.1) GO TO 50		! easy if appending backwards
40	J=CHNMAP(I,JEDGE)		! get the next chain back from I
	   IF (J.EQ.0) GO TO 50		! is I the chain we want ?
	   I=J
	GO TO 40			! go round again
C
C ... we've found our chain, but has it already been used ?
C ... if not return details in JEND, JCHN (and JEDGE).
50	IF (CHAIN(I).LE.0) GO TO 70
	JEND=3 - JEND
	JCHN=I
	GO TO 80
C
C ... error.
60	IF (TMPCHK)
     &	   CALL WRITEF('ELEMNT: Bad chain map for edge %^L%N',JEDGE)
70	ELEMNT=.TRUE.			! failure
C
80	RETURN
	END
