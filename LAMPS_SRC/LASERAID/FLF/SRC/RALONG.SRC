C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1982-10-20 14:30:18.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE RALONG(NMIN,NMAX,ROLPOS)
C
***	MODULE	RALONG
***	IDENT	20OC82
C
C Copyright Laser-Scan Laboratories Limited, Cambridge, England.
C
C	WHAT argument removed			 DM	06-Oct-1982
C	Now NMP(1).LE.1				AJW	21-Jan-1982
C	Tests to see if NMP(1).EQ.1		AJW	04-Mar-1981
C	Tidied					AJW	27-Jan-1980
C	Created					MCF	08-Jul-1977
C
C Rolls along the master points, between points NMIN & NMAX.
C
**	IF VAX
	IMPLICIT NONE
**	ENDC
C
***	PARAMETER/PARAMS/
C
***	COMMON/LKPARM/
***	COMMON/MPAUX/
***	COMMON/MPEP/
C
	INTEGER	  K,LASTMP
	INTEGER   NMIN,NMAX	! limits of travel
	REAL	  ROLPOS(2)	! returned position
	REAL	  DX,DY,T,R
C
C ......................................................................
C
	CALL CSAJST(ROLPOS(X),ROLPOS(Y))
C
	IF (NMP(1).LE.1) GO TO 10
C
	LASTMP=NMP(1) - 1
	DX=MP1(X,NMP(1)) - MP1(X,LASTMP)
	DY=MP1(Y,NMP(1)) - MP1(Y,LASTMP)
	R=DX*DX + DY*DY
	IF (R.LE.0.0) GO TO 10		! go to top of null segment
	T=((DX*(ROLPOS(X)-MP1(X,LASTMP))) +
     &     (DY*(ROLPOS(Y)-MP1(Y,LASTMP))))/R
C
C ... are we outside segment ?
	IF (T.LT.0.0) GO TO 20
	IF (T.GT.1.0) GO TO 10
C
	ROLPOS(X)=MP1(X,LASTMP) + T*DX	! no
	ROLPOS(Y)=MP1(Y,LASTMP) + T*DY
	GO TO 40
C
C ... step forward.
10	K=0
	IF (NMP(1).GE.NMAX) GO TO 30
	NMP(1)=NMP(1) + 1
	K=-1
	GO TO 30
C
C ... step backwards.
20	K=-1
	IF (NMP(1).LE.NMIN) GO TO 30
	NMP(1)=NMP(1) - 1
	K=0
C
30	K=NMP(1) + K
	ROLPOS(X)=MP1(X,K)
	ROLPOS(Y)=MP1(Y,K)
C
40	CALL CSWT(ROLPOS(X),ROLPOS(Y))
	RETURN
	END
