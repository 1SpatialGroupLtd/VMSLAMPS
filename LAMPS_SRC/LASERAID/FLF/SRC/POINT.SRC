C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1986-07-28 10:16:58.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE POINT(RC)
C
***	MODULE	POINT
***	IDENT	28JL86
C
C Copyright Laser-Scan Laboratories Limited, Cambridge, England.
C
CMOD	AC command added			 DM	28-Jul-1986
CMOD	Converged				 DM	25-Jun-1986
CMOD	RFSCAN generalised			 DM	04-Jun-1986
CMOD	Only call CSRD etc if HADLDI		 DM	30-May-1986
CMOD	Generate TH entry before ST		 DM	29-Apr-1986
CMOD	Draw oriented crosses in DRF		 DM	14-Mar-1986
CMOD	New point mode (square features)	 DM	15-Oct-1985
CMOD	Command table MEASCM used, FB6 disabled	 DM	17-Sep-1985
CMOD	Colour added.				 DM	09-Sep-1985
CMOD	Use /LKFOLL/ to pass ID,IU,IV to AUTX	 DM	02-Sep-1985
CMOD	New return code -4 from AUTX		 DM	22-Aug-1985
CMOD	'Eh' exorcised				AJW	09-Nov-1982
CMOD	IF NEWCOR output in map space		AJW	02-Nov-1982
CMOD	Tidied, and T E X T C changed		AJW	 1-Jul-1981
CMOD	NULLCM INTEGER as well as EXTERNAL	AJW	12-Jun-1981
CMOD	MSGF changed to WRITEF			AJW	 8-May-1981
CMOD	Common block /NULLC/ removed		AJW	 1-Aug-1980
CMOD	Authors					PGH/MCF
C
C Digitises a point symbol.
C
**	IF VAX
	IMPLICIT NONE
**	ENDC
C
C parameters:
***	PARAMETER/PARAMS/
C
C argument:
	INTEGER RC		! return code
C
C common blocks:
***	COMMON/DIGC/
***	COMMON/LINKS/
***	COMMON/LKFOLL/
***	COMMON/LKPARM/
***	COMMON/MASTER/
***	COMMON/RSE/
***	COMMON/SCCORR/
***	COMMON/SCPARM/
***	COMMON/TXTC/
***	COMMON/XYPIXC/
C
C local workspace:
	INTEGER   CWD		! command word
	INTEGER	  I,J,K		! temporary variables
	INTEGER   IXPOS(2)	! position for TEK display
	INTEGER   NPTS		! 0, 1 ==> nothing, something found
	INTEGER	  PNTBUT(0:1)	! default "buttons" on entry
	INTEGER*2 PNTMAP(MAXCHN)   ! list of relevant chain numbers
	LOGICAL*1 SQUFTR	! measuring a square point feature ?
	REAL	  ANGLE		! symbol orientation
	REAL      STBUF(2)	! symbol position
C
C command table:
	INTEGER   PNTCM
	EXTERNAL  PNTCM
C
C function:
	INTEGER   RDCOMM
C
	SAVE PNTMAP
C
	DATA PNTBUT/2,6/	! "buttons" for modes 0 and 1
C
C ......................................................................
C
	CALL FBWT16("104373)
C
C any point features outstanding ?
	IF (PNTPND) 300,10,150		! auto-accept,none,manual-accept
C
C "press" FB automatically
10	NPTS=0
	IF (PNTINI.EQ.0.OR.PNTINI.EQ.1) GO TO 20
	CALL WRITEF('%CPOINT: Entered with PNT=%N%C',7,PNTINI,7)
	GO TO 320
20	CWD=PNTBUT(PNTINI)
	GO TO 80
C
C get next command
30	IF (.NOT.HADLDI) GO TO 40
	CALL DISMOD(1)
	CALL CURSOR
40	DCPTR=-1
	TXTPTR=-2
C
50	IF (.NOT.(SQUFTR.AND.HADLDI)) GO TO 60
	CALL LDINPM(1,I,J,K)		! are we refreshing ?
	IF (K.EQ.0) GO TO 60
	CALL CSAJST(STBUF(1),STBUF(2))	! keep track of the cursor
	CALL RFTRNC			! remove the old scan box ...
	CALL MOVTO(STBUF(1),STBUF(2))
	CALL RFBOX(HSLENC)		! and draw a new one
C
60	CWD=RDCOMM(PNTCM,.FALSE.)
	IF (CWD) 70,70,80
C
C nothing or error
70	IF (DCPTR.LT.0) GO TO 40
	IF (CWD.NE.0)
     &	   CALL WRITEF('%CPOINT: Entered with CWD=%N%C',7,CWD,7)
	GO TO 40
C
C obey command
80	GO TO ( 220, 220,  50, 290,	! DPO, POI, ...,  OK
     &		160, 160, 180, 100,	! DSQ, SQP, DRF, NXT
     &		 50,  50,  50,  90,	! ..., ..., ..., CLO
     &		 50,  50,  50, 320,	! ..., ..., ..., ABA
     &		280			!  AC
     &	      ),CWD
	GO TO 40
C
C use close up screen
90	SQUFTR=(PNTINI.EQ.1)
	IF (SQUFTR) CALL PARIO(4,PTYPE)
	CALL FAX(.TRUE.,IWID,IPIT)
	NPTS=0
	IF (.NOT.SQUFTR) GO TO 30
	CALL PARIO(4,LTYPE)
	GO TO 40
C
C get next feature.
100	IF (PNTPND) 110,40,120
110	PNTPND=1 - PNTPND		! (-ve ==> all features)
120	PNTPND=PNTPND - SIGN(1,PNTPND)	! next 'lower' chain number
	IF (PNTPND.NE.0) GO TO 140	! if none ...
	DO 130 I=1,MAXCHN		! go back to the top of the list
	   IF (PNTMAP(I).NE.0) GO TO 130
	   PNTPND=I - 1
	   GO TO 140
130	CONTINUE
	GO TO 40			! should never happen
140	IF (CHAIN(PNTMAP(PNTPND)).LE.0) GO TO 120
C
C join here after manual accept.
150	IF (HADLDI) CALL RFSCAN(PNTMAP,PNTPND,HSLENC)
	NPTS=1
	GO TO 40
C
C digitise square point features.
160	SQUFTR=.TRUE.
	CALL PARIO(4,PTYPE)		! large scan
	IF (HADLDI) THEN
	   CALL CSRD(START(X),START(Y))
	   CALL XYSCA(START(X),START(Y))   ! PIX
	ENDIF
	I=0
	CALL EXTCHN(I)			   ! EXT
	CALL VIOCLR(PNTMAP,2*MAXCHN)
	CALL PNTFTR(RC,PNTMAP)		! hunt for point features
	IF (MOD(CWD,2).EQ.0.OR.RC.NE.0) GO TO 170
	CALL RDABO			! picture wanted ...
	CALL TXCLR			! clear the Tek screen ...
	CALL DRWELF(IPIT)		! and draw it
170	CALL PARIO(4,LTYPE)		! restore old parameters
	IF (HADLDI) CALL RFSCAN(PNTMAP,PNTPND,HSLENC)
	NPTS=0
	IF (RC.EQ.0) NPTS=1
	GO TO 40
C
C draw chain(s) on the close-up screen.
180	IF (PNTPND) 190,40,200
190	I=0				! draw all chains
	GO TO 210
200	I=PNTMAP(PNTPND)		! draw chain I
210	CALL PARIO(4,PTYPE)		! get parameters used for scan
	CALL RDABO
	CALL TXCLR			! clear the Tek screen
	J=INT(FLOAT(IWID)*WAR*CR(IV))
	CALL DRWSQ(J,J)			! draw scan box
	CALL DRWCHN(I,IU,IV)		! draw chain(s)
	CALL DRWORI(I,40)		! draw oriented cross
	CALL PARIO(4,LTYPE)		! restore old parameters
	GO TO 40
C
C automatic point digitise
220	SQUFTR=.FALSE.
	RSEOFF(X)=0
	RSEOFF(Y)=0
	CALL AUTX(RC,IXPOS)
	IF (RC.NE.0) GO TO 240		! error
	IF (MOD(CWD,2).EQ.0) GO TO 230	! picture not wanted
C
C picture asked for - draw it
	CALL RDABO
	CALL TXCLR
	CALL DRWSCN(ID,IU,IV)
	CALL DRWPTS(IU,IV)
	CALL DRWCHN(0)
	CALL TXCOL(5)
	CALL TXMTO(IXPOS(X),IXPOS(Y))
	CALL TXMBY(-10,-10)
	CALL TXLBY(20,20)
	CALL TXMBY(-20,0)
	CALL TXLBY(20,-20)
	CALL TXCOL(1)
	CALL TXORGN(0,0)
	CALL TXSCLE(1.0)
	CALL TXMTO(0,600)
	CALL TXEND
C
C success !
230	IF (HADLDI) THEN
	   CALL DISMOD(1)
	   CALL CSRD(STBUF(X),STBUF(Y))
	ENDIF
	NPTS=1
	CALL MOVTO(STBUF(X),STBUF(Y))
	CALL LINBY(0.0,0.0)
	GO TO 40
C
C failed to digitise automatically
240	NPTS=0
	CALL WRITEF(' ')
	IF (RC.LE.-10) GO TO 260
	IF (RC.EQ.-2) GO TO 250
	IF (RC.EQ.-3) GO TO 270
	IF (RC.EQ.-4) GO TO 30
	CALL WRITEF('Nothing seen%C',7)
	GO TO 30
250	CALL WRITEF('One axis missing%C',7)
	GO TO 30
260	CALL WRITEF('Lines not at right angles (%N)%C',-(RC+10),7)
	GO TO 30
270	CALL WRITEF('Confused%C',7)
	GO TO 30
C
C AC type value [text] - insert an AC entry into the current feature.
280	CALL GENAC
	GO TO 40
C
C feature accepted - output it
290	IF (NPTS.NE.0) GO TO 300
	IF (HADLDI) CALL CSRD(STBUF(X),STBUF(Y))
	NPTS=1				! he's pressed ACCEPT ...
	IF (.NOT.SQUFTR) GO TO 300	! with nothing in hand
	I=1
	ANGLE=0.0			! (let him correct it later)
	CALL WRITEF('WARNING - Symbol orientation not set%C',7)
	GO TO 310
300	I=ABS(PNTPND)
	IF (I.EQ.0) GO TO 310		! not square feature mode
	CALL ORIENT(CHAIN(PNTMAP(I)),STBUF,ANGLE)
	IF (TMPCHK) CALL WRITEF(
     &	   'Symbol orientation is %F0.1 degrees',ANGLE*180.0/3.141593)
	CHAIN(PNTMAP(I))=0		! finished with this chain now
	PNTPND=PNTPND - SIGN(1,PNTPND)	! get feature for next time
310	CALL IFFTH(INT(THKNSS))
	CALL TRXUSE(STBUF(X),STBUF(Y),FCOEFF)
	CALL IFFST(STBUF,NPTS,0)
	IF (I.NE.0) CALL IFFRO(ANGLE)
	RC=0
	GO TO 330
C
C feature rejected
320	RC=-1
	PNTPND=0
C
330	RETURN
	END
