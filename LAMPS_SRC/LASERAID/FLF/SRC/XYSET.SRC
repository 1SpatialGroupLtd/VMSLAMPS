C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1986-03-19 16:18:06.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE XYSET(LINE,START,END,XAXIS)
C
***	MODULE	XYSET
***	IDENT	19MR86
C
C Copyright Laser-Scan Laboratories Limited, Cambridge, England.
C
CMOD	Checks args for out of bounds; optimised DM	14-Mar-1986
CMOD	START < END again under new scheme	 DM	01-Nov-1985
CMOD	Allow START to be equal to END		 DM	07-Jun-1983
CMOD	"Already set " message only if TMPCHK	AJW	09-Aug-1982
CMOD	check for pixel already set		PGH	07-Jul-1982
CMOD	rehashed for XYSCA			PGH	05-Jul-1982
CMOD	Author					JHR	04-Feb-1982
CMOD	(from module FRSSET, as used in LAR)
C
C Sets cells in the byte-map, PIXMAP, between the positions
C passed in START and END, inclusively, on scan-line LINE.
C
**	IF VAX
	IMPLICIT NONE
**	ENDC
C
***	PARAMETER/PARAMS/
C
	INTEGER   LINE		! scan-line on which cells are to be set
	INTEGER   START		! position to start setting cells
	INTEGER   END		! position to end setting cells
	LOGICAL*1 XAXIS		! scanning in x ?
C
***	COMMON/LKPARM/		! (for TMPCHK)
***	COMMON/XYPIXC/
C
	INTEGER*4 I		! DO loop varible
	INTEGER*4 LLINE		! local copy of arguments
	INTEGER*4 LSTART
	INTEGER*4 LEND
C
C ......................................................................
C
C ... first check that the arguments are within the bounds of PIXMAP.
	LSTART=START			! check START
	IF (LSTART.LE.PIXHLF) GO TO 10
	LSTART=PIXHLF
	GO TO 20
10	IF (LSTART.LT.-PIXHLF) LSTART=-PIXHLF
C
20	LEND=END			! and END
	IF (LEND.LE.PIXHLF) GO TO 30
	LEND=PIXHLF
	GO TO 40
30	IF (LEND.LT.-PIXHLF) LEND=-PIXHLF
C
40	IF (LSTART.GE.LEND) GO TO 110	! anything to do ?
C
	LLINE=LINE			! check LINE
	IF (LLINE.LE.PIXHLF) GO TO 50
	LLINE=PIXHLF
	GO TO 60
50	IF (LLINE.LT.-PIXHLF) LLINE=-PIXHLF
C
C ... now set the pixels.
60	IF (.NOT.XAXIS) GO TO 80
	DO 70 I=LSTART,LEND		! scanning in X-axis
	   PIXMAP(-LLINE,I)=49
70	CONTINUE
	GO TO 110
C
80	DO 100 I=LSTART,LEND		! scanning in Y-axis
	   IF (PIXMAP(-I,LLINE).LT.50) GO TO 90	   ! OK ?
C
C ... error case - pixel already set (??).
	   IF (TMPCHK) CALL WRITEF(
     &	      'XYSET: Attempt to set pixel (%^L%N,%N) twice !',-I,LLINE)
	   PIXMAP(-I,LLINE)=63			   ! reset pixel to '?'
	   GOTO 100
90	   PIXMAP(-I,LLINE)=PIXMAP(-I,LLINE) + 50  ! just add in
100	CONTINUE
C
110	RETURN
	END
