	SUBROUTINE CMPCT(JCHAIN,ETA,IU,IV,MAXSUP,MINSUP)
C
***	MODULE	CMPCT
***	IDENT	06MR86
C
C Copyright Laser-Scan Laboratories Limited, Cambridge, England.
C
CMOD	Optimised, indented and commented	 DM	06-Mar-1986
CMOD	Tidied					AJW	10-Apr-1981
C 	Created					MCF	18-Apr-1977
C
C Compacts raw chain JCHAIN in a cheap and cheerful fashion.
C Works by (effectively) constructing triangles between the latest
C confirmed point in the chain, M, and 'bars' of length 2*ETA (in the
C V direction) centred on successive potential points.
C If the triangle created by point I does not overlap the current
C triangle created by point I-1 (and any previously discarded points),
C then point I-1 is added to the chain. If I does overlap, then I-1 is
C discarded and the current triangle is modified if necessary to take
C account of I's bar.
C
**	IF VAX
	IMPLICIT NONE
**	ENDC
C
***	PARAMETER/PARAMS/
C
	INTEGER   JCHAIN	! chain to be compacted
	REAL      ETA		! tolerance
	INTEGER   IU,IV
	INTEGER   MAXSUP  	! maximum number of points to suppress
	INTEGER   MINSUP  	! minimum gap between master points
C
***	COMMON/LINKS/
***	COMMON/RSE/
C
	INTEGER   I,M
	INTEGER   IDU,IDV
	INTEGER   NSUPR		! number of points suppressed so far
	INTEGER   PNMP		! Potential New Master Point
	LOGICAL*1 FPAMP		! First Point After Master Point ?
	REAL      A,B		! bounding tangents of current triangle
	REAL	  P,Q		! bounding tangents of pnt I's triangle
C
C ......................................................................
C
	PNMP=CHAIN(JCHAIN)
	IF (PNMP.EQ.0) GO TO 70		! silly chain ?
	LENGTH(JCHAIN)=1
	I=NXT(PNMP)
	GO TO 60			! finish initialising
C
10	PNMP=I
	   I=NXT(I)
	   IF (I.EQ.0) GO TO 50		! finished ?
20	   IDU=ABS(ENCBUF(IU,I) - ENCBUF(IU,M))
	   IF (IDU.EQ.0) GO TO 10	! repeated point
	   IDV=ENCBUF(IV,I) - ENCBUF(IV,M)
	   P=(IDV + ETA)/IDU		! bounding tangents for point I
	   Q=(IDV - ETA)/IDU
	   IF (.NOT.FPAMP) GO TO 30
	   NSUPR=0			! 1st point after master point
	   A=P				! establish new current triangle
	   B=Q
	   FPAMP=.FALSE.
	GO TO 10
C
30	   NSUPR=NSUPR + 1
	   A=MIN(A,P)			! do the triangles overlap ?
	   B=MAX(B,Q)
	   IF (A.LT.B) GO TO 40
	IF (NSUPR.LT.MAXSUP) GO TO 10	! yes - ignore point if possible
40	IF (NSUPR.LE.MINSUP) GO TO 10	! keep point if possible
C
50	NXT(M)=PNMP			! add point to chain
	LENGTH(JCHAIN)=LENGTH(JCHAIN) + 1
60	IF (I.EQ.0) GO TO 70		! finished ?
	M=PNMP				! no ...
	NSUPR=0
	FPAMP=.TRUE.			! note that we've added a point
	GO TO 20			! get next point in chain
C
70	RETURN
	END
