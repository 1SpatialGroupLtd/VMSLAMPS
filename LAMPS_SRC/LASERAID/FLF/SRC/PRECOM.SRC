C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1986-07-14 17:12:30.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	INTEGER*4 FUNCTION PRECOM
C
***	MODULE	PRECOM
***	IDENT	14JL86
C
C Copyright Laser-Scan Laboratories Limited, Cambridge, England.
C
CMOD	Corner points are now control points	 DM	14-Jul-1986
CMOD	Guidance coords mapped via new o/p space DM	25-Jun-1986
CMOD	MPS command now called TEXt		 DM	30-May-1986
CMOD	Converged; AC and HI recognised		 DM	20-Feb-1986
CMOD	New coeffs in /GUIDE/ to allow paint-out DM	24-Oct-1983
CMOD	HADCC, HADCP in /GUIDE/, thus mending
CMOD	SKIp; NS command is IDE not ID; tidied	 DM	21-Oct-1983
CMOD	If skipping, must have had CP		AJW	06-May-1983
CMOD	and %RZ if VAX, so only one space in TC	AJW	06-May-1983
CMOD	Transform of STs got right		AJW	22-Apr-1983
CMOD	Typo fixed (read CPs int CCOLD)		AJW	21-Apr-1983
CMOD	Uses TRX, not MCF3PT			AJW	08-Apr-1983
CMOD	/COEFFS/ replaced with /DIGC/		AJW	07-Apr-1983
CMOD	Last edited				AJW	16-Mar-1982
CMOD	MH added, NS text buffer handling
CMOD	fixed, and tidied			AJW	15-Mar-1982
CMOD	IELEN tested against -1			AJW	05-Jan-1982
CMOD	PDP version uses EFNETC			AJW	 6-Jul-1981
CMOD	T E X T C CHANGED			AJW	 1-JUL-1981
CMOD	MH, SH, JB, JP and descripton added	AJW	 5-May-1981
CMOD	Tidied					AJW	10-Feb-1981
CMOD	Created					MCF	05-Jun-1978
C
C Hands back the next command from the pre-digitising file.
C
C Result:
C	+n - command (as from RDCOMM)
C	 0 - minor error,continue, file's open
C	-1 - text in TXTBUF for RDCOMM
C	-2 - EJ, eof or error, file's closed
C
**	IF VAX
	IMPLICIT NONE
**	ENDC
C
C Parameters:
***	PARAMETER/PARAMS/
	PARAMETER MAXNIE=25
C
C common blocks:
	REAL*8	  CPCOEF(4,2)
	COMMON/CPCOM/CPCOEF		! to hold the transform coeffs
***	COMMON/DIGC/
***	COMMON/EFNETC/
***	COMMON/GUIDE/
***	COMMON/IFFHAN/
***	COMMON/MAINC/
***	COMMON/MASTER/
***	COMMON/TXTC/
C
C workspace:
	INTEGER   III			! temp
	INTEGER   IECODE,IELEN		! as usual
	INTEGER   NNN			! temp
	INTEGER   NIE			! "number" of IECODE
	INTEGER   NEWOVR		! layer number
	INTEGER   NPTS			! no. of points in feature
	LOGICAL*1 MARKED		! if an entry is marked
	REAL      CUR(2)		! cursor position
	REAL      PREPOS(2)		! accumulated points in feature
	REAL	  XTEMP			! temp
C
C functions:
	LOGICAL	  CPSET
	LOGICAL   SETOVR
	INTEGER   EXPAND
C
C data:
C command names corresponding to some of the these entries
	INTEGER   IELIST(MAXNIE)
	DATA      IELIST/'NS', 'TC', 'CH', 'NO', 'SS',
     &                   'SL', 'NF', 'FS', 'TH', 'ST',
     &                   'EF', 'EO', 'CC', 'CP', 'RA',
     &                   'EM', 'EJ', 'MD', 'VO', 'MH',
     &                   'SH', 'JB', 'JP', 'AC', 'HI'/
C
C these entries match commands in /MAINC/ (CMDPST.MAR)
	INTEGER   CODLST(7)
	DATA      CODLST/3RIDE, 3RTC , 3RTEX, 3ROV , 3RSS ,
     &                   3RPT , 3RNF /
C
C ......................................................................
C
	NEWOVR=-1
C
C select the guidance file
	CALL IFFSEL(SAVLUN)
	CALL RFSTOP
C
10	CALL IFFNXT(IECODE,IELEN)
	IF (HADCP.AND.SKPGUD.NE.0) GO TO 30
	IF (IELEN .EQ.-1) GO TO 220
	CALL EIHMK(1)		! for error recovery in 'SKIP' command
C
	DO 20 III=1,MAXNIE
	   NIE=III
	   IF (IELIST(III).EQ.IECODE)
     &     GO TO (  90, 100, 100, 110, 110,	! NS, TC, CH, NO, SS
     &             110, 110, 140,  10, 160,	! SL, NF, FS, TH ,ST
     &             180,  10,  10, 190,  10,	! EF, EO, CC, CP, RA
     &              10, 220,  10,  10,  10,	! EM, EJ, MD, VO, MH
     &              10,  10,  10,  10,  10),NIE	! SH, JB, JP, AC, HI
20	CONTINUE
C
C couldn't find an entry
	CALL WRITEF('Unknown code "%A2" in guidance file',IECODE)
	PRECOM=0
	USEGUD=.FALSE.
	GO TO 240
C
C skipping to specified NF
30	IF (IELEN.EQ.-1) GO TO 60		! end of file
	IF (IECODE.EQ.'NO') GO TO 40
	IF (IECODE.EQ.'NF') GO TO 50
	IF (IECODE.EQ.'NS') HADCP=.FALSE.
	IF (IECODE.EQ.'CP') GO TO 190
	GO TO 10				! ignore all others
C
C NO - remember layer number
40	CALL EIHRI(NEWOVR,1,1)
	GO TO 10
C
C NF - is it "our" feature ?
50	CALL EIHRI(INTARG,1,1)
	IF (INTARG.NE.SKPGUD) GO TO 10		! if not
	SKPGUD=0				! unset skipping
	IF (NEWOVR.GE.0) EOP=SETOVR(NEWOVR,.TRUE.)	! set new layer
	NIE=7					! NF command number
	GO TO 110
C
C end of file
60	CALL WRITEF('Unable to find NF %N%C',SKPGUD,7)
	MARKED=LPOSM.NE.0
	IF (MARKED) GO TO 70
	CALL IFFRWD
	GO TO 80
70	CALL IFFRWM
80	PRECOM=0
	SKPGUD=.FALSE.
	USEGUD=.FALSE.
	GO TO 240
C
C**********************************************************************
C
C NS
90	HADCP=.FALSE.
C
C ... and join with ...
C
C**********************************************************************
C
C CH,TC
C read a text string, set it up in TXTBUF so that it looks like a
C command, write it to the terminal, and return.
100	CALL EIHR(TXTBUF(1),IELEN,1)
	TXTPTR=IELEN*2
	IF (IELEN.LE.0) TXTPTR=EXPAND('%W - no text string specified',
     &                                 TXTBUF)
	IF (TXTBUF(TXTPTR).NE.0) TXTPTR=TXTPTR+1
	TXTBUF(TXTPTR)=0
	DCPTR=1
	CALL WRITEF('%RZ %A',CODLST(NIE),TXTBUF(1))
	PRECOM=FLMGCM+NIE-1
	ITGUD=-1
	GO TO 240
C
C**********************************************************************
C
C NO,SS,SL,NF
110	CALL EIHRI(INTARG,1,1)
	IF (NIE.EQ.4.AND.INTARG.EQ.CNROVR) GO TO 120
	IF (NIE.EQ.7.AND.INTARG.EQ.0) GO TO 130
	NUMINT=1
	PRECOM=FLMGCM+NIE-1
	CALL WRITEF('%5%N',CODLST(NIE),INTARG)
	HADPOS=.FALSE.
	ITGUD=-1
	NPTS=0
	PREPOS(X)=0.0
	PREPOS(Y)=0.0
	GO TO 240
C
C ignore corner tick overlay
120	CALL IFFNXC('EO',IELEN)
	GO TO 10
C
C ignore NF 0
130	CALL IFFNXC('EF',IELEN)
	GO TO 10
C
C**********************************************************************
C
C FS
140	CALL EIHRI(NNN,1,1)
	IF (NNN.LT.0.OR.NNN.GT.MAXITF) GO TO 150
	ITGUD=GUDITF(NNN)
	IF (ITGUD.GT.0) GO TO 10
	CALL WRITEF('Feature code %N not in table%C',NNN,7)
	GO TO 10
C
150	CALL WRITEF('Illegal feature code %N in guidance file%C',NNN,7)
	GO TO 10
C
C**********************************************************************
C
C ST
160	HADPOS=.TRUE.
	CALL EIHRS(NNN,III)
	DO 170 III=1,NNN
	   NPTS=NPTS+1
	   CALL EIHRR(CUR,2,III*4-3)
	   XTEMP =CPCOFG(1,X) + CUR(X)*CPCOFG(2,X) +
     &		  CUR(Y)*CPCOFG(3,X) + CUR(X)*CUR(Y)*CPCOFG(4,X)
	   CUR(Y)=CPCOFG(1,Y) + CUR(X)*CPCOFG(2,Y) +
     &		  CUR(Y)*CPCOFG(3,Y) + CUR(X)*CUR(Y)*CPCOFG(4,Y)
	   CUR(X)=XTEMP				! to output space ...
	   CALL TRXUSE(CUR(X),CUR(Y),BCOEFF)	! and to dig space
	   PREPOS(X)=PREPOS(X) + CUR(X)
	   PREPOS(Y)=PREPOS(Y) + CUR(Y)
170	CONTINUE
	GO TO 10
C
C**********************************************************************
C
C EF
180	PRECOM=0
	USEGUD=.FALSE.
	IF (HADPOS) CALL CSWT(PREPOS(X)/NPTS, PREPOS(Y)/NPTS)
C
C see about auto-start
	IF (ITGUD.GT.0.AND.GUDTIM.GT.0.AND.FASTEF) QUECOM=ITGUD
	QUETIM=GUDTIM
	GO TO 240
C
C**********************************************************************
C
C CP - read them and set up 4-point transform
190	CALL EIHRR(CPOLD,16,1)
	DO 200 III=1,4			! change r.h.s. to o/p space
	   CPOLD(3,III)=CPTS(1,III)
	   CPOLD(4,III)=CPTS(2,III)
200	CONTINUE
C
	IF (CPSET(CPOLD)) THEN
	   CALL WRITEF(
     &		'%C*** Bad control points - guidance file closed',7)
	   GO TO 230
	ENDIF
C
	DO 210 III=1,4			! take private copy of coeffs
	   CPCOFG(III,1)=SNGL(CPCOEF(III,1))
	   CPCOFG(III,2)=SNGL(CPCOEF(III,2))
210	CONTINUE
	HADCP=.TRUE.
	GO TO 10
C
C
C**********************************************************************
C
C EJ or eof
220	CALL WRITEF('End of guidance file %S',GUDNAM)
230	CALL IFFCLO(SAVLUN)
	USEGUD=.FALSE.
	FASTEF=.FALSE.
	GUDOPN=.FALSE.
	ITGUD=-1
	PRECOM=-2
C
240	CALL IFFSEL(IFFLUN)
	RETURN
	END
