	SUBROUTINE LDWNDP(MESSAGE,SYSGOT,ERRNUM,SYSTAT)
C
***	MODULE	LDWNDP
***	IDENT	10MR86
C
C Copyright Laser-Scan Laboratories Limited, Cambridge, England.
C
CMOD	Comments corrected; tidied		 DM	10-Mar-1986
CMOD	Created 				AJW	01-Dec-1982
C
C Called from LDLIB in the event of an LDLIB hard error.
C
**	IF VAX
	IMPLICIT NONE
**	ENDC
C
C parameters:
***	PARAMETER/PARAMS/
C
C arguments:
	CHARACTER*(*) MESSAGE	! error message text
	INTEGER       SYSGOT	! 2/1 ==> SYSTAT is/not present
	INTEGER       ERRNUM	! LDLIB internal error number
	INTEGER       SYSTAT	! possible system status return
C
C Error numbers (ERRNUM) presently allocated within LDLIB are:
C				  0: Unknown message
C				 -1: HRD not available
C				 -2: System constants file not available
C				 -3: Bad system constants file
C				 -4 :HRD edge violation
C				 -5: HRD 'not ready'
C				 -6: HRD power failure
C				 -7: HRD transfer failed
C				 -8: Laser failed
C				 -9: DMA failure (word count corrupt)
C
C Argument SYSTAT, if present, may take values:
C	SS$_DEVOFFLINE (hex    84) - HRD off line
C	SS$_TIMEOUT    (hex   22C) - interrupt time-out (generally
C				     results in 'not ready')
C	SS$_UNSAFE     (hex   23C) - power interrupt (generally
C				     results in 'power failure')
C	RMS errors     (hex 1xxxx) - system constants file errors
C
C common block:
***	COMMON/MASTER/
C
C local workspace:
	CHARACTER*257 SYSMSG
	INTEGER       MSGLEN
C
C ......................................................................
C
C output the error message.
	CALL WRITEF('%S',MESSAGE)
	IF (SYSGOT.EQ.2) THEN		! is SYSTAT available ?
C
C first, output the error message to the terminal.
	   CALL SYS$GETMSG(%VAL(SYSTAT),MSGLEN,SYSMSG,,)
	   SYSMSG(MSGLEN+1:MSGLEN+1)=CHAR(0)
	   CALL WRITEF('%S',SYSMSG)
C
C and then signal it, which will either:
C (1) write the message to the error logging file or
C (2) if logical name FLF$DBG is defined, will write it to the terminal
C     (AGAIN, but he is a Wizard & won't care) and then drop into DEBUG.
	   CALL LIB$SIGNAL(%VAL(SYSTAT))
	ENDIF
C 
C see if Laseraid has started yet, and if so close down tidily.
	IF (ERRNUM.EQ.-1.OR.ERRNUM.EQ.-2.OR.ERRNUM.EQ.-3) THEN
	   CALL EXIT
	ELSE
	   HADLDI=.FALSE.	! to stop WINDUP calling LDINIT(0)
	   CALL WINDUP		! which will exit
	ENDIF
	END
