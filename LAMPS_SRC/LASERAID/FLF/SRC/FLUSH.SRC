C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1986-05-28 14:18:44.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE FLUSH(FORCED)
C
***	MODULE	FLUSH
***	IDENT	28MY86
C
C Copyright Laser-Scan Laboratories Limited, Cambridge, England.
C
C Author: D. Meader
C
CMOD	Converged				 DM	28-May-1986
CMOD	Split out from BUNCH			 DM	17-Mar-1986
CMOD	FORCED is now a LOGICAL*1,	
CMOD	Doesn't try to move junctns or man. pts	 DM	04-Nov-1982
CMOD	FORCED can be negative (now conditional) DM	25-Oct-1982
CMOD	MPJUN replaced by MPTYPE		 DM	19-Oct-1982
CMOD	If arg isn't 0 always include new point	 DM	30-Sep-1982
C	Created (after original by MCF)		 DM	23-Sep-1982
C
C Flush the backlog buffer, producing a new master point.
C
**	IF VAX
	IMPLICIT NONE
**	ENDC
C
***	PARAMETER/PARAMS/
C
	LOGICAL*1 FORCED	! include this point regardless ?
C
***	COMMON/BLG/
***	COMMON/MPAUX/
***	COMMON/MPEP/
***	COMMON/TRKSEG/
C
C ......................................................................
C
C ... anything to do ?
	IF (INDEX(1).LE.0) GO TO 40
C
C ... master point buffer full ?
	IF (NMP(1).LT.MAXMP) GO TO 10
	CALL WRITEF('%CMaster point buffer overflow%C',7,7)
	NMP(1)=1
C
C ... is potential master point too near the previous master point ?
10	IF (FITLEN.GT.E(1)) GO TO 20
	IF (FORCED) GO TO 20
	IF (SEGJUN.GT.0) GO TO 20
	IF (MPTYPE(NMP(1)).NE.0) GO TO 30
	MP1(X,NMP(1))=MP1(X,NMP(1)) + FITPMP(X)/2  ! yes - merge the two
	MP1(Y,NMP(1))=MP1(Y,NMP(1)) + FITPMP(Y)/2
	GO TO 30
C
20	MP1(X,NMP(1)+1)=MP1(X,NMP(1)) + FITPMP(X)  ! no - create new pnt
	MP1(Y,NMP(1)+1)=MP1(Y,NMP(1)) + FITPMP(Y)
	NMP(1)=NMP(1) + 1
	MPTYPE(NMP(1))=0	! clear type flag
C
30	INDEX(1)=0		! no backlog now
40	RETURN
	END
