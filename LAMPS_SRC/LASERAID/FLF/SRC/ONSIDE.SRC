C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1986-11-25 14:44:40.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL*4 FUNCTION ONSIDE
C
***	MODULE	ONSIDE
***	IDENT	25NO86
C
C Copyright Laser-Scan Laboratories Limited, Cambridge, England.
C
C Author: D. Meader
C
CMOD	Rehashed				 DM	25-Nov-1986
CMOD	Returns .FALSE. by default		 DM	21-Mar-1986
C	Created 				 DM	06-Apr-1983
C
C Looks at the penultimate and the first two points in a feature which
C we are about to close, and tries to decide whether we started on a
C side or a vertex (i.e. whether the last point can be discarded).
C
**	IF VAX
	IMPLICIT NONE
**	ENDC
C
***	PARAMETER/PARAMS/
C
***	COMMON/MPEP/
C
	REAL	  DX2NM1,DY2NM1	! vector (2)-----(NMP-1)
	REAL	  MG2NM1	! magnitude of vector (2)-----(NMP-1)
C
C ......................................................................
C
	ONSIDE=.FALSE.
	IF (NMP(1).LT.4) GO TO 10
C
C ... get the vector (2)-----(NMP-1).
	DX2NM1=MP1(X,NMP(1)-1) - MP1(X,2)
	DY2NM1=MP1(Y,NMP(1)-1) - MP1(Y,2)
	MG2NM1=SQRT(DX2NM1*DX2NM1 + DY2NM1*DY2NM1)
	IF (MG2NM1.LE.0.5) GO TO 10
C
C ... work out the perpendicular distance of (1) from (2)-----(NMP-1).
C ... compare it with H.
	IF (ABS((MP1(X,1)-MP1(X,2))*DY2NM1 - DX2NM1*(MP1(Y,1)-MP1(Y,2)))
     &	    /MG2NM1 .LE. H(1)) ONSIDE=.TRUE.
C
10	RETURN
	END	
