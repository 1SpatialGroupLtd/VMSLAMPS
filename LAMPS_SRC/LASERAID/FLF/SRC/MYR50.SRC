	INTEGER*4 FUNCTION MYR50
C
***	MODULE	MYR50
***	IDENT	03NO82
C
**	IF VAX
	  IMPLICIT NONE
**	ENDC
C
C Copyright Laser Scan Laboratories Ltd., Cambridge, England
C Author: Susan Manning, from original by R. Fairbairns
C
C	T E X T C changed			AJW	 1-Jul-1981
C	Argument PTR removed, and
C	Use of TXTPTR and DCPTR corrected	AJW	26-Feb-1981
C	Tidied					AJW	22-Jan-1981
C	R502 equ R50 to avoid integer overflow	AJW	 8-Dec-1980
C	Use of DCPTR corrected (Ha ha !)	MCF	15-Oct-1980
C	R50 made into long integer		MCF	13-Oct-1980
C
C
C Read Radix-50 command name (or whatever) from the buffer TXTBUF
C starting at DCPTR
C
***	COMMON/TXTC/
C
C workspace:
	BYTE      CHAR,TAB,SP,LA,LZ,UPA,UPZ
	INTEGER   NUM
	INTEGER*4 R50
	INTEGER*2 R502
	INTEGER*2 I
C
	EQUIVALENCE (R50,R502)
C
C block data:
	DATA	SP,LA,LZ,UPA,UPZ/' ','a','z','A','Z'/
	TAB = 9
	NUM = 0		! no of characters converted
	R50 = 0		! accumulator for RAD50 chars
C
C
C Skip leading spaces and tabs
10	IF (DCPTR .GT. TXTPTR) GOTO 80		! got to end
	  CHAR = TXTBUF(DCPTR)
	  DCPTR = DCPTR+1
	  IF (CHAR  .EQ. SP .OR. CHAR .EQ. TAB) GOTO 10
C
C Accumulate RAD50 letters
	DO 20 I=1,3
	  IF (CHAR .GE. LA .AND. CHAR .LE. LZ) CHAR=CHAR+(UPA-LA)
	  IF (CHAR .LT. UPA .OR. CHAR .GT. UPZ) GOTO 50	! not a letter
	  R50   = R50*40+(CHAR-UPA+1)		! accumulate
	  NUM   = NUM+1
	  IF (DCPTR .GT. TXTPTR) GOTO 60	! got to end
	  CHAR  = TXTBUF(DCPTR)			! next char
	  DCPTR = DCPTR+1
20	CONTINUE
C
C ignore letters at end
30	IF ((CHAR .LT.  LA .OR. CHAR .GT. LZ) .AND.
     &      (CHAR .LT. UPA .OR. CHAR .GT. UPZ)) GOTO 40 ! not letter
	IF (DCPTR .GT. TXTPTR) GOTO 80		! got to end
	CHAR = TXTBUF(DCPTR)			! next char
	DCPTR = DCPTR+1
	GOTO 30
C "Not a letter" exit, so point DCPTR to offending char
40	DCPTR=DCPTR-1
	GOTO 80
C
C tidy up before returning
50	DCPTR=DCPTR-1		! not a letter again
60	IF (NUM .EQ. 3) GOTO 80
	DO 70 I=NUM,2
	  R50 = R50*40		! move result up to position
70	CONTINUE
C
80	MYR50 = R502		! return function result
	RETURN
C
	END
