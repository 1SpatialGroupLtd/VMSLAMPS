C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1986-06-11 15:55:56.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE FUMBLE
C
***	MODULE	FUMBLE
***	IDENT	11JN86
C
C Copyright Laser-Scan Laboratories Limited, Cambridge, England.
C
CMOD	Sets up CHNSEL for NEWVEC		 DM	11-Jun-1986
CMOD	Only call CSRD if HADLDI		 DM	30-May-1986
CMOD	Restores JNCING; tidied some more	 DM	21-Nov-1985
CMOD	ADDASS now only has two arguments	 DM	30-Aug-1985
CMOD	Use ANALYZ rather than GROW; tidied	 DM	22-Aug-1985
CMOD	... or EDGING				AJW	05-Apr-1982
CMOD	Call to grow doesn't have CHLIM ...	AJW	02-Apr-1982
CMOD	New GROW implemented (RGROW removed)	WJJ	22-Dec-1981
CMOD	MOVETO changed to MOVTO			AJW	20-May-1981
CMOD	J => I in "Choose start point of chain"
CMOD	The J was previously never set up	AJW	28-Jan-1981
CMOD	Tidied					AJW	27-Jan-1981
C	Created					MCF/PGH	22-May-1978
C
C Fumble around in the dark for a line on which to start.
C
**	IF VAX
	IMPLICIT NONE
**	ENDC
C
	PARAMETER MAXTRY=30
C
***	PARAMETER/PARAMS/
C
***	COMMON/ANACOM/
***	COMMON/DIGC/
***	COMMON/LINKS/
***	COMMON/LKFOLL/
***	COMMON/LKPARM/
***	COMMON/MASTER/
***	COMMON/RSE/
***	COMMON/SCCORR/
***	COMMON/SCPARM/
C
C w/s:
	INTEGER   FSTCON
	INTEGER   I,L,N
	INTEGER   NTRY
	LOGICAL*1 GOTCHN
	LOGICAL*1 JNCSAV	! saved value of JNCING
	REAL      C(2)
	REAL      WID
C
C ......................................................................
C
	JNCSAV=JNCING
	JNCING=.FALSE.		! just in case
	FSTCON=1
	BSTCON=0
	DO 10 I=1,MAXCON
	  NXTBST(I)=0
10	CONTINUE
	IF (HADLDI) CALL CSRD(C(X),C(Y))
	GOTCHN=.FALSE.
C
C do first try with default type
	ELF=-1			! enable automatic setting of ELF
	CALL PARIO(4,LTYPE)
	IF (ELF.LT.0) ELF=IMOD.XOR.1
C
C try several times going upwards
	DO 40 NTRY=1,MAXTRY
C
C scan in both directions
	  DO 30 L=1,2
	    IU=L
	    IV=3 - IU
	    IDIR=2 - IU
	    WID=IWID*CR(IV)*WAR
	    ID(IV)=0
	    ID(IU)=WID
	    CALL DISMOD(0)
	    START(IU)=C(IU) - WID/2.0
	    START(IV)=C(IV)
	    CALL MOVTO(START(X),START(Y))
C
C now set up and do scan
	    CALL SCANBY(ID(X),ID(Y),1)
	    NEGOT=0
	    RSEOFF(X)=0
	    RSEOFF(Y)=0
	    CALL SCSET(0)
C
C analyse the result
	    CALL ANALYZ
	    IF (ANLYZD.LT.0) GO TO 50
C
C convert to lists
	    CALL CHNLST
C
C examine chains
	    DO 20 I=1,MAXCHN
	      IF (CHAIN(I).EQ.0) GO TO 20
	      IF (LENGTH(I).LE.LIMIT(5)) GO TO 20
	      QUALTY(FSTCON)=LENGTH(I)*IPIT*WGHT(1)
	      CONNCT(1,FSTCON)=0
	      CONNCT(2,FSTCON)=I
	      CONNCT(3,FSTCON)=1	! choose start point of chain
	      IF (ENCBUF(L,NODE(FIRST(I))).LE.
     &            INT(WID-FLOAT(ENCBUF(L,NODE(LAST(I))))))
     &           CONNCT(3,FSTCON)=2
	      CONNCT(4,FSTCON)=4
	      N=1
	      CALL ADDASS(FSTCON,N)
	      GOTCHN=.TRUE.
20	    CONTINUE
	    IF (GOTCHN) GO TO 50
30	  CONTINUE			! end loop for two scans
C
	  CALL FBRD(N)
	  IF (N.EQ.16) GO TO 50
	  IF (NTRY.EQ.1) THEN		! widen scan area
	    I=ELF			! preserve ELF setting
	    CALL PARIO(4,PTYPE)
	    ELF=I
	  ENDIF
	  IF (NTRY.GT.1) C(Y)=C(Y)+WID	! go upwards by one scan width
40	CONTINUE
C
C put us at position found.
50	CALL CSWT(START(X),START(Y))
	NEXT(X)=START(X)		! set up next scan
	NEXT(Y)=START(Y)
	CALL PARIO(4,LTYPE)		! set type back to line default
	SCAN=.FALSE.			! set up assessment of situation
	CNFSED=FSTCON.GT.2
	VERY=BSTCON.LE.0
	LOST=VERY
	NOTAPP=.FALSE.
	SCNND=.TRUE.			! set up context for LINK ...
	GROWN=.TRUE.
	LISTED=.TRUE.
	FORKED=.FALSE.
	ASSED=.TRUE.
	FRKCOM=1			! and a command number
	IF (VERY.OR.CNFSED) FRKCOM=7
	CHNSEL=BSTCON			! select the chain (if any)
	JNCING=JNCSAV			! restore JNCING
	RETURN
	END
