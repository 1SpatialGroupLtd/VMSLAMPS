C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1986-06-13 12:16:12.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE ICHNIN(ST,ID)
C
***	MODULE	ICHNIN
***	IDENT	13JN86
C
C Copyright Laser-scan Laboratories Limited, Cambridge, England.
C
CMOD	Don't grow chains from 1st scan in 2nd	 DM	13-Jun-1986
CMOD	Tidied					 DM	03-Jun-1986
CMOD	Calls GROW, not EDGROW			AJW	09-Jun-1982
CMOD	Tidies done				AJW/DM	07-Jan-1981
C	Created					MCF	26-Apr-1979
C
C Scan in both directions, chaining the results.
C
**	IF VAX
	IMPLICIT NONE
**	ENDC
C
C parameters:
***	PARAMETER/PARAMS/
C
C arguments:
	REAL      ST(2)		! centre of scanned area
	INTEGER   ID(2)		! scan vector
C
C common blocks:
***	COMMON/LINKS/
***	COMMON/RSE/
***	COMMON/SCPARM/
C
C workspace:
	INTEGER I,J,K		! temporary variables
	INTEGER IU,IV		! directions
C
C ......................................................................
C
	CALL DISMOD(0)
	CALL SETCHN				! to clear chain arrays
C
C now scan twice.
	NEGOT=0
	DO 20 IU=1,2				! (X,Y)
	   IV=3 - IU				! (Y,X)
	   IDIR=IV - 1				! (1,0)
	   RSEOFF(X)=ID(IU)/2			! (X,Y)
	   RSEOFF(Y)=ID(IV)/2			! (Y,X)
	   CALL MOVTO(ST(X)-RSEOFF(X),ST(Y)-RSEOFF(Y))
	   CALL SCANBY(ID(IU),ID(IV),1)		! (X,Y),(Y,X)
	   CALL SCSET(0)
	   NEOLD=ABS(NEGOT)
	   NEGOT=-NEOLD
	   CALL GROW(IU,IV)
	   IF (IU.EQ.2) GO TO 30		! finished
C
C first scan done - save chains at top of list then forget about them.
	   I=0
	   J=MAXCHN
10	   I=I + 1
	      IF (I.GT.J) GO TO 20
	      K=CHAIN(I)
	      IF (K.EQ.0) GO TO 10
	      CHAIN(I)=0
	      CHAIN(J)=K			! beware of I=J case
	      K=LENGTH(I)
	      LENGTH(I)=0
	      LENGTH(J)=K
	      CHNSNS(J)=CHNSNS(I)
	      ACTCHN(I)=.FALSE.			! don't grow I any more
	      ACTCHN(J)=.FALSE.			! (just in case)
	      J=J - 1
	   GO TO 10
20	CONTINUE
C
30	RETURN
	END
