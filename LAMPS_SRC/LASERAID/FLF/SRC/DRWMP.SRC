	SUBROUTINE DRWMP(IU,IV,ID,ST)
C
***	MODULE	DRWMP
***	IDENT	09AP86
C
C Copyright Laser-Scan Laboratories Limited, Cambridge, England.
C
CMOD	Draw junction points in different colour DM	09-Apr-1986
CMOD	Colour added				 DM	06-Sep-1985
CMOD	Tidied					AJW	12-Feb-1981
C	Created					PGH	26-Oct-1977
C
**	IF VAX
	IMPLICIT NONE
**	ENDC
C
C common blocks:
***	PARAMETER/PARAMS/
***	COMMON/BLG/
***	COMMON/MPEP/
***	COMMON/SCCORR/
***	COMMON/SCPARM/
C
C arguments:
	INTEGER   IU,IV
	INTEGER   ID(2)
	REAL      ST(2)       ! start of vector
C
C workspace:
	REAL      D(2),P(2)
	INTEGER   I
	INTEGER   IX,IY
	REAL      Z
	REAL      VW
C
C ......................................................................
C
	IF (NMP(1).LE.0) GO TO 30
	VW=IWID*WAR*CR(IV)
C
	DO 10 I=1,NMP(1)
	   D(X)=MP1(X,I) - ST(X)
	   D(Y)=MP1(Y,I) - ST(Y)
	   Z=D(IU)/ID(IU)
	   IF ((Z.LT.-0.1).OR.(Z.GT.1.1)) GO TO 10   ! not in scan (IU)
	   IF (ABS(D(IV) - Z*ID(IV)).GT.VW) GO TO 10 ! ditto IV
	   IF (MPTYPE(I).GT.0) THEN
	      CALL TXCOL(7)			     ! junction
	   ELSE
	      CALL TXCOL(5)			     ! ordinary point
	   ENDIF
	   IX=D(X)
	   IY=D(Y)
	   CALL DRWX(IX,IY,6)
10	CONTINUE
C
C and now for backlogged points
	IF (INDEX(1).LE.0) GO TO 30
	CALL TXCOL(5)
	P(X)=MP1(X,NMP(1)) - ST(X)
	P(Y)=MP1(Y,NMP(1)) - ST(Y)
	DO 20 I=1,INDEX(1)
	   D(X)=P(X) + XBLG(1,I)
	   D(Y)=P(Y) + YBLG(1,I)
	   Z=D(IU)/ID(IU)
	   IF ((Z.LT.-0.1).OR.(Z.GT.1.1)) GO TO 20   ! not in scan (IU)
	   IF (ABS(D(IV) - Z*ID(IV)).GT.VW) GO TO 20 ! ditto IV
	   IX=D(X)
	   IY=D(Y)
	   CALL DRWX(IX,IY,4)
20	CONTINUE
C
30	CALL TXCOL(1)
	CALL TXEND
	RETURN
	END
C
	SUBROUTINE DRWX(IX,IY,IS)
C
***	MODULE	DRWX
***	IDENT	09AP86
C
C Copyright Laser-Scan Laboratories Limited, Cambridge, England.
C
CMOD	Copyright notice added; tidied		 DM	09-Apr-1986
C
C Draw cross (X) at position IX,IY on Tektronix.
C
**	IF VAX
	IMPLICIT NONE
**	ENDC
C
C arguments:
	INTEGER IX,IY,IS
C
C ......................................................................
C
	CALL TXMTO(IX-IS,IY+IS)
	CALL TXLTO(IX+IS,IY-IS)
	CALL TXMTO(IX+IS,IY+IS)
	CALL TXLTO(IX-IS,IY-IS)
	CALL TXMTO(IX,IY)
	RETURN
	END
