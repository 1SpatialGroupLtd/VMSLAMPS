C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1986-05-28 18:39:16.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	INTEGER*4 FUNCTION RDCOMM(ARR,NOMSG)
C
***	MODULE	RDCOMM
***	IDENT	28MY86
C
C Copyright Laser-Scan Laboratories Limited, Cambridge, England.
C
CMOD	"Cancel all timers" err fixed; converged DM	28-Jan-1986
CMOD	Command table PNTCM added		 DM	11-Oct-1985
CMOD	Command table MEASCM added		 DM	17-Sep-1985
CMOD	FBTYPE second argument is %LOC of table	 DM	16-Sep-1985
CMOD	Read integers into LONGAR in /MASTER/	 DM	27-Feb-1984
CMOD	Doesn't read integers twice		 DM	19-Sep-1983
CMOD	Doesn't produce integer overflow if
CMOD	given a large number from corner	AJW	28-Apr-1983
CMOD	sets priority to WPRIO while waiting	AJW	05-Apr-1983
CMOD	INCLUDE of SSDEF removed		AJW	01-Oct-1982
CMOD	OPTIONS line added			AJW	23-Aug-1982
CMOD	DCPTR=.+1 after "Don't understand" err	AJW	03-Jun-1982
CMOD	ARR(*) => ARR(1) for compat with PDP	AJW	22-Jan-1982
CMOD	NOMSG added - if .TRUE. do not produce
CMOD	"Unexpected XXX" error message		AJW	12-Nov-1981
CMOD	LOC added to MODE			AJW	11-Nov-1981
CMOD	recognises "+", "-" as numbers		AJW	30-Jul-1981
CMOD	PDP version uses EFNETC			AJW	 6-Jul-1981
CMOD	T E X T C changed			AJW	 1-Jul-1981
CMOD	LNKCM,YNOCM,CHKCM,CORCM,LOCCM INTEGER	AJW	12-Jun-1981
CMOD	?? recognises LOCCM			AJW	21-MAY-1981
CMOD	MSGF changed to WRITEF			AJW	 8-May-1981
CMOD	command table stuff (NMN, ARG etc.) tidied
CMOD	and C** description added		AJW	 5-May-1981
CMOD	MYR50 argument removed			AJW	26-Feb-1981
CMOD	VAX ?? facility fixed and extended	AJW	15-Dec-1980
CMOD	Use of HADLDI				MCF	22-Oct-1980
CMOD	VAX specials			  SCM & MCF	   Oct-1980
CMOD	? ? facility added to query stuff	AJW	   Jul-1980
CMOD	Query facility extended			MCF	   Jul-1980
CMOD	Queued commands added			MCF	   Jan-1979
CMOD	Query facility				MCF	   Mar-1978
CMOD	Rehashed for MPS LASERAID		PGH	   Sep-1976
CMOD	Coded and typed				RF	18-Mar-1976
C
C Reads a command from the keyboard or function buttons, or returns a
C "queued" command.
C
**	IF VAX
	IMPLICIT NONE
**	ENDC
C
C parameters:
***	PARAMETER/PARAMS/
C
C arguments:
	INTEGER   ARR(1)	! array of 'coded' command names
	LOGICAL*1 NOMSG		! do not produce error message
C
C common blocks:
***	COMMON/EFNETC/
***	COMMON/MAINC/
***	COMMON/MASTER/
***	COMMON/TXTC/
C
C workspace:
	BYTE      CTRLB(2)
	INTEGER   CWD
	INTEGER   CTRL
	INTEGER*2 DOLLS		! $$$
	INTEGER   IDS
	INTEGER   III
	INTEGER   II1,II2,II3
	INTEGER	  LNKCM,YNOCM,CHKCM,CORCM,LOCCM,MEASCM,PNTCM
	INTEGER*2 MODE(8)	! RAD50 of the mode we're in
	INTEGER   NRELS,NINTS
	INTEGER   PTR
	INTEGER   TOLD
	INTEGER*4 DELTIM(2)	! time difference
	LOGICAL*1 WAIT
	REAL      TX,TY
C
	EXTERNAL LNKCM,YNOCM,CHKCM,CORCM,LOCCM,MEASCM,PNTCM
C
	EQUIVALENCE (CTRL,CTRLB)
C
C functions called:
	INTEGER MYR50
	INTEGER NEWTIM
	LOGICAL RDREAL,RDLONG
C
C data:
	DATA MODE /3RMAI,3RLNK,3RYNO,3RCHK,3RCOR,3RLOC,3RMEA,3RPNT/
	DATA DOLLS/3R$$$/
C
C ......................................................................
C
C queued command wanted ?
	IF (QUECOM.LE.0) GO TO 10
C
C set up mark time for queued command.
	CALL SYS$CANTIM(%VAL(MRKEFN),)		! remove outstanding one
C
C express delay in delta time.
	DELTIM(1)=(QUETIM*0.01)*TKPERS
	DELTIM(2)=-1
	CALL SYS$SETIMR(%VAL(MRKEFN),DELTIM(1),,%VAL(MRKEFN))
C
C clear EFNs, Refresh picture and wait for event.
10	WAIT=.FALSE.
C
C if more chars to decode, don't wait.
	IF (DCPTR.LE.TXTPTR) GO TO 30
	WAIT=.TRUE.
	CALL REFRSH
C
20	TOLD=NEWTIM(TIDLE)  			! time the idle state
	CALL SYS$SETPRI(,,%VAL(WPRIO),)
	CALL WFLOR(LDEFN,TTIEFN,MRKEFN)
	CALL SYS$SETPRI(,,%VAL(FPRIO),)
	CALL CLREF(LDEFN)
	TOLD=NEWTIM(TOLD)
C
30	INTARG=0
	NUMINT=0
	NUMREL=0
C
C queued command come up ?
	CALL READEF(MRKEFN, IDS)
	IF (IDS.EQ.2) GO TO 160
C
C anything from FBs ?
	CALL FBRD(II1)
	RDCOMM=II1
	IF (RDCOMM.NE.0) GO TO 230
C
C if no chars left then get some more with a READ.
	IF (DCPTR.GT.TXTPTR) CALL READ
C
C lose leading spaces.
	DCPTR=DCPTR - 1
40	DCPTR=DCPTR + 1
	IF  (DCPTR.GT.TXTPTR) GO TO 140
	IF  (TXTBUF(DCPTR).EQ.' ') GO TO 40
	IF  (TXTBUF(DCPTR).EQ.'?') GO TO 60
	IF ((TXTBUF(DCPTR).GE.'0'.AND.
     &       TXTBUF(DCPTR).LE.'9').OR.
     &       TXTBUF(DCPTR).EQ.'+'.OR.
     &       TXTBUF(DCPTR).EQ.'-') GO TO 170
C
C else convert to RAD50.
	CWD=MYR50()
	IF (CWD.NE.0) GO TO 100
C
C syntax error.
50	TXTBUF(TXTPTR+1)=0
	CALL WRITEF('Don''t understand "%A20"',TXTBUF(DCPTR))
	DCPTR=DCPTR + 1				! skip past duff char
	GO TO 220
C
C '?' - type out FB meanings or provide help.
60	DCPTR=DCPTR + 1				! accept the '?'
	CWD=MYR50()
C
	IF (CWD.NE.0) GO TO 70
C
C no mnemonic - was it "? ?" ?
	IF (TXTBUF(DCPTR).NE.'?') GO TO 90	! no
C
C yes - set $$$ which LTH should understand.
	CWD=DOLLS
C
C help facility - find out what mode we're in, using the address of the
C command table we were given.
70	III=0
	IF (%LOC(ARR).EQ.%LOC(MAINCM)) III=1
	IF (%LOC(ARR).EQ.%LOC(LNKCM))  III=2
	IF (%LOC(ARR).EQ.%LOC(YNOCM)) III=3
	IF (%LOC(ARR).EQ.%LOC(CHKCM)) III=4
	IF (%LOC(ARR).EQ.%LOC(CORCM)) III=5
	IF (%LOC(ARR).EQ.%LOC(LOCCM)) III=6
	IF (%LOC(ARR).EQ.%LOC(MEASCM)) III=7
	IF (%LOC(ARR).EQ.%LOC(PNTCM)) III=8
C
	IF (III.NE.0) GO TO 80
	CALL WRITEF('Don''t recognise mode')
	GO TO 40
C
80	CALL LTH('LSL$FLFHLP',CWD,MODE(III))
C
C LTH tramples over TXTBUF, so clear the pointers.
	DCPTR=-1
	TXTPTR=-2
	GO TO 40
C
C type out command table & mode with FBTYPE.
90	CALL FBTYPE(ARR,%LOC(ARR))
	GO TO 40
C
C	command table looks like:
C
C			!-----------------------!
C	CTRL:CTRLB(1)	!   number of synonyms  !
C			!-----------------------!
C	     CTRLB(2)	! number of ! number of !
C			! real args ! int args  !
C			!-----------------------!
C			! RAD50 command synonym !
C			!-----------------------!
C			!          ...          !
C			!-----------------------!
C			! RAD50 command synonym !
C			!-----------------------!
C
C	the table is terminated by 0 in "number of synonyms"
C
C look up RAD50 "coded" commands in command table.
100	PTR=0
	RDCOMM=0
110	PTR=PTR + 1
	   RDCOMM=RDCOMM + 1
	   CTRL=ARR(PTR)
	   II1=CTRLB(1)
	   IF (II1.LE.0) GO TO 130		! end of table
	   DO 120 III=1,II1
	      PTR=PTR + 1
	      IF (CWD.EQ.ARR(PTR)) GO TO 180
120	   CONTINUE
	GO TO 110	! no match with any mnemonic for this command
C
C unknown mnemonic.
130	IF (.NOT.NOMSG) CALL WRITEF('Unexpected "%RZ"',CWD)
	GO TO 220
C
C failed because of end of line or timeout on read.
140	IF (TXTPTR.NE.-3) GO TO 150
	CALL WRITEF('Please type faster')
	CALL READ
150	DCPTR=-1
	TXTPTR=-2
	IF (.NOT.WAIT.OR..NOT.HADLDI) GO TO 220
	CALL CSAJST(TX,TY)  		! update cursor position
	CALL LDINPM(1,II1,II2,II3)
	IF (II3.EQ.1) GO TO 20    	! refresh picture hasn't changed
	GO TO 220
C
C queued command sprung.
160	CALL CLREF(MRKEFN)
	IF (QUECOM.LE.0) GO TO 10	! nowt to do
	RDCOMM=QUECOM			! return queued command
	GO TO 230
C
C read integer command - check that it isn't too big.
170	IF (RDLONG(LONGA1)) GO TO 50
	IF (LONGA1.LE.32767.AND.LONGA1.GE.-32768) INTARG=LONGA1
	RDCOMM=-1
	GO TO 230
C
C found a 'coded' command.
180	II1=CTRLB(2)
	NRELS=(II1/8).AND.7
	NINTS= II1   .AND.7
C
C read integer arguments for this command, if any.
	IF (NINTS.LE.0) GO TO 200
	DO 190 III=1,NINTS
	   IF (RDLONG(LONGAR(III))) GO TO 200
	   NUMINT=NUMINT + 1
	   IF (LONGAR(III).LE.32767.AND.LONGAR(III).GE.-32768)
     &	       INTAR(III)=LONGAR(III)
190	CONTINUE
C
C read real arguments for this command, if any.
200	IF (NRELS.LE.0) GO TO 230
	DO 210 III=1,NRELS
	   IF (RDREAL(REALAR(III))) GO TO 230
	   NUMREL=NUMREL + 1
210	CONTINUE
	GO TO 230
C
C failure exit.
220	RDCOMM=0
C
230	IF (RDCOMM.NE.0) QUECOM=0  ! we don't want queued command now
	RETURN
	END
