C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1986-05-30 17:00:56.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL*4 FUNCTION GETWIN(WINDOW)
C
***	MODULE	GETWIN
***	IDENT	30MY86
C
C Copyright Laser-Scan Laboratories Limited, Cambridge, England.
C
CMOD	Only call CSRD if HADLDI; tidied	 DM	30-May-1986
CMOD	T E X T C changed			AJW	 1-Jul-1981
CMOD	NULLCM INTEGER as well as EXTERNAL	AJW	12-Jun-1981
CMOD	Tidied					AJW	29-May-1981
CMOD	Common block /NULLC/ removed		AJW	 1-Aug-1980
C	Created					MCF	12-Jun-1979
C
C Obtain a window definition.
C	FB1	- reset lower left corner
C	FB4	- accept window
C	FB16	- reject window
C Result is "FB16 pressed"
C
**	IF VAX
	IMPLICIT NONE
**	ENDC
C
C parameters:
***	PARAMETER/PARAMS/
C
C argument:
	REAL WINDOW(2,2)	! the window, subscripts are axis
C				  and end.
C common blocks:
***	COMMON/MASTER/
***	COMMON/TXTC/		! for command decoding
C
C workspace:
	INTEGER CWD		! command
C
C function:
	INTEGER RDCOMM		! command fetcher
C
C command table:
	INTEGER  NULLCM
	EXTERNAL NULLCM
C
C ......................................................................
C
	GETWIN=.TRUE.		! assume failure
C
C set lower left corner
10	IF (HADLDI) CALL CSRD(WINDOW(X,1),WINDOW(Y,1))
	WINDOW(X,2)=WINDOW(X,1)	! and set upper right to it
	WINDOW(Y,2)=WINDOW(Y,1)
C
C refresh loop
20	CALL DISMOD(1)
	CALL MOVTO(WINDOW(X,1),WINDOW(Y,1))
	CALL LINTO(WINDOW(X,1),WINDOW(Y,2))
	CALL LINTO(WINDOW(X,2),WINDOW(Y,2))
	CALL CURSOR
	CALL LINTO(WINDOW(X,2),WINDOW(Y,1))
	CALL LINTO(WINDOW(X,1),WINDOW(Y,1))
	CALL FBWT16("100011)
	DCPTR=-1
	TXTPTR=-2
	CWD=RDCOMM(NULLCM,.FALSE.)
	GO TO (10,30,30,40,
     &         30,30,30,30,
     &         30,30,30,30,
     &         30,30,30,50),CWD
C
C set upper left
30	IF (HADLDI) CALL CSRD(WINDOW(X,2),WINDOW(Y,2))
	IF (WINDOW(X,2).LT.WINDOW(X,1) .OR.
     &      WINDOW(Y,2).LT.WINDOW(Y,1)) GO TO 10
	GO TO 20
C
C FB4
40	GETWIN=.FALSE.
C
C FB16 joins
50	RETURN
	END
