C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1988-11-24 16:23:54.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL*4 FUNCTION READ_POINTS
C
***	MODULE	READ_POINTS
***	IDENT	24NO88
C
C	Copyright : Laser-Scan Laboratories Ltd., Cambridge, England
C	Original author: 			DJG	22-Apr-1988
CMOD	Rewritten to LSL standards: 		ACM	21-Nov-1988
C
	IMPLICIT NONE
C
C Parameters
***	PARAMETER/LSL$CMNLSL:LSLLIBMSG/
***	PARAMETER/LSL$CMNTRANSP:TRANSPMSG/
C
C Commons
***	COMMON/LSL$CMNLSL:CMDCOM/
***	COMMON/LSL$CMNTRANSP:TRANSP/
C
C Workspace
	INTEGER*4	I,IERR
	REAL*8		TEMPIC(2)	! temporary image coords.
	REAL*8		TEMPGC(3)	! temporary ground coords.
	CHARACTER*80	STRING	 	! internal file read string
	CHARACTER*40	ICFILE1		! input image coord file
	CHARACTER*10	TEMPID		! temporary image point ID
	CHARACTER*10	TCID		! temporary ground point ID
	CHARACTER*2	FLAG		! point type flag
	CHARACTER*2	SPACE		! 2 ASCII spaces
	LOGICAL*4	FINISH		! finished reading image file?
	LOGICAL*4	FOUND1		! point found in the file
	LOGICAL*4	OK		! ok?
C
C Functions
	LOGICAL*4	FLROPN,FLRCLO,FLRLIN,RDCHS,RDDBLE,READSTR
	LOGICAL*4	READ_RCP_FILE
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
C	Reads image and ground control point data in the standard
C	LSL RCP format.
C
C	After RCPs which do not have matching identifiers have
C	been removed, each remaining RCP has a flag set in IMAGEC(3,*)
C	deciding whether or not it is to be used in calculating the
C	transformation coefficients (0 = use, 1 = don't use).
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
	READ_POINTS = .FALSE.		! assume failure
C
	NOP = 0
	FINISH = .FALSE.
C
C Check given GROUND and IMAGE files exist
C
	GND_OPN = FLROPN(GND_LUN,GND_NAM(:GND_LEN),IERR)
	IF (.NOT.GND_OPN) THEN
	  CALL LSL_PUTMSG(TRANSP__GNDOPN,GND_NAM(:GND_LEN))
	  GOTO 999
	END IF
	CALL FLRCLO(GND_LUN)
	CALL LSL_PUTMSG(TRANSP__GNDNAM,GND_NAM(:GND_LEN))
C
	IMG_OPN = FLROPN(IMG_LUN,IMG_NAM(:IMG_LEN),IERR)
	IF (.NOT.IMG_OPN) THEN
	  CALL LSL_PUTMSG(TRANSP__IMGOPN,IMG_NAM(:IMG_LEN))
	  GOTO 999
	END IF
	CALL FLRCLO(IMG_LUN)
	CALL LSL_PUTMSG(TRANSP__IMGNAM,IMG_NAM(:IMG_LEN))
C
C Read GrouND RCP file
C
	OK = READ_RCP_FILE(
     &		GND_LUN,GND_NAM,GND_LEN,
     &		GND_ID,GND_TYPE,GROUND,GND_WGT,
     &		GND_N_RCPS,MAXRCPS,
     &		N_COMMENTS,MAXCOMMENTS,
     &		COMMENT,COMMENT_LEN,INDX,.FALSE.,IERR)
	IF (.NOT.OK) THEN
	  CALL LSL_PUTMSG(TRANSP__RCPREAD,IERR,GND_NAM(:GND_LEN))
	  GOTO 999
	END IF
C
C Read IMaGe RCP file
C
	OK = READ_RCP_FILE(
     &		IMG_LUN,IMG_NAM,IMG_LEN,
     &		IMG_ID,IMG_TYPE,IMAGEC,IMG_WGT,
     &		IMG_N_RCPS,MAXRCPS,
     &		N_COMMENTS,MAXCOMMENTS,
     &		COMMENT,COMMENT_LEN,INDX,.FALSE.,IERR)
	IF (.NOT.OK) THEN
	  CALL LSL_PUTMSG(TRANSP__RCPREAD,IERR,IMG_NAM(:IMG_LEN))
	  GOTO 999
	END IF

C Get RCP pairs with matching identifiers
C
	CALL GET_RCP_PAIRS(WK1,WK2,
     &		GND_ID,GND_TYPE,GROUND,GND_WGT,GND_N_RCPS,
     &		IMG_ID,IMG_TYPE,IMAGEC,IMG_WGT,IMG_N_RCPS)
	IF (GND_N_RCPS.EQ.0) THEN
	  CALL LSL_PUTMSG(TRANSP__NOPAIRS)
	  GOTO 999
	ENDIF
C
	NOP = GND_N_RCPS
C
	DO 10 I = 1,NOP
	  IMAGEC(2,I) = IMAGEC(2,I) +
     &	 (DTAN(ANGLE-(TEMPIC(2)/39*0.035954D0))*GROUND(3,I)*0.0013D0)
	  IF (GND_TYPE(I).EQ.'DD') THEN
	    IMAGEC(3,I) = 1
	  ELSE
	    IMAGEC(3,I) = 0
	  END IF
10	CONTINUE
C
	READ_POINTS = .TRUE.
C
999	RETURN
	END


