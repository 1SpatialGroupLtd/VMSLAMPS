	SUBROUTINE SELECT_POINTS(EXITL,EXITP)
C
***	MODULE	SELECT_POINTS
***	IDENT	25NO88
C
C	Copyright : Laser-Scan Laboratories Ltd., Cambridge, England
C	Original author: 			DJG	22-Apr-1988
CMOD	Rewritten to LSL standards: 		ACM	21-Nov-1988
C
	IMPLICIT NONE
C
C Parameters
***	PARAMETER/LSL$CMNLSL:LSLLIBMSG/
***	PARAMETER/LSL$CMNTRANSP:TRANSPMSG/
C
C Commons
***	COMMON/LSL$CMNLSL:CMDCOM/
***	COMMON/LSL$CMNTRANSP:TRANSP/
C
C Workspace
	LOGICAL*4	EXITL		! exit loop flag
	LOGICAL*4	EXITP		! exit program flag
	LOGICAL*4	OK		! function return
	LOGICAL*4	EOL		! end of line?
	BYTE		CH		! character read by RDCHS
	INTEGER*4	IERR		! secondary return
	INTEGER*4	CMD		! command number from RDCOMM
	INTEGER*4	NUMBER		! point number
	INTEGER*4	I
C
C Functions
	INTEGER*4	RDCOMM		! read a command
	LOGICAL*4	TTRSTR		! prompt and read line
	LOGICAL*4	RDCHS	        ! read next non blnk chr
	LOGICAL*4	RDLONG	        ! read longword value
C
C Externals
	INTEGER*4	TRANSP_CMD_TABLE
	EXTERNAL	TRANSP_CMD_TABLE
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
C	This subroutine allows the user to leave out some of the
C	points from the computations. This is done by putting flags
C	into the image coordinates file to indicate that the points are
C	not to be used in the next computation of the result (or of
C	course, remove flags) 
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
	EXITP = .FALSE.
	EXITL = .FALSE.
C
C Ask the user which option is desired
C
10	OK = TTRSTR(,,'TRANSP> ',IERR)
	IF (.NOT.OK) GOTO 90		! ^Z = EXIT
	CALL BSLN			! pointer to begining of line
	EOL = RDCHS(CH)			! nothing on line?
	IF (EOL) GOTO 10		! try gain
	CALL BSCH			! unread first char read
	CMD = RDCOMM(TRANSP_CMD_TABLE)	! read the command
	IF (CMD.LE.0) GOTO 10		! ignore bad commands
C
	GOTO ( 20,	! ACCEPT
     &	       30,	! CHANGE
     &	       40,	! SHOW
     &	       50,	! RECALCULATE
     &	       60,	! HELP
     &	       90) CMD	! EXIT
	GOTO 10				! try again
C
C ACCEPT - accept current orientation
20	EXITL = .TRUE.
	GOTO 999
C
C CHANGE - change use/don't use flag
30	EXITL =.FALSE.
	IF (CMDICT.GE.1) THEN
	  NUMBER = INTARG(1)
	ELSE
35	  OK = TTRSTR(,,'Line number> ',IERR)
	  IF (.NOT.OK) GOTO 10		! abandon command on ^Z
	  CALL BSLN			! pointer to begining of line
	  EOL = RDCHS(CH)		! nothing on line?
	  IF (EOL) GOTO 35		! try gain
	  CALL BSCH()			! backspace
	  OK = .NOT.RDLONG(NUMBER)	! read val
	  IF (.NOT.OK) GOTO 35		! try again if necessary
	END IF
	CMDICT = 0
	IF (NUMBER.GT.NOP.OR.NUMBER.LE.0) GOTO 30
C
C The 3rd element in the image coord array is the use/don't use flag
C
	IF (IMAGEC(3,NUMBER).EQ.1) THEN
	  IMAGEC(3,NUMBER) = 0
	  NOUP = NOUP + 1
	ELSE
	  IMAGEC(3,NUMBER) = 1
	  NOUP = NOUP - 1
	END IF
C
	GOTO 10
C
C SHOW - show calculated tranformation coefficients and points selected
C
40	DO 45 I = 1,NOPARM
	  CALL WRITEF('%I3)    %F18.8',I,UNKNOWN(I))
45	CONTINUE
	NOUP = 0
	DO 48 I = 1,NOP
	  IF (IMAGEC(3,I).EQ.0) NOUP = NOUP + 1
48	CONTINUE
	IF (NOUP.LT.MINNOP(TRANSFORMATION))
     &	  CALL LSL_PUTMSG(TRANSP__TOOFEWCPS,NOUP,MINNOP(TRANSFORMATION))
	IF (HAD_LIST.OR.HAD_INTERACT) CALL SHOW_POINTS
	GOTO 10
C
C RECALCULATE - re-calculate the resection
50	EXITL = .FALSE.
	GOTO 999
C
C HELP command
60	CALL HELP
	GOTO 10
C
C EXIT
90	EXITP = .TRUE.
C
999	RETURN
	END
