C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1988-11-25 18:33:24.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE CALCULATE_RESIDUALS
C
***	MODULE	CALCULATE_RESIDUALS
***	IDENT	25NO88
C
C	Copyright : Laser-Scan Laboratories Ltd., Cambridge, England
C	Original author: 			DJG	22-Apr-1988
CMOD	Rewritten to LSL standards: 		ACM	22-Nov-1988
C
	IMPLICIT NONE
C
C Commons
***	COMMON/LSL$CMNTRANSP:TRANSP/
C
C Workspace
	REAL*8		X,Y,DX,DY	! X and Y and XY image residuals
	REAL*8		RSUM		! residual Sum
	REAL*8		RMSE		! root mean square error
	REAL*8		URSUM		! unused residual sum
C
	INTEGER*4	I
	INTEGER*4	POINTN		! point number
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
C	Calculates image residuals after orientation.
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
	IF (HAD_LIST) CALL FLWSEL(LST_LUN)
C
	IF (HAD_LIST) CALL FLWRTF
	IF (HAD_INTERACT) CALL WRITEF
	CALL EXPAND('Ground RCP          Residual X  Residual Y')
	IF (HAD_LIST) CALL FLWLIN
	IF (HAD_INTERACT) CALL TTWLIN
C
	NOUP = 0
	NOUUP = 0
	RSUM = 0
	URSUM = 0
C
C For each point,project the ground coordinate onto the image and
C compare with the known image coordinates 
C
	DO 10 POINTN = 1,NOP
C
	  IF (TRANSFORMATION.EQ.PROJECTIVE) THEN
C
	    X = (UNKNOWN(1) * IMAGEC(1,POINTN) +
     &	         UNKNOWN(2) * IMAGEC(2,POINTN) +
     &	         UNKNOWN(3)) /
     &		(UNKNOWN(7) * IMAGEC(1,POINTN) +
     &	         UNKNOWN(8) * IMAGEC(2,POINTN) + 1)
C
	    Y = (UNKNOWN(4) * IMAGEC(1,POINTN) +
     &	         UNKNOWN(5) * IMAGEC(2,POINTN) +
     &	         UNKNOWN(6)) /
     &	        (UNKNOWN(7) * IMAGEC(1,POINTN) +
     &	         UNKNOWN(8) * IMAGEC(2,POINTN) + 1)
C
	  ELSE IF (TRANSFORMATION.EQ.POLYNOMIAL) THEN
C
	    X = UNKNOWN(1) +
     &	        UNKNOWN(2) * IMAGEC(1,POINTN) +
     &	        UNKNOWN(3) * IMAGEC(2,POINTN) +
     &	        UNKNOWN(4) * IMAGEC(1,POINTN)**2 +
     &	        UNKNOWN(5) * IMAGEC(2,POINTN)**2 +
     &	        UNKNOWN(6) * IMAGEC(1,POINTN) * IMAGEC(2,POINTN)
C
	    Y = UNKNOWN(7) +
     &	        UNKNOWN(8) * IMAGEC(1,POINTN) +
     &	        UNKNOWN(9) * IMAGEC(2,POINTN) +
     &	        UNKNOWN(10) * IMAGEC(1,POINTN)**2 +
     &	        UNKNOWN(11) * IMAGEC(2,POINTN)**2 +
     &	        UNKNOWN(12) * IMAGEC(1,POINTN) * IMAGEC(2,POINTN)
C
	  ELSE
C
	    X = UNKNOWN(1) * IMAGEC(1,POINTN) +
     &	        UNKNOWN(2) * IMAGEC(2,POINTN) + UNKNOWN(5)
	    Y = UNKNOWN(3) * (-IMAGEC(1,POINTN)) +
     &	        UNKNOWN(4) * IMAGEC(2,POINTN) + UNKNOWN(6)
C
	  END IF
C
	  DX = GROUND(1,POINTN) - X
	  DY = GROUND(2,POINTN) - Y
C
C If a point has not been included in the computations,signal it with a
C *D* in the output (to screen and to file). Add the residuals to the
C running totals for the RMSE calculations (for both the used points and
C the disregarded points). 
C
	  IF (IMAGEC(3,POINTN).EQ.0) THEN
	    CALL EXPAND('    %I3 %S %F11.3 %F11.3',
     &	      POINTN,ID(POINTN),DX,DY)
	    IF (HAD_LIST) CALL FLWLIN
	    IF (HAD_INTERACT) CALL TTWLIN
	    RSUM = RSUM + (DX*DX + DY*DY)
	    NOUP = NOUP + 1
	  ELSE
	    CALL EXPAND('*D* %I3 %S %F11.3 %F11.3',
     &	      POINTN,ID(POINTN),DX,DY)
	    IF (HAD_LIST) CALL FLWLIN
	    IF (HAD_INTERACT) CALL TTWLIN
	    URSUM = URSUM + (DX*DX + DY*DY)
	    NOUUP = NOUUP + 1
	  END IF
C
10	CONTINUE
C
C Calculate the Used and Un-used root mean square errors
C
	RMSE = DSQRT(RSUM/(NOUP - 1))
	CALL EXPAND('RMS Vector error (%N used points) = %F11.3',
     &	  NOUP,RMSE)
	IF (HAD_LIST) CALL FLWLIN
	IF (HAD_INTERACT) CALL TTWLIN
C
C Only calculate the un-used RMSE if there are more than 4 points
C
	IF (NOUUP.GT.4) THEN
	  RMSE = DSQRT(URSUM/(NOUUP - 1))
	  CALL EXPAND('RMS Vector error (%N un-used points) = %F11.3',
     &	    NOUUP,RMSE)
	  IF (HAD_LIST) CALL FLWLIN
	  IF (HAD_INTERACT) CALL TTWLIN
	END IF
C
	IF (HAD_LIST) CALL FLWRTF
	IF (HAD_INTERACT) CALL WRITEF
C
	RETURN
	END
