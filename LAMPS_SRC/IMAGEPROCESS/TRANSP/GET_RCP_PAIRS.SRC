C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1988-11-23 19:46:52.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	SUBROUTINE GET_RCP_PAIRS(A_POS,B_POS,
     &			A_ID,A_TYPE,A_XYZ,A_WGT,A_N_RCPS,
     &			B_ID,B_TYPE,B_XYZ,B_WGT,B_N_RCPS)
C
***	MODULE	GET_RCP_PAIRS
***	IDENT	23NO88
C
C Copyright Laser-Scan Laboratories Ltd., Cambridge, England
C Created						ACM	Feb-1988
C
	IMPLICIT	NONE
C
C Data in/out
	INTEGER*4	A_N_RCPS		! num of RCPs
	CHARACTER*10	A_ID(A_N_RCPS)		! RCP identifier
	CHARACTER*2	A_TYPE(A_N_RCPS)	! RCP type
	REAL*8		A_XYZ(3,A_N_RCPS)	! RCP X,Y,Z coords
	REAL*8		A_WGT(2,A_N_RCPS)	! RCP XY,Z weights
C
	INTEGER*4	B_N_RCPS		! num of RCPs
	CHARACTER*10	B_ID(B_N_RCPS)		! RCP identifier
	CHARACTER*2	B_TYPE(B_N_RCPS)	! RCP type
	REAL*8		B_XYZ(3,B_N_RCPS)	! RCP X,Y,Z coords
	REAL*8		B_WGT(2,B_N_RCPS)	! RCP XY,Z weights
C
C Workspace
	INTEGER*4	N			! num of common RCPs
	INTEGER*4	I,J,K,A_I,B_I
	INTEGER*4	A_POS(A_N_RCPS)		! A-list Position
	INTEGER*4	B_POS(B_N_RCPS)		! B-list Position
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
C	Takes two RCP lists, each of which have no duplicate IDs, sorts
C	boths lists into ID order and eliminates all RCPs with
C	non-matching identifiers from both lists. 
C
C	Function result returns TRUE if there is at least one
C	matching pair.
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
C Sort RCPs into order by ID
C
	CALL SORT_BY_ID(A_ID,A_TYPE,A_XYZ,A_WGT,A_N_RCPS)
	CALL SORT_BY_ID(B_ID,B_TYPE,B_XYZ,B_WGT,B_N_RCPS)
C
	A_I = 1
	B_I = 1
	N = 0	
C
10	IF (A_ID(A_I).EQ.B_ID(B_I)) THEN
	  N = N+1
	  A_POS(N) = A_I
	  B_POS(N) = B_I
	  IF (A_I.EQ.A_N_RCPS.OR.B_I.EQ.B_N_RCPS) GOTO 20
	  A_I = A_I+1
	  B_I = B_I+1
	ELSEIF (A_ID(A_I).LT.B_ID(B_I)) THEN
	  IF (A_I.EQ.A_N_RCPS) GOTO 20
	  A_I = A_I+1
	ELSE
	  IF (B_I.EQ.B_N_RCPS) GOTO 20
	  B_I = B_I+1
	ENDIF
	GOTO 10
C
20	DO 30 I = 1,N
	  A_ID(I) = A_ID(A_POS(I))
	  A_TYPE(I) = A_TYPE(A_POS(I))
	  A_XYZ(1,I) = A_XYZ(1,A_POS(I))
	  A_XYZ(2,I) = A_XYZ(2,A_POS(I))
	  A_XYZ(3,I) = A_XYZ(3,A_POS(I))
	  A_WGT(1,I) = A_WGT(1,A_POS(I))
	  A_WGT(2,I) = A_WGT(2,A_POS(I))
C
	  B_ID(I) = B_ID(B_POS(I))
	  B_TYPE(I) = B_TYPE(B_POS(I))
	  B_XYZ(1,I) = B_XYZ(1,B_POS(I))
	  B_XYZ(2,I) = B_XYZ(2,B_POS(I))
	  B_XYZ(3,I) = B_XYZ(3,B_POS(I))
	  B_WGT(1,I) = B_WGT(1,B_POS(I))
	  B_WGT(2,I) = B_WGT(2,B_POS(I))
30	CONTINUE
C
	A_N_RCPS = N
	B_N_RCPS = N
C
	RETURN
	END
