C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1988-11-18 23:43:26.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL*4 FUNCTION READ_AUX_DATA(EDITING)
C
***	MODULE	READ_AUX_DATA
***	IDENT	18NO88
C
C Copyright Laser-Scan Laboratories Ltd., Cambridge, England
C Created						ACM	Feb-1988
C
	IMPLICIT	NONE
C
C Parameters
***	PARAMETER/LSL$CMNLSL:READSTR/
***	PARAMETER/LSL$CMNLSL:LSLLIBMSG/
C
C Commons
***	COMMON/LSL$CMNRCPEDT:RCPEDT/
C
C Data in
	LOGICAL*4	EDITING
C
C Workspace
	LOGICAL*4	OK,EOL
	INTEGER*4	IERR,LEN
	REAL*8		TEMP_WT
	BYTE		CH
	CHARACTER*2	TEMP_TYPE
	CHARACTER*10	TEMP_ID
	CHARACTER*10	SPACES
	DATA SPACES/'          '/
C
C Functions
	LOGICAL*4	TTRSTR		! read line with prompt
	INTEGER*4	READSTR		! read string
	LOGICAL*4	RDDBLE	        ! read real
	LOGICAL*4	RDCHS	        ! read next non blnk chr
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
C	This subroutine is used for the input of 3 auxiliary variables:
C	- Point ID
C	- Point Type
C	- Point weights in plan and height
C
C	If the user is editing a line of the file then pressing <CR>
C	leaves the previous value of the variable unchanged. Otherwise
C	<CR> will cause value to be prompted for again, except with the
C	point TYPE, for which '  ' is a valid type. 
C
C	Returns TRUE if further lines are to be added/edited.
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
	READ_AUX_DATA = .FALSE.		! ADD or EDIT command abandoned
C
C Get RCP ID
C
10	OK = TTRSTR(,,'Input ID : ',IERR)
	IF (.NOT.OK) GOTO 999		! ^Z?
	CALL BSLN
	EOL = RDCHS(CH)
	IF (EOL) THEN
	  IF (.NOT.EDITING) GOTO 10	! reprompt if not editing
	ELSE
	  CALL BSCH()
	  LEN = READSTR(TEMP_ID,'!',ON_SPACE,,IERR)
	  IF (.NOT.IERR) THEN
	    CALL LSL_PUTMSG(IERR)
	    IF (IERR.EQ.LSL__STRTOOLONG) GOTO 10
	    GOTO 999
	  END IF
	  IF (LEN.LT.10)		! pad with spaces
     &	    TEMP_ID = TEMP_ID(:LEN)//SPACES(LEN+1:10)
     	  ID(N_RCPS) = TEMP_ID
	END IF
C
C Get RCP TYPE
C
15	OK = TTRSTR(,,'Input type : ',IERR)
	IF (.NOT.OK) THEN		! ^Z?
	  IF (EDITING) GOTO 30
	  GOTO 999			! abandon new line
	END IF
	CALL BSLN
	LEN = READSTR(TEMP_TYPE,,,,IERR)
	IF (.NOT.IERR) THEN
	  CALL LSL_PUTMSG(IERR)
	  IF (IERR.EQ.LSL__STRTOOLONG) GOTO 15
	  GOTO 999
	END IF
	IF (LEN.EQ.0) THEN		! pad with spaces
	  TEMP_TYPE = '  '
	ELSE IF (LEN.LT.2) THEN
	  TEMP_TYPE = TEMP_TYPE(:LEN)//SPACES(LEN+1:2)
	END IF
	TYPE(N_RCPS) = TEMP_TYPE
C
C Get RCP WEIGHTs (plan and height weights)
C
30	OK = TTRSTR(,,'Input plan and height weights : ',IERR)
	IF (.NOT.OK) THEN		! ^Z?
	  IF (EDITING) GOTO 40
	  GOTO 999			! abandon new line
	END IF
	CALL BSLN
C
	EOL = RDCHS(CH)
	IF (EOL) THEN
	  IF (EDITING) GOTO 40
	  GOTO 30
	END IF
	CALL BSCH()
	IF (RDDBLE(TEMP_WT)) GOTO 30
	WEIGHT(1,N_RCPS) = TEMP_WT
C
	EOL = RDCHS(CH)
	IF (EOL) THEN
	  IF (EDITING) GOTO 40
	  GOTO 30
	END IF
	CALL BSCH()
	IF (RDDBLE(TEMP_WT)) GOTO 30
	WEIGHT(2,N_RCPS) = TEMP_WT
C
40	READ_AUX_DATA = .TRUE.
C
999	RETURN
	END
