C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1991-01-02 12:56:34.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL*4 FUNCTION GET_COMMANDS()
C
***	MODULE	GET_COMMANDS
***	IDENT	02JA91
C
C	Copyright : Laser-Scan Laboratories Ltd., Cambridge, England
C	Created   : ACM					     	Jan 1986
C
CMOD	change ALVEY$RCP to LSL$RCP			PGH	2-Jan-1991
C
	IMPLICIT NONE
C
C Commons
	INCLUDE		'LSL$CMNLSL:CLD.CMN'
	INCLUDE		'LSL$CMNLSL:FILENAME.CMN'
	INCLUDE		'LSL$CMNRCPEDT:RCPEDT.CMN'
C
C Workspace
	INTEGER*4	I,IERR
	LOGICAL*4	OK
C
C DCL command decoding stuff
	LOGICAL*4	ABSENT,PRESENT,HAD_QUAL,NEGATED
C
C Functions
	INTEGER*4	DCL_STARTUP,DCL_QUAL,DCL_FILE
C
C External
	INTEGER*4	RCPEDT_CLD
	EXTERNAL	RCPEDT_CLD	! DCL command definitions
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
C	Decodes RCPEDT DCL command line
C
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
C Get command line
C
	OK = DCL_STARTUP('RCPEDT',.FALSE.,RCPEDT_CLD,.TRUE.)
	IF (.NOT.OK) GOTO 999	! return
C
C Get /NEW qualifier
C
	OK = DCL_QUAL('NEW',HAD_NEW,PRESENT,NEGATED,.TRUE.)
	IF (.NOT.OK) GOTO 999	! return
C
C Get output file-spec
C
	IF (HAD_NEW) THEN
	  OK = DCL_FILE('NEW','LSL$RCP:RCP.RCP',ABSENT,.FALSE.,.TRUE.)
	  IF (.NOT.OK) GOTO 999
	  OUT_NAM = FILARY(1)(:FIL_LEN(1))
	  OUT_LEN = FIL_LEN(1)
	  GOTO 999
	END IF
C
C Get /OLD qualifier
C
	OK = DCL_QUAL('OLD',HAD_OLD,PRESENT,NEGATED,.TRUE.)
	IF (.NOT.OK) GOTO 999	! return
C
C Get input file-spec
C
	IF (HAD_OLD) THEN
	  OK = DCL_FILE('OLD','LSL$RCP:RCP.RCP;',ABSENT,.FALSE.,
     &	    .TRUE.)
	  IF (.NOT.OK) GOTO 999
	  IN_NAM = FILARY(1)(:FIL_LEN(1))
	  IN_LEN = FIL_LEN(1)
	END IF
C
C Get /UPDATE qualifier
C
	OK = DCL_QUAL('UPDATE',HAD_UPDATE,PRESENT,NEGATED,
     &	  .TRUE.)
	IF (.NOT.OK) GOTO 999	! return
C
C Assemble default output file-spec
C
	CALL PUTFLN(IN_NAM(:IN_LEN))
	HAD_NOD = .TRUE.
	HAD_DEV = .TRUE.
	HAD_DIR = .TRUE.
	HAD_NAM=  .TRUE.
	HAD_EXT = .TRUE.
	HAD_VER = .FALSE.
	CALL EXPFLN(OUT_NAM,OUT_LEN)
C
C Remove any '[]' which LSLLIB may have put into OUT_NAM (!)
C
	I = INDEX(OUT_NAM,'[]')
	IF (I.GT.0) THEN
	  OUT_NAM = OUT_NAM(:I-1)//OUT_NAM(I+2:OUT_LEN)
	  OUT_LEN = OUT_LEN-2
	END IF
C
C Get output file-spec
C
	IF (HAD_UPDATE) THEN
	  OK = DCL_FILE('UPDATE',OUT_NAM(:OUT_LEN),ABSENT, .FALSE.,
     &	    .TRUE.)
	  IF (.NOT.OK) GOTO 999
	  IF (.NOT.ABSENT) THEN
	    OUT_NAM = FILARY(1)(:FIL_LEN(1))
	    OUT_LEN = FIL_LEN(1)
	  END IF
	END IF
C
999	GET_COMMANDS = OK.EQV..TRUE.
	RETURN
	END
