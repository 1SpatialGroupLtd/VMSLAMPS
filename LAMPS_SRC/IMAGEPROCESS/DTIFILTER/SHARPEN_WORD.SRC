C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1987-05-18 14:30:40.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	INTEGER*2 FUNCTION SHARPEN_WORD(KERNEL)
C
***	MODULE	SHARPEN_WORD
***	IDENT	18MY87
C
C Copyright Laser-Scan Laboratories Ltd., Cambridge, England
C
C Author M.W.S. Reid
C
C 	Created					MWSR    17-Nov-1986
C
C deals with one pixel 
C input is from kernel of data values from argument
C and kernel weightings from common block 
C the function calculates the sum of the product of the corresponding
C kernel values .
C This value is then subtracted from the central pixel.
C output = (central value - mean)*sharpening factor + mean
C
	IMPLICIT NONE
C
C Parameters
C
C Common Blocks
C
***	COMMON/LSL$CMNDTIFILTER:DFILCMN/
***	COMMON/LSL$CMNDTI:DTIHDR/
C
C arguments
	INTEGER*2	KERNEL(1:DF_MAXKERNEL,1:DF_MAXKERNEL)	
C 
C
C Local Varaiables
C
	REAL		TOT		!sum of output kernel values
	REAL		OUTVAL
	INTEGER*4	I,J
C
C multiply values in matrix with corresponding values in weighting 
C kernel
C
	TOT = 0
	DO 20 I = 1, DF_XKERSIZE
	   DO 10 J = 1,DF_YKERSIZE
	      IF (KERNEL(I,J) .GT.-32766) THEN   ! value not null
C
C keep total of products
C
		     TOT = KERNEL(I,J) * DF_KERNEL(I,J) + TOT
	       ENDIF
10	    CONTINUE
20 	CONTINUE
C
C 
	OUTVAL = (KERNEL(DF_XKERHWID+1,DF_YKERHWID+1)-TOT)*DF_SHARP+TOT 
C
	IF (DF_ABSOLUTE) OUTVAL= ABS(OUTVAL)  ! absolute switch
C
C assign new value and ensure not out of range
C
	SHARPEN_WORD= MIN(DF_MAXTHRESHWORD,NINT(OUTVAL))
	SHARPEN_WORD= MAX(DF_MINTHRESHWORD,SHARPEN_WORD)
C
	RETURN
	END
