C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1990-12-19 12:16:24.000000000 +0000
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL FUNCTION KERNEL
C
***	MODULE  KERNEL	
***	IDENT	19DE90
C
C Copyright Laser-Scan Laboratories Ltd., Cambridge, England
C
C Author M.W.S. Reid
C
C 	Created					MWSR    14-Nov-1986
C
C Decodes KERNEL command in DTIFILTER
C 
C Reads data from data file if a non user defined kernel is used 
C if numeric arguments then 
C Initially from a command.
C
	IMPLICIT NONE
C
C Parameters
***	COMMON/LSL$CMNDTIFILTER:DTIFILTERMSG.PAR/
C
C Common Blocks
***	COMMON/LSL$CMNDTI:DTIHDR/
***	COMMON/LSL$CMNDTIFILTER:DFILCMN/
***	COMMON/LSL$CMNLSL:CMDCOM/
***	COMMON/LSL$CMNDTIFILTER:LKPCMN/
C
C Functions
	LOGICAL		RDREAL
	LOGICAL		RDCHS		!reads char
	INTEGER*4	RDCOMM
C
C Local Varaiables
	LOGICAL 	ERR		!error
	INTEGER*4	DYN		!dynamic command number
	INTEGER*4	I,J		!counters
	REAL		TEMP		!temp real
	LOGICAL		EOLN		!end of line
	BYTE		ICH		!character
	REAL		VAL,NEWVAL	!temp real for arguments
	LOGICAL		HADALL		!had all the arguments?
C
C Assume unsuccessful
	KERNEL = .TRUE.
	HADALL = .FALSE.
C
	EOLN = RDCHS(ICH)
	IF (EOLN .AND.(.NOT. DF_CMDFIL).AND.(DF_ISVT100)) THEN
C
C no arguments so prompt with screen facility
C
C but not if kernel too big
C
	   IF (DF_NOTDISKER) THEN
	       CALL LSL_PUTMSG(DTIFIL__KERTBGDIS)
	       GOTO 999
	   ENDIF
C
	   CALL SCRNKER(.TRUE.)
	   GOTO 998	   	
	ENDIF 	
	CALL BSCH
C
C character alphabetic so assume filter from look up file
C
	IF (((ICH .GE. 'A') .AND. (ICH .LE. 'Z'))
     &	      .OR. ((ICH .GE. 'a') .AND. (ICH .LE. 'z'))) THEN
C
C look for command in dynamic command table if we've got one
C
	   IF (LKP_HADTABLE) THEN
	      DYN = RDCOMM(LKP_TABLE)
	      IF (DYN .NE. 0) THEN
C
C if we've got a valid command from the command table then set
C up appropriate value
C
	         CALL SETKER(DYN)	!make kernel current
	         IF ((.NOT. DF_NOTDISKER ).AND.(.NOT. DF_CMDFIL).AND.
     &	           (DF_ISVT100)) THEN
		    CALL SCRNKER(.FALSE.)	!display it
		 ENDIF
	      	 GOTO 998	 
	      ELSE
		CALL LSL_PUTMSG(DTIFIL__KERNOTFND)
	        GOTO  999
	      ENDIF
	   ELSE
	      CALL LSL_PUTMSG(DTIFIL__BADARGS)
	      GOTO 999
	   ENDIF
	ENDIF
C
C
C Get command arguments 
C
	DO 20 I =  DF_YKERSIZE,1,-1
	   DO 10 J = 1,DF_XKERSIZE
C
C if we are short of kernel arguments then fill the kernel with the
C latest value
C
	      IF (.NOT. HADALL) THEN
	         ERR = RDREAL(NEWVAL)
	         IF (ERR) THEN
	            CALL LSL_PUTMSG(DTIFIL__REMARGSDEF)
	   	    CALL LSL_WAIT(2,2)		
		    HADALL =.TRUE.
		 ELSE
		    VAL = NEWVAL
	         ENDIF
	      ENDIF
	      DF_KERNEL(J,I) = VAL
C
C set up logical kernel
C
	     IF (ABS(DF_KERNEL(J,I) .GT. 0.001)) THEN
		DF_LOGKERNEL(J,I) = .TRUE.
	     ELSE
		DF_LOGKERNEL(J,I) = .FALSE.
	     ENDIF
C
10	   CONTINUE
20	CONTINUE
C
C look for extra args
C
	ERR = RDREAL(TEMP)
	IF (.NOT. ERR) THEN
	   CALL LSL_PUTMSG(DTIFIL__TOOMANYARGS)
	   CALL LSL_ADDMSG(DTIFIL__ARGSIGNORED)
C
C time to read messages before SCRNKER zaps them
C
	   CALL LSL_WAIT(2,2)		
	ENDIF
	IF ((.NOT. DF_NOTDISKER  ) .AND. (.NOT.DF_CMDFIL).AND.
     &	         (DF_ISVT100))THEN
	   CALL SCRNKER(.FALSE.)
	ENDIF
C
998	KERNEL = .FALSE.
999	RETURN
	END
