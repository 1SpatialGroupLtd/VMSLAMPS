.!** Qume page format
.LEFT MARGIN  0;.RIGHT MARGIN 80;.PAGE SIZE    60,80
.ENABLE BOLD
.KEEP

.!** title page
.FIGURE 14
.CENTRE ;^&Laser-Scan Laboratories Ltd.\& 
.FIGURE 2
.CENTRE ;^&DTIFILTER\&
.BL
.CENTRE ;^&Digital Filtering Program\&
.BLANK
.CENTRE ;^&User's Guide\&
.FIGURE 2
.CENTRE ;^&Issue 1.0  17-December-1986\&

.FOOT
.FLAGS SUBSTITUTE
.NOFILL
Copyright (C) 1986  Laser-Scan Laboratories Ltd
Science Park, Milton Road, Cambridge, England CB4 4FY  tel: (0223) 315414

Document "DTIFILTER User"				Category "USER"
Document Issue 1.0	M W S Reid			17-December-1986
					
.FILL
.NOFLAGS SUBSTITUTE
.END FOOT

.!* and the title to go at the top of each page
.TITLE DTIFILTER User's Guide
.PAGE
.CHAPTER ^&INTRODUCTION\&
.HL1 ^^^&Function of DTIFILTER\&
.P 0;DTIFILTER is a general purpose filtering program which operates on raster
data files held in Laser Scan Digital Terrain Image (DTI) format. A wide range
of filtering procedures may be carried out, including smoothing ,edge 
enhancement and directional filters.
.P 0; The program offers a high degree of flexibility in filter specification,
and includes a facility for specific named filters to be stored in a look up
data file for simple application while running the program.
.P 0;DTIFILTER may be used to process a wide range of raster information. This
may include elevation data generated by Laser Scan's DTM sodtware; slope and
aspect information derived from the DEM using SLOPES, and intervisibility
data produced by the program COVER. Importantly also, DTIFILTER may be used 
to filter remotely sensed imagery from a range of satellites.
.p 0; The program is particularly useful as a pre-processing tool before 
using the raster to vector conversion program VECTORISE.
.p 0; DTIFILTER may be utilised to the full in conjunction with the Laser Scan
display program ROVER. The results of applying various filters to an image
may be displayed for comparison using the quartered screen mode of operation.
ROVER also offers facilities for manipulating the appearance of the image using
the RANGE and STEP commands.
.HL1 ^&Data File Requirements\&
.p 0;DTIFILTER reads from and outputs to a Laser Scan DTI file. The program 
may be used to process all header (MIKE, UHL1, DTED, ALVY) and data (BYTE, 
WORD, LONGWORD, REAL) formats.
.p 0; DTIFILTER reads all types of DTI file (MIKE,UHL1,DTED,ALVY) and
programs to convert data from other grid formats exist. 
.p 0; Data stored in BYTE,WORD,LONGWORD and REAL format can be input. 

.hl1 ^^^&Running the Program\&
.p 0; Part of the filter definition procedure makes use of the DEC VT100 screen 
characteristics. The program may be run on other terminals without a VT 100
emulator, but the screen kernel definition facility will not be present.
.p 0; At most sites the symbol DTIFILTER will be set up, so that only DTIFILTER
need be typed to activate the program. Alternatively  if a Laser-Scan software
environment has been established on site the program may be run by typing
.bl
.nofill
			RUN LSL$EXE:DTIFILTER
.BL
.FILL
.P 0;The program requires that logical name LSL$LOOKUP , which points to
the look up filter data file  directory, should be set up. On initialisation
the program will attempt to open a specific look up file defined by logical 
name LSL$FILTER . If LSL$FILTER has not been set up 
file then the program will give the message
.bl
.nofill
	%DTIFIL-E-ERROPLKP -error opening look up file LSL$FILTER 
.fill
.bl 
The program will then assume no look up file is present and it is up to the 
user to specify a file using the LOOKUP command if required.
.p 0;On successfull initialisation the prompt DTIFILTER> will be displayed
and the program is ready to accept commands from the terminal.
As much computation is involved in filtering procedures, 
 batch mode processing may be preferable in some cases. 
.page
.CHAPTER ^&USING THE PROGRAM\&
.HL1 ^^^&Introduction\&
.p 0;Filtering involves the passing of a sub-matrix or kernel of X by Y pixels
over an image and converting the central pixel to some function of this local
array en route. The result of the filtering operation depends on the following
factors which may be varied by the user:-
.list
.le;Kernel size and shape - number of rows and columns.
.le;Kernel values - actual values of filtering kernel.
.le;Filtering function - the mathematical function that defines the method by 
which the kernel values are applied to the image.
.end list
.p 0;To avoid confusion in this document ^&kernel values\& refers to the user
specified filter kernel values, while ^&sub-matrix\& refers to the local array
of values in the image that are covered by the kernel at a particular instant.
.HL1 ^^^&File Specification\&
.p 0;One input file and and one output file may be open at any time. They are
opened by the FILE and OUTPUT commands respectively. 
A window may be applied to the input file to delineate an area for filtering, 
and the output file extents will be determined from the current window. The 
WINDOW command should therefore be given before an output file is 
specified. The CLOSE OUTPUT command should be specified before the window is 
redefined.

.HL1 ^^^&Kernel Specification\&
.p 0;The SIZE and KERNEL commands are used to specify the size of the kernel and
the values it holds:eg.
.bl
.nofill
       SIZE 3 3
       KERNEL 2 2 2 3 3 3 4 4 4
.fill
.bl
.tp 8
These commands would define the following kernel:-
.bl
.nofill
                        2  2  2
                        3  3  3
                        4  4  4
.fill
.p 0;On issue of the SIZE command all kernel values are set to zero. The
KERNEL command should always therefore be specified after the SIZE command.
.p 0;If too few arguments are specified with the kernel command then the
remainder of the kernel is filled with the last value given. Therefore 
KERNEL 5 would fill the kernel with the value 5. After the kernel has been
defined it is displayed on the screen for verification.
.p 0;If no arguments are present with the kernel command then the user is
prompted for each kernel value (which flashes) in turn. To accept an existing
value simply press RETURN. Ctrl/Z exits from the procedure and the 
remaining kernel values are unchanged.
.p 0;The KERNEL command also accepts specific named kernels which have been set
up in the look up file. eg:
.bl
.nofill
       KERNEL LAPLACIAN
.bl
.fill
This named  kernel is then made current and displayed on the screen. The SHOW 
LOOKUP command shows which kernels are present in the  lookup file. The kernel 
names may be abbreviated to the shortest non-ambiguous form.
.p 0;The currently defined kernel may also be written to the lookup file. On
issue of the WRITE command, the user is prompted for a kernel name and the 
current kernel specification is added to the end of the lookup file.
.p 0;The lookup file may of course be edited as a separate operation outside
DTIFILTER. The basic text format is as follows:-
.LIT
Kernel name / X size Y Size / Kernel Values ....

eg:
LAPLACIAN    /   3     3      / 1  1  1 
                              1 -8  1
                              1  1  1

.end lit
The  '/' delimiters are optional but it is recommended that they are included
 for clarity. Kernel values may be placed on subsequent lines to allow kernels
to be shown in their correct shape. Comments may be included freely using the 
'!' character. A copy of the lookup file supplied with the program is included
 in the appendix. 
.hl1 ^^^&Filtering Functions\&
.hl2 ^&Convolution\&
.p 0;In a convolution filter the output value for each pixel is determined by
calculating the sum of the products of the corresponding kernel and sub-matrix
values. eg:
.TP 10
.bl
.nofill
            ^&Matrix           Kernel         Output\&       

 ###########^&1|1 2 2|3\&
 ###########1|2 2 3|4##########1 -2  1########1 -3  1
 ###########2|2 3 4|5#########-2  4 -2#######-3  1  0 
 ^&###########2|3 4 5|6\&##########1 -2  1#######-4  0  0 
 ###########3|4 5 6|7#########
.fill
.p 0;It should be noted that the output matrix is 2 rows and 2 columns smaller
than the input matrix. If the WINDOW command has been used to specify a window
that is fully inside the matrix then the output values will be calculated to
the edge of the window.
.p 0;Convolution is a general filtering method and the results it produces
depend on the kernel values present. If negative values are not desirable
for the output matrix then the ABSOLUTE command can be used to ensure positive
values are output. For BYTE data this is particularly applicable because 
output values are restricted to the range of 0 to 255. Any negative values
calculated will be set to 0 if the absolute switch has not been set. 
.p 0;The THRESHOLD command can be used to limit the output values to lie 
between two defined thresholds or above one single threshold. An output value
below the lower threshold is set to the lower threshold value and a value 
above the upper threshold is set to the  upper threshold value. It should be 
noted that the THRESHOLD values are only used for convolution filtering.
Thresholds may be removed by specifying  -THRESHOLD.
.p 0;The CONVOLVE command activates convolution with the current kernel.
.hl2 ^&Mean Filtering\&
.p 0;The mean filter is essentially a special case of convolution. The MEAN 
command divides each kernel value by the number of non-zero values in the 
kernel and then processing proceeds as with convolution. eg.
.nofill
.bl
            ^&Matrix           Kernel         Output\&       
.bl
              4 4 6            1 1 0
              5 4 4            0 1 1             4
              4 4 4            1 1 1
.bl
.fill
.p 0;The same results could be achieved using convolution with the 1 values
replaced in this case by 1/7. Kernel values can be treated as weighting the
filter (more weight to higher values). It may be desirable, for example, to
give more weight to the central pixel.
.hl2 ^&Median and Mode Filtering\&
.p 0;These filters are calculated by determining the median (middle value) and
mode (most common) values within the sub-matrix. Thus kernel values can not be
applied in the same way as with convolution or mean filtering. Only the 
inclusion or exclusion of particular sub-matrix values within the calculation 
is relevant. DTIFILTER recognises zero kernel values to designate exclusion 
and any other value to mean inclusion. To avoid confusion it is recommended 
that 0 or 1 only are used for median and mode kernel values. eg (median):
.tp 10
.bl
.nofill
^&            Matrix           Kernel         Output\&
.bl
              4 4 2            0 0 1         
              4 2 4            0 1 0             2
              2 4 4            1 0 0   

              4 4 2            1 1 1    
              4 2 4            1 1 1             4
              2 4 4            1 1 1  
.BL
.fill
.p 0;The filters are activated by the MEDIAN and MODE commands.

.hl2 ^&Sharpening Filtering\&
.p 0; The Sharpening filter behaves like the MEAN filter but a further 
calculation is applied to the values. The differnce between the mean of 
the values and the central pixel is calculated. This is then multiplied by
the sharpening factor which is supplied with the SHARPEN command. This value
is added to the central pixel to yield the output. The effect of this
is to exaggerate differences between adjacent pixels. eg:
.tp 10
.nofill
.bl
^&            Matrix           Kernel         Output\&
.bl
	      3 3 3            1 1 1        
              3 5 3            1 1 1            7
              3 3 3            1 1 1
.bl
.fill
This example demonstrates output with a sharpening factor of 2.
.bl
.hl1 ^^^&Filtering Execution\&
.p 0;On issue of the CONVOLVE, MEAN, MODE, MEDIAN, or SHARPEN commands, 
 the filtering  process begins.
The LOG command should first be specified if a 
percentage progress readout is required at the terminal. At any time
Ctrl/C may be pressed to abort the filtering procedure, without exiting
from the program.
.p 0;Specifying large kernels will increase the proceessing time and 
convolution is generally faster than mode or median filtering. If large 
files are to be filtered then batch processing should be used using simple
command procedures containing DTIFILTER commands.
.page
.CHAPTER ^&FILTERING APPLICATIONS\&
.hl1 ^^^&Low Pass Filtering\&
.p 0;Low pass or smoothing filters enhance low spatial frequencies - features
that are larger than the kernel used - at the expense of high spatial frequencies. 
Thus such filters may be used to smooth the matrix and remove image noise.
Mean, Median or Mode filters are low pass filters as they all remove the local 
variations within the sub-matrix.
.p 0;The median filter has proved preferable to the mean filter in some cases
as it tends to preserve abrupt and gradual 
 changes while isolated noise is eliminated. Directionality can be introduced 
into the filtering by using non square kernels or those including zero values. 
For example to remove narrow features running from south-west to north-east 
direction then the following kernel could be used:-
.nofill
.bl
                      1 0 0
                      0 1 0
                      0 0 1
.bl
.fill
.p 0; It may also be useful to apply different directional filters one after
another to obtain the desired output. 
.p 0;If larger features are to be removed by smoothing then larger kernels 
may be used. Weighting of kernel values for the mean filter can be used to
 give greater emphasis to sub-matrix values closer to the original central 
pixel. It is unlikely , however, that kernels of greater than 9 by 9 pixels are 
likely to be effective.
.bl
.hl1 ^&High Pass Filtering\&
.p 0;High pass filters enhance high spatial frequencies - features
that are smaller than the kernel used - at the expense of low spatial
 frequencies. Two forms of high pass filtering can be distinguished:-
.list
.le; Edge Enhancement
.le; Edge Detection
.end list
.p 0; Edge enhancement is achieved in DTIFILTER using the SHARPEN command. 
This filter increases the difference between each pixel and its neighbours 
by the supplied sharpening factor. By using edge enhancement small features
which are not easily visible may be seen more clearly. Directionality may
again be introduced to enhance features running in a particular orientation.
.p 0;An edge detection filter is one where the output is related to the 
gradient of the adjacent values in the input matrix. Thus ,unlike the edge
enhancement filter the output image appears different in nature to the input
 because brightness response bears no relation to the input value but to the 
difference from its neighbours. The range of output values may also be 
different from the input (usually much smaller) and may also contain negative
 values if not removed by use of the ABSOLUTE switch.
.p 0; The THRESHOLD command is particularly useful with edge detection filters.
Because edges have high gradient values, careful thresholding allows only edges 
to appear in the output matrix. 

.p 0;There is a great variety of edge operators which may be applied using 
convolution filtering.
.p 0;A simple one dimensional filter
.nofill
.bl
                          -1  0  1
.bl
.fill
detects edges running from north to south. Similar filters for other directions
 can also be set.
.p 0; The Laplacian filter, of which several variations exist, is a second 
difference operator. It responds to all changes in gradient in any direction 
but corners and isolated points are particularly prominent. 
.nofill
.bl
                           1  1  1
                           1 -8  1
                           1  1  1
.bl
.fill
.p 0; Other edge operators include the SOBEL and PREWITT operators which 
are included in the supplied look up file.
.p 0;Where images contain much noise it may be advantageous to apply a smoothing
 filter such as the MEDIAN first to remove noise followed by the edge operator
 to detect the true edges which define the features.
.page
.CHAPTER ^&COMMAND LIST\&
.P 0
The following commands are defined:
.LIT

	ABSOLUTE        CLOSE		CONVOLVE	EXIT
	FILE		HELP		LOG		LOOKUP
	KERNEL		MEAN		MEDIAN		MODE
	OUTPUT		SHARPEN		SHOW		WINDOW
	THRESHOLD	WRITE

In the following pages the commands are presented in alphabetical order. 
The argument syntax is: 
	
	     i		optional integer value
	     I   	mandatory integer value
	     i...	optional list of integer values
	     I...	mandatory list of integer values
	     r		optional real value
	     R		mandatory real value
	     s		optional text string
	     S		mandatory text string
	     +/-	optional logic qualifier

.END LIT
.PAGE
.HL 1^&ABSOLUTE\&
.LIT

		Format:
			[+/-] ABSOLUTE

Enables or suppresses Absolute value calculation.  

If enabled then each the absolute value of each pixel value is calculated
before output.

The default is to not to calculate the absolute value

.END LIT
.HL 1^&CLOSE\&
.LIT

		Format:
			CLOSE [qualifier]
			      [    S    ]   

Close the requested file.

Valid qualifiers are:
	
		INPUT	 	Close the input file
		OUTPUT		Close the output file

.END LIT
.HL 1^& CONVOLVE\&
.lit

Performs filtering using convolution

.end lit
.HL 1^&EXIT\&
.LIT

Terminates the program, and will unmap any currently opened DTI files,
along with any input or output IFF files.

.END LIT
.HL 1^&FILE\&
.LIT
		Format:
			FILE [ DTI filename ]
			     [      S       ]	
	
Opens and maps into memory an input DTI file. 
If an input file is already open then it is first closed before the new 
one is opened.

.end lit
.HL 1^&HELP\& 
.LIT

		Format:
			HELP [ command ]
			     [    s    ]

Gives a brief description of the function and format of the specified command.

.END LIT
.HL 1^&KERNEL\&
.LIT

		Format:
			[+/-] KERNEL [ kernel kernel values]
			             [   s   /    r1,r2... ]

The command can be followed by a named kernel in the lookup file or by a
list of kernel values (row by row). If no arguments are present then the
user is prompted for the kernel values in turn. The default kernel (on 
initialisation or after a SIZE command is filled with zeros)

.END LIT
.HL 1^&LOG\&
.LIT

		Format:
			[+/-] LOG

Enables or suppresses a screen log of the current percentage progress during 
filtering.

The default is to not to output the log.

.END LIT
.HL 1^&LOOKUP\&
.LIT
		Format:
			LOOKUP[ lookup filename ]
			      [      S       ]	
	
Opens a lookup text file containing named filter parameters.
If a lookup file is already open then it is first closed.

.end lit
.HL ^&MEAN\&
.lit

Performs filtering using a mean filter

.end lit
.HL ^&MEDIAN\&
.lit

Performs filtering using a median filter

.end lit
.HL^&MODE\&
.lit

Performs filtering using a mode filter

.end lit

.HL 1^&OUTPUT\&
.LIT
		Format:
			OUTPUT [ DTI filename ]
			       [      S       ]	
	
Opens and maps into memory an output DTI file. 
If an output file is already open then it is first closed.

.end lit

.HL 1^&SIZE\&
.LIT
		Format:
			SIZE [ X kernel size , Y kernel size]
			     [      I             i         ]	
	
Specifies filtering kernel dimensions. If the second argument is omitted
then a square kernel is assumed
The default kernel size is 3 by 3.

.end lit
.HL 1^&SHARPEN\&
.LIT
		Format:
			SHARPEN [ sharpening factor]
			        [      r           ]	
	
Performs filtering using a sharpening (edge enhancement) filter.
If the sharpening factor is omitted then a default value of 2 is used.

.end lit
.HL 1^&SHOW\&
.LIT
 		Format:
			SHOW [ qualifier ]
			     [    S      ]

Valid qualifiers are:
	
		INPUT	 	Displays information on the input file
		OUTPUT		Displays information on the output file
		LOOKUP		Displays names of kernels in the current
				lookup file

.end lit
.HL 1^&THRESHOLD\&
.LIT

		Format:
			[+/-] THRESHOLD [lower threshold  upper threshold]
				        [   r                  r         ]

Sets threshold values to set limits on data output values.
-THRESHOLD removes the current threshold values.
Threshold values are only applicable to convolution filtering.

.END LIT
.HL 1^&WINDOW\&
.LIT 

		Format:
			WINDOW [ SWx SWy  NEx NEy ]         
			       [  I   I    I   I  ]

Specifies an area of interest in the currently selected input file. 
The SW corner of the window should be followed by the NE corner.
The default window is the entire DTI file.
The window values define the extents of the output file.
.end lit
.HL 1^&WRITE\&
.LIT 

		Format:
			WINDOW [ kernel name ]         
			       [      s      ]

Writes the current kernel specifications to the end of the lookup file.
If the kernel name is missing then a prompt is given.

.end lit
