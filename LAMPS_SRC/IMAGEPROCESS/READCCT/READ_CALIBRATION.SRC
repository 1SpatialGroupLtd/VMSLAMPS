C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1987-05-14 15:35:06.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
        LOGICAL FUNCTION READ_CALIBRATION()
C
***	MODULE	READ_CALIBRATION
***	IDENT	14MY87
C
C 	Copyright Laser-Scan Laboratories Ltd.,Cambridge,England
C 	Author: D R Catlow
C
C	Routine for READCCT to decode an ancillary record containing
C	radiometric calibration data.
C
C	WARNING.  There is an awful lot of this information (1 gain
C	and 1 offset value for each detector ie. 6000*2 for a full
C	panchromatic SPOT scene).
C	For panchromatic:
C	the first 6 records contain the gain information, and the
C	next 6 (Calibration records 7 to 12) the offset information.
C	For multispectral:
C	the first 9 recrods contain the gain information, and the
C	next 9 (Calibration records 10 to 18) the offset information.
C
	IMPLICIT NONE
C
	INCLUDE 'HERE:READCCT.CMN'
	INCLUDE 'HERE:TAPE.CMN'		!Values relating to the tape records
	INCLUDE 'HERE:TAPE_RECORDS.CMN'
C
C	Local
	INTEGER*4	POINTER		!decode pointer into MTBUF
	INTEGER*4	I,J		!counters
	INTEGER*2	INT_VALUE	!word value formed from 2 bytes
C					!in MTBUF by FORM_WORD
	INTEGER*4	IERR		!function return
C
C	Function
	INTEGER*4	FLWSEL		!select file opened on required LUN
C
C----------------------------------------------------------------------------
C----------------------------------------------------------------------------
C
	COUNT_CALIBRATION=COUNT_CALIBRATION+1	!increment counter for this
C						!type of record
C
	READ_CALIBRATION=.TRUE.	!assume record has been decoded correctly
C
	IF(.NOT.DECODE_CALIBRATION)GOTO 999	!decoding of this record is
C						!not required
	IF(SKIP_SCENE)GOTO 999
C----------------------------------------------------------------------------
C
	IF((HAD_LIST.OR.HAD_PRINT).AND.SPOT)THEN
C
	  NUMBER_CALIB_RECORDS=NUMBER_CALIB_RECORDS+1
	  IF(NUMBER_CALIB_RECORDS.GT.12.AND.PANCHROMATIC)GOTO 999
C
 	  IERR=FLWSEL(2)
	  IF(.NOT.IERR)THEN
	    CALL LSL_PUTMSG(IERR)
	    READ_CALIBRATION=.FALSE.
	    GOTO 999
	  ENDIF
C
C
	  IF(NUMBER_CALIB_RECORDS.EQ.1)THEN
	    CALL FLWRTF
     & ('-------------------------------------------------------------')
	    CALL FLWRTF
     &    ('        *** SPOT RADIOMETRIC CALIBRATION GAINS ***')
	  ELSE IF( (PANCHROMATIC .AND.NUMBER_CALIB_RECORDS.EQ.7).OR.
     &             (MULTISPECTRAL.AND.NUMBER_CALIB_RECORDS.EQ.10) )THEN
	    CALL FLWRTF
     & ('-------------------------------------------------------------')
	    CALL FLWRTF
     &    ('      *** SPOT RADIOMETRIC CALIBRATION OFFSETS ***')
	  ENDIF
C
	  CALL FLWRTF
     & ('-------------------------------------------------------------')
C
C	  Output 10 gains or offsets to a line
	  POINTER=61
	  DO 200 I=1,100
	    CALL FORM_WORD (INT_VALUE,POINTER)
	    CALL EXPAND('%^W%I5 ',INT_VALUE)
	    DO 100 J=2,18,2
	      CALL FORM_WORD (INT_VALUE,POINTER+J)
	      CALL APPEND('%^W%I5,',INT_VALUE)
100	    CONTINUE
	    CALL FLWLIN
	    POINTER=POINTER+20
200	  CONTINUE
C
	ENDIF
C
C----------------------------------------------------------------------------
	IF(HAD_HDR.AND.SPOT)THEN
C
 	  IERR=FLWSEL(1)
	  IF(.NOT.IERR)THEN
	    CALL LSL_PUTMSG(IERR)
	    READ_CALIBRATION=.FALSE.
	    GOTO 999
	  ENDIF
C
	  IF(NUMBER_CALIB_RECORDS.EQ.1)THEN
	    CALL FLWRTF
     &    ('!Radiometric Calibration Data')
	    CALL FLWRTF
     &    ('RADIOMETRIC_CALIB_GAINS=')
C
	  ELSE IF( (PANCHROMATIC .AND.NUMBER_CALIB_RECORDS.EQ.7).OR.
     &           (MULTISPECTRAL.AND.NUMBER_CALIB_RECORDS.EQ.10) )THEN
	    CALL FLWRTF
     &    ('RADIOMETRIC_CALIB_OFFSETS=')
	  ENDIF
C
C	  Output 10 gains or offsets to a line
	  POINTER=61
	  DO 400 I=1,100
	    CALL FORM_WORD (INT_VALUE,POINTER)
	    CALL EXPAND('%^W%I5,',INT_VALUE)
	    DO 300 J=2,18,2
	      CALL FORM_WORD (INT_VALUE,POINTER+J)
	      CALL APPEND('%^W%I5,',INT_VALUE)
300	    CONTINUE
	    CALL FLWLIN
	    POINTER=POINTER+20
400	  CONTINUE
C
	ENDIF
C
C-----------------------------------------------------------------------
	IF((HAD_PRINT.OR.HAD_LIST).AND.LANDSAT)THEN
C
	  IERR=FLWSEL(2)
	  IF(.NOT.IERR)THEN
	    CALL LSL_PUTMSG(IERR)
	    READ_CALIBRATION=.FALSE.
	    GOTO 999
	  ENDIF
C
	  CALL FLWRTF
     & ('-------------------------------------------------------------')
	  CALL FLWRTF
     &  ('      *** LANDSAT TM RADIOMETRIC CALIBRATION DATA ***')
	  CALL FLWRTF
     & ('-------------------------------------------------------------')
	  CALL FLWRTF
     &  ('Calibration Data Band Number               : %A4', MTBUF(13))
	  CALL FLWRTF
     &  ('Lower Reflectance Limit                    : %A4', MTBUF(17))
	  CALL FLWRTF
     &  ('Upper Reflectance Limit                    : %A4', MTBUF(21))
	  CALL FLWRTF      
     &  ('Offset Coefficient                         : %A20', MTBUF(32)) 
	  CALL FLWRTF      
     &  ('Gain Coefficient                           : %A20', MTBUF(52)) 
	  CALL FLWRTF
	ENDIF
C
C
C------------------------------------------------------------------------
C
C	Output to the header file if necessary
	IF(HAD_HDR.AND.LANDSAT)THEN
C
	  IERR=FLWSEL(1)
	  IF(.NOT.IERR)THEN
	    CALL LSL_PUTMSG(IERR)
	    READ_CALIBRATION=.FALSE.
	    GOTO 999
	  ENDIF
C
	  CALL FLWRTF
     &  ('!Radiometric Calibration Data ***')
C
C	  39 chars
	  CALL EXPAND
     &  ('OFFSET_COEFFICIENT=%A20',MTBUF(32)) 
         	  CALL APPEND
     &  (' !Calibration offset coefficient')
	  CALL FLWLIN
C
C	  37 chars
	  CALL EXPAND
     &  ('GAIN_COEFFICIENT=%A20',MTBUF(52)) 
	  CALL APPEND
     &  ('   !Calibration gain coefficient')
	  CALL FLWLIN
C
	ENDIF
C
C----------------------------------------------------------------------------
999	RETURN
C
	END
