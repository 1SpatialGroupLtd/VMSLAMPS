C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1987-05-14 15:36:32.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
        LOGICAL FUNCTION READ_HISTOGRAM()
C
***	MODULE	READ_HISTOGRAM
***	IDENT	14MY87
C
C 	Copyright Laser-Scan Laboratories Ltd.,Cambridge,England
C 	Author: D R Catlow
C
C	Routine for READCCT to decode an ancillary record containing
C	histogram data.
C
	IMPLICIT NONE
C
	INCLUDE 'HERE:READCCT.CMN'
	INCLUDE 'HERE:TAPE.CMN'		!Values relating to the tape records
	INCLUDE 'HERE:TAPE_RECORDS.CMN'	!record counter and decode variable
C
C	Local
	INTEGER*4	POINTER		!Decode pointer into MTBUF
	INTEGER*4	I,J		!Loop counters
	INTEGER*4	IERR		!function return
C
C	Function
	INTEGER*4	FLWSEL		!to select file on specified LUN
C
C----------------------------------------------------------------------------
C----------------------------------------------------------------------------
C
	COUNT_HISTOGRAM=COUNT_HISTOGRAM+1	!increment count of
C						!histogram records
	READ_HISTOGRAM=.TRUE.	
C
	IF(.NOT.DECODE_HISTOGRAM)GOTO 999	!decoding of this record
C						!is not required
	IF(SKIP_SCENE)GOTO 999
C
C----------------------------------------------------------------------------	
C	Simply extract the relevant information and either output to
C	the terminal, or to the output header file
C
	IF(COUNT_HISTOGRAM.GT.1.AND.PANCHROMATIC)GOTO 999
C
	IF((HAD_PRINT.OR.HAD_LIST).AND.SPOT)THEN
C
	  IERR=FLWSEL(2)
	  IF(.NOT.IERR)THEN
	    CALL LSL_PUTMSG(IERR)
	    READ_HISTOGRAM=.FALSE.
	    GOTO 999
	  ENDIF
C
	  IF(MOD(COUNT_HISTOGRAM,3).EQ.1)THEN
  	    CALL FLWRTF
     & ('-------------------------------------------------------------')
	    CALL FLWRTF
     &  ('              *** SPOT HISTOGRAM DATA ***')
	  ENDIF
	    CALL FLWRTF
     & ('-------------------------------------------------------------')
	    CALL FLWRTF
     & ('-------------------------------------------------------------')
C
	  CALL FLWRTF
     &  ('Histogram Data for Band                    : %A2',MTBUF(15))
	  CALL FLWRTF
     &  ('Spectral Band Number                       : %A2',MTBUF(21))
	  CALL FLWRTF
     &  ('Rate of Sampling Along Column              : %A2',MTBUF(25))
	  CALL FLWRTF
     &  ('Rate of Sampling Along Line                : %A2',MTBUF(29))
C
	  CALL FLWRTF
     & ('-------------------------------------------------------------')
	  CALL FLWRTF
     & ('HISTOGRAM VALUES')
	  CALL FLWRTF
     & ('-------------------------------------------------------------')
C	   
C	  These are printed out 8 to a line, with 32 lines of information
	  POINTER=33
	  DO 200 I=1,32
	     CALL EXPAND('%A7 ',MTBUF(POINTER))
	     DO 100 J=1,7
	        CALL APPEND('%A7 ',MTBUF(POINTER+(J*8)))
100	     CONTINUE
	     CALL FLWLIN
	     POINTER=POINTER+64
200	  CONTINUE
C
	  CALL FLWRTF
     & ('-------------------------------------------------------------')
	  CALL FLWRTF
     &  ('Rate of Sampling Along Line                : %A2',MTBUF(29))
	  CALL FLWRTF
     &  ('Lower Threshold for Manual Stretch         : %A4',MTBUF(2092))
	  CALL FLWRTF
     &  ('Upper Threshold for Manual Stretch         : %A4',MTBUF(2096))
	  CALL FLWRTF
     &  ('Method for Manual Dynamic Stretch          : %A3',MTBUF(2100))
C
	  CALL FLWRTF
     & ('-------------------------------------------------------------')
	  CALL FLWRTF
     &  ('Deconvolution Coefficients along Lines     :')
	  POINTER=2103
	  CALL EXPAND('%A7',MTBUF(POINTER))
	  DO 300 I=1,7
	     CALL APPEND('%A7',MTBUF(POINTER+(I*7)))
300	  CONTINUE
	  CALL FLWLIN
C
	  CALL FLWRTF
     &  ('Deconvolution Coefficients along Columns   :')
	  POINTER=2159
	  CALL EXPAND('%A7',MTBUF(POINTER))
	  DO 350 I=1,7
	     CALL APPEND('%A7',MTBUF(POINTER+(I*7)))
350	  CONTINUE
	  CALL FLWLIN
C
	ENDIF
C
C------------------------------------------------------------------------
	IF(HAD_HDR.AND.SPOT)THEN
C
	  IERR=FLWSEL(1)
	  IF(.NOT.IERR)THEN
	    CALL LSL_PUTMSG(IERR)
	    READ_HISTOGRAM=.FALSE.
	    GOTO 999
	  ENDIF
C
	  IF(MOD(COUNT_HISTOGRAM,3).EQ.1)THEN
	     CALL FLWRTF('!*** Histogram Data ***')
	  ENDIF
C
	  CALL FLWRTF('COLUMN_SAMPLE_RATE=%A2',MTBUF(25))
	  CALL FLWRTF('LINE_SAMPLE_RATE=%A2',MTBUF(29))
	  CALL FLWRTF('HISTOGRAM_BAND=%A2',MTBUF(21))
C
	  CALL FLWRTF('HISTOGRAM_VALUES=')
C	   
C	  These are printed out 8 to a line, with 32 lines of information
	  POINTER=33
	  DO 450 I=1,32
	     CALL EXPAND('%A7 ',MTBUF(POINTER))
	     DO 400 J=1,7
	        CALL APPEND('%A7 ',MTBUF(POINTER+(J*8)))
400	     CONTINUE
	     CALL FLWLIN
	     POINTER=POINTER+64
450	  CONTINUE
C
	  CALL FLWRTF('LOWER_THRESHOLD=%A4',MTBUF(2092))
	  CALL FLWRTF('UPPER_THRESHOLD=%A4',MTBUF(2096))
	  CALL FLWRTF('STRETCH_METHOD=%A3',MTBUF(2100))
C
	  CALL FLWRTF('DECONVOLUTION_COEF_LINES=')
	  POINTER=2103
	  CALL EXPAND('%A7',MTBUF(POINTER))
	  DO 520 I=1,7
	     CALL APPEND('%A7',MTBUF(POINTER+(I*7)))
520	  CONTINUE
	  CALL FLWLIN
C
	  CALL FLWRTF('DECONVOLUTION_COEF_COLUMNS=')
	  POINTER=2159
	  CALL EXPAND('%A7',MTBUF(POINTER))
	  DO 550 I=1,7
	     CALL APPEND('%A7',MTBUF(POINTER+(I*7)))
550	  CONTINUE
	  CALL FLWLIN	  
C
	ENDIF
C
C------------------------------------------------------------------------
C
999	RETURN
C
	END
