C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1988-09-21 16:32:16.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL FUNCTION LSL_TAPE_SETUP(NAME, RET_CODE)
C
***	MODULE	LSL_TAPE_SETUP
***	IDENT	17AU87
C
C 	Copyright Laser-Scan Laboratories Ltd.,Cambridge,England
C 	Author: A.Stevens
C
C	Routine for ADCS to determine if data exists on tape or in 
C	a file. If a file, it check for existance.
C	If a tape, it allocates and mounts ready for reading
C
	IMPLICIT NONE
C
C Common blocks
C
	INCLUDE 'HERE:SRP2DTIMSG.PAR'		! message files
	INCLUDE 'HERE:LSL_TAPE.CMN'		! common block
	INCLUDE 'LSL$CMNLSL:MTIVCM.CMN'		! tape input common
	INCLUDE 'LSL$CMNLSL:LSLLIBMSG.PAR'	! LSLLIB error messages
	INCLUDE 'LSL$CMNLSL:TXTC.CMN'		! LSL common
	INCLUDE '($SYSSRVNAM)'			! system service declares
	INCLUDE '($SSDEF)'			! return code defs.
C
C Arguments
	CHARACTER*(*)	NAME			! file or magtape name
	INTEGER*4	RET_CODE		! -5 allocation error
						! -6 unable to mou
						! -7 offline error
C Functions
C
	INTEGER*4	TRNALL			! get logical name
	LOGICAL		ADCS_MTALLOC		! alloc and mou
	INTEGER*4	FLINIT			! opens file
	INTEGER*4	FLCLOS			! closes file	
	LOGICAL		MTTEST			! magtape or file?	
C
C Local
C
	INTEGER*4	IERR			! function return
	INTEGER*4	ERROR			! system error code
C
	LOGICAL		OK,STATUS		! error flags
C
	INTEGER*4	MOU_ERROR,OFF_ERROR, ALLOC_ERROR
	INTEGER*4	FILE_ERROR, GENERAL_ERROR
	PARAMETER	(MOU_ERROR = -6)
	PARAMETER	(OFF_ERROR = -7)
	PARAMETER	(ALLOC_ERROR= -5) 
	PARAMETER	(FILE_ERROR = -8)
	PARAMETER	(GENERAL_ERROR = -999)
C
C--------------------------------------------------------------------
C
C..Set up in the beginning
C
	STATUS = SS$_NORMAL			! if I exit without error
	LSL_TAPE_SETUP =.TRUE.			! set to signal success
	RET_CODE = -999				! general condition
	LINE_NUMBER = 0				! reset this
	FL_LINE_NO = 0				! for flispc
CCCCC	CALL  LSL_SETMSG(.FALSE., .FALSE., .FALSE.) ! error format
	MTNAME = NAME				! remember it
C
C---------------------------------------------------------------------
C
C... decide if we have a file or a magtape as the data source
C
	IF (MTTEST(NAME)) THEN
C
C---------------------------------------------------------------------
C
	  MAGFILE = .TRUE.			! remember its a magtape
	  OK = ADCS_MTALLOC(RET_CODE)		! allocate magtape
	  IF (.NOT.OK) GOTO 999
C
C---------------------------------------------------------------------
C
	ELSE					! its a file  
C
	  MAGFILE = .FALSE.			! remember its a file
	  OK = FLINIT(NAME)			! check it can be opened
	  IF (.NOT.OK) THEN
	    RET_CODE = FILE_ERROR		
	    GOTO 999				! error exit
	  ENDIF
C
	  OK = FLCLOS(NAME)			! re-close it	
	  IF (.NOT.OK) THEN
	    RET_CODE = FILE_ERROR		
	    GOTO 999				! error exit
	  ENDIF
C
	ENDIF
C
C--------------------------------------------------------------------
C
	RETURN					! success
999	LSL_TAPE_SETUP = .FALSE.		! problem
	RETURN			
C
	END
