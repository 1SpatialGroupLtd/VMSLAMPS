C
C * This file is part of the LAMPS distribution, released as a software
C * preservation project to archive digital history for future historians.
C * Copyright (c) 1980-2002 Laser-Scan Ltd, 1Spatial Group Ltd
C *
C * Timestamp of this file for the 2002 release was: 1988-09-21 17:30:52.000000000 +0100
C *
C * This program is free software: you can redistribute it and/or modify
C * it under the terms of the GNU General Public License as published by
C * the Free Software Foundation, version 3.
C *
C * This program is distributed in the hope that it will be useful, but
C * WITHOUT ANY WARRANTY; without even the implied warranty of
C * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
C * General Public License for more details.
C *
C * You should have received a copy of the GNU General Public License
C * along with this program. If not, see http://www.gnu.org/licenses/.
C
	LOGICAL FUNCTION ADCS_MTDEALLOC()
C
***	MODULE	ADCS_MTDEALLOC
***	IDENT	17AU87
C
C 	Copyright Laser-Scan Laboratories Ltd.,Cambridge,England
C 	Author: A.Stevens
C
C	Routine for ADCS to dismount and de allocate a tape
C
	IMPLICIT NONE
C
C Common blocks
C
	INCLUDE 'HERE:SRP2DTIMSG.PAR'		! message files
	INCLUDE 'HERE:LSL_TAPE.CMN'		! common block
	INCLUDE 'LSL$CMNLSL:MTIVCM.CMN'		! tape input common
	INCLUDE 'LSL$CMNLSL:LSLLIBMSG.PAR'	! LSLLIB error messages
	INCLUDE 'LSL$CMNLSL:TXTC.CMN'		! LSL common
	INCLUDE '($SYSSRVNAM)'			! system serv. declares
	INCLUDE '($SSDEF)'			! return code defs.
	INCLUDE '($DMTDEF)'			! dismount symbols	
C
C Local
C
	LOGICAL		OK,STATUS	! error flags
	INTEGER*4	FLAG_VAR	! dismou flags
C
C--------------------------------------------------------------------
C
C..Set up in the beginning
C
	STATUS = SS$_NORMAL			! if I exit without error
	ADCS_MTDEALLOC =.TRUE.			! set to signal success
C
C---------------------------------------------------------------------
C
C...set flag for no unloading 
C
	FLAG_VAR        = DMT$M_NOUNLOAD
C
C... dismount. Note: /nounload causes routine to complete before 
C	returning. therefore use unload to complete imediately.
C
C	OK = SYS$DISMOU(MTNAME,%VAL(FLAG_VAR))		! dismount tape
	OK = SYS$DISMOU(MTNAME,)			! dismount tape
	IF (.NOT.OK) THEN				! no can do
	  IF (OK.EQ.SS$_DEVOFFLINE.OR.			! offline or 
     &		OK.EQ.SS$_DEVNOTMOUNT) THEN 		! dismounted
	    OK = -1					! ignore 
	  ELSE						! real problem
	    CALL LSL_PUTMSG(SRP2DTI__ERRMTDISMOU)
	    CALL LSL_PUTMSG(MTIERR)
	    CALL LSL_ADDMSG(OK)
	    STATUS = OK
	    GOTO 999					! exit with error
	  ENDIF
	ENDIF
C
C--------------------------------------------------------------------
C
C... deallocate
C
	OK = SYS$DALLOC(MTNAME,)
	IF (.NOT.OK) THEN
	  IF (OK.EQ.SS$_DEVNOTALLOC) THEN
	    OK = -1				! ignore unallocated 
	  ELSE
	    CALL LSL_PUTMSG(SRP2DTI__ERRMTDEALLOC)! real problem
	    CALL LSL_PUTMSG(MTIERR)
	    CALL LSL_ADDMSG(OK)
	    STATUS = OK
	    GOTO 999					! exit with error
	  ENDIF
	ENDIF
C
C---------------------------------------------------------------------
C
	RETURN					! success
999	ADCS_MTDEALLOC = .FALSE.		! problem
	RETURN			
C
	END
C--------------------------------------------------------------------
