	LOGICAL FUNCTION OPNDTI()
C
***	MODULE	OPNDTI
***	IDENT	23AU88
C
C Copyright Laser-Scan Laboratories Limited, Cambridge, England.
C
CMOD	Parameter DTI_DTED replaced by DTI_TED4		DRC 23-Aug-1988
C	Now create LSLA type files
CMOD	LATORI,LONORI no longer transposed!		TJH 08-Jun-1988
CMOD	Now calculates ground metres grid interval from
C	LATINT and LONINT for DTED DTI file		TJH 08-Jun-1988
C 	Created 					TJH 06-Apr-1988
C
C Creates and opens the DTI output file, and sets everything up ready
C for us to write the data.
C
C The function value is .TRUE. if we succeed.
C
	IMPLICIT NONE
C
C
C Parameters
	INCLUDE 'LSL$DTMCREATESYS:MESPAR.PAR'
	INCLUDE 'LSL$CMNDTI:DTIPAR.PAR'
	INCLUDE 'LSL$CMNDTI:DTIDEF.PAR'
C
C Common
	INCLUDE 'LSL$DTMCREATESYS:CONTRL.CMN'
	INCLUDE 'LSL$DTMCREATESYS:DTMDET.CMN'
	INCLUDE 'LSL$DTMCREATESYS:FINDIT.CMN'
	INCLUDE 'LSL$DTMCREATESYS:IOLUNS.CMN'
	INCLUDE 'LSL$CMNDTI:DTIHDR.CMN'
	INCLUDE 'LSL$CMNLSL:CMDCOM.CMN'
	INCLUDE 'LSL$CMNLSL:TXTC.CMN'
C
C W/s
	LOGICAL	  	IERR,OK		! error returns
	REAL		DEGRAD		! degrees to radians conversion
	PARAMETER	(DEGRAD=0.017 453 2925)
C
C Functions
	LOGICAL	  DTI_CREATE		! create/open DTI file
	LOGICAL	  DTI_INIT_DATA		! initialise DTI file
	LOGICAL	  DTI_PRINT_HEADER	! print out DTI header
	LOGICAL	  DTI_WRITE_HEADER	! write data into DTI header
	LOGICAL	  DTI_WRITE_DSI		! write data into DSI header
	LOGICAL	  DTI_WRITE_UHL		! write data into UHL header
C
	REAL	  REAL_NULL		! real data null value
	INTEGER*4 LONG_NULL		! long data null value
	INTEGER*2 WORD_NULL		! word data null value
	LOGICAL	  NULL			! null data value
C
	EQUIVALENCE(NULL,REAL_NULL,LONG_NULL,WORD_NULL)
C
C ......................................................................
C
	OPNDTI=.TRUE.			! assume success
C
	REAL_NULL=-32767.0
C
	IF (DIAG) CALL FRAMED_MES(6,0)
C
C Try to open file.
	OK=DTI_CREATE(LGC4,		! lun
     &		DTI_NAME(LGC4),		! file-spec
     &		DTI_NAME_LENGTH(LGC4),	! file-spec length
     &		DTI_HDR_TYPE,		! header type
     &		1024,			! header length (used if LSLA)
     &		DTI_DATA_TYPE,		! data type
     &		NCOL,			! number of cols
     &		NROW,			! number of rows
     &		IERR)			! error return
	IF (OK) THEN
	   CALL WRITEF('DTI file %S opened for write'
     &			,DTI_NAME(LGC4)(1:DTI_NAME_LENGTH(LGC4)))
C
C Set up the DTIHDR common block for this file
	   IF (DTI_HDR_TYPE.EQ.DTI_LSLA)THEN
	      X_GRID(LGC4)=SIDEX
	      Y_GRID(LGC4)=SIDEY
	      X_OFFSET(LGC4)=XMIN
	      Y_OFFSET(LGC4)=YMIN
	   ELSE
	      LONORI(LGC4)=XMIN		! lon origin (10ths secs)
	      LATORI(LGC4)=YMIN		! lat origin (10ths secs)
	      LATINT(LGC4)=SIDEX	! lat grid interval (10ths secs)
	      LONINT(LGC4)=SIDEY	! lon grid interval (10ths secs)
C
C Convert LATINT and LONINT to ground metres
	      X_GRID(LGC4)=
     &			6 371 229.3 * COS((LATORI(LGC4)/36000.)*DEGRAD)
     &                  * FLOAT(LONINT(LGC4))*DEGRAD / 36 000.0
	      Y_GRID(LGC4)=6 371 229.3 
     &			* FLOAT(LATINT(LGC4))*DEGRAD / 36 000.0
	      LATREC(1,LGC4)=YMIN	! SW latitude
	      LATREC(2,LGC4)=YMAX	! NW latitude
	      LATREC(3,LGC4)=YMAX	! NE latitude
	      LATREC(4,LGC4)=YMIN	! SE latitude
	      LONREC(1,LGC4)=XMIN	! SW longitude
	      LONREC(2,LGC4)=XMIN	! NW longitude
	      LONREC(3,LGC4)=XMAX	! NE longitude
	      LONREC(4,LGC4)=XMAX	! SE longitude
	   ENDIF
	ELSE
	   CALL WRITEF('%S error opening DTI file %S for write'
     &			,ERROR,DTI_NAME(LGC4)(1:DTI_NAME_LENGTH(LGC4)))
	ENDIF
C
C Now write the contents of the common block into the DTI file header
	IF (OK) THEN
	   OK=DTI_WRITE_HEADER(LGC4,IERR)
	   IF (OK) THEN
	       IF (DTI_HDR_TYPE.EQ.DTI_TED4) THEN
	            OK=DTI_WRITE_DSI(LGC4,IERR)
	       ELSEIF (DTI_HDR_TYPE.EQ.DTI_UHL1) THEN
	            OK=DTI_WRITE_UHL(LGC4,IERR)
	       ENDIF
	       IF (OK) THEN
	          IF (DTI_HDR_TYPE.EQ.DTI_TED4) THEN
	              OK=DTI_PRINT_HEADER(LGC4,UNITS_DEG)
	          ELSE
	              OK=DTI_PRINT_HEADER(LGC4,UNITS_MET)
	          ENDIF
	      ENDIF
	   ENDIF
	ENDIF
C
C Initialise the DTI file data area to the DTMCREATE package defualt 
C null value (-32767)
	IF (OK) THEN
	   OK=DTI_INIT_DATA(LGC4,NULL)
	ENDIF
	IF (.NOT.OK) THEN
	   CALL LSL_PUTMSG(OK)
	   CALL LSL_ADDMSG(IERR)
	   OPNDTI=.FALSE.
	ENDIF
	RETURN
	END
