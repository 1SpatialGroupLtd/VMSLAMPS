


















                                  [1mLaser-Scan[0m [1mLtd.[0m


                            [1mPOLYGONS[0m [1m-[0m [1mAcceptance[0m [1mTests[0m


                           [1mIssue[0m [1m2.0[0m [1m(mod)[0m  [1m-[0m [1m02-Oct-1992[0m





























  Copyright (C) 2019 Laser-Scan Ltd
  Science Park, Milton Road, Cambridge, England CB4 4FY  tel: (0223) 420414

  "POLYGONS Acceptance"                           Category: Acceptance Tests
  Issue 2.0       Adrian Cuthbert                 19-Sep-1988
  Issue 1.0       Tim Hartnall, Martin Reid       15-Oct-1987
  Issue 1.0 (mod) K M Sutherland                  02-Oct-1992


  [1mPOLYGONS[0m [1mAcceptance[0m [1mtests[0m                                       Page 2


                                     CONTENTS


          1       Introduction . . . . . . . . . . . . . . . . . . . . 3
          2       Preparing for the Acceptance Tests . . . . . . . . . 3
          3       Invoking the Acceptance Tests  . . . . . . . . . . . 4
          4       The Acceptance Sequence  . . . . . . . . . . . . . . 4
          4.1       IPOLYGON - Generation Of Left/right Labelled Links 4
          4.2       ISTSEL - Selective Re-labelling And Elimination Of 
                    Links  . . . . . . . . . . . . . . . . . . . . . . 5
          4.3       POLMERGE - Selective Polygon Elimination And 
                    Merging  . . . . . . . . . . . . . . . . . . . . . 6
          4.4       IPOLYGON - Generation Of Closed Polygon Features . 6
          5       FINAL VERIFICATION . . . . . . . . . . . . . . . . . 8
          6       Conclusions  . . . . . . . . . . . . . . . . . . . . 9


  [1mPOLYGONS[0m [1mAcceptance[0m [1mtests[0m                                                 Page 3


  1  [1mIntroduction[0m

  This document  describes  the  acceptance  test  procedure  for  the  Laser-Scan
  POLYGONS  (IFF polygons package) which is part of the Laser-Scan LAMPS automated
  mapping system.  It assumes that the user is familiar with digital  cartography,
  with  the  POLYGONS  modules,  with the LITES2 map editor, the STRUCTURE package
  module ILINK, with LAMPS and with the VMS operating system.  See  the  "POLYGONS
  User  Guide",  and  the  "POLYGONS  Reference Manual" for further information on
  POLYGONS.

  The relevant data files and command files for the acceptance tests are  supplied
  by Laser-Scan on installation of the package.

  Note that Laser-Scan reserve the right  to  make  minor  modifications  to  this
  acceptance procedure to match their policy of continued software development.



  2  [1mPreparing[0m [1mfor[0m [1mthe[0m [1mAcceptance[0m [1mTests[0m

  Check  that  the  Laser-Scan-supplied  package   initialisation   command   file
  LSL$COM:POLYGONSINI.COM   has   been  invoked.   This  has  probably  been  done
  automatically on your behalf at login time.  A good check  is  to  use  the  DCL
  command:

          $ SHOW SYMBOL POLMERGE

  to verify that the DCL symbol for one of the POLYGONS package modules, POLMERGE,
  exists  and  points  to  the  program  image  file  of  the main POLYGONS module
  "LSL$EXE:POLMERGE.EXE".  If symbol POLMERGE  is  not  defined  then  invoke  the
  package initialisation command file by giving the DCL command:

          $ @LSL$COM:POLYGONSINI

  then repeat the check for the existence of DCL symbol POLMERGE.

  The acceptance test command procedure  will  check  for  the  existence  of  the
  required  acceptance  test  data  files in the directory defined by logical name
  LSL$IF.  Checks will also be made for the existence of other required acceptance
  test data files in their usual directory on the Laser-Scan software distribution
  directory tree.  It will set up a logical name LSL$POLYGONS_ACCEPT to  point  to
  the public tree directory.  It will also copy the initial IFF data file into the
  working directory pointed at by LSL$IF.

  The files used for the POLYGONS acceptance tests are:

       1.  LSL$IF:POLYGONSACCEPT.IFJ

           This file contains  junction-structured  linework  defining  a  set  of
           polygon boundaries.  The links within this file are unlabelled.

       2.  LSL$IF:POLYGONSACCEPT.SEED

           This file contains single point text  features  used  by  the  POLYGONS
           utility  IPOLYGON as polygon seed points, from which polygon labels are
           derived.


  [1mPOLYGONS[0m [1mAcceptance[0m [1mtests[0m                                                 Page 4


  3  [1mInvoking[0m [1mthe[0m [1mAcceptance[0m [1mTests[0m

  Invoke the acceptance test command procedure by giving the DCL command

          $ @LSL$COM:POLYGONS_ACCEPT

  The test command procedure explains briefly the various phases of the acceptance
  procedure.

  After copying the relevant IFF files to LSL$IF:, it offers  you  the  option  of
  using  the  LITES2  map  editor  to  inspect the initial data.  This is a set of
  unlabelled links.  After each phase it offers you the option of using the LITES2
  map editor to inspect the results of the processing.  Remember to EXIT LITES2 in
  order to rejoin the acceptance tests.



  4  [1mThe[0m [1mAcceptance[0m [1mSequence[0m

  At the start of these tests, the original data file contains junction structured
  links.   The  acceptance  procedure  steps  exercise  all three POLYGONS package
  modules in 4 stages.

       1.  [1mIPOLYGON[0m - creates polygons and assigns seed  points  to  output  links
           having left/right polygon labels.

       2.  [1mISTSEL[0m - selectively relabels left/right  labelled  links  and  removes
           left/right  labelled  links  on  the  basis  of  user  specified  label
           combinations.

       3.  [1mPOLMERGE[0m -  internally  generates  polygons  from  left/right  labelled
           links.   These  polygons  are then selectively eliminated and merged on
           the  basis  of  polygon  area  and   user   specified   polygon   label
           combinations.

       4.  [1mIPOLYGON[0m - creates closed polygon features, which include  first  order
           nested polygons, from the left/right labelled links output by POLMERGE




  4.1  [1mIPOLYGON[0m [1m-[0m [1mGeneration[0m [1mOf[0m [1mLeft/right[0m [1mLabelled[0m [1mLinks[0m

  In this phase, IPOLYGON is used to combine the junction  structured  links  file
  with  the data in the seed point file to create junction structured links having
  left/right polygon labels.

  The command line specified is:
          
  [1m$[0m [1mIPOLYGON/LOG/LITES2/SEGMENTS=(JUNCTIONS,LABEL,[0m [1m-[0m
  [1m_$        OUTPUT:POLYGONS_ACCEPT.LNK) -[0m
  [1m_$        /SEED=(FC:28,FILE:POLYGONS_ACCEPT.SEED) -[0m
  [1m_$        POLYGONS_ACCEPT.IFJ[0m

  Note  that  IPOLYGON  offers  a  LITES2  guidance  file  option  to   facilitate
  semi-automatic correction of data errors.


  [1mPOLYGONS[0m [1mAcceptance[0m [1mtests[0m                                                 Page 5


  Note the output from IPOLYGON showing progress through the  operation,  and  the
  polygon  formation statistics.  86 segments and 33 seed points are read in.  One
  of these seed points is disregarded because of multiple seed points in the  same
  polygon.   All  polygons  contain  at  least  one  seed point.  Three passes are
  required to resolve polygon nesting.

  Note  that  $STATUS  is  returned  as   "%SYSTEM-S-NORMAL,   normal   successful
  completion".

  You are then asked if you wish to  inspect  the  results  of  this  phase  using
  LITES2.   If  you  answer  yes,  then the IFF data file is read in to LITES2 and
  displayed (assuming LITES2 and suitable graphics hardware are available).

  To facilitate verification, the source seed  point  features  are  displayed  in
  conjunction  with  the  left/right  labelled links.  The disgarded seed point is
  located using  the  LITES2  guidance  file.   This  can  be  invoked  by  typing
  "@POLYGONS_ACCEPT" at the LITES2 command line.

  All the links in the links IFF file will now have type 4 and  5  ACs  (Ancillary
  Codes)  which contain the polygon labels for the left and right side of the link
  respectively.  The left/right polygon labels match the source seed point texts.

                                                                 [1mPass [ ]/Fail [ ][0m



  4.2  [1mISTSEL[0m [1m-[0m [1mSelective[0m [1mRe-labelling[0m [1mAnd[0m [1mElimination[0m [1mOf[0m [1mLinks[0m

  In this phase, ISTSEL is used to change the left/right  labels  of  links  which
  have  the  polygon  codes  "Lk" and "Kx" to "Replaced code".  Where this process
  results in a link having the same polygon label on both the left and right  hand
  side,  the  link is omitted form the output file.  IFF junction structure is not
  preserved by this simple, but very quick program.

  The command line specified is:
          
  [1m$[0m [1mISTSEL/LOG/DEF_FILE=LSL$POLYGONS_ACCEPT:POLYGONS_ACCEPT.DAT[0m [1m-[0m
  [1m_$ [0m [1mPOLYGONS_ACCEPT.LNK[0m [1mPOLYGONS_ACCEPT.SEL[0m

  Note the speed of execution.  86 segments are analysed, 3 of which are deleted.

  Note  that  $STATUS  is  returned  as   "%SYSTEM-S-NORMAL,   normal   successful
  completion".

  You are then asked if you wish to  inspect  the  results  of  this  phase  using
  LITES2.   If  you  answer  yes,  then the IFF data file is read in to LITES2 and
  displayed (assuming LITES2 and suitable graphics hardware are available).

  To facilitate verification, the original left/right labelled links are displayed
  in conjunction with the re-labelled left/right links.

                                                                 [1mPass [ ]/Fail [ ][0m


  [1mPOLYGONS[0m [1mAcceptance[0m [1mtests[0m                                                 Page 6


  4.3  [1mPOLMERGE[0m [1m-[0m [1mSelective[0m [1mPolygon[0m [1mElimination[0m [1mAnd[0m [1mMerging[0m

  In this phase, POLMERGE is used to  selectively  eliminate  and  merge  polygons
  defined  by the left/right labelled links produced by IPOLYGON.  The Lookup file
  specified defines that polygons  with  codes  "Lk"  and  "Kx"  are  merged  into
  neighbouring  polygons with codes "Ab" and "Eq" respectively, provided they have
  an area less than the merge tolerance of  150000  square  IFF  units.   Isolated
  polygons  with  codes  "Lk"  and "Kx" are eliminated if they have area less than
  60000 square IFF units.

  The command line specified is:

  [1m$[0m [1mPOLMERGE/LOG/LOOKUP=LSL$POLYGONS_ACCEPT:PMERGE_LOOKUP.DAT-[0m 
  [1m_$[0m [1m/ELIMINATE/MERGE=(BY_LOOKUP)/AREA=(MERGE_TOL:150000,ELIM_TOL:60000)-[0m
  [1m_$[0m [1mPOLYGONS_ACCEPT.LNK[0m [1mPOLYGONS_ACCEPT.PMG[0m

  Note the log of  progress  through  the  operation,  and  the  statistics.   One
  isolation  is  a  candidate  for  elimination,  and  is removed.  8 polygons are
  candidates for merging but coding constraints specified in the lookup file  mean
  that  only  7  are  actually  merged.   62  segments  are  written to the output
  junction-structured IFF file.

  Note  that  $STATUS  is  returned  as   "%SYSTEM-S-NORMAL,   normal   successful
  completion".

  You are then asked if you wish to  inspect  the  results  of  this  phase  using
  LITES2.   If  you  answer  yes,  then the IFF data file is read in to LITES2 and
  displayed (assuming LITES2 and suitable graphics hardware are available).

  To facilitate verification, the original left/right labelled links are displayed
  in  conjunction  with the re-labelled left/right links after polygon merging and
  elimination.

                                                                 [1mPass [ ]/Fail [ ][0m



  4.4  [1mIPOLYGON[0m [1m-[0m [1mGeneration[0m [1mOf[0m [1mClosed[0m [1mPolygon[0m [1mFeatures[0m

  In this phase, IPOLYGON is used to form complete closed  polygon  features  from
  the  left/right labelled links produced by POLMERGE.  Nested polygons are joined
  to their 'parent' by means of invisible (or "pen-up") moves.

  The command line specified is:

  [1m$[0m [1mIPOLYGON/LOG/LRCODE/POLYGONS=(LABEL,FC:4,LAYER:100 -[0m
  [1m_$        OUTPUT:POLYGONS_ACCEPT.POL) -[0m
  [1m_$        POLYGONS_ACCEPT.PMG[0m

  Note the log of progress through the operation, and the statistics.  25 polygons
  boundary features are written to the output IFF file.

  Note  that  $STATUS  is  returned  as   "%SYSTEM-S-NORMAL,   normal   successful
  completion".


  [1mPOLYGONS[0m [1mAcceptance[0m [1mtests[0m                                                 Page 7


  You are then asked if you wish to  inspect  the  results  of  this  phase  using
  LITES2.   If  you  answer  yes,  then the IFF data file is read in to LITES2 and
  displayed (assuming LITES2 and suitable graphics hardware are available).

  To facilitate verification, the polygon boundaries are displayed (in a different
  colour) on top of the original left/right labelled links.  This allows the links
  that have been lost during polygon merging to be identified.

                                                                 [1mPass [ ]/Fail [ ][0m


  [1mPOLYGONS[0m [1mAcceptance[0m [1mtests[0m                                                 Page 8


  5  [1mFINAL[0m [1mVERIFICATION[0m

  This is the end of the formal acceptance test command procedure.  The  following
  files have been created from the original links IFF file:

  Original links IFF filename:            LSL$IF:POLYGONS_ACCEPT.IFJ
  Original seed point IFF filename:       LSL$IF:POLYGONS_ACCEPT.SEED

  +-----------------------------------------------------------------------+
  | PHASE      |  FILE CHARACTERISTIC             |      FILE             |
  +------------+----------------------------------+-----------------------+
  | IPOLYGON   |  links given left/right labels   |  POLYGONS_ACCEPT.LNK  |
  | ISTSEL     |  links re-labelled, some removed |  POLYGONS_ACCEPT.SEL  |
  | POLMERGE   |  links selectively removed       |  POLYGONS_ACCEPT.PMG  |
  | IPOLYGON   |  complete closed polygons        |  POLYGONS_ACCEPT.POL  |
  +-----------------------------------------------+-----------------------+


  These files are available in the directory pointed to by  logical  name  LSL$IF:
  for further verification, if required.

  The following files can be used to view the output of the acceptance test  using
  LITES2.   These  can  be  found  in the directory pointed to by the logical name
  LSL$POLYGONS_ACCEPT:.

          FRT  (feature representation table)     POLYGONS_ACCEPT.FRT
          SRI  (feature representation IFF file)  POLYGONS_ACCEPT.SRI
          TRI  (text representation IFF file)     POLYGONS_ACCEPT.TRI



  [1mPOLYGONS[0m [1mAcceptance[0m [1mtests[0m                                                 Page 9


  6  [1mConclusions[0m

  This completes  the  acceptance  tests  for  the  Laser-Scan  POLYGONS  software
  package.

  [1mOverall[0m [1mPass [ ]/Fail [ ][0m

  [1mComments:[0m





  [1mCustomer[0m [1mRepresentative:[0m                                [1mDate:[0m

  [1mLaser-Scan[0m [1mRepresentative:[0m                              [1mDate:[0m
