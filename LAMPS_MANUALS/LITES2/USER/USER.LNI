


















                                  [3mLaser-Scan[0m [3mLtd.[0m


                                       [3mLITES2[0m

                            [3mCartographic[0m [3mEditing[0m [3mSystem[0m

                                    [3mUser's[0m [3mGuide[0m


                              [3mIssue[0m [3m3.0[0m [3m-[0m [3m06-Mar-1986[0m

























  Copyright (C) 2019 Laser-Scan Ltd
  Science Park, Milton Road, Cambridge, England CB4 4FY  tel: +44 (0) 1223 420414

  Document "LITES2 User"                          Category "USER"
  Document Issue 1.0      R J Hulme               18-Feb-1985
  Document Issue 2.0      R J Hulme               07-Mar-1985
  Document Issue 3.0      R J Hulme               06-Mar-1986


  LITES2 User's Guide                                            Page ii
  Contents


                                     CONTENTS



  CHAPTER 1       INTRODUCTION

          1.1     Intended Audience  . . . . . . . . . . . . . . . . 1-1
          1.2     Use of this Manual . . . . . . . . . . . . . . . . 1-1
          1.3     Program Description  . . . . . . . . . . . . . . . 1-1
          1.4     Environment  . . . . . . . . . . . . . . . . . . . 1-2
          1.5     Input Data . . . . . . . . . . . . . . . . . . . . 1-2
          1.6     Feature Selection  . . . . . . . . . . . . . . . . 1-2
          1.7     Command States . . . . . . . . . . . . . . . . . . 1-2
          1.8     Command Language . . . . . . . . . . . . . . . . . 1-3


  CHAPTER 2       STARTING A SESSION

          2.1     Running the program  . . . . . . . . . . . . . . . 2-1
          2.2     Initialisation . . . . . . . . . . . . . . . . . . 2-1
          2.3     Set Up . . . . . . . . . . . . . . . . . . . . . . 2-2


  CHAPTER 3       SOME BASIC COMMANDS

          3.1     Command Information  . . . . . . . . . . . . . . . 3-1
          3.2     Cursor Movement  . . . . . . . . . . . . . . . . . 3-1
          3.3     Windowing and Redrawing the Map  . . . . . . . . . 3-2


  CHAPTER 4       SIMPLE FEATURE OPERATIONS

          4.1     Identifying a Feature  . . . . . . . . . . . . . . 4-1
          4.2     Abandoning an Operation  . . . . . . . . . . . . . 4-1
          4.3     Examining a Feature  . . . . . . . . . . . . . . . 4-1
          4.4     Deleting a Feature . . . . . . . . . . . . . . . . 4-2
          4.5     Recovering a Feature . . . . . . . . . . . . . . . 4-2
          4.6     Searching for Selected Features  . . . . . . . . . 4-2


  CHAPTER 5       EDITING LINES

          5.1     Making Changes to a Feature  . . . . . . . . . . . 5-1
          5.2     Moving a Feature . . . . . . . . . . . . . . . . . 5-2
          5.3     Copying a Feature  . . . . . . . . . . . . . . . . 5-2
          5.4     Joining Features . . . . . . . . . . . . . . . . . 5-3
          5.5     Tying Features . . . . . . . . . . . . . . . . . . 5-3
          5.6     Closed Loops . . . . . . . . . . . . . . . . . . . 5-4
          5.7     Removing a Data Point  . . . . . . . . . . . . . . 5-4
          5.8     Inserting a Data Point . . . . . . . . . . . . . . 5-4
          5.9     Editing a Data Point . . . . . . . . . . . . . . . 5-5
          5.10    Deleting Part of a Feature . . . . . . . . . . . . 5-5
          5.11    Changing, or Copying and Changing Part of a 
                  Feature  . . . . . . . . . . . . . . . . . . . . . 5-6
          5.12    Moving, or Copying and Moving Part of a Feature  . 5-7
          5.13    Extending a Feature  . . . . . . . . . . . . . . . 5-7


  LITES2 User's Guide                                           Page iii
  Contents


          5.14    Replacing Part of a Feature  . . . . . . . . . . . 5-8


  CHAPTER 6       EDITING TEXTS AND SYMBOLS

          6.1     Making Changes to a Text or Symbol . . . . . . . . 6-1
          6.2     Moving a Text or Symbol  . . . . . . . . . . . . . 6-1
          6.3     Copying a Text or Symbol . . . . . . . . . . . . . 6-2
          6.4     Changing the Size of a Text or Scaled Symbol . . . 6-2
          6.5     Rotating a Text, Oriented Symbol or Scaled Symbol  6-2
          6.6     Editing a Text String  . . . . . . . . . . . . . . 6-3
          6.7     Changing the Size and Orientation of a Scaled 
                  Symbol . . . . . . . . . . . . . . . . . . . . . . 6-3


  CHAPTER 7       CREATING NEW FEATURES

          7.1     Creating a Line Feature  . . . . . . . . . . . . . 7-1
          7.2     Closed Loops . . . . . . . . . . . . . . . . . . . 7-1
          7.3     Creating a Text Feature  . . . . . . . . . . . . . 7-2
          7.4     Creating a Symbol Feature  . . . . . . . . . . . . 7-2


  CHAPTER 8       FINISHING A SESSION

          8.1     Normal Completion  . . . . . . . . . . . . . . . . 8-1
          8.2     Ignoring all Editing . . . . . . . . . . . . . . . 8-1














                                     CHAPTER 1

                                    [3mINTRODUCTION[0m



  1.1  [3mIntended[0m [3mAudience[0m

  This manual is intended as the introductory guide to the use of  the  Laser-Scan
  Cartographic  Editor  LITES2.  It describes the basic operations required to run
  the program, initialise it, read in and draw map  data,  make  some  edits,  and
  finally  preserve  the  edited  data in a new file. It is assumed that users are
  already familiar with  general  use  of  the  equipment  and  the  DEC  (Digital
  Equipment  Corporation)  VAX/VMS  operating  system,  and with the principles of
  digital cartography.

  For a more detailed description of particular commands, and for a description of
  many commands which are not used in a simple editing session, you should consult
  the "LITES2 Reference Manual". Note that the reference manual assumes  that  you
  are already familiar with the contents of this document.



  1.2  [3mUse[0m [3mof[0m [3mthis[0m [3mManual[0m

  Chapter 1 is devoted to background information,  and  introduces  users  to  the
  concepts  involved,  as  well  as  providing  a broad description of some of the
  facilities available. It is  advisable  to  read  through  this  chapter  before
  starting a LITES2 editing session.

  The remaining chapters take you  through  a  simple  editing  session,  and  the
  easiest  way  to  learn about LITES2 is to follow these instructions at a LITES2
  workstation. Your site will probably have an example data  file,  which  may  be
  used as the input map for this purpose.

  In this manual the commands you have to give are printed in bold block capitals,
  and  are  separated  from  the rest of the text for easy reference. Sequences of
  commands separated by slashes ( / ) mean that any number of those  commands  can
  be used, in any order.



  1.3  [3mProgram[0m [3mDescription[0m

  LITES2, the Laser-scan (second generation) InTeractive  Editing  System,  is  an
  interactive graphical editing program which has been designed to be particularly
  suitable for work with cartographic type data. It can, however, be used on other
  types of feature-orientated data, and there are facilities for reading, drawing,


  LITES2 User's Guide                                                     Page 1-2
  Introduction


  amending, creating, and deleting features. The program is a reimplementation  of
  the  previous  LSL (Laser-Scan) cartographic editor LITES1 (also variously known
  as LITES, MADES, IGES or SOLADI)



  1.4  [3mEnvironment[0m

  LITES2 will run on a DEC VAX series computer running  under  the  VMS  operating
  system,  and  can  be  used  without  graphic  interaction on any DEC-compatible
  terminal. For graphic interaction an LSL-supported GKS (Graphical Kernel System)
  workstation  configuration  is  required.  A  typical  example  might include an
  alphanumeric terminal, a graphics screen and a digitising table.

  LITES2 needs to read various files of  information  in  order  to  operate,  and
  these,  together  with  its data files are located by means of standard 'logical
  names'. These have to be set up by the system manager, and the  operator  should
  not  have  to  be  concerned  with  them.  They  are usually set up in a central
  standard  login  command  file,  together  with  definitions  of   the   command
  abbreviations required to run the program.



  1.5  [3mInput[0m [3mData[0m

  LITES2 is used to display and edit map data which is contained in IFF  (Internal
  Feature  Format)  files.  (IFF  is the standard Laser-Scan format for map data.)
  Each IFF file contains a single map, and data within a map may be  grouped  into
  layers  (sometimes known as overlays). The basic elements of map data are called
  features, and the editor deals with a total of twelve  different  categories  or
  graphical  types  of  features.  For  the  purposes of feature identification in
  LITES2 these are divided into four groups,  namely  lines,  circles,  texts  and
  symbols.  Further  details  of  feature  representation  can  be  found  in  the
  "Introductory Guide to Feature Representation on Laser-Scan Display and Plotting
  Devices", and in the "FRTLIB Reference Manual".



  1.6  [3mFeature[0m [3mSelection[0m

  Two fundamental concepts of the editor are those of the  found-feature  and  the
  feature-in-hand.  The  found-feature is a feature selected by the operator to be
  the subject of  editor  operations.  When  an  editing  command  is  given,  any
  found-feature  becomes the feature-in-hand in order that a second feature can be
  found if needed for  the  editing  operation.  The  current  found-feature,  and
  feature-in-hand, if any, are highlighted in refresh mode on the display screen.



  1.7  [3mCommand[0m [3mStates[0m

  LITES2 always operates in one or other of a  small  number  of  command  states.
  Within  each  state,  a given range of commands is valid and certain commands or
  operator actions cause the program to move between  states.  Some  commands  are
  valid  in  all states, while others are limited to only a few states. The states
  are listed below -


  LITES2 User's Guide                                                     Page 1-3
  Introduction


        *  INITIAL state is entered at the start of a session, and it is  in  this
           state  that  things like options, menus, attribute files and data files
           are specified.

        *  READY state is the principal operating level of  the  editor,  and  the
           majority of commands are available in this state

        *  LINE state is entered when the found-feature is linear

        *  CIRCLE state is entered when the found-feature is circular

        *  TEXT state is entered when the found-feature is a text

        *  SYMBOL state is entered when the found-feature is a symbol

        *  EDIT state is entered when complex editing operations are performed  on
           linear or circular features

        *  MODIFY state is entered when complex editing operations  are  performed
           on text or symbol features

        *  ON state is entered by  commands  which  result  in  the  cursor  being
           constrained on a linear or circular feature

        *  CONSTRUCT state is entered when a new linear  or  circular  feature  or
           part feature is being digitised

        *  RECOVER state is entered when the found-feature is a deleted feature

        *  WINDOW state is entered during definition of  an  area  of  map  to  be
           enlarged onto the graphics screen.

        *  MACRO state is entered while defining macro commands.

        *  AC state is entered to allow editing of ancillary coding




  1.8  [3mCommand[0m [3mLanguage[0m

  A primitive command in LITES2 consists of at least a primary  command,  followed
  in  some  cases  by one of several secondary commands. The primary command, with
  its secondary command if present, may be  followed  by  compulsory  or  optional
  arguments.  The  number  and type of arguments depends on the command, but these
  can be integer numbers, real numbers, text, or a filename.

  Primary and secondary commands, as well as macros (see below), can be  shortened
  to  the  minimum  non-ambiguous  abbreviation.  They can be given to the program
  either from the keyboard, from the menu, or from any  of  the  digitising  table
  cursor puck buttons. The menu and puck buttons are simply quick ways of entering
  commonly used commands, and you can use LITES2 without issuing commands in  this
  way.


  LITES2 User's Guide                                                     Page 1-4
  Introduction


  Usually commands are terminated by end of line (carriage  return),  but  several
  commands  can  be  given  per  line if separated by # which is treated as end of
  line.

  There are facilities in LITES2 for creating  your  own  commands,  called  macro
  commands,  from  combinations  of primitive commands, @file commands (see below)
  and other macros. Similarly,  sequences  of  frequently  used  commands  can  be
  prepared  in  command  files,  which can be executed by typing @ followed by the
  filename. The commands within the files can be primitive  commands,  macros,  or
  @file commands.

  It is possible to alter the flow of control within macros or  command  files  by
  means  of  special  commands  which allow conditional execution and jumps. These
  commands can be used in conjunction with LITES2 variables, which can  be  either
  system variables or ones defined by the user.

  Although it is quite feasible to operate LITES2 using primitive  commands  alone
  (and  this  is  the method employed in this guide), most installations will make
  full use of the facilities provided by the command language which  is  indeed  a
  very powerful editing tool.

  Full details of the command language facilities are  described  in  the  "LITES2
  Reference Manual"














                                     CHAPTER 2

                                 [3mSTARTING[0m [3mA[0m [3mSESSION[0m



  2.1  [3mRunning[0m [3mthe[0m [3mprogram[0m

  In order to run LITES2, you must be logged in to VMS at  a  terminal.  See  your
  system manager if you do not have the Username and Password required to do this.

  On systems running on LITES1  workstations,  you  may  have  to  run  a  special
  start-up  sequence  at  the beginning of the day (or after the computer has been
  unavailable). If what you type at the terminal appears  on  both  screens,  then
  perform  this procedure - it normally requires you to log on as a user "WOSP" or
  "MADES", with no password. This will perform various actions (including clearing
  the  graphics screen), and will then log out again. The system is then ready for
  your use.

  At some sites, you will be prompted for what you want to do, and will  not  have
  to  give  the  actual  command to start up LITES2. However, if you are presented
  with the "$" (dollar) prompt, then you can start up the program by typing

            [1mLITES2[0m

  The program will announce itself as

            LITES2 V[n] of [hh:mm:ss dd-mmm-yy],

  where [n] is the version number, and [hh:mm:ss dd-mmm-yy] is the time  and  date
  of  linking  of  this  release.  This  is  followed  by a message indicating the
  licensed users of this version.

  There will then be a pause while first  stage  initialisation  is  carried  out,
  normally  followed  by  execution of initialisation command files. Messages will
  appear whenever command files are  opened  or  closed,  and  you  will  then  be
  presented with a prompt:

            *

  This is an asterisk by default, but may have been changed during initialisation.



  2.2  [3mInitialisation[0m

  INITIAL state is the part of the session where you tell the  program  what  maps
  you  want  to  read  in,  what hardware (of that available) you want to use, and


  LITES2 User's Guide                                                     Page 2-2
  Starting a Session


  generally set up the environment within which the rest of the  session  will  be
  conducted.

  Some of this work will already have been done for you; each site has a  standard
  initialisation  command  file,  which  is read in and obeyed by LITES2 before it
  gives you that first prompt. This will do  things  like  defining  the  commands
  attached  to  the puck buttons, setting up the various menus that you might use,
  and specifying options.

  When you get the first prompt, the program will still be in INITIAL  state,  and
  you  can  then  give  some  of  your  own initialisation commands. Since you are
  probably using LITES2 for the first time, try typing the command

            [1mENABLE[0m [1mLEARNER[0m

  This option causes learner-aid messages to be output whenever errors  occur,  in
  addition to the normal error messages. The learner messages usually indicate the
  resulting program action, or give guidance as to what you should do next.

  You can cancel options using the DISABLE command. Try

            [1mDISABLE[0m [1mSTATUS[0m

  and

            [1mENABLE[0m [1mSTATUS[0m

  and note what happens to the status line on the terminal screen.

  Before reading in any data, the program requires the FRT, TRI and SRI  files  to
  be  defined.  The necessary commands will probably have been set up for you in a
  command file, so you can simply type

            [1m@EXAMPLE.LCM[0m

  where EXAMPLE.LCM is the command file to be obeyed.

  The IFF command gives the program the information required for  reading  in  the
  map data. For a single map, simply type

            [1mIFF[0m [1mEXAMPLE.IFF[0m

  where EXAMPLE.IFF is the IFF file. It is possible to read in several  maps,  and
  to  do  this  you would use the MAPS command followed by an IFF command for each
  map to be read in. Details can be found in the LITES2 Reference Manual.



  2.3  [3mSet[0m [3mUp[0m

  After the last IFF command has been issued, you may be prompted to set  up  your
  menu(s), map(s), and tracking area, in turn.

  Whether or not you are prompted to set up menus depends on the  number  of  MENU
  commands  given  during  initialisation.  If a menu is to be set up, you will be
  prompted to digitise each of the four corner points, in the order  NW,  SW,  SE,


  LITES2 User's Guide                                                     Page 2-3
  Starting a Session


  NE.

  If you have not disabled map setup with the SETUP  NONE  command,  you  will  be
  prompted  to  digitise  the  monument  points on the map or maps attached to the
  table. For example, for a four point setup (SETUP FOUR), you will be prompted to
  digitise the corner points in the same order as for menus. If you have more than
  one map, you will be prompted to set each one up in the order that you requested
  them.

  Lastly, you will be prompted to set up a tracking area  on  the  table,  if  the
  TRACK command was given during initialisation. Again, the four corner points are
  digitised in the order NW, SW, SE, NE.

  During set up, the last two buttons  on  the  puck  have  special  meaning.  For
  example, on a 16 button puck with the following layout:

           1       2       3       4

           5       6       7       8

           9      10      11      12

          13      14      15      16

  these would be buttons 15 and 16 (if all 16 buttons are in use as  a  result  of
  the PUCK command).

        *  Pressing any button except for the last two (1 to 14  in  the  example)
           will digitise a corner point or monument point.

        *  Pressing the last button (button 16) will  abandon  the  setup  of  the
           current  menu,  map  or  tracking  area. This facility is useful if you
           happen to make a mistake; the set up can be repeated  using  the  SETUP
           AGAIN command (see below).

        *  Pressing the last but one button (button 15) will use the  values  (for
           the  current  map,  menu  or  tracking  area) that were setup last time
           LITES2 was run at this workstation. This assumes that

           1.  the same map, menu or  tracking  area  was  used  during  the  last
               session, and was set up
           2.  the map or menu has not been moved since then, and the map document
               has not warped


           Note that these two items are not checked by LITES2, and rely upon your
           sense.


  When the set up has been completed, the map data is read  in  to  the  workspace
  files  and  the  graphics  are  drawn on the screen(s). (The workspace files are
  simply copies of the IFF files.) A message will  appear  at  the  terminal  when
  reading in has finished, and the program will be in READY state.


  LITES2 User's Guide                                                     Page 2-4
  Starting a Session


  If you made a major mistake during set up and abandoned it, you can  now  repeat
  the complete set up by typing

            [1mSETUP[0m [1mAGAIN[0m

  (which is valid only in READY state). The set up sequence will start again  from
  the  beginning; remember that you can press button 15 to use the previous values
  for the parts of the set up which were not abandoned.

  You are now ready to start editing.














                                     CHAPTER 3

                                [3mSOME[0m [3mBASIC[0m [3mCOMMANDS[0m



  3.1  [3mCommand[0m [3mInformation[0m

  You can get information about commands using the VAX/VMS help facility. Type the
  command

            [1mHELP[0m

  to display a list of all of the LITES2 commands. Details of individual  commands
  can  be  obtained  by  typing the HELP command with the command you want to know
  about as a text argument. Try

            [1mHELP[0m [1mENABLE[0m

  and

            [1mHELP[0m [1mENABLE[0m [1mSTATUS[0m

  In order to find out all the commands available in the current state,  type  the
  command

            [1mSHOW[0m [1mCOMMANDS[0m



  3.2  [3mCursor[0m [3mMovement[0m

  The refresh cursor cross on the screen can be moved in several  ways.  Type  the
  command

            [1mPOSITION[0m [1m100[0m [1m100[0m

  and note the position of the cross. Now move the digitising table cursor puck to
  a new position and press the appropriate button to give the command

            [1mNULL[0m

  (Although technically incorrect, your cursor button will  probably  be  labelled
  with  the  command  POSITION  for  this  operation; this is for simplicity.) The
  screen cross should now appear appear at the corresponding position.


  LITES2 User's Guide                                                     Page 3-2
  Some Basic Commands


  The digitising table tracking area corresponds to the area shown on the  screen,
  although  the  area defined may be a different size to the screen. If you have a
  tracking area set up, move the cursor puck onto it, and give the command

            [1mNULL[0m

  Repeat this on different parts of  the  tracking  area,  and  note  the  various
  positions of the cross on the screen.



  3.3  [3mWindowing[0m [3mand[0m [3mRedrawing[0m [3mthe[0m [3mMap[0m

  If you wish to scale up a particular part of the map  on  the  screen  then  the
  windowing  facility  can  be  used. This is useful if the map is cluttered or if
  greater accuracy is required. First position the cursor  over  the  bottom  left
  hand  corner  of  the required window on the digitising table or screen and give
  the command

            [1mWINDOW[0m or [1mWINDOW[0m [1mMAP[0m

  Now position the cursor on the required top  right  hand  corner  and  give  the
  command

            [1mEND[0m

  The scaled up window will then be drawn.

  If you wish to scale up part of this window, position the cursor at  the  bottom
  left hand corner of the new window and issue

            [1mWINDOW[0m [1mSCREEN[0m

  Now position the cursor on the top right hand corner, give the command

            [1mEND[0m

  and the new window will be drawn.

  To redraw the current window after you have done some editing, use the command

            [1mDRAW[0m or [1mDRAW[0m [1mSCREEN[0m

  If you want the whole map back, use

            [1mDRAW[0m [1mMAP[0m














                                     CHAPTER 4

                             [3mSIMPLE[0m [3mFEATURE[0m [3mOPERATIONS[0m



  4.1  [3mIdentifying[0m [3ma[0m [3mFeature[0m

  By positioning the refresh cursor cross on a feature to be edited and giving the
  command

            [1mFIND[0m

  the feature itself is highlighted in refresh. Once a feature has been  found  in
  this manner it is ready to be operated on. If there are many features very close
  together then repeatedly giving the FIND command  (without  moving  the  cursor)
  will find up to four features in turn. Try finding a few features, and note that
  the editor will move into LINE, CIRCLE, TEXT or SYMBOL state as appropriate.



  4.2  [3mAbandoning[0m [3man[0m [3mOperation[0m

  Find a feature using

            [1mFIND[0m

  then give the command

            [1mABANDON[0m

  and see what happens. If you wish to exit from the current  state  at  any  time
  then  the  ABANDON  command  will  abort the current operation and return you to
  READY state.



  4.3  [3mExamining[0m [3ma[0m [3mFeature[0m

  The various attributes of a feature (eg. feature serial  number,  feature  code,
  size etc) can be examined. First find a feature using

            [1mFIND[0m

  and then try


  LITES2 User's Guide                                                     Page 4-2
  Simple Feature Operations


            [1mEXAMINE[0m

  This displays a summary of the feature attributes. Note that the program remains
  in the state it was in when the feature was found.



  4.4  [3mDeleting[0m [3ma[0m [3mFeature[0m

  In order to delete a feature, you first need  to  find  it  by  positioning  the
  cursor over it and giving the command

            [1mFIND[0m

  If the feature is highlighted in refresh then you have found it,  if  not,  then
  you must try again. Now give the command

            [1mDELETE[0m

  The feature will be scrubbed out and the editor will return to READY state.



  4.5  [3mRecovering[0m [3ma[0m [3mFeature[0m

  If you delete a feature by mistake then it is possible to recover it at any time
  during  the  editing session. First position the cursor over the deleted feature
  and give the command

            [1mRECOVER[0m

  This command acts in a similar way to FIND, so if the feature  does  not  appear
  refreshed,  try  again.  When  you  have successfully recovered the feature, the
  program will be in RECOVER state and you can give the command

            [1mEND[0m

  This command is used to complete many types of operation, and in  this  case  it
  retrieves  the  feature, terminates the operation, and takes the program back to
  READY state.



  4.6  [3mSearching[0m [3mfor[0m [3mSelected[0m [3mFeatures[0m

  In addition to FIND, feature identification can be  achieved  using  the  SEARCH
  command. SEARCH is like FIND, but is much more powerful in that it can carry out
  global searches rather than the local ones FIND does. Specified features can  be
  selected for identification, and one of the criteria on which identification can
  be based is the feature code. You will get a list of feature codes  for  various
  types of feature by giving the command

            [1mSHOW[0m [1mFCS[0m


  LITES2 User's Guide                                                     Page 4-3
  Simple Feature Operations


  Now issue the command

            [1mSELECT[0m [1mFCS[0m [1m49,315[0m

  to select all scaled symbols. You can check these selections using the command

            [1mSHOW[0m [1mSELECTIONS[0m

  If you next give the command

            [1mSEARCH[0m [1mALL[0m

  the program will start a spiral search from the current cursor position and will
  identify the nearest scaled symbol. Giving the command

            [1mSEARCH[0m [1mNEXT[0m

  will result in continuation of the spiral search and the next scaled symbol will
  be  identified. The SEARCH NEXT command can be repeated until all scaled symbols
  on the map have been identified. To have all features selected again, issue

            [1mSELECT[0m [1mALL[0m

  In many of the command sequences in this manual, the FIND command has been  used
  to  illustrate feature identification; using SEARCH would, of course, be equally
  good. It is also assumed that the appropriate selections have been made.














                                     CHAPTER 5

                                   [3mEDITING[0m [3mLINES[0m



  5.1  [3mMaking[0m [3mChanges[0m [3mto[0m [3ma[0m [3mFeature[0m

  You can change a feature attribute, for example the feature code,  by  first  of
  all issuing

            [1mFIND[0m

  on a line feature. The program will now be in LINE state, and you can change the
  feature code by giving the command

            [1mCHANGE[0m [1mFC[0m [1mn[0m

  where n is the new feature code. After changing the feature  code,  the  program
  returns  to  READY state. Now find the feature again and use EXAMINE and DRAW to
  check the changes made.

  It would become very tedious if you had to  find  the  feature  every  time  you
  wanted  to  make  a  change,  and so the MODIFY command allows multiple changes.
  First you need to issue

            [1mFIND[0m

  and then give the command

            [1mMODIFY[0m

  Note that the program has  entered  ON  state,  and  also  that  the  cursor  is
  constrained  to  move only on the feature. If, for example, you wanted to change
  the serial number and feature code, you would use the commands

            [1mCHANGE[0m [1mFSN[0m [1mn[0m

            [1mCHANGE[0m [1mFC[0m [1mn[0m

  where n is the new serial number or feature code. The command

            [1mEND[0m

  terminates the operation and takes the editor back to READY state.


  LITES2 User's Guide                                                     Page 5-2
  Editing Lines


  5.2  [3mMoving[0m [3ma[0m [3mFeature[0m

  In order to move a feature to a new position on the map, first give the command

            [1mFIND[0m

  followed by the commands

            [1mMODIFY[0m

            [1mMOVE[0m

  The MOVE command attaches the feature to the cursor, although the  feature  will
  not  be  drawn  in refresh on the screen. The program will now be in EDIT state,
  and you can move the feature around before issuing

            [1mEND[0m

  to deposit it in its new position. Note that on some displays the  feature  will
  also still be shown in its old position, until the screen is redrawn using DRAW.

  If the new feature is to have different  attributes,  you  can  use  the  CHANGE
  command  as  well as MOVE. If, however, the CHANGE command is not to be used, as
  in the sequence above, the MODIFY command can be omitted.



  5.3  [3mCopying[0m [3ma[0m [3mFeature[0m

  In order to make a copy of a line feature you must first issue

            [1mFIND[0m

  and then give the command

            [1mCOPY[0m

  This creates a new copy of the feature in its original position. If you want  to
  move the copy around, give the command

            [1mMOVE[0m

  followed by

            [1mEND[0m

  when the feature is in the desired position. The copied  feature  will  then  be
  drawn  in  its  new  position. As with MODIFY, you can use the CHANGE command as
  well as or instead of the MOVE command. In fact, the MODIFY  and  COPY  commands
  are  very  similar;  the former has the effect of deleting the original feature,
  while the latter preserves it.


  LITES2 User's Guide                                                     Page 5-3
  Editing Lines


  5.4  [3mJoining[0m [3mFeatures[0m

  To join two line features together you must first position the cursor  over  the
  end of one of the lines and then issue

            [1mFIND[0m

  You then need to give the command

            [1mJOIN[0m

  which puts the program into EDIT state. Now move the cursor to the  end  of  the
  other feature and issue

            [1mFIND[0m

  again. The cursor will now be attached to the ends of both features, and can  be
  moved to the desired position. The operation is terminated by giving the command

            [1mEND[0m

  By default, only line  features  with  the  same  feature  code  can  be  joined
  together.  However, this condition can be altered; if, for example, you want the
  feature serial numbers to be the same as well, you can use

            [1mMATCH[0m [1mFSN[0m

  before performing the join.



  5.5  [3mTying[0m [3mFeatures[0m

  When edge matching two adjacent maps it is often necessary to tie  two  ends  of
  the  same  feature  together  (not actually join them but line them up). This is
  done by positioning the cursor over one end and giving the command

            [1mFIND[0m

  followed by

            [1mTIE[0m

  Now position the cursor over the end of the other feature and issue

            [1mFIND[0m

  again. Both ends are now attached to the cursor which should  be  moved  to  the
  desired position on the boundary. The command

            [1mEND[0m

  will record this point and terminate the operation.


  LITES2 User's Guide                                                     Page 5-4
  Editing Lines


  5.6  [3mClosed[0m [3mLoops[0m

  Many features need to have their start and end points joined up so as to form  a
  closed loop. This is done by giving the command

            [1mFIND[0m

  followed by

            [1mLOOP[0m or [1mLOOP[0m [1mEXTEND[0m

  The former will move the first and last vertices to their mean position, and the
  latter  will  extend  the  first  and last spans of the feature to a new meeting
  point. The command

            [1mEND[0m

  should then be given to deposit the feature.



  5.7  [3mRemoving[0m [3ma[0m [3mData[0m [3mPoint[0m

  To remove a single point from within a line feature (eg to smooth out  a  kink),
  first issue

            [1mFIND[0m

  The cursor will jump onto the feature, and you can use the commands

            [1mFIRST[0m / [1mLAST[0m / [1mPREVIOUS[0m / [1mNEXT[0m / [1mVERTEX[0m [1mn[0m

  where n is the vertex number, to put the cursor onto  the  vertex  you  want  to
  delete. Now you can delete the point using

            [1mREMOVE[0m

  and you will find yourself back in READY state



  5.8  [3mInserting[0m [3ma[0m [3mData[0m [3mPoint[0m

  To introduce a new point into a line feature you first use

            [1mFIND[0m

  to get the feature into hand. Now you can use the commands

            [1mFIRST[0m / [1mLAST[0m / [1mPREVIOUS[0m / [1mNEXT[0m / [1mVERTEX[0m [1mn[0m

  to position the cursor onto the  vertex  next  to  the  new  point.  Giving  the
  commands


  LITES2 User's Guide                                                     Page 5-5
  Editing Lines


            [1mMIDDLE[0m / [1mFRACTION[0m [1mr[0m

  where r is he fraction along the span you want the cursor to be,  will  position
  the cursor between vertices. Issuing

            [1mINSERT[0m

  creates a new vertex attached to the cursor, which can be moved to  the  desired
  position. The command

            [1mEND[0m

  will terminate the operation and draw the feature with the new point.



  5.9  [3mEditing[0m [3ma[0m [3mData[0m [3mPoint[0m

  In order to reposition a particular point within a  line  feature  you  have  to
  locate the cursor on the point using the command

            [1mFIND[0m

  followed optionally by

            [1mFIRST[0m / [1mLAST[0m / [1mPREVIOUS[0m / [1mNEXT[0m / [1mVERTEX[0m [1mn[0m

  The command

            [1mEDIT[0m

  attaches the current vertex to the cursor, which can be moved around  until  the
  command

            [1mEND[0m

  is given.



  5.10  [3mDeleting[0m [3mPart[0m [3mof[0m [3ma[0m [3mFeature[0m

  In this and the remaining sections of this  chapter,  the  words  "position  the
  cursor"  are  highlighted  in a similar way to the commands, in order to clarify
  the sequences of operations.

  In order to delete a section from  within  a  line  feature  (resulting  in  two
  separate features) you must first issue

            [1mFIND[0m

  Now give the command

            [1mON[0m


  LITES2 User's Guide                                                     Page 5-6
  Editing Lines


  which constrains the cursor to move only on the feature. Next

            [1mposition[0m [1mthe[0m [1mcursor[0m

  onto the point at one end of the part to be removed, and give the command

            [1mDELETE[0m [1mPART[0m

  Note that the program has entered ON state (which is not connected with  the  ON
  command). You should now

            [1mposition[0m [1mthe[0m [1mcursor[0m

  at the other end, and give the command

            [1mEND[0m

  to delimit it and terminate the operation. The section indicated will be deleted
  and  scrubbed  out.  Note that it can be recovered again as for a whole feature,
  and will be retrieved as a separate feature.



  5.11  [3mChanging,[0m [3mor[0m [3mCopying[0m [3mand[0m [3mChanging[0m [3mPart[0m [3mof[0m [3ma[0m [3mFeature[0m

  To change only part of a line feature, find the first end  of  the  part  to  be
  changed using the sequence of operations

            [1mFIND[0m

            [1mON[0m

            [1mposition[0m [1mthe[0m [1mcursor[0m

  Next issue

            [1mMODIFY[0m [1mPART[0m or [1mCOPY[0m [1mPART[0m

            [1mCHANGE[0m [1mFSN[0m [1mn[0m

            [1mCHANGE[0m [1mFC[0m [1mn[0m

  to make the changes. Now

            [1mposition[0m [1mthe[0m [1mcursor[0m

  at the other end of the part to be changed and then issue

            [1mEND[0m

  to delimit the part and terminate the operation. If, having issued MODIFY  PART,
  the  CHANGE  commands  were  not given, the effect would simply be to divide the
  feature into three.


  LITES2 User's Guide                                                     Page 5-7
  Editing Lines


  5.12  [3mMoving,[0m [3mor[0m [3mCopying[0m [3mand[0m [3mMoving[0m [3mPart[0m [3mof[0m [3ma[0m [3mFeature[0m

  Part of a line feature can be modified or copied and then moved by first finding
  one end of the part to be copied using the sequence of operations

            [1mFIND[0m

            [1mON[0m

            [1mposition[0m [1mthe[0m [1mcursor[0m

  Now issue

            [1mMODIFY[0m [1mPART[0m or [1mCOPY[0m [1mPART[0m

  and note that the program is in ON state. To shift the new feature,  first  give
  the command

            [1mMOVE[0m

  You then have to

            [1mposition[0m [1mthe[0m [1mcursor[0m

  at the other end of the part being modified or copied, and define the end of the
  new feature by issuing the command

            [1mEND[0m

  The program is now in EDIT state (as a result of  the  MOVE  command),  the  new
  feature  is attached to the cursor, and you can move it to the desired position.
  Giving the command

            [1mEND[0m

  a second time will deposit the new feature and terminate the operation. As  with
  whole  features,  you  can  alter the attributes of the new feature by using the
  CHANGE command along with the MOVE command. When using MODIFY PART and MOVE, the
  deleted part of the original feature will still be shown on some displays, until
  the screen is redrawn using DRAW.



  5.13  [3mExtending[0m [3ma[0m [3mFeature[0m

  You may wish to extend one end of a line feature in the direction defined by the
  last two points. To do this you have to issue

            [1mFIND[0m

  followed optionally by

            [1mFIRST[0m / [1mLAST[0m / [1mPREVIOUS[0m / [1mNEXT[0m / [1mVERTEX[0m [1mn[0m


  LITES2 User's Guide                                                     Page 5-8
  Editing Lines


  to position the cursor on the end point of the feature. Giving the command

            [1mEXTEND[0m

  will constrain the cursor to move only along the end segment of the feature  and
  its  extensions.  The  program will now be in EDIT state, and when the cursor is
  positioned, the command

            [1mEND[0m

  will terminate the operation.



  5.14  [3mReplacing[0m [3mPart[0m [3mof[0m [3ma[0m [3mFeature[0m

  It is often necessary to add a new series of data points to a line and/or remove
  a series from a line, without splitting the line into two features. First issue

            [1mFIND[0m

  followed by

            [1mON[0m

  and then

            [1mposition[0m [1mthe[0m [1mcursor[0m

  at one end of the section to be changed. Now give the command

            [1mBRIDGE[0m

  and note that the program moves into CONSTRUCT state. The command

            [1mSTART[0m

  should then be given for each new point to be inserted, and the new part of  the
  feature  (except  for  the  first  segment)  will be drawn in refresh. If no new
  points are required, the START command need not be  used.  To  locate  the  last
  point of the section to be changed, use

            [1mFIND[0m

  and then

            [1mposition[0m [1mthe[0m [1mcursor[0m

  The program remains in CONSTRUCT state until the command

            [1mEND[0m

  which terminates the operation, is issued.














                                     CHAPTER 6

                             [3mEDITING[0m [3mTEXTS[0m [3mAND[0m [3mSYMBOLS[0m



  6.1  [3mMaking[0m [3mChanges[0m [3mto[0m [3ma[0m [3mText[0m [3mor[0m [3mSymbol[0m

  Attributes of texts and symbols can be changed in a similar way  to  lines.  You
  first have to identify a text or symbol using

            [1mFIND[0m

  Now try

            [1mCHANGE[0m [1mFSN[0m [1mn[0m

  to change the feature  serial  number.  Note  that  unlike  lines,  the  program
  automatically  enters  MODIFY  state  after  you  have  issued the command; this
  happens with all of the text and symbol commands. Now, depending on whether your
  found-feature is a text or symbol, give either of the commands

            [1mCHANGE[0m [1mFC[0m [1m399[0m or [1mCHANGE[0m [1mFC[0m [1m49[0m

  to change the feature code, and note that the editor remains  in  MODIFY  state.
  This  is the case for all of the operations on texts and symbols, and so several
  operations can be performed on these  features  without  leaving  MODIFY  state.
  Editing of the feature is completed by issuing the command

            [1mEND[0m

  This deposits the changed feature and returns the program to READY state.

  For clarity, the FIND command and the last END command will not  be  illustrated
  in  the  command  sequences  for  the  remaining sections of this chapter. It is
  assumed that you will have an appropriate text or symbol feature in hand and  be
  ready to try out each command in turn.

  Note that there are three  types  of  symbols,  i.e.  unoriented,  oriented  and
  scaled.



  6.2  [3mMoving[0m [3ma[0m [3mText[0m [3mor[0m [3mSymbol[0m

  Assuming you are in TEXT, SYMBOL or MODIFY state, issue the command


  LITES2 User's Guide                                                     Page 6-2
  Editing Texts and Symbols


            [1mMOVE[0m

  This attaches a refresh copy of the feature to the cursor, and you can  move  it
  to its new position before depositing it by issuing

            [1mEND[0m

  Unlike lines, this command does not terminate the operation, and you  remain  in
  MODIFY  state  to  allow  for further editing of the feature. Note also that the
  refresh copy of the feature is no longer attached to the cursor.



  6.3  [3mCopying[0m [3ma[0m [3mText[0m [3mor[0m [3mSymbol[0m

  Copying a text or symbol is similar to moving one, but you first have to issue

            [1mCOPY[0m

  followed by

            [1mMOVE[0m

  Now you have a new copy of the feature attached to the cursor, and you can  move
  the copied feature to its new position and issue

            [1mEND[0m

  to deposit it. Again, you remain in MODIFY state.



  6.4  [3mChanging[0m [3mthe[0m [3mSize[0m [3mof[0m [3ma[0m [3mText[0m [3mor[0m [3mScaled[0m [3mSymbol[0m

  A text or scaled symbol can be made larger using the command

            [1mLARGER[0m

  and smaller using the command

            [1mSMALLER[0m

  For texts with height in point-size units these commands use the next  available
  point-size.  Otherwise,  the text or symbol is increased or decreased in size by
  10%.



  6.5  [3mRotating[0m [3ma[0m [3mText,[0m [3mOriented[0m [3mSymbol[0m [3mor[0m [3mScaled[0m [3mSymbol[0m

  In order to rotate a text, oriented symbol or scaled  symbol  you  can  use  the
  command

            [1mROTATE[0m [1mCURSOR[0m


  LITES2 User's Guide                                                     Page 6-3
  Editing Texts and Symbols


  Movement of the cursor  will  cause  the  text  or  symbol  to  rotate  in  that
  direction. When the feature is suitably oriented, the cursor can be disconnected
  by issuing the command

            [1mEND[0m

  Note that you remain in MODIFY state.



  6.6  [3mEditing[0m [3ma[0m [3mText[0m [3mString[0m

  Existing text can be completely replaced using the REPLACE command. For example,
  if  the  current  feature in hand is a text and you want the text to be 'Trinity
  Street', issue the command

            [1mREPLACE  Trinity Street[0m

  If you only want to replace part of a text string, you can  use  the  SUBSTITUTE
  command.  For  instance,  to  substitute  'Sidney'  for  'Trinity'  in the above
  example, you would type

            [1mSUBSTITUTE  Trinity  Sidney[0m

  The text will now be 'Sidney Street'. If the text  string  contains  spaces,  it
  must be enclosed in quotes. In the above example, the command

            [1mSUBSTITUTE  "Sidney"  "St. Andrews"[0m

  results in the text 'St. Andrews Street'



  6.7  [3mChanging[0m [3mthe[0m [3mSize[0m [3mand[0m [3mOrientation[0m [3mof[0m [3ma[0m [3mScaled[0m [3mSymbol[0m

  You can use the cursor to define the size and orientation of  a  scaled  symbol.
  Give the command

            [1mALIGN[0m

  Now move the cursor to align the symbol; the distance between the symbol and the
  cursor  is  proportional  to the symbol size, and the symbol is aligned along an
  imaginary line joining the symbol  and  cursor.  When  the  symbol  is  suitably
  aligned, the cursor can be disconnected with the command

            [1mEND[0m

  If you simply want to change the size of a scaled symbol, use the command

            [1mSTRETCH[0m

  The cursor will be constrained to lie on the symbol orientation  line,  and  you
  can  change the symbol size by moving the cursor. When the size is satisfactory,
  disconnect the cursor with the command


  LITES2 User's Guide                                                     Page 6-4
  Editing Texts and Symbols


            [1mEND[0m














                                     CHAPTER 7

                               [3mCREATING[0m [3mNEW[0m [3mFEATURES[0m



  7.1  [3mCreating[0m [3ma[0m [3mLine[0m [3mFeature[0m

  Before creating a new line feature, you need to set up the  feature  attributes.
  There  are sixteen feature attribute sets to enable construction of various line
  types and  symbols,  and  the  attributes  used  for  feature  construction  are
  contained  in the current attribute set. In order to copy a given attribute set,
  e.g. 1, into the current attribute set, you should give the command

            [1mGET[0m [1m1[0m

  The attributes can now be modified, and to alter the feature code,  for  example
  to 30, you need to issue

            [1mSET[0m [1mFC[0m [1m30[0m

  If the terminal status line is enabled, you  will  note  that  it  displays  the
  construction  feature code. The actual construction can now be started. Position
  the cursor over the first point, and give the command

            [1mSTART[0m

  This puts the editor into CONSTRUCT state, and you should repeat the process for
  all the other points until the last point, where the command

            [1mEND[0m

  should be given. This terminates the construction. If you now want to  save  the
  current  attribute  set, you can copy it into a specified attribute set, e.g. 2,
  by issuing

            [1mPUT[0m [1m2[0m

  Note that the current attribute set remains unchanged, and so if  the  next  new
  line  feature  is to have the same attributes, the GET and SET commands need not
  be used before starting the new construction.



  7.2  [3mClosed[0m [3mLoops[0m

  If the feature under construction is to be a closed loop, you would construct it
  as above, but just before giving the END command, issue


  LITES2 User's Guide                                                     Page 7-2
  Creating New Features


            [1mCLOSE[0m or [1mCLOSE[0m [1mSQUARE[0m

  The former will move the cursor onto the first vertex, so  that  the  first  and
  last  vertices  are  in  the same position. The latter, however, will extend the
  line joining the last digitised point and the current cursor position to  a  new
  point,  such  that the line joining the new point to the first vertex is a right
  angle. The cursor will finish up on the first vertex.

  Note that the CLOSE command is analogous  to  the  LOOP  command  used  in  line
  editing.



  7.3  [3mCreating[0m [3ma[0m [3mText[0m [3mFeature[0m

  Some of the attributes used in feature construction  are  global;  they  do  not
  belong to any particular attribute set, and can be set directly. One of these is
  the feature code used for new text features. To set this,  for  example  to  28,
  give the command

            [1mSET[0m [1mTEXT[0m [1m28[0m

  You can now construct a new text, for example 'Bridge  Street',  by  giving  the
  command

            [1mTEXT  Bridge Street[0m

  The program will now be in MODIFY state, and you can use any of the text editing
  commands given in Chapter 6. Try

            [1mMOVE[0m

  and move the new text to the desired position. Giving the command

            [1mEND[0m

  will deposit the feature, and if the text is the correct size  and  orientation,
  issue

            [1mEND[0m

  again to terminate the operation.



  7.4  [3mCreating[0m [3ma[0m [3mSymbol[0m [3mFeature[0m

  Creating a symbol feature is a combination of the operations required for  lines
  and  texts.  If  you  want  to  make  one of the feature attribute sets, e.g. 3,
  current, issue

            [1mGET[0m [1m3[0m

  Now (if it is not already set) set the feature code to a symbol, for example 11,
  by giving the command


  LITES2 User's Guide                                                     Page 7-3
  Creating New Features


            [1mSET[0m [1mFC[0m [1m11[0m

  The symbol is created by using the command

            [1mSTART[0m

  which takes you into MODIFY state. Like texts, you can now use any of the symbol
  editing commands given in Chapter 6. To move your new symbol, issue

            [1mMOVE[0m

  and move it to the desired position. Giving

            [1mEND[0m

  will deposit the symbol, and

            [1mEND[0m

  again will terminate the operation. As with lines,  you  can  copy  the  current
  attribute set into another, e.g. 4, by issuing

            [1mPUT[0m [1m4[0m














                                     CHAPTER 8

                                [3mFINISHING[0m [3mA[0m [3mSESSION[0m



  8.1  [3mNormal[0m [3mCompletion[0m

  The normal method of finishing a session is to use the command

            [1mEXIT[0m

  which creates new versions of the input IFF  files  and  deletes  the  workspace
  files.  If  you have been editing a single IFF file and you want the new version
  to have a different name, for example MYMAP.IFF, you would issue

            [1mEXIT[0m [1mMYMAP.IFF[0m

  Note that the EXIT command has to be typed in full.



  8.2  [3mIgnoring[0m [3mall[0m [3mEditing[0m

  All editing will be ignored if you use the command

            [1mQUIT[0m

  which again should be typed in full. This does not  create  any  new  files  and
  leaves the old file unchanged.


  LITES2 User's Guide                                       Page Index-1


                                  INDEX



  ABANDON command, 4-1                Data Points
  Abandoning an operation, 4-1          inserting, 5-4
  ALIGN command, 6-3                  Data points
  Attributes of features, 4-1           editing, 5-5
  Audience, 1-1                         removing, 5-4
                                      DEC, 1-1
  BRIDGE command, 5-8                 DELETE command, 4-2, 5-6
  Button commands, 1-3                Deleting
                                        circle features, 4-2
  CHANGE command, 5-1 to 5-2, 5-6,      line features
      6-1                                 part, 5-5
  Changing                                whole, 4-2
    line features                       symbol features, 4-2
      part, 5-6                         text features, 4-2
      whole, 5-1                      Description of program, 1-1
    symbol features, 6-1              Digital map data, 1-2
    text features, 6-1                DISABLE command, 2-2
  CIRCLE state, 4-1                   DRAW command, 3-2
  CLOSE command, 7-2
  Closed loops, 5-4, 7-1              Edge matching, 5-3
  Command files, 1-4                  EDIT command, 5-5
  Command states, 1-2                 EDIT state, 5-2 to 5-3, 5-7 to
  Commands, 1-3                           5-8
    abbreviation, 1-3                 Editing a data point, 5-5
    ambiguity, 1-3                    Editing text strings, 6-3
    arguments, 1-3                    ENABLE command, 2-2
    conditional execution, 1-4        END command, 4-2, 6-2 to 6-3
    information, 3-1                  Enlarging
    jumps, 1-4                          symbol features
    terminating, 1-4                      scaled, 6-2 to 6-3
    validity, 1-2                       text features, 6-2
  CONSTRUCT state, 5-8, 7-1           Environment, 1-2
  Constructing                        Examining a feature, 4-1
    line features, 7-1                EXIT command, 8-1
    symbol features, 7-2              Exiting a session, 8-1
    text features, 7-2                EXTEND command, 5-8
  COPY command, 5-2, 5-6 to 5-7,      Extending line features, 5-7
      6-2
  Copying
    line features                     Feature attributes, 4-1
      part, 5-6 to 5-7                Feature selection, 1-2
      whole, 5-2                      Feature-in-hand, 1-2
    symbol features, 6-2              Features, 1-2
    text features, 6-2                @file command, 1-4, 2-2
  Creating                            FIND command, 4-1
    line features, 7-1                Finding a feature, 4-1 to 4-2
    symbol features, 7-2              FIRST command, 5-4
    text features, 7-2                Found-feature, 1-2
  Cursor movement, 3-1                FRACTION command, 5-5
                                      FRT Guide, 1-2
  Data, 1-2                           FRTLIB Reference Manual, 1-2


  LITES2 User's Guide                                       Page Index-2


  GET command, 7-1                    ON command, 5-5
  GKS, 1-2                            ON state, 5-1, 5-6 to 5-7
                                      Orienting
  HELP command, 3-1                     symbol features
  Help facility, 3-1                      scaled, 6-3
   
  Identifying a feature, 4-1 to 4-2   Password, 2-1
  IFF command, 2-2                    POSITION command, 3-1
  IFF files, 1-2                      PREVIOUS command, 5-4
  IGES, 1-2                           Primary commands, 1-3
  Initialisation, 2-1                 Program description, 1-1
  Input data, 1-2                     PUCK command, 2-3
  INSERT command, 5-5                 PUT command, 7-1
  Inserting a data point, 5-4
                                      QUIT command, 8-1
  JOIN command, 5-3                   Quitting a session, 8-1
  Joining line features, 5-3
                                      READY state, 4-1, 5-1
  Keyboard commands, 1-3              RECOVER command, 4-2
                                      RECOVER state, 4-2
  LARGER command, 6-2                 Recovering
  LAST command, 5-4                     circle features, 4-2
  Layers, 1-2                           line features
  Learner messages, 2-2                   part, 5-6
  LINE state, 4-1, 5-1                    whole, 4-2
  LITES, 1-2                            symbol features, 4-2
  LITES1, 1-2                           text features, 4-2
  LITES1 workstation, 2-1             Redrawing, 3-2
  LITES2, 1-1                         Reducing
  LITES2 Reference Manual, 1-1          symbol features
  LOOP command, 5-4                       scaled, 6-2 to 6-3
                                        text features, 6-2
  Macro commands, 1-4                 REMOVE command, 5-4
  MADES, 1-2, 2-1                     Removing a data point, 5-4
  Map data, 1-2                       REPLACE command, 6-3
  MAPS command, 2-2                   Replacing part of a line feature,
  MATCH command, 5-3                      5-8
  MENU command, 2-2                   ROTATE command, 6-2
  Menu commands, 1-3                  Rotating
  MIDDLE command, 5-5                   symbol features
  MODIFY command, 5-1 to 5-2, 5-6         oriented, 6-2
      to 5-7                              scaled, 6-2
  MODIFY state, 6-1, 7-2 to 7-3         text features, 6-2
  MOVE command, 5-2, 5-7, 6-2         Running the program, 2-1
  Moving
    line features                     SEARCH command, 4-2 to 4-3
      part, 5-7                       Searching for features, 4-2
      whole, 5-2                      Secondary commands, 1-3
    symbol features, 6-1              SELECT command, 4-3
    text features, 6-1                Selection of features, 1-2
  Moving the cursor, 3-1              SET command, 7-1 to 7-3
                                      Set up, 2-2
                                        abandoning, 2-3
  NEXT command, 5-4                     digitising, 2-3
  NULL command, 3-1                     mistakes, 2-3 to 2-4


  LITES2 User's Guide                                       Page Index-3


    puck buttons, 2-3                 TIE command, 5-3
    repeating, 2-3                    TRACK command, 2-3
  SETUP command, 2-3 to 2-4           Tying line features, 5-3
  SHOW command, 3-1, 4-2
  SMALLER command, 6-2                Use of this manual, 1-1
  SOLADI, 1-2                         Username, 2-1
  START command, 5-8, 7-1, 7-3
  States, 1-2                         Variables, 1-4
    entering, 1-2                     VAX, 1-2
  STRETCH command, 6-3                VERTEX command, 5-4
  SUBSTITUTE command, 6-3             VMS, 1-2
  SYMBOL state, 4-1
                                      WINDOW command, 3-2
  TEXT command, 7-2                   Windowing, 3-2
  TEXT state, 4-1                     WOSP, 2-1
