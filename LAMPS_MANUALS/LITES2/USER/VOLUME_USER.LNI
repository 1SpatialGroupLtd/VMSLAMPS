


















                                  [1mLaser-Scan[0m [1mLtd.[0m


                           [1mLITES2[0m [1m-[0m [1m3D[0m [1mVolume[0m [1mCalculation[0m

                                     [1mUser[0m [1mGuide[0m































  Copyright (C) 2019 Laser-Scan Ltd
  Science Park, Milton Road, Cambridge, England CB4 4FY  tel: (0223) 420414

  Document "LITES2 3D Volume Calculation - User Guide"    Category "User Guide"
  Document Issue 1.0      Clarke Brunt                    17-May-1991
  Document Issue 1.1      Clarke Brunt                    14-Jun-1991


  LITES2 3D Volume Calculation - User Guide                                 Page 2


  1  [1mIntroduction[0m

  This document describes a 3D volume calculation capability using  LITES2  macros
  and  user  routines.   It is intended for use with direct stereoplotter input to
  LITES2, in configurations such as the KERN DSR.



  2  [1mInstallation[0m

  The 3D volume calculation software consists of 2 files:

        *  An image file VOLUME_ROUTINE.EXE which contains LITES2  user  routines.
           This file should be in LSL$PUBLIC_ROOT:[LITES2.EXE].

        *  A  LITES2  command  file  VOLUME.LCM  which   contains   LITES2   macro
           definitions.  This file should be in LSL$PUBLIC_ROOT:[LITES2.CMD].

  The following logical name should be defined.  This should usually be  added  to
  the other LITES2 logical names which are defined in LSL$COM:LITES2INI.COM.

          $ DEFINE LSL$LITES2ROUTINES_101  LSL$EXE:VOLUME_ROUTINE.EXE

  If routine 101 is already used for some other purpose, then  one  of  the  other
  numbers may be used instead (see Notes below).

  The supplied LITES2 command file VOLUME.LCM should  be  executed  during  LITES2
  initialisation,  by  adding  a  command  @VOLUME  to either the site-specific or
  terminal-specific LITES2 initialisation file.



  3  [1mAlgorithm[0m

  The method used for calculation of a volume is based on a perimeter and a series
  of  profiles.   The  method  is  applicable  to positive volumes (heaps), and to
  negative volumes (holes).  The following  procedure  assumes  a  hole  is  being
  calculated.

  The overall sequence is as follows:

       1.  Either the number of profiles to be measured, or their spacing  may  be
           specified.   Either  set  LITES2  variable  VOL_DOSPACE  to  0  and set
           VOL_NPROF to the number of profiles, or set VOL_DOSPACE to -1  and  set
           VOL_SPACE  to  the desired spacing (IFF units).  The number of profiles
           must be an odd number in the range 1-99.  The angle of the profiles  in
           degrees  anti-clockwise  from  the horizontal must be set in the LITES2
           variable VOL_ANGLE.  It is possible to step  automatically  along  each
           profile  -  to  do  this set variable VOL_DOSTEP to -1 and set the step
           size in variable VOL_STEP, otherwise set VOL_DOSTEP to  0.   The  macro
           VOL_SET  may  be  used to prompt for these values - type a space (blank
           line in a future release of  LITES2)  to  retain  the  existing  value.
           Initial  default  value  of 3 profiles at an angle of 0 degrees with no
           automatic stepping are assumed.


  LITES2 3D Volume Calculation - User Guide                                 Page 3


       2.  A feature is digitised in 3D describing  the  perimeter  of  the  hole.
           This  can  either  be done at the time, or may be a previously existing
           feature.  The feature may be a line, curve, or  area.   If  it  is  not
           closed, then a closing line is assumed.

       3.  The perimeter  feature  should  be  highlighted  using  a  LITES2  FIND
           command.

       4.  The operator gives a command to invoke a `start volume'  initialisation
           macro,  VOL_INIT.   It  may  be  of benefit to bind these commands to a
           readily available activator, such as a menu square or button.

       5.  The macro invokes a  LITES2  user  routine  to  fit  a  plane  to  this
           perimeter.   This  plane  is used thereafter as the base of the volume.
           The user routine sets  LITES2  variables  to  the  RMS  and  maximum  Z
           residual  of  the points with respect to the plane, and also the number
           and spacing of the profiles.  The macro prints  out  these  figures  so
           that  invalid digitised points can be identified and corrected.  If the
           option to set a profile spacing is used, then the  actual  spacing  may
           differ  from  that  set because of the requirement that there be an odd
           number of equally spaced profiles.

       6.  For each profile in turn, macro VOL_PREP n (n is the profile number) is
           invoked.   This  calls  a  user  routine  which  sets  LITES2  variable
           VOL_CURS1 VOL_CURS2 and VOL_CURS3  to  the  coordinate  at  which  this
           profile first intersects the perimeter.  The profile is then digitised,
           and highlighted with a FIND (or SEARCH LAST) command.   Macro  VOL_PROF
           is then invoked.  This calls a user routine, which checks how close the
           feature is to where the profile should  be  -  again  LITES2  variables
           VOL_RMSRES  and  VOL_MAXRES are set to the residuals and printed out by
           the macro.  The profile is processed to sort  the  points  into  order,
           move  them exactly onto the profile, discard any outside the perimeter,
           discard any within 1/100th of the profile separation of each other, and
           add points at the intersections with the perimeter (if the user did not
           digitise points  within  1/100th  of  the  profile  separation  of  the
           perimeter).   The  original  feature is deleted and the newly processed
           feature added.  The cross sectional area of the profile is  calculated,
           stored  away,  and  also  set in the LITES2 variable VOL_AREA, which is
           printed by the macro.  The generated feature is not used further  -  it
           may be deleted if not required.

       7.  In order to automate this procedure, after doing VOL_INIT,  call  macro
           VOL_NEXT.  This will call VOL_PREP for the first profile and move the X
           and Y position of the cursor to its starting  point.   Z  may  then  be
           adjusted,  possibly  by snapping onto the perimeter using FIND, and the
           profile construction started using macro VOL_START (this  just  invokes
           the  LITES2 START command, but afterwards uses FORCE ANGLE to constrain
           the cursor along the profile, and also, if required,  steps  along  the
           profile  by  the  selected  distance).  If using a DSR instrument, then
           move along the profile if required, use a tracking button to  constrain
           onto  it,  and digitise each point using VOL_START.  At the final point
           of the profile,  invoke  macro  VOL_END.   This  uses  the  LITES2  END
           command,   then   passes  the  profile  to  VOL_PROF,  and  then  steps
           automatically to the next  profile.   Note  that  whether  or  not  the
           automatic stepping facility is used, the user is still free to digitise
           points anywhere on the profile.


  LITES2 3D Volume Calculation - User Guide                                 Page 4


       8.  When all the  profiles  have  been  captured,  then  macro  VOL_VOL  is
           invoked.   This  calls a user routine to integrate the profile areas to
           determine an overall volume.  This is stored  in  the  LITES2  variable
           VOL_VOLUME, and printed out by the macro.

       9.  An additional macro, VOL_NEAR, is provided which calls the user routine
           to  establish which profile number the cursor is near to (within half a
           profile spacing).  Variable VOL_PROFNO is set  to  this  profile.   The
           condition  flag is set false if the cursor is not near a profile.  This
           macro could be used in conjunction with  the  others  to  identify  and
           digitise a particular profile.



  4  [1mDiagram[0m

  The following diagram shows a plan view of a quarry with 5 profiles at an  angle
  of 60 degrees.

       ---------------------------------------\
       |       /         /         /         / \
       |      /         /         /         /   \
       |     /         /         /         /     \<-Perimeter
       |    /         /         /         /       \
       |   /         /         /         /         \
       | (5)       (4)       (3)       (2)      (1) \
       | /         /         /         /         /   \
       |/         /         /         /         /     \
       |         /         /         /<-Profile/      |
        \       /         /         /    (2)  /      /
         \     /         /         /         /      /
          \----------------------------------------/

  The following diagram shows a cross section along a particular profile.   of  60
  degrees.

        \
         \                                    /
          \                                --/
           \                              /
            \       /---\                /<-Cross section of profile (2)
             \-----/     \ -------------/




  5  [1mNotes[0m


       1.  Profile areas are calculated using the trapezoidal rule.  At the points
           where  the  profile  intersects  the  perimeter,  the user may digitise
           points at  a  different  height  to  the  perimeter  (vertical  sides),
           otherwise  points  at  the  height  of  the  perimeter will be inserted
           automatically.


  LITES2 3D Volume Calculation - User Guide                                 Page 5


       2.  If a profile intersects the perimeter several times, then  the  profile
           should  be  digitised  continuously  from one side to the other.  Those
           regions of the profile lying outside the perimeter  will  be  discarded
           and replaced by invisible segments in the processed profile.

       3.  The final volume calculation is based on the 'prismoidal rule' [Ref 1].
           Odd profiles are given a weighting of 4, even profiles 2, and a profile
           with zero area which just touches the perimeter is assumed at each end.
           This will give a volume which assumes a smooth ramp from the end of the
           perimeter to the first and last profiles.

       4.  Areas and volumes are calculated in square and  cubic  IFF  units,  and
           therefore may need scaling to give the desired units.

       5.  It is possible to  go  back  and  edit  a  profile,  or  to  completely
           redigitise  one.   Optionally  use  the  VOL_NEAR macro to identify the
           profile number, n, then repeat the VOL_PREP n, modify the  profile  and
           FIND  it,  then  VOL_PROF.  As long as all the other profiles have been
           measured, then VOL_VOL will give the new answer.  To use  the  guidance
           macros  to  do this, set variable VOL_PROF to one less than the desired
           profile number, and invoke VOL_NEXT.  Either construct a new profile as
           above, or amend and FIND an existing one and invoke VOL_PROF.

       6.  To use a user routine number other than 101 (because 101 is already  in
           use  for some other purpose), then edit VOLUME.LCM and set the variable
           VOL_ROUTINE to another number.   Then  use  this  same  number  in  the
           definition of the logical name LSL$LITES2ROUTINES_xxx.




























  [Ref 1] -  Practical  Field  Surveying  and  Computations  -  A.L.Allan  et  al,
  Heinemann, 1968, Chapter 11.
