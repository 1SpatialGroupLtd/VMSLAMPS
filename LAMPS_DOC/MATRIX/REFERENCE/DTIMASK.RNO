.! set the standard page size
.LEFT MARGIN 0;.RIGHT MARGIN 80;.PAGE SIZE 60,80

.! ensure that .NO FILL also retains blank lines
.KEEP

.! enable the use of ^*...\* and * as bolding flags
.ENABLE BOLDING;.FLAGS BOLD


.! change the way .HL works
.!   n1=6  lowest  level to have `run-in' format
.!   n2=2  highest level to have title in uppercase - 1 & 2 will
.!   n4=0  lowest  level not to have section number at left
.!   n6=0  number of blank lines before header
.STYLE HEADERS 6,2,,0,,0

.NO NUMBER
.FIGURE 14
.CENTRE ;^&Laser-Scan_ Ltd.\&
.FIGURE 2
.CENTRE ;^&MATRIX - DTIMASK\&
.BLANK
.CENTRE ;^&Reference_ Manual\&
.FIGURE 2
.FLAGS SUBSTITUTE
.CENTRE ;^&Issue_ 1.0_ -_ 19-June-1991\&

.FOOT
.NOFILL
Copyright (C) $$year Laser-Scan Ltd
Science Park, Milton Road, Cambridge, England CB4 4FY  tel: (0223) 420414

Document "MATRIX - DTIMASK REFERENCE", Category "REFERENCE"
Document Issue 1.0	Clarke Brunt			19-June-1991
.FILL
.NOFLAGS SUBSTITUTE
.END FOOT

.LM 0
.RM 80
.PAGE
.BR
^^^*--------------------------------------------------------------------------------\*
.BR
^^^*MODULE#####DTIMASK\*
.INDEX DTIMASK

.P0
^^^*--------------------------------------------------------------------------------\*
.BR
^^^*REPLACES\*###None. DTIMASK is a new MATRIX utility.
.INDEX DTIMASK> REPLACES
.P0
^^^*--------------------------------------------------------------------------------\*
.HL 1 ^^^*FUNCTION\*
.INDEX DTIMASK> FUNCTION

.LEFT MARGIN +10

.P 0;DTIMASK allows data values in multiple DTI files to
be combined to produce an output DTI file in which particular values are
set wherever one of the input files is non-zero.

.TP 8
.BLANK
.LEFT MARGIN -10
^^^*--------------------------------------------------------------------------------\*
.HL 1 ^^^*FORMAT\*
.INDEX DTIMASK> FORMAT
.LEFT MARGIN +10
.P 0;$ DTIMASK
.BLANK
.TEST PAGE 9
.LEFT MARGIN -10
^^^*--------------------------------------------------------------------------------\*
.HL 1 ^^^*COMMAND QUALIFIERS\*
.INDEX DTIMASK> COMMAND QUALIFIERS
.LEFT MARGIN +10
.P 0;None, DTIMASK is command driven.
.BLANK
.TEST PAGE 9
.LEFT MARGIN -10
^^^*--------------------------------------------------------------------------------\*
.HL 1 ^^^*DESCRIPTION\*
.INDEX DTIMASK> DESCRIPTION
.BLANK
.P 0;^*----------------------------------------------------------------------\*
.LM +10
.HL 2 ^^^*General\*
.INDEX DTIMASK> DESCRIPTION> General
.P 0;DTIMASK allows data values in multiple DTI files (maximum 256) to
be combined to produce an output DTI file in which particular values are
set wherever one of the input files is non-zero. It is designed to be efficient
for this particular case, but lacks the versatility of DTICOMBINE. It is
restricted to working on byte type DTI files, all of which must have the
same size. Only a single input file is mapped into memory at once (in addition
to the output file), so it may be used to combine files that are too large
for DTICOMBINE.

.TEST PAGE 9
.BLANK
.LM -10
.P 0;^*----------------------------------------------------------------------\*
.LM +10
.HL 2 ^^^*DTIMASK typical command sequence\*
.INDEX DTIMASK> DESCRIPTION> Typical command sequence
.BLANK 2
.P 0;Detailed descriptions of the individual commands available are given 
below. 
.TEST PAGE 9
.P 0;A typical command sequence is:
.LM -10

.LITERAL

FILEIN 2 TESTDATA1        - input file LSL$DTI:TESTDATA1.DTI, value 2
FILEIN 5 TESTDATA2        - input file LSL$DTI:TESTDATA2.DTI, value 5
FILEOUT RESULT            - Specifies that LSL$DTI:RESULT.DTI is to be
                            used as the output file.
GO                        - Create and open LSL$DTI:RESULT.DTI as output
                            file. Start to process. The size of the
                            file is determined by the size of the input
                            files.
                            The type of file (DTED, LSLA etc.) is set to
                            that of the first input file.

.END LITERAL
.LM +10
.P 0; This series of commands specifies that DTIMASK is to combine
two DTI files: LSL$DTI:TESTDATA1.DTI and LSL$DTI:TESTDATA2.DTI
as file B.

.P 0;Output is to be to a new DTI file; LSL$DTI:RESULT.DTI.

.P 0;The output file will contain the value 5 wherever TESTDATA2 is non-zero,
and 2 wherever TESTDATA1 is non-zero. If both are non-zero, the later file
(5) takes precedence.
.LEFT MARGIN -10

.!******************************************************************************
.!*** Commands                                                               ***
.!******************************************************************************
^^^*--------------------------------------------------------------------------------\*
.SUBTITLE
.HL 1 ^^^*DTIMASK_ commands\*
.INDEX DTIMASK> commands
.P 0;A description of each of the DTIMASK commands follows.

.!******************************************************************************
.PAGE
.SUBTITLE _! command
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*_!\*
.INDEX DTIMASK> commands> _!
.INDEX DTIMASK> _! command

.LEFT MARGIN +8
.P 0;Treat all text to the right of the '!' as a comment.
.LEFT MARGIN -8

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*FORMAT:        _! [comment text]

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Command parameters:\*

.LEFT MARGIN +8
.P-8;comment text
.P 0;text that is to be treated as a comment and which will be excluded from
command interpretation.
.LEFT MARGIN -8

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*DESCRIPTION:\*
.P 0;An exclamation mark is the standard DTM package comment delimiter. All 
text (and numbers) which lie to the right of a '!' character are excluded from 
command interpretation. Comments are useful for annotating command procedures
used in batch processing etc_.


.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Messages:\*_ None.


.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Examples:\*
.BLANK
.BR;DTIMASK> ^*_! a comment for the sake of it_<CR_>\*
.BR;DTIMASK> ^*FILEIN 1 TESTDATA1 _! value 1 for this file_<CR_>\*

.!******************************************************************************
.PAGE
.SUBTITLE FILEIN command
.INDEX DTIMASK> commands> FILEIN
.INDEX DTIMASK> FILEIN command
.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*FILEIN\*

.LEFT MARGIN +8
.P 0;Specifies a DTI file that is to be opened and used for data input, and the
data value that is to be used in the output wherever this file is non-zero.
.LEFT MARGIN -8

.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*FORMAT:   FILEIN integer dti-file-spec###e_.g_.#FILEIN 1 EXAMPLE
.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*COMMAND PARAMETERS:\*
.LEFT MARGIN +8
.P-8;integer
.P 0;The value that is to be placed in the output file wherever this input
file is non-zero. It must be in the range 0-255.

.P-8;dti-file-spec
.P 0;The specification of the DTI file to be opened for data input.

.P 0;Any parts of the file-spec not supplied for the FILEIN command will be 
taken from the default file specification 'LSL$DTI:.DTI'.
.LEFT MARGIN -8
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*DESCRIPTION:\*
.FILL
.P 0;The FILEIN command specifies a DTI file that is to be opened and used
for data input, and the data value that is to be used in the output wherever
this file is non-zero.

.P 0;Up to 256 FILEIN commands may be specified n the same DTIMASK run.
They may use different, or the same values.

.P 0;The file specified in the first FILEIN command is opened at once,
in order to get the size required for the output file. It is then closed.
Subsequent FILEIN commands do not result in the opening of the file until
after the GO command is specified.

.P 0;At least one FILEIN command must be issued before the GO
command will be accepted. 

.P 0;The output DTI file header type is taken from the input DTI file opened
with the first FILEIN command.

.NO FILL
.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*Messages:\*

.P 0;The following messages are specific to the FILEIN command:
.P 0;Too many FILEIN commands, 256 specified already
.BR;FILEIN value must be in the range 0-255
.BR;Error in filename in FILEIN command
.BR;Error opening input file _<filespec_>
.BR;Error closing input file 1
.BR;File 1 is not byte data type

.FILL

.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*Examples:\*

.BL
.NO FILL
DTIMASK> ^*FILEIN 1 SOIL_<CR_>\*
DTIMASK> 
.FILL

.!******************************************************************************
.PAGE
.SUBTITLE FILEOUT command
.INDEX DTIMASK> commands> FILEOUT
.INDEX DTIMASK> FILEOUT command
.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*FILEOUT\*

.LEFT MARGIN +8
.P 0;Specifies a DTI file that is to be created and used for data output
.LEFT MARGIN -8

.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*FORMAT:   FILEOUT dti-file-spec
.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*COMMAND PARAMETERS:\*
.LEFT MARGIN +8
.P-8;dti-file-spec
.FILL
.P 0;The specification of the DTI file to be created for data output.

.P 0;Any parts of the file-spec not supplied for the FILEOUT command will be 
taken from the default file specification 'LSL$DTI:.DTI'.
.LEFT MARGIN -8
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*DESCRIPTION:\*
.P 0;The FILEOUT command causes the specified file to be created and used as
the output file.

.P 0;The output file will always be BYTE data type.

.P 0;The output DTI file header type is taken from the input DTI file opened
with the first FILEIN command.

.P 0;The file is not actually created until after the GO command - if it proves
to be in error, then another FILEOUT command may be given and GO repeated.
.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*Messages:\*

.P 0;The following messages are specific to the FILEOUT command:
.P 0;Error in filename in FILEOUT command

.FILL

.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*Examples:\*

.BL
.NO FILL
DTIMASK> FILEOUT TEST5
DTIMASK>
.FILL

.!******************************************************************************
.PAGE
.SUBTITLE GO command
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*GO \*
.INDEX DTIMASK> commands> GO 
.INDEX DTIMASK> GO command

.LEFT MARGIN +8
.P0;GO starts DTIMASK processing.
.LEFT MARGIN -8

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*FORMAT:                GO \*


.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Command parameters:\*_ None.

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*DESCRIPTION:\*
.P 0;The GO command creates and opens the output file specified with the 
FILEOUT command  and then sets DTIMASK processing in motion.

.P 0;Before the output file is opened, DTICOMBINE checks that the following
condition are met:

.LIST "o"
.LE ;At least one input DTI file has been specified
.LE ;An output DTI file has been specified
.END LIST 

.P 0;The output DTI file header type is taken from the input DTI file opened
with the first FILEIN command.
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Messages:\*

.P 0;The following messages are specific to the GO command:
.P 0;No FILEOUT command has been given
.BR;No FILEIN commands have been given
.BR;Error creating output file "_<filespec_>"
.BR;Created output file "_<filespec_>"
.BR;Error opening input file _<n_> "_<filespec_>"
.BR;File _<n_> will not be processed
.BR;Processing file _<n_> "_<filespec_>"
.BR;File _<n_> is not byte data type - it will not be processed
.BR;File _<n_> has different dimensions to file 1 - it will not be processed
.BR;Error copying header from file _<n_>
.BR;Error closing input file _<n_>
.BR;Error finding min and max of data
.BR;Error closing output file
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Examples:\*
.BLANK
.NO FILL
.BR;$ ^*DTIMASK_<CR_>\*
DTIMASK> FILE 2 POLYOVER__SOILS_<CR_>
DTIMASK> FILE 5 POLYOVER__SLOPES_<CR_>
DTIMASK> FILEOUT TEST5
DTIMASK> GO
Created output file "LSL$DTI:TEST5.DTI"
Processing file 1 "LSL$DTI:POLYOVER__SOILS.DTI"
Processing file 2 "LSL$DTI:POLYOVER__SLOPES.DTI"
 ELAPSED:    0 00:00:14.18  CPU: 0:00:10.11  BUFIO: 14  DIRIO: 11  FAULTS: 165 
_$
.FILL


.!******************************************************************************
.PAGE
.SUBTITLE QUIT command
.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*QUIT\*
.INDEX DTIMASK> commands> QUIT
.INDEX DTIMASK> QUIT command

.LEFT MARGIN +8
.P 0;Quit from DTIMASK.
.LEFT MARGIN -8

.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*FORMAT:     QUIT\*

.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*Command parameters:\*#None.

.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*Description:\*
.P 0;The QUIT command causes DTIMASK to exit immediately, without creating
an output file.

.P 0;<CTRL/Z> (pressing the Ctrl and Z keys together) may also be used
to quit from the program.

.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*Messages:\*#None.

.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*Examples:\*

.P0;DTIMASK_> ^^^*QUIT_<CR_>\*
.BR;#ELAPSED: 00:00:20.04  CPU: 0:00:00.71  BUFIO: 281  DIRIO: 46  FAULTS: 263 
.BR;_$

.PAGE
.!******************************************************************************
.!*** 		messages	                                         ***
.!******************************************************************************
.SUBTITLE
.FIGURE 5
.HL 1 ^^^MESSAGES\*
.INDEX DTIMASK> MESSAGES
.!
.!******************************************************************************
^*--------------------------------------------------------------------------------\*
^^^*MESSAGES\*
.P 0;DTIMASK produces no messages of the %DTIMASK-severity-mnemonic
variety of its own. All the DTIMASK messages are
more conversational as all are directly or indirectly attributable to the
effects of commands the user has specified.

.P 0;In addition to the above messages which are generated by DTIMASK
itself,   other messages  may  be   produced by  the command line interpreter
and by  Laser-Scan libraries. In particular, messages may be  generated
by the DTI library and  by the  Laser-Scan  I/O library,  LSLLIB.  DTI library
messages are introduced by   '%DTI' and are  documented in the DTI library
users' guide. In most cases DTI errors will be due to a corrupt input file,
and this should be the first area of investigation. If the  cause of  the
error cannot be traced by the  user, and  Laser-Scan are consulted, then the
output  file should  be  preserved to  facilitate diagnosis. LSLLIB  messages 
are  introduced  by    '%LSLLIB' and are generally self-explanatory.  They are
used  to  explain the details of program generated errors. 
