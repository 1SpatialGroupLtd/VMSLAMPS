.!** Qume page format
.LEFT MARGIN  0;.RIGHT MARGIN 80;.PAGE SIZE    60,80
.XLOWER .NO HEADERS 

.FIGURE 14 .CENTRE ;LASERAID 

.BLANK 3   .CENTRE ;THE LASER-SCAN LASERTRAK 

.CENTRE            ;DIGITISING PROGRAM

.CENTRE            ;REFERENCE MANUAL

.BLANK 3   .CENTRE ;RELEASE 1.0 

.FOOT
.FLAGS SUBSTITUTE
.NOFILL
Copyright (C) $$year Laser-Scan Laboratories Ltd
Science Park, Milton Road, Cambridge, England CB4 4FY   tel: (0223) 420414

Document "LASERAID Reference Manual"			Category "REFERENCE"
Document Issue 1.0		Dave Meader		16-Sep-1986
.FILL
.NOFLAGS SUBSTITUTE
.END FOOT

.TITLE LASERAID - the Laser-Scan Digitiser 

.IF RNTRNX 

.PAGE 

.REQUIRE "LAREF.RNT" 

.PAGE SIZE    60,80

.ENDIF RNTRNX 

.NUMBER PAGE 1 

.PAGE .B 2 .HEADERS ON 

.HEADER LEVEL 1 ^&LASERAID - the Laser-Scan Digitiser\& 

.HEADER LEVEL 2 ^&Introduction\& 

.INDEX Introduction 

.P0 ;LASERAID is the control program for the Laser-Scan line-following
digitiser, LASERTRAK. It is the first of a sequence of programs which combine to
produce high quality digital data from a source document. Assisted by the
operator, LASERAID will capture features on a reduced negative and output
the results as a stream of coordinates to a file on disk. 

.INDEX IFF 

.P0 ;The resulting file structure is Laser-Scan's own IFF (Internal Feature
Format), which offers the combined benefits of compactness and efficiency.
It contains various kinds of data in addition to the coordinates, such as line
thicknesses, coding information and, optionally, a 'link-and-node' structure
for holding networks. 

.P0 ;This document describes the LASERAID
user interface in terms of the commands available to the operator; it
assumes a certain familiarity with the concepts of digitising using LASERTRAK.
See the 'Introductory Guide to Digitising with the Laser-Scan LASERTRAK'
for a more detailed description of the digitising process.

.HEADER LEVEL 2 ^&Overview\&

.INDEX Overview

.INDEX Patch File 

.INDEX Parameters 

.P0 ;When LASERAID is invoked it reads a 'patch' file containing values for all
the various digitising 'parameters' and 'command macros' (see sections 8 and
9).
There is a pause, after which the message 'Initialisation#completed'
is displayed.

.P0 ;The subsequent use of LASERAID divides naturally into three stages.
The first stage involves the automated calibration of the LASERTRAK
and definition of the target coordinate system for the resulting
data. This includes the measurement of a standard calibration grid and/or a
set of four 'control points'. Additional information such as 'wash coding'
may also be entered at this stage.

.P0 ;When the setup procedure is complete, stage two is entered in which
a feature is selected to be digitised and any extra information is added.
Stage three is the actual feature capture process, during which operator
guidance may be requested. When the feature has been accepted, or feature
capture has been abandoned, the program returns to stage two ready for the next 
feature.

.P0 ; Stages two and three alternate until the digitising session is
complete. The End Of Session (EOS) command is then given in stage two to exit
from the program. The patch file is completely remade at the end of each
digitising session using the parameter settings current at that time.
This means that the operator's initialisation work (parameter tuning,
LASERTRAK setup etc.) is greatly reduced if the next session is on the
same (or a related) map. The current calibration coefficients and control point
values are also stored in the patch file. 

.P0 ;Each of the above stages involves one or more program levels (or 'modes'),
each with its own set of commands and characteristic use of the LASERTRAK
function buttons.

.PAGE 

.HEADER LEVEL 1 ^&Hardware Description\& 

.INDEX Hardware Description 

.INDEX LASERTRAK 

.INDEX HRD-1

.INDEX Photochromic 

.INDEX Paintout 

.P0 ;A standard Laser-Scan HRD-1 (High Resolution Display) contains a blue
laser which is deflected under program
control to write on photochromic film. This film is normally clear, and is
darkened when exposed to the blue laser light. This image of black lines on
white is continuously back-projected onto a large screen by orange light to
which the film is insensitive. The resultant image is black lines on orange. 

.P0 ;LASERTRAK has an additional red laser of low power which follows the same
path as the blue. A film negative to be digitised is placed in contact with the
photochromic film, producing a superimposed image of the map on the screen with
clear lines on a black background. A photomultiplier positioned behind the
photochromic film detects lines on the film by measuring the intensity of the
red beam after passing through the two films in contact. LASERAID uses this
information to follow a line on the film, after which the blue laser is used
to paint over the clear-on-black image with a black line on the photochromic
film. This effectively removes that line from the image on the screen, so that
the operator can see which lines have already been digitised. They are also
rendered invisible to the photomultiplier. If the painted out line does not
overlay the digitised line, possible causes are the negative or photochromic
film being inserted back to front (the emulsions of both films must be next to
each other), or CRX/Y not set up correctly (see section 4.1.2).

.INDEX Negative Loading 

.P0 ;To insert the film unlock and open the door on the right hand side of the
optics unit, and slide out the film holder, which is on the far right (black
handle with catch at bottom), taking care it does not catch on the
photochromic film. The negative slides under the clamps on the holder. The
emulsion should always be 'up' (next to the photochromic film). Normally, the
original will have been photographed 'upside down', and the negative will also
have been inserted 'upside down', so that the image is right reading on the
screen. 

.HEADER LEVEL 2 ^&Controls\& 

.INDEX Controls 

.P0 ;The LASERTRAK controls are positioned so that the operator can reach the
tracker ball, function buttons and keyboard while seated in front of the main
screen. Onto the main screen are projected the images of the film negative and
the main cursor (a red cross which can be moved by rolling the tracker ball). 

.P0 ;The close-up screen is used for keyboard command reflection, any error
messages, and for displaying graphs during the setup procedure. It can also
show an enlargement of the area around the main cursor, optionally with a
close-up cursor for fine positioning. 

.INDEX Cursor 

This cursor is a pair of cross-hairs which can be moved using controls on the
Tektronix keyboard. When the cursor is correctly positioned, typing any
character transmits the position to the program. 

.PAGE 

.HEADER LEVEL 1 ^&Commands\& 

.INDEX Command Line Qualifiers

.P0 ;LASERAID is normally invoked at the LASERTRAK terminal by giving
the command 'LAJ' followed by one or more qualifiers as described in the next
section (the acronym LAJ may be taken to stand for '&Lines, &Area-features and
&Junctions', a description of the digitising capabilities of the program).
When the message 'Initialisation#completed' is displayed, LASERAID is ready to
be used. 

.INDEX Function Buttons 

.INDEX Commands 

.INDEX Help 

.INDEX FB

.P0 ;Commands are given to the program via the function buttons (FBs) and the
keyboard. In general the most common commands at any time are available on
the function buttons, while less common commands (and those requiring numbers
or text
as arguments) are given via the keyboard. Each function button command is also
available via the keyboard by typing its name (note that only the first three
letters of any command are significant). Typing '?' at
the keyboard (at any time when a command is expected) will display the current
function button meanings and all the commands available in the current LASERAID
mode. Typing '??' will produce a list
of all the topics for which on-line help is available in that mode, and
'?#topic' will display the on-line help for that topic.

.HEADER LEVEL 2 ^&Command-line Qualifiers\&

The following may be specified on the command line:

.LIST 

.INDEX IFF Filename

.LE ;The IFF Filename

.BL ;LASERAID can either create a new IFF file or add data to the end of an
existing one. The default file specification is LSL$IF:IFF.IFF, and this will
be used to substitute any part of the filename not given by the user. Note that
if the filename is numeric (e.g. 999), the resulting file specification will be
LSL$IF:IFF.999. 

.B  ;The commands are:

.TEST PAGE 9 

.B  ;IFF <file>######to create a new file 

.BR ;NEW <file> 

.BR ;TO  <file> 

.BR ;<file>##########(if first command on line)

.B  ;or 

.B  ;OLD <file>######to add to an existing file 

.BR ;APP <file> 

.BR ;UPD <file> 

.LE ;The 'Patch' File 

.INDEX Patch File 

.P0 ;The PATCH file (sometimes also known as the LINK file) is used to
keep the values of the digitising parameters from one session to another. Its
name defaults to LSL$LK:LNK.LAJ, however normally the user specifies the
required file by means of the 'WITh' command (e.g. WIT#URBAN). The name of the
file is often used to indicate the type of operation for which the patch file is
tuned, and if several LASERTRAKs are in use at a site, it is usual to append the
machine number to the end of the filename (e.g. URBAN114.LAJ). It is recommended
that the file type is not changed.

.TEST PAGE 6 

.LE ;Use of the LASERTRAK 

.P0 ;The command 'NOD' (NO Display) will suppress the use of the LASERTRAK.
Note, however, that very few operations can be performed under these
circumstances.

.TEST PAGE 5

.INDEX Photochromic film 

.LE ;Photochromic Film Advance

.P0 ;The photochromic film may be wound on one frame by giving the command 'NP'.

.TEST PAGE 8

.LE ;Height Coding Specifier

.P0 ;The commands HTD or HTI (optionally followed by a value) may be specified
on the command line and cause LASERAID to use the corresponding method for
coding height information (see section 5.4). By default it is assumed that
the IFF feature numbers will be used to hold height values.

.END LIST 

.TEST PAGE 6 

.B 2 ;Typical command lines are:

.BL  ;#########LAJ <file> [WITH <patchfile>] [HTD <value>]

.BL  ;######or#LAJ OLD <file> [WITH <patchfile>] [NP] 

.TEST PAGE 20

.HL 3 ^&Reading-in OLD Files\&

.INDEX OLD Files

.INDEX Very OLD Files

.P0 ;The OLD command-line option enables data to be added to an existing
IFF file. LASERAID recognises two varieties of such files,
which are termed 'old' and 'very old'.

.P0 ;An 'old' IFF file contains data digitised using converged LASERAID.
It should be unprocessed (i.e. not passed through LAPROCESS). The file
is read straight into LASERAID, any incomplete junctions are put
into the 'in-core junction list' and digitising may continue. This
is the normal use of the OLD command.

.P0 ;A 'very old' file is one digitised using a pre-convergence version
of LASERAID (old LAJ, FLF or ELA). Note that in this case the file should
already have been processed using LAPROCESS.
The data are not actually read into
LASERAID until the control point (CP) measurement has been performed,
(see section 4.3) at
which time they are overlaid onto the output coordinate system. If an
unprocessed 'very old' file is read into LASERAID the results will be
unpredictable (but wrong).

.INDEX LAPROCESS

.TEST PAGE 25

.HEADER LEVEL 2 ^&Function Button Commands\& 

.P0 ;The function buttons are numbered as follows : 

.B 2 .TEST PAGE 20 .NOFILL .LM +25 

 ----- ----- ----- ----- 

I     I     I     I     I 

I  1  I  2  I  3  I  4  I 

I     I     I     I     I 

 ----- ----- ----- ----- 

I     I     I     I     I 

I  5  I  6  I  7  I  8  I 

I     I     I     I     I 

 ----- ----- ----- ----- 

I     I     I     I     I 

I  9  I 10  I 11  I 12  I 

I     I     I     I     I 

 ----- ----- ----- ----- 

I     I     I     I     I 

I 13  I 14  I 15  I 16  I 

I     I     I     I     I 

 ----- ----- ----- ----- 

.FILL .BLANK 2 .LM -25 

.P0 ;In general, only those buttons which are valid or active are illuminated.
In the overall plan of function button commands, FB#16 is usually ABAndon, which
is the failure exit, returning to a higher program mode and undoing as much as
possible as it goes. FB#4 is usually OK or GO, which is the success exit.
Other buttons are used for commands specific to the current mode.
These commands are positioned so that the pattern of function button lights is
easily recognisable for each mode. 

.HEADER LEVEL 2 ^&Keyboard Commands\& 

.INDEX Commands 

.INDEX Keyboard 

.P0 ;Commands at the keyboard are recognised by their first three letters,
hence ABA is sufficient for the ABAndon command. If a command requires any
arguments, these must be typed on the same line. 

.PAGE 

.HEADER LEVEL 1 ^&Initialisation\& 

.INDEX Initialisation 

When the message 'Initialisation#completed' is displayed, LASERAID
has read the patch file (and dealt with any OLD file specified
on the command line),
and is ready for interaction. At this stage the program is in MAIN mode,
which is described in more detail in section 5.

.P0 ;The first action of the operator
is to set up the LASERTRAK so that it can 'see' the linework
on the negative. This is achieved by means of CHECK mode (see below).
After this a standard grid may be digitised for calibration purposes, and the
four control points are measured. 
Digitising may then commence.

.HEADER LEVEL 2 ^&CHECK Mode\&

.INDEX CHECK Mode 

CHECK mode is entered from MAIN mode by means of the commands CHK or CHEck.
It enables the LASERTRAK to be set up optimally.

.TEST PAGE 25 

.HEADER LEVEL 3 ^&Commands\& 

.INDEX CHECK Mode>Commands

.P0 ;The function button layout in CHECK mode is as follows : 

.BLANK 2 .TEST PAGE 20 .NOFILL .LM +25 

 ----- ----- ----- ----- 

I     I     I     I     I 

I STA I OCR I WHL I TXZ I 

I     I     I     I     I 

 ----- ----- ----- ----- 

I     I     I     I     I 

I PHA I     I     I CUR I 

I     I     I     I     I 

 ----- ----- ----- ----- 

I     I     I     I     I 

I THR I     I     I CLO I 

I     I     I     I     I 

 ----- ----- ----- ----- 

I     I     I     I     I 

I FOC I QUL I QUW I ABA I 

I     I     I     I     I 

 ----- ----- ----- ----- 

.FILL .BLANK 2 .TEST PAGE 18 

.I -15;Where: 

.B  .I -15;STArt##########sets the start point of the line to be scanned

.BR .I -15;OCR############sets the red/blue Offsets and Counts Ratio

.BR .I -15;WHL############draws a WHite Line on the photochromic for OCR to
use

.BR .I -15;TXZ############clears the Tektronix screen 

.BR .I -15;PHAse##########sets the phase correction

.BR .I -15;CURsor#########draws a close-up view around the cursor position,
puts up the close-up cursor and waits for a
character to be typed. It then positions the main cursor to the close-up cursor
position (used for fine positioning). Also see CLO below

.BR .I -15;THReshold######sets the digitising threshold

.BR .I -15;CLOse-up#######draws a close-up view around the cursor position

.BR .I -15;FOCus##########sets the digitising laser focus

.BR .I -15;QUL############draws a graph of the quality of line positioning
over the width of the scan 

.BR .I -15;QUW############draws a graph of the quality of line width over the
width of a scan 

.BR .I -15;ABAndon########returns to MAIN mode

.BLANK 2 .TEST PAGE 14 

.I -15;Other useful commands available are: 

.BLANK 2 

.BR .I -15;ERR############repeatedly scans a line and checks the results
(FB#16 to abandon)

.BR .I -15;PSP############Print Scanner Parameters

.BR .I -15;TYP#n##########selects one of the line types (see section 8.5)

.BR .I -15;PTY############prints out the current line types 

.BR .I -15;MOD#n##########0/1 -> edge/line mode for scanner

.BR .I -15;FRQ#n##########sets the scan frequency (must then reset PHAse)

.BR .I -15;WID#n##########sets the scan width 

.BR .I -15;PIT#n##########sets the scan pitch

.BR .I -15;TLO#n##########sets the threshold for scan encounters

.BR .I -15;TSW#n##########0/1 selects automatic/manual threshold 

.LM -25 

.P0; For information on the other commands available in CHECK mode,
refer to the on-line help. Note that most of these are only of interest to
Laser-Scan engineers.

.HEADER LEVEL 3 ^&Setting up the Digitiser\& 

.INDEX Threshold 

.INDEX Phase 

.INDEX Setting Up 

.INDEX Check Mode 

.P0 ;The digitiser threshold should be set up first, after which the phase
correction can be performed. There are, in fact, two phase corrections (one for
each axis) so this must be done on both a horizontal and a vertical track.
The process is repeated automatically for each of the different scan widths in
the 'type table' (see section 8.5). If the negative to be digitised has very
fine lines it is also worth adjusting the focus of the red digitising spot. If
any maintenance work has been performed on either the
blue or red beam optics, it may be necessary to recalculate the red/blue
offsets and counts ratios. The procedure for performing these corrections is
described in the following sections.

.P0; The
general state of the machine may be checked by drawing a few close-ups of
different areas of the negative using the CLO command, and by using the QUL
and QUW commands. If the LASERTRAK has just been turned on it is advisable to
perform some long
'dummy' scans in order to allow the thresholding circuitry to stabilise. A
stable threshold will produce crisp close-ups. 

.HEADER LEVEL 4 ^&Hardware Corrections\& 

.INDEX Hardware Corrections 

.INDEX PHX and PHY 

.INDEX OFX and OFY 

.INDEX CRX and CRY 

.INDEX Threshold 

.INDEX Auto-threshold 

.INDEX Phase 

.P0 ;These are the parameters which are concerned with the behaviour of the
digitiser hardware. They include the digitiser discrimination threshold (TLO)
and the phase corrections for the two axes (PHX and PHY). They can all be set
in CHECK mode.

.P0 ;The digitiser can work with two types of thresholding: manual or
automatic. The mode is controlled by the Threshold Switch TSW. If this is set to
1 then manual threshold is selected, and 0 selects automatic threshold.
One caveat
associated with automatic threshold is that the threshold tends to drift
towards zero if no scans are being done, and it takes about half a scan to
correct itself. Hence the first scan after a pause in digitising may not see
everything. 

.P0 ;The correct parameter values are established by repeatedly
measuring a piece of track while varying the appropriate parameter. The
encounters measured are then analysed to provide the best value for the
parameter. The procedure is as follows: 

.LIST 

.LE ; Place the cursor on a clear, straight track and press the button STArt. 

.LE ; Move the cursor to indicate the portion of the line to be measured.
(this should be at most one centimetre long on the screen) and press THR or
PHA. 

.TEST PAGE 5 

.LE ; A graph will be drawn on the close-up screen showing the results of the
digitisation against the parameter being measured. The parameter is set by
choosing the value that gives the best result, and indicating this value using
the close-up cursor. 

.END LIST 

.HEADER LEVEL 4 ^&Threshold (TLO)\& 

.P0 ;With TSW 1 set this should produce a graph similar to the one in Figure 1.
The optimum threshold is the mid point of the flat part of the threshold. 

.P0 ;The X axis of the graph is increasing TLO, and the vertical axis is the
number of black/white and white/black transitions seen in the scan. If TLO is
set at the extreme left hand side of the graph, everything is seen as white.
The spike (especially pronounced if the line has 'stipple' on one or both
sides) is where small amounts of black are beginning to appear in the white.
The horizontal line is the region where the line is seen in its entirety,
although its apparent thickness decreases with increasing TLO, and conversely
the apparent gap between adjacent lines increases. At the right hand side, the 
line is breaking up, with gaps starting to appear.

.BLANK 2 .TEST PAGE 15 .NOFILL .LM +15

|        |_\ 

|        |  _\---------- 

|        |        _^    _\ 

|        |        _^       _\ 

|        |        _^          _\ 

|       /         _^             _\ 

|      /          _^                _\ 

|      |          _^                   | 

|      |          _^                   | 

+-----------------_^----------------------------- 

                  _^ 

.B ;                   Figure 1 

.FILL .LM -15 

.TEST PAGE 25 

.HEADER LEVEL 4 ^&Phase\& 

.P0 ;A typical graph is shown in Figure 2. The correct phase is where the graph
crosses the horizontal line. If this is clear the program will choose for
itself. 

.BLANK 2 .TEST PAGE 15 .NOFILL .LM +15

| 

|   + 

|      + 

|         + 

|            + 

|---------------+-------------- 

|               _^  + 

|               _^     + 

|               _^        + 

|               _^           + 

                _^ 

.B ;                  Figure 2. 

.FILL .LM -15

.P0 ;The phase value compensates for the fact that the minimirrors usually scan
the lines in alternating directions. The phase is different for different
frequencies and different widths. If the phase is wrong, a close-up may look 
appear as in Figure 3.

.BLANK 2 .TEST PAGE 8 .NOFILL .LM +5

.BR ;        |           |           |           |           | 

.BR ;        |     |     |     |     |     |     |     |     |     | 

.BR ;        |     |     |     |     |     |     |     |     |     | 

.BR ;        |     |     |     |     |     |     |     |     |     | 

.BR ;              |           |           |           |           | 

.B ;                            Figure 3. 

.FILL .LM -5 

.P0 ;If the scanner is running at a high frequency and large pitch, the minimirrors
may already have reversed their direction before the 'along the axis move' has
completed, in which case the scan is delayed until the minimirrors have again
changed direction. This can give the appearance of perfect phase correction. 

.HEADER LEVEL 4 ^&Focus\& 

.P0 ;To set the focus of the red beam, first set up a scan vector in one axis,
draw a threshold graph and select a
point halfway down the falling side of the curve. Then press FOC (FB#13) to
draw the focus graph. This should be of similar shape to a threshold graph,
and the maximum height should be selected. The procedure should then be repeated
for the other axis to check that the digitising spot is not astigmatic.
If the graphs from the two axis do not overlay exactly (typically they will not)
then a mean position should be selected.
After setting the focus it is necessary to remeasure the
threshold to reset it to the normal value. 

.HEADER LEVEL 4 ^&Red/Blue Offsets and Counts Ratios\& 

.INDEX Red/Blue Offsets 

.INDEX Offsets 

.INDEX CRX and CRY 

.INDEX OFX and OFY 

.P0 ;These parameters are set using a clear part of the negative. First select
a wide line type by entering TYP 1 at the keyboard, then draw a
'white' line on the photochromic film by pressing STArt and moving the cursor
in the usual manner. On pressing WHL (FB#3), a line will be drawn. Then press
OCR (FB#2) which will draw a graph and set the parameters automatically.
The graphs produced should (after two or three OCR
scans) lie along the 45 degree line on the 'goal-post', without any large
deviations or systematic effects.
This setup should be performed twice with the white line approximately
horizontal and vertical. 

.HEADER LEVEL 4 ^&Confidence Checks\& 

.INDEX Confidence Checks 

.INDEX QUL 

.INDEX QUW 

.P0 ;Two commands are available to give qualitative and quantitative
measurements of the
quality of digitising. These are QUL (FB#14) and QUW (FB#15). QUL measures the
quality of observed line position across the width of a scan, and QUW measures
the quality of observed line width similarly. These are used on any
orientation of straight line, and should produce approximately horizontal
traces on the close-up screen (the vertical position of these traces is
not significant).

.PAGE

.HEADER LEVEL 2 ^&Standard Grid (CALIBRATE Mode)\&

.INDEX Grid 

.INDEX Standard Grid

.INDEX Calibration

.INDEX CALIBRATE Mode

.P0 ;Calibration provides a set of cubic coefficients which relate the
coordinate systems of the digitiser and the source map, correcting
for any distortions introduced by the photographic processes involved
in producing the digitising negative, and for any
non-linearities in the LASERTRAK optics. A calibration should be
done for each BATCH of negatives (the coefficients are preserved in the patch
file so it is not necessary to calibrate each individual
negative), and after any work has been done on the
optics of the digitiser. To perform a calibration the following procedure should
be followed:

.P0 ;Give the command CALibrate with an argument which is the size of
the grid squares. This size is only used to normalise the residual values,
and should be
given either in microns on the reduced negative or millimetres on the map. You
will then be asked to outline a grid using the LASERTRAK cursor and the function
buttons (the extent of the grid and the X/Y increments must be specified).

.P0 ;When the description of the grid is complete, it will be measured.
The program attempts to measure each intersection automatically. However, if
this fails, the operator is asked to measure it manually using the 
commands described in the next section.
When the grid has been measured, press OK (FB#4) to perform
the fit; the calibration coefficients are calculated and the residuals are
displayed. If the residuals are very uneven, or if the RMS residuals are
large, then reject the calibration by pressing NO (FB#16). Otherwise accept them
with OK (FB#4). If accepted, the coefficients will be applied to subsequent
coordinate data prior to output to the IFF file and will be
saved in the patch file at end of session. If the fit is rejected then you can
try again with better threshold and/or phase, or a better grid. 

.P0 ;If the switch FCT is set to 1 in HELP mode (see section 7), then the
calibration is incorporated in the control point (CP) set up described in
section 4.3.

.TEST PAGE 30 

.HEADER LEVEL 3 ^&Commands\&

.INDEX CALIBRATE Mode>Commands

.INDEX Manual Measure 

.P0 ;The function button layout in CALIBRATE mode is as follows:

.BLANK 2 .TEST PAGE 20 .NOFILL .LM +25 

 ----- ----- ----- ----- 

I     I     I     I     I 

I     I AUT I     I  OK I 

I     I     I     I     I 

 ----- ----- ----- ----- 

I     I     I     I     I 

I     I     I     I MAN I 

I     I     I     I     I 

 ----- ----- ----- ----- 

I     I     I     I     I 

I     I     I     I SKI I 

I     I     I     I     I 

 ----- ----- ----- ----- 

I     I     I     I     I 

I CON I     I     I  NO I 

I     I     I     I     I 

 ----- ----- ----- ----- 

.BLANK 2 .TEST PAGE 8 

.I -15;Where: 

.B  .I -15;AUTomatic######is retry automatic point digitising

.BR .I -15;OK#############is accept the cursor position

.BR .I -15;MANual#########is draw close-up area and invoke cross-hair cursor

.BR .I -15;SKIp###########is skip this point

.BR .I -15;CONtinue#######is set/unset automatic continuation after each point

.BR .I -15;NO#############is return to MAIN mode

.FILL .LM -25 

.HEADER LEVEL 3 ^&Recovery from a Bad Calibration\&

.INDEX RECover Command

.INDEX Calibration>Bad - recovery from

.P0 ;If a digitised dataset is found to be distorted and the problem is traced
to a bad CALibration (e.g. the wrong grid negative was used),
a mechanism is available
by which a new calibration can be substituted, hopefully correcting the
problem. It should be noted that the ^&same LASERTRAK\& must be used both
to digitise and correct the data. The LASERTRAK device name and machine
number are included in the operator identification text (in the
IFF NS entries), assuming that the OPerator command  was not given (see
section 4.4).

.P0; A ^&COPY\& of the ^&UNPROCESSED\& distorted file should be read into
converged LASERAID
using the 'OLD' command option. A CALibration and Control Point measurement
should be made as usual, and then the RECover command can be given.
When the command finishes, LASERAID can be terminated as usual and the
calibration will have been replaced.

.P0; It should be noted that it is NOT possible to correct 'very old' files
(digitised using pre-convergence versions of LASERAID) in this way.

.PAGE

.HEADER LEVEL 2 ^&Control Points (MEASURE Mode)\& 

.INDEX MEASURE Mode

.INDEX Control Points 

.P0 ;The Control Points are measured by giving the command CP in MAIN mode.
The LASERTRAK
cursor will automatically move to the vicinity of the first control point and
the appropriate prompt will be displayed on the terminal screen (NW for the
first
point). The coordinates of this control point in map (target) space may then be
entered to
replace the current values, and the cursor should be positioned over the
point using the tracker ball. AUT (FB#2) will then attempt to digitise the
control point automatically. If this fails the close-up screen and cross-hair
cursor may be used. The available commands are listed in the next section.

.P0 ;When the command OK (FB#4) is given, the position is stored and the cursor
moves to the next control point for the process to be repeated.
Note however that it is not sufficient simply to move the cursor to the required
position and press FB#4. A scan must be performed for the position to be
registered.
After all four
control points have been processed in this way, the whole set may be either
accepted or rejected. 

.INDEX Fiducial

.INDEX Check fiducial

.P0; After the four control points have been measured
the user is asked to specify a check fiducial. This intersection will be
remeasured at regular intervals to check for LASERTRAK slip, etc.
If the specified tolerance is exceeded then
a message is printed and the last feature may be deleted by typing CANcel.
The control points should then be redigitised before continuing. 

.P0 ;If the user specifies a number in the range 1 to 4, this will
select the corresponding control point as the fiducial.
A fiducial number of zero disables fiducial checking completely. 

.P0; If the user specifies fiducial
'-1', the tracker ball may be used to select a fiducial which is
unrelated to the control points (it need only be an intersection of
suitable quality). The user rolls the tracker ball to the required
intersection and presses FB#4. The intersection is then scanned and, if
found successfully, it may be accepted using FB#4 (otherwise it may
be re-scanned in the usual manner).

.P0; When the fiducial has been accepted, LASERAID will ask how often the
fiducial check should be performed ('After how many features ?'), and
for a measurement tolerance in microns on the negative.
Typical values for these might be
every 5 features with an error limit of 15 microns. The command CHF (q.v.)
may be used to alter these values. 

.P0; It should be noted that once a check fiducial has been selected
(by whatever means), if -1 is entered on SUBSEQUENT occasions it will
cause the SAME fiducial and set of parameters to be used again.
The user does not have to roll the tracker ball or answer any further
questions (-1 is taken to mean 'same again').

.P0; If the user subsequently wishes to select a new fiducial by means of
the tracker ball, the existing settings must first be cleared
by specifying CHF#0#0.

.P0; If the switch FCT is set to 1, calibration and control point measurement
are merged into
one operation. The combined procedure is to type CP, which now causes a
calibration to be performed.
At the end, any grid intersection may be selected as a check
fiducial by positioning the cursor in its vicinity and pressing FB#4, after
which the usual questions are asked. 

.TEST PAGE 30 

.HEADER LEVEL 3 ^&Commands\&

.INDEX MEASURE Mode>Commands

.INDEX Manual Measure 

.P0 ;The function button layout in MEASURE mode is as follows:

.BLANK 2 .TEST PAGE 20 .NOFILL .LM +25 

 ----- ----- ----- ----- 

I     I     I     I     I 

I     I AUT I     I  OK I 

I     I     I     I     I 

 ----- ----- ----- ----- 

I     I     I     I     I 

I     I     I     I MAN I 

I     I     I     I     I 

 ----- ----- ----- ----- 

I     I     I     I     I 

I     I     I     I     I 

I     I     I     I     I 

 ----- ----- ----- ----- 

I     I     I     I     I 

I     I     I     I  NO I 

I     I     I     I     I 

 ----- ----- ----- ----- 

.BLANK 2 .TEST PAGE 8 

.I -15;Where: 

.B  .I -15;AUTomatic######is retry automatic point digitising

.BR .I -15;OK#############is accept the cursor position

.BR .I -15;MANual#########is draw close-up area and invoke cross-hair cursor

.BR .I -15;NO#############is return to MAIN mode

.FILL .LM -25 

.HEADER LEVEL 2 ^&Operator Identification\& 

.INDEX Operator Identification 

.INDEX Identification 

.P0 ;The command OP (or IDE) allows the user to specify the 'operator
identification' (e.g. operator name, map number, date etc.) which is entered in
the NS entries of the IFF file.
A default entry (containing the date, time, username and LASERTRAK machine
number) is created if the command is not given.

.PAGE 

.HEADER LEVEL 1 ^&Feature Selection (MAIN Mode)\&

.INDEX MAIN Mode

.INDEX Feature Selection 

.P0 ;As the name suggests, MAIN mode is the outermost level of LASERAID.
It contains the commands described in previous sections for entering CHECK mode
(CHK), CALIBRATE mode (CAL) and MEASURE mode (CP), as well as LOCATE mode (LOC)
which is described later (section 5.5). The EOS command for terminating a
session is also given in MAIN mode. As will be seen, several other commands are
available for controlling coding, pre-guidance and paintout.

.P0 ;The primary function of MAIN mode is, however, feature selection
(corresponding to 'stage two' as described in section 1.2).
A feature is selected by placing the LASERTRAK cursor over it and pressing
the appropriate 'feature start' button (i.e. FB 1, 2, 3, 5, 6 or 7).

.TEST PAGE 22 

.HEADER LEVEL 2 ^&Commands\& 

.INDEX MAIN Mode>Commands 

.INDEX Function Buttons 

.P0 ;The function button layout in MAIN mode is as follows:

.BLANK 2 .TEST PAGE 20 .NOFILL .LM +25 

 ----- ----- ----- ----- 

I     I     I     I     I 

I STR I CUR I RAN I REP I 

I     I     I     I     I 

 ----- ----- ----- ----- 

I     I     I     I     I 

I ORT I POI I SMF I GNF I 

I     I     I     I     I 

 ----- ----- ----- ----- 

I     I     I     I     I 

I POS I FIN I SQR I REV I 

I     I     I     I     I 

 ----- ----- ----- ----- 

I     I     I     I     I 

I OPE I DEC I INC I ABA I 

I     I     I     I     I 

 ----- ----- ----- ----- 

.FILL .BLANK 2 .TEST PAGE 10 

.I -15;Where: 

.B  .I -15;STRaight#######is start feature (nominally STRaight)

.BR .I -15;CURved#########is start feature (nominally CURved)

.BR .I -15;RANdom#########is start feature (nominally RANdom)

.BR .I -15;REPaint########REPaints captured features (FB#16 to abandon)

.BR .I -15;ORThogonal#####is start feature (nominally ORThogonal)

.BR .I -15;POInt##########is start single POInt feature

.BR .I -15;SMF############is start SMall Feature

.BR .I -15;GNF############is Get Next Feature from guidance file, or next
junction

.BR .I -15;POS############disables paint-out (Paint-Out Suppress)

.BR .I -15;FINd###########enables automatic feature FINd-and-start (fumble)

.BR .I -15;SQR############sets squaring flag in second word of FS entry

.BR .I -15;REVerse########causes closed features to be clockwise rather than
anticlockwise

.BR .I -15;OPEn###########disables closure detection

.BR .I -15;DECrement######causes the NF number to be DECremented by MNF (but
see section 5.4)

.BR .I -15;INCrement######causes the NF number to be INCremented by MNF (but
see section 5.4)

.BR .I -15;ABAndon########resets REVerse and PO to initial states (repeated
presses position the cursor to the centre of the screen)

.LM-20

.P0 ;The following keyboard-only commands are also available (these
are shown in the order given by typing '?' in MAIN mode):

.LM+20

.TEST PAGE 5 

.B  .I -15;PO#############sets Paint-out Only for this feature (do not keep the
data)

.BR .I -15;GUI#file#######take GUIdance information from an IFF file
(section 10)

.BR .I -15;VFG#n##########sets Very Fast Guidance on/off if n=1/0

.BR .I -15;SKIp#n#########skips to feature n in the guidance file

.BR .I -15;WIN############define a window for paintout

.BR .I -15;FOR#n1,n2...###paint out FORwards through layers n1,n2 of the file
(cf. REPaint for reverse)

.BR .I -15;LOCate#########LOCate nearest captured feature to the cursor
(section 5.5)

.BR .I -15;MCF############Measure Check Fid (repeats at interval set by CFT)

.BR .I -15;CP#############measure Control Points

.BR .I -15;CFT#r##########sets Check Fid Time (see MCF)

.BR .I -15;CHF#n1,n2,r####sets Check Fid to n1, every n2 features, with error
r

.BR .I -15;CAL#r##########CALibrates the machine with grid of spacing r

.BR .I -15;CCP#r##########CALibrates with control points, as CP with FCT=1

.BR .I -15;REC############RECover from a bad CALibration

.BR .I -15;OP##<text> 

.BR .I -15;#or 

.BR .I -15;IDE#<text>#####input OPerator IDEntification (section 4.4)

.BR .I -15;TC##<text>#####input Transmitted Comment

.BR .I -15;TEX#<text> 

.BR .I -15;#or 

.BR .I -15;CH##<text>#####rest of line is taken as literal text and entered
into the file

.BR .I -15;OV#n 

.BR .I -15;#or 

.BR .I -15;LAY#n##########select IFF OVerlay n to hold the data

.BR .I -15;SS#n###########Symbol Select

.BR .I -15;PT#n###########Plotter Type

.BR .I -15;NF#n###########change current NF number to n (1<=n<=32767)

.BR .I -15;ACB#n##########set Ancillary Code Base to n (see section 5.3)

.BR .I -15;SAC#n1#n2#text#set or show Standing Ancillary Code (see section 5.3)

.BR .I -15;PON#or#PLN#####Print Overlay Numbers

.BR .I -15;PMF############Print Maximum Feature numbers for each overlay

.BR .I -15;FCF#n1#n2######set Feature Code for Function button n1 to n2

.BR .I -15;TYF#n1#n2######set TYpe for Function button n1 to n2

.BR .I -15;PFB############Print Function Button meanings

.BR .I -15;GFC#n1#n2######Guidance Feature Code allocations (section 10)

.BR .I -15;CHK#or#CHEck###enter CHECK mode

.BR .I -15;MNF#n##########set manual increment of NF number to n (see INC)

.BR .I -15;ANF#n##########set auto increment of feature number to n

.BR .I -15;HTD#[r]########capture height as real number (see section 5.4)

.BR .I -15;HTI#[n]########capture height as integer (see section 5.4)

.BR .I -15;MHT#n##########manual height increment (see section 5.4)

.BR .I -15;AHT#n##########automatic height increment (see section 5.4)

.BR .I -15;NFI############cancel HTD/HTI (see section 5.4)

.BR .I -15;PNT#[n]########set or show the current point feature mode (see
section 7.2)

.BR .I -15;TIMe###########print out TIMings so far

.BR .I -15;ZTI############zero timings

.BR .I -15;PMI############initialise performance monitor (FOR LSL USE ONLY)

.BR .I -15;PME############end performance monitoring (FOR LSL USE ONLY)

.BR .I -15;PCF#[r]########move Photochromic Film on [r frames (default 1.0)]

.BR .I -15;TYPe#n#########set line type to n

.BR .I -15;CANcel#########CANcel (delete) last feature digitised

.BR .I -15;WHA############prints out WHAt ID, patch file, IFF file are

.BR .I -15;ZJC#or#ZIJ#####Zero (forget) in-core junctions

.BR .I -15;WIZ############Debugging aid (FOR LSL USE ONLY)

.BR .I -15;ADJ############enters 'adjust mode' (privileged HELP mode)

.BR .I -15;EOS############End Of Session (program exit)

.BR .I -15;NXG############NeXt Guidance command (section 10)

.LM -25 

.BL 2 ;The on-line help contains additional information on many of these
commands.

.HEADER LEVEL 2 ^&Starting a Feature\& 

.INDEX Line Types

.INDEX Feature Types

.INDEX Type Table

.INDEX Feature codes

.P0 ;Each of the 'feature start' function buttons  (FBs 1, 2, 3, 5, 6 and 7)
may have associated with it:

.LIST

.LE ;a feature code, selectable using the FCF command

.LE ;an implicit 'feature type': linear feature for buttons 1, 2, 3 and 5,
point feature (section 7.2) for button 6, and small feature (section 7.3) for
button 7

.LE ;an explicit 'line type', defining a set of LASERAID parameters to be used
when following features started using this button. These parameter values are
held in the 'type table' (section 8.5), and selected via the TYF command. 
Seven line types are available, and any of these can be assigned to any
of the 'start' function buttons. It is NOT the case that FB#1 must use
type 1 etc.

.END LIST

It should be noted that the names of FBs 1, 2, 3 and 5 (i.e. STRaight,
CURved, RANdom
and ORThogonal) do not have any enforced significance. FB#1 can be set up to
follow a tortuous contour as easily as FB#3. However, the meanings of
FB#6 and FB#7 ^&are\& 'hard-wired'; for example it is not possible to
follow a contour using FB#6, or to measure a point feature using FB#1.
However, by assigning different line types to FB#7 it is possible
to determine the MODe (i.e. edge or line) used when capturing small features
(see section 7.3).

.HEADER LEVEL 2 ^&Ancillary Coding\& 

.INDEX Ancillary Coding

.INDEX ACB

.INDEX AC

.INDEX SAC

.P0 ;IFF features may contain any number of Ancillary Code (AC) entries which
can be used to hold user-specific coding information. AC entries are
characterised by their TYPE; some AC types have fixed definitions (see the next
section) but many are available for user-specific applications. In practice, AC
types 0 - 99 should be considered to be reserved by Laser-Scan for current or
future applications. Each user will normally be allocated a set of 20
contiguous AC types for their own use; additional groups will be issued on
request. Users should restrict themselves to using their own ACs, otherwise
confusion may arise when the data are processed using general Laser-Scan
utilities.

.P0 ;As each users group of private ACs will contain a constant offset (e.g.
he may be allocated the range 200 to 219), it would be inconvenient to have
to enter the whole AC type each time. Hence the ACB (AC Base) command is
provided. This specifies a number (200 in our example) which will be added
to the type of all ACs explicitly created using SAC or AC, before the entry is
inserted in the IFF file. The AC base is held in the patch file and will
normally be transparent to the user once the system is installed. Hence each
user can consider himself to have his own group of ACs in the range 0 to 19.
The command is provided in case of exceptional circumstances where the user may
wish to access a different range of ACs.

.P0 ;AC entries may be created in several ways. LASERAID may automatically
create height ACs (see below), the user may specify that a particular AC
should appear in all features until further notice (this is termed the
Standing AC and is created using the SAC command), or explicit AC entries
may be added to each feature using the AC command.

.P0 ;The Standing AC (SAC) command may only be given in MAIN mode (before a
feature is begun). The format of the command is:

.P10 ;SAC type value [text]

.BL ;This AC is inserted in all subsequent features until altered by another
SAC command or explicitly disabled by SAC 0. It is also preserved in the patch
file between sessions. Note that SAC 0 0 is a valid setting and produces:

.P10 ;AC 'AC base' 0

.BL ;In the AC and SAC commands, the AC 'value' is examined for a decimal point
and is stored as a real number if one is found.

.BL2 ;For example, the commands:

.P10 ;ACB 1000
.P10 ;SAC 1 50

.P10 ;<start new feature>

.P10 ;AC 5 123.6 POINT ELEVATION

.BL ;Would cause the following ACs to be inserted in the IFF file:

.P10 ;AC 1001 50
.P10 ;AC 1005 123.6 POINT ELEVATION

.P0 ;It should be noted that the AC command MAY only be given after a feature
has been started (using function buttons 1, 2, 3, 5, 6 or 7) and SHOULD only be
given before any actual line following has begun for that feature. AC entries
specified after line following has begun may or may not be accepted (LASERAID
will reject any attempt to create an AC once the first ST in the feature has
been output to the IFF file).

.P0 ;The current Standing AC and AC base may be examined by just typing SAC and
ACB, respectively.

.HEADER LEVEL 2 ^&Height Coding\& 

.INDEX Height Coding

.INDEX HTD and HTI

.INDEX NFI

.P0 ;The traditional technique for holding height information within IFF has
been to use the feature (NF) number, manipulated in LASERAID via the ANF and
MNF increment commands. This approach has many limitations (large, negative or
non-integer values are difficult to represent) and so a mechanism has been
introduced whereby heights may be held in special AC entries. The user may
choose to code height information either as real numbers (stored in AC type 3
entries) or as integers (stored in AC type 2 entries). The current height may
be displayed beside the cursor (in place of the feature number) and may be
incremented automatically and/or manually.

.BL ;The commands HTD, HTI, MHT, AHT and NFI control the height coding
mechanism. These determine both what is displayed beside the cursor and what
is output to the IFF file. The default is to display the NF number (an implicit
NFI command); HTD displays the height as a real (decimal) number (AC 3), while
HTI displays the height as an integer (AC 2). If HTD or HTI is given an
argument, the appropriate mode will be entered and the height will be
initialised to that value, e.g.

.P10

HTD 23.5

.P10

HTI 120

.BL

Note that HTD 100 is allowed, but HTI 53.5 is not.

.BL

Once LASERAID is in 'height' mode, any numbers typed on their own at the
keyboard (in MAIN mode) are interpreted as heights rather than feature
numbers (the default). The NF number output to the IFF file is, however, still
incremented by the value specified using ANF (default 1) as usual, although it
is not displayed. The NF command may still be used to assign specific NF values.

.P0 ;MHT and AHT control the manual and automatic height increments (both
zero by default); these are directly analogous to the ANF and MNF commands.

.P0 ;NFI returns to displaying the current NF number. It should be noted that
in this mode NO HEIGHT AC ENTRIES ARE PRODUCED.

.P0 ;All of these commands may be given in MAIN mode (i.e. before starting
a feature using function buttons 1, 2, 3, 5, 6 or 7), however HTD and HTI
may also be specified on the command line so that LASERAID comes up in the
appropriate mode. For example:

.P10

LAJ FRED WIT LNK122 HTD 300.5

.BL

will put LASERAID into 'real height' mode and initialise the height to 300.5.

.HEADER LEVEL 2 ^&LOCATE Mode\& 

.P0 ;The LOCate command enables the user to find up to four previously
digitised features in the immediate vicinity of the LASERTRAK cursor
and selectively repaint or delete them. The features must lie within a screen
area of about 3#cm square centred on the cursor in order to be found.
If any features are found, LASERAID enters LOCATE mode to allow interaction with
them.

.P0 ;It should be noted that LOCate has to scan the whole IFF file and
may be very slow if a lot of data has been captured. The search can be
be abandoned by pressing FB#16.

.HEADER LEVEL 3 ^&Commands\& 

.INDEX LOCATE Mode>Commands 

.INDEX Function Buttons 

.P0 ;The function button layout in LOCATE mode is as follows:

.BLANK 2 .TEST PAGE 20 .NOFILL .LM +25 

 ----- ----- ----- ----- 

I     I     I     I     I 

I NXT I     I     I REP I 

I     I     I     I     I 

 ----- ----- ----- ----- 

I     I     I     I     I 

I     I     I     I     I 

I     I     I     I     I 

 ----- ----- ----- ----- 

I     I     I     I     I 

I     I     I     I     I 

I     I     I     I     I 

 ----- ----- ----- ----- 

I     I     I     I     I 

I DEL I     I     I ABA I 

I     I     I     I     I 

 ----- ----- ----- ----- 

.FILL .BLANK 2 .TEST PAGE 10 

.I -15;Where: 

.B  .I -15;NXT############is get next feature in the 'found' list

.BR .I -15;REPaint########is repaint the refreshed feature

.BR .I -15;DELete#########is delete the refreshed feature (irretrievably)

.BR .I -15;ABAndon########is return to MAIN mode

.LM-25

.PAGE 

.HEADER LEVEL 1 ^&HELP Mode\& 

.INDEX HELP Mode 

.P0 ;When a line-feature 'start' button is pressed in MAIN mode (see section 5)
then, assuming that FINd (FB#10) is not enabled,
the program pauses with the scan vector (or 'tramlines') displayed for
guidance. LASERAID is then in HELP mode.

.P0 ;HELP mode is the main interaction level, in which all the line-following
parameters are available to the operator as well as commands for controlling
the digitising process. The most important parameters are discussed in section
8 (with additional information in Appendix A and the on-line help), and the
most common commands are described below. Some of these commands are discussed
further in section 7.

.INDEX ADJust Command

.INDEX Parameters>Modifying

.P0 ;HELP mode may be temporarily entered from MAIN mode for the purposes of
examining or modifying parameter values by means of the ADJust command (section
5.1).

.TEST PAGE 25 

.HEADER LEVEL 2 ^&Commands\& 

.P0 ;HELP mode is different from the other program states described in this
document, as the function button layout is context-dependent. The current
function button meanings can be displayed at any time when a
command is expected by typing '?'

.P0 ;The initial function button layout in HELP mode is as follows: 

.BLANK 2 .TEST PAGE 20 .NOFILL .LM +25 

 ----- ----- ----- ----- 

I     I     I     I     I 

I     I     I ONE I  GO I 

I     I     I     I     I 

 ----- ----- ----- ----- 

I     I     I     I     I 

I     I     I     I NXT I 

I     I     I     I     I 

 ----- ----- ----- ----- 

I     I     I     I     I 

I JIN I  MP I HOP I END I 

I     I     I     I     I 

 ----- ----- ----- ----- 

I     I     I     I     I 

I FPJ I MOV I  BB I ABA I 

I     I     I     I     I 

 ----- ----- ----- ----- 

.BLANK 2 .TEST PAGE 14 .FILL 

.I -15;Where: 

.B  .I -15;ONE############is to control the direction of one scan vector before
proceeding

.BR .I -15;GO#############is to proceed normally

.BR .I -15;NXT############displays the possible paths available cyclically

.BR .I -15;JIN############explores the region for possible junctions

.BR .I -15;MP#############inserts a manual Master Point at the cursor position

.BR .I -15;HOP############is used to jump over bad bits of line

.BR .I -15;END############accepts the feature and returns to MAIN mode.

.BR .I -15;FPJ############FliPs Junction recognition (disable/re-enable - see
section 8.6)

.BR .I -15;MOVe###########changes the cursor mode between 'change angle' and
'change position' 

.BR .I -15;BB#############enables 'rolling' mode for backing up along the
digitised line

.BR .I -15;ABAndon########abandons capture and returns to MAIN mode.

.LM -25 

.BLANK 1 .TEST PAGE 20

.P0 ;After 'BB' has been pressed (to enter 'rolling' mode) the function button
layout is as follows: 

.BLANK 2 .NOFILL .LM +25 

 ----- ----- ----- ----- 

I     I     I     I     I 

I     I     I ONE I  GO I 

I     I     I     I     I 

 ----- ----- ----- ----- 

I     I     I     I     I 

I     I     I     I LJN I 

I     I     I     I     I 

 ----- ----- ----- ----- 

I     I     I     I     I 

I JIN I  MP I HOP I END I 

I     I     I     I     I 

 ----- ----- ----- ----- 

I     I     I     I     I 

I FPJ I MOV I BAC I ABA I 

I     I     I     I     I 

 ----- ----- ----- ----- 

.BLANK 2 .TEST PAGE 4 .FILL 

.I -15;Where: 

.B  .I -15;LJN############is Locate JunctioN near cursor (if any)

.BR .I -15;BAC############is delete the last master point (irretrievably)

.LM -25

.BL

.P0 ;Other HELP mode function button patterns are described under 'Small Feature
capture' (section 7.3).

.TEST PAGE 9

.BL

.P0 ;Some useful keyboard-only commands in HELP mode are: 

.FILL .LM +25

.B  .I -15;PPP############print primary (user) parameters (see section 8.1)

.BR .I -15;PAP############print all parameters (see section 8.1)

.BR .I -15;PTY############print type table (see section 8.5)

.BR .I -15;PMA############print macro commands (see section 9)

.BR .I -15;PLW############print limits and weights (see section 8.4)

.BR .I -15;TYPe#n#########set current line type to n

.LM -25

.TEST PAGE 10

.HEADER LEVEL 2 ^&Operator Guidance\&

.INDEX Operator Guidance

.P0 ;Apart from at the start of a feature, there are two other cases where the
program will automatically pause for operator guidance.
The first is where it has found a piece of line which it believes to be the
correct one, but requires verification because either there are several
equally good possibilities, or the only one is of poor quality (see section
8.7 for a discussion of chain quality). In either case
the best line is shown in refresh and alternatives may be selected using
NXT (FB#8). If it has totally the wrong line then BB (FB#15) may be used
to enable backtracking, and ONE (FB#3) may be used to display a scan vector
with which to guide the program in the correct direction. 

.P0 ;The other occasion is when the digitiser cannot see any continuation of
the current line. In this case it shows a scan vector to request a new
direction in which to look. The commands MP (manual Master Point) and HOP are
useful in this case to get across difficult sections of line. 

.HEADER LEVEL 2 ^&Manual Intervention\&

.INDEX Manual Intervention

The user may interrupt the line following process by pressing FB#15. This
button, which is always available when following and corresponds to the command
macro INT (see section 9), causes LASERAID to pause in HELP mode. All of the
interaction facilities associated with HELP mode are then available.

.HEADER LEVEL 2 ^&Manual Digitising\&

.INDEX Manual Digitising

.P0 ;In the event that the line work is too complex, or of such poor quality 
that the digitiser cannot follow it automatically, three methods of manual 
digitising are available

.LIST

.LE ;Pressing MP (FB#10) once will enter MANUAL mode, and 
repeated presses will create a Master Point at the LASERTRAK cursor position,
controlled by the tracker ball.

.LE ;The master points may be positioned more accurately in MANUAL mode by 
typing CLOse-up at the keyboard. A view of the area around the LASERTRAK cursor
is drawn on the Tektronix.
The cross-hair cursor may then be positioned over the point to be created, and 
any key pressed to accept it. This positions the LASERTRAK cursor, after which 
FB#10 may be pressed to create a master point.

.LE ;Several master points may be created using the Tektronix screen by typing 
the command MANual at the keyboard. This again draws a close-up on the screen
and invokes the cross-hair cursor, but this time each press of the space bar
creates a master point. The letter 'E' ends the sequence (without creating a
master point).

.END LIST

.P0 ;When a manual point has been created using the first two methods, it
can be turned into a junction by means of the MAJ command (see section 7.1.1).
The same is true of the final master point created using the third method.

.PAGE 

.HEADER LEVEL 1 ^&Feature Capture\& 

.INDEX Feature Capture 

.HEADER LEVEL 2 ^&Line Features\& 

.INDEX Line Following 

.P0 ;As mentioned in section 6, when a line-feature 'start' button is pressed
in MAIN mode the scan vector is usually displayed (but see the discussion of
FINd below), and LASERAID is in HELP mode. On pressing GO (FB#4) the program
will search for the first section of track and will pause with anything it has
found displayed in refresh. If the wrong section of line has been located,
NXT (FB#8) may be used to cycle through the known 'chain elements'. If none
of these is acceptable, or nothing was seen at all, ONE (FB#3) may be pressed
after which the correct scan position and orientation can be indicated via
the scan vector and tracker ball. MOV (FB#14) switches between 'change scan
orientation' and 'change scan position'. When the scan vector is repositioned,
GO (FB#4) may be pressed again.

.P0 ;Once an acceptable starting track segment is displayed, automatic feature
capture (line following) may be initiated by pressing GO (FB#4) again, and
following will continue until:

.LIST

.LE

the end of the feature is reached, or 

.LE

the program requires assistance (see section 6.2), or

.LE

the operator intervenes manually (see section 6.3).

.END LIST

.P0 ;Note that if automatic FINd (FB#10) has been enabled in MAIN mode (this
is often referred to as 'fumbling'), then line following will begin immediately
the 'feature start' button is pressed. In this case the operator has no control
over the starting direction. Typically a feature digitised using FINd will be
started in the middle. When one half of the line has been captured it may be
accepted using END (FB#12), and LASERAID will then return to the start point
with the scan oriented so as to digitise the second half. Line following may be
initiated by pressing GO (FB#4). Line types which may have FINd enabled should
contain the parameter INI set to 15 in the type table (see also section 8.5.3).
Note that FINd should not be used with features which contain junctions, as
current post-processing software is unable to re-order such features to give
a common direction.

.P0 ;LASERAID can follow linear features in either 'edge mode' (for the boundary
of solid areas) or 'line mode' (for contours, rivers etc.). The required mode is
selected by the value of the parameter MOD given to the line type assigned
to the starting function button (see section 8.5). MOD 1 selects line mode and
MOD 0 selects edge mode.

.HEADER LEVEL 3 ^&Junctions\& 

.INDEX Junctions

.INDEX Parameters>Junctions


.P0 ;LASERAID is able to capture 'link-and-node' data by recognising junctions
in continuous linework. The junction 'arms' (or links) are 'snapped' to a common
point to ensure the geometrical integrity of the data, even if the actual IFF
cross-pointers are subsequently removed.

.P0 ;In order to recognise junctions, at least one line type must be set up
in the type table to have appropriate parameter values. The most important of
these parameters are JNC, INI, CRS and SPD, which are discussed in section 8.
If junction spotting is enabled LASERAID will, while line following, be
sensitive to conditions symptomatic of junctions and will attempt to locate
a junction if these conditions are met. The first time a particular junction is
encountered, a scan is made in both axes (using line type 7), and an attempt is
made to decipher the junction to determine its position and number of arms. If
this is successful, the number of arms is displayed in refresh for verification
purposes.

.P0 ;If 'auto-accept-and-go' is enabled (see section 8.6), LASERAID will
automatically accept the junction after a brief pause for verification, and
will continue line following along an arm selected on the basis of parameter
CRS (q.v.). Otherwise the program will wait at each junction with the
appropriate exit arm indicated in refresh. If GO (FB#4) is pressed this arm
will be appended and digitising will continue. NXT (FB#8) will cycle through
the arms (and possibly other junctions if more that one has been found in a
scan), and JIN (FB#9) will perform another junction search and analysis.

.P0 ;Once a junction has been found it is stored in the so-called 'in-core
junction list' until all of its arms have been digitised. By default this
list is used to recognise existing junctions during line following, causing
LASERAID to 'snap' to these automatically without performing another complete
area-scan each time they are visited.

.P0 ;In order that junctions can be 'spotted' on subsequent visits, it is
necessary to leave a portion of each arm unpainted when the junction is
accepted. This is controlled by the parameter SPD which is discussed in section
8.6.

.P0 ;The command FPJ (FB#13) in HELP mode enables junction recognition to be
disabled and re-enabled after line following has begun. This can sometimes be
useful when following poor quality linework where the true junctions are widely
separated and the data quality causes LASERAID to do unnecessary work rejecting
spurious encounters. The user pauses line following using FB#15 and then presses
FB#13. Line following can be resumed using FB#4. The current state of junction
recognition (i.e. enabled or disabled) is indicated by FB#13 (lit => enabled).

.P0 ;The in-core list mentioned above can also be used for pre-guidance,
assuming no external guidance file is already open (see section 10).
After a junction has been accepted, pressing FB#8 (GNF) will cause the
program to position the cursor over the next incomplete junction in the list.
Repeated use of FB#8 will cycle through this list. After
FB#8, the normal feature-start button can be used to 
locate the junction, and it should be seen that the arm offered is one of
the currently unsatisfied ones. If the digitiser captures a junction which
has no remaining unsatisfied arms (i.e. there is no exit route), the message
'End of feature ?' is displayed. This is to indicate to the user that he should
not expect to be able to line-follow out of the junction - the question is
rhetorical!

.P0 ;If the digitiser misses a junction or, for example, auto-accept-and-go is
enabled and the program's idea of the best arm to follow does not accord with
the operator's, line following can be stopped using FB#15 and HELP mode will
be entered. Pressing FB#15 (BB) again will enable
rolling mode (and BACk), so that the digitised line can be rolled back to the
junction position, and junction recognition can be invoked manually using JIN
(FB#9).
Alternatively, if the junction was recognised correctly the user can roll back
(or BACk up with FB#15) until he is ON
the junction (the tolerance is JPT), and press FB#8 (LJN - Locate
JunctioN). If he is
close enough to the junction it is found, taken 'in hand' and the previously
followed arm is offered. FB#8 has then been redefined to be NXT, which can be
used to cycle through the arms. It should be noted that the refresh arm 
indicated at this stage is a direction only, it will typically not lie exactly
along the source linework. When the required arm is indicated, FB#4 will 
restart line following.



.P0 ;If LASERAID is unable to capture a particular junction (e.g. because
the line quality is too poor), a 'manual' junction can be created by using the
command 'MAJ n' in association with MANUAL mode digitising (see section 6.4).
The mandatory argument 'n' is the number of junction arms. When a manual
junction is subsequently encountered while line following, or located using LJN,
the message 'Manual junction' is output on the close-up screen and the program
will pause with the scan vector ('tramlines') displayed for the user
to choose a direction to
resume line following (or accept the feature). The tramlines can be rotated
using the tracker ball as usual, and FB#4 will resume line following in the
chosen direction. Note that FB#3 (ONE) should not normally be pressed in this
situation as this may cause LASERAID simply to find the manual junction again.

.BL

Note that there are some restrictions on the use of manual junctions.
Firstly, although
LASERAID knows how many arms the manual junction has (this is the mandatory
argument
to the MAJ command), the angles are unknown. This means that the IFF junction
structure cannot be completely set up.
Secondly, no attempt is made at present to spot the fact
that all the arms of a manual junction have been measured. This has the side
effect that manual junctions are never automatically deleted from the in-core
junction list and may be repeatedly offered. If all other junctions are complete
then the WHOLE in-core list can be deleted by using the ZJC command.

.HEADER LEVEL 3 ^&Inverse Polarity Linework\& 

.INDEX INV

.INDEX Inverse polarity

.P0 ;By default, LASERAID line-follows negatives with
'white' (transparent) lines on a 'black' (opaque) background. The command
INV causes the polarity of all encounters returned by the
LASERTRAK to be inverted, enabling black lines to be followed. Specifying
INV 1 (either in HELP mode or in the type tables) enables this facility;
INV 0 disables it. The current main use of this mechanism is in the following of
double-line rivers or roads where only a single centre line is required. Paint
out is achieved by drawing a pair of parallel lines either side of the
measured centre line. The separation of these lines is set using the current
THK/PTH mechanism (see section 8),
but some care should be exercised when setting this value
as the painted lines are rather thin. A good rule of thumb is to determine
the typical line width using the Z and C macros (see the on-line help),
and then set the thickness
to be about 1.5 times this value. It should be noted that the LASERTRAK
^&hardware\& still considers black to be background, and hence is not able to
clean up the signal as efficiently as normal. It may be found, therefore, that
the line following process is more susceptible to variations in negative quality
when inverse-polarity mode is used. In particular, it will be found that when
following double lines with junctions enabled, any break in either line will
be seen as a possible three-arm junction. It is recommended, therefore, that
FB#13 (FPJ) be used to temporarily disable junction spotting when following long
stretches of double-linework which do not contain any real junctions.

.HEADER LEVEL 2 ^&Point Features\& 

.INDEX Point Features 

.P0 ;A point feature scan is invoked by pressing FB#6 in MAIN mode.
In the default POINT mode the 
program attempts to digitise a symbol automatically by
scanning and looking for a cross (x or +) or a very small ring.
If this succeeds the cursor is
positioned over the symbol and a dot is displayed in refresh. If it fails then
a message is printed and the cursor remains as it was. The commands are shown
below. OK (FB#4) reads the current cursor position and writes it out as a single
point feature.

.INDEX Point Features>Square buildings

.P0 ;LASERAID contains a second POINT mode facility, 'square buildings'.
This enables
one or more building features (represented by filled squares) to be captured
in a single scan, and output to the IFF file as ^&oriented symbols\&. This
facility is selected by command PNT, which can be given interactively or
placed in the type tables. PNT 0 specifies the traditional point feature mode,
and PNT 1 specifies square building mode. PNT only
determines the ^&default\& scan type on entry to point feature mode (i.e. on
pressing function button 6 in MAIN mode); once in
this mode either type of scan can be selected by using the function buttons (see
below). PNT is preserved in the patch file at end of session, and old patch
files (which do not have an explicit PNT entry at read-in time) default to
PNT 0.

.P0; The function button layout for point mode is given below:

.BLANK 2 .TEST PAGE 20 .NOFILL .LM +25 

 ----- ----- ----- ----- 

I     I     I     I     I 

I DPO I POI I     I  OK I 

I     I     I     I     I 

 ----- ----- ----- ----- 

I     I     I     I     I 

I DSQ I SQP I DRF I NXT I 

I     I     I     I     I 

 ----- ----- ----- ----- 

I     I     I     I     I 

I     I     I     I CLO I 

I     I     I     I     I 

 ----- ----- ----- ----- 

I     I     I     I     I 

I     I     I     I ABA I 

I     I     I     I     I 

 ----- ----- ----- ----- 

.BLANK 2 .TEST PAGE 8 

.I -15;Where: 

.B  .I -15;DPO############is perform (and draw) a traditional point-mode scan

.BR .I -15;POI############is perform a traditional point-mode scan

.BR .I -15;OK#############is accept the point feature(s)

.BR .I -15;DSQ############is perform (and draw) a square building point scan

.BR .I -15;SQP############is perform a square building point scan

.BR .I -15;DRF############is draw selected square building(s)

.BR .I -15;NXT############is select the next square building

.BR .I -15;CLO############is draw a close-up of the scan area on the Tektronix

.BR .I -15;ABAndon########is return to MAIN mode

.FILL .LM -25 
.BL

.P0 ;Traditional point scans are performed using the line type specified
for button 6, but square building scans use type 1. It is recommended
that the pitch for type 1 be set to 10 (there is no benefit in setting it any
lower).

.P0 ;When a square building scan is performed, buildings within the scan region
are recognised and highlighted in refresh (the scan box is also shown; this may
be moved using the trackerball and another scan performed if required).
The number of features found in the scan is displayed in refresh beside the
highlighted objects.
Pressing
FB#4 (OK) will cause ^&ALL\& these features to be accepted in one go (they will
be placed into separate IFF features, with feature numbers incremented by ANF
as usual). If, however, the user does not want all the indicated features,
pressing FB#8 (NXT) will cause LASERAID to cycle through the found objects
in turn.
When a desired object is highlighted, pressing FB#4 will cause it to be accepted
and the next object (if any) will be refreshed. ABA may be used to drop any
remaining unwanted objects, returning to MAIN mode. DRF will draw any
highlighted objects on the Tektronix, displaying a cross to indicate the
position and orientation of the point feature.

.P0 ;Ancillary codes (ACs) may be manually added to the feature prior to
acceptance by means of the AC command (see section 5.3). Note, however that
if multiple point features are accepted in one go (i.e. in 'square building'
mode) then only the ^&FIRST\& of those features will contain the specified
AC(s). All of the features will contain any Standing AC, however.

.PAGE

.HEADER LEVEL 2 ^&Small Features\& 

.INDEX Small Features 

.P0 ;When FB#7 is pressed in MAIN mode, LASERAID performs a 'small feature'
scan looking for closed objects which are smaller than the size of the scan
(approximately 1#cm square on the LASERTRAK screen). In fact, two different
types of small feature scan are available, line-mode and edge-mode; which
one is selected is determined by the MODe value (1 or 0) of the line type
assigned to FB#7 (see section 8.5).

.HEADER LEVEL 3 ^&Line-Mode Small Features\& 

.INDEX Small Features>Line Mode

.P0 ;A line-mode small feature scan searches for a closed loop. If one is
found it is displayed in refresh, the operator is informed and LASERAID enters
HELP mode with the following function button layout:

.BLANK 2 .TEST PAGE 20 .NOFILL .LM +25 

 ----- ----- ----- ----- 

I     I     I     I     I 

I     I     I     I STA I 

I     I     I     I     I 

 ----- ----- ----- ----- 

I     I     I     I     I 

I     I     I SMF I     I 

I     I     I     I     I 

 ----- ----- ----- ----- 

I     I     I     I     I 

I     I     I     I END I 

I     I     I     I     I 

 ----- ----- ----- ----- 

I     I     I     I     I 

I FPJ I MOV I  BB I ABA I 

I     I     I     I     I 

 ----- ----- ----- ----- 

.BLANK 2 .TEST PAGE 8 

.I -15;Where the significant buttons are: 

.B  .I -15;STA############drop into ordinary line following, using the line type
assigned to FB#7

.BR .I -15;SMF############repeat small feature scan

.BR .I -15;END############accept highlighted small feature

.BR .I -15;ABA############return to MAIN mode

.FILL .LM -25

.HEADER LEVEL 3 ^&Edge-Mode Small Features\& 

.INDEX Small Features>Edge Mode

.P0 ;An edge-mode small feature scan searches for small solid areas. If the
area contains a 'hole', two scans are necessary to capture the inside (ordered
clockwise by default) and the outside (ordered anticlockwise by default). These
default directions may be over-ridden by means of the MAIN mode command REV
(FB#12).

.P0 ;When an edge-mode small feature scan is performed, any closed areas
detected are highlighted in refresh with the number found indicated beside
the scan box. LASERAID enters HELP mode with the following function button
layout:

.BLANK 2 .TEST PAGE 20 .NOFILL .LM +25 

 ----- ----- ----- ----- 

I     I     I     I     I 

I     I     I     I STA I 

I     I     I     I     I 

 ----- ----- ----- ----- 

I     I     I     I     I 

I     I     I ESF I NXE I 

I     I     I     I     I 

 ----- ----- ----- ----- 

I     I     I     I     I 

I     I     I     I END I 

I     I     I     I     I 

 ----- ----- ----- ----- 

I     I     I     I     I 

I FPJ I MOV I  BB I ABA I 

I     I     I     I     I 

 ----- ----- ----- ----- 

.BLANK 2

.FILL .LM -25

.P0 ;If the scan position was not ideal, the refresh box may be moved by
means of the tracker ball and another scan performed using ESF (FB#7).
It should be noted that at present only one small feature may be accepted in a
single scan, despite the fact that several may be found. The required feature
may be chosen by means of NXE (FB#8) which cycles through the found objects,
and accepted using END (FB#12).

.PAGE 

.HEADER LEVEL 1 ^&Parameters\&

.INDEX Parameters 

.P0 ;LASERAID has many 'parameters' which are used to control the line following
process and are stored in the patch file between sessions.
Most of these are of no interest to the ordinary user but the more important
ones which may have to be 'tuned' (usually by the system or flow-line manager)
in order to capture a new sort of map are listed below
(see Appendix A and the on-line help for a more complete description of these
and numerous other parameters).

.HEADER LEVEL 2 ^&The PAP (Print All Parameters) Command\&

.INDEX Print All Parameters (PAP)

.P0; The PAP command in HELP mode displays all the parameters available
to the system or flow-line manager for controlling the line-following
process. A typical list produced by this command might be as follows:

.BLANK 2 .TEST PAGE 30 .NOFILL .LM +5 

Switches:  +ELF  +JNC  -INV  +VEX  +SMO  +EDG  +BCH  -ECH  -TCH  +BRF
Line type:  TYP     6   ID    300   WID    25   PIT     8   INI    25
Filtering:  ETA   3.0   H      8.   S      0.   E     25.
            CRC 0.985   CRD   40.
Following:  GAP  100.   SHA -0.90
Junctions:  CRS     0   JPT   40.   JAT   40.   JWT  0.30
Trackjump:  NEA  3.00   BET  0.20   PRL  0.50
Backtrack:  MPN  50.0   MPB    12
Chaining:   CLU  2.00   CLV  2.00   CLW  2.50   CLX  3.00
            EPS  15.0   HOL    45   RIP    80
Matching:   ANG 0.000   LEN 0.010   DST 5.000   WTH 0.000
            DIF  0.90   SMA  1.00   STI    1.   BIA  0.00
Scanning:   MOD     0   FRQ     6   WID    25   PIT     8
            TLO    67   TSW     1   FLE     8   TMS     0
            CRX  0.26   CRY  0.25
            OFX  -27.   OFY  -32.
            PHX  74.3   PHY  73.1
Priority:   FPR     4   PPR     4   WPR     5
Point Mode: PNT     1
Paintout:   THK  80.0   PTH   0.0   STH 200.0   HCH     3   SPD -300.
            SEP 0.016   SPO 0.010
Fiducials:  OFF  8.00   QUA  0.30   SCT    30   REP     1   AVE     5
            GRI  50.0   TIK  500.   CHF     0   FCT     0
Masterpts:  MPL    80   MPF    20   MPX  2900
Squaring:   SQT   30.

.BLANK 2 .FILL .LM -5 

.P0; As may be seen, the parameters are grouped by function as far as possible
(although there are some grey areas - you will notice that WID and PIT
occur twice, for example). Some of the more important parameters are
described in later sections; for more information see Appendix A and
the on-line help.

.INDEX Print Primary Parameters (PPP)

.P0; Another command, PPP (alias PUP), displays a subset of this list.
This subset contains the 'primary' parameters which may be of interest to the
ordinary user, allowing simple tuning operations to be performed (e.g.
selection of edge-mode rather than line-mode line following).

.HEADER LEVEL 2 ^&Description of Primary Parameters\&

.TEST PAGE 5 .LM +25 

.BR .I -15;ELF#n##########0/1 -> edge/line mode line-following

.BR .I -15;JNC#n##########0:7 -> junction analysis

.BR .I -15;INV#n##########0/1 -> data polarity normal/inverted

.BR .I -15;VEX#n##########0/1 -> vertex extraction off/on

.BR .I -15;SMO#n##########0/1 -> data smoothing off/on

.BR .I -15;EDG#n##########0/1 -> ignore/use edge information in line mode

.BR .I -15;BCH#n##########0/1 -> backtrack check off/on

.BR .I -15;ECH#n##########0/1 -> command echoing off/on

.BR .I -15;TCH#n##########0/1 -> temporary checks off/on

.BR .I -15;BRF#n##########0/1 -> brief messages off/on

.BR .I -15;ID##r##########scan vector length (microns)

.BR .I -15;ETA#r##########sideways tolerance for initial compaction (microns)

.BR .I -15;H###r##########sideways tolerance for bunching of points (microns)

.BR .I -15;S###r##########maximum distance before forced master point (microns)

.BR .I -15;E###r##########minimum distance between master points (microns)

.BR .I -15;GAP#r##########maximum acceptable gap to jump over (microns)

.BR .I -15;SHA#r##########cosine of sharpest angle to follow round (0 => 90 deg,
-1 => 180 deg)

.BR .I -15;CRS#n##########-1/0/+1 -> go left/straight on/right at junctions

.BR .I -15;JPT#r##########junction position tolerance (microns)

.BR .I -15;NEA#r##########nearness of adjacent tracks for track jumping (in
units of PIT)

.BR .I -15;PNT#n##########0/1 -> set default point mode (section 7.2)

.BR .I -15;THK#r##########thickness of line features

.BR .I -15;PTH#r##########paintout thickness (microns) - if <=0.0 use THK

.BR .I -15;STH#r##########single point paintout thickness (microns)

.BR .I -15;HCH#n##########0:3 -> hatching style for area paintout

.BR .I -15;SPD#r##########suppress paintout distance around junctions (microns)

.LM -25 

.P0 ;Also available are the commands for changing the scan parameters (WID, PIT
etc) which are described under CHECK mode (section 4.1), and the priority
changing parameters (section 8.8).

.HEADER LEVEL 2 ^&Advanced Parameters\&

The following parameters are intended for system and flow-line managers.
They are effectively constants, and will only require changing to follow
unusual or poor quality data.

.BLANK 2 .TEST PAGE 5 .LM +25 

.BR .I -15;BET#r##########cosine of limiting angle to prevent track jumping

.BR .I -15;CLV#r##########chain growing tolerance across the scan (units of PIT)

.BR .I -15;CLX#r##########chain growing tolerance for new chains (units of PIT)

.BR .I -15;ANG#r##########weight for angle of segment in chain matching

.BR .I -15;LEN#r##########weight for length of segment in chain matching

.BR .I -15;DST#r##########weight for distance of segment in chain matching

.BR .I -15;WTH#r##########weight for width of segment in chain matching

.BR .I -15;SMA#r##########smallness (minimum attachable segment) - units of PIT

.BR .I -15;DIF#r##########line is WIDE if (width-trackwidth)/trackwidth >= DIF

.LM -25

.P0 ;ANG, LEN, DST and WTH are discussed further in section 8.7.

.HEADER LEVEL 2 ^&LIMits and Weights\&

.INDEX LIMits and Weights

.INDEX PLW

.P0 ;The LIMits and Weights are a set of miscellaneous values required by the
line-following algorithms. Optimum values have been ascertained by Laser-Scan
and users should not attempt to modify them unless so
instructed by a Laser-Scan engineer. The current values can be displayed
by means of the PLW command.

.TEST PAGE 14 

.HEADER LEVEL 2 ^&Line Types\& 

.INDEX Line Types 

.INDEX Type Table

.P0; LASERAID supports seven line types which may be assigned to the
six MAIN mode 'start feature' buttons (see section 5.2). Each type may
have independent values for the line following parameters, and these are
stored in the 'type table'. The current
type table may be examined by means of the PTY command (in CHECK
or HELP mode).

.P0; The following should be noted:

.LIST

.LE

Function buttons can be set up to use different line types by means
of the TYF command in HELP mode. It is NOT the case that FB#1 must use type 1,
etc. (in fact this would not be sensible given the scan WIDth of type 1).

.LE

Some line types are (at least partially) reserved, in that they
must have particular attributes. These are:
.BL
Type 1 - This must be a large scan (WID 63, ID about 1200, PIT about 10)
using line mode (MOD 1) without inverse polarity (INV 0). Type 1 is  used
everywhere that a large scan is required (e.g. POINT mode, small feature
scans, FINd/FUMble). In some cases attributes are taken from another type,
with type 1 merely used to set the scan size. The prime example of this
is small feature capture, where the MODe of the type assigned to FB7
determines whether edge-mode or line-mode small feature is used (see
section 7.3).
.BL
Type 2 - This must be capable of following a normal line, as it is used
for measuring the control points etc. (MOD 1, INV 0, sensible WID).
.BL
Type 7 - The WIDth and PITch of this type are used to set the size of junction
scans. If INV is in the type table, that will be
used as well. Other than that type 7 may be used at will.

.END LIST

.P0; Types 3 to 6 are completely user-definable.

.TEST PAGE 15

.HL 3 ^&Modifying the Type Table\&

.INDEX Type Table> Modifying

.P0 ;The following commands allow the user to examine and modify the type
table:

.LM +25 

.B  .I -15;TYP#n##########set line type to n (1 to 7)

.BR .I -15;PTY############print line types

.BR .I -15;PAR#n#xxx######make xxx a type dependent parameter occupying slot
n. 

.BR .I -15;SET#n#r1#..r7##set the values of slot n to r1 ... r7 (if too few
values are given the remaining entries are zeroed)

.BR .I -15;VAR#n1#n2#r####set the value of slot n1 for type n2 to r

.LM -25 

.P0; In order to avoid accidental modification of the type table,
the command ADJust must be given before SET, VAR and PAR.

.HL 3 ^&Selecting Edge or Line Mode Following\&

.INDEX Edge-mode vs Line-mode

.P0 ;Whether LASERAID follows edges or lines (and performs the
appropriate paintout) is, by default, determined solely by the MODe value of
the line type assigned to the starting function button used. MOD 1 indicates
line mode and MOD 0 indicates edge mode. The current following mode
may be examined by typing PPP (Print Primary Parameters); +ELF indicating
edge following and -ELF indicating line following.

.P0 ;In fact, the command ELF may be placed in the type tables (after MOD)
to force the following strategy, but
this mechanism is only likely to be of interest to Laser-Scan engineers.

.HL 3 ^&Setting Up a Line Type for Junction Spotting\& 

.INDEX Junction Line Type

.P0 ;Junction line types should specify appropriate values for JNC (e.g. 3)
and SPD (e.g. -300). INI should also be set to 25 (rather than 15).

.HL 2 ^&Junction Parameters\&

.INDEX Parameters>Junctions

The following parameters are available for controlling junction recognition:

.LIST

.LE

JNC n - junction recognition
.BL
This is a switch to enable or disable junction recognition.
It is bitwise decoded as follows:
.BL
Assuming a starting value of zero,
.BR
Add 1 if junction recognition is required at all, then
.BR
Add 2 if the program should accept the junction automatically, then
.BR
Add 4 if the program should NOT automatically snap to existing
junctions, but should perform a complete junction scan each time.
.BL
The most usual settings are:
.BR
JNC 0 - junctions disabled
.BR
JNC 3 - junctions enabled, 'auto-accept-and-go' enabled
.BL
Another useful setting is JNC 2. In this state, FPJ (FB#13) in HELP mode will
turn junction recognition on or off, enabling 'auto-accept-and-go'
at the same time.

.LE

CRS - Behaviour at 'Crossings'
.BL
Specifying CRS -1/0/+1 causes LASERAID to try to go left/straight on/right
when a junction is found. This can be used, for example, when capturing
polygon data to cause each polygon to be followed in turn. If 
'auto-accept-and-go' is enabled (see above), the selected arm will be accepted
automatically and digitising will continue.

.LE

JPT - Junction Position Tolerance
.BL
This may be thought of as the 'radius of influence' of each junction.
If two junctions are found which are closer together than JPT then they are
pulled together to form one junction. Also, when locating an existing junction,
if the LASERTRAK cursor is within JPT of the junction then it is found.
.BL
The value of JPT should be approximately (say within a factor of two of)
the mean linewidth in HRD counts. If JPT is too small LASERAID will have
problems 'snapping' and locating junctions; if it is too large then
the wrong junction may be found and close junctions may be erroneously merged.

.LE

JAT - Junction arm Angle Tolerance
.BL
This is used to decide which of the junction arms matches the current
track.
.BL
JAT is usually 40 degrees.

.LE

JWT - Junction arm-Width Tolerance
.BL
A junction is not spotted if the line width falls below JWT times the
current track width. This reduces 'flapping' (searching for spurious
junctions) in poor quality data where the linework may contain holes.
.BL
A typical value for JWT is 0.3; setting it to 0.0 disables this check
completely. Note that the junction spotting success rate will be
severely reduced if JWT is larger than about 0.8.

.LE

SPD - Suppress Paintout Distance
.BL
In order to 'spot' a previously measured junction when line following,
a small amount of each captured arm must be left unpainted. The
amount which must be left depends on whether junction 'snapping' is
enabled. If a full junction scan must be performed every time (JNC
greater than 4) a fairly large region must be left (SPD 300 might be
typical). If 'snapping' is enabled (JNC less than 4), LASERAID is
able to choose an appropriate paintout gap automatically. This mechanism
is invoked by setting SPD negative (usually the existing value is simply
negated, e.g. SPD -300). The units are HRD counts (microns).

.END LIST

.HEADER LEVEL 2 ^&Chain Quality\&

.INDEX Chain Quality

.P0 ;One of the most complicated areas of LASERAID tuning relates
to the concept of chain quality. During the line-following process
the LASERTRAK encounters are 'grown' into chain elements, and
these are then appended together to produce a continuous
track. In fact, for unbroken lines this is now a well-defined
process for data within a individual scan. The uncertainty arises when
appending data from different scans, or when the original
line is fragmented (e.g. a pecked line). In such cases, each
chain element is assigned a 'quality', and the one with the 
highest quality is appended.

.P0 ;Consider a chain element which has a length 'len', width 'wid',
is a distance 'dis' from the current end of the track and makes an angle
'ang' with the track. The quality of the element is then related to:
.BL
.LITERAL
     LEN*('len'/(SMA*PIT))**2  +  ANG*(cos('ang'))  -
     DST*('dis'/GAP)**2        -  WTH*(('wid'-trackwidth)/trackwidth)
.END LITERAL
.BL
.P0 ;The quantities LEN, ANG etc. were introduced earlier.
As may be seen, this is a rather complex
function, but the important thing to remember is that a BALANCE
should be maintained. If you want to favour the nearest chain
element then DST can be increased, but you should also consider altering
one of the other values to prevent the overall quality from being
reduced too much (if the
quality becomes too small LASERAID will refuse to append anything).

.P0 ;The 'Z' command macro performs a scan and lists the chain elements
and qualities (refer to the on-line help for more information).
This can be a useful tool when tuning LASERAID to follow
awkward or poor quality data. Command macros are discussed in section 9.

.HEADER LEVEL 2 ^&VAX Priority Settings\& 

.INDEX VAX Priority Settings

.INDEX FPR

.INDEX PPR 

.INDEX WPR

.P0 ;The priority at which various LASERAID functions are performed may be
set by the user (assuming he has the necessary quotas) by means of the
commands FPR, PPR and WPR. These determine the priorities for Following,
Paint-out and Waiting (rolling the tracker ball, etc). If these are not set
in the patch file, or if they are outside the range 1 to 10, they are set to
the processes current base priority. It is suggested that FPR and PPR should
be set to 4 (the VAX default), and WPR to 5 (to give good interactive response).
For faster line following (at the expense of other users) FPR may be increased
to 5. It is not recommended that PPR be increased.

.PAGE

.HEADER LEVEL 1 ^&Command Macros\&

.INDEX Command Macros

.P0 ;Many LASERAID commands in HELP mode are, in fact, macros (groups of
'fundamental'
commands). Some of these are invoked directly by the user (via function
buttons or keyboard commands); the rest are called by other macros
or by the program itself. The fundamental commands (or 'macro
components') perform individual operations such as predicting the next
scan direction, performing the scan, analysing the machine encounters
and so on.

.P0 ;The operation of the macros is usually of no concern to the
user, hence these commands are only described in this document if they
appear on function buttons (e.g. the macro 'BB' which
enables the LASERTRAK cursor to be rolled along the current feature).
Additional information on specific macros is available in the on-line help.

.P0 ;At present 35 macro 'slots' are available in LASERAID; all of these
are reserved for Laser-Scan. Macros which
are currently unused are given names such as 'AAA', 'BBB' etc.
These commands appear in the list obtained by typing '?' in HELP mode
but are not shown by the PMA (Print MAcros) command. It should be
noted that user-definition of macros is not supported, and no
attempt should be made to modify the standard macros provided by
Laser-Scan.

.PAGE

.HEADER LEVEL 1 ^&Pre-Guidance\& 

.INDEX Pre-Guidance 

.INDEX Guidance 

.INDEX Predigitising 

.P0 ;Pre-guidance is a means whereby increased throughput may be obtained
from a LASERTRAK by having most of the operator-dependent actions (selection
of feature, setting of NF and feature code, typing of TCs etc.) done offline and
stored in an IFF file to be used to 'guide' the automatic digitisation of a
map. 

.HEADER LEVEL 2 ^&The Guidance File\& 

.INDEX Pre-Guidance>Files 

.P0 ;This is an IFF file and is identical to a normal IFF file used for map
data, except that there is usually only one data point for each feature
(if more than one data point is present then the mean position is used, hence an
ordinary data file can be used as a test guidance file). Guidance files will
normally be produced using a digitising table. 

.P0 ;Each feature should contain the following:

.LIST 

.LE ;NF Number - this is treated as you would expect. It sets the NF number of
the feature. 

.LE ;Feature code (first word of FS entry) - this is not copied by LASERAID
but is used to select both a line following 'type' and a real feature code
from a table. The feature type is necessary because LASERTRAK needs to know
what sort of feature it is to digitise (smooth curve, small feature, point
feature and so on). The LASERTRAK operator can allocate meanings to the feature
codes in the guidance file by means of the GFC command .

.LE ;One or more data points (ST entry) - this indicates, to the LASERTRAK
operator, which feature to measure next. If more than one point is given, they
are averaged to produce a mean position. The point should therefore be chosen to
avoid any ambiguity and
should also (if possible) be chosen to be a suitable place on the feature for
LASERTRAK to start digitising it automatically. The data points in the
guidance file should be expressed in the same units, and with the same control
points, as the map in the LASERTRAK.

.LE ;Any necessary TCs, which are entered in the usual way. 

.END LIST 

.P0 ;Various entries in the guidance file correspond to commands given by the
operator to the LASERTRAK:

.TEST PAGE 17

.B;^&Entry##########Equivalent Command\&

.BL ;RA,HI,MH,MD,CC#ignored 

.BR ;CP#############used to transform to output space

.BR ;NS#############OP###or IDE

.BR ;SS#############SS 

.BR ;SL#############PT 

.BR ;NO#############OV###or LAY 

.BR ;TC#############TC 

.BR ;CH#############TEXt#or CH 

.BR ;NF#############NF

.BR ;FS#############special - sets up feature code and line type via table

.BR ;AC#############ignored 

.BR ;TH#############ignored 

.BR ;ST#############used to position the LASERTRAK cursor 

.BR ;EF#############special - returns control to the operator 

.BR ;EJ#############causes the guidance file to be closed

.FILL 

.HEADER LEVEL 2 ^&How to use Guidance files^\ 

.INDEX Pre-Guidance>Use of 

.P0 ;A file of pre-digitised guidance commands is a standard IFF file and is
opened by the GUI command. The control points must have been measured before
the GUI command can be given. When a guidance file is open, pressing FB#8 in
MAIN mode (or giving the equivalent command - GNF) will cause the guidance
file to be accessed, rather than the 'in-core junction list' (see section
7.1.1). Commands will be read from the file until an EF entry is encountered.
At this point: 

.LIST 

.LE ;the NF number will be set 

.LE ;the cursor will be on the feature 

.LE ;one of the six function buttons (1, 2, 3, 5, 6 or 7) used to start
digitising a feature will be lit to indicate to the operator what sort of
feature it is. It should be noted that this is purely advisory; the operator can
press ANY of the six buttons to digitise the feature. 

.END LIST 

.P0 ;When a feature has been digitised, it can be accepted or abandoned in the
usual way. Pressing FB#8 will get the next feature to be measured. Pressing FB#8
repeatedly will fetch successive pre-digitisings from the file, though
alternatively the SKIp command will skip through the guidance file until a
particular NF is reached. 

.P0 ;The speed of operation using pre-guidance can be increased by use of
the VFG option. This is enabled by the command VFG 1 and disabled by VFG 0.
When enabled it has the effect that when a feature has been accepted, commands
continue to be taken from the guidance file (as if FB#8 had been pressed). On
the other hand, if a feature is abandoned or the check fiducial measurement
fails then commands are taken from the operator in the normal way to allow the
feature to be remeasured, cancelled etc. 

.HEADER LEVEL 2 ^&Pre-guidance commands\& 

.INDEX Pre-Guidance>Commands 

.LM +25 

.BR .I -15;GUIde#<file>###close any currently open guidance file and, if <file>
is given, open file LSL$GU:file.IFF.

.BL .I -15;GNF#(FB#8)#####(Get Next Feature) Commands are read from the
guidance file until an EF entry is found, at which point all necessary
information (NF, feature code, position etc.) will be present to allow the
operator to start measuring the feature. 

.BL .I -15;VFG#[n#[r]]####controls the Very Fast Guidance option. The option
is enabled if the integer argument n is non-zero, and disabled if is zero or
absent. The very fast guidance option has two effects: 

.LIST 

.LE ;when a feature is accepted, the next feature is automatically fetched
from the guidance file. 

.LE ;when a feature has been fetched from the guidance file, one of the six
'feature select' buttons will be lit. If 'automatic starting' has been
enabled, the command corresponding to this button will be given automatically
after a short time. Typing another command, pressing a function button or
moving the tracker ball will stop this command being given. The time delay for
this command is defined by the second (real) argument for VFG. If this number
is positive it enables 'automatic starting' and sets the time delay
(expressed in seconds). If the number is negative then the option is
disabled. If no second argument is given the time delay is left as it was,
regardless of what the first argument is. Thus: 

.LM +15

.B  .I -12;VFG#1#0.5#-#enable option and set delay to half a second 

.BR .I -12;VFG#0#####-#disable option 

.BR .I -12;VFG#1#####-#re-enable with same delay as before 

.LM -15

.END LIST 

.BR .I -15;NXG############Gets the NeXt Guidance command from the file and
obeys it. This is only for testing the system, and for examining the effect of
each entry in the guidance file. 

.BL .I -15;SKI#[n]########skip all items in guidance file, up to NF n, or the
next feature. The correct layer number will be set. If no such NF entry is
found, the guidance file is left positioned where it was and an error message
is output. 

.BL .I -15;GFC#[n#[m]]####arrange for feature code n in the guidance file to
mean that FB#m should be used to start measuring the feature. The line type
and feature code assigned to the feature will depend on which button
is actually used. If m is absent then feature code n is removed from the table.
If both n and m are absent then the table is typed. 

.LM -25 

.IF APPENDIX

.APPENDIX LASERAID PARAMETERS

.REQUIRE "PARAMETERS.RNO"

.ENDIF APPENDIX

.IF RNTRNX 

.NO HEADERS

.PAGE

.REQUIRE "LAREF.RNX"

.ENDIF RNTRNX 
