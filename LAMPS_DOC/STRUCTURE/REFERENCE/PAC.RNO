
.PAGE
.NO FILL
^*--------------------------------------------------------------------------------\*
^*MODULE####ILINK\*
.INDEX ILINK
.BLANK
^*--------------------------------------------------------------------------------\*
.NO JUSTIFY
^*REPLACES\*##IFJ,#CBA
.INDEX IFJ
.INDEX CBA
^*--------------------------------------------------------------------------------\*
.HEADER LEVEL 2 ^*FUNCTION\*
.LEFT MARGIN +10
.INDEX STRUCTURE>module functions>geometry tidying
.INDEX STRUCTURE>module functions>link-node structuring
.P 0;ILINK is an IFF link-node structuring and manipulation utility. ILINK also
incorporates powerful geometry tidying capabilities.

.P 0;ILINK provides the following functions:
.LIST "o"
.LE ;^*link-node structure\* generation.
.LE ;^*alignment of lines with lines\* (ie. feature alignment). 
.LE ;^*merging of duplicate line sections into single features.\*
.LE ;^*joining of line ends to lines\* (viz. joining feature ends to any point
along a feature, including points along line segments between original feature
vertices). 
.LE ;^*joining of feature ends to ends\*.
.LE ;^*breaking features into separate features where they cross.\*
.END LIST 

.P 0;One-point features are treated as zero length linear features. 

.P 0;Structured data can be used for many network processing operations, such
as polygon generation, route planning, map colouring and data-base
compilation. 

.BLANK
.LEFT MARGIN -10
.NO FILL
^*--------------------------------------------------------------------------------\*
.HEADER LEVEL 2 ^*FORMAT\*
.NO FILL
.LEFT MARGIN +10
$ ILINK input-file-spec  [output-file-spec]
.BLANK

^*Command qualifiers                          Defaults\*
.INDEX ILINK>command qualifiers
.BLANK

/[NO]ABSOLUTE                               /NOABSOLUTE
.INDEX ILINK>command qualifiers>/ABSOLUTE

/ACP=file-spec                              /ACP=SYS$DISK:[]ACP.ACP;0
.INDEX ILINK>command qualifiers>/ACP

/BPF=real                                   /BPF=2
.INDEX ILINK>command qualifiers>/BPF

/BREAK                                      See text.
.INDEX ILINK>command qualifiers>/BREAK

/EXTOL=real                                 /EXTOL and /JNTOL
                                            values made equal.
.INDEX ILINK>command qualifiers>/EXTOL

/FCC=file-spec                              /FCC=SYS$DISK:[]FCC.FCC;0
.INDEX ILINK>command qualifiers>/FCC

/FCP=file-spec                              /FCP=SYS$DISK:[]FCP.FCP;0
.INDEX ILINK>command qualifiers>/FCP

/FREE__ENDS=(FC:n,LAYER:n)                   See text.
.INDEX ILINK>command qualifiers>/FREE__ENDS

/FRT=file-spec                              /FRT=LSL$FRT:FRT.FRT;0
.INDEX ILINK>command qualifiers>/FRT

/JNTOL=real                                 /JNTOL=0.0
.INDEX ILINK>command qualifiers>/JNTOL

/KEEP=FSN                                   See text.
.INDEX ILINK>command qualifiers>/KEEP

/KEEP=PARENT                                See text.
.INDEX ILINK>command qualifiers>/KEEP

/LAYERS=integer[,...]                       All layers.
.INDEX ILINK>command qualifiers>/LAYERS

/LCP=file-spec                              /LCP=SYS$DISK:[]LCP.LCP;0
.INDEX ILINK>command qualifiers>/LCP

/[NO]LIST[=file-spec]                       /NOLIST
.INDEX ILINK>command qualifiers>/LIST

/[NO]LITES2[=file-spec]                     /NOLITES2
.INDEX ILINK>command qualifiers>/LITES2

/LLJOIN                                     See text.
.INDEX ILINK>command qualifiers>/LLJOIN

/LPJOIN                                     See text.
.INDEX ILINK>command qualifiers>/LPJOIN

/MERGE                                      See text.
.INDEX ILINK>command qualifiers>/MERGE

/MINTOL=real                                See text.
.INDEX ILINK>command qualifiers>/MINTOL

/[NO]MONITOR                                /NOMONITOR
.INDEX ILINK>command qualifiers>/MONITOR

/PAC=file-spec                              /PAC=SYS$DISK:[]PAC.PAC;0
.INDEX ILINK>command qualifiers>/PAC

/[NO]PARENT                                 /NOPARENT
.INDEX ILINK>command qualifiers>/PARENT

/PPJOIN                                     See text.
.INDEX ILINK>command qualifiers>/PPJOIN

/[NO]PROJECT                                /PROJECT
.INDEX ILINK>command qualifiers>/PROJECT

/SHRFC=integer                              /SHRFC=999
.INDEX ILINK>command qualifiers>/SHRFC

/SORTARMS                                   See text.
.INDEX ILINK>command qualifiers>/SORTARMS

/STRUCTURE                                  See text.
.INDEX ILINK>command qualifiers>/STRUCTURE

/[NO]SYMBOL                                 /SYMBOL
.INDEX ILINK>command qualifiers>/SYMBOL

/TOL=file-spec                              /TOL=SYS$DISK:[]TOL.TOL;0
.INDEX ILINK>command qualifiers>/TOL

/[NO]VERIFY                                 /NOVERIFY
.INDEX ILINK>command qualifiers>/VERIFY

/[NO]VERTEX                                 /NOVERTEX
.INDEX ILINK>command qualifiers>/VERTEX

/VRTOL=real                                 /VRTOL=0.0
.INDEX ILINK>command qualifiers>/VRTOL

/[NO]WARNING                                /NOWARNING
.INDEX ILINK>command qualifiers>/WARNING

.LEFT MARGIN -10
.BLANK
.TEST PAGE 10
^*--------------------------------------------------------------------------------\*

.HEADER LEVEL 2 ^*PROMPT\*
.INDEX ILINK>prompt
.LEFT MARGIN +10
.NO FILL
.NO JUSTIFY
__Input__file:             input-file-spec
__Output__file:            output-file-spec
.LEFT MARGIN -10
.BLANK
.TEST PAGE 10
^*--------------------------------------------------------------------------------\*
.HEADER LEVEL 2 ^*PARAMETERS\*
.INDEX ILINK>parameter
.BLANK
.LEFT MARGIN +10
.NO JUSTIFY
.P -10;Input-file-spec
.JUSTIFY
.INDEX ILINK>and LSL$IF:
.INDEX ILINK>default file-specs>input file
.P -2;-#specifies the IFF file which is to be tidied or structured.
Any part of the file specification which is not supplied will be taken
from the default specification 'LSL$IF:IFF.IFF'. The input file is required.

.TEST PAGE 5
.NO JUSTIFY
.P -10;Output-file-spec
.JUSTIFY
.INDEX ILINK>default file-specs>output file
.P -2;-#specifies the IFF file which is to be output. Any part of the
file specification which is not supplied will be taken from the input
file specification with the version number incremented by one, unless
the output file is to be Junction Structured, in which case the default
output file extension will be '.IFJ'. If the output file is not given
when required by the particular application, an error message will result
and processing will stop.

.BLANK
.LEFT MARGIN -10
^*--------------------------------------------------------------------------------\*
.HEADER LEVEL 2 ^*COMMAND QUALIFIERS\*
.INDEX ILINK>command qualifiers
.LEFT MARGIN +10

.BLANK
.TEST PAGE 8
.NO JUSTIFY 
.P -10;/ABSOLUTE
.I -10;/NOABSOLUTE#(default)
.INDEX ILINK>command qualifiers>/ABSOLUTE
.JUSTIFY
.P -2;-#specifies that any coordinates are to be output as absolute values, 
with ABSOLUTE x y commands throughout any LITES2 guidance file if requested
with the /LITES2 qualifier. By default, all coordinates are the usual LITES2 
values, with POSITION x y commands in any guidance file.


.BLANK
.TEST PAGE 10
.NO JUSTIFY 
.P -10;/ACP=file-spec
.INDEX ILINK>command qualifiers>/ACP
.JUSTIFY
.P -2;-#Specifies a text file which defines Ancillary Code pairs for swapping
when merged features run in the opposite direction to the feature they are
merged into. Missing components of the /ACP file specification are taken from
the default specification SYS$DISK:[]ACP.ACP;0. 

.P 0;In the absence of the /ACP qualifier, all AC entries are copied into the
shared feature exactly as they are found in the feature being merged. If the
/ACP qualifier is given, AC pairs which are found in the /ACP file are swapped.

.P 0;The /ACP qualifier may only be used in conjunction with the /MERGE process
qualifier. 

.P 0;The AC pair definition file is an ASCII text file with the following
record format, in which no two ACs are equal: 

.NO FILL

	 'AC1'      'AC2'
.FILL
.P 0;where:
.LEFT MARGIN +10
.P 0;'AC1' is the AC code (between 1 and 32767) with which AC2 is to be
swapped when AC2 occurs in a feature which is merged into some other feature
which runs in the opposite direction (only the AC code is swapped, AC values
are unchanged). 
.P 0;'AC2' is the AC code with which AC1 is to be swapped when AC1 occurs in a
feature which is merged into some other feature which runs in the opposite
direction. 
.LEFT MARGIN -10
.BLANK
.TEST PAGE 3

.P 0;Note that ILINK does not check that the value types in each AC pair are
equal. It is up to the user to ensure that these are consistent. 
.BLANK
.TEST PAGE 8
.NO FILL


.P 0;For example, an ACP file containing the lines:
.LEFT MARGIN -10
!
! Comment  - example ACP file
!
!     swap:     with:
	 4	 5
	 7       6
!
.FILL
.LEFT MARGIN +10


.BLANK 
.TEST PAGE 10
.NO JUSTIFY 
.P -10;/BPF=real
.INDEX ILINK>command qualifiers>/BPF
.JUSTIFY
.P -2;-#specifies a maximum for the average number of breaks that will be
introduced into a feature during processing. The value supplied with the /BPF
qualifier is needed to calculate memory requirements as ILINK memory is
allocated dynamically. 

.P 0;By default the number of breaks is assumed to be 2.0.

.P 0;The /BPF qualifier may be used with process qualifiers /BREAK, /LLJOIN,
/LPJOIN and /MERGE only.

.BLANK
.TEST PAGE 10
.NO JUSTIFY 
.P -10;/BREAK
.INDEX ILINK>command qualifiers>/BREAK
.JUSTIFY
.P -2;-#breaks features into separate features at every feature intersection
point.
.BLANK
Features will be broken only where existing features already touch or cross
(see Description section, Fig_. 1). 

.BLANK
.TEST PAGE 10
.NO JUSTIFY 
.P -10;/EXTOL=real
.INDEX ILINK>command qualifiers>/EXTOL
.JUSTIFY
.P -2;-#specifies maximum vector EXtension TOLerance. This is the
maximum distance by which one vector may be extended or truncated to meet
another. If the /EXTOL distance is exceeded then a vector end may be moved off
the original line of the vector in any direction, to a point within /JNTOL
tolerance. This will cause the end of the vector to rotate (see Figs 3 and 5). 

.P 0;The /EXTOL qualifier may be used with process qualifiers /LPJOIN and
/PPJOIN only.

.P 0;The /EXTOL value must be expressed in IFF units.

.BLANK
.TEST PAGE 15
.NO JUSTIFY 
.P -10;/FCC=file-spec
.INDEX ILINK>command qualifiers>/FCC
.JUSTIFY
.P -2;-#specifies a text file which specifies replacement feature-codes which
are to be given to shared features with particular feature-code combinations. 
Missing components of the /FCC file specification are taken from the default
specification SYS$DISK:[]FCC.FCC;0.


.P 0;The file has the following format for each FC-combination:
.NO FILL

        FCC     'shared feature code'   [FC list]
        [FC list]

.FILL
.P 0;where:
.LEFT MARGIN +10
.P 0; FCC signals the start of a new FCC definition
.P 0; 'shared feature code' is the shared feature code to be used to
identify shared features having a combination of the listed feature
codes. 
.P 0; FC list is a list of the feature codes. Feature codes must lie
in the range 0 to 32767 inclusive.
.TP 15

.LEFT MARGIN 0
.P 10;For example:
.NO FILL

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
! Example FCC file 
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
! 
! FCC record      Shared feature     Feature Codes to 
! identifier      code               be combined
     FCC          101                11,13,35:39 ! note that ranges are allowed
!
! FCC record      Shared feature     Feature codes to
! identifier      code               be combined
     FCC          102                2:6,91,108,220:230
!
! Feature codes to be combined to make shared feature with FC 101 (continued)
     240:242,307                ! notice that continuation lines are permitted
! 
! FCC record      Shared feature
! identifier      code

     FCC          103           ! new FCC definition
     14,77,90,210               ! feature codes to be combined
     214,239                    ! (continued)

.FILL
.LEFT MARGIN +10
.P 0;Note that comments may be delimited by a '!' character.

.P 0;ILINK would decode the FCC definitions in the above example file
as follows:

.P 0;Shared feature code 101 will be applied when shared features
are made of a combination of features having FC's 11, 13, 35, 36, 37, 38 and 39

.P 0;Shared feature code 102 will be applied when shared features
are made of a combination of features having FC's 2, 3, 4, 5, 6, 91, 108, 220,
221, 222, 223, 224, 225, 226, 227, 228, 229 and 230

.P 0;Shared feature code 103 will be applied when shared features
are made of a combination of features having FC's 14, 77, 90, 210, 214 and 239

.P 0;Shared features with feature-code combinations not specified in the
file specified with the /FCC qualifier will be given the feature code specified
by the /SHRFC qualifier (default value 999). 

.P 0;The /FCC qualifier may be used with process qualifier /MERGE only.


.BLANK 
.TEST PAGE 10
.NO JUSTIFY 
.P -10;/FCP=file-spec
.INDEX ILINK>command qualifiers>/FCP
.JUSTIFY
.P -2;-#specifies a text file which defines feature-code pairs for processing.
Missing components of the /FCP file specification are taken from the default
specification SYS$DISK:[]FCP.FCP;0.

.P 0;If a /FCP file is specified, only combinations of features which have
feature-codes which form one of the defined feature code pairs are processed.
All other features in the input file are simply copied to the output file. 

.P 0;Selection of features for processing may also be done by IFF layer
and by layer-pairs (see Command Qualifiers /LCP and /LAYER). An example of
feature selection is given in the Examples section. 

.P 0;In the absence of the /FCP, /LCP or /LAYER qualifiers, all features are
processed, except those in layer 0.

.P 0;If the /FCP qualifier is given in conjunction with /LAYER, then only
features from within the layers specified with feature codes corresponding to
/FCP feature code pairs will be processed.

.P 0;The /FCP qualifier may not be used in conjunction with the /LCP qualifier.

.P 0;During feature alignment, positioning will be from first code onto
the second, unless codes are equal, in which case it will be from lower
internal feature sequence number to higher. 

.P 0;Note that due to the internal re-arrangement of features, features 
with the first column FC will be pulled onto other features with the same FC.

.P 0;The feature code pair definition file is an ASCII text file
with the following record format:
.NO FILL

	'FC from'      'feature-code'
.FILL
.P 0;where:
.P 10;'FC-from' is a feature code 
.P 10;'feature-code' is either an individual feature code, or a feature
code range. Feature codes or feature code ranges are separated by commas, tabs
or spaces. Feature codes must lie in the range 0 to 32767 inclusive. 

.BLANK
.TEST PAGE 8
.NO FILL

For example, an FCP file containing the lines:
.LEFT MARGIN 0
!
! Comment  - example FCP file
!
!      Move
!      from:      to:
	20	10:12,30
	10	12,40:43,60
!
.LEFT MARGIN +10
This file specifies FC pairs:

                      Move  
                      from  to
                      ( 20, 10)
                      ( 20, 11)
                      ( 20, 12)
                      ( 20, 30)
                      ( 10, 12)
                      ( 10, 40)
                      ( 10, 41)
                      ( 10, 42)
                      ( 10, 43)
                      ( 10, 60)

.FILL



.BLANK
.TEST PAGE 10
.NO JUSTIFY 
.P -10;/FREE__ENDS[=(FC:integer,LAYER:integer)]
.INDEX ILINK>command qualifiers>/FREE__ENDS
.JUSTIFY
.P -2;-#specifies that all free-ends (1-arm nodes) are to be found and reported.

.P 0;If /LITES2 is specified a message is also sent to the LITES2 command file.

.P 0;If either of the FC or LAYER process qualifiers are given then all free-end
nodes will be output as point features into a separate final IFF layer. The
layer number, and the feature code for each free-end feature, may be specified.
The layer will default to the highest layer number in the file before this
layer, plus one. The feature code will default to 0. 


.BLANK
.TEST PAGE 15
.NO JUSTIFY 
.P -10;/FRT=file-spec
.INDEX ILINK>command qualifiers>/FRT
.JUSTIFY
.P -2;-#specifies an FRT (Feature Representation Table) file from which ILINK
can determine which feature codes have a graphical type which is suitable
for ILINK processing.
.INDEX ILINK> and FRT files
.INDEX ILINK> and unsuitable graphical types
.INDEX FRT files>and ILINK
.P 0;Missing components of the /FRT file specification are taken from the
default specification LSL$FRT:FRT.FRT;0. 

.P 0;Graphical types which are unsuitable for ILINK processing are:
.LIST "o"
.LE ;2#-#clockwise arc
.LE ;3#-#anticlockwise arc
.LE ;4#-#circumcircle arc
.LE ;5#-#full circumcircle
.LE ;6#-#interpolated curve
.LE ;11#-#symbol string#-#(processed only with /LLJOIN - see Description
sub-section "ILINK processing options - detailed operation").
.END LIST 

.P 0;If no FRT file is specified then it is up to the user to
select out features having unsuitable graphical types using the /FCP and/or
/LAYERS qualifiers as necessary. 

.P 0;For a detailed description of FRT file contents and layout see the "FRT
User Guide". 


.BLANK
.TEST PAGE 10
.NO JUSTIFY 
.P -10;/JNTOL=real
.INDEX ILINK>command qualifiers>/JNTOL
.JUSTIFY
.P -2;-#specifies JoiN TOLerance - the distance apart below which
points may be moved together during alignment or junction formation,
(default 0.0).

.P 0;With the /LPJOIN process, if both points are from the same feature then
they will only be joined if they are separated by more than the /JNTOL
tolerance along that feature. 

.P 0;The /JNTOL value must be expressed in IFF units. 

.P 0;The /JNTOL qualifier may be used with process qualifiers /LLJOIN,
/LPJOIN and  /PPJOIN only.


.BLANK
.TEST PAGE 10
.NO JUSTIFY 
.P -10;/KEEP=FSN 
.INDEX ILINK>command qualifiers>/KEEP
.JUSTIFY
.P -2;-#specifies that the parent Feature Serial Numbers (FSN's) are to be used
in the output features in the /BREAK and /MERGE processes. Without this 
qualifier, the new output FSNs will be created sequentially.

.BLANK
.TEST PAGE 10
.NO JUSTIFY 
.P -10;/KEEP=PARENT
.INDEX ILINK>command qualifiers>/KEEP
.JUSTIFY
.P -2;-#specifies that the parent AC type 9 entries are transferred from the
input to the output IFF file. Without this qualifier, these entries are
ignored in the transfer in preparation for the creation of new type 9 ACs.

.BLANK
.TEST PAGE 10
.NO JUSTIFY 
.P -10;/LAYERS=integer[,...]
.INDEX ILINK>command qualifiers>/LAYERS
.JUSTIFY
.P -2;-#specifies layers from which features are to be taken for
processing. Features which lie in unselected layers are simply copied
from the input file to the output file.

.P 0;/LAYERS values must lie in the range 0 to 32767.

.P 0;By default ILINK will process features in all layers except layer 0 which
is reserved for registration features and grids. Layer 0 is always copied,
unprocessed, to the output file unless explicitly included in the /LAYER
value list. 


.BLANK 
.TEST PAGE 10
.NO JUSTIFY 
.P -10;/LCP=file-spec
.INDEX ILINK>command qualifiers>/LCP
.JUSTIFY
.P -2;-#specifies a text file which defines layer-pairs for processing.
Missing components of the /LCP file specification are taken from the default
specification SYS$DISK:[]LCP.LCP;0.

.P 0;If a /LCP file is specified, only combinations of features from layers
which are from one of the defined layer-pairs are processed. All other features
in the input file which do not come from layers which form one of the defined
layer-pairs are simply copied to the output file. 

.P 0;Selection of features for processing may also be done by feature-code-pairs
or by IFF layer (see Command Qualifiers: /FCP, /LAYER). 

.P 0;In the absence of the /LCP, /FCP or /LAYER qualifiers, all features are
processed, except those in layer 0.

.P 0;The /LCP qualifier may not be used in conjunction with the /FCP or /LAYER
qualifiers.

.P 0;During feature alignment, positioning will be from first layer onto
second, unless layers are equal in which case it will be from lower internal
feature sequence number to higher. 

.P 0;The layer-pair definition file is an ASCII text file with the same format
as for the /FCP file, but with feature-codes replaced by layers.

.BLANK
.TEST PAGE 10
.NO JUSTIFY 
.P -10;/LIST[=file-spec]
.I -10;/NOLIST##(default)
.INDEX ILINK> command qualifiers> /LIST
.P -2;-#directs ILINK output to file-spec instead of to SYS$OUTPUT.
By default the LIST file specification is parsed against that of the input IFF
file but with the substitution of the current directory and extension '.LIS'.
For example, if the input IFF file is called LSL$IF:TST.IFF then the default
LIST file is SYS$DISK:[]TST.LIS. 

.BLANK
.TEST PAGE 10
.NO JUSTIFY 
.P 0;LITES2 command sequences produced by ILINK take the following
typical form:
.LITERAL

      %MESSAGE  End nodes lie within /JNTOL tolerance - link deleted
      %POSITION     765.3     456.89
      %PING
      %RESPOND
      %ABANDON		
      %ABANDON		
.END LITERAL


.TEST PAGE 10
.BLANK
.P -10;/LITES2[=file-spec]
.I -10;/NOLITES2##(default)
.INDEX ILINK> command qualifiers> /LITES2
.P -2;-#creates a LITES2 command file to take the user to potential errors.
Messages generated to report a potential error are incorporated in the file. By
default the LITES2 command file specification is parsed against that of the
input IFF file but with the substitution of logical name
LSL$LITES2CMD: and the extension '.LCM'. For example, if the input IFF file is
called LSL$IF:TST.IFJ then the default LITES2 command file is
LSL$LITES2CMD:TST.LCM. 

.BLANK
.TEST PAGE 10
.NO JUSTIFY
.P -10;/LLJOIN
.INDEX ILINK>alignment
.INDEX ILINK>command qualifiers>/LLJOIN
.JUSTIFY
.P -2;-#brings parts of features together where any part of one feature
(or point feature) comes within /JNTOL tolerance of any part of any other
feature (or point feature) (see Description section, Fig_. 2).

.P 0;No feature will be joined with any part of itself.

.P 0;If /LLJOIN is used with very small /JNTOL tolerance values, "pockets" or
"sausage strings" may result between aligned sections. If too large a
tolerance is used with /LLJOIN, an excessive processing time will result. It
is important to give careful consideration to the tolerance that will be used
with /LLJOIN. 


.BLANK
.TEST PAGE 10
.NO JUSTIFY 
.P -10;/LPJOIN
.INDEX ILINK>command qualifiers>/LPJOIN
.JUSTIFY
.P -2;-#forms junctions where feature ends and/or point features almost
touch lineal features anywhere along their length (see Description section, 
Fig_. 3).

.BLANK
.TEST PAGE 10
.NO JUSTIFY 
.P -10;/MERGE
.INDEX ILINK>command qualifiers>/MERGE
.JUSTIFY
.P -2;-#merges duplicate feature sections into single features (see Description
section,  Fig_. 4). 




.BLANK
.TEST PAGE 10
.NO JUSTIFY 
.P -10;/MINTOL=real
.INDEX ILINK>command qualifiers>/MINTOL
.JUSTIFY

.P -2;-#specifies a minimum distance tolerance.
Any points closer than this tolerance will be considered duplicate and will be
merged. This will have the effect of filtering the data as points can be lost
in the processing.

If the qualifier is not specified on the command line, the tolerance will be
the maximum range (RA) coordinate divided by 2000000.

.NOTE
.LM +5
This minimum tolerance can effect the other tolerances EXTOL, JNTOL and VRTOL.
These tolerance values can be set to be larger than MINTOL but if they are
defined to be less, they will default to the value of MINTOL.
.LM -5
.END NOTE

.P 0;The /MINTOL value must be expressed in IFF units.


.BLANK
.TEST PAGE 10
.NO JUSTIFY 
.P -10;/MONITOR
.I -10;/NOMONITOR#(default)
.INDEX ILINK>command qualifiers>/MONITOR
.JUSTIFY
.P -2;-#activates a progress display for the more time consuming operations.
Even if /MONITOR is specified on the command line, its action is automatically
disabled when the program is not being run in interactive mode. 

.BLANK
.TEST PAGE 10
.NO JUSTIFY 
.P -10;/PAC=file-spec
.INDEX ILINK>command qualifiers>/PAC
.JUSTIFY
.P -2;-#specifies that new points inserted by ILINK between original points are
to receive point attribute codes according to information given in the
specified text file, missing components for the specification of which are
taken from the default SYS$DISK:[]PAC.PAC;0. 

.P 0;The file has format as in the following example:

.NO FILL

	! text from '!' to end of line is ignored
	! attribute name
	    CAPTURE_XY
	! original attribute code   new attribute code
	     56                           72
	     52                  ! default = original code
	     54                           76

.FILL
.P 0;where:
.LEFT MARGIN +10
.P 0;The code used for a new point inserted between two original points will be
the new-code corresponding to the original code which comes first in this
table. The order of lines in the /PAC file is therefore significant. For
example, if lines are in order of increasing accuracy associated with each
attribute code, then the new code used will correspond to the original code for
the least accurate neighbour. 

.LEFT MARGIN -10

.P 0;The /PAC qualifier may be used with the process qualifiers /BREAK, /LLJOIN
and /MERGE only, and must be accompanied by the /FRT qualifier, because the
capture name code must be looked up in the FRT file. 

.P 0;Any point attribute code encountered in the IFF file which was not in
the /PAC file will be given new code = original code.


.BLANK
.LEFT MARGIN 10
.TEST PAGE 10
.NO JUSTIFY 
.P -10;/PARENT
.I -10;/NOPARENT#(default)
.INDEX ILINK>command qualifiers>/PARENT
.JUSTIFY
.P -2;-#specifies that type 9 ACs (Ancillary Code entries) should be used in
shared features to identify the particular feature from which the shared
feature is derived. A type 9 AC is output to the shared feature for each
original feature which shares the vector string in the shared feature. For
further details of shared features see the Description sub-section "ILINK and
shared or broken features". 

.P 0;The /PARENT qualifier may be used with process qualifiers /BREAK and
/MERGE only. 

.BLANK
.TEST PAGE 10
.NO JUSTIFY 
.P -10;/PPJOIN
.INDEX ILINK>command qualifiers>/PPJOIN
.JUSTIFY
.P -2;-#forms junctions where lineal feature ends and/or point features
almost touch (see Description section, Fig_. 5).

.BLANK
.TEST PAGE 10
.NO JUSTIFY 
.P -10;/PROJECT#(default)
.I -10;/NOPROJECT
.INDEX ILINK>command qualifiers>/NOPROJECT
.JUSTIFY
.P -2;-#if there are just two feature end-points that are to be joined, they
are projected together. Where there are more than two, they are moved
to their "centre of gravity" or mean position. 

.P 0;If /NOPROJECT is specified, all feature ends at a junction are moved to
the position of the feature end with the highest feature priority.

.P 0;The /PROJECT qualifier may be used with process qualifier /PPJOIN only. 


.BLANK
.TEST PAGE 10
.NO JUSTIFY 
.P -10;/SHRFC=integer
.INDEX ILINK>command qualifiers>/SHRFC
.JUSTIFY
.P -2;-#specifies the feature-code to be used to distinguish features shared by
more than one input feature. The /SHRFC feature code value is only used when
an explicit shared feature code is not specified in the /FCC file. The /SHRFC
value must lie in the range 0 to 32767. The default /SHRFC value is 999.

.P 0;The /SHRFC qualifier may be used with process qualifier /MERGE only. 

.BLANK
.TEST PAGE 10
.NO JUSTIFY 
.P -10;/SORTARMS
.INDEX ILINK>command qualifiers>/SORTARMS
.JUSTIFY
.P -2;-#specifies that the arms in the IFF JB (Junction Block) node-to-link
pointer entries in the Junction Structured input IFF file should be sorted in
order of increasing orientation angle (measured anticlockwise from the positive
x-direction).

ILINK works on the input IFF file in situ and does not alter it in any way,
other than to reorder the contents of JB entries. 


.BLANK
.TEST PAGE 10
.NO JUSTIFY 
.P -10;/STRUCTURE
.INDEX ILINK>command qualifiers>/STRUCTURE
.JUSTIFY
.P -2;-#specifies that feature end-point connectivity (link/node structure)
should be determined and that this should be written into IFF Junction
Structure entries in the IFF output. 

.P 0;An implicit /PPJOIN process is carried out with a near-zero join-tolerance
to determine end-point connectivity. The nodes in the link/node structure will
be at existing feature-ends and at point-features only. 

.P 0;Every feature in a valid Junction Structured IFF file must be a part of
that structure. Therefore, ^*input features not selected for structuring
(through use the of /FCP, /FRT or /LAYERS qualifiers) will be omitted from the
output file.\*
 

.BLANK
.TEST PAGE 10
.NO JUSTIFY 
.P -10;/SYMBOL#(default)
.I -10;/NOSYMBOL
.INDEX ILINK>command qualifiers>/SYMBOL
.JUSTIFY
.P -2;-#specifies that in the process specified by the /LPJOIN qualifier,
symbol or point features should be moved onto the line features, subject
to the feature selections operating and other qualifiers such as /VERTEX.

.P 0;If /NOSYMBOL is specified, symbol features are fixed and line features
moved onto them.

.P 0;The /SYMBOL qualifier may be used with process qualifier /LPJOIN only. 


.BLANK
.TEST PAGE 15
.NO JUSTIFY 
.P -10;/TOL=file-spec
.INDEX ILINK>command qualifiers>/TOL
.JUSTIFY
.P -2;-#Specifies that a tolerance is to be applied to each point according to
its point attribute code. These attribute codes, the JNTOL (join) and extension
(EXTOL) tolerances which are to be applied to them, and the attribute name, are
all contained in the specified text file, missing components for the
specification of which are taken from the default SYS$DISK:[]TOL.TOL;0. 

.P 0;The file has format as in the following example:
.NO FILL

	! text from '!' to end of line is ignored
	! attribute name
	    CAPTURE_XY
	! attribute code   join tolerance   extension tolerance
	     56                    1               2.5
	     52                    2        ! default EXTOL = JNTOL
	     54            ! default JNTOL from /JNTOL qualifier
	     64                    5.5             0
	     63                    0

.FILL
.P 0;The /TOL qualifier may be used with the process qualifiers /LPJOIN and
/PPJOIN only, and must be accompanied by the /FRT qualifier, because the
capture name code must be looked up in the FRT file. 

.P 0;Any point attribute code encountered in the IFF file which was not in
the /TOL file will be given tolerances from the /JNTOL and /EXTOL qualifiers.

.BLANK
.TEST PAGE 10
.NO JUSTIFY 
.P -10;/VERIFY
.I -10;/NOVERIFY#(default)
.INDEX ILINK>command qualifiers>/VERIFY
.JUSTIFY
.P -2;-#specifies that a message should be sent to the LITES2 command file for
each /LPJOIN or /PPJOIN join which is across a distance within the range
VRTOL to JNTOL. 

.P 0;No output file will be created.

.P 0;The /VERIFY qualifier may be used with the process qualifiers /LPJOIN and
/PPJOIN only. 


.BLANK
.TEST PAGE 10
.NO JUSTIFY 
.P -10;/VERTEX
.I -10;/NOVERTEX#(default)
.INDEX ILINK>command qualifiers>/VERTEX
.JUSTIFY
.P -2;-#specifies that in the process specified by the /LPJOIN qualifier,
priority should be given to joining feature ends to original feature vertices
over joining to any inter-vertex join position along a vector. 

.P 0;The /VERTEX qualifier may be used with process qualifier /LPJOIN only. 


.BLANK
.TEST PAGE 10
.NO JUSTIFY 
.P -10;/VRTOL=real
.INDEX ILINK>command qualifiers>/VRTOL
.JUSTIFY
.P -2;-#specifies VeRification TOLerance (default 0.0) - the lower bound of
the join distance  verification range (VRTOL to JNTOL) within which
each /PPJOIN or /LPJOIN join will be counted. The distribution of join
distances between ten equal subintervals over this range is finally
displayed as a histogram.

.P 0;The /VRTOL value must be expressed in IFF units. 

.P 0;The /VRTOL qualifier may be used with process qualifiers /LPJOIN and
/PPJOIN only.


.BLANK
.TEST PAGE 10
.NO JUSTIFY 
.P -10;/WARNING
.I -10;/NOWARNING#(default)
.INDEX ILINK>command qualifiers>/WARNING
.JUSTIFY
.P -2;-#outputs extra diagnostic messages, in particular NOTMERGE, NOMERGE and
ORIGPNTDEL.




.BLANK 2
.TEST PAGE 10
.LEFT MARGIN 0
^*--------------------------------------------------------------------------------\*
.HEADER LEVEL 2 ^*RESTRICTIONS\*
.INDEX ILINK>RESTRICTIONS
.FILL
.LEFT MARGIN +10
.LIST "o"

.LE; ILINK requires that a record for every feature in the input file which has
been specified for processing must share virtual memory simultaneously. 
.BLANK
For the /PPJOIN and /STRUCTURE processes, this record has a short fixed length
for every feature, but for the /LLJOIN, /MERGE, /LPJOIN and /BREAK processes, it
must also include the coordinates of every feature point. 
.BLANK
The maximum size of IFF file which can be processed by ILINK is therefore
dependant on the process required and the size of the user's virtual-page-count
limit. 

.tp 34
.LE;Exactly one process must be specified on each run. The process qualifiers
which may be specified with each process are given in the table
below: 
.END LIST

.lit
|-----------|---------------------------------------------|
|           | PROCESS QUALIFIER       M     P             |
|'*'=Legal  |               L     L M O   P R     V S V   |
|           |     E       J A     I I N   A O S   E Y E V |
|'.'=Illegal|     X       N Y   L T N I   R J H   R M R R |
|           | A B T F F F T E L I E T T P E E R T I B T T |
|           | C P O C C R O R C S S O O A N C F O F O E O |
| PROCESS   | P F L C P T L S P T 2 L R C T T C L Y L X L |
|-----------|---------------------------------------------|
| BREAK     | . * . . * * . * * * * * * * * . . . . . . . |
| FREE_ENDS | . . . . * * . * * * * * * . . . . . . . . . | 
| LLJOIN    | . * . . * * * * * * * * * * . . . . . . . . |
| LPJOIN    | . * * . * * * * * * * * * . . . . * * * * * |
| MERGE     | * * . * * * . * * * * * * * * . * . . . . . |
| PPJOIN    | . . * . * * * * * * * * * . . * . * * . . * |
| SORTARMS  | . . . . . . . . . * . * . . . . . . . . . . |
| STRUCTURE | . . . . * * . * * * * * * . . . . . . . . . | 
|-----------|---------------------------------------------|
.END LIT


.NOFILL
.PAGE
.LEFT MARGIN 0
.BLANK 3
^*-------------------------------------------------------------------------------\*
.HEADER LEVEL 2 ^*DESCRIPTION\*
.INDEX ILINK>description
.LEFT MARGIN +10
.JUSTIFY
.FILL
.INDEX geometry tidying

.P 0;ILINK is an IFF geometry tidying and structuring utility.

.P 0;The following geometry tidying operations are available:

.LIST "o"

.INDEX ILINK>available operations
.INDEX ILINK>available operations>alignment
.INDEX ILINK>and LLJOIN

.LE;Feature alignment. For example, where a polygon map has been digitised as a
series of closed polygons and these are required to be aligned.

.INDEX ILINK>available operations>merging duplicate feature sections
.INDEX ILINK>and MERGE

.LE;Feature merging. For example, where a series of closed polygons which are
exactly aligned are required to have duplicate sections merged into single
shared-features. 

.INDEX ILINK>available operations>junction formation
.INDEX ILINK>available operations>junction formation>feature-end to feature
joining 

.INDEX ILINK>and LPJOIN

.LE;Feature-end to feature joining. This process is useful when feature ends
fall just short of, or project just over other features, or where features are
required to move onto point features which are close to them. For example,
railway lines being moved so as to pass exactly through railway stations. 

.INDEX ILINK>available operations>junction formation>feature-end to feature-end
joining 
.INDEX ILINK>and PPJOIN

.LE;Feature-end to feature-end joining. For example, where a digitised
network such as a road map needs to have feature ends within some small
tolerance brought together to arrive at a unique point

.INDEX ILINK>available operations>breaking features where they cross
.INDEX ILINK>and BREAK

.LE;Breaking features where they cross. For example, where a wire-frame
perspective projection is required to be broken into separate line
features between every point where lines cross, so that hidden line
sections can subsequently be edited out manually.

.INDEX ILINK>available operations>junction structuring
.INDEX ILINK>and STRUCTURE

.LE;Junction structuring. This option is useful when the link-node structure 
resulting from the ends with ends joining operation described above,
is required for subsequent processing. For example, the compilation of a
structured data base or route planning, 

.INDEX ILINK>available operations>arm sorting
.INDEX ILINK>and SORTARMS

.le;Junction Structure 'arm' sorting. The arms in the IFF JB (Junction Block)
node-to-link pointer entries are sorted (in situ) into order with orientation
angle (measured anticlockwise from the positive X-direction) increasing. 

.END LIST

.INDEX ILINK>available operations>subset definition

.P 0;ILINK may be used to operate on a subset of the features in an IFF
file by use of the /LAYERS and /FCP qualifiers. Only features which
fall within specified layers and which have a specified feature code
will be processed. All other features will be transferred from input to
output IFF files unchanged. All IFF Junction Structure entries
present in the IFF input will be ignored. These qualifiers may not be
used with the /SORTARMS process.

.INDEX ILINK>available operations>default action
.P 0;The default ILINK action is to operate on ^*ALL\* features in the IFF file
except those which lie in IFF layer 0. Layer 0 is reserved for registration
features and grids, but will be processed if it is explicitly included in the 
/LAYERS qualifier value list. Note that there is an upper maximum to the 
number of different layers of 300. Any NO entry defining the same layer as 
the current one being read is ignored in order not to use up this layer limit
too soon, but this will only work for sequential identical layers, and later 
reappearance of a previously encountered layer after another new layer has been 
started will count as a different layer.


.P 0;ILINK will only process "line-strings". Features whose feature-code, as
given in the FRT table specified with the /FRT qualifier, do not have graphical
type 1 ("line-string"), will normally be rejected from processing (if selected)
and transferred from the input file to the output file unchanged.
.s1
The only exception to this rule is that when the /FRT qualifier is used with
/LPJOIN, features with graphical type 11 (symbol-string) ^*will\* be processed
and will be treated correctly as symbol-strings (ie. strings of
point-features), rather than as line-strings. 

.P 0;Compound features (ie. features containing more than one pen-up
ST entry), will be separated into independent parts on input, and will
not be reassembled before output. The reason for this is that these parts
themselves may be broken into further parts during processing, so that it is
not clear which parts, if any, should be reassembled with which. 

.P 0;It is important to realise that although ILINK is a very powerful
geometry idealisation utility, it cannot totally replace the skills of an
experienced cartographer.

.P 0;The quality of the ILINK output IFF file is directly proportional to the
quality of the data in the input IFF file. If the input file quality is so poor
that an excessively large /JNTOL tolerance has to be used, no guarantee of the
aesthetic appeal of the output data can be made. Line ends may be aligned quite
correctly in relation to a set of mathematical rules, but if ILINK is given
large tolerances, the line end combinations may reflect cartographic nonsense.
The user should determine and rectify the cause of poor input data early in a
production flowline, to save unnecessary frustration and wasted ILINK processing
time. 

.PAGE
.Fig 15
.CENTRE; This page to be replaced by Fig_. 1
.PAGE
.Fig 15
.CENTRE; This page to be replaced by Fig_. 2
.PAGE
.Fig 15
.CENTRE; This page to be replaced by Fig_. 3
.PAGE
.Fig 15
.CENTRE; This page to be replaced by Fig_. 4
.PAGE
.Fig 15
.CENTRE; This page to be replaced by Fig_. 5
.PAGE
.TEST PAGE 10
.LEFT MARGIN 0
^*--------------------------------------------------------------------------------\*
.HEADER LEVEL 2 ^^^*ILINK processing options - detailed operation\*
^*--------------------------------------------------------------------------------\*
.BLANK
.TEST PAGE 10
^*####################------------------------------------------------------------\*
.BR; ^^^*OPTION#1############Feature breaking - /BREAK\*
.LEFT MARGIN +20

.P -2;-#The ILINK /BREAK process breaks features into separate features at
every feature intersection point. 

.P 0;Junctions are created and features broken only where existing features
already touch or cross (see Description section, Fig_. 1). 

.LEFT MARGIN -20
.BLANK
.TEST PAGE 10
^*####################------------------------------------------------------------\*
.BR;^^^*OPTION#2############Feature alignment - /LLJOIN\*
.LEFT MARGIN +20
.P 0;The /LLJOIN qualifier causes ILINK to bring parts of features together
where any part of one linear feature (or point feature) comes within tolerance
of any part of any other linear feature (or point feature). (See Fig_. 2). 

.P 0;The tolerance used to determine whether a feature should be aligned
is specified using the /JNTOL qualifier. (See Command Qualifiers: /JNTOL). 

.P 0;If /LLJOIN is used with a very small /JNTOL tolerance value, "pockets" or
"sausage strings" will result between aligned sections. However, if too large
a tolerance is used with /LLJOIN, an excessive processing time will result. It
is important to give careful consideration to the tolerance that will be used
with /LLJOIN. 

.P 0;Feature alignment priority, which determines which feature is moved onto
which, may optionally be set using a definitions file specified using the /FCP
qualifier. (See Command qualifiers: /FCP). 

.P 0;In the absence of an /FCP file, feature alignment priority is based
on the internal sequence numbers of each pair of features under consideration.
Feature sequence numbers normally increase monotonically through the IFF file.
The feature with the lower internal sequence number will be moved onto
the feature with the higher internal sequence number. 

.P 0;If an /FCP qualifier is supplied, only feature pairs having the specified
feature codes will be aligned.

.P 0;The /FCP file contains pairs of feature codes which define feature
alignment priority. During feature alignment, positioning will be from the
first feature code onto the second. If feature codes are equal, the feature with
the lower internal sequence number will be aligned onto the one with the
higher internal sequence number. 

.P 0;The alignment process is deliberately constrained so that in the vicinity
of isolated junctions where lines cross or meet at corners, junctions are
formed at a single point only and line sections are not "pinched together"
along a continuous length. 

.P 0;Any junctions formed during the alignment process between feature ends are
incidental to the main purpose of this process which is to align continuous
line sections. The /LPJOIN and /PPJOIN processes are specifically designed for
line-end to line and line-end to line-end junction formation and will generally
produce "better" junctions. 


.LEFT MARGIN -20
.BLANK 3
.TEST PAGE 10
^*####################------------------------------------------------------------\*
.BR; ^^^*OPTION#3############Feature-end to feature joining - /LPJOIN\*
.LEFT MARGIN +20
.P 0;The /LPJOIN qualifier causes ILINK to move the free ends of features
onto other line or point features. (See Fig_. 3).

.P 0;The selection of the feature to which a free end is to be joined is 
controlled by 2 tolerances:
.LIST "o"
.LE ;the JoiN TOLerance - specified using /JNTOL, and,
.LE ;the EXtension TOLerance - specified using /EXTOL.
.END LIST 

.P 0;The join tolerance sets the distance below which the end point may be
moved onto the target feature. If both the free end point and the intersection
point on the target feature are from the same feature then they will only be
joined if they are separated by more than /JNTOL distance along the feature. 

.P 0;The extension tolerance sets the maximum distance by which one vector may
be extended or truncated to meet another before a vector end is moved off the
original line of the vector, to a point within the /JNTOL tolerance in any
direction, causing it to rotate (see Figures 3 and 5). 

.P 0;Some user applications require that priority should be given to joining
free ends to original feature vertices on the "target" linear feature. The
/VERTEX qualifier ensures that free feature ends are moved to original feature
vertices which are within the tolerance specified by /JNTOL. This priority
weighting overrides a choice of an inter-vertex join position along a vector. 

.P 0;/LPJOIN will not join feature ends to any position along the first or last
vector of any feature that is within the /EXTOL tolerance of the feature end.
This is because it is difficult to allow such joins without introducing the
possibility that the end vector moved onto will not subsequently be moved
itself.  This would leave hanging in space the end which was moved in the
earlier operation. As a result it is recommended that /PPJOIN is ^*always\*
applied after using /LPJOIN. 

.P 0;Note that /PPJOIN should not be used before /LPJOIN, as feature ends pulled
together by /PPJOIN may be pulled apart again by /LPJOIN. 


.LEFT MARGIN -20
.BLANK
.TEST PAGE 10
^*####################------------------------------------------------------------\*
.BR;^^^*OPTION#4############Feature merging - /MERGE\*
.LEFT MARGIN +20
.P 0;The /MERGE qualifier causes ILINK to merge duplicate feature sections
(i_.e_. parts of features which have identical coordinates with parts of other
features) together into single "shared features" (See Fig_. 1). 

.P 0;If an /FCP qualifier is supplied, only feature pairs having the specified
feature codes will be merged.

.P 0;The feature code given to a "shared" feature is taken from the value
supplied with the /SHRFC qualifier (default 999), unless a Feature Code
Combination (_.FCC) file is specified with the /FCC qualifier. In this case
the feature code given to a shared feature which results from the merging of
features with any given set of feature codes, will be taken from the FCC file
definition for the feature code which is to correspond to this feature code
combination (if this combination is present in the FCC file).

.P 0; Using this /FCC mechanism, it is possible to assign a particular feature
code to every possible category of shared features, such as house-fence;
river-road; river-railway-road; forrest-road, etc_.

.P 0;The feature codes of each of the component features which formed the shared
feature are not lost. They are output in type 1 AC (Ancillary Code) entries
within the shared feature. (See Description sub-section "ILINK IFF output file
structure and content" - AC entry). 

.P 0;The code field of a type 1 AC is used to transmit the parent feature's
feature code. If the /PARENT qualifier is selected, the code field of a type 9
AC is also used to transmit an identifier which is unique to the parent
feature. 

.NO FILL

Single feature - link not shared:

NF 1 1          - start of feature with FSN 1
FS 24 0 0 0       feature code 24
ST 2 0          - 2 point link
90.8   100.8
110.7  109.4
EF              - end of feature



Shared feature - link shared by 3 features in input IFF file

NF 21 21        - start of feature with FSN 21
FS 999 0 0 0    - feature code 999 (/SHRFC was not specified
                  and so the default has been used)
AC 1 30         - type 1 AC carrying the feature code (30)
                  of first feature sharing this link
AC 9 112        - type 9 AC carrying the FSN (112) of
                  first feature sharing this link. This AC
                  is only present as the /PARENT qualifier
                  was used
AC 1 67         - type 1 AC carrying the feature code (67)
                  of second feature sharing this link
AC 9 115        - type 9 AC carrying the FSN (115) of
                  second feature sharing this link. This AC
                  is only present as the /PARENT qualifier
                  was used
AC 1 2          - type 1 AC carrying the feature code (2)
                  of third feature sharing this link
AC 9 325        - type 9 AC carrying the FSN (325) of
                  third feature sharing this link. This AC
                  is only present as the /PARENT qualifier
                  was used
ST 2 0          - the shared 2 point link
90.8   100.8
110.7  109.4
EF              - end of shared feature

.FILL
.P 0;It is (theoretically) possible to reconstruct the original (non-shared)
data structure using the information contained in the type 1 and type 9 ACs,
even though, as in the example above, one feature now represents the location
of three features in the input file. 


.LEFT MARGIN -20
.BLANK
.TEST PAGE 10
^*####################------------------------------------------------------------\*
.BR; ^^^*OPTION#5############Feature-end to feature-end joining - /PPJOIN\*
.LEFT MARGIN +20
.P 0;The ILINK /PPJOIN process forms junctions where lineal feature ends and/or
point features almost touch (see Fig_. 5). 

.P 0;The selection of the feature-end to which a free end is to be joined is 
controlled by 2 tolerances:
.LIST "o"
.LE ;the JoiN TOLerance - specified using /JNTOL, and,
.LE ;the EXtension TOLerance - specified using /EXTOL.
.END LIST 

.P 0;The join tolerance sets the distance below which the end 
point may be moved onto the target feature. 

.P 0;The extension tolerance sets the maximum distance by which one vector may
be extended or truncated to meet another before a vector end is moved off the
original line of the vector, to a point within the /JNTOL tolerance in any
direction, causing it to rotate (see Fig_. 3 and 5). 

.P 0;The precise action of the /PPJOIN process is controlled by the /PROJECT
qualifier. By default the /PROJECT qualifier is active and the action of the
ILINK /PPJOIN process is as follows:
.LIST "o"

.LE ;Where there are just two feature end-points to be joined, they 
are projected together. The new junction between the two features lies at
the intersection point of the two extended vectors.

.LE ;Where there are more than two feature ends within the /JNTOL tolerance,
all the feature  ends are moved to their common centre of gravity. 

.END LIST 

.P 0;This action is changed if /NOPROJECT is specified. All feature ends at a
junction are moved to the position of the feature end with the highest feature
priority.

.P 0;Feature alignment priority, which feature is moved relative to another,
may optionally be set using a definitions file specified using the /FCP
qualifier. (See Command qualifiers: /FCP). 

.P 0;In the absence of a /FCP file, feature alignment priority is based
on the internal sequence numbers of each pair of features under consideration.
The feature with the lower internal sequence number will be moved relative to
the feature with the higher internal sequence number. 

.P 0;If a /FCP qualifier is supplied, only features having the specified
feature codes will be aligned.

.P 0;The /FCP file contains pairs of feature codes which define feature
alignment priority. During feature alignment, positioning will be from the
first feature code onto the second. If feature codes are equal, the feature with
the lower internal sequence number will be aligned with the one with the
higher internal sequence number. 

.LEFT MARGIN -20
.BLANK
.TEST PAGE 10
^*####################------------------------------------------------------------\*
.BR; ^^^*OPTION#6############Arm sorting - command qualifier /SORTARMS\*
.LEFT MARGIN +20

.P 0;Some user applications require that the arms which radiate from a junction
must be in a consistent order. The ordering of the junction arms which
radiate from a junction may be specified using the /SORTARMS qualifier. ILINK
/SORTARMS specifies that the arms in IFF JB (Junction Block) entries should be
sorted with orientation angle increasing, (measured anticlockwise from the
positive X-direction).
.s1
This option, if used alone, will operate on a junction structured IFF file in
situ (although you are still required to provide ILINK with a dummy output
filespec). 


.LEFT MARGIN -20
.BLANK
.TEST PAGE 10
^*####################------------------------------------------------------------\*
.BR; ^^^*OPTION#7############The IFF junction structuring process - /STRUCTURE\*
.LEFT MARGIN +20

.P 0;A "link/node" structure is a data structure which contains information
connecting every link record to the node records corresponding to each of its
ends, and also connecting every node record to all of the link records which
hold links ending at this node. 

.P 0;A powerful ILINK feature is the ability to create an IFF link/node data
structure from unstructured IFF vector input. This IFF link node structure is
referred to as "IFF Junction Structure" 

.P 0;When the ILINK /STRUCTURE qualifier is given, the output IFF file will
contain a link/node structure in the form of IFF "Junction-Structure" entries.
For a description of IFF junction structure see the "IFF User Guide". 

.P 0;The nodes in the link/node structure will all be at existing feature-ends
and at point-features only. An implicit /PPJOIN process is carried out with a
near-zero join-tolerance to determine end-point connectivity. 


.LEFT MARGIN -20

.TEST PAGE 10
.BLANK 2
^*--------------------------------------------------------------------------------\*
.HEADER LEVEL 3 ^^^*ILINK and LITES2\*
.LEFT MARGIN +10
.P 0;ILINK is designed to complement the LAMPS graphic editor LITES2. No 
automatic geometry correction software can correct all geometric errors
in digitised data and some tasks can only be performed manually by a skilled
cartographic operator. To facilitate such editing ILINK will optionally
generate a LITES2 command file. This can be used to direct the user to the
position of the suspected error within LITES2. The positions supplied in the
LITES2 command file locate the suspected error and so provide a mechanism
for semi-automatic editing.

.P 0;An entry is made in a LITES2 command file if ILINK detects one of
the following potential error situations:
.LIST 
.LE ;The nodes defining the two ends of a link are found to be within the
/JNTOL tolerance of each other during processing. This results in the deletion
of the link from the output IFF file and the following LITES2 commands are
generated: 
.LITERAL

%MESSAGE End nodes lie within /JNTOL tolerance - link deleted
%POSITION    10.000    10.000
%TEST $CURSINWIN
%ELSE %ZOOM 1
%PING
%RESPOND
%ABANDON
%ABANDON

.END LITERAL

.LE ;A node is found to be connected to only one link. This is potentially
disruptive to polygon formation utilities. If the data produced by ILINK are to
be used for polygon formation, it is strongly recommended that the
ILINK/FREE__ENDS process is used to check for unwanted free-ends. This will
result in the generation of the following LITES2 commands. 

.LITERAL

%MESSAGE Node has only one arm.
%POSITION    1890.030    1627.923
%TEST $CURSINWIN
%ELSE %ZOOM 1
%PING
%RESPOND
%ABANDON
%ABANDON

.END LITERAL

.LE ;If the /VERIFY qualifier has been given then each /LPJOIN or /PPJOIN join
which is across a distance within the range VRTOL to JNTOL will result in the
generation of the following LITES2 commands. 
.LITERAL

%MESSAGE Point moved to (   242.157,    123.456)
%POSITION   241.726   125.824
%TEST $CURSINWIN
%ELSE %ZOOM 1
%PING
%RESPOND
%ABANDON
%ABANDON

.END LITERAL

.END LIST 

.P 0;To enable the LITES2 operator to identify the contents of a LITES2 command
file and to facilitate the use of the LITES2 command file sorting utility
LCMORG, ILINK outputs a standard header at the start of the LITES2 command
file. The following is a typical example: 
.LEFT MARGIN -10
.TEST PAGE 15
.LITERAL

%POSITION     0.000     0.000
%POSITION   100.000   100.000
%ABANDON
%MESSAGE 
%MESSAGE                L I T E S 2   C O M M A N D   F I L E
%MESSAGE 
%MESSAGE                              created by
%MESSAGE 
%MESSAGE ============================= I L I N K ============================== 
%MESSAGE 
%MESSAGE ILINK invoked by TIM using terminal LTA1: at 12-JUN-1987 14:41:00.13   
%MESSAGE  
%MESSAGE Command line:
%MESSAGE  
%MESSAGE ILINK SOILS SOILS2/PPJOIN/JNTOL=50/LAYER=1/LITES2 
%MESSAGE 
%MESSAGE ======================================================================
%MESSAGE 


.END LITERAL
.LEFT MARGIN +10
.P 0;ILINK directs all LITES2 command file output to the file directory
defined by the logical name LSL$LITES2CMD. As ILINK processing tends to be
iterative, it is strongly recommended that this directory is regularly purged
of unwanted LITES2 command files. 
.LEFT MARGIN -10
.BLANK 2
.TEST PAGE 10
^*--------------------------------------------------------------------------------\*
.HEADER LEVEL 3 ^^^*Using ILINK in place of IFJ\*
.LEFT MARGIN +10

.P 0;ILINK is designed to replace the obsolete Laser-Scan IFJ utility. IFJ
generates IFF junction structure with the restriction that junctions can only
be created at feature ends. Features cannot be split to form a junction at
intersection points. With IFJ the features must be manually prepared for
junction formation using the LITES2 graphical editor. Clearly ILINK offers a
very cost effective alternative to IFJ as features can be automatically split
without recourse to expensive operator interaction. 

.P 0;This section is designed to guide Laser-Scan customers who are replacing
IFJ within their production flowlines with ILINK. 
.BLANK
Qualifiers available with IFJ are:
.LIST
.LE;/NS: nx ny
.P 0;The 2 integer values nx and ny specify that IFJ is to split the input
IFF file into (nx) by (ny) (maximum 10x10) node-sectors to aid searching for
matching junctions. 
.BLANK
ILINK has no equivalent qualifier, but will always divide the file into
(nx) by (ny) square node-sectors, with a maximum of 10x10.

.LE;/TO:real
.P 0;Specifies the minimum distance between junctions that are to be
considered separate. The default tolerance is 0.0.
.BLANK
The equivalent qualifier for ILINK is:
.BREAK;/JNTOL=real

.LE;/AR:integer
.P 0;Specifies the maximum number of arms allowed in a single junction. An
error will occur if a junction is found with more than the specified number
of arms. By default, IFJ allows a maximum of 4 arms.
.BLANK
ILINK has no equivalent qualifier. ILINK imposes no limit on the number
of arms per junction. 
.END LIST


.FIll
.P 0;The user should specify the following IFJ command line to create a junction
structured IFF output file using a junction tolerance of 1.5 IFF units:

.NO FILL
.P 4;$#^*IFJ out-file-spec=in-file-spec/TO:1.5_<CR_>\*

.P 0;This is equivalent to running ILINK twice as follows:

.P 4;$#^*ILINK in-file-spec work-file-spec/PPJOIN/JNTOL=1.5_<CR_>\*
.blank
.P 4;$#^*ILINK work-file-spec out-file-spec/STRUCTURE_<CR_>\*
.FILL


.LEFT MARGIN -10
.BLANK 2
.TEST PAGE 10
^*--------------------------------------------------------------------------------\*
.HEADER LEVEL 3 ^^^*Using ILINK in place of CBA\*
.LEFT MARGIN +10

.P 0;ILINK is designed to replace the Laser-Scan CBA (Common Boundary Alignment)
utility. CBA is a utility for common-boundary alignment and/or end-point
joining.

.P 0;This section is designed to guide Laser-Scan customers who are replacing
CBA within their production flowlines with ILINK. 
.BLANK
Qualifiers available with CBA are:
.LIST

.LE;[-]AA[:tol1 (default:50)] (default:/-AA)
.BREAK
Perform alignment of areals with areals with a tolerance of tol1.

.LE;[-]AL[:tol2 (default:50)] (default:/-AL)
.BREAK
Perform alignment of areals with lineals with a tolerance of tol2.

.LE;[-]LL[:tol3 (default:50)] (default:/-LL)
.BREAK
Perform alignment of lineals with lineals with a tolerance of tol3. 

.LE;[-]LEE[:tol4 (default:50)] (default:/-LEE)
.BREAK
Perform alignment of lineal-ends with lineal-ends with a tolerance of
tol4.

.LE;[-]LEP[:tol5 (default:50)] (default:/-LEP)
.BREAK
Perform alignment of lineal-ends with points with a tolerance of tol5.

.LE;<OVERLAYS,LAYERS>[: ovn1[-ovn2]] (default: 1-3)
.BREAK
Restricts all alignment to features within specified overlays.

.LE;[-]MONITOR (default:/-MONITOR)
.BREAK
Write information to the terminal at intervals to indicate the
proportion of the process completed. 

.LE;[-]VERIFY (default:/-VERIFY)
.BREAK
Write a list of the locations of all the nodes found (no points,
including line end points, are considered to be nodes unless
they are shared by more than one feature), and also a list of the
node indices of nodes encountered running along the length of each
feature.

.LE;[-]AC (default:/-AC)
.BREAK
Get type from a type 7 AC (Ancillary Code) entry, not from the FS (Feature
Status) entry. 

.END LIST

.P 0;ILINK has no qualifiers equivalent to the /AC qualifier above,
but every other option can be effected using ILINK as follows:
.BLANK
ILINK will only perform one /LLJOIN, /LPJOIN or /PPJOIN process per
run. The /MONITOR and /LAYERS qualifier is the same in ILINK as for CBA (except
that the standard DCL list-format is somewhat different from the "m:n" range
format used by CBA). 
.BLANK
Assuming point-features to have feature-code 100; lineal-features 101 and areal
features 102, the following examples illustrate how ILINK can be used to
emulate CBA: 
.no fill

.BLANK
.P 0;(1) The CBA command line:
.P 4;$#^*CBA out-file-spec=in-file-spec/AA:real_<CR_>\*

.P 0;is equivalent to the ILINK command line:
.P 4;$#^*ILINK in-file-spec out-file-spec/LLJOIN#-_<CR_>\*
.I 4;__$#^*/JNTOL=tol/FCP=file-spec_<CR_>\*

.P 0;with the /FCP file containing the line:
	102	102		! areals onto areals

.BLANK
.TEST PAGE 6
.P 0;(2) The CBA command line:
.P 4;$#^*CBA out-file-spec=in-file-spec/AA:real/AL:real/LEE:real_<CR_>\*

.P 0;is equivalent to the two-stage ILINK process defined by the commands:
.P 4;$#^*ILINK in-file-spec temp-file-spec/LLJOIN#-_<CR_>\*
.I 4;__$#^*/JNTOL=real/FCP=fcp-file-spec_<CR_>\*

.P 0;with the /FCP file containing the lines:
	102	102		! areals onto areals
	102	101		! areals onto lineals

.P 0;followed by:
.P 4;$#^*ILINK temp-file-spec out-file-spec/PPJOIN#-_<CR_>\*
.I 4;__$#^*/JNTOL=real/FCP=fcp-file-spec_<CR_>\*

with the /FCP file containing the line:
	101	101		! lineals onto lineals

.P 0;(3) The CBA command line:

.P 4;$#^*CBA out-file-spec=in-file-spec/LEP:real_<CR_>\*

.P 0;is equivalent to the ILINK command line:
.P 4;$#^*ILINK in-file-spec out-file-spec/LPJOIN/JNTOL=real#-_<CR_>\*
.I 4;__$#^*/FCP=fcp-file-spec/FRT=frt-file-spec_<CR_>\*

.FILL
.P 0;where the fcp-file-spec specifies a file containing line and symbol-string
(DFAD "point")  feature code selections for processing. The frt-file-spec
specifies an FRT (Feature Representation Table) file. For a description of FRT
files see the "FRT User Guide". 

.LEFT MARGIN -10
.BLANK 2
.TEST PAGE 10
^*--------------------------------------------------------------------------------\*

.HEADER LEVEL 3 ^^^*ILINK IFF output file structure and content\*
.LEFT MARGIN +10

.P 0;IFF files produced as output from ILINK take their header entries
from the input IFF file. For a detailed description of the content and
structure of an IFF file see the "IFF User Guide".

.P 0;Every feature, or part of original feature, will be output to the same
layer in the output file as it was found in the input file. 

.P 0;If /BREAK is specified, and a feature is broken into parts, these
parts will be contiguous and ordered within the file as they are along
the original feature. (see Description sub-section "ILINK and shared
or broken features"). The qualifier /KEEP=FSN may be used to specify that
the parent feature FSNs will used for the output features, otherwise the 
output FSNs will be created sequentially.


.TEST PAGE 10
.P 0;ILINK output IFF file characteristics, by IFF entry, are:
.BLANK
.LEFT MARGIN +5
.I -5;^*RA\*#-#reflects the range of the data
.I -5;^*HI\*#-#present only if available in the input IFF file
.I -5;^*MH\*#-#copied from the input IFF file
.I -5;^*MD\*#-#copied from the input IFF file
.I -5;^*NS\*#-#contains the text "Created by ILINK on 'date' at 'time'"
.I -5;^*CC\*#-#copied from the input IFF file
.I -5;^*CP\*#-#copied from the input IFF file
.BLANK
.I -5;^*Layer 0 \*#-#simply copied from input IFF file, (unless /LAYER=0 used
to explicitly include layer 0 for ILINK processing)
.BLANK
.I -5;^*NO\*#-#copied from input IFF file.
.I -5;^*NF\*#-#feature FSNs (Feature Serial Numbers) are resequenced by ILINK.
.I -5;^*FS\*#-#by default this contains the feature-code from the input file
feature. In the case of shared features, the feature code is taken from
that specified by values with the /SHRFC or /FCC qualifiers. If no
feature code is specified using the /SHRFC or /FCC qualifiers a default value
of 999 is assumed.

.I -7;[AC]#-#Any ACs present in the input IFF file are are copied to the output
IFF file, except type 1 and 9 ACs.

.P 0;ILINK reserves these ACs for special coding, see Description sub-section
"ILINK and shared or broken features".
.I -5;^*ST\*#-#there may be several STs in a feature. Together they contain the
coordinates which define the feature. 
.I -5;^*EF\*#-#end of feature
.BLANK
.I -4;_.
.I -4;_.
.I -5;Other IFF features#_._._.
.I -4;_.
.I -4;_.
.BLANK
.I -5;^*EO\*#-#end of layer
.I -5;^*EM\*#-#end of map
.I -5;^*EJ\*#-#end of file
.BLANK 2
.LEFT MARGIN 0
.PAGE
.INDEX ILINK>shared features
.INDEX ILINK>broken features
.INDEX ILINK>command qualifiers>/BREAK
.INDEX ILINK>command qualifiers>/MERGE
.INDEX ILINK>command qualifiers>/PARENT
.INDEX ILINK>command qualifiers>/SHRFC
.INDEX ILINK>command qualifiers>/FCC
.INDEX ILINK>command qualifiers>/ACP
^*--------------------------------------------------------------------------------\*
.HEADER LEVEL 2 ^^^*ILINK and shared or broken features\*
^*--------------------------------------------------------------------------------\*
.NO JUSTIFY

.P 0;The ILINK /BREAK and /MERGE processes both result in input features being
broken into parts and output as separate features.

.P 0;It is sometimes required to know which original feature each part feature
has come from. For this purpose, the /PARENT qualifier is provided to specify
that AC type 9 entries should be put into every part feature of a feature that
is split during the /BREAK process, or into every compound feature produced
during the /MERGE process, so that the information is there in principle from
which all original "parent" features can be reconstituted. 

.P 0;The qualifier /KEEP=FSN may be used to specify that the parent feature 
FSNs will used for the output features, otherwise the 
output FSNs will be created sequentially.


.s1
.HEADER LEVEL 3 ^*Broken Features Produced by the /BREAK Process\*

.lm 10
.P 0;The /BREAK process will break features where they touch or cross. The
parts of broken features will be contiguous in the output file, and ordered as
they were along the original feature.

.P 0;The qualifier /KEEP=FSN may be used to specify that
the parent feature FSNs will used for the output features, otherwise the 
output FSNs will be created sequentially.

.P 0;If the /PARENT qualifier is used then an AC type 9 entry is written into
each part feature to hold a number which can be used to identify the original
"parent" feature which this feature belongs to (see also /MERGE). 
.lm 0
.tp 10
.s1

.HEADER LEVEL 3 ^*Shared Features Produced by the /MERGE Process\*

.lm 10
.P 0;The /MERGE process (used, for example, where a series of exactly aligned
polygons are required to have duplicate sections merged into single "shared" or
"compound" features) will break features at junctions where aligned features
separate. Two or more exactly aligned part features are then merged into a
single compound feature. 

.P 0;For each feature merged into a compound feature, an AC type 1 entry
is written to hold the feature code of the feature being merged, followed
by every other AC entry from this feature. If the /PARENT qualifier is used
then an AC type 9 entry will follow the AC type 1 entry, to hold a number
which can be used to identify the original "parent" feature which this
feature belongs to (see also /BREAK).

.P 0;The qualifier /KEEP=FSN may be used to specify that
the parent feature FSN's will used for the output features, otherwise the 
output FSNs will be created sequentially.

.P 0;It may be required to give a feature code to compound features which
allows them to be distinguished from other features according to their
graphical representation when displayed in LITES2.

.P 0;All shared features are given the same special feature code, which is 999
by default, but may be specified using the /SHRFC qualifier (see also /SHRFC)

.P 0;If it is required to distinguish graphically between compound features
arising from the merging of different combinations of feature codes, the /FCC
qualifier mechanism can be used to assign a particular feature code to each
possible feature code combination, such as house-fence; river-road;
river-railway-road; forrest-road, etc_. Combinations not found in the /FCC file
are given the /SHRFC code. (see also /FCC). 

.P 0;Sometimes the AC coding for each component feature in a compound feature
may be dependent on the direction of the component relative to the compound
point string, such as left/right AC codes, for example, which give the code for
the area to the left and right of a feature. Whereas normally all AC entries
are copied into the compound feature exactly as they are found in the feature
being merged, the /ACP qualifier can be used to specify that AC-type pairs
within a compound feature which are found in the /ACP file should have their
AC types swapped (see also /ACP).
.lm 0

.P 0;Note that ILINK reserves type 1 and type 9 ACs for special coding. Type 9
ACs found in the input IFF file will be ignored and will not be transmitted to
the output IFF file, because the parent feature identifiers which they carry
are unique only within the run of ILINK in which they are produced.

.LEFT MARGIN 0
.PAGE
^*--------------------------------------------------------------------------------\*
.HEADER LEVEL 2 ^*EXAMPLES\*
.INDEX ILINK>EXAMPLES
.NO JUSTIFY
.LEFT MARGIN +10
.P 0;In most production flowlines ILINK processing is done in the batch
environment. Due to the very nature of the geometry idealisation problem, ILINK
processing can take quite a long time. By default, ILINK outputs copious
run-time diagnostics as an aid to processing progress analysis. This is the
opposite behaviour to that exhibited by those LAMPS (Laser-Scan Automated Map
Production System) utilities which are designed primarily for quick interactive
applications. At any time during the execution of a batch job the VMS TYPE
utility may be used to type the contents of the batch process log file. 

.P 0;In the ILINK processing examples, presented in this section, no attempt is
made to summarise the diagnostic output and so it may be regarded as typical
of what a user will see when interpreting a batch log. 

.LEFT MARGIN -10
.BLANK
$ ^*ILINK DUA3:[BUREAU.SSEW]S106SEF S106SEF.JOINED__IFF/PPJOIN
:-/JNTOL=1.5/VRTOL=0.5<CR>\*
.LIT

 ILINK - Version  2.0

 ILINK COMMAND INTERPRETATION
*******************************************************************************

 Input from                   : DUA3:[BUREAU.SSEW]SSEW106SEF.IFF;5
 Output to                    : DUA3:[BUREAU.SSEW]S106SEF.JOINED__IFF;2
 Process                      : PPJOIN : Ends with ends junction formation 
                              : ends projected
 Join tolerance               :    1.500
 Max vector extension         :    1.500
 Min verification tolerance   :    0.500
 Layers to be processed       : All layers, (excluding layer 0).
 Output structure             : Normal IFF structure.
 LITES2 command file          : None specified.
 FRT file                     : None specified.
 FCP file                     : None specified.

 ILINK LOG
*******************************************************************************

 Scanning IFF file for dynamic memory allocation
 Reading data from IFF input
 Creating link/node structure
	Setting up a node for each feature end
	Merging nodes separated by less than     1.000000
	Creating node arms
 Joining ends to ends
 Writing to IFF output
 Counting arms-per-node

 ILINK STATISTICS
*******************************************************************************

 Input features processed     : (Point 0),  (Open 716),  (Closed 21)
 Processed features output    : (Point 0),  (Open 715),  (Closed 22)

 Total features in IFF input  : 740
 Total features in IFF output : 740

 Nodes found joined to 0 arms  (single point features): 0
                       1 arm   (unattached links)     : 0
                       2 arms  (link joined to link)  : 20
                       3 arms  (link joined to links) : 450
                       4 arms  (link joined to links) : 21
                      5+ arms  (link joined to links) : 0

                                            Total     : 491
 -----------------------------------------------------------------------------
 Join separations over the range   0.500  to   1.500

 Range    Count | Proportion
 ---------------|-------------------------------------------------------------
  0.500+    161 | ********************
  0.600+    154 | *******************
  0.700+     70 | *********
  0.800+     41 | *****
  0.900+     23 | ***
  1.000+     22 | **
  1.100+     10 | *
  1.200+      8 | *
  1.300+      2 | *
  1.400+      0 |
 ---------------|-------------------------------------------------------------

 ELAPSED:    0 00:01:08.79  CPU: 0:00:39.34  BUFIO: 8  DIRIO: 1697  FAULTS: 423 
$
.EL

.FILL
.LEFT MARGIN +10

.P 0;This example demonstrates the use of the /PPJOIN and /JNTOL qualifiers for
joining all feature ends to feature ends, within a (general)join and extension
/truncation join tolerance of 1.5, and a minimum join verification tolerance
of 0.5 IFF units. 

.P 0;The user has specified that input is to be from the file
DUA3:[BUREAU.SSEW]S106SEF.IFF;0. ILINK has taken the missing extension and
version fields for the file-spec from the default input file specification
'LSL$IF:IFF.IFF;0'. Output is to be to the file
DUA0:[BUREAU.SSEW]S106SEF.JOINED_IFF;3. ILINK has taken the missing output file
device and directory fields from the parsed input file-spec. The output file
version number defaults to the highest existing version number of the file,
incremented by one. 

.P 0;Notice that in the absence of an explicit /EXTOL qualifier,
the maximum vector extension had been set to have the same value (1.5) as
/JNTOL. Vector free ends will be projected, not merely moved to the centre of
gravity of all the free ends within the /JNTOL tolerance. 

.P 0;The /VRTOL qualifier has been used to give the minimum join verification
tolerance a value greater than the default of 0.0 so that the histogram
produced will show the distribution of joins made over the more critical end
of the join tolerance range rather than including all joins including those
across zero distance.

.P 0;No /FRT qualifier has been specified and so, in the absence of any explicit
/LAYER layer selections, it must be assumed that the user believes that all the
features in DUA3:[BUREAU.SSEW]S106SEF.IFF;12 are suitable for ILINK processing.
If an FRT (Feature Representation Table) file is specified, ILINK is able to
look up the graphical type of each feature to determine whether processing is
valid for that graphical type. Features with inappropriate graphical types are
copied, unprocessed, to the output file, (see Command Qualifiers: /FRT).

.P 0;No /LAYER selections or /FCP file is specified and so all features will be
processed. Feature alignment priority, (which feature is moved relative to
another), is defined by default using the feature internal sequence number,
(see Description). 

.P 0;The "ILINK STATISTICS" section of the log summarises the results of the
processing run. The log shows that 1 feature that was open on input is
closed by the ILINK processing (i.e. first and last points are now
coincident). 

.P 0;The "nodes found" section of the log shows how many nodes are present in
the output file. The nodes are classified by node degree (i_.e_. by the number
of arms radiating from the node).

.P 0;If the user subsequently ran ILINK to produce an IFF junction structure
(/STRUCTURE), the zero arm junctions would be omitted from the IFF junction
structure, because the concept of a zero arm junction is (unfortunately)
foreign to IFF format. Instead the zero arm junctions would be output as single
point features which do not contain any IFF junction entries. 

.P 0;The "join separation" section shows the distribution of join distances
between ten equal subintervals over range VRTOL to JNTOL. Here it can be seen
from the way the histogram tails off that the join tolerance as used has
probably found all of the joins which the user intended it to. It it had not
tailed off then the /JNTOL value might have been too small. It it had tailed
off and then picked up again, the /JNTOL value might have been too large, so
that some joins were made which the user had not intended. Of course, if
the digitising is very rough and feature density is very high, there may be
no tolerance value which can separate good from bad joins in this way.

.P 0;At the end of the run the standard LAMPS timing statistics summary is
output. The inexperienced user may find it instructive to try successive
runs on the same data, altering between each run only the /EXTOL and /JNTOL
tolerance values. Significant variations in processing time will result if wide
variations in tolerance values are used. It cannot be over-stressed that ILINK
is not a substitute for accurate source digitising. The submission of
inaccurate digitising to ILINK requires bigger processing tolerances and longer
run times, and is also likely to introduce various other problems.

.P 0;The run has completed successfully and DCL symbol $STATUS is set to
SS$__NORMAL - "normal successful completion". 

.LEFT MARGIN -10
.NO FILL
.BLANK 2
.TEST PAGE 15
$#^*ILINK POLYSEG.IFF;5 POLYSEG.A/LPJOIN/JNTOL=4.0/LAYER=1/LITES2_<CR_>\*

$#^*ILINK POLYSEG.A ^*POLYSEG.B/BREAK/LAYER=1_<CR_>\*

$#^*ILINK POLYSEG.B ^*POLYSEG.IFJ/STRUCTURE/LAYER=1_<CR_>\*

(Output to SYS$OUTPUT not shown here).

.FILL
.LEFT MARGIN +10
.P 0;This example demonstrates the use of the /LPJOIN and /JNTOL qualifiers for
joining feature ends to features, within a /JNTOL tolerance of 4.0
coordinate units. 

.P 0;The user has specified that input is to be from the file
DUA1:[PACKAGE.POLYGONS]POLYSEG.IFF;5. ILINK has taken the missing device and
directory fields for the file-spec from the default input file specification
'LSL$IF:IFF.IFF;0'. Output is to be to the file
DUA1:[PACKAGE.POLYGONS]POLYSEG.IFJ;1 via two intermediate stages. ILINK has
taken the missing output file device and directory fields from the parsed input
file-spec. The output file version number defaults to the highest existing
version number of the file, incremented by one. 

.P 0;The user has used the /LITES2 qualifier with the /JNTOL process
to specify that messages resulting from the deletion of features which are less
than the /JNTOL tolerance in length will be sent to a LITES2 command file. As
the optional /LITES2 qualifier file-spec value has been omitted, the default
LITES2 command file-spec will be used. This uses logical name LSL$LITES2CMD and
the filename from the input IFF file specification and the extension '.LCM'. 

.P 0;Notice that in the absence of an explicit /EXTOL qualifier,
the maximum vector extension has been set to have the same value (4.0) as
/JNTOL.

.P 0;Although /LAYER=1 is specified, no /FRT qualifier has been specified.
It must therefore be assumed that the user believes that all the
features layer 1 of DUA3:[BUREAU.SSEW]S106SEF.IFF;12 are suitable for ILINK
processing. If an FRT (Feature Representation Table) file is specified, ILINK
is able to look up the graphical type of each feature to determine whether
processing is valid for that graphical type. Features with inappropriate
graphical types are copied, unprocessed, to the output file, (see Command
Qualifiers: /FRT). 

.P 0;No /FCP file is specified and so all features in the specified (/LAYER=1)
layer will be processed. Feature alignment priority, (which feature is moved
relative to another), is defined by default using the feature internal sequence
number, (see Description). 

.P 0;The /BREAK qualifier results in all features being broken at feature
intersections. These intersections will be represented by junctions in the
junction structured IFF output file. 

.P 0;Had any input features been shorter than the /JNTOL tolerance or had
resulted in the formation of one arm nodes, messages would have been
output to the LITES2 command file.

.P 0;The run has completed successfully and DCL symbol $STATUS is set to
SS$__NORMAL - "normal successful completion". 

.LEFT MARGIN 0
.BLANK


.REQUIRE "ILINKMSG.RNO"


