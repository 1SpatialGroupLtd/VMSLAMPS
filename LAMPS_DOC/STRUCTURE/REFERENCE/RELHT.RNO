.PAGE
.NOFILL
^*--------------------------------------------------------------------------------\*
.FILL

.BR;^*MODULE####RELHT\*

.NOFILL
^*--------------------------------------------------------------------------------\*
.FILL

.HL 2 ^*FUNCTION\*

.LM +10
Given a junction structured IFF file and a table of feature 
code priorities, the program assigns relative heights to the ends of 
all the links. The junction structure is not preserved in the 
output file. 

.LM -10
.BLANK
.NOFILL
^*--------------------------------------------------------------------------------\*
.FILL

.HL 2 ^*FORMAT\*

.LM +10
.NOFILL
$ RELHT file-spec file-spec

^*Command qualifiers                   Defaults\*

/[NO]LITES2                          /NOLITES2
/[NO]LOG                             /NOLOG
/[NO]NODE__LIST                       /NONODE__LIST

.FILL
.LM -10

.TP 9
.NOFILL
^*--------------------------------------------------------------------------------\*
.FILL

.HL 2 ^*PROMPT\*

.LM +10
.NOFILL
From:     input-file-spec
To:       output-file-spec

.FILL

.LM -10
.TP 9
.NOFILL
^*--------------------------------------------------------------------------------\*
.FILL

.HL 2 ^*PARAMETERS\*

.LM +10
.P -10;input-file-spec
.P -2;-#Specifies the IFF file which is to be processed. Any part of the 
filename which is not specified will be taken from the default specification
'LSL$IF:.IFF;0'. 

.TP 10
.P -10;output-file-spec
.P -2;-#Specifies the IFF file which is to be created to contain all the map 
data from the input file with relative heights for the end of each link. 
Any part of the filename which is not
explicitly given will be taken from the parsed input specification. Note that a
version number must ^*not\* be specified for the output file. If a file with
the specified name already exists, a new file will be created with the version
number incremented by one.

.LM -10
.BLANK
.NOFILL
^*--------------------------------------------------------------------------------\*
.FILL

.HL 2 ^*COMMAND QUALIFIERS\*

.LM +10

.BLANK
.TP 6
.I -10
/LITES2[=file-spec]
.P -2
-#allows the user to specify a LITES2 guidance file which will contain 
commands to position the cursor on all junctions with doubtful relative 
heights. If there are no doubtful junctions, a guidance file will not be 
created. Any part of the filename which is not explicitly given will be taken 
from LSL$LITES2CMD:<output#IFF#file#name#part>.LCM - this is the actual 
filename used if none is specified with the qualifier. If a file with
the specified name already exists, a new file will be created with the version
number incremented by one.

.BLANK
.TP 6
.I -10
/LOG
.P -2;-#this will result in supplementary messages being sent to
SYS$OUTPUT. Supplementary messages are generated when an
IFF file is successfully opened or closed and a reassuring 
message output each time a new IFF layer is encountered in the input IFF file. 
Other supplementary messages will be output to indicate what stage the program 
has reached, and if the /LITES2 or /NODE__LIST qualifiers were given, whether 
or not these files have been created.

.BLANK
.TP 6
.I -10
/NODE__LIST[=file-spec]
.P -2
-#allows the user to specify a text file which will contain a list of
coordinates and number of arms for all junctions in the input IFF file.
Any part of the filename which is not explicitly given will be taken 
from <output#IFF#file#name#part>.LIS - this is the actual 
filename used if none is specified with the qualifier. If a file with
the specified name already exists, a new file will be created with the version
number incremented by one.

.LM -10

.BLANK
.TP 6
.NOFILL
^*--------------------------------------------------------------------------------\*
.FILL

.HL 2 ^*DESCRIPTION\*

.LM +10

.P 0
The program first reads the file containing the feature code relative height 
priorities from LSL$RELHT__PRIO, so this logical name must already have been 
set up.

.P 0
Each line in the file is of the form

.BLANK
.NOFILL
	_<n1_>	_<n2_>	_<FC range_>
.FILL

.P 0
where

.LIST " "
.LM +5
.LE; n1 is a relative priority starting at 0
.LE; n2 is set to 0 if there is no doubt about the relative 
priority, and 1 if there is likely to be a conflict with other features
.LE; FC range is a range of feature codes, e.g. 101-104,111,114,116-118
.LM -5
.END LIST

A relative priority of 0 indicates that the height is not relevant;
the same is assumed for any feature codes not in the table.

.P 0
After reading in the priority table, all of the map data is copied from 
the input file into the output file. The junction structure is ignored, and 
dummy AC type 10 and type 11 entries are created for the relative heights of 
the start and end of each link respectively, with values of 0. At the same 
time, lists are made of :-

.LIST
.DISPLAY ELEMENTS LL,")"
.LM +5
.LE; pointers to all FS entries in the input file
.LE; feature codes of all features in the input file
.LE; pointers to all AC entries in the output file
.LE; doubt flags for each feature in the output file (see below)
.LM -5
.END LIST

Common boundaries are normally denoted by feature code 999, and the feature 
codes of the original features which were amalgamated to form the common 
boundary are given in type 1 AC entries. For such features the program simply 
checks the number of type 1 AC entries; if there are more than one, the 
feature is assumed to be a common boundary. The height priorities of these 
shared features can conflict as there may be more than one feature with a 
priority greater than zero. If this is the case, then we note that this 
feature is in doubt. If not, the feature code used is that for the first in the 
list if all priorities are zero; otherwise it is the first in the 
list with a non-zero priority.

.P 0
The second stage of processing is to set the relative heights for all of the 
links in the output file. Use is made of the IFF junction handling routines 
to go through each junction in the input file in turn, by scanning every sector.

.P 0
For each arm of a junction, the following procedure is 
followed :-

.LIST "-"
.LM +5
.LE; get the ST pointer and vertex number
.LE; get the feature code by comparing the ST pointer with 
the list of FS pointers to find the relevant FS entry
.LE; get the height priority from the priority table
.LE; use the index from the FS pointer list in conjunction 
with the vertex number to get the AC pointer from the 
AC pointer list
.LM -5
.END LIST

Once this information has been obtained for each arm, the 
relative heights are reassigned, starting at 0. These values 
are then written into the relevant AC entries in the output 
file. Only features that cross another have their AC types 10 and 11 changed 
from the default value of zero. 

.P 0
The junction positions for any doubtful link ends are recorded 
in the LITES2 guidance file if one is being produced. A junction is in doubt 
if either

.LIST
.DISPLAY ELEMENTS RL,")"
.LM +5
.LE; the feature code of one of the arms has a doubt value of 1 in the priority 
table, or
.LE; one of the arms is a common boundary with conflicting height priorities
.LM -5
.END LIST

If a node list is being produced, all junction positions are 
written to it. 

.P 0
Note that there will be no visible difference to 
the display of any RELHT output file in LITES2 or other display mechanisms.

.LM -10




.SUBTITLE MESSAGES (INFORMATIONAL)
^*--------------------------------------------------------------------------------\*

.!******************************************************************************
.PAGE
^*--------------------------------------------------------------------------------\*
.HL     1 ^^^*MESSAGES (INFORMATIONAL)\*

These   messages  give information   only,    and require no
immediate action by  the  user.  They  are  used to  provide
information on  the  current  state  of the  program, or  to
supply explanatory  information in support  of  a warning or
error message.

.LM +4

.NOJUSTIFY;.TP 10;.P -4
COPYING, copying features over to output IFF file
.JUSTIFY


.NOJUSTIFY;.TP 10;.P -4
CREATELCM, LITES2 guidance file 'filename' created
.JUSTIFY

.NOJUSTIFY;.TP 10;.P -4
CREATELIS, node list file 'filename' created
.JUSTIFY

.NOJUSTIFY;.TP 10;.P -4
IFFINCLO, input IFF file closed
.JUSTIFY

.NOJUSTIFY;.TP 10;.P -4
IFFINOPN, IFF file 'filename' opened for input
.JUSTIFY

.NOJUSTIFY;.TP 10;.P -4
IFFOUTCLO, output IFF file closed
.JUSTIFY

.NOJUSTIFY;.TP 10;.P -4
IFFOUTOPN, IFF file 'filename' opened for output
.JUSTIFY

.NOJUSTIFY;.TP 10;.P -4
LINENUM, line 'integer' in priority file
.JUSTIFY

.NOJUSTIFY;.TP 10;.P -4
NEWLAYER, new layer 'integer' encountered
.JUSTIFY

.NOJUSTIFY;.TP 10;.P -4
NOLCM, heights OK, no LITES2 guidance file created
.JUSTIFY

.NOJUSTIFY;.TP 10;.P -4
READPRIO, reading feature code priority file 'filename'
.JUSTIFY

.NOJUSTIFY;.TP 10;.P -4
SETTING, setting relative heights in output IFF file
.JUSTIFY

.LM -4
.SUBTITLE MESSAGES (WARNING)

.!******************************************************************************
.PAGE
^*--------------------------------------------------------------------------------\*
.HL     1 ^^^*MESSAGES (WARNING)\*

These messages are  output when an error has   occurred that
can be corrected immediately by the user or that the program
will attempt to overcome.

.LM +4

.NOJUSTIFY;.TP 10;.P -4
ABAOUTFIL, output IFF file abandoned
.JUSTIFY

.NOJUSTIFY;.TP 10;.P -4
FEATINCOMP, incomplete feature 'fsn' found in input file, not copied
.JUSTIFY

.NOJUSTIFY;.TP 10;.P -4
LINETRUNC, line truncated
.JUSTIFY

.LM -4
.SUBTITLE MESSAGES (ERROR)

.!******************************************************************************
.PAGE
^*--------------------------------------------------------------------------------\*
.HL     1 ^^^*MESSAGES (ERROR)\*

These  messages indicate an  error in processing  which will
cause  the program to terminate. The most likely  causes are
a   corrupt or otherwise  invalid  input file,  or an  error
related to command line processing and file manipulation.

.LM +4

.NOJUSTIFY;.TP 10;.P -4
BADARMNUM, bad JB arm count 'integer' (max. 'integer') at 'integer' 'integer'
.JUSTIFY


.NOJUSTIFY;.TP 10;.P -4
BADJBARM, bad JB pointer 'integer' (LPOSE='integer') at ('integer','integer'), 
arm 'integer'
.JUSTIFY


.NOJUSTIFY;.TP 10;.P -4
BINCHOPERR, internal binary chop error for feature at 'integer'
.JUSTIFY


.NOJUSTIFY;.TP 10;.P -4
EOIINFEAT, unexpected end of input IFF file within feature
.JUSTIFY


.NOJUSTIFY;.TP 10;.P -4
ERRCLOIN, cannot close input IFF file
.JUSTIFY


.NOJUSTIFY;.TP 10;.P -4
ERRCLOLCM, cannot close LITES2 guidance file on unit 'integer'
.JUSTIFY


.NOJUSTIFY;.TP 10;.P -4
ERRCLOLIS, cannot close node list file on unit 'integer'
.JUSTIFY

.NOJUSTIFY;.TP 10;.P -4
ERRCLOOUT, cannot close output IFF file
.JUSTIFY


.NOJUSTIFY;.TP 10;.P -4
ERRCLOPRIO, cannot close feature code priority file on unit 'integer'
.JUSTIFY


.NOJUSTIFY;.TP 10;.P -4
ERRDELLCM, cannot delete LITES2 guidance file on unit 'integer'
.JUSTIFY


.NOJUSTIFY;.TP 10;.P -4
ERROPNIN, cannot open input IFF file 'filename'
.JUSTIFY


.NOJUSTIFY;.TP 10;.P -4
ERROPNLCM, cannot open 'filename' on unit 'integer'
.JUSTIFY


.NOJUSTIFY;.TP 10;.P -4
ERROPNLIS, cannot open 'filename' on unit 'integer'
.JUSTIFY


.NOJUSTIFY;.TP 10;.P -4
ERROPNOUT, cannot open output IFF file 'filename'
.JUSTIFY


.NOJUSTIFY;.TP 10;.P -4
ERROPNPRIO, cannot open 'filename' on unit 'integer'
.JUSTIFY


.NOJUSTIFY;.TP 10;.P -4
ERRPOSAC, error positioning to AC entry in output file
.JUSTIFY


.NOJUSTIFY;.TP 10;.P -4
ERRREADPRIO, cannot read feature code priority file on unit 'integer'
.JUSTIFY

.NOJUSTIFY;.TP 10;.P -4
ERRSELLCM, cannot select LITES2 guidance file on unit 'integer'
.JUSTIFY


.NOJUSTIFY;.TP 10;.P -4
ERRSELLIS, cannot select node list file on unit 'integer'
.JUSTIFY


.NOJUSTIFY;.TP 10;.P -4
EXPDIGIT, expecting digit in feature code range
.JUSTIFY


.NOJUSTIFY;.TP 10;.P -4
EXPFCRANGE, expecting range of feature codes
.JUSTIFY


.NOJUSTIFY;.TP 10;.P -4
FIRSTTOOBIG, first number of range greater than maximum
.JUSTIFY


.NOJUSTIFY;.TP 10;.P -4
IFFLIBERR, IFF library error
.JUSTIFY


.NOJUSTIFY;.TP 10;.P -4
INVALFC, invalid feature code, must be positive
.JUSTIFY


.NOJUSTIFY;.TP 10;.P -4
INVALRANGE, first number in range greater than second
.JUSTIFY


.NOJUSTIFY;.TP 10;.P -4
MISSINT, range has missing integer
.JUSTIFY


.NOJUSTIFY;.TP 10;.P -4
SECONDTOOBIG, second number of range greater than maximum
.JUSTIFY


.NOJUSTIFY;.TP 10;.P -4
TOOMANYFEAT, too many features in input file (max. 'integer')
.JUSTIFY


.NOJUSTIFY;.TP 10;.P -4
TOOMANYSHARED, too many features in shared feature (max. 'integer')
.JUSTIFY


.NOJUSTIFY;.TP 10;.P -4
UNEXPEOF, unexpected end of file
.JUSTIFY


.NOJUSTIFY;.TP 10;.P -4
UNEXPEOI, unexpected end of input IFF file
.JUSTIFY


.NOJUSTIFY;.TP 10;.P -4
UNEXPEOL, unexpected end of line
.JUSTIFY


.NOJUSTIFY;.TP 10;.P -4
UNEXPEOO, unexpected end of output IFF file
.JUSTIFY

.LM -4
.SUBTITLE MESSAGES (FATAL)

.!******************************************************************************
.PAGE
^*--------------------------------------------------------------------------------\*
.HL     1 ^^^*MESSAGES (FATAL)\*

These messages indicate  a severe   error in processing,  or
some form of system failure, which has caused the program to
terminate.

.LM +4

.NOJUSTIFY;.TP 10;.P -4
SOFTERR, software error
.JUSTIFY

.LM -4
.SUBTITLE MESSAGES (OTHER)

.!******************************************************************************
.PAGE
^*--------------------------------------------------------------------------------\*
.HL     1 ^^^*MESSAGES (OTHER)\*

In addition to the above messages which are generated by the
program itself,   other messages  may  be   produced by  the
command line interpreter (CLI) and by  Laser-Scan libraries.
In particular, messages may be  generated by the IFF library
and  by the  Laser-Scan  I/O library,  LSLLIB.  IFF  library
messages are introduced by   '%IFF' and are  documented in
the IFF library users' guide. In most cases IFF errors will
be due to a corrupt input file, and this should be the first
area of investigation. If the  cause of  the error cannot be
traced by the  user, and  Laser-Scan are consulted, then the
output  file should  be  preserved to  facilitate diagnosis.
LSLLIB  messages  are  introduced  by    '%LSLLIB' and are
generally self-explanatory.  They are  used  to  explain the
details of program generated errors.



