
.!** page format
.LEFT MARGIN  0;.RIGHT MARGIN 80;.PAGE SIZE    60,80
.KEEP
.FLAGS BOLD

.!** title page
.FIGURE 14
.CENTRE ;^&Laser-Scan_ Ltd.\& 
.BLANK
.CENTRE ;^&Software_ Product_ Specification\&
.BLANK
.CENTRE ;^&STRUCTURE_ package\&
.BLANK
.CENTRE; (Structured IFF creation and processing)
.FIGURE 2
.CENTRE; For LAMPS V4.5

.FOOT
.FLAGS SUBSTITUTE
.NOFILL
Copyright (C) $$year Laser-Scan Ltd
Science Park, Milton Road, Cambridge, England CB4 4FY  tel: (0) 1223) 420414

Document "STRUCTURE SPS"				Category "SALES - Spec"
Document Issue 1.1	Andrew Morris			 2-Mar-1987
Document Issue 1.2	Tim Hartnall			 9-Apr-1987
Document Issue 1.3	Tim Hartnall			15-Jun-1987
Document Issue 1.4	Andrew Morris			16-Sep-1987
Document Issue 1.5	Andrew Morris			 6-May-1988
Document Issue 1.6	Steve Townrow			30-Mar-1992
Document Issue 1.7	Jon Barber			 8-May-1992
Document Issue 1.8	Jon Barber			 9-Jun-1993
Document Issue 1.9	Paul Hardy			25-Feb-1994
Document Issue 2.1	Matt Wenham			24-Dec-1997
.FILL
.NOFLAGS SUBSTITUTE
.END FOOT

.TITLE ^*STRUCTURE Software Product Specification\*
.PAGE
.LM +10
.HL 1 ^*^&DESCRIPTION\&\*
.P 0;The Laser-Scan STRUCTURE package is a structured IFF creation and
processing package. The package operates on Digital Equipment VAX and Alpha AXP
series computers running the VMS operating systems. See later sections for
details of hardware and software prerequisites. It is recommended that the
reader becomes familiar with the "LAMPS Environment Guide" which outlines in
some detail the hardware and software environment required by the LAMPS package
as a whole (of which STRUCTURE is but a part). LAMPS is the *Laser-Scan
*Automated *Map *Production *System. 

.P 0;The acronym IFF stands for *Internal *Feature *Format. IFF is the
Laser-Scan vector file format generated by LASERAID and other Laser-Scan
mapping systems and used as the data structure throughout the Laser-Scan LAMPS
system. IFF files are binary and cannot be manipulated directly using a text
editor. The STRUCTURE package offers the user to a variety of geometry
idealisation options and also provides the option for generation of IFF link
node data structure. The link/node structured IFF data data can be used for
many network processing operations, such as polygon generation, route planning,
map colouring and data-base compilation. 

.P 0;Although all data input to the STRUCTURE package utilities must be in IFF
format, conversion software is available to transfer a variety of commonly used
customer formats to and from IFF format. See the CONVERT package SPS for
details of supported customer format conversions. 

.P 0;The STRUCTURE package consists of independent modules which together form
a powerful data structuring system within an automated mapping environment. All
the modules have common command syntax which is decoded using the Command Line
Interpreter as used by the VMS utilities. STRUCTURE modules all generate
VMS format messages and set VMS DCL symbol $STATUS on image exit. In command
files, the success of a preceding STRUCTURE module may be tested using $STATUS
before proceeding. All STRUCTURE modules are comprehensively documented in the
STRUCTURE Reference Manual and the documentation includes an explanation of
messages output by the modules together with suggested user action.


.!\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\

.PAGE
.HL 1 ^*^&PREREQUISITES\&\*

.HL 2 ^^^*^&Hardware prerequisites\&\*

The following computer hardware requirements are needed to run STRUCTURE.

.LIST 'o'
.LE
Any DEC VAX, MicroVAX, VAXstation, or Alpha AXP computer supported by the
current version of VMS. 

.LE
At least 2MB available disc space for software, plus sufficient for data files.

.LE
At least 8192 page working set per process for efficient use on typical 
datasets, 16384 page working set per process for larger datasets.

.LE
At least 30000 page virtual address space per process for handling of typical
datasets, more for larger datasets.

.LE
Any DEC-compatible alphanumeric terminal.

.END LIST


.TP 10
.HL 2 ^^^*^&Software prerequisites\&\*
.P 0
STRUCTURE modules run under OpenVMS VAX Version 5.5-2, or OpenVMS AXP V6.1
(or later version,
assuming continued upward compatibility by DEC). STRUCTURE modules may be run
concurrently with other interactive and batch processes. 

.P 0;The prerequisite Laser-Scan MAPPING package provides IFF and FRT file
interface libraries.

.P 0;The Laser-Scan LITES2 interactive digitising and editing software
is recommended for digitising vector input data.

.P 0;It is recommended that the reader becomes familiar with the LAMPS
Environment Guide which outlines in greater detail the hardware and software
environment required by the LAMPS package as a whole (of which STRUCTURE is but
a part). 

.HL 1 ^&^*GROWTH CONSIDERATIONS\*\&

.P 0;The minimum hardware and software requirements for any future version of
this product may be different from the minimum hardware requirements for the
current version. 


.TP 10

.HL 1 ^&^*RESTRICTIONS\*\&

.list

.le;ILINK will not detect cases where a feature intersects with or doubles 
back on itself. It is recommended that such loops are detected using the 
ICHECK  tool of the IMP package, and removed using the LITES2 editor before
running ILINK.

.le;ILINK, like all geometry handling programs, has to handle the infinite
precision of mathematical geometry within the finite precision of computer
arithmetic. This means that it has to apply tolerances to all positional
comparisons, which it does in a self-consistent manner. However, care should
be taken not skip stages in ILINK processing (on the grounds that equivalent
processing has been done by a different program) as the algorithms and 
tolerances may not match. In particular, the /BREAK and /FREE__ENDS qualifiers
should only be used on data which has previously been processed using /LPJOIN
and /PPJOIN.

.le;ILINK will not retain invisible moves within features, but instead will
create independent features for each visible section.

.end list


.HL 1 ^&^*SUPPORT LEVEL\*\&

.P 0;STRUCTURE is a fully supported Laser-Scan standard software product.


.TP 10
.HL 1 ^*^&STRUCTURE FACILITIES\&\*
.P 0;The facilities offered by STRUCTURE are described by module.

.PAGE
.LM -10
.!\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
.BLANK 3
.LM +10
.P -2;^* ILINK\* (IFF data tidying and structuring)

.P 0;ILINK is an IFF geometry tidying and link-node structuring utility
offering the following features:
.LIST "o"
.LE ;Geometry idealisation:
.LIST " "
.LE ;Digitising inaccuracy can be corrected.
.LE ;Duplicate feature sections can be merged into single shared features. 
.LE ;Features can be broken where they intersect.
.LE ;Unique junction points can be created where features meet.
.END LIST 

.LE ;Link/node data structuring of IFF files.
.END LIST 

.P 0;The structured data generated by ILINK permits network processing
operations, such as polygon generation, route planning, map colouring and
structured data-base compilation. 

.P 0;Six geometry idealisation options are available:

.LM +23

.P -23;OPTION#1#(LPJOIN)####-#Feature-end to feature joining. This process is
useful when feature ends fall just short of, or project just over other
features, or where features are required to move onto point features which are
close to them. For example, railway lines being moved so as to pass exactly
through railway stations. 

.P -23;OPTION#2#(PPJOIN)####-#Feature-end to feature-end joining. For example,
where a digitised network such as a road map needs to have feature ends within
some small tolerance brought together to arrive at a unique point 

.P -23;OPTION#3#(LLJOIN)####-#Feature alignment. For example, where a polygon
map has been digitised as a series of closed polygons and these are required to
be aligned.

.P -23;OPTION#4#(MERGE)#####-#Feature merging. For example, where a polygon
map has been aligned as a series of closed polygons and these are required to
be merged so that duplicate boundary sections become single shared-features. 

.P -23;OPTION#5#(BREAK)#####-#Breaking features where they cross. For example,
where a wire-frame perspective projection is required to be broken into
separate line features between every point where lines cross, so that hidden
line sections can subsequently be edited out manually. 

.P -23;OPTION#6#(FREE__ENDS)#-#Reporting free ends. All free ends (1-arm 
nodes) are found and reported, either to a LITES2 command file or as point 
features in a separate final IFF layer.

.LM -23

.P 0;In addition to the geometry idealisation options ILINK also provides IFF
link/node structuring. 
.LM +23

.P -23;OPTION#7#(STRUCTURE)#-#This option is useful when the link-node
structure resulting from the ends with ends joining operation described above,
is required for subsequent processing. For example, the compilation of a
structured data base or route planning.

.P -23;OPTION#8#(SORTARMS)##-#Junction Structure 'arm' sorting. The arms in the 
IFF JB (Junction Block) node__to__link pointer entries are sorted (in situ) into
order of increasing orientation angle (measured anti-clockwise from the positive
x axis).


.LM -23

.P 0;Because each of the above options is independent, they can be used
individually, or can be applied successively to transform an image in a series
of iterative steps. 

.P 0;This makes ILINK very flexible; for example, the following sequence
of ILINK command lines: 
.NO FILL
.BLANK
       $#^*ILINK infile file1/PPJOIN/JNTOL=4_<CR_>\*

       $#^*ILINK file1 file2/LPJOIN/JNTOL=4_<CR_>\*

       $#^*ILINK file2 file3/LLJOIN/JNTOL=1.5_<CR_>\*

       $#^*ILINK file3 file4/MERGE_<CR_>\*

       $#^*ILINK file4 file5/BREAK_<CR_>\*

       $#^*ILINK file5 outfile/STRUCTURE_<CR_>\*
.BLANK

.FILL
will result in joining ends with ends; followed by joining ends to lines;
followed by feature alignment; followed by merging; followed by breaking lines
where they touch or cross; and finally producing a link/node structured IFF
output.


.P 0;Specific features may be selected for processing on the basis of
IFF layer and/or feature code. All other features will be transferred from
input to output IFF files unchanged. 

.P 0;The positions of any unattached link ends and zero length links may
optionally be recorded in a LITES2 guidance file. This facilitates
semi-automatic editing of the IFF data using the LITES2 graphical editor. 

.PAGE
.LM -10
.!\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
.BLANK 3
.LM +10
.P -2;^* RELHT\* (IFF feature relative height coding)

.P 0;RELHT assigns relative heights to the ends of all links in a junction
structured IFF file. RELHT requires for input the junction structured IFF
file and an ASCII file containing a user defined table of feature code
height priorities. The junction structured file may be produced by either
ILINK or LASERAID. 

.P 0;The relative height coding for the ends of each link are placed in type
10 and type 11 AC (Ancillary Code) entries for the start and end of each
link respectively.

.P 0;The junction structure is not preserved in the output file. 

.P 0;The relative height coding may be used to determine which feature "lies on
top of" another for reprographic and GIS applications. For example,
the relative height infomation may be used to ensure that motorway features are
plotted as a continuous feature, while a river feature would be broken where it
intersects with the motorway. 

.P 0;The junction positions of any doubtful link ends may optionally be
recorded in a LITES2 guidance file. This facilitates semi-automatic editing of
the IFF data using the LITES2 graphical editor. 

.P 0;RELHT offers the option of an ASCII output file to contain a list of the
coordinate position and the number of arms for all the junctions in the input
IFF file. 

.PAGE
.LM -10
.!\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
.BLANK 3
.LM +10
.P -2;^* ICASE\* (generation of road casings and area fills)

.P 0;
ICASE is suited to the production of large scale schematic road casings and
area fills as often seen in road atlases.

.P 0;
Given a junction structured IFF file containing road centrelines, a table of
feature codes, priorities and road widths, the program will create an output
IFF file containing road casings and area fills for the selected features.

.P 0;
It is important to realise that the input road centreline data must be
geometrically clean to prevent spurious results occurring.

.P 0;
Note that for small scales work, it is often easier to generate road
casings 'on the fly' during display and plotting, using the prioritised
multiple representation capabilities of FRTLIB now used in LITES2 and FPP.

.LEFT MARGIN -10

