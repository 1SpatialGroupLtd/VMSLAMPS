!*******************************************************************************
!********    The IPATCH portion of the IMP package's HELP file   ***************
!*******************************************************************************
2 IPATCH
  IPATCH is the IFF file patch editor. It allows the user to inspect,
  edit or  delete the various entries in the file. The file is not
  copied, and changes made in write mode are performed in-situ. Thus
  it is not possible to add extra information. 

  The default mode of operation is to open the IFF file for reading only.
!*******************************************************************************
!*******************************************************************************
!*******************************************************************************
3 File_spec
  Specifies the IFF file to be edited.

  Any part of the file name that is not specified will be completed from
  the default of "LSL$IF:IFF.IFF;0"
!*******************************************************************************
3 Command_qualifiers
/COMMANDS

	/COMMANDS [=file-spec]
	/NOCOMMANDS		(default)

  Specifies that commands will be taken from a file, instead of from
  prompts to the user. The file name defaults to <IFF-name>.IPATCH,
  where <IFF-name> is the name of the IFF file being edited.

  If the last command in the command file is not EXIT, then a warning
  message will be given, and IPATCH will start to prompt for commands.

  Great care should be taken when using the /COMMAND switch, as IPATCH
  will not stop editing when an error occurs. This can mean that a
  command file could have disastrous effects due to a small difference
  between the file on which the commands were journalled and the file
  on which /COMMAND is used.
/FRT

	/FRT=file-spec
	/NOFRT			(default)

  Specifies an FRT file to be read.  Any part of the file name that is not
  specified will be completed from the default of "LSL$FRT:.FRT".

  Only the ACD (attribute code definition) part of the FRT is relevant to
  IPATCH. If no FRT file is specified, then only the default attribute codes
  will be known to IPATCH.
/JOURNAL

	/JOURNAL [=file-spec]
	/NOJOURNAL		(default)

  Specifies that commands will be journalled to a file. The file name
  defaults to <IFF-name>.IPATCH, where <IFF-name> is the name of the
  IFF file being edited.

  Note that everything that the user types is journalled, before the
  program attempts to obey the line. Thus the journal file contains a
  complete record of the IPATCH session. The journal file can be very
  valuable documentation of a problem in IPATCH being reported to
  Laser-Scan.

  If <CTRL/Z> is used to exit from IPATCH, this will be logged as
  if the EXIT command had been used. Therefore all normal journal
  files will end with EXIT.
/LOG

       	/LOG
	/NOLOG		(default)

  Specifies that extra information is to be written to the terminal.

  When the program starts up, the name of the IFF file, and any command
  or journal files, are logged. When the program exits, a message
  containing the IFF file name is output.

  If /COMMAND has been used to specify that commands be taken from a
  file, the /LOG command makes IPATCH reflect each line to the terminal
  as it is read.
/REVISION_LEVEL

	/REVISION_LEVEL=integer
	/NOREVISION_LEVEL	(default)

  Specifies the IFF input revision level to be used for reading the file.

  The default is revision level -1, which causes all IFF entries to be
  displayed exactly as they are. Revision level 0 may be used to cause
  any CB entries to be displayed as ST or ZS, while revision level 1 may
  be used to cause any ST or ZS entries to be displayed as CB.
/STATUS

	/STATUS		(default)
	/NOSTATUS

   Specifies that the program should write and maintain the status area
   at the top of the screen. This is more or less the effect that would
   be gained if the command STATUS ON could be given as soon as IPATCH
   starts up.

   This is the default state when the program is running with its output
   directed to a terminal. To suppress the status area, use /NOSTATUS.
/WRITE

	/WRITE

  Specifies that the file is to be opened for writing. The default is
  to open the file for reading only, which means that the file can be
  inspected but not edited. When /WRITE is specified, entries may be
  edited or deleted.

  Note that all edits take effect immediately - they are not buffered up 
  for execution later.
!*******************************************************************************
3 Caveats
  The things that IPATCH will not do are:

	o edit the HI entry

	o edit the MH entry

	o edit the MD entry

	o edit a broken file - use the IMEND utility first

  The dangers of using IPATCH are:

	o editing is performed in-situ, so that any edit performed
	  is permanent. Always take a copy of the IFF file before
	  editing it with IPATCH.

	o it is possible to move to a random position in the IFF file,
	  using the FIND command. Editing at such a random position can
	  then scramble the entries that enclose the position.

	o if an editing session has been journalled to a file, great
	  care should be taken when replaying it, as IPATCH will almost
	  always continue after a problem.
!*******************************************************************************
3 Wildcards
  The wildcard character, *, may be used as a placeholder when searching
  and when editing in line mode. It allows the specification of a  value
  when earlier values are not required. For instance, to search for an AC
  with a particular text, give the command 

	IPATCH> AC * * "Text that is wanted by the user"

  This says that the AC type and code may take any value, and that it
  is only the text that is important.

  Similarly, editing the AC when it is found could use wildcards - for
  instance

	IPATCH> / * * "Text that was wanted"

  edits the text, ignoring the AC type and code.
!*******************************************************************************
3 Comments
  The ! character (exclamation mark) introduces a comment - anything
  after the comment character is not to be obeyed by the program.
  The comment character may occur at the start of a line, or after
  a valid command.

  If journalling is in progress (due to the /JOURNAL switch) then
  comments are journalled like any other input.
!*******************************************************************************
3 Abbreviations
  Several commands have a single letter abbreviation, which is recognised
  even if it would normally be ambiguous.
  These abbreviations are:

		E	Explain
		F	Find
		H	Help
		L	List
		M	Mark
		N	Next
		P	Previous
		R	Return
		T	Type
!*******************************************************************************
3 Searching
  It is possible to ask IPATCH to find the next occurrence of a
  particular entry, possibly specifying values for the contents of
  that entry.

  IPATCH will move forwards through the IFF file until it either finds
  an entry which satisfies the search request, or reaches the end of
  file. If it finds an entry, then it makes that entry current. If it
  reaches end of file, it gives a warning message and does not move the
  current position - ie the entry that was current before the search is
  still current.
  
  The basic search request is simply the name of the entry - for instance
  
	IPATCH> AC

  will look for the next AC entry, and

	IPATCH> FS 245

  will look for the next FS entry, with feature code 245. Note that this
  search request is equivalent to the (unnecessarily) wildcarded request

	IPATCH> FS 245 * * *

  Finally, the search request

	IPATCH> NF * 701

  will search forwards for an NF entry with internal sequence number 701,
  and any feature serial number.
!*******************************************************************************
!*******************************************************************************
!*******************************************************************************
3 Asterisk
	*

  The * command moves the current position back to the start
  of the IFF file, before the first entry.

  This command is the only command which may be followed by another command
  on the same line. This second command will be obeyed after moving to the
  start of the file - for instance *NEXT would move to the first entry in
  the file. Note that it is not necessary to separate the * and the
  succeeding command with spaces. 
!*******************************************************************************
3 Question_mark
	?

  The ? command prints the current entry out again, in the same format
  as produced by NEXT. It does not change the current entry.
!*******************************************************************************
3 Slash
	/ 
	/ values
	/ command value

  The / command introduces edit mode.

  There are three forms of edit mode:

	o Prompt mode, where the program prompts for values

	o Line mode, where the new values are presented on the
	  command line in the appropriate order

	o Command mode, where the field to be edited is identified
	  by a command followed by the new value

  Note that it is only possible to edit an entry when the IFF file has
  been opened /WRITE.

  For more details on editing, see the HELP for the relevant entry.
4 Prompt_mode
	/

   If the / command is given on a line by itself, then prompt mode
   is entered. A prompt is given for each field of the current
   entry, and a new value may be given as reply. A reply of <CR>
   is taken to mean that the original value should be used.
   <CTRL/Z> is treated as <CR> 
4 Line_mode
	/ values

  If the / command is immediately followed by appropriate values
  on the command line, then those values will be used to replace
  the fields of the current entry, in the relevant order. The
  wildcard character (*) may be used as a position holder for a
  field which is not to be changed. 
4 Command_mode
	/ command value

  Almost all entries may be edited in command mode. For each such
  entry, a series of command mnemonics are supplied to allow
  individual fields (or parts of fields) to be altered. For
  instance, the FS entry edit command /FC 5 sets the feature code
  to 5. 

  See the documentation for each IFF entry for a definition of the edit
  commands available.
!*******************************************************************************
!*******************************************************************************
!*******************************************************************************
3 DELETE
	DELETE

  The DELETE command deletes the current entry, replacing it by a void
  (VO) entry of the appropriate size. This command does not do anything
  if the file is not opened for write.

  Note that if there is a current mark (see the MARK command), the DELETE
  command will have removed it.
!*******************************************************************************
3 DELETE_MARK
	DELETE MARK

  The DELETE MARK command deletes all entries from (and including) the
  marked entry to the previous entry. The deleted entries are replaced
  by a void (VO) entry of the appropriate size. The current entry is not
  deleted.

  The marked entry (at which deletion starts) is indicated with the MARK
  command. Note that after MARK DELETE, there is no longer any mark on the
  (now voided) entry.
!*******************************************************************************
3 DISPLAY

  Determines whether the NEXT command prints out intermediate entries.
4 OFF
	DISPLAY OFF

  After this command, NEXT will only print out the destination entry.
  Thus the command NEXT 5 would not print out the intermediate entries
  (entries 1 to 4), but only the 5th entry, which becomes current.

  This is the default state.
4 ON
	DISPLAY ON

  After this command, NEXT will print out all entries that it passes
  over. Thus the command NEXT 5 would print out the intermediate entries
  (entries 1 to 4), as well as the 5th entry, which becomes current. 
!*******************************************************************************
3 EOF
	EOF

  The EOF command moves the current position to the end of the IFF file,
  after the last entry. Note that the first attempt to PREVIOUS from the
  end of file will cause IPATCH to scan up to the end, which can take a
  while for a large file. 
!*******************************************************************************
3 EXIT
	EXIT

  The EXIT command causes IPATCH to exit. Note that any editing performed
  by IPATCH was done at the time it was requested, not at the time of EXIT.
  
  Note that <CTRL/Z> (pressing the Ctrl and Z keys together) may also be
  used to exit the program.
!*******************************************************************************
3 EXPLAIN
	E
	EXPLAIN

  The EXPLAIN command causes IPATCH to explain the meaning of the current
  entry. The fields of the entry will be named, and any bit-set fields will
  be explained.
!*******************************************************************************
3 FIND
	F    hex-address
	FIND hex-address

  The FIND command changes the current position to the given hexadecimal
  address in the IFF file, and takes in hand any entry there. 

  If the program has scanned past that address (for instance by using
  NEXT to move past it), then IPATCH will report if it does not believe
  that the entry that you have positioned to is 'real' - that is, reachable
  by a sequence of NEXT commands from the start of file.

  The FIND command is mainly intended to allow inspection of an IFF file
  after a corrupted area, which may stop the NEXT command from working
  over that area. It can also be useful for finding a problem reported by
  a utility program, when the error message contained an IFF file address.

  You should realise, however, that using a series of NEXT entries from
  a random position in the file can sometimes provide a superficially
  sensible set of entries, even though they are only due to the accidental
  bit patterns caused by the real entries in that area.
!*******************************************************************************
3 FRT
	FRT file-spec

  Specifies an FRT file to be read in, possibly as a replacement for one  
  specified on the IPATCH command line.  Any part of the file name that is
  not specified will be completed from the default of "LSL$FRT:.FRT". 
!*******************************************************************************
3 HELP
	H    subject
	HELP subject

  The HELP command looks the rest of the line up in the IPATCH part of
  the IMP HELP library. The effect is as if the DCL command

                $ HELP IMP IPATCH subject

  had been given. The IPATCH part of the IMP HELP library duplicates
  much of the information in the IPATCH reference manual.
!*******************************************************************************
3 LINE
	LINE

  The LINE command performs a search for the next FS entry with the
  text and symbol bits both unset in the third word. See the FS entry
  documentation for further details. 
!*******************************************************************************
3 LIST
	L    [from [to]]
	LIST [from [to]]

  The LIST command types the specified points from the current ST or
  ZS entry.

  If no parameters are specified, then all of the points will be listed.
  If only one parameter is specified, then all the points starting with
  the from'th will be listed. If both parameters are specified, then the
  from'th to to'th points will be listed.
!*******************************************************************************
3 MARK
	M
	MARK

  The MARK command is used to mark the current entry.

  The RETURN command can then be used at any time to reposition to the
  marked entry, and the DELETE MARK command can be used to delete from it.

  The DELETE and DELETE MARK commands both remove the mark from the marked
  entry.
!*******************************************************************************
3 NEXT
	N    [count]
	NEXT [count]
	NEXT *

  The NEXT command is used to move to the next entry in the IFF file,
  and make it current. If an argument is given, then the effect is as
  of repeating the NEXT command that number of times. If NEXT * is used,
  then the effect is as of repeating the NEXT command until the end of
  file is reached (and made current).

  If the DISPLAY ON command has been given, then the intermediate entries
  will be displayed. Otherwise only the final entry (the one which is made
  current) will be displayed.
!*******************************************************************************
3 PREVIOUS
	P        [count]
	PREVIOUS [count]

  The PREVIOUS command is used to move to the previous entry in the IFF
  file, and make it current. If an argument is given, then the effect is
  as of repeating the PREVIOUS command that number of times, although
  without displaying the intermediate entries.
!*******************************************************************************
3 RETURN
	R
	RETURN

  The RETURN command makes the marked entry the current entry again.

  The MARK command is used to mark an entry.
!*******************************************************************************
3 REVISION_LEVEL
	REVISION_LEVEL integer

  Specifies the IFF input revision level to be used for reading the file.

  The default is revision level -1, which causes all IFF entries to be
  displayed exactly as they are. Revision level 0 may be used to cause
  any CB entries to be displayed as ST or ZS, while revision level 1 may
  be used to cause any ST or ZS entries to be displayed as CB.
!*******************************************************************************
3 STATUS
	STATUS

  The STATUS command prints a summary of the current file status. This
  is the same information as would be output in the status area if the
  STATUS ON command had been given.
4 OFF
	STATUS OFF

  The STATUS OFF command switches off the status area at the top of
  the screen, and clears the screen. The default state is without a
  status area.
4 ON
	STATUS ON

  The STATUS ON command causes IPATCH to write and maintain a status
  area at the top of the screen.

  The status area is only supported on ANSI terminals (ie VT100 and
  VT200 series).
!*******************************************************************************
3 SYMBOL
	SYMBOL

  The SYMBOL command performs a search for the next FS entry with the
  symbol bit set and the text bit unset in the third word. See the FS
  entry documentation for further details. 
!*******************************************************************************
3 TEXT
	TEXT

  The TEXT command performs a search for the next FS entry with the
  text bit set and the symbol bit unset in the third word. See the FS
  entry documentation for further details. 
!*******************************************************************************
3 TO

  Conversion commands, for integers or angles
4 DECIMAL
	TO DECIMAL hex-value

  The TO DECIMAL command translates the given integer value from
  hexadecimal to decimal, and prints it out.
4 DEGREES
	TO DEGREES radians

  The TO DEGREES command translates the given angle from radians to
  degrees, and prints it out.
4 HEXADECIMAL
	TO HEXADECIMAL integer

  The TO HEXADECIMAL command translates the given integer value from
  decimal to hexadecimal, and prints it out.
4 RADIANS
	TO RADIANS degrees

  The TO RADIANS command translates the given angle from degrees to
  radians, and prints it out.
!*******************************************************************************
3 TYPE
	T    [count]
	TYPE [count]
	TYPE *

  The TYPE command types out the contents of an entry. If no argument
  is given, then the effect is as of TYPE 0, and the current entry is
  typed out. If an argument greater than zero is given, then each of
  the next count entries (but not the curent entry) is typed out, and
  the last one is left current. If TYPE * is used, then the effect is
  as of specifying an argument great enough to TYPE to the end of file,
  which is left current. Note that the latter form does not type out
  the original current entry.

  The typed information is as follows:

	o RA,HI - as for EXAMINE
	o MH,MD - the entry in hexadecimal words
	o CC,CP - as for EXAMINE
	o ST,ZS,CB - as for LIST of the whole entry
	o all other entries are as for NEXT

!*******************************************************************************
3 Display_of_numbers
  The type of a numeric value is indicated by the way in which it is
  displayed. Thus an integer will be displayed in the minimum width
  possible, a hexadecimal number will always be 2, 4 or 8 digits, padded
  on the left with zeroes, and a real number will have a decimal point
  or be in E format.
!*******************************************************************************
!*******************************************************************************
!*******************************************************************************
3 AC
  AC - Ancillary code entry

	address: AC    name (type) = value  ["text"]

  AC entries are used to hold miscellaneous information. They are
  composed of a word (integer*2) type, a longword (integer*4, real,
  date, time, or character) value and an optional text. 

  The type of information held in an AC is determined by the AC type.
  Names and data types are associated with the numerical AC type by
  means of an FRT file (though some default types are always present).
  For a list of currently default AC types, and the method for adding
  user defined types via and FRT file, see the IFF and FRT User guides. 

  AC types may take values in the range 0-32767. Negative ACs are not
  allowed in normal use of IFF files, although IPATCH does not enforce
  this. The name of an AC (if defined in the FRT file) may be used in
  place of the numerical AC type. If the type is not present in the FRT
  file, then the name is displayed as ?, and the datatype is assumed to
  be integer. 

  AC values are printed in the format defined by the FRT file. A value
  may be 'absent'. The absent value is printed as ? (or "" for a text
  value). Values should be entered in the same format as that in which
  they are printed (including the absent value). 

  AC texts may be up to 255 characters in length. However, note that
  IPATCH itself can never change the length of a text. 
4 Searching
	AC  [values required]

  If the search is to be qualified by the contents of the AC, then the
  relevant values may be specified. Any values not required may be
  wildcarded if necessary. The AC type may be specified either as an
  integer, or by using the associated name. 

  If the AC type is wildcarded, and the AC value is specified, then
  IPATCH has to decide the data type of the desired AC. Only real or
  integer values are allowed, and if a real is intended, then it must be
  unambiguous - it should contain a decimal point or be in E notation.
  For instance, AC * 100 will search for an integer value, but AC *
  100.0 will search for a real. If a date, time, or character value is
  required, then the AC type may not be wildcarded. 

  If a specific text is being searched for, IPATCH will stop at the
  first AC entry which contains the requested text as a sub-string. Note
  that the case of the letters must match exactly. For instance, AC * *
  "UP & down" would match the AC 

     AC  ? (1234) = 27  "This text goes UP & down"
4 Editing
  The AC type, value and text (if present) may all be changed
  independently or together. If the AC type is changed such that the
  data-type of the value (integer, real, date, time, character) should
  also change, but a new value is not requested, then in the case of
  conversion between integer and real, IPATCH will convert the value. In
  other cases, IPATCH leaves the value unchanged (i.e. keeps the same
  bit pattern), but checks whether the value is in the valid range for
  the new AC type. If not the value is changed to 'absent'.

  Since IPATCH cannot add new data to the file, it is not possible to
  add text data to an AC that does not already contain it. 

  If a new text is specified, then if it is too long IPATCH will
  truncate it before using it, and if it is too short IPATCH will pad it
  to the right with spaces.
5 Prompt_mode
  The following prompts will be made:

	AC type:
	AC value (<data-type>):
	AC text:

  where <data-type> is either "integer", "real", "date", "time", or
  "character" depending on the AC type.

  If a text is specified, it should not be enclosed in quotation
  marks. Note that this means that it is not possible to define a text
  of all spaces in prompt mode, as the 'trailing' spaces on a response
  are ignored. Use line mode or command mode for this purpose.

  A reply of <CR> will leave the relevant value unaltered.
5 Line_mode
  The / may also be followed immediately by the new values to be
  inserted into the AC. Wildcards may be used as placeholders - for
  instance 

	IPATCH> / 2

  will change the AC type, and

	IPATCH> / * 80.0 "This is a new text"

  changes the value and text field.
5 Command_mode
/TYPE

	/ TYPE name or integer

  Sets the AC type.
/VALUE

	/ VALUE value

  Sets the AC value. The value must be of a datatype appropriate to 
  the AC type.
/TEXT

	/ TEXT "text"

  Changes the AC text. It is not possible to insert a text longer than
  the text already present. The text inserted will be padded with
  spaces on the right if necessary. 
!******************************************************************************
3 CB
  CB - Coordinate Block entry

	address: CB  nrow  flags  gtype  ncol  natt

  The CB entry contains the point data defining the feature. There may
  be more than one CB entry in a feature. The CB entry supercedes the ST
  and ZS entries. In addition to X and Y coordinates, it may contain
  other attributes (ncol in total) on a per-point basis, and also
  attributes (natt of them) considered fixed for the entire CB.
  Attributes may contain a value indicating 'absent' (equivalent to not
  present at all) and this is represented by a question mark '?', or for
  a character value "". 

	o Each CB should contain no more than 200 points, so a new CB
	  with the flags set to 1 (ie keep pen down when drawing to
	  the start of this new CB) will be started for the remaining
	  points. 

	o If an invisible line is to be coded in the feature, then
	  this is represented by starting a new CB with the flags set
	  to 0 (ie keep pen up when moving to the start of this new CB). 

  Note that the pen is always considered to be up for the first CB
  in a feature - that is the pen is always kept up to move to the start of
  a new feature.
4 Searching
	CB  [values required]

  If the search is to be qualified by the contents of the CB, then the
  relevant values may be specified (in the order in which they are 
  displayed). Any values not required may be wildcarded if necessary.

4 Editing
5 Command_mode
/ATTRIBUTE

	/ ATTRIBUTE name or code

  Change the fixed attribute with the specified name or attribute
  code. IPATCH will prompt for a new name/code and value. The same
  comments as for AC entries apply if the datatype is changed but a
  new value is not specified. 
/CHANGE

	/ CHANGE from to

  Change the specified points. If only one number is given, then that
  one point will be changed. IPATCH will prompt for the new values. If
  there is only one point, then no argument is necessary. 
/DELETE

	/ DELETE from to

  Deletes the specified points (rows). If only one number is given,
  then that one point will be deleted. If there is only one point,
  then no argument is needed. 
/FLAGS

	/ FLAGS hex-value

  Specifies a new value for the flags field of the CB. Currently only
  the bottom bit (bit 0) is significant, and is used to indicate pen
  up or down. 
/GTYPE

	/ GTYPE value

  Specifies a new value for the gtype field of the CB. This should
  be in the range 1-12 (see FRT User's Guide).
!*******************************************************************************
3 CC
  CC - Cubic coefficients entry

	address: CC

  The CC entry occurs once per section, and is a matrix of size (10,2)
  real numbers. It defines a transformation between two coordinate systems
  to be used by a post-processing program to transform all points in the file
  into the same coordinate space. This is necessary when (for instance) data
  has been digitised on a Lasertrak.

  The matrix may be	a	k
  represented as	b	l
			c	m
			d	n
			e	o
			f	p
			g	q
			h	r
			i	s
			j	t

  which represents the transformation

    X' = a + bX + cY + dXX + eXY + fYY + gXXX + hXXY + iXYY + jYYY
    Y' = k + lX + mY + nXX + oXY + pYY + qXXX + rXXY + sXYY + tYYY

  The unit matrix specifies a unit transformation - ie not transformation
  is necessary. The unit matrix has all terms 0.0, except for those at (2,1)
  and (3,2) which are 1.0. In the convention adopted by IPATCH these are the
  B and M terms. 
4 Searching
	CC

  It is not possible to modify the search by the CC contents.
4 Editing
5 Command_mode
/Letter

	/ letter  value

  The letter command specifies one of the 20 matrix values, from A to T.
  The value then specifies a real number to replace that position in the
  CC matrix.
/UNIT

	/ UNIT

  The UNIT command resets the CC matrix to the unit transformation. All
  entries are set to 0.0, except B and M which are set to 1.0. The unit
  transformation if the norm for files which have been digitised by
  non-distorting hardware (for instance a digitising table via DIGSYS).
!*******************************************************************************
3 CH
  CH - Literal character entry

	address: CH    "text"

  This entry is obsolete, and should not be used in new IFF files.
  Its only current use is for storing the data in Laseraid patch files.

  Note that CH entries must be outside features, and may also be outside
  layers (Laseraid patch files do not contain layers or features).
4 Searching
	CH    ["text"]

  If a specific text is being searched for, IPATCH will stop at the first
  CH entry which contains the requested text as a sub-string. Note that the
  case of the letters must match exactly.
4 Editing
  If a new text is specified, then if it is too long IPATCH will truncate
  it before using it, and if it is too short IPATCH will pad it to the right
  with spaces. 
5 Prompt_mode
  The following prompt will be made:

	Text:

  If a text is specified, it should not be enclosed in quotation marks.
  Note that this means that it is not possible to define a text of all
  spaces in prompt mode, as the 'trailing' spaces on a response are
  ignored. Use line mode or command mode for this purpose.

  A reply of <CR> will leave the text unaltered.
5 Line_mode
  The / may also be followed immediately by the new text to be inserted
  into the CH - for instance

	IPATCH> / "This is a new text"
5 Command_mode
/TEXT

	/ TEXT "text"

  Replaces the text for the entry with the specified string. If the string
  is longer than that already in the file, it will be truncated. If the
  string is shorter than that already in the file, it will be padded with
  spaces on the right.
!*******************************************************************************
3 CP
  CP - Control points entry

	address: CP

  The CP entry occurs once for each section. It defines the control points
  for the section, in both original (input) and destination (output) space.
4 Searching
	CP

  It is not possible to modify the search by the CP contents.
4 Editing
5 Command_mode
/BOTH

	/ BOTH

  The user is prompted for replacement values for each of the original
  control points (the 'left hand side' control points), and then for
  replacement values for the target control points (the 'right hand side'
  control points). A response of <CR> to a prompt tells the program to
  retain the original value.
/REPEAT

	/ REPEAT

  If the previous CP edit operation was /ROTATE or /TARGET then it will
  be repeated on the current CP entry. Care should be taken not to
  repeat the /ROTATE command unintentionally on the same CP entry.
/ROTATE

	/ ROTATE corner

  The control points (both original and target) are rotated so that the
  named corner is at the north-west position. The corners (in standard
  Laser-Scan order) are NW,SW,SE,NE.
/TARGET

	/ TARGET

  The user is prompted for replacement values for each of the target
  control points (the 'right hand side' control points).
  A response of <CR> to a prompt tells the program to retain the
  original value.
!*******************************************************************************
3 CS
  CS - Character size entry

	 address: CS    height    spacing

  This entry is obsolete, and should not be used in new IFF files.
4 Searching
	 CS    [values required]

  If the search is to be qualified by the contents of the CS, then
  the relevant values may be specified. Any values not required may
  be wildcarded if necessary.
4 Editing
5 Prompt_mode
  The following prompts will be made:

	Height:
	Spacing

  Note that a reply of <CR> will leave the relevant value unaltered.
5 Line_mode
  The / may also be followed immediately by the new values to be inserted
  into the CS. Wildcards may be used as placeholders - thus

	 IPATCH> / 2  4

  will change both the height and the spacing, but

	 IPATCH> / * 8

  changes only the spacing.
!*******************************************************************************
3 EF
  EF - End of feature entry

	 address: EF             

  The EF entry flags the end of a feature, and balances the NF entry
  at the start of the feature.
4 Searching
	 EF

  The EF entry does not have any contents, so has no search modifiers.
4 Editing
  It is not possible to edit the EF entry.
!*******************************************************************************
3 EJ
  EJ - End of job (data) entry

	 address: EJ

  The EJ entry should always be the last entry in the IFF file. It
  signifies the end of data, and is used to provide a tidy end point
  (rather than relying on detecting the end of the file by trying to
   fall off it).
4 Searching
	 EJ

  The EJ entry does not have any contents, so has no search modifiers.
4 Editing
  It is not possible to edit the EJ entry.
!*******************************************************************************
3 EM
  EM - End of map entry

	 address: EM

  The EM entry is the last entry of a map or sheet, and flags its end.
  It should be the last entry before the EJ entry.

  Historically, IFF files were permitted to contain several maps, and
  the EM entry was then required to mark the end of each.
4 Searching
	 EM

  The EM entry does not have any contents, so has no search modifiers.
4 Editing
  It is not possible to edit the EM entry.
!*******************************************************************************
3 EO
  EO - End of layer (overlay) entry

	 address: EO

  The EO entry flags the end of a layer, and balances the matching NO
  entry at the start of the layer. That NO entry should contain a pointer
  field which holds the address of this EO - this allows fast chaining
  through a file when particular layers are being ignored.

  Note that some entries are legal between an EO and an NO - particularly
  the new section entries (NS,CC,CP) and also the (obsolete) CH entry.
4 Searching
	 EO

  The EO entry does not have any contents, so has no search modifiers.
4 Editing
  It is not possible to edit the EO entry.
!*******************************************************************************
3 FS
  FS - Feature status entry

	 address: FS    fc    status    pc/text    user-word

  The FS entry contains data which describes the feature containing it.
  It should be the first entry after the NF entry.

  The FS entry includes the feature code in word 1, which is the primary
  descriptive code for a feature. The second word contains flag data used
  by Laseraid and its post-processing programs. The third word states whether
  this feature is text, symbol or line, and also holds either a process code
  or a description of the type of text. The fourth word is reserved for use
  by users, although beware that not all processing programs will preserve
  this word from input to output. 
4 Searching
	 FS    [values required]

  If the search is to be qualified by the contents of the FS, then the
  relevant values may be specified. Any values not required may be
  wildcarded if necessary.

  See also the TEXT, SYMBOL and LINE commands, which can be used to search
  for an FS entry with the relevant bit set in word 3.
4 Editing
5 Prompt_mode
  The following prompts will be made:

	FC:
	status flags        (hex):
	text/symbol/PC word (hex):
	user dependent word (hex):

  A reply of <CR> will leave the relevant value unaltered.
5 Line_mode
  The / may also be followed immediately by the new values to be inserted
  into the FS. Wildcards may be used as placeholders - for instance

	 IPATCH> / 2

  will change the feature code, and

	 IPATCH> / * * 8012 1234

  changes the text/symbol/PC word and the user specific word.
5 Command_mode
/FC

	/ FC integer

  Sets the feature code to an integer in the range 0-32767
/STATUS

	/ STATUS hex-value

  Sets the whole of word 2 to the given value.
5 Setting_status_bits
  The individual bits of the status word may be set to 0 or 1 using the
  following commands. Consult the LAPROCESS documentation for the meaning
  of the bits.

	/ CLOSED   bit
	/ NOTEDGE  bit
	/ REVERSE  bit
	/ TWOPART  bit
	/ PAINTOUT bit
	/ SQUARE   bit
	/ INVERSE  bit
	/ SUPPRESS bit
/TEXT

	/ TEXT

  Sets the text bit, clears the symbol bit - the feature is thus flagged
  as a text.
/SYMBOL

	/ SYMBOL

  Sets the symbol bit, clears the text bit - the feature is thus flagged
  as a symbol.
/LINE

	/ LINE

  Clears both the text and symbol bits - the feature is thus flagged
  as a linear feature.
/POSITION

	/ POSITION integer

  Sets the text position to a value in the range 0-8. The number encodes
  the point at which the text's position was digitised, relative to a
  rectangle enclosing the text. This command is only allowed if the text
  bit is set.
/TYPE_STYLE

	/ TYPE_STYLE integer

  Sets the type style to a value in the range 0-3. This command is only
  allowed if the text bit is set.
/CATEGORY

	/ CATEGORY integer

  Sets the text's name category to a value in the range 0-63. This command
  is only allowed if the text bit is set.
/PC

	/ PC integer

  Sets the process code. This command is only allowed if the text bit
  is not set.
/WORD

	/ WORD word hex-value

  Sets the the specified word to the given hexadecimal value.
!*******************************************************************************
3 HI
  HI - History entry

	 address: HI

  The HI record contains a history of which programs have been run on
  the current data, when they were run, and whether they succeeded. It
  thus provides a history of how the current file was produced, which
  can be very useful in trying to track down problems.

  The HI entry occurs once at the beginning of the file, after the RA
  entry.
4 Searching
	 HI

  It is not possible to modify the search by the HI contents.
4 Editing
  It is not possible to edit the HI entry. The entry is intended as a
  record of a file's lifetime, so editing it to change the record of that
  lifetime is not allowed.
!*******************************************************************************
3 JB
  JB - Junction block entry

	 address: JB

  The JB entry defines a series of junctions.

  Within each sector of the IFF file, a chain of JB entries is maintained
  to hold the details of all junctions within that sector.

  Each JB entry contains the number of the sector that it is in, a pointer
  to the next JB entry in this chain, and details of each junction.
  For each junction, the JB contains

	o the number of arms at that junction
	o the X,Y position of the junction
	o the address of each ST corresponding to a junction arm
	o the number of the vertex (which is always 1 or the index
	  of the last vertex in that ST) corresponding to the junction
	  in each ST
4 Searching
	 JB

  It is not currently possible to modify the search by the JB contents.
4 Editing
  Editing of junction entries is not currently supported.
!*******************************************************************************
3 JP
  JP - Junction pointer entry

	 address: JP

  The JP entry is a pointer back to a JB entry. A JP entry is inserted
  before or after (as appropriate) each ST that starts or ends at a
  junction.

  The point in the ST corresponding to the junction is either the first
  (in which case the JP occurs before the ST) or the last (the JP occurs
  after the ST).

  Each JP entry contains the address of the relevant JB entry, and the
  sequence number of the junction within that JB.
4 Searching
	 JP

  It is not currently possible to modify the search by the JB contents.
4 Editing
  Editing of junction entries is not currently supported.
!*******************************************************************************
3 MD
  MD - Map descriptor entry

	 address: MD    version    size

  The MD entry contains data describing the origin, projection and
  coordinate system of the IFF file. It occurs once at the beginning of
  the file, after the MH entry.

  An unset map descriptor has its first word set to -1 (or FFFF in hex).
4 Searching
	 MD

  It is not possible to modify the search by the MD contents.
4 Editing
  It is not possible to edit the MD entry using IPATCH. The map
  descriptor describes the current origin, projection and units of the
  IFF file, and a change to the map descriptor must thus be accompanied
  by the appropriate changes to all point data in the file. The IMP
  utility ITRANS is provided to perform such transformations, and it will
  modify the map descriptor correctly. 
!*******************************************************************************
3 MH
  MH - Map header entry

	 address: MH    customer    size

  The MH entry contains customer specific data about the IFF file. The
  customer number determines which format of data is present.
4 Searching
	 MH

  It is not possible to modify the search by the MH contents.
4 Editing
  IPATCH supports editing of the map header's customer number. For editing
  the actual value within the map header itself, use the relevant customer
  specific map header editing program - that is:

	    0   map header is unset
	    1   MCE specific map header
	    2   OS specific map header

  The map header occurs once in the file, after the HI entry. Note that
  historically IFF files could contain more than one map, and such maps
  each started with a separate map header, and ended with an EM entry.
5 Command_mode
/CUSTOMER

	/ CUSTOMER integer

  Changes the customer number in the descriptor of the map header to
  be the given integer. Note that this will change the interpretation of
  any data in the map header by utility programs.
!*******************************************************************************
3 NF
  NF - New feature entry

	 address: NF    fsn    isn

  The NF entry starts a new feature. It contains two identifying numbers,
  both in the range 0-65535.

  The feature serial number (FSN) is generally used as the 'name' of
  the feature. There are three main conventions about when or whether
  FSNs are unique: 

   o FSNs unique within the IFF file. This mechanism has traditionally
     been used by OS, and may be used by other customers as well.

   o FSNs unique within a particular layer. Thus a feature could be
     identified by its layer and FSN. This mechanism has traditionally
     been used by MCE.

   o FSNs not unique. The main example of this now is in TRI and SRI
     files, where single symbols may be made up of multiple features,
     all with the same FSN. In these cases the FSN is the ASCII code
     of the text, or the identifying number of the symbol.

  The internal sequence number (ISN) is unique within the IFF file, and
  can be used as a single unique identifier for a feature. It may, but need
  not, be the same as the FSN. The ISN is generally assigned starting at 1
  and incremented as a file is digitised.
4 FSN_zero
  Note that historically FSN 0 was considered special by many programs.
  It was used to flag an empty feature used as a place-holder in the IFF
  file, generally to hold TCs which applied to the entire layer. Thus it
  was possible to come across multiple FSN 0s even when FSNs are notionally
  unique within a file. In modern IFF files, the trailing TC can stand by
  itself, without the NF 0.
4 Searching
	 NF    [values required]

  If the search is to be qualified by the contents of the NF, then the
  relevant values may be specified. Any values not required may be
  wildcarded if necessary.
4 Editing
5 Prompt_mode
  The following prompts will be made:

	FSN:
	ISN:

  A reply of <CR> will leave the relevant value unaltered.
5 Line_mode
  The / may also be followed immediately by the new values to be inserted
  into the NF. A wildcard may be used as a placeholder - for instance

	 IPATCH> / 2  2

  will change the feature serial number and the internal sequence number,
  but

	 IPATCH> / * 80

  just changes the internal sequence number
5 Command_mode
/FSN

	/ FSN integer

  Sets the feature serial number. The value may be in the range 0-65535.
/ISN

	/ ISN integer

  Sets the internal sequence number. The value may be in the range 0-65535.
  Note that many programs use the internal sequence number as a unique
  identifier for features, and therefore care should be taken when editing
  this field.
!*******************************************************************************
3 NO
  NO - New layer (overlay) entry

	 address: NO    layer    status    EO-address

  The NO entry starts a layer. It contains the number identifying this
  layer, and a status word. It may also contain the address of the
  corresponding EO entry.

  IFF files are generally divided up into multiple layers, where data
  of a common sort or source is grouped in the same layer. Note that 
  a layer may be split into several parts, identified by all having the
  same layer number.

  Layer 0 is conventionally reserved for 'non-essential' data - for
  instance a grid, symbols at control points, or MCE DFAD accuracy polygons.
  The assumption is that the IFF file would not be significantly degraded in
  terms of information content by throwing layer 0 away. If layer 0 is
  present, some programs expect it to be the first layer in the file.

  Historically, layers 11 and 32 were also used for the same sort of
  purpose as layer 0.

  The status flag is not currently used, and should be set to zero.

  If the EO pointer field is present, it should contain the hexadecimal
  address of the EO entry which matches this NO. This is used by programs
  which must ignore layers to 'jump' from the NO to the EO. Thus take great
  care when editing the EO pointer field, as an incorrect value could cause
  a processing program to abort.
4 Searching
	 NO    [values required]

  If the search is to be qualified by the contents of the NO, then the
  relevant values may be specified. Any values not required may be
  wildcarded if necessary.
4 Editing
5 Prompt_mode
  The following prompts will be made:

	Layer:
	Status:

  and if the NO entry contains an EO address field, then

	EO pointer:

  A reply of <CR> will leave the relevant value unaltered.
5 Line_mode
  The / may also be followed immediately by the new values to be inserted
  into the NO. Wildcards may be used as placeholders - for instance

	 IPATCH> / 2

  will change the layer, and

	 IPATCH> / 5 * 8013

  changes the layer and the EO pointer field.
5 Command_mode
/LAYER

	/ LAYER integer

  Sets the layer (overlay) to a new value. The number is in the range
  0-32767.
/STATUS

	/ STATUS hex-value

  Sets the second word of the NO entry. Note that this entry is not
  currently used or transferred by Laser-Scan programs.
  The value is conventionally zero.
/POINTER

	/ POINTER hex-address

  Sets the pointer to the next EO entry, which terminates this layer.
  This field can only be changed if the NO entry contained it already
  - older IFF files contain NO entries without the EO pointer field. 
!*******************************************************************************
3 NS
  NS - New section entry

	 address: NS    "text"

  The NS entry is used to flag the start of a new digitising session.
  The text written in it conventionally contains the initials of the
  digitising operator, the program being used and the date and time at
  which digitising was started.

  The entry is necessary because IFF files are often digitised in several
  sessions. The NS entry will be followed by a CC and a CP entry, defining
  the transformations and control points applying from now on.
  Post-processing programs used to transform all data into the same
  coordinate system will normally also reduce the whole IFF file down to
  one section.

  The NS entry will follow either an MD entry (for the first section)
  or an EO entry (for later sections).
4 Searching
	 NS    ["text"]

  If a specific text is being searched for, IPATCH will stop at the first
  NS entry which contains the requested text as a sub-string. Note that the
  case of the letters must match exactly. For instance, NS  "UP & down"
  would match the NS

	NS   "This text goes UP & down"
4 Editing
  If a new text is specified, then if it is too long IPATCH will truncate
  it before using it, and if it is too short IPATCH will pad it to the right
  with spaces.
4 Prompt_mode
  The following prompt will be made:

	Text:

  If a text is specified, it should not be enclosed in quotation
  marks. Note that this means that it is not possible to define a text of
  all spaces in prompt mode, as the 'trailing' spaces on a response are
  ignored. Use line mode or command mode for this purpose.

  A reply of <CR> will leave the text unaltered.
5 Line_mode
  The / may also be followed immediately by the new text to be inserted
  into the NS - for instance

	 IPATCH> / "This is a new text"
5 Command_mode
/TEXT

	/ TEXT "text"

  Replaces the text for the entry with the specified string. If the
  string is longer than that already in the file, it will be truncated.
  If the string is shorter than that already in the file, it will be padded
  with spaces on the right.
!*******************************************************************************
3 RA
  RA - Range entry

    	 address: RA    minX    maxX    minY    maxY

  The RA entry records the maximum extent of the data in the IFF file.
  It is used by plot and display programs to work out whether to clip the
  file, and what scale it can be displayed at.

  The range entry is always the first entry in the IFF file.
4 Searching

	 RA    [values required]

  If the search is to be qualified by the contents of the RA, then the
  relevant values may be specified. Any values not required may be
  wildcarded if necessary.
4 Editing
5 Prompt_mode
  The following prompts will be made:

	Min X:
	Max X:
	Min Y:
	Max Y:

  A reply of <CR> will leave the relevant value unaltered.
5 Line_mode
  The / may also be followed immediately by the new values to be inserted
  into the RA. Wildcards may be used as placeholders - thus

	 IPATCH> / 200.0   0.0   300.0   0.0

  will change the entire RA, but

	 IPATCH> / * 80.0

  just changes the minimum X value.
5 Command_mode
/MAXX

	/ MAXX real-value

  Changes the maximum X value in the range entry to the specified real.
/MINX

	/ MINX real-value

  Changes the minimum X value in the range entry to the specified real.
/MAXY

	/ MAXY real-value

  Changes the maximum Y value in the range entry to the specified real.
/MINY

	/ MINY real-value

  Changes the minimum Y value in the range entry to the specified real.
!*******************************************************************************
3 RO
  RO - Rotation entry

	 address: RO    angle

  The RO entry defines the angle at which an oriented symbol or a text
  is to be drawn. The angle is in radians, measured counterclockwise from
  the positive horizontal axis.

  The RO entry should occur after the ST or ZS entry of a feature, and
  before any TX entry.
4 Searching
	 RO    [angle]

  If the search is to be qualified by the contents of the RO, then the
  angle may be specified. 
4 Editing
5 Prompt_mode
  The following prompt will be made:

	Angle:

  A reply of <CR> will leave the angle unaltered.
5 Line_mode
  The / may also be followed immediately by the new angle to be inserted
  into the RO - for instance

	 IPATCH> / 2.0
5 Command_mode
/ANGLE

	/ ANGLE radians

  Changes the angle stored in the RO entry to the given number of real
  radians.
!*******************************************************************************
3 SH
  SH - Sector header entry

	 address: SH

  The SH entry contains the addresses of the start of the JB chain for
  each sector in the IFF file.

  When an IFF file contains junction structure, the map is divided into
  rectangular sectors. A chain of JB entries is maintained for each
  sector, containing the junction information. The SH entry provides the
  address of the start of each of these chains.
4 Searching
	 SH

  It is not currently possible to modify the search by the SH contents.
4 Editing
  Editing of junction entries is not currently supported.
!*******************************************************************************
3 SL
  SL - Select symbol library entry

	 address: SL    symbol-library

  This entry is obsolete, and should not be used in new IFF files.
4 Searching
	 SL    [symbol-library]

  If the search is to be qualified by the contents of the SL, then the
  symbol library may be specified. 
4 Editing
5 Prompt_mode
  The following prompt will be made:

	Integer:

  A reply of <CR> will leave the value unaltered.
5 Line_mode
  The / may also be followed immediately by the new value to be inserted
  into the SL - for instance

	 IPATCH> / 2
!*******************************************************************************
3 SS
  SS - Symbol select entry

	 address: SS    symbol

  This entry is obsolete, and should not be used in new IFF files.
4 Searching
	 SS    [values required]

  If the search is to be qualified by the contents of the SS, then the
  symbol may be specified.
4 Editing
5 Prompt_mode
  The following prompt will be made:

	Integer:

  A reply of <CR> will leave the value unaltered.
5 Line_mode
  The / may also be followed immediately by the new value to be inserted
  into the SS - for instance

	 IPATCH> / 2
!*******************************************************************************
3 ST_entry
  ST - 2-dimensional point string entry

	 address: ST    npts    pen

  The ST entry contains the point data defining the feature. There may
  be more than one ST entry in a feature.

	o Each ST should contain no more than 200 points, so a new ST
	  with the pen flag set to 1 (ie keep pen down when drawing to
	  the start of this new ST) will be started for the remaining
	  points.

	o If an invisible line is to be coded in the feature, then this
	  is represented by starting a new ST with the pen flag set to 0
	  (ie keep pen up when moving to the start of this new ST).

  Note that the pen flag is always considered to be 0 for the first ST
  in a feature - that is the pen is always kept up to move to the start
  of a new feature.

  An ST is suitable for data which does not have an inherent height,
  or which is all at one height (in which case the feature will also
  have a contour height AC). For truly three-dimensional data, a ZS
  entry is more appropriate.
4 Searching
	 ST    [values required]

  If the search is to be qualified by the number of points or pen code
  of the ST, then the relevant values may be specified. Any values not
  required may be wildcarded if necessary.
4 Editing
5 Command_mode
/CHANGE

	/ CHANGE from to

  Change the specified points. If only one number is given, then that
  one point will be changed. IPATCH will prompt for the new values. If
  there is only one point, then no argument is necessary. 
/DELETE

	/ DELETE from to

  Deletes the specified points. If only one number is given, then that
  one point will be deleted. If there is only one point, then no
  argument is needed. 
/PEN_POSITION

	/ PEN_POSITION hex-value

  Specifies a new value for the pen up/down field of the ST. Note that
  IFFLIB will truncate this value to 3 bits (ie the range 0-7). 
  Currently only the bottom bit (bit 0) is significant, and is used to
  indicate pen up or down. 
!******************************************************************************
3 TC
  TC - Transmitted comment entry

	 address: TC    "text"

  A TC entry is used to label the following feature. It is used by MCE
  to hold specialised plotting instructions.

  Interpretation of a TC requires the IFF file to be regarded as a
  sequential file, since the TC applies either to the following feature,
  or to the layer as a whole (in which case it appears after the last
  feature - in old format IFF files before a special empty feature with
  FSN 0).

  The TC entry is not allowed inside a feature, but must be inside a
  layer.
4 Searching
	 TC    ["text"]

  If a specific text is being searched for, IPATCH will stop at the first
  TC entry which contains the requested text as a sub-string. Note that
  the case of the letters must match exactly. For instance,
  TC  "UP & down" would match the TC

	TC   "This text goes UP & down"
4 Editing
  If a new text is specified, then if it is too long IPATCH will
  truncate it before using it, and if it is too short IPATCH will
  pad it to the right with spaces. 
5 Prompt_mode
  The following prompt will be made:

	Text:

  If a text is specified, it should not be enclosed in quotation
  marks. Note that this means that it is not possible to define a text
  of all spaces in prompt mode, as the 'trailing' spaces on a response
  are ignored. Use line mode or command mode for this purpose.

  A reply of <CR> will leave the text unaltered.
5 Line_mode
  The / may also be followed immediately by the new text to be inserted
  into the TC - for instance

	 IPATCH> / "This is a new text"
5 Command_mode
/TEXT

	/ TEXT "text"

  Replaces the text for the entry with the specified string. If the
  string is longer than that already in the file, it will be truncated.
  If the string is shorter than that already in the file, it will be
  padded with spaces on the right.
!*******************************************************************************
3 TH
  TH - Text height / line thickness entry

	 address: TH    integer

  The TH entry is used

        o to hold the line thickness for displays which are capable
	  of displaying multiple thickness lines

        o to hold the size of text for a text feature. In this case
	  the integer is interpreted as either:

	  	o the height of the text in hundredths of a millimetre
	  	o the size of the text as a point size

  The TH entry should occur before the ST or ZS entry, and after any ACs.
4 Searching
	 TH    [height/thickness]

  If the search is to be qualified by the contents of the TH, then the
  relevant value may be specified. 
4 Editing
5 Prompt_mode
  The following prompt will be made:

	Thickness/height:

  A reply of <CR> will leave the value unaltered.
5 Line_mode
  The / may also be followed immediately by the new value to be inserted
  into the TH - for instance

	 IPATCH> / 20
5 Command_mode
/HEIGHT

	/ HEIGHT integer

  Changes the value stored in the TH entry to the given integer.
/THICKNESS

	/ THICKNESS integer

  Changes the value stored in the TH entry to the given integer.
!*******************************************************************************
3 TS
  TS - Text status entry

	 address: TS    fc    reserved    textcode    reserved

  The TS entry introduces a text component, and contains data which
  describes the text component following it.

  Text features may contain one text string, with associated location
  and descriptive data, or they may be COMPOSITE - that is, composed
  of several sub-texts or text components, which may be manipulated
  independently or as a single entity.

  Each text component starts with a TS entry, and ends with the next
  TS entry, or the final EF of the feature. The first TS entry occurs
  immediately after the FS entry, and any AC entries. Text components
  may not include FS or AC entries, but may contain any other entries
  that are legal within a normal text feature.

  Word 1 of the TS entry is the text component code (TCC), which is
  the primary descriptive code for a text component - it is effectively
  the feature code for this component of the composite text, and is
  used in the same way.

  Word 3 of the TS entry is the text word, and is identical in form to
  word 3 of a text's FS entry. Note that the top two bits (the text/symbol
  bits in an FS) should always be '10'binary, to signify text. These
  bits are referred to as redundancy bits, since they are not strictly
  necessary.

  The second and fourth words are reserved for later definition, and
  should always be zero.
4 Searching
	 TS    [values required]

  If the search is to be qualified by the contents of the TS, then the
  relevant values may be specified. Any values not required may be
  wildcarded if necessary.
4 Editing
5 Prompt_mode
  The following prompts will be made:

	TCC:
	word 2    (hex):
	text word (hex):
	word 4    (hex):

  A reply of <CR> will leave the relevant value unaltered.
5 Line_mode
  The / may also be followed immediately by the new values to be inserted
  into the TS. Wildcards may be used as placeholders - for instance

	 IPATCH> / 2

  will change the text component code, and

	 IPATCH> / * * 8012

  changes the text word.
5 Command_mode
/TCC

	/ TCC integer

  Sets the text component code to an integer in the range 0-32767
/POSITION

	/ POSITION integer

  Sets the text position to a value in the range 0-8. The number encodes
  the point at which the text's position was digitised, relative to a
  rectangle enclosing the text.
/TYPE_STYLE

	/ TYPE_STYLE integer

  Sets the type style to a value in the range 0-3.
/CATEGORY

	/ CATEGORY integer

  Sets the text's name category to a value in the range 0-63.
/WORD

	/ WORD word hex-value

  Sets the specified word to the given hexadecimal value.
!******************************************************************************
3 TX
  TX - Text entry

	 address: TX    "text"

  The TX entry holds the text for a text feature. It should be the last
  entry before the EF entry.

  A TX entry may hold up to 255 characters of text, although note that
  IPATCH cannot change the length of a text.
4 Searching
  If a specific text is being searched for, IPATCH will stop at the first
  TX entry which contains the requested text as a sub-string. Note that
  the case of the letters must match exactly. For instance, TX  "UP & down"
  would match the TX

	TX   "This text goes UP & down"
4 Editing
  If a new text is specified, then if it is too long IPATCH will
  truncate it before using it, and if it is too short IPATCH will
  pad it to the right with spaces. 
5 Prompt_mode
  The following prompt will be made:

	Text:

  If a text is specified, it should not be enclosed in quotation
  marks. Note that this means that it is not possible to define a text
  of all spaces in prompt mode, as the 'trailing' spaces on a response
  are ignored. Use line mode or command mode for this purpose.

  A reply of <CR> will leave the text unaltered.
5 Line_mode
  The / may also be followed immediately by the new text to be inserted
  into the TX - for instance

	 IPATCH> / "This is a new text"
5 Command_mode
/TEXT

	/ TEXT "text"

  Replaces the text for the entry with the specified string. If the
  string is longer than that already in the file, it will be truncated.
  If the string is shorter than that already in the file, it will be
  padded with spaces on the right.
!*******************************************************************************
3 VO
  VO - Void entry

	 address: VO    size

  The VO entry is used to replace a series of deleted IFF entries. Since
  it is not possible to 'compress' an IFF file, a deleted entry or series
  of entries is overwritten with a void area or the requisite size.
4 Searching
	 VO    [size]

  The search may optionally be qualified by the size of the VO entry
  required, as it would be reported by IPATCH.
4 Editing
  It is not possible to edit a VO entry.
!*******************************************************************************
3 XX
  XX - Invalid entry

	 address: XX    size

  IFFLIB returns the entry mnemonic XX when it has found an entry that
  it cannot identify as a valid IFF entry. This generally occurs because
  either the IFF file is corrupt in some manner, or because the FIND
  command has been used to position to an address which does not appear
  to contain an entry.
4 Searching
  It is not possible to search for an XX entry.
4 Editing
  It is not possible to edit an XX entry.
!*******************************************************************************
3 ZS
  ZS - 3-dimensional point string entry

	 address: ZS    npts    pen

  The ZS entry contains the three-dimensional point data defining the
  feature. There may be more than one ZS entry in a feature:

	o Each ZS should contain no more than 200 points, so a new ZS
	  with the pen flag set to 1 (ie keep pen down when drawing to
	  the start of this new ZS) will be started for the remaining
	  points.

	o If an invisible line is to be coded in the feature, then this
	  is represented by starting a new ZS with the pen flag set to 0
	  (ie keep pen up when moving to the start of this new ZS).

  Note that the pen flag is always considered to be 0 for the first ZS
  in a feature - that is the pen is always kept up to move to the start
  of a new feature.

  A ZS entry is used when the data to be held is inherently
  three-dimensional - for instance in digitising a river bed, where the
  river flows downhill. For data at a constant height, an ST with a contour
  height AC is more appropriate.
4 Searching
	 ZS    [values required]

  If the search is to be qualified by the number of points or pen code
  of the ZS, then the relevant values may be specified. Any values not
  required may be wildcarded if necessary.
4 Editing
5 Command_mode
/CHANGE

	/ CHANGE from to

  Change the specified points. If only one number is given, then that one
  point will be changed. IPATCH will prompt for the new values. If there
  is only one point, then no argument is necessary. 
/DELETE

	/ DELETE from to

  Deletes the specified points. If only one number is given, then that one
  point will be deleted. If there is only one point, then no argument is
  needed. 
/PEN_POSITION

	/ PEN_POSITION hex-value

  Specifies a new value for the pen up/down field of the ZS. Note that
  IFFLIB will truncate this value to 3 bits (ie the range 0-7). Currently
  only the bottom bit (bit 0) is significant, and is used to indicate pen
  up or down.
