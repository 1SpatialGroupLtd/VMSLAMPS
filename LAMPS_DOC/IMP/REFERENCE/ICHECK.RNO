.PAGE
.NO FILL
^*--------------------------------------------------------------------------------\*
^*MODULE####ICHECK\*
.INDEX ICHECK
.BLANK
^*--------------------------------------------------------------------------------\*
.NO JUSTIFY
^*REPLACES\*##DAMP#module#CHKLP
.INDEX DAMP
.INDEX DAMP> CHKLP
^*--------------------------------------------------------------------------------\*
.HL 2 ^*FUNCTION\*
.LEFT MARGIN +10
.INDEX IMP>module functions>geometry checking
.P 0;ICHECK is an IFF geometry checking utility. It scans the coordinates of an
IFF file and reports on potential errors ^*within features\*.
.INDEX LITES2
.INDEX ICHECK>and LITES2
.P 0;Options are provided to send output to terminal, text file, IFF plot file
or to a LITES2 command file. 
.INDEX LITES2
.INDEX ICHECK>and LITES2

.BLANK;.LEFT MARGIN 0;.NO FILL
^*--------------------------------------------------------------------------------\*
.HL 2 ^*FORMAT\*
.NO FILL
.LM +10
$ ICHECK file-spec

^*Command qualifiers                         Defaults\*
.INDEX ICHECK>command qualifiers

/BASE__FC=integer                           See text.
.INDEX ICHECK>command qualifiers>/BASE__FC
/BORDER                                    No border.
.INDEX ICHECK>command qualifiers>/BORDER
/[NO]CROSS                                 /CROSS
.INDEX ICHECK>command qualifiers>/CROSS
/[NO]DUPLICATES=EXACT or NINT              No duplicate point checks.
.INDEX ICHECK>command qualifiers>DUPLICATES
/FC=integer                                See text
.INDEX ICHECK>command qualifiers>FC
/FRT=file-spec                             No checks against
                                           graphical types.
.INDEX ICHECK>command qualifiers>/FRT
.INDEX FRT (Feature Representation Table)
.INDEX ICHECK>and FRT 
.INDEX FRT (Feature Representation Table)
.INDEX ICHECK>and FRT 
/IGNORE=INVISIBLE or POLYGONS              Process invisible moves.
.INDEX ICHECK>command qualifiers>IGNORE
/LAYER=integer                             See text
.INDEX ICHECK>command qualifiers>LAYER
/[NO]LITES2[=file-spec]                    No LITES2 file output.
.INDEX ICHECK>command qualifiers>/LITES2
.INDEX LITES2
.INDEX ICHECK>and LITES2
/[NO]LOG                                   /NOLOG
.INDEX ICHECK>command qualifiers>/LOG
/[NO]MARKERS=file-spec                     No marker file output.
.INDEX ICHECK>command qualifiers>/MARKERS
/[NO]NEATLINE=('keyword-options'...)       see text
.INDEX ICHECK>command qualifiers>/NEATLINE
/[NO]OUTPUT[=file-spec]                    /OUTPUT=SYS$OUTPUT:
.INDEX ICHECK>command qualifiers>/OUTPUT
/[NO]PARALLEL                              /NOPARALLEL
.INDEX ICHECK>command qualifiers>/PARALLEL
/[NO]PRINTER                               /NOPRINTER
.INDEX ICHECK>command qualifiers>/PRINTER
/[NO]TOUCH[=real]                          No touch check.
.INDEX ICHECK>command qualifiers>/TOUCH

.LM -10
.BLANK
.TP 10
^*--------------------------------------------------------------------------------\*
.HL 2 ^*PROMPT\*
.INDEX ICHECK>prompt
.LM +10
.NO FILL
.NO JUSTIFY
__IFF-file:            IFF-file-spec
.LM -10
.BLANK
.TP 10
^*--------------------------------------------------------------------------------\*
.HL 2 ^*PARAMETER\*
.INDEX ICHECK>parameter
.BLANK
.LM +10
.NO JUSTIFY
.P -10;IFF-file-spec
.JUSTIFY
.INDEX ICHECK> and LSL$IF:
.INDEX ICHECK>default file-specs>input file
.P -2;-#specifies the IFF file which is to be checked. Any part of the
file specification which is not supplied will be taken from the default
specification 'LSL$IF:IFF.IFF'. 
.TP 12
.BLANK
.LM 0
^*--------------------------------------------------------------------------------\*
.HL 2 ^*COMMAND QUALIFIERS\*
.INDEX ICHECK>command qualifiers
.LM +10
.NO JUSTIFY
.P -10;/BASE__FC=integer
.INDEX ICHECK>command qualifiers>/BASE__FC
.JUSTIFY
.P -2;-#for use with the /MARKERS qualifier. /BASE__FC=integer causes ICHECK to
offset all marker box IFF feature codes by the specified value. (See
description for details of marker box feature codes). This enables the user to
plot (or read into LITES2) both the /MARKERS IFF file and the source IFF file
simultaneously without conflict of feature codes 1,2,3,4 and 5. The default
feature code base value is 0 (zero). 

.TP 10
.P -10;/BORDER[=real]
.INDEX ICHECK>neatline definition
.INDEX ICHECK>command qualifiers>/BORDER
.P -2;-#used in conjunction with /NEATLINE, /BORDER specifies the width of a
zone inside the sheet neatline, within which open feature termination is
considered an error. The /BORDER argument should be specified in IFF units.
The default /BORDER value is 2% of the maximum sheet edge length. 

.P 0;When used with the /NEATLINE check, /BORDER enables the user to determine
that all digitising reaches the sheet neatlines and that none falls short
(i.e. that no feature ends lie within the defined zone inset from the
neatlines). The ends of closed features (i.e. features having coincident first
and last points) are not reported even if they lie within the checking zone
defined by /BORDER. 

.INDEX LITES2
.INDEX ICHECK>and LITES2
.NO JUSTIFY
.TP 10
.P -10;/CROSS
.I -10;/NOCROSS
.INDEX ICHECK>command qualifiers>/CROSS
.JUSTIFY
.P -2;-#check for all possible crossing segment combinations within the current
feature. This is the default ICHECK mode of operation. Checks for crossing
segments may be deselected by specifying the /NOCROSS qualifier. Deselection of
crossing segment checking is only possible if at least one other check option
has been selected. 

.NO JUSTIFY
.TP 10
.P -10;/DUPLICATES=EXACT
.I -10;/DUPLICATES=NINT
.I -10;/NODUPLICATES
.INDEX ICHECK>command qualifiers>/DUPLICATES
.JUSTIFY
.P -2;-#check for consecutive duplicate points within a string. The /DUPLICATE
qualifier offers two keyword arguments EXACT and NINT. If keyword EXACT is
specified then both the X and both the Y coordinates of both points must match
exactly for ICHECK to generate an error message. If the keyword NINT is
specified then the both the X and both the Y coordinates are rounded to the
nearest integer before comparison. The NINT option is the default mode of
operation for the /DUPLICATES qualifier. 

.NO JUSTIFY 
.TP 10
.P -10;/FC=integer[,...]
.INDEX ICHECK>command qualifiers>/FC
.JUSTIFY
.P -2;-#check only features which have the specified feature code(s). The /FC
qualifier will accept single, multiple or ranges of feature code arguments.
Ranges of feature codes may be specified. The maximum number of feature codes
which may be specified is 1024. 

.NO JUSTIFY
.TP 10
.P -10;/FRT=file-spec
.INDEX FRT (Feature Representation Table)
.INDEX ICHECK>and FRT 
.INDEX ICHECK>command qualifiers>/FRT
.JUSTIFY
.P -2;-#specifies that the graphical type of features is to be checked for
correspondence with the information in the specified FRT (Feature Representation
Table). This provides a check on feature coding accuracy. For example a
linear feature which has a feature code associated with a symbol graphical type
will be considered to be erroneous. (See description for full details of the
errors reported by /FRT qualifier). 

.NO JUSTIFY
.TP 10
.P -10;/IGNORE=INVISIBLE
.I -10;/IGNORE=POLYGONS
.INDEX ICHECK>command qualifiers>/IGNORE
.JUSTIFY
.P -2;-#By default ICHECK will report touching or crossing line segments
even if they represent an invisible (i.e. pen-up) move. If /IGNORE=INVISIBLE
is specified, ICHECK will not report touching or crossing line segments if one,
or both, are invisible moves. A single feature can contain a maximum of 
512 invisible moves, if this number is exceeded then the /IGNORE=INVISIBLE
functionality is not applied for that feature.

.P 0;If /IGNORE=POLYGONS is specified, then
ICHECK performs /IGNORE=INVISIBLE functionality and in addition:
.LM +4
.LIST "o"
.LE ;does not report the closure point of nested polygons which are
connected to the outer polygon ring by a retraced invisible "stalk".
.LE ;does not report the point where the invisible line "stalk"
leaves and then returns to the outer polygon ring. It is assumed that
there is only one "stalk" connecting nested polygons to the outer ring,
as this is the structure created by the POLYGONS package.
.P 0;If more than one stalk is used, e.g. where the outer ring is defined by an 
archipelago of separate visible polygons joined together by invisible moves,
or where polygon nesting has been created manually,
the points where the stalks connect to the outer ring will be reported.
.END LIST 
.LM -4
.NO JUSTIFY

.TP 10
.P -10;/LAYER=integer[,...]
.INDEX ICHECK>command qualifiers>/LAYER
.JUSTIFY
.P -2;-#check only features which lie within the specified layer(s). /LAYER
will accept single, multiple or ranges of layer arguments. The maximum number
of layers which may be specified is 1024. 

.NO JUSTIFY
.TP 10
.P -10;/LITES2[=file-spec]
.I -10;/NOLITES2
.INDEX LITES2
.INDEX ICHECK>and LITES2
.INDEX ICHECK>command qualifiers>/LITES2
.INDEX ICHECK>default file-specs>LITES2 command file
.INDEX ICHECK>and LSL$IF:
.P -2;-#creates a LITES2 command file to take the user to potential errors.
Messages generated to report a potential error are incorporated in the file. By
default the LITES2 command file specification is parsed against that of the IFF
file being checked but with the substitution of logical name LSL$LITES2CMD: and
the extension '.LCM'. Thus if the input IFF file is called LSL$IF:TST.IFF then
the default LITES2 command file is LSL$LITES2CMD:TST.LCM. Entries in the LITES2
command file are typically of the form: 
.INDEX LITES2
.INDEX ICHECK>and LITES2
.INDEX ICHECK>command qualifiers>/LITES2>example LCM
.LITERAL

   %MESSAGE End in border zone in Feature FSN 1812 (1834) 
   %POSITION     765.3     456.89
   %TEST $CURSINWIN
   %ELSE %ZOOM 1
   %PING
   %RESPOND
   %ABANDON		
   %ABANDON		
.END LITERAL
.NO JUSTIFY
.TP 10
.P -10;/LOG
.I -10;/NOLOG
.INDEX ICHECK>command qualifiers>/LOG
.JUSTIFY
.P -2;-#this will result in supplementary messages being sent to SYS$OUTPUT.
Supplementary messages are generated when a file is successfully opened, and a
reassuring message output each time a new IFF layer is encountered in the IFF
file. 

.TP 10
.NO JUSTIFY
.P -10;/MARKERS=IFF-file-spec
.I -10;/NOMARKERS
.INDEX ICHECK>command qualifiers>/MARKERS
.JUSTIFY
.P -2;-#causes ICHECK to create the specified IFF file containing IFF features
defining boxes which represent the positions of potential errors. This IFF file
may then be plotted and overlaid with the original digitising source material. 
(See description for full details of the IFF feature codes applied to the
marker boxes output by the /MARKER qualifier). 

.TP 10
.NO JUSTIFY
.P -10;/NEATLINE=(NORTH=real,SOUTH=real,EAST=real,WEST=real)
.I -10;/NONEATLINE
.INDEX ICHECK>command qualifiers>/NEATLINE
.P -2;-#causes ICHECK to test for open features which which start, or end,
within a border zone inset from the neatline, and to test for all features that
start, or end outside the specified neatline. For a complete description of 
the operation of the /NEATLINE check see the Description section below.

.INDEX ICHECK>neatline definition
.P 0;Not all of the keywords are required, and abbreviations are allowed, but at
least one keyword must be given with a real value (in IFF units) to define the
relevant neatline. Thus if the user specified /NEATLINE=(SOUTH:0.0,EAST:200.0)
checks will only be performed on the WEST and NORTH sheet neatlines.

.P 0;/BORDER is designed for use with the /NEATLINE qualifier. If the width of
the border zone is not defined by the /BORDER qualifier then a default of 2%
of the maximum (X,Y) file range is taken. 

.NO JUSTIFY
.TP 10
.P -10;/OUTPUT[=file-spec]
.INDEX ICHECK>command qualifiers>/OUTPUT
.JUSTIFY
.P -2;- by default output will be to SYS$OUTPUT. This option allows the user to
redirect output to the specified text file. /OUTPUT is the default mode of 
operation for ICHECK.

.NO JUSTIFY
.TP 10
.P -10;/PARALLEL
.I -10;/NOPARALLEL
.INDEX ICHECK>command qualifiers>/PARALLEL
.JUSTIFY
.P -2;-#by default, the /TOUCH qualifier does not check the proximity of
parallel segments within a feature. Using the /PARALLEL qualifier with /TOUCH
means that parallel segments are checked.

.NO JUSTIFY
.TP 10
.P -10;/PRINTER
.I -10;/NOPRINTER
.INDEX ICHECK>command qualifiers>/PRINTER
.INDEX ICHECK>command qualifiers>/OUTPUT
.JUSTIFY
.P -2;-#queues the ICHECK text output for printing on SYS$PRINT: under the name
given by the /OUTPUT qualifier. If you specify /PRINTER without the /OUTPUT
qualifier, the output is directed to a file named SYS$DISK:ICHECK.LIS which is
queued automatically for printing and then deleted. 

.NO JUSTIFY
.TP 10
.P -10;/TOUCH[=real]
.I -10;/NOTOUCH
.INDEX ICHECK>command qualifiers>/TOUCH
.INDEX ICHECK>command qualifiers>/TOUCH>default distance
.JUSTIFY
.P -2;-#causes ICHECK to look for touching segments within a feature. These are
segments which are closer than the specified distance apart. The default /TOUCH
distance is 0.5 IFF units. 
.BLANK 2

.BLANK
.TP 6
.LM 0
^*--------------------------------------------------------------------------------\*
.HEADER LEVEL 2 ^*RESTRICTIONS\*
.INDEX ICHECK> RESTRICTIONS
.FILL
.LM +10
.LIST 'o'
.LE
At least one check must be specified
.LE
At least one output must be specified
.LE
/BORDER requires /NEATLINE
.LE
/NEATLINE requires at least one keyword
.END LIST 
.NOFILL
.LM -10
.TP 10
.BLANK
^*-------------------------------------------------------------------------------\*
.HL 2 ^*DESCRIPTION\*
.INDEX ICHECK>description
.LM +10
.JUSTIFY
.FILL
.INDEX geometry checking
.P 0;ICHECK is an IFF geometry checking utility. It scans the coordinates of an 
IFF file and reports on potential errors within features. Throughout the 
following description a segment is defined as a line joining two consecutive
coordinates within an IFF feature. 

.P 0;The following checks are available:

.LIST "o"

.INDEX ICHECK>available checks
.INDEX ICHECK>available checks>crossing segments
.LE ;crossing segments, for example where the digitiser has looped back upon 
itself,

.INDEX ICHECK>available checks>touching segments
.LE ;touching segments, for example where the digitiser has looped back upon 
itself without crossing,

.INDEX ICHECK>available checks>for duplicate points
.LE;duplicate points within a feature,

.INDEX ICHECK>available checks>for open features in border zone
.INDEX ICHECK>available checks>for features outside neatlines
.LE ;open features which do not intersect with a user defined sheet neatline 
and which start, or end, within a border zone inset from the neatline, and
all features which start, or end, outside of the sheet neatlines,

.INDEX ICHECK>available checks>against FRT
.INDEX FRT (Feature Representation Table)
.INDEX ICHECK>and FRT 
.LE ;feature characteristics at variance with the graphical type of that
feature defined in an FRT (Feature Representation Table) file.
.END LIST

.INDEX ICHECK>available checks>subset definition
.P 0;ICHECK may be used to check a subset of the features in an IFF file
by use of the /LAYER and /FC qualifiers. Only features which fall within
specified layers or which have the specified feature code will be checked. The
default ICHECK action is to check ^*ALL\* features in the IFF file except those
which lie in IFF layer 0. Layer 0 is reserved for registration features and
grids. 

.INDEX ICHECK>available checks>default action
.INDEX ICHECK>available checks>relative speed
.P 0;The default mode of ICHECK operation is to check for crossing segments
within features. These errors are usually the result of poor digitising. 

.P 0;Error messages are sent to SYS$OUTPUT by default. The /OUTPUT
qualifier may be used to specify a file in which the error messages will be 
duplicated.

.P 0;All the checks may be used singly or in combination. However, execution
time may increase if all checks are applied and specification of a large touch
tolerance may dramatically slow execution speed. In addition, it can be easier
for an operator to work from several logs or LITES2 command files containing
errors of the same type, rather than a single large file containing many
different types of error. 

.INDEX ICHECK>available checks>crossing segments
.INDEX ICHECK>available checks>touching segments
.P 0;The checks for crossing and touching segments within a feature do not
report potential errors that lie within the touch tolerance of each other in
the case of touching segments and 0.1% of the maximum range of the file in the
case of crossing segments. Exactly duplicate points are ignored by both checks.
Care should be taken when checking for touching segments. If too great a touch
tolerance is specified then all segments within the tolerance of each other will
be reported as touching. When two almost parallel segments lie within the touch
tolerance of each other then the reported point of intersection may be far off
the sheet boundary ! The proximity of exactly parallel segments may be enabled
by using the /PARALLEL qualifier with /TOUCH.

.INDEX ICHECK>available checks>for open features
.INDEX ICHECK>available checks>neatline and line intersection
.INDEX ICHECK>neatline definition
.P 0;The check for open features which terminate within a user defined border
zone should be used with care. Any open feature (i.e. a feature which has end
points described by different coordinates) will be considered erroneous if one
of its ends falls within the border zone. ICHECK cannot make any distinction
between the symbolic functions of features, so it will not distinguish between
contours and communications features. While is is incorrect for a contour to
terminate in space, it is perfectly alright for a road to do so (in a
cul-de-sac for example). The user should make full use of the /LAYER and /FC
qualifiers to avoid confusion using this check. 

.P 0;If dealing with contour data it is important not to make the border zone
for checking too large. The default border zone is 2% of the maximum sheet
length. If made too wide on a sheet containing contours which have been
feathered for clarity or labelling, a large number of erroneous warnings will
be issued. 

.INDEX ICHECK>command qualifiers>/DUPLICATES
.INDEX ICHECK>command qualifiers>/DUPLICATES>options
.P 0;The check for consecutive duplicate points within a string offers two
options:
.LIST
.DISPLAY ELEMENTS "(",RL,")"
.LE ;exact match of coordinates, and,
.LE ;coordinate match after rounding to the nearest integer.
.END LIST 
.P 0;These options are selected by keyword arguments to the /DUPLICATES
qualifier. The keywords are 'EXACT' for exact comparison and 'NINT' for nearest
integer comparison. The NINT option is the default mode of operation for the
/DUPLICATES qualifier. 

.INDEX ICHECK>command qualifiers>/FRT
.INDEX FRT (Feature Representation Table)
.INDEX ICHECK>and FRT 
.P 0;The check for conflicting feature content against FRT (Feature
Representation Table) information is very powerful. The feature code carried by
each feature is looked up in the FRT file and the graphical type of that
feature code is noted. If the graphical type is found to be at variance with
the characteristics of the feature an error is reported. Errors that will be
reported with the /FRT option are: 

.LIST  "o"

.LE ;feature codes not found in FRT,

.LE ;features having graphical type 1 (linear) but only a single point in the 
feature ST (STring entry),

.LE ;features having graphical type 2 (clockwise arc) but having more or less
than 3 points,

.LE ;features having graphical type 3 (anticlockwise arc) but having more or
less than 3 points,

.LE ;features having graphical type 4 (circumcircle arc) but having more or
less than 3 points,

.LE ;features having graphical type 5 (full circumcircle ) but having more or
less than 3 points,

.LE ;features having graphical type 6 (interpolated curve) but less than 2
points,

.LE ;features having graphical type 7 (unoriented symbol) but more than 1 
point,

.LE ;features having graphical type 8 (oriented symbol) but having more than 2
points, or only 1 point and no accompanying RO (ROtation) entry, 

.LE ;features having graphical type 9 (scaled symbol) but having more than 2 
points,

.LE ;features having graphical type 10 (text) but no TX entry, or more than
2 points,

.LE ;features having graphical type 11 (symbol string) but only 1 point,

.LE ;features having graphical type 12 (fill area) but less than 3 points,
or features which do not have coincident first and last points.

.LE ;Symbol or text features with incorrectly set symbol and text bits in the
FS (Feature Status) entry. 

.END LIST
.INDEX FRT (Feature Representation Table)
.INDEX ICHECK>and FRT 
.INDEX ICHECK>default file-specs>FRT
.INDEX ICHECK>and LSL$FRT:
.P 0;The FRT file specification supplied as the obligatory argument to the /FRT
qualifier will be parsed against the default file specification 
LSL$FRT:.FRT;0.

.P 0;When the /FRT qualifier is specified errors are only output to the screen
or to listing file as FRT errors will cause both LITES2 and FPP plotting 
software to produce errors.

.INDEX ICHECK>command qualifiers>/MARKERS file characteristics
.P 0;ICHECK offers the option to output marker box features to an IFF plot file
specified with the /MARKERS qualifier. This IFF file is given the RA (RAnge) MH
(Map Header), MD (Map Descriptor), CC (Cubic Coefficients) and CP (Control
Point) entries from the file which is being checked. The marker box features
are placed in IFF layer 1 and are given one of the following feature codes,
(possibly offset with the value specified by the /BASE__FC qualifier):
.INDEX ICHECK>command qualifiers>/BASE__FC
.TP 12
.LM -3
.INDEX ICHECK>command qualifiers>/MARKERS
.INDEX ICHECK>command qualifiers>/MARKERS>box positioning
.INDEX ICHECK>command qualifiers>/MARKERS>box feature codes
.LITERAL

+----------------------------+---------------------------+--------------+
| ERROR                      | BOX CENTRE POSITION       | FEATURE CODE |
+----------------------------+---------------------------+--------------+
| Crossing segments          | Over intersection         | base FC +1   |
| Touching segments          | Over 1st touching point   | base FC +2   |
| End in border zone         | Over offending end        | base FC +3   |
| Points outside neatline    | Over an offending point   | base FC +4   |
| Duplicate point in string  | Over offending point      | base FC +5   |
+----------------------------+---------------------------+--------------+

.END LITERAL
.LM +3
.P 0;If no relevant errors are detected then the empty marker file is
deleted.

.INDEX FRT (Feature Representation Table)
.INDEX ICHECK>command qualifiers>/MARKERS
.INDEX ICHECK>default file-specs>/MARKERS IFF file
.INDEX ICHECK>and FRT 
.INDEX ICHECK>and LSL$IF:
.P 0;The marker boxes are defined by 5 point strings and therefore the FRT
(Feature Representation Table) used to plot the MARKER IFF plot file should
have feature codes 1 to 5 set to be graphical type 1 (linear). 
.P 0;The IFF plot file specification supplied as the obligatory argument to the 
/MARKERS qualifier will be parsed against the default file specification
LSL$IF:ICHECK.IFF;0. If no features are found to be in error no IFF marker
file is produced.

.INDEX LITES2
.INDEX ICHECK>and LITES2
.P 0;If the /LITES2 qualifier (q.v.) is specified ICHECK creates a LITES2
command file which can be used to direct the user to the position of the
suspected error within the Laser-Scan LITES2 graphical editor. The positions
supplied in the LITES2 command file to locate the suspected error are
the same as used for the location of the marker box in the optional IFF plot
file. Note that exactly duplicate points are ignored by LITES2.

.INDEX LITES2
.INDEX ICHECK>and LITES2
.P 0;The following are examples of the types of entries written to the LITES2
command file: 
.NO JUSTIFY
.NO FILL
.LM +5
.BLANK
.TP 8
.INDEX ICHECK>command qualifiers>/LITES2>example LCM
.I -5;Crossing segments:
%MESSAGE Crossing segments in FSN 302 (302)
   %POSITION     765.3     529.89
   %TEST $CURSINWIN
   %ELSE %ZOOM 1
   %PING
   %RESPOND
   %ABANDON
.BLANK 2
.TP 8
.I -5;Touching segments:
.BLANK
.INDEX ICHECK>command qualifiers>/LITES2>example LCM
%MESSAGE Touching segments in FSN 467 (467)
   %POSITION     263.3     456.89
   %TEST $CURSINWIN
   %ELSE %ZOOM 1
   %PING
   %RESPOND
   %ABANDON
.BLANK 2
.TP 8
.I -5;Open feature end found in border zone:
.BLANK
.INDEX ICHECK>command qualifiers>/LITES2>example LCM
%MESSAGE End in border zone in FSN 670 (55) 
   %POSITION     591001.3     91456.00
   %TEST $CURSINWIN
   %ELSE %ZOOM 1
   %PING
   %RESPOND
   %ABANDON
.BLANK 2
.TP 10
.I -5;Feature with points outside neatline:
.BLANK
.INDEX ICHECK>command qualifiers>/LITES2>example LCM
%MESSAGE End outside neatline in FSN 670 (55) 
   %POSITION     591001.3     91456.00
   %TEST $CURSINWIN
   %ELSE %ZOOM 1
   %PING
   %RESPOND
   %ABANDON
.BLANK 2
.TP 8
.I -5;Duplicate point:
.BLANK
.INDEX ICHECK>command qualifiers>/LITES2>example LCM
%MESSAGE Duplicate point in FSN 517 (517)
   %POSITION     60424.38     639304.67
   %TEST $CURSINWIN
   %ELSE %ZOOM 1
   %PING
   %RESPOND
   %ABANDON
.BLANK 2
.FILL
.P 0;If no relevant errors are detected then the empty LITES2 command file is
deleted.
.LM 0
.TP 15
.BLANK 2
.NO FILL
.LM 0
.TP 15
.NO JUSTIFY
.PAGE
^*--------------------------------------------------------------------------------\*
.HEADER LEVEL 2 ^*EXAMPLES\*
.INDEX ICHECK> EXAMPLES
.NO JUSTIFY
.LM 0
.KEEP
.NO FILL

$ ^*ICHECK HYDRO.IFF/LOG/FRT=HYDRO/MARK=HYDRO_MRK<CR>\*
%LSLLIB-I-IFFOPENED, DUA0:[IMP.TEST]HYDRO.IFF;3 opened for read
%LSLLIB-I-IFFOPENED, DUA0:[IMP.TEST]HYDRO_MRK.IFF;2 opened for write
%ICHECK-I-LSTOPNOUT, list file SYS$OUTPUT opened for output

================================= ICHECK =====================================

Input file:   LSL$IF:HYDRO.IFF;

ICHECK invoked by: TOM, Process: Mr Timms, on: 29-JAN-87 17:56:54
Command line:
ICHECK HYDRO.IFF/LOG/FRT=HYDRO/MARK=HYDRO_MRK 
 
%ICHECK-I-FRTOPN, FRT file LSL$FRT:HYDRO.FRT opened for read
%ICHECK-I-LAYER, layer 1 will be processed 
Feature FSN 75 (79) - contains crossing segments at    61.732    61.773
Feature FSN 99 (103) - contains crossing segments at    62.200    61.836
Feature FSN 100 (104) - contains crossing segments at    62.296    62.104
Feature FSN 102 (106) - contains crossing segments at    61.503    61.633
Feature FSN 104 (108) - contains crossing segments at    61.465    61.730
Feature FSN 63 (67) - number of coordinates conflicts with GT of FC 1
Feature FSN 64 (68) - number of coordinates conflicts with GT of FC 1
%ICHECK-I-LAYER, layer 2 will be processed 
%ICHECK-I-LAYER, layer 3 will be processed 
%ICHECK-I-LAYER, layer 4 will be processed 

A total of 5 crossing segments found
A total of 2 FRT errors found
 ELAPSED:    0 00:00:10.40  CPU: 0:00:05.45  BUFIO: 35  DIRIO: 118  FAULTS: 194 
$
.BL
.FILL
.LM +8
.P 0;
This example demonstrates the use of the /CROSS and /FRT checking qualifiers
with the /LOG, /OUTPUT, and /MARKER output qualifiers. The /CROSS and /OUTPUT
qualifiers were not typed on the command line but taken as defaults. The user
specified HYDRO.IFF as the input file which is expanded to LSL$IF:HYDRO.IFF by
default. As the /LOG qualifier is specified supplementary messages are output
when files are successfully opened. In this case the messages confirm that the
input file, the MARKER file, specified as HYDRO_MRK.IFF and the default /OUTPUT
(SYS$OUTPUT) have been opened. The /OUTPUT qualifier causes information about
the input file, the users process and the command line to be output and another
message confirms that the FRT file specified by the /FRT qualifier (HYDRO and
expanded by default to LSL$FRT:HYDRO.FRT) is opened successfully. The /LOG
qualifier also causes messages to be output as each layer is encountered. 
.P 0;
In this example a total of 5 crossing segments were found in the specified
features at the specified positions and in 2 cases the graphical type indicated
by the feature code in the FRT file conflicted with the number of coordinates
for the feature. A box feature is created around the errors relating to
crossing segments in the MARKER IFF file but the FRT errors are not shown in
the MARKER file. All the errors occurred in layer 1, layers 2 to 4 being free
from FRT errors and crossing segments. A summary of the errors is output when
the end of file is detected. $STATUS is set to SS$__NORMAL. 

.BL 2
.TP 14
.NOFILL
.LM -8

$ ^*ICHECK TEST/NOOUT/LITES=IF:TEST_LCM/LOG/DUPLICATES<CR>\*
%LSLLIB-I-IFFOPENED, DUA0:[IMP.TEST]TEST.IFF;2 opened for read
%ICHECK-I-LITOPNOUT, LITES2 command file IF:TEST_LCM.LCM opened for output
%ICHECK-I-LAYER, layer 1 will be processed 
%ICHECK-I-LAYER, layer 2 will be processed 
%ICHECK-I-LAYER, layer 4 will be processed 
Feature FSN 10234 (59) - contains duplicate points
Feature FSN 11 (217) - contains crossing segments at 12412.974  1662.149
Feature FSN 61 (240) - contains crossing segments at  6328.548  4076.191
%ICHECK-I-LAYER, layer 8 will be processed 
Feature FSN 25 (81) - contains duplicate points
Feature FSN 10242 (141) - contains duplicate points
Feature FSN 225 (209) - contains crossing segments at 12394.151  3039.299
Feature FSN 10251 (215) - contains crossing segments at 12173.457  1953.396
Feature FSN 10251 (215) - contains crossing segments at 11805.022  2037.562
Feature FSN 97 (221) - contains crossing segments at  8457.673  3727.006
Feature FSN 107 (223) - contains crossing segments at  7668.132  3932.890
Feature FSN 94 (235) - contains crossing segments at  5600.643  5189.009
Feature FSN 10264 (236) - contains crossing segments at  5544.627  5183.751
Feature FSN 100 (237) - contains crossing segments at  5680.049  6547.367
Feature FSN 100 (237) - contains crossing segments at  5695.957  6498.397
Feature FSN 110 (241) - contains crossing segments at 11048.236   312.625
%ICHECK-I-LAYER, layer 9 will be processed 
%ICHECK-I-LAYER, layer 10 will be processed 
Feature FSN 10161 (220) - contains crossing segments at 12738.729  1219.430

A total of 13 crossing segments found
A total of 3 duplicate points found
 ELAPSED:    0 00:00:37.49  CPU: 0:00:33.88  BUFIO: 32  DIRIO: 215  FAULTS: 144 
$ 
.BL
.FILL
.LM +8
.P 0;
This example demonstrates the use of the /CROSS and /DUPLICATES check
qualifiers and the /LOG and /LITES2 output qualifiers. The user specified TEST
as the input file which is expanded to LSL$IF:TEST.IFF by default. The default
/OUTPUT qualifier is negated with the /NOOUTPUT qualifier but the user specified
/LITES2=IF:TEST_LCM to create a LITES2 command file. The LITES2 filename is
created in the directory pointed to by the logical name IF and the file
extension .LCM is added by default. As the /LOG qualifier is also specified
messages confirming the opening of the input IFF file and the LITES2 file are
output. The user specified the /DUPLICATE qualifier without either the 'NINT'
or 'EXACT' keyword. By default the the /CROSS qualifier is specified and the
'NINT' keyword taken for the /DUPLICATE qualifier. 
.P 0;
The /LOG qualifier causes messages to be output as each layer is encountered.
In this case a total of 13 crossing segments were found and 3 duplicate points.
These errors are noted on the screen and in the LITES2 command file. A summary
of the errors is output when the end of file is detected and $STATUS is set to
SS$__NORMAL. 

.BL 2
.TP 14
.NOFILL
.LM -8

$ ^*ICHECK/LOG/NEAT=(E=20000,S=0)/NOCROSS TEST<CR>\*
%LSLLIB-I-IFFOPENED, DUA0:[IMP.TEST]TEST.IFF;2 opened for read
%ICHECK-I-LSTOPNOUT, list file SYS$OUTPUT opened for output

================================= ICHECK =====================================

Input file:   LSL$IF:TEST.IFF;

ICHECK invoked by: TOM, Process: Mr Timms, on: 29-JAN-87 17:59:00
Command line:
ICHECK/LOG/NEAT=(E=20000,S=0)/NOCROSS TEST 
 
%ICHECK-I-LAYER, layer 1 will be processed 
%ICHECK-I-LAYER, layer 2 will be processed 
%ICHECK-I-LAYER, layer 4 will be processed 
%ICHECK-I-LAYER, layer 8 will be processed 
Feature FSN 10256 (205) - ends outside neatline at 20184.422  5610.272
%ICHECK-I-LAYER, layer 9 will be processed 
%ICHECK-I-LAYER, layer 10 will be processed 

A total of 0 features end in border zone
A total of 1 feature ends outside neatline
 ELAPSED:    0 00:00:07.87  CPU: 0:00:05.47  BUFIO: 23  DIRIO: 208  FAULTS: 112 
$ 

.BL
.FILL
.LM +8

.P 0;
This example demonstrates the use of the neatline check specified by the 
/NEATLINE qualifier. The default crossing check is negated with the 
/NOCROSS qualifier, but the /OUTPUT = SYS$OUTPUT default is not negated.
The /LOG qualifier is selected to send supplementary messages to the screen
and the /NEATLINE qualifier has 2 (abbreviated) keywords and values specified:
E(ast)=20000 and S(outh)=0. As no border tolerance is specified with the 
/BORDER qualifier the default of 2% of the maximum range is taken. Checks
will therefore be made on open features that start or end within the default
border distance of the 2 specified neatlines, or outside either. Messages 
are output as each file is successfully opened and when each layer is
encountered. Information is also output about the user process and and the 
command line typed. One feature (FSN 10256 (205)) is found to start or end
outside the neatline and none were found to start or end in the border zone.
A summary of the error totals is output and $STATUS is set to SS$__NORMAL. 

.BL 2
.TP 14
.NOFILL
.LM -8

$ ^*ICHECK/LOG/FRT=OS/NOCROSS CHELSEA<CR>\*
%LSLLIB-E-IFFOPEN, IFF error opening file "LSL$IF:CHELSEA.IFF;" for read
%IFF-E-OPEN, error opening IFF file
-RMS-E-FNF, file not found
 ELAPSED:    0 00:00:00.81  CPU: 0:00:00.33  BUFIO: 4  DIRIO: 0  FAULTS: 110 
$ 

.BL
.FILL
.LM +8

.P 0;
In this example the user attempted to check the IFF file specified as CHELSEA
and expanded to LSL$IF:CHELSEA.IFF for FRT errors against the FRT file specified
as OS and expanded to LSL$FRT:OS.FRT. The default crossing segment check is
negated with the /NOCROSS qualifier and the /LOG qualifier is specified to
send supplementary messages to the screen. However, the input file CHELSEA.IFF 
is not found in LSL$IF:, either the filename is incorrect or the logical name 
LSL$IF: is not pointing to the correct directory or device. $STATUS is set to 
SS$__ABORT. 

.BL 2
.TP 14
.NOFILL
.LM -8

$ ^*ICHECK/LOG/FRT=OS/NOCROSS/DUPL TQ3079A/MARK=LSL$DISK:[TEST_DIR]TQ_TEST<CR>\*
%LSLLIB-I-IFFOPENED, DUA0:[IFF.IMP.TEST]TQ3079A.IFF;31 opened for read
%LSLLIB-E-IFFCREATE, IFF error creating file "LSL$DISK:[TEST_DIR]TQ_TEST.IFF"
%IFF-E-PARS, error in IFF filename
-RMS-E-DNF, directory not found
 ELAPSED:    0 00:00:01.04  CPU: 0:00:00.43  BUFIO: 7  DIRIO: 3  FAULTS: 102 

.BL
.FILL
.LM +8

.P 0;
In this example the user attempted to check the IFF file specified as TQ3079A
and expanded to LSL$IF:TQ3079A.IFF, for FRT errors against the FRT file
specified as OS, (expanded to LSL$FRT:OS.FRT), and for DUPLICATE points. The
default crossing segment check is negated with the /NOCROSS qualifier and the
/LOG qualifier is specified to send supplementary messages to the screen. The
input file is opened successfully however, the output marker file specified as
LSL$DISK:[TEST_DIR]TQ_TEST could not be created. The accompanying messages 
suggest that the specified directory does not exist. Program execution is 
terminated on this error and $STATUS is set to SS$__ABORT. 


.BL 2
.TP 14
.NOFILL
.LM -8

$ ^*ICHECK/LOG/TOUCH=3/NOCROSS TEST/LAYER=(8:9)/LITES=IF:TEST_LCM<CR>\*
%LSLLIB-I-IFFOPENED, DUA0:[IMP.TEST]TEST.IFF;2 opened for read
%ICHECK-I-LSTOPNOUT, list file SYS$OUTPUT opened for output

================================= ICHECK =====================================

Input file:   LSL$IF:TEST.IFF;

ICHECK invoked by: TOM, Process: Mr Timms, on: 29-JAN-87 18:02:18
Command line:
ICHECK/LOG/TOUCH=3/NOCROSS TEST/LAYER=(8:9)/LITES=IF:TEST_LCM 
 
%ICHECK-I-LITOPNOUT, LITES2 command file IF:TEST_LCM.LCM opened for output
%ICHECK-I-LAYER, layer 1 will be ignored   
%ICHECK-I-LAYER, layer 2 will be ignored   
%ICHECK-I-LAYER, layer 4 will be ignored   
%ICHECK-I-LAYER, layer 8 will be processed 
Feature FSN 114 (113) - contains touching segments near 13232.451  1564.254
Feature FSN 129 (120) - contains touching segments near 15208.502  2218.757
Feature FSN 129 (120) - contains touching segments near 15205.673  2224.870
Feature FSN 10064 (134) - contains touching segments near 17250.594  7568.748
Feature FSN 10065 (135) - contains touching segments near 18016.363  7380.196
Feature FSN 130 (166) - contains touching segments near  6559.333   285.557
Feature FSN 59 (167) - contains touching segments near 15398.444  5817.501
Feature FSN 10251 (215) - contains touching segments near 11801.632  2041.983
Feature FSN 107 (223) - contains touching segments near  7944.607  3638.555
Feature FSN 94 (235) - contains touching segments near  5600.565  5202.999
Feature FSN 10264 (236) - contains touching segments near  5489.138  5214.673
Feature FSN 100 (237) - contains touching segments near  5667.402  6586.296
%ICHECK-I-LAYER, layer 9 will be processed 
%ICHECK-I-LAYER, layer 10 will be ignored   

A total of 12 touching segments found
 ELAPSED:    0 00:00:51.56  CPU: 0:00:32.00  BUFIO: 37  DIRIO: 218  FAULTS: 161 
$ 

.BL
.FILL
.LM +8

.P 0;
This example shows a successful run of ICHECK with checks for touching segments
specified with the /TOUCH qualifier with a touch tolerance of 3.0 IFF units. 
The default check for crossing segments is negated with the /NOCROSS qualifier.
Output is directed to SYS$OUTPUT by the default /OUTPUT qualifier and /LOG,
while output to a LITES2 command file (IF:TEST_LCM.LCM) is also specified.
The /LAYER qualifier restricts checking to the specified layers 8 and 9. The
messages as each layer is encountered show that only these layers are processed.
A total of 12 touching segments were found in these layers at the specified
positions. A summary of the error total is output and $STATUS is set to 
SS$__NORMAL. 

.LM 0
.NJ
.PAGE
^*--------------------------------------------------------------------------------\*
.NOFILL
.KEEP
.HEADER LEVEL 2 ^*MESSAGES (informational)\*
.J
.BL
These messages give information only, and require no immediate action by the
user. They are often used to supply explanatory information in support of a
warning or error message. 
.BL
.LM +4
.SKIP
.TP 7
.INDENT -4;LAYER, layer 'integer' will be ignored
.INDENT -4;LAYER, layer 'integer' will be processed
.P 0;^*Explanation:\* The specified layer in the input IFF file has been found.
The message confirms that the current layer is either being ignored or
processed. 
.P 0;^*User action:\* None.

.SKIP
.TP 7
.INDENT -4;FRTOPN, FRT file 'file-spec' opened for read
.P 0;^*Explanation:\* The /FRT = 'file-spec' qualifier has been specified and
the message is confirming that the FRT (Feature Representation Table) file has 
been opened.
.P 0;^*User action:\* None.

.SKIP
.TP 7
.INDENT -4;LITOPNOUT, LITES2 command file 'file-spec' opened for output.
.P 0;^*Explanation:\* The /LITES2 = 'file-spec' qualifier has been specified and
the message is confirming that the LITES2 command file has been opened.
.P 0;^*User action:\* None.

.SKIP
.TP 7
.INDENT -4;LSTOPNOUT, list file 'file-spec' opened for output.
.P 0;^*Explanation:\* The /OUTPUT = 'file-spec' qualifier has been specified and
the message is confirming that the output file has been opened.
.P 0;^*User action:\* None.

.PAGE
.LM 0
^*--------------------------------------------------------------------------------\*
.HL 2 ^*MESSAGES (warning)\*
.LM +4
.P 0;These messages are output when an error has occurred that can be corrected
immediately by the user. 

.SKIP
.TP 7
.INDENT -4;INVIFFSTR, invalid IFF file structure in layer 'integer'
.P 0;^*Explanation:\* An incomplete or invalid IFF feature has been encountered
in the specified layer. An EF (End Feature) entry has been encountered either 
outside an IFF feature or, before a FS (Feature Status) or ST (STring) entry
has been found. Incorrectly formed TS (Text Status) entries are also considered
erroneous.

.P 0;^*User action:\* Examine the input file using IPATCH to find the invalid
file structure which caused of the error message. Refer to the IFF User Guide
for details of valid IFF file and entry structure. Try to determine the cause
of the invalid file structure and if necessary report the circumstances to 
Laser-Scan.

.SKIP
.TP 7
.INDENT -4;INVFSENT, invalid IFF FS entry in FSN 'integer' ('integer')
.P 0;^*Explanation:\* An invalid bit structure has been found in the third
word of the FS (Feature Status) entry of the specified feature.
.P 0;^*User action:\* Examine the input file using IPATCH to find the invalid
FS entry which caused of the error message. Refer to the IFF User Guide for
details of valid entry structure. Try to determine the cause of the invalid
entry and if necessary report the circumstances to Laser-Scan. 

.SKIP
.TP 7
.INDENT -4;LSTNSPLDEL, listing file not spooled or deleted
.P 0;^*Explanation:\* The program has been unable to spool or delete the
listing file specified by the /OUTPUT or /PRINT qualifier.
.P 0;^*User action:\* Check that any listing file specification is correct.
Check that the print queues are functioning correctly. If the problem continues
notify the system manager.

.SKIP
.TP 7
.INDENT -4;LSTNSPL, listing file not spooled
.P 0;^*Explanation:\* The program has been unable to spool the listing file 
specified by the /OUTPUT or /PRINT qualifier.
.P 0;^*User action:\* Check that any listing file specification is correct.
Check that the print queues are functioning correctly. If the problem continues
notify the system manager.


.SKIP
.TP 7
.INDENT -4;NOPTSINFT, no points in feature FSN 'integer' ('integer')
.P 0;^*Explanation:\* The specified feature contains an ST entry without
any points. ICHECK will ignore any such features.
.P 0;^*User action:\* Try to determine the cause of the ST entry having no 
points as this is very unusual. If necessary report the circumstances to 
Laser-Scan.


.SKIP
.TP 7
.INDENT -4;TOOMNYINV, more than 'integer' invisible steps in feature FSN 'integer' ('integer')
.P 0;^*Explanation:\* The specified feature contains more invisible steps than 
the ICHECK/IGNORE=INVISIBLE or /IGNORE=POLYGONS functionality can handle
in one go. /IGNORE=INVISIBLE and /IGNORE=POLYGONS functionality will
not be applied to the offending feature and any touching/intersecting
sections of linework caused by invisible moves will be reported.
.P 0;^*User action:\* Note the occurrence of this message and baer it
in mind when interpreting the results of the checking run.

.NO JUSTIFY
.LEFT MARGIN 0
.PAGE
^*--------------------------------------------------------------------------------\*
.HEADER LEVEL 2 ^*MESSAGES (error)\*
.BLANK
.LM +4
These messages indicate an error in processing which has caused the program to
terminate. The most likely causes are a corrupt or otherwise invalid input IFF
file, or an error related to command line processing and file manipulation.
It is most unlikely that any output file produced will be correctly processed.

.SKIP
.INDENT -4;ERRCLOINP, error closing input IFF file 'file-spec'
.INDENT -4;ERRCLOLIT, error closing LITES2 command file 'file-spec'
.INDENT -4;ERRCLOMRK, error closing Marker file 'file-spec'

.P 0;^*Explanation:\* An error has occurred in closing the specified file.
.P 0;^*User action:\* The accompanying messages should help you to interpret the
cause of this error. Check that there is sufficient disk space for the file and
that the disk is functioning properly. If the problem continues, notify the 
system manager. 

.SKIP
.INDENT -4;ERROPFRT, error opening FRT file 'file-spec'
.INDENT -4;ERROPLIT, error opening LITES2 command file 'file-spec'
.INDENT -4;ERROPLST, error opening list file 'file-spec'
.P 0;^*Explanation:\* The supplied file specification is erroneous, or the file
is nonexistent, or you do not have read access to the file. 
.P 0;^*User action:\* The accompanying messages will help you to interpret the
cause of the error. Check the file specification for errors, check that you
have read access to the file. If the problem continues, notify the system
manager. 

.BLANK
.NO JUSTIFY
.TEST PAGE 12
.INDENT -4;FAILTRLG, failed to translate logical name 'logical-name'
.P 0;^*Explanation:\* ICHECK is unable to translate the specified logical
name.
.P 0;^*User action:\* Use the VMS ASSIGN or DEFINE commands to correctly
define the logical name. Re-run ICHECK. Normally the logical names
required by ICHECK are defined at user login time. See the "LAMPS
Environment Guide" for details of these logical names.


.SKIP
.TP 7
.INDENT -4;INVBASE, invalid base 'integer' specified
.P 0;^*Explanation:\* An invalid base feature code has been specified either
less than 0 or greater than 32762. 
.P 0;^*User action:\* Re-run the program with valid base specified.

.SKIP
.TP 7
.INDENT -4;INVBORD, invalid border 'integer' specified
.P 0;^*Explanation:\* An invalid negative border has been specified. A
positive border zone must be specified.
.P 0;^*User action:\* Re-run the program with valid border specified.

.SKIP
.TP 7
.INDENT -4;INVALFC, invalid Feature Code 'integer' specified
.P 0;^*Explanation:\* An invalid feature-code has been specified either less 
than 0 or greater than 32767. 
.P 0;^*User action:\* Re-run the program with valid feature codes specified.

.SKIP
.TP 7
.INDENT -4;INVALLAY, invalid LAYER 'integer' specified
.P 0;^*Explanation:\* An invalid layer has been specified either less 
than 0 or greater than 32767. 
.P 0;^*User action:\* Re-run the program with valid layer specified.

.SKIP
.TP 7
.INDENT -4;INVTOUCH, invalid TOUCH tolerance 'real' specified
.P 0;^*Explanation:\* A invalid negative touch tolerance has been specified. A
positive touch tolerance is required. 
.P 0;^*User action:\* Re-run the program with valid touch tolerance specified.

.SKIP
.TP 7
.INDENT -4;STHGTNTH, southern neatline greater than northern neatline
.P 0;^*Explanation:\* The user has given the /NEATLINE=(North=real,South=real)
qualifiers but the southern neatline has a greater value than the northern.
.P 0;^*User action:\* Re-run the program with valid neatlines specified.

.SKIP
.TP 7
.INDENT -4;WSTGTEST, western neatline greater than eastern neatline
.P 0;^*Explanation:\* The user has given the /NEATLINE=(West=real,East=real)
qualifiers but the western neatline has a greater value than the eastern.
.P 0;^*User action:\* Re-run the program with valid neatlines specified.

.SKIP
.TP 7
.INDENT -4;TOOMNINTS, too many intersections in FSN 'integer' ('integer')
.P 0;^*Explanation:\* ICHECK has internal workspace to handle up to 1000
intersections or touches within one feature. This limit has been reached
for the specified feature.
.P 0;^*User action:\* If the /TOUCH qualifier has been given check that the
tolerance specified is not too large. If this error is not the result of a
large touch tolerance then splitting the feature using LITES2 should enable
ICHECK to be run again successfully. If this limit causes considerable problems
then consult Laser-Scan. 


.SKIP
.TP 7
.INDENT -4;TOOMNPTS, too many points in FSN 'integer' ('integer')
.P 0;^*Explanation:\* ICHECK can handle IFF features containing up to 10000
points. This limit has been reached for the specified feature.
.P 0;^*User action:\* Split the feature using LITES2 and re-run ICHECK. If
this limit causes considerable problems then consult Laser-Scan.

.SKIP
.TP 7
.INDENT -4;UNEXPEOF, unexpected end of IFF file
.P 0;^*Explanation:\* This message indicates there is something seriously wrong
with the IFF file which has caused immediate termination of the program. ICHECK
has detected the end of the IFF file, but has not detected an IFF 'EJ' entry. 

.P 0;^*User action:\* Use IMEND on the file, which will correctly position the
EOF marker and insert an EJ entry at the end of the file.  Re-run  ICHECK on 
the corrected file.

.PAGE
.LM 0
^*--------------------------------------------------------------------------------\*
.HL 2 ^*MESSAGES (other)\*
.J
.BL
In addition to the above messages which are generated by ICHECK itself, other
messages may be produced by the command line interpreter (CLI) and by Laser-Scan
libraries. In particular, messages may be generated by the IFF library. These
are introduced by '%IFF' and are documented in the IFF library users' guide.
In most cases IFF errors will be due to a corrupt input file, and this should
be the first area of investigation. If the cause of the error cannot be traced
by the user and Laser-Scan are consulted, then the input file should be
preserved to facilitate diagnosis.
.NJ
.PG
