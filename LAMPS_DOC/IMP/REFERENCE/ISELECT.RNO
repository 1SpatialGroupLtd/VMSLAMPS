.LM0
.RM80
.FLAGS BOLD
.PAGE
.NO FILL
^*--------------------------------------------------------------------------------\*^*
^*MODULE####ISELECT\*
.INDEX IFF>feature selection
.INDEX Selection of IFF features
.INDEX ISELECT
.BLANK
^*--------------------------------------------------------------------------------\*
^*REPLACES\*##None, ISELECT is a completely new IMP utility.
.BLANK
^*--------------------------------------------------------------------------------\*
.JUSTIFY
.HEADER LEVEL 2 ^*FUNCTION\*
.INDEX IMP>module functions>feature selection
.JUSTIFY
.LM +10
.P 0;ISELECT creates an IFF file to contain features selected from an
existing IFF file. Features may be selected on the basis of:
.LIST "o"
.LE ;IFF layer,
.LE ;AC (Ancillary Code) type,
.LE ;FSN (Feature Serial Number),
.LE ;feature code, (the first word of an IFF FS (Feature Status) entry),
.LE ;integer height (by default carried in a type 2 AC),
.LE ;real height, (carried in a type 3 AC),
.LE ;height modulus, (real or integer),
.LE ;TCC (Text Component Code), (the first word of a TS (Text Status) entry),
.LE ;any combination of the above.
.END LIST
.INDEX ISELECT>and selection failure
.P 0;If more than one criterion for selection is specified then all specified
criteria have to match for a feature to be copied to the output file. In the
event of no features matching the selection criteria ISELECT issues an error
message and the empty output file is deleted.
.BLANK
.LM -10
^*--------------------------------------------------------------------------------\*
.HEADER LEVEL 2 ^*FORMAT\*
.INDEX ISELECT>command format
.LM +10
.P 0;$ ISELECT input-file-spec  output-file-spec
.NO FILL
.BLANK
.INDEX ISELECT>command qualifiers
.INDEX ISELECT>command qualifiers
^*Command qualifiers                         Defaults\*

/[NO]AC[=integer,...]                      /NOAC
.INDEX ISELECT>command qualifiers>/AC
/EXCLUDE__FC=integer[,...]
.INDEX ISELECT>command qualifiers>/EXCLUDE__FC
/FC=integer[,...]
.INDEX ISELECT>command qualifiers>/FC
/[NO]FSN=integer[,...]                     /NOFSN
.INDEX ISELECT>command qualifiers>/FSN
/[NO]INTEGER__HEIGHT[=integer[,...]]        /NOINTEGER__HEIGHT
.INDEX ISELECT>command qualifiers>/INTEGER__HEIGHT
/[NO]LAYER=integer[,...]                   /NOLAYER
.INDEX ISELECT>command qualifiers>/LAYER
/[NO]LOG                                   /NOLOG
.INDEX ISELECT>command qualifiers>/LOG
/[NO]MODULUS=integer[,...]                 /NOMODULUS
.INDEX ISELECT>command qualifiers>/MODULUS
/[NO]REAL__HEIGHT[=real[,...]]              /NOREAL__HEIGHT
.INDEX ISELECT>command qualifiers>/REAL__HEIGHT
/[NO]TCC[=integer,...]                     /NOTCC
.INDEX ISELECT>command qualifiers>/TCC
.BLANK
.LM -10
^*--------------------------------------------------------------------------------\*
.HEADER LEVEL 2 ^*PROMPTS\*
.INDEX ISELECT>prompts
.LM +10
.NO FILL
__From:      input-file-spec
__To:        output-file-spec
.BLANK
.TP 12
.LM -10
^*--------------------------------------------------------------------------------\*
.HEADER LEVEL 2 ^*PARAMETERS\*
.INDEX ISELECT>parameters
.LM +10
.P -10;input-file-spec
.INDEX ISELECT> and LSL$IF:
.INDEX ISELECT>default file-specs>input file
.P -2;-#specifies the IFF file from which selections are to be made. Any part
of the file specification which is not supplied will be taken from the default
specification 'LSL$IF:IFF.IFF'. 

.TP 10
.P -10;output-file-spec
.INDEX ISELECT>default file-specs>output file
.P -2;-#specifies the IFF file which is to be created. Any part of the file
specification which is not supplied will be taken from the parsed input file
specification. Note that a version number must ^*not\* be specified for
the output file.  If a file with the specified name already exists, a new file
will be created with the version number incremented by one. 

.BLANK
.TP 12
.LM -10
^*--------------------------------------------------------------------------------\*
.HEADER LEVEL 2 ^*COMMAND QUALIFIERS\*
.INDEX ISELECT>command qualifiers
.LM +10
.BLANK
.P -10;/AC[=integer,...]
.I -10;/NOAC
.INDEX ISELECT>command qualifiers>/AC
.P -2;-#enables selection of all features which contain an AC regardless
of AC type. If qualifier arguments are supplied then only ACs of the specified
type will be selected. Ranges of AC types may be specified. AC type numbers
must lie in the range 1 to 32737. A maximum of 1024 AC type numbers may be
specified. 

.TP 9
.P -10;/EXCLUDE__FC=integer[,...]
.INDEX ISELECT>command qualifiers>/EXCLUDE__FC
.P -2;-#excludes selection of all features which have a FC of the specified
numbers. Ranges of FCs may be specified. IFF feature codes must lie in the
range 0 to 32767. A maximum of 1024 feature codes may be specified. 

.TP 9
.P -10;/FC=integer[,...]
.INDEX ISELECT>command qualifiers>/FC
.P -2;-#enables selection of all features which have a FC of the specified
numbers. Ranges of FCs may be specified. IFF feature codes must lie in the
range 0 to 32767. A maximum of 1024 feature codes may be specified. 

.TP 9
.P -10;/FSN=integer[,...]
.I -10;/NOFSN
.INDEX ISELECT>command qualifiers>/FSN
.P -2;-#enables selection of all features which have a FSN of the specified
numbers. Ranges of FSNs may be specified. Feature serial numbers must lie in
the range 1 to 65535. A maximum of 1024 feature serial numbers may be
specified. 

.TP 9
.P -10;/INTEGER__HEIGHT[=int[,...]]
.I -10;/NOINTEGER__HEIGHT
.INDEX ISELECT>command qualifiers>/INTEGER__HEIGHT
.P -2;-#enables selection of all features which have an integer (type 2 AC)
height of the specified values. Ranges of integer heights may be specified.
A maximum of 1024 integer height values may be specified.

.TP 9
.P -10;/LAYER=integer[,...]
.I -10;/NOLAYER
.INDEX ISELECT>command qualifiers>/LAYER
.P -2;-#enables selection of all features which lie in the layers with the
specified values. Ranges of layers may be specified. IFF layer numbers must lie
in the range 1 to 32767. A maximum of 1024 layer numbers may be specified. 

.TP 6
.P -10;/LOG
.I -10;/NOLOG
.INDEX ISELECT>command qualifiers>/LOG
.P -2;-#this will result in supplementary messages being sent to SYS$OUTPUT.
Supplementary messages are generated when a file is successfully opened and a
reassuring message output each time a new IFF layer is found in the IFF file. 

.TP 6
.P -10;/MODULUS=integer[,...]
.I -10;/NOMODULUS
.INDEX ISELECT>command qualifiers>/MODULUS
.P -2;-#enables selection of all features which have a height (type 2 or type 3
AC) exactly divisible by the specified values. This qualifier is only valid
with the /INTEGER__HEIGHT, /REAL__HEIGHT, or /AC qualifier to specify the AC
type holding the height information. The arguments supplied for /MODULUS must
be non-zero positive integer. 


.TP 10
.P -10;/REAL__HEIGHT[=real[,...]]
.I -10;/NOREAL__HEIGHT
.INDEX ISELECT>command qualifiers>/REAL__HEIGHT
.P -2;-#if specified without any arguments /REAL__HEIGHT enables selection of
all features which have an real height (type 3) AC. If arguments are supplied
to this qualifier then only features having a real height (in a type 3 AC) of
the specified values will be selected. Ranges of real heights may be
specified with starting and ending real heights that are separated by a colon,
for example: 
.P 0;$ ISELECT/REAL__HEIGHT=230.7:290.8
.INDEX ISELECT>command qualifiers>/REAL__HEIGHT>example
.P 0;When specifying more than one range of real heights, separate each range
with a comma, for example:
.P 0;$ ISELECT/REAL__HEIGHT=(240.0:240.9,895.7:899.0)
.INDEX ISELECT>command qualifiers>/REAL__HEIGHT>example

.TP 9
.P -10;/TCC[=integer[,...]]
.I -10;/NOTCC
.INDEX ISELECT>command qualifiers>/TCC
.P -2;-#enables selection  of  all  features  which  contain a TS entry
regardless of TCC (Text Component) Code. If qualifier arguments are supplied
then only features that include TS entries with TCC's of the specified codes
will be selected. Ranges of TCC codes may be specified. IFF TCC code values
must lie in the range 0 to 32767. A maximum of 1024 TCC codes may be specified
on the ISELECT command line. 

.LM -10
.BLANK 2
.TP 15
^*--------------------------------------------------------------------------------\*
.HEADER LEVEL 2 ^*RESTRICTIONS\*
.INDEX ISELECT>restrictions
.LM +10
.LIST "o"
.LE ;/MODULUS requires /AC or /INTEGER__HEIGHT or /REAL__HEIGHT
.LE ;/FC and /EXCLUDE__FC can not be used in combination.
.LE ;/NOFC or /NOEXCLUDE__FC are not valid qualifiers.
.END LIST
.LM -10
.BLANK 2
.TP 15
^*--------------------------------------------------------------------------------\*
.HEADER LEVEL 2 ^*DESCRIPTION\*
.INDEX ISELECT>description
.LM +10
.P 0;ISELECT creates a new IFF file containing features selected from an
existing IFF file on the basis of attributes specified by qualifiers on the
command line. Features may be selected on the basis of:
.LIST "o"
.LE ;IFF layer,
.LE ;AC (Ancillary Code) type,
.LE ;FSN (Feature Serial Number),
.LE ;feature code, (the first word of an IFF FS (Feature Status) entry),
.LE ;integer height (by default carried in a type 2 AC),
.LE ;real height, (carried in a type 3 AC),
.LE ;height modulus, (real or integer),
.LE ;TCC (Text Component Code), (the first word of a TS (Text Status) entry),
.LE ;any combination of the above.
.END LIST
.INDEX ISELECT>and selection failure
.P 0;If more than one criterion for selection is specified then all specified
criteria have to match for a feature to be copied to the output file. In the
event of no features matching the selection criteria ISELECT issues an error
message and the empty output file is deleted.

.INDEX ISELECT>and IFF HI entry
.P 0;An IFF HI (HIstory) entry is written to the output file only if the input
IFF file contains an HI entry. Similarly, a type 2 MD entry is only written to
the output file if the input file contains a type 2 MD entry. 

.INDEX ISELECT>and IFF layer 0
.P 0;ISELECT does ^*not\* automatically copy the contents of layer 0 through
to the output IFF file. Layer 0 is used to contain registration mark features
and grids. The user must explicitly select layer 0 with the /LAYER qualifier if
the contents of layer 0 is to be retained in the output file. 
.LM 0
.BLANK
.TP 15
^*--------------------------------------------------------------------------------\*
.INDEX ISELECT>examples
.HEADER LEVEL 2 ^*EXAMPLES\*
.NO FILL
.NO JUSTIFY
$ ^*ISELECT/FC=0/LAYER=123 W009SW W009SW__LAYER__123<CR>\*
 ELAPSED: 00:00:17.54  CPU: 0:00:01.57  BUFIO: 16  DIRIO: 68  FAULTS: 123 
$
.FILL
.LM+10
.JUSTIFY
This is a typical run of ISELECT in a production environment. The qualifiers
specify that selection is restricted to those features within layer 123 of file
LSL$IF:W009SW.IFF which have a feature code of 0. Output of the selected
features is to file LSL$IF:LSL$IF:WO009SE__LAYER__123.IFF. The run has
completed successfully. $STATUS is set to SS$__NORMAL.
.NO JUSTIFY
.NOFILL
.LM-10
.BLANK 2
.TP 15

$ ^*ISELECT/EXCLUDE_FC=0/LAYER=123 W009SW W009SW__LAYER__123<CR>\*
 ELAPSED: 00:00:17.54  CPU: 0:00:01.57  BUFIO: 16  DIRIO: 68  FAULTS: 123 
$
.FILL
.LM+10
.JUSTIFY
This is a typical run of ISELECT in a production environment. The qualifiers
specify that selection is restricted to those features within layer 123 of file
LSL$IF:W009SW.IFF which do not have a feature code of 0. Output of the selected
features is to file LSL$IF:LSL$IF:WO009SE__LAYER__123.IFF. The run has
completed successfully. $STATUS is set to SS$__NORMAL.
.NO JUSTIFY
.NOFILL
.LM-10
.BLANK 2
.TP 15

$ ^*ISELECT/FC=(0:100)/LAYER=(1:99) LESLEY/LOG<CR>\*
__To: LESLEY.SEL
%LSLLIB-I-IFFOPENED, DUA3:[BUREAU.TRIALS]LESLEY.IFF;2 opened for read
%LSLLIB-I-IFFOPENED, DUA3:[BUREAU.TRIALS]LESLEY.SEL;1 opened for write
%ISELECT-I-LAYER, layer 24 found
%ISELECT-I-LAYER, layer 1 found
%ISELECT-I-LAYER, layer 66 found
%ISELECT-I-LAYER, layer 44 found
%ISELECT-I-LAYER, layer 151 found
 ELAPSED: 00:00:21.20  CPU: 0:00:01.77  BUFIO: 16  DIRIO: 70  FAULTS: 95 
$

.FILL
.LM+10
.JUSTIFY
In this example the user has selected the /LOG qualifier. This has resulted in
the output of supplementary messages. Because only one file was specified,
LSL$IF:LESLEY.IFF, the output file specification was prompted for with the
__To: prompt. The file specification LSL$IF:LESLEY.SEL was given in response to
this. A message is output when each file is opened and when a new IFF layer is
found. Only features in the input file which have a feature code in the range 0
to 100 and lie within layer 1 to 99 will be selected. The run completed
successfully. $STATUS is set to SS$__NORMAL.
.NO JUSTIFY
.NOFILL
.LM-10

.BLANK 2
.TP 12
$ ^*ISELECT/LAYER=9/INTEGER__HEIGHT/MODULUS=15<CR>\*
__From: ^*BUR$DISK:[BUREAU.TRIALS.EDITING]CONTOURS7.IFF;1<CR>\*
__To: ^*INDEX__CONTOURS<CR>\*
 ELAPSED: 00:00:03.77  CPU: 0:00:00.49  BUFIO: 2  DIRIO: 7  FAULTS: 111 
$
.FILL
.LM+10
.JUSTIFY
In this example the user has specified that only features which have an integer
height (type 2) AC which is exactly divisible by fifteen and which lie within
layer 9 will be selected from BUR$DISK:[BUREAU.TRIALS.EDITING]CONTOURS7.IFF;1.
Output is to LSL$IF:CONTOURS7.IFF;0. The run completed successfully. $STATUS is
set to SS$__NORMAL. 
.NO JUSTIFY
.NOFILL
.LM-10

.BLANK 2
.TP 15
$ ^*ISELECT/AC=(2,4)/LAYER=(1,3,11,80:200) SHEET__190.IFF;1 SELECTIONS/LOG<CR>\*
%LSLLIB-I-IFFOPENED, DUA3:[BUREAU.TRIALS]SHEET__190.IFF;1 opened for read
%LSLLIB-I-IFFOPENED, DUA3:[BUREAU.TRIALS]SELECTIONS.IFF;1 opened for write
%ISELECT-E-UNEXPEOF, unexpected end of IFF file
 ELAPSED: 00:00:07.54  CPU: 0:00:01.81  BUFIO: 15  DIRIO: 69  FAULTS: 128 
$
.FILL
.LM+10
.JUSTIFY
In this example only features which lie within the specified layers and which
have type 2 and 4 ACs were to be selected from LSL$IF:SHEET__190.IFF;1. Output
was to have been to LSL$IF:SELECTIONS.IFF;1. The run failed because the input
file, LSL$IF:SHEET__190.IFF;1 is corrupt. The output file
LSL$IF:SELECTIONS.IFF;1 will be be deleted. $STATUS is set to SS$__ABORT. 

.P 0;The input file LSL$IF:SHEET__190.IFF;1 may only lack an EJ entry,
or it may be more seriously broken. Use IPATCH to determine whether
the file lacks an EJ entry. If it does, use IMEND to try to correctly terminate
the file. Re-run ISELECT. If the problem persists then the internal structure
of the IFF file is probably corrupt. Try reading it into LITES2 and then EXIT
from LITES2. Re-run ISELECT.
.NO JUSTIFY 
.NOFILL
.LM-10

.BLANK 2
.TP 15
$ ^*ISELECT/AC=(2,4)/LAYER=(1,3,11,80:200)<CR>\*
__From: ^*GROUND__RENT__ISOLINES/REAL__HEIGHT=(99.Y:800.0)<CR>\*
__To: ^*GROUND__RENT__ISOLINES<CR>\*
%LSLLIB-E-INVALSPEC, invalid syntax for value specification
 _\9.Y_\
 ELAPSED: 00:00:01.65  CPU: 0:00:00.25  BUFIO: 2  DIRIO: 0  FAULTS: 100 
$
.FILL
.LM+10
.JUSTIFY
This example shows the use of the /REAL__HEIGHT qualifier to specify selection
based a range of height values within type 3 (real height value) ACs. The
run failed because a 'Y' was typed instead of a numeric value as part of
the range specification. $STATUS is set to SS$__ABORT. Re-enter the command
line. 
.NO JUSTIFY
.NOFILL
.LM-10

.BLANK 2
.TP 15
$ ^*ISELECT/AC=(2,4)/LAYER=(1,3,11,80:200) FE/MODULUS=10<CR>\*
__To: ^*FE_SEL<CR>\*
%LSLLIB-E-IFFOPEN, error opening input file "LSL$IF:FE.IFF;0" for read
-RMS-F-FNF, file not found
 ELAPSED: 00:00:03.14  CPU: 0:00:00.37  BUFIO: 4  DIRIO: 2  FAULTS: 81 
$
.FILL
.LM+10
.JUSTIFY
In this example the input file does not exist or is not in the directory to
which LSL$IF: has been assigned.  $STATUS is set to SS$__ABORT. Check the file
specification for errors, check that logical name LSL$IF: has been assigned to
the correct device and directory. 
.NO JUSTIFY
.NOFILL
.LM-10

.PAGE
.LM 0
^*--------------------------------------------------------------------------------\*
.NOKEEP
.FILL
.JUSTIFY
.INDEX ISELECT>messages (informational)
.HEADER LEVEL 2 ^*MESSAGES (informational)\*
.BLANK
These messages give information only, and require no immediate action by the
user (except perhaps to verify that the correct options have been selected).
Generally they will only appear if /LOG has been specified on the command line.
.NO JUSTIFY
.TP 6
.BLANK
.LM+4
.I-4;DELETE, deleting empty output file 'file-spec'
.JUSTIFY
.FILL
.P 0;^*Explanation:\* ISELECT is to delete the specified output IFF file
because none of the selections made from the input file matched. The output
IFF file is therefore empty and useless.
.P 0;^*User action:\* Determine why none of the selections matched data in the
input IFF file. Re-run ISELECT with new selections or use a different input IFF
file. 
.NO JUSTIFY
.SKIP
.TP 6
.INDENT -4;LAYER, layer 'integer' found
.JUSTIFY
.P 0;^*Explanation:\* The specified layer has been  found in the input file and
is being processed.
.P 0;^*User action:\* None.
.PAGE
.LM-4
^*--------------------------------------------------------------------------------\*
.HEADER LEVEL 2 ^*MESSAGES (error)\*
.INDEX ISELECT>messages (error)
.P 0;These messages indicate an error in processing which has caused the
program to terminate. The most likely causes are a corrupt or otherwise invalid
input IFF file, or an error related to command line processing and file
manipulation. With the exception of the IFF file closure errors, no output file
will be produced if one of these error messages is output. 
.NO JUSTIFY
.BLANK
.LM+4
.I-4;ERRCLINFL, error closing input IFF file 'file-spec'
.JUSTIFY
.P 0;^*Explanation:\* The specified file cannot be closed. This message will
be accompanied by another giving the reason for the failure.
.JUSTIFY
.P 0;^*User action:\* The accompanying message should indicate the cause of the
error. If the problem continues, notify the system manager. 
.BLANK
.NO JUSTIFY
.I-4;ERRCLOUTFL, error closing output IFF file 'file-spec'
.JUSTIFY
.P 0;^*Explanation:\* The specified file cannot be closed. This message will
be accompanied by another giving the reason for the failure.
.JUSTIFY
.P 0;^*User action:\* The accompanying message should indicate the cause of the
error. If the problem continues, notify the system manager. 

.TP 8
.SKIP
.INDENT -4;IHNOTTWO, /INTEGER__HEIGHT selected without /AC=2
.JUSTIFY
.P 0;^*Explanation:\* You have specified the /INTEGER__HEIGHT command qualifier
and /AC=[n...]. Unfortunately you have excluded type 2 ACs from the argument
list of /AC resulting in conflicting requirements from the two qualifiers. No
matches for /INTEGER__HEIGHT will be found, although there may be features
containing type 2 integer height ACs in the input file. 
.JUSTIFY
.P 0;^*User action:\* Re-enter the command line, ensuring that the /AC
qualifier contains type 2 ACs in its argument list. Alternatively, if you
really only require those features which have type 2 height Acs omit the /AC
qualifier altogether. 

.NO JUSTIFY
.BLANK
.TEST PAGE 12
.INDENT -4;INVALFC, invalid /AC argument  - "'integer'" is outside range 0 to 32767
.P 0;^*Explanation:\* IFF AC type numbers lie in the range 0 to 32767.
.P 0;^*User action:\* Respecify the ISELECT command line and ensure that the
arguments for the /AC qualifier lies within the specified range.
.NO JUSTIFY
.BLANK
.TEST PAGE 12
.INDENT -4;INVALFC, invalid /FC argument  - "'integer'" is outside range 0 to 32767
.P 0;^*Explanation:\* IFF feature codes lie in the range 0 to 32767.
.P 0;^*User action:\* Respecify the ISELECT command line and ensure that the
arguments for the /FC qualifier lies within the specified range.
.NO JUSTIFY
.BLANK
.TEST PAGE 12
.INDENT -4;INVALFSN, invalid /FSN argument  - "'integer'" is outside range 0 to 32767
.P 0;^*Explanation:\* IFF Feature serial numbers lie in the range 0 to 65535.
.P 0;^*User action:\* Respecify the ISELECT command line and ensure that the
arguments for the /FSN qualifier lies within the specified range.
.NO JUSTIFY
.BLANK
.TEST PAGE 12
.INDENT -4;INVALLAY, invalid /LAYER argument  - "'integer'" is outside range 0 to 32767
.P 0;^*Explanation:\* IFF layer numbers lie in the range 0 to 32767.
.P 0;^*User action:\* Respecify the ISELECT command line and ensure that the
arguments for the /LAYER  qualifier lies within the specified range.
.NO JUSTIFY
.BLANK
.TEST PAGE 12
.INDENT -4;INVALMOD, invalid /MODULUS argument  - must be integer greater than 0
.P 0;^*Explanation:\* IFF layer numbers lie in the range 0 to 32767.
.P 0;^*User action:\* Respecify the ISELECT command line and ensure that the
arguments for the /LAYER  qualifier lies within the specified range.

.TP 8
.SKIP
.INDENT -4;NOHTACMOD, height ACs (AC 2 and 3) deselected for /MODULUS
.JUSTIFY
.P 0;^*Explanation:\* You have selected the /MODULUS qualifier but have
excluded all type 2 and 3 height Acs by use of the /AC qualifier.
.P 0;^*User action:\* Re-enter the command line, ensuring that the /AC
qualifier contains type 2 and type 3 ACs in its argument list. Alternatively,
if you really only require those features which have type 2 or 3 height Acs
omit the /AC qualifier altogether.

.TP 4
.SKIP
.INDENT -4;RHNOTTHREE, /REAL__HEIGHT selected without /AC=3
.JUSTIFY
.P 0;^*Explanation:\* You have specified the /REAL__HEIGHT command qualifier
and /AC=[n...]. Unfortunately you have excluded type 3 ACs from the argument
list of /AC resulting in conflicting requirements from the two qualifiers. No
matches for /REAL__HEIGHT will be found, although there may be features
containing type 3 real height ACs in the input file.
.JUSTIFY
.P 0;^*User action:\* Re-enter the command line, ensuring that the /AC
qualifier contains type 3 ACs in its argument list. Alternatively, if you
really only require those features which have type 3 height Acs omit the /AC
qualifier altogether. 


.SKIP
.TP 9
.INDENT -4;UNEXPEOF, unexpected end of IFF file
.P 0;^*Explanation:\* The input IFF file terminated before an IFF EJ 
entry was encountered.
.P 0;^*User action:\* Use IPATCH to determine whether the file has an EJ entry.
If the file lacks an EJ entry use IMEND to correctly terminate the file.
Try re-running the IMP utility which failed. If the problem persists then the
internal structure of the IFF file is probably corrupt. Try reading it into
LITES2 and then EXIT from LITES2. Re-run the IMP utility. 

.PAGE
.LM 0
^*--------------------------------------------------------------------------------\*
.HEADER LEVEL 2 ^*MESSAGES (other)\*
.INDEX ISELECT>messages (other)
.BLANK
.FILL
.JUSTIFY
.P 0;In addition to the above messages which are generated by ISELECT itself,
other messages may be produced by the command line interpreter (CLI) and by
Laser-Scan libraries.  In particular,  messages may be generated by the IFF
library.  These are introduced by  '%IFF'  and are documented in the IFF
library users' guide. In most cases IFF errors will be due to a corrupt input
file,  and this should be the first area of investigation.   If the cause of
the error cannot be traced by the user and Laser-Scan are consulted,  then the
input file should be preserved to facilitate diagnosis. 
