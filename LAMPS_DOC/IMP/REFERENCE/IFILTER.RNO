.PAGE
.NO FILL
^*--------------------------------------------------------------------------------\*
^*MODULE####IFILTER\*
.BLANK
^*--------------------------------------------------------------------------------\*
^*REPLACES\*##A variety of Laser-Scan smoothing and filtering programs.
.BLANK
^*--------------------------------------------------------------------------------\*
.HL 2 ^*FUNCTION\*
.LM +10
.FILL
.INDEX IMP>module functions>interpolation
.INDEX IMP>module functions>filtering

.BLANK
.P 0;IFILTER is designed to smooth or filter, smooth and then filter, or 
filter and then smooth IFF coordinate strings using one of the following
algorithms: 

.LM +8

.BLANK
.P 0;FILTERS:
.LIST
.DISPLAY ELEMENTS "(",RL,")"
.LM +5
.LE ;Laser-Scan "BUNCH" least squares filter,
.INDEX BUNCH filter
.INDEX Filters> BUNCH
.INDEX DOUGLAS-PEUCKER filter
.INDEX Filters> DOUGLAS-PEUCKER
.LE ;Douglas-Peucker filter
.LM -5
.END LIST

.P 0;SMOOTHING OPTIONS:
.LIST
.DISPLAY ELEMENTS "(",RL,")"
.LM +5
.LE ;Linear interpolation,
.INDEX Linear interpolation
.INDEX Interpolation> linear
.LE ;Akima cubic interpolation,
.INDEX Akima interpolation
.INDEX Interpolation> Akima
.LE ;McConalogue cubic interpolation
.INDEX McConalogue interpolation
.INDEX Interpolation> McConalogue
.LE ;Bezier interpolation
.INDEX Bezier interpolation
.INDEX Interpolation> Bezier
.LM -5
.bl
.nofill
^*+----------------------------------------------------+
|                     WARNING                        |
|IFILTER produces only (X,Y) coordinate data in the  | 
|output file. Non-planimetric per-point attributes   |
|held in CB data columns are not retained.           |
+----------------------------------------------------+\*
.fill
.END LIST

.LM -8
.BLANK
.LEFT MARGIN 0
.NO FILL
^*--------------------------------------------------------------------------------\*
.FILL
.HL 2 ^*FORMAT\*
.LM+10
.NOFILL

$ IFILTER input-file-spec output-file-spec

^*Command qualifiers                       Defaults\*
.INDEX IFILTER>command qualifiers

/[NO]AKIMA=(tolerance-spec[,...])        /NOAKIMA
.INDEX IFILTER>command qualifiers>/AKIMA
/[NO]BEZIER=(tolerance-spec[,...])       /NOBEZIER
.INDEX IFILTER>command qualifiers>/BEZIER
/[NO]BUNCH=(tolerance-spec[,...])        /NOBUNCH
.INDEX IFILTER>command qualifiers>/BUNCH
/[NO]DP[=tolerance-spec]                 /DP
.INDEX IFILTER>command qualifiers>/DP
/FC=integer[,...]                        All feature codes.
.INDEX IFILTER>command qualifiers>/FC
/FILTER__FIRST                            Smooth before filtering.
.INDEX IFILTER>command qualifiers/FILTER__FIRST
/LAYER=integer[,...]                     All layers.
.INDEX IFILTER>command qualifiers>/LAYER
/[NO]LINEAR[=tolerance-spec]             /NOLINEAR
.INDEX IFILTER>command qualifiers>/LINEAR
/[NO]LOG                                 /NOLOG
.INDEX IFILTER>command qualifiers>/LOG
/[NO]MCCONALOGUE=(tolerance-spec[,...])  /NOMCCONALOGUE
.INDEX IFILTER>command qualifiers>/MCCONALOGUE

.NOFILL
.LM -10
.BLANK
.TP 10
^*--------------------------------------------------------------------------------\*
.HL 2 ^*PROMPT\*
.LM +10
.NO FILL
.INDEX IFILTER>prompt
__IFF-file:            input-file-spec
__Filtered-IFF-file:   output-file-spec
.LM -10
.BLANK
.TP 10
^*--------------------------------------------------------------------------------\*
.HL 2 ^*PARAMETERS\*
.BLANK
.LM +10
.INDEX IFILTER>parameters
.P -10;input-file-spec
.INDEX IFILTER> and LSL$IF:
.INDEX IFILTER>default file-specs>input file
.P -2;- specifies the IFF file which is to be filtered. Any part of the
file specification which is not supplied will be taken from the default
specification 'LSL$IF:IFF.IFF'. 

.TP 10
.INDEX IFILTER> and LSL$IF:
.INDEX IFILTER>default file-specs>output file
.P -10;output-file-spec
.P -2;- specifies the IFF file which is to be created to contain the smoothed
or filtered data. Any part of the file specification which is not explicitly
given will
be taken from the parsed input specification. Note that a version number must 
^*not\* be specified for the output IFF file.  If a file with the specified
name already exists a new file will be created with the version number
incremented by one. 

.TP 10
.BLANK
.LM 0
^*--------------------------------------------------------------------------------\*
.HL 2 ^*COMMAND QUALIFIERS\*
.LM +10
.INDEX IFILTER> command qualifiers
.TP 9
.BLANK
.P -10;/AKIMA=(SEPARATION:real,CHORD:real,DEVIATION:real)
.BR
.I -10;/NOAKIMA
.INDEX IFILTER> command qualifiers>/AKIMA
.P -2;-#causes Akima cubic interpolation (smoothing) to be applied to the
specified coordinate strings in the input IFF file.
The IFF strings may either be taken directly from the input file, or they
may first be passed through one of the filter options.
If neither filter option is selected, or if /FILTER__FIRST is in effect, then 
the data resulting from the Akima interpolation are written directly to the 
output file.
.P 0
Not all of the keywords are necessary, but at least one must be given.
SEPARATION (the minimum distance between output data points) and CHORD (the
arc to chord distance between output data points) must both be specified in
the same units as the data in the IFF file, and DEVIATION (the angular
deviation between output data points) must be specified in radians. Those not
specified default to 0.0. 
.P 0
For further details on Akima interpolation and an explanation of the keywords,
see the description section below.  Some diagrams (Figs 1,2,3) illustrating
the effect of Akima interpolation are included in the Examples section.

.TP 9
.BLANK
.P -10;/BEZIER=(CHORD:real,HUG:real,[NO]AVERAGE)
.BR
.I -10;/NOBEZIER
.INDEX IFILTER> command qualifiers>/BEZIER
.P -2;-#causes Bezier interpolation (smoothing) to be applied to the specified
coordinate strings in the input IFF file. The IFF strings may either be taken
directly from the input file, or they may first be passed through one of the
filter options. If neither filter option is selected, or if /FILTER__FIRST is
in effect, then the data resulting from the BEZIER interpolation are written
directly to the output file. 
.P 0
CHORD is the arc to chord distance between output data points, and HUG is the
corner hug tolerance. If CHORD is not specified a default value of 0.05 is
used; if HUG is not specified a default hug tolerance of 1.0 is used. The
minimum HUG tolerance is 0 and the maximum 1. 
.P 0
AVERAGE determines whether a series of new points that define a medial line
through the original data points are generated before interpolation.  This
option is used to remove jagged edges from the input data, and should be
applied to data such as that produced by the TVES module VECTORISE with its
characteristic 'staircase' appearance. The generation of medial data points is
by default not performed (ie. NOAVERAGE). 
.P 0
For further details on BEZIER interpolation see the description section below.
Some diagrams (Figs 4,5) illustrating the effect of BEZIER interpolation are
included in the Examples section. 

.TP 9
.BLANK
.INDEX Filters> BUNCH
.P -10;/BUNCH=(MIN__SEP:real,MAX__SEP:real,LATERAL:real,RESOLUTION:real])
.BR
.I -10;/NOBUNCH
.INDEX IFILTER> command qualifiers> /BUNCH
.P -2;-#causes IFILTER to apply the Laser-Scan BUNCH (least squares) filter to
the specified coordinate strings in the input IFF file. The IFF strings may
either be taken directly from the input file or they may have been passed
through one of the interpolation options. The data resulting from application
of the BUNCH filter are written directly to the output file, except when
/FILTER__FIRST is in effect and interpolation follows. 
.INDEX IFILTER> measurement units
.P 0
Values for the keywords must be specified in the same units as the data in the
IFF file. MIN__SEP (the minimum point separation after filtering) and LATERAL
(the lateral threshold distance) are compulsory, while MAX__SEP (the maximum
point separation after filtering) defaults to 0.0 which is interpreted as
'infinity'. Note, since BUNCH is a filter, no new points will be generated if
the distance between input points is greater than MAX__SEP.  RESOLUTION is the
'resolution' of the data coordinate system.  Two or more points are considered
to be coincident, if their x component and y component separations are both
less than the 'resolution' prior to filtering.  This parameter defaults to the
map range divided by 1600 (which is equivalent to 0.25mm on the sheet for OS
1/1250 and 1/2500 maps). 
.P 0
For a description of the BUNCH filter and further explanation of the keywords, 
see the description section below. Some diagrams (Figs 6,7,8) illustrating
the effect of BUNCH filter are included in the Examples section.


.TP 9
.BLANK
.P -10;/DP[=LATERAL:real]
.BR
.I -10;/NODP
.INDEX IFILTER> command qualifiers>/DP
.INDEX Filters> DOUGLAS-PEUCKER
.P -2;-#by default IFILTER will apply the Douglas-Peucker filter either directly
to strings from the input file or to those strings after they have been
interpolated by one of the interpolation options. 
The data resulting from application of the Douglas-Peucker filter are written 
directly to the output file, except when /FILTER__FIRST is in effect and 
interpolation follows.
.P 0
/NODP causes IFILTER
not to apply the Douglas-Peucker filter. The Douglas-Peucker filter is also not
applied if the BUNCH filter is selected. It is not possible to use /NODP if no
other smoothing or filtering qualifiers have been specified. 
.P 0
LATERAL is the shortest distance by which the new line will deviate laterally 
from the original line, and must be specified in the same units as the 
data in the IFF file. If this keyword is not given, it defaults to the map 
range divided by 1600 (this is equivalent to 0.25mm on the sheet for OS 1/1250 
and 1/2500 maps). The lateral tolerance (whether specified or calculated by 
default) must be greater than 0.005, otherwise that value will be used 
instead. 
.P 0
For a description of the Douglas-Peucker filter see the description section
below. A diagram (Fig 9) illustrating the effect of Douglas-Peucker
filter is included in the Examples section. 


.TP 9
.BLANK
.INDEX IFILTER> command qualifiers> /BLANK
.P -10;/FC=integer[,...]
.P -2;-#causes IFILTER to process only those IFF features which have the
specified feature code(s). The /FC
qualifier will accept single, multiple or ranges of feature code arguments.
Ranges may be specified with starting and ending feature codes that are
separated by a colon, for example /FC=56:58. When specifying more than one
range of feature codes, separate each range with a comma, for example
/FC=(1:5,56:89). The maximum number of feature codes which may be specified is
1024. 

.TP 9
.BLANK
.P -10;/FILTER__FIRST
.INDEX IFILTER> command qualifiers> /FILTER__FIRST
.P -2;- this causes the relevant filtering algorithm to be applied to coordinate
strings before interpolation. The default action is for interpolation to be 
applied first. This qualifier is only valid if both filtering and smoothing 
are to be carried out.

.TP 9
.BLANK
.P -10;/LAYER=integer[,...]
.INDEX IFILTER> command qualifiers> /LAYER
.P -2;- causes IFILTER to process only those IFF features which lie within the
specified layer(s). /LAYER
will accept single, multiple or ranges of layer arguments. Ranges may be
specified with starting and ending layer numbers that are separated by a colon,
for example /LAYER=56:58. When specifying more than one range of layer numbers,
separate each range with a comma, for example /LAYER=(1:5,56:89). The maximum
number of layers which may be specified is 1024. 

.TP 9
.BLANK
.P -10;/LINEAR[=SEPARATION:real]
.BR
.I -10;/NOLINEAR
.INDEX IFILTER> command qualifiers> /LINEAR
.P -2;-#causes IFILTER to apply linear interpolation to the specified coordinate
strings in the input IFF file. 
The IFF strings may either be taken directly from the input file, or they
may first be passed through one of the filter options.
If neither filter option is selected, or if /FILTER__FIRST is in effect, then 
the data resulting from the linear interpolation are written directly to the 
output file.
.P 0
SEPARATION is the minimum distance required between output data points and
must be specified in the measurement units of the data coordinate system. If
this keyword is not given, one point will be inserted in the middle of every
line segment regardless of segment length. 
.P 0
Note that linear interpolation will not be carried out on two-point coordinate
strings, whether taken directly from the input file or generated as a result
of filtering.
.P 0
Note also that if /FILTER__FIRST has not been specified it is important to
give the /NODP qualifier. Otherwise the additional points generated by
the /LINEAR option will immediately be filtered away again.

.TP 9
.BLANK
.P -10;/LOG
.BR
.I -10;/NOLOG
.INDEX IFILTER> command qualifiers> /LOG
.P -2;- causes supplementary messages to be sent to SYS$OUTPUT.
Supplementary messages are generated when a file is successfully 
opened, and a reassuring message is output each time a new IFF layer is 
encountered in the input file. 

.TP 9
.BLANK
.P -10;/MCCONALOGUE=(SEPARATION:real,CHORD:real,DEVIATION:real)
.BR
.I -10;/NOMCCONALOGUE
.INDEX IFILTER> command qualifiers> /MCCONALOGUE
.P -2;-#causes McConalogue cubic interpolation to be applied to the specified
coordinate strings in the input IFF file.
The IFF strings may either be taken directly from the input file, or they
may first be passed through one of the filter options.
If neither filter option is selected, or if /FILTER__FIRST is in effect, then 
the data resulting from the McConalogue interpolation are written directly to 
the output file.
.P 0
Not all of the keywords are necessary, but at least one must be given.
SEPARATION (the distance between output data points) and CHORD (the arc to
chord distance between output data points) must both be specified in the same
units as the data in the IFF file, and DEVIATION (the angular deviation) must
be specified in radians. Those not specified default to 0.0. 
.P 0
For further details on McConalogue interpolation and an explanation of the
keywords, see the description section below. Some diagrams (Figs 10,11,12)
illustrating the effect of McConalogue interpolation are included in the
Examples section. 


.LM -10
.BLANK
.TP 10
^*--------------------------------------------------------------------------------\*
.HL 2 ^*RESTRICTIONS\*
.LM +10
.FILL
.INDEX IFILTER>restrictions

.LIST 'o'
.LE
/AKIMA, /BEZIER, /MCCONALOGUE and /LINEAR are mutually exclusive
.LE
/BUNCH and /DP are mutually exclusive
.LE
/NODP requires one of /AKIMA, /BEZIER, /MCCONALOGUE, /LINEAR or /BUNCH
.LE
/FILTER__FIRST requires one of /AKIMA, /BEZIER, /MCCONALOGUE or /LINEAR, as
well as either /DP or /BUNCH 
.END LIST

.LM 0
.TP 10
.BLANK
^*-------------------------------------------------------------------------------\*
.HL 2 ^*DESCRIPTION\*

.LM +10
.HL 3 ^*General\*
.FILL
.INDEX IFILTER> description

.BLANK
.P 0;IFILTER is designed to smooth or filter, smooth and then filter, or filter
and then smooth two-dimensional coordinate strings held as IFF ST entries. The
program offers two filter options (Douglas-Peucker and BUNCH least squares),
and four interpolation options (Akima cubic, Bezier polynomial, McConalogue
cubic and linear). IFILTER may be used to smooth or filter data selectively on
the basis of layer and/or feature code. All features are copied to the output
file, but only those selected will be smoothed or filtered. 
.TEST PAGE 12
.INDEX Filters> BUNCH
.INDEX Filters> DOUGLAS-PEUCKER
.P 0
IFILTER copies through to the output file the following, without reference to 
any smoothing or filtering options selected :-
.LIST 0,"-"
.BLANK
.LM +5
.INDEX IFILTER> and string length
.LE; all input features having 3 points or less.
.INDEX IFILTER> and IFF layer 0
.LE; all features which lie in IFF layer 0 
.LM -5
.END LIST 
.bl
.nofill
^*+----------------------------------------------------+
|                     WARNING                        |
|IFILTER produces only (X,Y) coordinate data in the  | 
|output file. Non-planimetric per-point attributes   |
|held in CB data columns is not retained.            |
+----------------------------------------------------+\*
.fill
.BLANK
.HL 3 ^*BUNCH Filter\*
.INDEX Filters> BUNCH
.INDEX Filters> BUNCH> description
.P 0
The BUNCH filter uses tolerances related to 'best fit' lines through the
incoming coordinate strings. The filter performs successive least squares fits
through the existing
data points until a point lies more than the ^*^&lateral\&\* threshold 
distance (specified using the LATERAL keyword) from the
least squares line. This causes a provisional master point to be generated.
A new fit is then
conducted forwards from the last master point, until the lateral tolerance
is again exceeded. The last provisional point is tidied up into a true
master point and the intervening points are rejected. The process is
repeated until the end of the coordinate string is reached. If the lateral
tolerance is large, it will rarely be exceeded and many points will be
thrown away. 

.INDEX Filters> BUNCH> parameters
.P 0
The number of points which are kept as master points or are
thrown away is additionally controlled by the minimum and maximum  
separation (MIN__SEP and MAX__SEP) keywords, where MIN__SEP is mandatory but
MAX__SEP may be defaulted. The meaning of these keywords is as follows:

.LIST 0,"o"
.BLANK
.LE; the minimum separation is the shortest distance allowed between successive 
master points ^*^&along\&\* the line. If this is set to a large value,
more points will be thrown away giving increasingly angular linework. 
.BLANK
.LE; the maximum separation is the distance travelled ^*^&along\&\* the line 
before IFILTER must force out a master point. A large value will result in very 
sparse points along straight and nearly straight lines. A maximum separation 
of 0.0 (the default) is equivalent to one of infinity, and means that no 
points will be forced out purely on distance criteria (i.e. a straight line
will have two points).
.END LIST

The maximum separation must be greater than or equal to the minimum separation 
which must be greater than or equal to the lateral threshold distance. 

.P 0
The optional RESOLUTION keyword specifies the resolution of the data
coordinate system. Two or more points are considered to be coincident, if
their x component and y component separations are both less than the
'resolution' prior to filtering.  This being the case, then only one of them
will contribute to the least squares line fitting process (the rest are
discarded). 

.P 0
.INDEX Filters> BUNCH> and smoothing
Strictly, smoothing is not to be recommended after the BUNCH filter has been
applied.
The reason for this is that it can result in biased data. The BUNCH filter 
uses a least squares algorithm to produce coordinates which, when joined by
straight
lines, approximate the original data in a least squares sense. This typically
means, for example, that on curved lines all resulting points tend
slightly towards the ^*outside\* of the original curve. Application of one of
the curve interpolation algorithms will then result in a new curve biased
towards the outside of the original one.


.BLANK 2
.HL 3 ^*Douglas-Peucker Filter\*
.INDEX Filters> DOUGLAS-PEUCKER
.INDEX Filters> DOUGLAS-PEUCKER> parameters
.INDEX Filters> DOUGLAS-PEUCKER> description

.P 0
The Douglas-Peucker filter works by joining the first and last points of the 
line being filtered with a straight line. The longest perpendicular to this 
straight line which cuts the line being filtered is then found. The two parts 
of the original line are then treated separately and the same process applied 
to each of them. This is repeated for successively smaller sections of the 
original line until any further perpendiculars which might be derived would be 
shorter than the lateral tolerance (specified by the LATERAL keyword). The new 
line consists of the succession of points where the perpendiculars cut the 
original line.

.BLANK 2
.HL 3 ^*Curve Interpolation\*
.INDEX Interpolation> Akima
.INDEX Interpolation> Bezier
.INDEX Interpolation> McConalogue
.P 0
Three curve interpolation methods are available; these are Akima, Bezier
and McConalogue:
.LIST 0,"o"
.BLANK
.LE; Akima is a cubic arc blending method which preserves linearity if possible.
.BLANK
.LE; Bezier is a polynomial algorithm.
.BLANK
.LE; McConalogue is a quadratic arc blending method.
.END LIST

Akima's method tends to give a much 'tighter' curve than McConalogue's, and
unwanted inflection points are rare. On the other hand, that tightness means
that the second derivative discontinuities tend to be greater and may be
visible.

.INDEX IFILTER>Interpolation> qualifier arguments
.P 0
The values specified for the three qualifier keywords control the density of 
interpolated points.
The approximate separation of points (d) is given by:

.P +5
d = *a + 2_*SQRT(2*b*r) + *c*r######('*r' is radius of curvature)

.P 0
which means (if other coefficients were zero) that

.LIST 0,"-"
.BLANK
.LE; *a  gives a constant separation of '*a' IFF units 
.BR; (SEPARATION keyword)
.BL
.LE; *b  gives a constant 'arc to chord' distance of '*b' IFF units 
.BR; (CHORD keyword)
.BL
.LE; *c  gives a constant angular deviation of '*c' radians 
.BR; (DEVIATION keyword)
.END LIST

Typically only one of the keywords need be given (SEPARATION is usually
sufficient), however the flexibility is provided to enable precise
results to be obtained by experienced users.

.P 0
LITES2 users should note that these three coefficients correspond to those 
specified in the TOLERANCE CURDRAW and TOLERANCE CURGEN commands. The 
difference in LITES2 is that the coefficients are given in mm, not IFF units.

.P 0
Bezier is a polynomial interpolation algorithm which is widely used in
interactive graphics to obtain approximate solutions to curve fitting problems.
The Bezier algorithm varies from the Akima and McConalogue algorithms, in that
the resulting curve does not pass exactly through the original data points,
since the curve is generated from a set of guide points derived from the
original data. This fact should be appreciated when applying the algorithm to
cartographic data. 
.P 0
The Bezier CHORD and HUG tolerance keywords control the shape of the
interpolated curve and the number of points generated.  The HUG tolerance
value should be in the range 0 to 1.  When HUG is 0.0, smoothing will be
minimal with the output line being approximately the same as the input.
When HUG is 1.0 smoothing will be greater.  The CHORD tolerance value is
dominant in determining the final shape of the curve.
.P 0
The AVERAGE keyword is applicable only to the BEZIER qualifier, and determines
whether a set of points defining a medial line through the original data are
first generated.  If the option is specified, it is the medial points that are
passed to the Bezier algorithm, and from which guide points are generated. 
The keyword should be specified if interpolation is being applied to
data generated from the TVES module VECTORISE, or the original data shows
excessive jaggedness.
.BLANK 2
.HL 3 ^*IFF Files with Junction Structure\*
.P 0; If the input IFF file contains junction structure entries, IFILTER will
generate a filtered file with a junction structure.  IFILTER assumes that a
node is recorded at the start and end of each feature.  If features exist in
the input file that contain more than 2 node (JP) entries, only the JP entries
relating to the start and end nodes are preserved in the output file.
.P 0
If the AVERAGE keyword is used with the BEZIER qualifier, then IFILTER ensures
the node points in the input junction structure file, are preserved in the
output file.  The same restriction is not applied if the input file
contains no junction structure.
.LM 0
.PAGE
.BLANK
.NO FILL
^*--------------------------------------------------------------------------------\*
.HL 2 ^*EXAMPLES\*
.INDEX IFILTER> EXAMPLES
.BLANK
.NO FILL
$ ^*IFILTER CCB2 NEW__CCB2<CR>\*
 ELAPSED:    0 00:00:07.91  CPU: 0:00:03.20  BUFIO: 5  DIRIO: 54  FAULTS: 152 
$
.FILL
.LM +8

.INDEX IFILTER> EXAMPLES> Douglas-Peucker
.P 0
This example shows a successful run of IFILTER in default mode, i.e. applying
only the Douglas-Peucker filter to coordinate strings in LSL$IF:CCB2.IFF. The
filtered data have been written to LSL$IF:NEW__CCB2.IFF.

.LM -8
.BLANK 2
.NO FILL
$ ^*IFILTER/MCCONALOGUE=(SEPARATION:0.3,CHORD:0.2,DEVIATION:0.15)/NODP -<CR>
__$	CCB2 NEW__CCB2<CR>\*
 ELAPSED:    0 00:00:13.21  CPU: 0:00:03.37  BUFIO: 4  DIRIO: 53  FAULTS: 109 
$
.FILL
.LM +8
.INDEX IFILTER> EXAMPLES> McConalogue interpolation

.P 0
In this example IFILTER has successfully applied the McConalogue curve 
interpolation algorithm to coordinate strings in LSL$IF:CCB2.IFF. Filtering
has been suppressed and the interpolated data output to LSL$IF:NEW__CCB2.IFF.

.LM -8
.BLANK 2
.NO FILL
$ ^*IFILTER/AKI=(SEP:0.3,CHO:0.2)/BUN=(MIN:0.3,LAT:0.2)/LAY=(1,2)/LOG -<CR>
__$	OEEPECON CONTOURS1<CR>\*
%LSLLIB-I-IFFOPENED, DUA0:[LSL.IFF]OEEPECON.IFF;12 opened for read
%LSLLIB-I-IFFOPENED, DUA0:[LSL.IFF]CONTOURS1.IFF;1 opened for write
%IFILT-I-LAYERPROC, layer 1 being processed
%IFILT-I-FEATCOPY, FSN 45 (3) copied without modification
%IFILT-I-FEATCOPY, FSN 71 (12) copied without modification
%IFILT-I-FEATCOPY, FSN 135 (17) copied without modification
%IFILT-I-LAYERPROC, layer 2 being processed
%IFILT-I-FEATCOPY, FSN 158 (25) copied without modification
%IFILT-I-FEATCOPY, FSN 159 (26) copied without modification
%IFILT-I-FEATCOPY, FSN 160 (27) copied without modification
%IFILT-I-FEATCOPY, FSN 161 (28) copied without modification
%IFILT-I-FEATCOPY, FSN 162 (29) copied without modification
%IFILT-I-FEATCOPY, FSN 163 (30) copied without modification
%IFILT-I-FEATCOPY, FSN 164 (31) copied without modification
%IFILT-I-LAYERCOPY, layer 32 being copied without modification
%IFILT-I-FEATCOPY, FSN 9996 (51) copied without modification
%IFILT-I-FEATCOPY, FSN 9997 (52) copied without modification
%IFILT-I-FEATCOPY, FSN 9998 (53) copied without modification
%IFILT-I-FEATCOPY, FSN 9999 (54) copied without modification
 ELAPSED:    0 00:02:29.06  CPU: 0:00:50.56  BUFIO: 28  DIRIO: 375  FAULTS: 117 
$
.FILL
.LM +8
.INDEX IFILTER> EXAMPLES> Akima interpolation

.P 0
This example illustrates a successful run of IFILTER applying the Akima curve 
interpolation algorithm followed by the least squares BUNCH filter. The 
point separation for Akima has been calculated from the given constant 
separation and arc to chord distance, the angular deviation defaulting to 0.0. 
For the BUNCH filter, the minimum point separation and lateral tolerance have 
been specified, with no maximum separation. The default is assumed for the 
resolution as this is an OS map. Coordinate strings in layers 1 and 2 of 
LSL$IF:OEEPECON.IFF have been selected for interpolation and filtering, with 
those in the remaining layer (32) simply being copied over to the output file 
LSL$IF:CONTOURS1.IFF. Additional informational messages have been requested;
these include messages indicating whether each layer is being processed
or copied unchanged, and listing any line features to which
interpolation and filtering have not been applied. 
Note that the qualifiers and keywords in this example have been abbreviated.

.LM -8
.BLANK 2
.NO FILL
$ ^*IFILTER/LIN=SEP:0.4/DP=LAT:0.8/FILTER OEEPECON CONTOURS2<CR>\*
 ELAPSED:    0 00:02:36.92  CPU: 0:01:01.70  BUFIO: 26  DIRIO: 1641  FAULTS: 153
$
.FILL
.LM +8

.INDEX IFILTER> EXAMPLES> Douglas-Peucker filter
.P 0
In this example, the Douglas-Peucker filter has been applied to coordinate
strings in LSL$IF:OEEPECON.IFF, followed by linear interpolation. The filtered
and interpolated data have been output to LSL$IF:CONTOURS2.IFF.

.LM -8
.BLANK 2
.NO FILL
$ ^*IFILTER/BUN=(MIN:0.2,MAX:0.5,LAT:0.3) OEEPECON FILT__CON<CR>\*
%IFILT-E-INVMINLAT, /BUNCH - MIN__SEP less than LATERAL
 ELAPSED:    0 00:00:00.58  CPU: 0:00:00.22  BUFIO: 1  DIRIO: 0  FAULTS: 89 
$
.FILL
.LM +8

.P 0
This example shows the result of specifying inconsistent keywords with the BUNCH
filter qualifier. The program has issued an error message and terminated without
creating an output file or performing any processing.

.LM -8
.BLANK 2
.NO FILL
$ ^*IFILTER/FILTER__FIRST CCB2 MY__CCB2<CR>\*
%CLI-W-CONFLICT, illegal combination of command elements - check documentation
 _\FILTER__FIRST_\
 ELAPSED:    0 00:00:00.39  CPU: 0:00:00.15  BUFIO: 2  DIRIO: 0  FAULTS: 95 
$
.FILL
.LM +8

.P 0
This example illustrates an error detected by the DCL command line interpreter
(CLI). In this case the /FILTER__FIRST qualifier conflicts with the default
operation of the program, which is that filtering only (with the Douglas-Peucker
filter) should take place. The 'RESTRICTIONS' section states that /FILTER__FIRST
requires one of /AKIMA, /MCCONALOGUE or /LINEAR, as well as either /DP or
/BUNCH.

.P 0;On the following pages are diagrams illustrations the various IFILTER
operations.  The top left hand picture, in all cases, is the orginal input data
to IFILTER.  Moving from left to right, top to bottom are pictures showing the
effect of varying just one keyword. Note this is not the case in Fig 7 where it
is necessary to vary the MIN__SEP keyword as well as LATERAL keyword. 

.LM 0
.PAGE
.BLANK 10
.INDEX Fig 1
.CENTER;  
.PAGE
.BLANK 10
.INDEX Fig 2
.CENTER;  
.PAGE
.BLANK 10
.INDEX Fig 3
.CENTER;  
.PAGE
.BLANK 10
.INDEX Fig 4
.CENTER;  
.PAGE
.BLANK 10
.INDEX Fig 5
.CENTER;  
.PAGE
.BLANK 10
.INDEX Fig 6
.CENTER;  
.PAGE
.BLANK 10
.INDEX Fig 7
.CENTER;  
.PAGE
.BLANK 10
.INDEX Fig 8
.CENTER;  
.PAGE
.BLANK 10
.INDEX Fig 9
.CENTER;  
.PAGE
.BLANK 10
.INDEX Fig 10
.CENTER;  
.PAGE
.BLANK 10
.INDEX Fig 11
.CENTER;  
.PAGE
.BLANK 10
.INDEX Fig 12
.CENTER;  
.PAGE
.BLANK 
^*--------------------------------------------------------------------------------\*
.FILL

.HL 2 ^*MESSAGES (informational)\*

.BLANK
.P 0;These messages give information only, and require no immediate action by
the user (except perhaps to verify that the correct options have been
selected). Most will only appear if /LOG has been specified on the command
line, unless they are used to provide supplementary information after an error
has occurred. 

.LM +4
.BLANK

.TP 6
.P -4
BADFEAT, error occurred processing feature 'integer' ('integer')
.P 0
^*Explanation:\*##An error has caused processing of the IFF file to be
abandoned.  A previous error message will indicate the nature of the
problem.  This message gives the FSN of the feature that was being
processed when the error occurred.
.P 0
^*User action:\*##As for the accompanying error message.
.TP 6
.P -4
CHKARGS, Check validity of all qualifier argument values
.P 0
^*Explanation:\*##An arithmetic error has caused processing of the 
IFF file to be abandoned.  A previous error message will indicate the 
nature of the problem, for example floating division by zero. The most likely 
cause for an arithmetic error is the specification of command qualifier
argument values that are inappropriate to the data being processed. 
.P 0
^*User action:\*##Guidance on the effects of qualifier argument values 
for all the interpolation and filtering options is provided in the example
daigrams of the IFILTER Description section of this manual.

.TP 6
.P -4
FEATCOPY, FSN 'integer' ('integer') copied without modification
.P 0
^*Explanation:\*##The given feature is being copied to the output file without 
smoothing or filtering. This may be because its feature code has been excluded,
or because the feature contains three data points or less. Note, however, that
any superimposed points will still be removed from the coordinate strings.
.P 0
^*User action:\*##If in doubt, check why the feature was ignored.

.TP 6
.P -4
LAYERCOPY, layer 'integer' being copied without modification
.P 0
^*Explanation:\*##The given layer is being copied to the output file with none 
of the features within it undergoing smoothing or filtering. Either the
layer has been excluded by the /LAYER qualifier, or layer zero has been
encountered (this is never processed).
.P 0
^*User action:\*##None.

.TP 6
.P -4
LAYERPROC, layer 'integer' being processed
.P 0
^*Explanation:\*##The program has reached the given layer in the input file, 
and will commence filtering and/or smoothing as appropriate.
.P 0
^*User action:\*##None.

.LEFT MARGIN 0
.PAGE
^*--------------------------------------------------------------------------------\*
.HL 2 ^*MESSAGES (warning)\*

.BLANK
.P 0; These messages indicate that IFILTER has been unable to guarantee that a
specified feature has been correctly processed, or that a specified IFF entry 
is correct.

.LEFT MARGIN +4
.BLANK

.TP 6
.P -4
DELOUTFIL, output IFF file deleted
.P 0
^*Explanation:\*##This is normally a continuation message and indicates that 
the output file has been deleted.
.P 0
^*User action:\*##None.

.TP 6
.P -4
EXTCOLIGN, Only X and Y coordinates processed in FSN 'integer' (integer)
.P 0
^*Explanation:\*##IFILTER has encountered a "non-simple" CB entry containing 
more data than the standard (X,Y) coordinates. These may be per-point 
attributes. IFILTER does not reproduce these extra CB columns in the output
file, because the actual coordinates output are different from the input
coordinates.
.P 0
^*User action:\*##Check that no useful information is being lost. 

.TP 6
.P -4
FEATINCOMP, incomplete FSN 'integer' ('integer') in input file not copied
.P 0
^*Explanation:\*##This message indicates that a feature found in the input 
file is incomplete, having either no FS entry or no coordinates, and will not
appear in the output file.
.P 0
^*User action:\*##Examine the input file using IPATCH, and if necessary amend 
the feature using LITES2 or ITOTEXT/IFROMTEXT and rerun IFILTER.

.TP 6
.P -4
ONEPTST, FSN 'integer' ('integer') output with one point ST
.P 0
^*Explanation:\*##The given line feature has only one point. This may be due 
to the input IFF file containing a one-point coordinate string before an
invisible segment, or it may be that the specified filter
tolerances are too harsh.
.P 0
^*User action:\*##Check the validity of any filtering qualifiers specified.
Check that the feature in the input file is valid. If the problem persists,
preserve 
the input file, make a note of the qualifiers used, and report the error to 
Laser-Scan. The output file can then be checked and edited using IPATCH and
LITES2 or ITOTEXT/IFROMTEXT.

.TP 6
.P -4
SUPERIMPPT, superimposed point ignored in FSN 'integer' ('integer')
.P 0
^*Explanation:\*##The input IFF file contains coincident points. Only one of
these is retained.
.P 0
^*User action:\*##None.

.TP 6
.P -4
OUTFILCLO, file closed without updating RA
.P 0
^*Explanation:\*##This is normally a continuation message and indicates that 
the range entry in the output file is likely to be incorrect.
.P 0
^*User action:\*##Depends on the main error which caused this action, but the 
range entry in the output file may need to be corrected. This can be achieved
by using IMERGE.

.TP 6
.P -4
RANOTFND, cannot find RA entry in output IFF file
.P 0
^*Explanation:\*##Having completed reading the input file, with the 
appropriate features smoothed and filtered as required,
the range entry in the output file has to be updated. This 
entry cannot be found, indicating a probable programming error. The program 
recovers from this error, and finishes normally.
.P 0
^*User action:\*##Preserve the input file, make a note of the qualifiers used, 
and report the error to Laser-Scan. The 
range entry in the output file may need to be corrected. This can be achieved
by using IMERGE.

.LEFT MARGIN 0
.PAGE
.BLANK
^*--------------------------------------------------------------------------------\*
.HL 2 ^*MESSAGES (error)\*

.BLANK
.P 0; These messages indicate an error in processing which has caused the 
program to
terminate. The most likely causes are a corrupt or otherwise invalid input IFF
file, or an error related to command line processing and file manipulation.
It is most unlikely that any output file produced will be correctly processed.

.LEFT MARGIN +4
.BLANK
.TP 6
.P -4
EOIINFEAT, unexpected end of input IFF file within feature
.P 0
^*Explanation:\* The input IFF file terminated within a feature, 
before an IFF EF entry was encountered.
.P 0
^*User action:\* Use IMEND/TRUNCATE to correctly terminate the file.
Re-run IFILTER on the repaired IFF file. 

.TP 6
.P -4
ERRBEZIER, arithmetic error during Bezier interpolation
.P 0
^*Explanation:\* An error has occured when applying the Bezier interpolation
algorithm.
.P 0
^*User action:\* Please submit a SPR to Laser Scan, and if possible supply
the input IFF file

.TP 6
.P -4
ERRCLOIN, cannot close input IFF file
.P 0
^*Explanation:\*##The input IFF file could not be closed. This probably
indicates a serious problem, and the preceding IFF library message will 
give more details.
.P 0
^*User action:\*##Investigate the cause of the error according to the IFF 
library message. 

.TP 6
.P -4
ERRCLOOUT, cannot close output IFF file
.P 0
^*Explanation:\*##The output IFF file could not be closed. This probably
indicates a serious problem, and the preceding IFF library message will 
give more details.
.P 0
^*User action:\*##Investigate the cause of the error according to the IFF 
library message. 

.TP 6
.P -4
ERRWRTOUT, cannot write to output IFF file
.P 0
^*Explanation:\*##An error occurred while attempting to write to the output IFF 
file. This probably indicates a serious problem, and the preceding IFF library 
message will give more details.
.P 0
^*User action:\*##Investigate the cause of the error according to the IFF 
library message. 

.TP 6
.P -4
ILEGFC, illegal feature code 'integer' with /FC
.P 0
^*Explanation:\* The feature code specified as an argument to the /FC
qualifier does not lie in the range 0 to 32767.
.P 0
^*User action:\* Respecify the command line, taking care that feature codes 
fall within the allowed range.

.TP 6
.P -4
ILEGLAY, illegal IFF layer number 'integer'
.P 0
^*Explanation:\* The layer number specified as an argument to the /LAYER
qualifier does not lie in the range 0 to 32767.
.P 0
^*User action:\* Respecify the command line, taking care that layer numbers 
fall within the allowed range.

.TP 6
.P -4
INVHUG, /BEZIER - Corner hug tolerance not in the range 0.0 to 1.0
.P 0
^*Explanation:\* The corner hug tolerance supplied with the /BEZIER
qualifier may only be in the range 0 to 1.
.P 0
^*User action:\* Respecify the command line, ensuring that the value for
HUG is in the range 0 to 1.

.TP 6
.P -4
INVMAXMIN, /BUNCH - MAX__SEP less than MIN__SEP
.P 0
^*Explanation:\* The /BUNCH qualifier was specified, and the value given for
the MAX__SEP keyword was less than 
that given for the MIN__SEP keyword.
.P 0
^*User action:\* Respecify the command line, ensuring that the value for 
MAX__SEP is greater than or equal to MIN__SEP

.TP 6
.P -4
INVMINLAT, /BUNCH - MIN__SEP less than LATERAL
.P 0
^*Explanation:\* The /BUNCH qualifier was specified, and the value given for
the MIN__SEP keyword was less than 
that given for the LATERAL keyword.
.P 0
^*User action:\* Respecify the command line, ensuring that the value for 
MIN__SEP is greater than or equal to LATERAL.

.TP 6
.P -4
OUTBUFFULL, output buffer full
.P 0
^*Explanation:\* The number of points in the line after filtering 
and/or smoothing is more than the allowed maximum of 15000.
.P 0
^*User action:\* Respecify the command line, but choose the filtering and/or
smoothing qualifier keywords such that fewer points are produced. If line 
features with large numbers of points are required, please submit 
a software modification request to Laser-Scan.

.TP 6
.P -4
REQPOSVAL, require positive value for /'qualifier' 'keyword'
.P 0
^*Explanation:\* The given qualifier keyword requires a value which is greater 
than zero.
.P 0
^*User action:\* Respecify the command line, taking care that the relevant 
value is greater than zero.

.TP 6
.P -4
TOOMANYFC, 'integer' feature codes with /FC, maximum is 'integer'
.P 0
^*Explanation:\*##More than the maximum allowed number of feature codes 
have been specified with the /FC qualifier.
.P 0
^*User action:\*##Reissue the IFILTER command and qualifiers, taking care that 
the number of feature codes specified with /FC does not exceed the 
maximum. 

.TP 6
.P -4
TOOMANYLAY, 'integer' layers with /LAYER, maximum is 'integer'
.P 0
^*Explanation:\*##More than the maximum allowed number of layers 
have been specified with the /LAYER qualifier.
.P 0
^*User action:\*##Reissue the IFILTER command and qualifiers, taking care that 
the number of layers specified with /LAYER does not exceed the 
maximum. 

.TP 6
.P -4
TOOMANYPTS, FSN 'integer' ('integer') has too many points
.P 0
^*Explanation:\*##The given line feature as read from the input file has too 
many points and cannot be processed. The maximum allowed is 15000.
.P 0
^*User action:\*##Split up the feature in the input file using LITES2 and then 
reissue the IFILTER command line. If line features with large numbers of points 
are required, please submit a software modification request to 
Laser-Scan.

.TP 6
.P -4
UNEXPEOF, unexpected end of input IFF file
.P 0
^*Explanation:\* The input IFF file terminated unexpectedly, 
before an IFF EJ entry was encountered.
.P 0
^*User action:\* Use IMEND/TRUNCATE to correctly terminate the file.
Re-run IFILTER on the repaired IFF file. 

.LEFT MARGIN 0
.PAGE
.BLANK
^*--------------------------------------------------------------------------------\*
.HL 2 ^*MESSAGE (fatal)\*

.BLANK
.P 0; This message indicates a fatal error in processing which has caused the 
program to terminate. No output IFF file will be produced.
.LEFT MARGIN +4
.BLANK
.TP 6
.P -4
ARITHMETIC, arithmetic fault detected - possibly caused by inappropriate qualifier argument values
.P 0
^*Explanation:\*##An arithmetic error has caused processing of the 
IFF file to be abandoned.  A following error message will indicate the 
nature of the problem, for example floating division by zero.
.P 0
^*User action:\*##A following informational message will provide
suggested user action.
.LEFT MARGIN 0
.PAGE
.BLANK
^*--------------------------------------------------------------------------------\*
.HL 2 ^*MESSAGES (other)\*
.INDEX CLI (Command Line Interpreter)
.INDEX IFILTER>messages>other
.BLANK
.JUSTIFY
.FILL
.P 0;In addition to the above messages which are generated by IFILTER itself,
other messages may be produced by the command line interpreter (CLI) and by
Laser-Scan libraries. In particular, messages may be generated by the IFF
library. These are introduced by '%IFF' and are documented in the IFF library
users' guide. In most cases IFF errors will be due to a corrupt input file, and
this should be the first area of investigation. If the cause of the error
cannot be traced by the user and Laser-Scan are consulted, then the input file
should be preserved to facilitate diagnosis.
