.PAGE
.NO FILL
^*--------------------------------------------------------------------------------\*
^*MODULE####IMEND\*
.INDEX IMEND
.BLANK
^*--------------------------------------------------------------------------------\*
^*REPLACES\*##DAMP modules MIF and IFT
.INDEX DAMP
.INDEX IMEND and DAMP
.INDEX DAMP> MIF
.INDEX DAMP> IFT
.BLANK
^*--------------------------------------------------------------------------------\*
.HEADER LEVEL 2 ^*FUNCTION\*
.LEFT MARGIN +10
.INDEX IMP>module functions> file recovery
.INDEX IMEND> FUNCTION
.P 0;IMEND is used to recover IFF files which have been improperly
closed as a result of system failure or operator error.
.BLANK;.LEFT MARGIN 0;.NO FILL
^*--------------------------------------------------------------------------------\*
.HEADER LEVEL 2 ^*FORMAT\*
.NO FILL
.LM+10
.P 0;$ IMEND file-spec

^*Command qualifiers             Defaults\*
.INDEX IMEND> command qualifiers

.INDEX IMEND> command qualifiers> /RANGE
.INDEX IMEND> command qualifiers> /TRUNCATE
/[NO]RANGE                     /NORANGE
/[NO]TRUNCATE                  Truncate file after last complete
                               feature.

.BLANK
.LM 0
.TP 9
^*--------------------------------------------------------------------------------\*
^*PROMPT\*
.INDEX IMEND> PROMPT
.LM +10
.NO FILL
.BLANK
__IFF file:       IFF-file-spec
.TP 13
.BLANK
.LM -10
^*--------------------------------------------------------------------------------\*
.HEADER LEVEL 2 ^*PARAMETER\*
.INDEX IMEND> PARAMETER
.LM +10
.P -10; IFF-file-spec
.JUSTIFY
.P -2;-#specifies the IFF file to be mended. Any part of the file-spec which is
not supplied will be taken from the default specification 'LSL$IF:IFF.IFF'. 
.BLANK
.LM 0
.TP 10
^*--------------------------------------------------------------------------------\*
.HEADER LEVEL 2 ^*COMMAND QUALIFIERS\*
.INDEX IMEND> command qualifiers
.LM +10
.TP 8
.P -10;/RANGE
.I -10;/NORANGE##(default)
.INDEX IMEND> command qualifiers> /RANGE
.P -2;-#by default IMEND does not update the RA (RAnge) entry after
mending the file. The /RANGE qualifier causes IMEND to do a second pass
through the IFF file after successful mending. The string (ST,ZS,CB) entries are
read and the file (x,y) coordinate range is calculated. The range entry is
then updated. 


.TP 8
.P -10;/TRUNCATE
.INDEX IMEND> command qualifiers> /TRUNCATE
.P -2;-#by default IMEND truncates the IFF file after the last complete
map, layer, or feature (EM, EO, or EF entry) found. It then adds EF, EO,
EM, and EJ entries as required to correctly terminate the file.

.P 0; If /NOTRUNCATE is specified (or the file contains no complete map, layer,
or feature) then the file is ended after the last complete ^&entry\& and no
extra entries are added. 

.BLANK
.LM 0
.TP 10
^*--------------------------------------------------------------------------------\*
.HEADER LEVEL 2 ^*DESCRIPTION\*
.INDEX IMEND> DESCRIPTION
.LM +10
.P 0;If an IFF file has been opened for write (or update) and the IFF library is
unable to properly close the file then the file may be corrupt. Unclosed
files may be caused by system crash, operator error  (using <CTRL/Y> for
instance), or program failure. To check for this kind of error, the IFF library
sets a flag in the forepart of the file when it is opened, and only clears the
flag just before the file is closed. If an attempt is made to open a file which
has this flag set, the IFF error 'MEND' will occur, and the IFF library will
not allow access to the file. Use of IMEND is the only way to regain access to
such a file, but IMEND may also be used on files which have been properly
closed, but for some reason contain corrupt data, or end part way through a
feature. 
.INDEX IMEND> reasons for use
.P 0
The particular problems which may occur when a file has been improperly
closed (and which IMEND attempts to rectify) are as follows:
.LIST "o"
.LE ;The forepart will not have been written back to the file. If the file
had actually been written to since it was opened, this will mean that the
IFF library may be unable to access the data which had been added.
.LE ;The end-of-file pointer may not have been set correctly. An indication
of this is that the number of disk blocks used is zero or much less than the
number of disk blocks allocated to the file. The DCL 'DIRECTORY/SIZE=ALL'
command will supply information about blocks used versus allocated. In this
case, the file may not be copied before IMEND is used, as COPY will only
copy up to the (incorrect) end of file block.
.LE; Blocks of data may not have been written to the IFF file. If the
file was being written at the end, then the data will probably just be
lost, but if the file was being written in the middle, then there is
a chance that the file will be corrupted, and that all following data
will be lost.
.END LIST 
.INDEX IMEND> processing action
.P 0;The action taken by IMEND in attempting to repair an IFF file is as
follows:
.LIST
.DISPLAY ELEMENTS "(",RL,")"
.LE ;The file is opened for updating, and its end of file pointer is
set to the end of the last allocated block, allowing the filing system
to access all the blocks. (This is effectively a SET FILE/END__OF__FILE
operation.)
.INDEX IFFLIB
.LE ;The IFF end of file pointer (LPOSE) is also set to the end of the file,
allowing IFFLIB to access all the data.
.LE ;The entries in the file are the scanned until either an IFF error
occurs, an unexpected entry is found, or the EJ entry is found. The
structure is not checked very rigorously. Files may contain
maps (delimited by MH/EM), containing layers (delimited by NO/EO), containing
features (delimited by NF/EF), containing those entries which are valid
within features. The map level is optional. Any EO pointers in NO entries
which are incorrect are corrected at this stage.
.LE ;If the file contained no entries at all, then the user is informed
that the file is empty.
.LE ;If /NOTRUNCATE was used, or the file contained no complete maps,
layers, or features, then the IFF end of file is set after the last
complete entry.
.LE ;If the file did contain complete maps, layers, or features, and
/TRUNCATE (the default) was used, then the file is truncated after the last
complete map, layer, or feature, and appropriate EF, EO, EM, and EJ
entries are added to terminate the file correctly.
.LE ;If the /RANGE qualifier is specified, IMEND does a second pass
through the IFF file after successful mending. The string (ST,ZS,CB) entries are
read and the file (x,y) coordinate range is calculated. The range entry is
then updated. 
.LE ;The file is closed.
.END LIST
.INDEX IMEND> and LASERAID
.P 0 ;After running IMEND the IFF data may subsequently be accessed as
usual (but note that some features at the end of the file may have been lost).
In particular digitising may be resumed with LASERTRAK using the Laseraid OLD
option.

.P 0;However, note that the recovery of a corrupt IFF file cannot be guaranteed
and any file mended with IMEND should be treated with caution. 

.BLANK 2
.NO FILL
.LM 0
.TP 15
.NO JUSTIFY
^*--------------------------------------------------------------------------------\*
.HEADER LEVEL 2 ^*EXAMPLES\*
.INDEX IMEND> EXAMPLES
.NO FILL
.NO JUSTIFY
$ ^*IMEND TST_<CR_>\*
%LSLLIB-I-IFFOPENED, IFF file DUA3:[BUREAU.TRIALS]TST.IFF;0 opened for mend
%IMEND-I-ENDLAY, end of layer 2
%IMEND-I-ENDLAY, end of layer 32
%IFF-E-IFFERR, IFF error BW   on LUN 1
%IMEND-I-CORRUPT, file corrupt in map 1
%IMEND-I-LSTFTR, last complete feature FSN 9996 (9970) layer 32 map 1
%IMEND-S-IFILREP, IFF file successfully mended
 ELAPSED:    0 00:00:02.33  CPU: 0:00:00.71  BUFIO: 7  DIRIO: 37  FAULTS: 88 
$
.FILL
.LM +8
In this example a corrupt, improperly closed IFF file, TST.IFF, has been
mended. The diagnostic output shows that the file was opened successfully and
that it contained 2 sound layers. The data structure had been corrupted after
the feature with FSN (Feature Serial Number) 9666, internal sequence number
9970. The first map was incomplete (no EM entry was found) when the corruption
occurred, but no other layers had been commenced.
.P 0;The IFF error BW is produced by the IFF library, and is one of the IFF
errors possible when IMEND reaches the end of sound data and attempts to read
corrupted data. It is quite normal for IMEND to produce error messages such as
this. IMEND will have truncated the IFF file after feature FSN 9996 (9970) and
will have terminated the file with an EO, EM, EJ sequence of IFF entries. All
data in the file which was located after feature FSN 9996 (9970) will have been
lost. The file should now be available for use, but there can be no guarantee
that it is completely sanitary. $STATUS will be set to SS$__NORMAL. 

.TP 14 
.LM -8
.NOFILL
.B 2
$ ^*IMEND_<CR_>\*
__IFF file: ^*GHASTLY.MER/RANGE_<CR_>\*
%LSLLIB-I-IFFOPENED, IFF file DUA0:[LSL.IFF]GHASTLY.MER;0 opened for mend
%IMEND-I-ENDLAY, end of layer 0
%IMEND-I-ENDLAY, end of layer 1
%IMEND-I-ENDMAP, end of map 1
%IMEND-I-LSTFTR, last complete feature FSN 1956 (1956), layer 1, map 1
%IMEND-S-IFILREP, IFF file successfully mended
%IMEND-I-UPRANGE, updating range entry
%IMEND-I-NEWRANGE, new range entry - XMIN 230.300,  XMAX 450.874, YMIN 0.003, YMAX 597.839
 ELAPSED:    0 00:00:30.52  CPU: 0:00:00.73  BUFIO: 7  DIRIO: 28  FAULTS: 74 
$

.FILL
.LM +8
In this example an improperly terminated IFF file, GHASTLY.MER, has been mended.
The diagnostic output shows that the file was opened successfully and that
it contained 2 sound layers within one completely sound map. No other maps
or layers were commenced (an IFF file corrupt in _... message would have been
output). In the absence of any IFF errors, the file was probably intact anyway
and correctly terminated with an EJ. The end of file occurred after the feature
with FSN (Feature Serial Number) 1962 and internal sequence number 1956.  Any
entries after the EM for map 1 will have been discarded (but there wouldn't be
any expected anyway).

.P 0;As the /RANGE qualifier was specified, IMEND has performed a second pass 
through the IFF file to calculate the (x,y) coordinate range. This is patched
into the file RA (RAnge) entry. The calculated range is indicated.

.P 0;The file should now be available for use, but there can be no guarantee
that it is completely sanitary. $STATUS will be set to SS$__NORMAL. 

.TP 14
.NOFILL
.LM -8
.B 2
$ ^*IMEND PERDU.IFF_<CR_>\*
%LSLLIB-E-IFFMODIFY, error opening IFF file DUA3:[BUREAU.TRIALS]PERDU.IFF;0 for update
%IFF-E-IFFERR, IFF error USER on LUN 0
-RMS-E-FNF, file not found
 ELAPSED:    0 00:00:18.39  CPU: 0:00:00.34  BUFIO: 4  DIRIO: 9  FAULTS: 42 
$

.FILL
.LM +8
The file does not exist. Even if the VMS DIRECTORY utility tells you that the
file contains zero used blocks, IMEND will still open the file and attempt to
mend it. You have either mistyped the file-spec or you have not set logical
name LSL$IF: to point to the correct directory. The error 'USER' is a
consequence of the routine used by IMEND to fix the end of file pointers
failing to find the file - normal programs would give error 'OPEN' under these
circumstances. 

.TP 14
.NOFILL
.LM -8
.B 2
$ ^*IMEND RUINED.IFF_<CR_>\*
%LSLLIB-E-IFFMODIFY, error opening IFF file DUA3:[BUREAU.TRIALS]RUINED.IFF;0 for update
%IFF-E-IFFERR, IFF error READ on LUN 0
-RMS-E-EOF, end of file detected
 ELAPSED:    0 00:00:01.39  CPU: 0:00:00.12  BUFIO: 4  DIRIO: 9  FAULTS: 11 
$

.LM +8
.FILL
The RMS (Record Management Services) error message "end of file detected"
indicates that the file is completely empty. It does not even contain an IFF
"forepart" in the first disk block. There is no hope for the recovery of this
file. All data contained in the file has been lost. 

.TP 14
.NOFILL
.LM -8
.B 2
$ ^*IMEND SADNESS.IFF_<CR_>\*
%LSLLIB-I-IFFOPNED, IFF file DUA0:[LSL.IFF]SADNESS.IFF; opened for mend
%IMEND-I-IFFEMPTY, IFF file is empty
 ELAPSED:    0 00:00:01.39  CPU: 0:00:00.12  BUFIO: 4  DIRIO: 9  FAULTS: 11 
$

.FILL
.LM +8
Compare this example with the one above. This file did contain a forepart, and
was successfully opened, but it did not contain any entries. As in the previous
example there is no hope for the recovery of this file. 
.TP 14
.NOFILL
.LM -8
.B 2
$ ^*IMEND DEMO/NOTRUNCATE_<CR_>\*
%LSLLIB-I-IFFOPENED, IFF file DUA3:[BUREAU.TRIALS]DEMO.IFF;0 opened for mend
%IMEND-I-ENALAY, end of layer 1
%IMEND-I-CORRUPT, file corrupt in feature with FSN 7 (7), layer 2, map 1
%IMEND-I-LSTFTR, last complete feature FSN 1 (1), Layer 2, Map 1
%IMEND-I-TERM, file has been terminated after the last complete entry
%IMEND-I-IFILREP, IFF file successfully mended
 ELAPSED:    0 00:00:05.32  CPU: 0:00:00.54  BUFIO: 8  DIRIO: 17  FAULTS: 104 
$

.LM +8
.FILL
In this example the /NOTRUNCATE option has been used to preserve all
entries in the file. After scanning layer 1, IMEND has detected an error
somewhere in the feature with FSN (Feature Serial Number) 7 in layer 2. The
last complete feature was feature 1, also in layer 2. Because /NOTRUNCATE has
been used, the file will still contain the incomplete feature 7. After
examining the file, IMEND may be used again without the /NOTRUNCATE option to
remove the part feature if required. $STATUS is set to SS$__NORMAL.

.NO FILL
.LM 0
.PAGE
^*--------------------------------------------------------------------------------\*
.NOFILL
.KEEP
.HEADER LEVEL 2 ^*MESSAGES (informational)\*

.J
.BL
These messages give information only, and require no immediate action by the
user.
.BL
.LM +4
.FILL
.TP 12
.INDENT -4;CORRUPT, file corrupt in feature WITH FSN 'integer' ('integer'), layer 'integer', map 'integer'

.P 0;^*Explanation:\* Corruption of the IFF file structure has been detected
within a map, layer, or feature. The file will be terminated at the last
complete map, layer, or feature (or entry if /NOTRUNCATE was used). If this
message does not occur, then it is likely that no data has been lost. 
.P 0;^*User action:\* None.
.SKIP
.TP 12
.INDENT -4;ENDMAP, end of map 'integer'
.INDENT -4;ENDLAY, end of layer 'integer'

.P 0;^*Explanation:\* The end of the given map or layer has been reached.
It is safe to assume that the data before this point is safe (but note that
the same layer may occur several times if the layer has become fragmented).
.P 0;^*User action:\* None.
.SKIP
.TP 12
.INDENT -4;FIXEOP, EO pointer amended in layer 'integer'

.P 0;^*Explanation:\* The pointer to the end of this layer contained within
the NO entry has been found to be incorrect. It has been corrected.
.P 0;^*User action:\* None. But if this happens repeatedly, then the
program responsible may have a bug which requires fixing.
.SKIP
.TP 7
.INDENT -4;IFILREP, IFF file successfully mended
.P 0;^*Explanation:\* All is well. IMEND has recovered at least some, if not all
of the IFF file.
.P 0;^*User action:\* The IFF file may be used with caution.
.SKIP
.TP 7
.INDENT -4;IFFEMPTY, IFF file is empty
.P 0;^*Explanation:\* There is no hope for the recovery of this file, it
contains no entries at all. 
.P 0;^*User action:\* None.
.SKIP
.TP 12
.INDENT -4;LSTFTR, last complete feature FSN 'integer' ('integer'), layer 'integer', map 'integer'

.P 0;^*Explanation:\* This is the last complete feature in the mended file. If
this message is not output, then there were no complete features.
.P 0;^*User action:\* None.
.SKIP
.TP 12
.INDENT -4;NEWRANGE, new range entry - XMIN 'real', XMAX 'real', YMIN 'real', YMAX 'real'
.P 0;^*Explanation:\* IMEND indicates the new range values calculated from the 
string (ST,ZS,CB) entries present in the file after mending.
.P 0;^*User action:\* Check that the calculated range is what you expected to
have in the file. 
.SKIP
.TP 12
.INDENT -4;NOSTS, file contains no ST entries - range entry will not be changed
.P 0;^*Explanation:\* After mending, the file contains no ST entries.
The RA (RAnge) entry will not be changed.
.P 0;^*User action:\* None.
.SKIP
.TP 12
.INDENT -4;TERM, file has been terminated after last complete entry

.P 0;^*Explanation:\* Either /NOTRUNCATE was used, or the file contained
no complete maps, layers, or features. The file now ends after the last
complete entry. No attempt has been made to add EF, EO, EM, or EJ entries.
.P 0;^*User action:\* None.
.SKIP
.TP 12
.INDENT -4;UPRANGE, updating range entry
.P 0;^*Explanation:\* You have specified the /RANGE qualifier. This causes
IMEND to do a second pass through the IFF file after successful mending. The
string (ST,ZS,CB) entries are read and the file (x,y) coordinate range is
calculated. The range entry is then updated. 
.P 0;^*User action:\* None.
.NO JUSTIFY
.BLANK 2
.LEFT MARGIN 0
.PAGE
.BLANK
^*--------------------------------------------------------------------------------\*
.HEADER LEVEL 1 ^*MESSAGES (error)\*
.BLANK
These messages indicate an error in processing which has caused the program to
terminate. The most likely causes are a corrupt or otherwise invalid input IFF
file, or an error related to command line processing and file manipulation.
.LEFT MARGIN +4

.BLANK
.NO JUSTIFY
.TEST PAGE 12
.INDENT -4;NORANGE, file has no range entry
.P 0;^*Explanation:\* IMEND has failed to find the RA (RAnge) entry at the 
start of the IFF file. It is therefore unable to patch in the calculated
(x,y) coordinate range.
.P 0;^*User action:\* Without a range entry, the file is useless. Use
ITOTEXT to convert the file into a textual representation. Use a text
editor (like VMS EDIT or TPU) to add a range entry. Use IFROMTEXT
to convert the text back to an IFF file. Re-run IMEND/RANGE to correctly
update the range entry that you created. 
.BL 2
.TP 6
.LM-4
^*--------------------------------------------------------------------------------\*
.HEADER LEVEL 2 ^*MESSAGES (other)\*
.BL
In addition to the above messages which are generated by IMEND itself, other
messages may be produced by the command line interpreter (CLI) and by
Laser-Scan libraries. In particular, messages may be generated by the IFF
library. These are introduced by '%IFF' and are documented in the IFF library
users' guide. It is quite normal for IMEND to produce an IFF error message when
corrupt data is encountered - it will terminate the file at this point. If the
cause of an error cannot be traced by the user and Laser-Scan are consulted,
then the input file should be preserved to facilitate diagnosis. 
