
.PAGE
^*-------------------------------------------------------------------------------\*
^*MODULE\*#####IFROMTEXT
.INDEX IFROMTEXT
.BLANK
^*-------------------------------------------------------------------------------\*
.NO JUSTIFY
.NO FILL
^*REPLACES\*   DAMP module TEXT2I
.INDEX DAMP
.INDEX DAMP> TEXT2I
.BLANK
^*-------------------------------------------------------------------------------\*
.HEADER LEVEL 2 ^*FUNCTION\*
.INDEX IFROMTEXT> FUNCTION
.LEFT MARGIN +10
.P 0;IFROMTEXT is a program which converts data held in a text form into an IFF 
file. IFF files, such as template files or standard grids may be created from
scratch, with data input either from a file or directly from the terminal.
IFROMTEXT can also be used to edit existing IFF files in conjunction with
ITOTEXT.  This is done by converting an IFF file into text form using ITOTEXT,
editing the text file, and creating a new IFF file from the edited text file
using IFROMTEXT. The default file extensions are .IFF for IFF files and .TXT
for text files. 

.LEFT MARGIN 0
.BLANK
^*-------------------------------------------------------------------------------\*
.HEADER LEVEL 2 ^*FORMAT\*
.INDEX IFROMTEXT> FORMAT
.LEFT MARGIN +10
.NO FILL
$ IFROMTEXT  text-file-spec [IFF-file-spec]

^*Command qualifiers                        Defaults\*
.INDEX IFROMTEXT> command qualifiers

/[NO]ECHO                                 /NOECHO
.INDEX IFROMTEXT> command qualifiers> /ECHO

/FRT = file-spec                          No FRT file is used
.INDEX IFROMTEXT> command qualifiers> /FRT

/[NO]LOG                                  /NOLOG
.INDEX IFROMTEXT> command qualifiers> /LOG

/ORIGIN = (double__real, double__real)      /NOORIGIN
.INDEX IFROMTEXT> command qualifiers> /ORIGIN

.FILL

.INDEX IFROMTEXT> input from terminal
.P 0;Input may be read from the terminal by specifying SYS$INPUT: (or TT:)
in place of the input filename. 

.LEFT MARGIN -10
.TEST PAGE 10
.BLANK
^*-------------------------------------------------------------------------------\*
.HEADER LEVEL 2 ^*PROMPTS\*
.INDEX IFROMTEXT> PROMPTS
.LEFT MARGIN +10
.NO FILL
.NO JUSTIFY
_Text-file:      text-file-spec
_IFF-file:       IFF-file-spec

.FILL

.P 0;If input is from the terminal then IFROMTEXT will prompt for each line of
input with: 
.INDEX IFROMTEXT> prompt when reading from terminal

.P 7;IFF entry> 

.LEFT MARGIN -10
.BLANK
.TEST PAGE 10
^*--------------------------------------------------------------------------------\*
.HEADER LEVEL 2 ^*PARAMETERS\*
.INDEX IFROMTEXT> PARAMETERS
.LEFT MARGIN +10


.P -10;text-file-spec
.P -2;-#specifies the text file from which an IFF file is to be made. Any part
of the file name which is not specified will be taken from the default
specification 'SYS$DISK:IFROMTEXT.TXT'. 


.TEST PAGE 10
.P -10;IFF-file-spec
.P -2;-#specifies the IFF file which is to be created. IF any part of the 
IFF-file specification is not explicitly given, the missing parts will be taken
from: 
.BR
.BLANK
'LSL$IF:'input-file-spec'.IFF'.
.BLANK
.BR
Note that a version number must ^*not\* be specified for the output file. If a
file with the specified name already exists, a new file will be created with
the version number incremented by one. 
.NO JUSTIFY
.LEFT MARGIN -10
.BLANK
.TEST PAGE 10
^*-------------------------------------------------------------------------------\*
.HEADER LEVEL 2 ^*COMMAND QUALIFIERS\*
.INDEX IFROMTEXT> COMMAND QUALIFIERS
.LEFT MARGIN +10

.P -10;/ECHO
.I -10;/NOECHO

.INDEX IFROMTEXT> command qualifiers> /ECHO
.P -2;-#input file lines will be echoed as read in.

.P -10;/FRT = file-spec
.INDEX IFROMTEXT>command qualifiers> /FRT
.p -2;-#specifies an FRT file which contains feature code graphical types, and 
an ACD definitions table.
Any part of the file specification not supplied is
taken from the default LSL$FRT:FRT.FRT.  
.P0
This qualifier should only be specified if non-standard ACD definitions are 
required to define attributes in CB or AC entries, or if text and symbol FS 
entry fields are to be set automatically (with some default values). See 
the IFF user guide for a description of standard ACD definitions and FS entry 
values.

.P -10;/LOG
.I -10;/NOLOG

.INDEX IFROMTEXT> command qualifiers> /LOG
.P -2;-#this will result in supplementary messages being sent to SYS$OUTPUT.
Supplementary messages are generated when files are successfully opened, and a
reassuring message is output each time a new IFF layer is written to the IFF
file. If missing IFF entries are created by IFROMTEXT in order to maintain a
valid IFF file structure, /LOG will cause detailed information about these
entries to be output.

.TP 8
.P -10;/ORIGIN = (double__real,double__real)
.I -10;/NOORIGIN

.INDEX IFROMTEXT>command qualifiers> /ORIGIN
.p -2;-#specifies an origin offset double real coordinate pair to subtract 
from any absolute coordinates in an absolute coordinate text file.

.NO JUSTIFY
.LEFT MARGIN -10
.BLANK
.TEST PAGE 10
^*-------------------------------------------------------------------------------\*
.HEADER LEVEL 2 ^*DESCRIPTION\*
.INDEX IFROMTEXT> DESCRIPTION
.LEFT MARGIN +10
.INDEX IFROMTEXT> DESCRIPTION> General
.HEADER LEVEL 3 ^*General\*
.FILL
.JUSTIFY

.P 0;IFROMTEXT creates a new IFF file from a text file or from data entered by
the user at the terminal. IFF entries which are required to produce a valid IFF
file are defaulted if not present. The following should be noted: 
.LIST

.INDEX IFROMTEXT> and RA entry
.LE ;IFROMTEXT produces a default RA (Range) entry as the first entry in the 
IFF file if there is no RA entry in the text file, to be updated on 
completion of the text file reading.
The user may give 4 values for the range limits after an RA command, which will 
be used in the output IFF file if all the feature coordinates supplied lie 
within these limits. If not, the RA values will be ignored and the range
 calculated from 
all the supplied coordinates, and the range entry updated accordingly.

.INDEX IFROMTEXT> and HI entry
.LE ;IFROMTEXT produces a new HI (HIstory) entry in the IFF file only if the
text file contains a history entry after the RA entry or as the first entry in
the text file. 

.INDEX IFROMTEXT> and MD entry
.LE ;IFROMTEXT produces a default empty MD2 (Type 2 Map Descriptor) entry in 
the IFF file if there was no MD entry in the text file.
A type 1 map descriptor may be produced with the MD 1 command. See the section
on Map Descriptors below for more details.

.INDEX IFROMTEXT> and NS entry
.LE ;IFROMTEXT produces a new NS (New Section) entry in the IFF file
if there was an NS entry in the text file using any text that appears after 
the NS command. If there was no NS entry, a default one is created from the 
time and date of program run.

.INDEX IFROMTEXT> and CC entry
.LE ;IFROMTEXT produces a default CC (Corner Coefficients) entry in the IFF 
file if there was no CC entry in the text file.

.INDEX IFROMTEXT> and CP entry
.LE ;IFROMTEXT produces a default CP (Control Points) entry in the IFF file
if there was no CP entry in the text file, with values from 0 to 1000 in x
and y. The user may supply the required entries for A new CP entry (see the 
section on IFROMTEXT default entries below for more specific CP entry format).

.INDEX IFROMTEXT> and NO entry
.LE ;IFROMTEXT produces a default NO (New Overlay) entry in the IFF file
if there was no NO entry in the text file with a layer number of 1.

.INDEX IFROMTEXT> and NF entry
.LE ;IFROMTEXT produces a new NF (New Feature) entry in the IFF file
if there was an NF entry in the text file, with a FSN and ISN incremented
by 1. The user may supply the FSN to override the default count.

.INDEX IFROMTEXT> and ISN
.P0; A new ISN (internal sequence number) which is the second value in the 
 NF (New Feature) entry is created for each NF encountered in the text file. 
They are numbered monotonically, and any ISN values in the text file are 
ignored.

.INDEX IFROMTEXT> and FS entry
.LE ;IFROMTEXT produces an FS (feature status) entry in the IFF file,
the second element of the line being interpreted as the feature code (FC).
Any further elements (only four integer elements in total allowed) are used 
for the rest of the FS entry fields. If an FRT file is supplied with the /FRT
qualifier, and only the feature code is given, the feature 
code entry is read from the FRT, (a warning message being given if not present
in the FRT), and the graphical type extracted. For text and symbol features
the third FS entry field is set appropriately, with the 
rest set to defaults of 0 (so that the text feature positioning code is set 
to the SW corner).

.p0
If there were coordinates encountered without an FS entry, a default FS is 
created with a feature code of 0. This means that if the /FRT qualifier is
given and there is no FC 0 in the FRT, a warning message will result. Also,
if there is an FC 0 in the FRT which is a symbol or text feature, the third FS
entry field will be set appropriately, with possibly unexpected results.

.INDEX IFROMTEXT> and AC entry
.LE ;IFROMTEXT produces an AC (Attribute Code) entry in the IFF file 
for any AC entry in the text file. It checks that the second element of the 
line is an integer, or an ACD name, which has a valid ACD definition, either 
in the supplied FRT file, or as one of the default values always available when
an FRT file is processed. The 
remaining line elements are read and interpreted as the AC value, and some 
range checking depending on the AC datatype is performed. If an ACD 
definition is not found, a default AC type of 0 is assumed, with an AC value 
of 0, with suitable warning messages.

.INDEX IFROMTEXT> and ST entry
.LE ;IFROMTEXT produces an ST (Coordinate String) entry in the IFF file, 
and any further text file entries are interpreted as coordinates, until 
another IFF entry command is encountered.
If there is are further integers after the ST command, they are interpreted as 
the number of points to follow, and the pen up/down flag. This means that 
there must follow the correct number of coordinate pairs, and a warning 
message will be output if not, likewise if the pen flag is incorrect.

.INDEX IFROMTEXT> and ZS entry
.LE ;IFROMTEXT produces a ZS (3-dim string) entry in the IFF file, 
and any further text file entries are interpreted as coordinates.
See the ST section above.

.INDEX IFROMTEXT> and CB entry
.LE ;IFROMTEXT produces a CB (Coordinate Block) entry in the IFF file, 
and any further text file entries are interpreted as coordinates.
See the section on CB entries below for a more detailed description on
CB format.

.INDEX IFROMTEXT> and EM entry
.LE ;IFROMTEXT produces an EM (End of Map) entry in the IFF file at the
end of the text file being read.

.INDEX IFROMTEXT> and EJ entry
.LE ;IFROMTEXT produces an EJ (End of Job) entry in the IFF file at the
end of the text file being read.

.INDEX IFROMTEXT> and IFF junction entries
.LE ; IFROMTEXT ignores junction pointer entries (SH,JB,JP). ITOTEXT and
IFROMTEXT cannot be used to edit IFF files with these features. 

.INDEX IFROMTEXT> and incomplete text file
.LE ;If the input file is invalid or incomplete in any way the appropriate IFF
codes are given default values. Informational messages are output when this
occurs. If /LOG is specified the default values may also be output.

.INDEX IFROMTEXT> editing the text file
.LE ;Great care should be exercised in editing the text file. This is
particularly important with the MH, MD, CC ,CP and CB entries where any small
changes may have large repercussions in the IFF file produced. 

.INDEX IFROMTEXT> action if EOF detected
.LE ;If end-of-file is detected in the input file ^*before\* an EJ (End of Job)
 entry has been read an EJ entry is defaulted. Any other entries needed to 
complete correctly the structure of the IFF file will be created before the 
defaulted EJ is written to the IFF file. The IFF file is then closed as if a 
real EJ entry had been read. 

.INDEX IFROMTEXT> and comments
.LE ;Comments in the textual representation of the IFF file may be used freely,
all text to the right of a comment delimiter ('!') will be ignored. Blank lines
may be inserted into the text file to aid clarity. These too will be ignored
by IFROMTEXT.

.END LIST
.BLANK

.HL 3 ^^^*IFROMTEXT and Map Headers\*
.INDEX IFROMTEXT> DESCRIPTION> IFROMTEXT and Map Headers
.INDEX IFROMTEXT> and Map Headers
.P 0;IFROMTEXT produces a default empty MH 0 (Map Header) entry in the IFF file
if there was no MH entry in the text file.

The map header types and their intended users are:
.LM +3
.P0;0##map#header#is#unset
.BR;1##MCE#specific#map#header#################-# edit with MCEHED
.BR;2##OSGB#specific#type#2#map#header#########-# edit with OMHED
.BR;3##OSGB#specific#type#3#(OSTF)#map#header##-# edit with OS editor
.BR;4##OSGB#specific#type#4#(CITF)#map#header##-# edit with OS editor
.LM -3

.P 0; MCEHED is a utility supplied with the customer-specific package MCE.
OSMHED is a utility in the IFFOSTF module of the CONVERT package.

.P 0; Type 1 map headers are MCE specific and not intended for use by others.

.P 0; Type 2 map headers are intended for users of OSTF data to hold OS
specific header information needed during conversion to and from IFF.

.P 0; Type 3 OS map headers are intended for use by Ordnance Survey
(Great Britain) only and will be edited using OS developed header editors.
If the text file contains a type 3 MH entry then the size of the
entry is taken from the translation table LSL$OS__MH__TABLE and the header
will be copied to the IFF file as an ASCII block. Note that, for type 3 OSTF
headers, the size of the header will be the sum of the -1 and -20 header sizes
specified in the translation table. 

.P 0
For type 3 map headers, the sizes (OSTF__MH__ONE and OSTF__MH__TWENTY) in the
lookup table are intended to be static for OSTF and are assumed to be correct.
This number of bytes will be used and if it is too small then not all of the
header will copied to the IFF MH entry, the remainder being skipped, and the
next entry (the MD) will be processed.
If the size in the table is larger than the MH entry, then there is a danger
that some of the MD entry will be copied in to the header and the MD entry
will not be found. However, a default type 2 map descriptor will be created.
It is therefore important to ensure that the header size(s) accurately reflect
the size of the text MH entry.

.P 0;If a type 3 header is being manually edited into the text file then it is
safer to have a header that is longer than the size specified in the
translation table. Any totally blank text lines must be represented as 80
spaces rather than a carriage return.

.P 0; Type 4 CITF map headers are intended for use by Ordnance Survey
(Great Britain) only and will be edited using OS developed header editors.
Since type 4 map headers are variable in length, they are copied in lines
(of 80 characters each) to the MH entry which will be only as large as
required for number of lines in the text file. The size in the lookup table
LSL$OS__MH__TABLE is not used, but the program reads lines until the map
descriptor is found which is denoted by 'MD' or '!MD'. Since the first two
characters of a CITF header line must be a numeric record descriptor, there
should be no text in the header which could be mistaken for the Map Descriptor.

.P 0;If the MH entry is invalid or missing then a default type 0 header is 
created. An invalid MH entry is one where the MH entry size is not 0 or 174.
This is because MH type 0 has a entry size of zero and MH type 2 (OS) has
an entry size of 174 words.
For type 3 headers, the size is taken from the translation table and so
the size in the MH entry should be zero.

.P 0;For details of how to set up the translation table, refer to the DATA
PREPARATION section of the IFFOSTF chapter in the "Convert User Guide".

.TP 10
.P 0;A typical type 2 MH entry, when converted to text using ITOTEXT may look
like:
.blank
.LM -10
.literal
MH 174 2
            0       436500       122000         1250            0            0
            0            0            0            0            0            0
            0            0            0            0            0            0
            0            0       436500       122000            0            0
           50         1250         6500            0            0            0
            0            0            0            0            0            0
            0            0            0            0            0            0
            0            0            0            0      4260880      4260880
      4260880      4260880            0            0            0            0
            0            0            0            0            0            0
            0            0            0            0            0            0
            0            0            0            0      4260880      4260880
      4260880      4260880      4260880      4260880      4260880      4260880
      4260880      4260880      4260880      4260880      4260880      4260880
      4260880      4260880      4260880      4260880      4260880      4260880
      4260880      4260880      4260880      4260880      4260880      4260880
      4260880      4260880      4260880      4260880      4260880      4260880
      4260880      4260880      4260880      4260880      4260880      4260880
      4260880      4260880      4260880      4260880      4260880      4260880
      4260880      4260880      4260880      4260880      4260880      4260880
      4260880      4260880      4260880      4260880      4260880      4260880
      4260880      4260880      4260880      4260880            0            0
            0            0            0      9439170            0            0
            0            0            0            0            0            0
            0            0            0            0            0            0
            0            0            0            0            0            0
            0            0            0            0            0            0
            0            0            0            0            0            0
            0            0            0            0            0            0
.end literal
.LM +10
.TP 10
.P 0;Here is an example of a type 3 OS Map Header when converted to text as an
ASCII block using ITOTEXT.
.blank
.LM -10
.literal
MH 0 3
  -1   0  436500  122000      50    1250       0    6500 -20   1                
           9  86   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0   0
   0   0   0   0   0   0   0   0   0   0       0                   0   0   0   0
   0   0                                                                        
                                                                                
                                                                                
           0   0
.end literal
.blank
.LM +10

.HL 3 ^^^*IFROMTEXT and Map Descriptors\*
.INDEX IFROMTEXT> DESCRIPTION> IFROMTEXT and Map Descriptors
.INDEX IFROMTEXT> and Map Descriptors
.P 0;Two text representations of a version 2 MD (Map Descriptor) entry
 are produced by  the ITOTEXT program. The first is unformatted and is included
 if ITOTEXT is  used for outputting the IFF file for subsequent retranslation 
with IFROMTEXT, eg:
.LEFT MARGIN +5
.NOFILL

MD      2        17352            0        17224
        0        17786            0            0            0            0
        0            0            0            0            0            0
        etc.
.FILL
.LEFT MARGIN -5
.BL
The second formatted version 2 MD is preceded by a '!' and is thus
ignored by IFROMTEXT, eg:
.LEFT MARGIN +5
.NOFILL

!MD LO  0.000000000000000  0.000000000000000
!   SC  0.000000000000000
!   PR   0
!   UN   0
!   SP   0
.FILL
.LEFT MARGIN -5
.BL
While it is not recommended to alter map descriptor fields it is recognised
that the user may wish to set the local origin and the scale of the IFF file
for subsequent processing by ITRANS. This may be done by inserting LO and
SC entries either immediately before or after the MD entry in the text file,
eg:
.LEFT MARGIN +5
.NOFILL

LO 500 500
SC 50000
MD "unformatted map descriptor values here"
.FILL
.LEFT MARGIN -5
.BL
.INDEX IFROMTEXT> IFROMTEXT and Map Descriptor LO and SC values
The LO and SC values will then be recognised by IFROMTEXT and included in the 
appropriate map descriptor fields. Running ITRANS/DESCRIPTOR will verify that
the correct values have been inserted in the map descriptor.
It must be stressed that LO and SC are not valid IFF entries and are not 
produced by ITOTEXT. 

.p 0;The LO and SC entries are invalid with a version 1 map descriptor. 
IFROMTEXT considers a version 1 map descriptor to be one where an alphabetic
 character follows the MD rather than the numeric values of the unformatted
 version 2, eg:
.LEFT MARGIN +5
.NOFILL

MD MA -1        0.0        0.0        0.0        0.0
   GR  0        0.0        0.0        0.0        0.0
   SC           0.0
   PS  0  0
   AG  0        0.0        0.0        0.0        0.0
.bl
.FILL
.LEFT MARGIN -5
.SKIP
.LEFT MARGIN -10

.TEST PAGE 15
.HL 3 ^^^*IFROMTEXT and the /ORIGIN qualifier\*
.INDEX IFROMTEXT> DESCRIPTION> IFROMTEXT and the /ORIGIN qualifier

.p0
IFROMTEXT can read a text file containing double precision (absolute) 
coordinates (usually created by using the ITOTEXT/ABSOLUTE process),
subtracting the supplied origin offset from all coordinate values and
outputting an IFF file in local coordinates relative to this origin.

.blank
.TEST PAGE 15
.HL 3 ^^^*IFROMTEXT and the CB entry\*
.INDEX IFROMTEXT> DESCRIPTION> CB entry

.p0
The CB entry is represented in textual form by a number of sub-entries 
which may be input to IFROMTEXT. 
A valid text form of the CB entry is as follows;-

.bl
.nofill
.left margin +5 
CB FL 0                                    ! FLags
   GT 1                                    ! Graphical Type
   NR 4                                    ! Number of Rows of Data
   NC 4                                    ! Number of Columns
   NA 2                                    ! Number of Attributes
   AT 3 45.2                               ! Attribute
   AT   SECONDARY__CODE  8                  ! Attribute
   HC    X      Y     Z      1006          ! 4 Column Headers
   DA   56.5   54.1  10.1      45          ! 4 rows of DAta  
        21.98  23.5  10.8      62
        89.5   67.2  78.9       ?          ! note the absent value
        12.34  56.7  31.6       8
.fill
.left margin -5

.p0
While IFROMTEXT will produce default values if any of the sub-entries are 
omitted or are invalid it is important that: -
.list
.le; The correct number of columns is included.
.le; Data values which are absent should be denoted by a ? for numeric, 
date or time values, or "" for character values, rather than omission. 
.end list 
If either of these conditions is not met then the data entry in the IFF file
produced may be corrupt.
.p0
Note that attribute codes may be input either by their numeric code (eg 1006), 
or by the attribute name (eg X) in the ACD table. ITOTEXT, however, always
outputs the numeric codes. 

.p0
Character attributes (maximum 4 characters) should be enclosed in double quote
markers while date and time attributes should be input in the standard VMS
formats. ie. 
.lit
	                13-OCT-1962
	                23:11:56.2
.end lit         
.p0
The  IFF User guide should be consulted for a detailed description of the CB
entry. 


.BLANK
.HL 3 ^^^*IFROMTEXT and Default Procedures\*
.INDEX IFROMTEXT> DESCRIPTION> Default Procedures
.INDEX IFROMTEXT> default procedures
.P 0;The user is not expected to produce a structurally complete textual
representation of an IFF file using a text editor. Any 
IFF entries which are out of sequence or which are missing will be defaulted
and the user informed. Which features are defaulted depends on what level of
feature has been input by the user. For example if only an MD entry is included
in the input file then only features at map level and above will be defaulted.
(MH,MD,EM,RA,EJ). The IFF user guide should be consulted for a detailed 
description of IFF file structure. 

.P 0; One potentially disruptive default is that used for a missing ST entry.
This consists of a single point having the coordinates (0.0,0.0). This will
clearly affect the RA (RAnge) entry of the IFF file. The inexperienced user is
recommended to use the /LOG qualifier which will output more detailed messages
regarding the default IFF entries generated. 

.P 0; If the input file contains an entry which is incomplete
or contains invalid values, then a message may be output informing the user that
 the remainder of the entry is defaulted. 
In the case of the CP (Corner points) entry, 16 values are expected. The 
following is an example of a deficient CP entry in the input file :

.NOFILL
.LEFT MARGIN +5

CP 0 500 0 500
   0 0   0 0

.fill
.LEFT MARGIN -5
After IFROMTEXT and a subsequent ITOTEXT the CP entry would appear as
follows : 
.tp 6
.NOFILL
.LEFT MARGIN +5

CP        0.0      500.0        0.0      500.0
          0.0        0.0        0.0        0.0
       1000.0        0.0     1000.0        0.0
       1000.0     1000.0     1000.0     1000.0

.FILL
.LEFT MARGIN -5

The last 8 CP values (which define the SE and NE control points) are
IFROMTEXT defaults and are not necessarly acceptable to the user. The user
should use IPATCH/WRITE to edit the CP entry.


.BLANK
.PAGE
.LM 0
^*-------------------------------------------------------------------------------\*
.INDEX IFROMTEXT> EXAMPLES
.HEADER LEVEL 2 ^*EXAMPLES\*
.NF
$ ^*IFROMTEXT<CR>\*
__Text-File: ^*TST1/LOG<CR>\* 
__IFF-File: ^*TST1<CR>\*
%LSLLIB-I-IFFOPENED, DUA0:[BUREAU]TST1.IFF;2 opened for write
%IFROM-I-OPTXT, text file DUA0:[BUREAU]TST1.TXT;0 opened for input
%IFROM-W-ILLEGCUST, wrong customer in MH entry near line 5
%IFROM-I-REMMHDEF, remainder of MH entry defaulted
%IFROM-I-SKIPPING, skipping to next entry
%IFROM-I-LAYWRT, layer 1 written
%IFROM-I-LAYWRT, layer 88 written
%IFROM-I-LAYWRT, layer 66 written
%IFROM-I-LAYWRT, layer 55 written
%IFROM-I-LAYWRT, layer 44 written
%IFROM-I-LAYWRT, layer 11 written
 ELAPSED: 00:00:37.02  CPU: 0:00:08.92  BUFIO: 6  DIRIO: 199  FAULTS: 335 
$
.FILL
.LEFT MARGIN +10
.JUSTIFY
.P 0;This example demonstrates how IFROMTEXT prompts for the input and output
files. The /LOG qualifier output indicates the defaults applied to
the file-specs supplied. The MH (Map Header) entry in the text file contained an
invalid MH customer code. IFROMTEXT reports this and outputs a default, all
zero, MH entry to the IFF file. The user will have to use IPATCH/WRITE
to insert the correct values and customer type into the MH entry. 
.LEFT MARGIN -10
.NO FILL
.TEST PAGE 15
.BLANK
$ ^*IFROMTEXT RRROM.TXT/LOG ROM.IFF<CR>\* 
%LSLLIB-I-IFFOPENED, DUA0:[BUREAU]RRROM.IFF;1 opened for write
%IFROM-I-OPTXT, text file DUA0:[BUREAU]RRROM.TXT;0 opened for input
%IFROM-W-ILLEGRAIGN, illegal RA entry ignored at line 1
%IFROM-I-SKIPPING, skipping to next entry
%IFROM-I-LAYWRT, layer 1 written
%IFROM-I-LAYWRT, layer 11 written
%IFROM-I-CALCRAOUT, calculated RA entry written to IFF file
 ELAPSED: 00:01:10.77  CPU: 0:00:16.93  BUFIO: 6  DIRIO: 252  FAULTS: 324 
$
.FILL
.JUSTIFY
.LEFT MARGIN +10
.P 0;Here the user specifies both the input text file and output IFF file on
a single command line.  IFROMTEXT is unable to read the contents of the RA
(RAnge) entry in the text file and so calculates range values as ST and ZS
points are written to the IFF file. When the EJ is read from the text file, or
when end-of-file is detected, the calculated range values are patched into
the RA entry in the IFF file. The run completed normally. $STATUS is set to
SS$__NORMAL. 
.NO JUSTIFY
.SKIP
.NF
.TEST PAGE 15
.LEFT MARGIN -10
$ ^*IFROMTEXT SYS$INPUT: TSTSYS<CR>\*
IFF entry> ^*NO 1<CR>\*
%IFROM-I-RADEFAULT, RA entry defaulted
%IFROM-I-MHDEFAULT, MH entry defaulted
%IFROM-I-MD2DEFAULT, type 2 MD entry defaulted
%IFROM-I-NSDEFAULT, NS entry defaulted
%IFROM-I-CCDEFAULT, CC entry defaulted
%IFROM-I-CPDEFAULT, CP entry defaulted
IFF entry> ^*NO 1<CR>\*
IFF entry> ^*NF 1 1<CR>\*
IFF entry> ^*ST 1 0<CR>\*
IFF entry> ^*23.3 56.7<CR>\*
IFF entry> ^*EF<CR>\*
IFF entry> ^*EO<CR>\*
IFF entry> ^*<CTRL/Z>\*
%IFROM-I-EOFEJDEF, end-of-file detected - EJ entry defaulted
%IFROM-I-EMDEFAULT, EM entry defaulted
%IFROM-I-CALCRAOUT, calculated RA entry written to IFF file
 ELAPSED: 00:02:04.09  CPU: 0:00:03.47  BUFIO: 4  DIRIO: 133  FAULTS: 189 
$
.FILL
.LEFT MARGIN +10
.JUSTIFY
.P 0;Because SYS$INPUT: is specified, IFROMTEXT prompts for the input from the
terminal. IFROMTEXT fills in default values for those required IFF entries
which are not included. The user terminated the session by pressing <CTRL/Z>
instead of typing an 'EJ' entry. As the current map was still open in the
output IFF file IFROMTEXT generated a default EM entry to close the map. The
run completed normally. $STATUS is set to SS$_NORMAL. 
.NO JUSTIFY
.SKIP
.NF
.LEFT MARGIN 0

.REQUIRE "ifromtextmsg.rno"

