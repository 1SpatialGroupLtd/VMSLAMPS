.!
.! Define the title for the document
.!
.TITLE ISTSEL - IFF polygon segment selection utility
.PAGE
.NO FILL
^*------------------------------------------------------------------------------\*
^*MODULE####ISTSEL\*
.INDEX ISTSEL
.BLANK
^*------------------------------------------------------------------------------\*
.NO JUSTIFY
^*REPLACES\*##NONE
^*------------------------------------------------------------------------------\*
.HL 1 ^^^*FUNCTION\*
.LEFT MARGIN +10
.P 0;ISTSEL is the Laser-Scan *IFF *S*Tring *S*E*Lection utility and forms
part of the Laser-Scan POLYGONS Package. ISTSEL reads an IFF file and compares
text strings held as AC (Ancillary Code) left/right codes and TX (TeXt)
entries to keys given in a user specified lookup file. 
.INDEX ISTSEL> and AC entries
.INDEX ISTSEL> and TX entries

.P 0;If a match is found between the IFF text string and any of the keys in
the lookup file then the left/right code is replaced with the matched key
defined in the lookup file. After left/right code replacement, segments with
identical left/right codes are identified and are not written to the output
IFF file.  This provides ISTSEL with the mechanism for segment selection
and hence selective polygon aggregation.
.LEFT MARGIN -10
^*------------------------------------------------------------------------------\*
.HL 1 ^^^*FORMAT\*
.NOFILL
.LEFT MARGIN +10
.INDEX ISTSEL> format
.BLANK
	$#ISTSEL input-file-spec output-file-spec

.INDEX ISTSEL> command qualifiers
	^*Command qualifiers                         Default\*

	/DEF__FILE=file-spec                        See text.
	[NO]/LOG                                   /NOLOG
.BLANK
.LEFT MARGIN -10
^*------------------------------------------------------------------------------\*
.HL 1 ^^^*PROMPTS\*
.LEFT MARGIN +10
.BLANK
.INDEX ISTSEL> prompts
	__Input data file:     input-file-spec
.BLANK
 	__Output data file:    output-file-spec
.BLANK
.LEFT MARGIN -10
^*------------------------------------------------------------------------------\*
.HL 1 ^^^*PARAMETERS\*
.INDEX ISTSEL> parameters
.BLANK
input-file-spec
.BLANK
.LEFT MARGIN +10
.FILL
.P -2;-#specifies the IFF file which will be processed. Any part of the file
specification that is not supplied will be taken from the default
specification 'LSL$IF:IFF.IFF;0'.
.BLANK
.LEFT MARGIN -10
output-file-spec
.LEFT MARGIN +10
.BLANK
.P -2;-#specifies the IFF file to be created. Any part of the output
file specification that is not provided will be taken from the parsed input
specification. Note that a version number must ^*not\* be specified for the
output file. If a file with the specified name already exists, a new file will
be created with the version number incremented by one. 
.LEFT MARGIN -10
^*------------------------------------------------------------------------------\*
.TEST PAGE 10
.NOFILL
.HL 1 ^^^*COMMAND QUALIFIERS\*
.LEFT MARGIN +10
.BLANK
.P -10;/DEF__FILE=file-spec
.INDEX ISTSEL>command qualifiers
.INDEX ISTSEL>command qualifiers>/DEF__FILE
.FILL
.P -2;-#defines the lookup file which contains the code definitions supplied by
the user for the output IFF file. If /DEF__FILE is not specified or if
/DEF__FILE is specified with no argument the default used is
SYS$DISK:[]CODE__DEF.DAT;0. 
.BLANK
.NO JUSTIFY
.TEST PAGE 10
.P -10;/LOG
.I -10;/NOLOG#(default)
.INDEX ISTSEL>command qualifiers>/LOG
.JUSTIFY
.P -2;-#this will result in supplementary messages being sent to SYS$OUTPUT.
Supplementary messages are generated when a file is successfully opened, and a
messages indicating the progress of ISTSEL processing are also output.
.BLANK
.LEFT MARGIN -10
^*--------------------------------------------------------------------------------\*
.HL 1 ^^^*DESCRIPTION\*
.BLANK
^*##########----------------------------------------------------------------------\*
.LEFT MARGIN +10
.INDEX ISTSEL>description
^*General\*
.INDEX ISTSEL>description> general
.BLANK
.P 0;ISTSEL allows polygon segment selection to be performed on an IFF
file which contains data with left/right AC codes (AC types 4 and 5).
This enables the user to group together polygons of a given code under a new
code in the output IFF file.

.INDEX ISTSEL>description> selection critera
.P 0;The selection is based on information supplied by the user in a lookup
file which defines the new code groupings. Each new left/right code (keyword)
can be up to 255 characters in length. Up to 100 new codes may be specified.
Each new code may be defined to replace up to 100 old codes. 

.INDEX ILINK
.INDEX ILINK> and ISTSEL
.INDEX ISTSEL>and ILINK
.INDEX ISTSEL>and IFF junction structure
.P 0;ISTSEL does not require IFF junction entries to be present in the input 
IFF file, only that all links should have left/right AC codes. If junction
entries are present they currently are not transferred to the output file. The
STRUCTURE utility ILINK/STRUCTURE should be run on the ISTSEL output file if
IFF junction structure is required for later processing. 
.BLANK 2
^*----------------------------------------------------------------------\*

.HL 2 ^^^*Program operation\*
.INDEX ISTSEL> program operation

.P 0;ISTSEL operation can be defined as follows.
.LIST "o"

.LE ;The user specified code definitions lookup file is opened and read. ISTSEL
expects a new keyword followed by a list of old codes to be grouped under the
new heading. 

.LE ;The input IFF file is scanned for the text strings associated with
AC types 4 or 5, and TX entries. When a text string is located it is
compared with the list of old codes defined under each heading in the text
file. If a match is found then the old code is replaced by the keyword of
the group in which it was found in the lookup file. Leading and trailing spaces
and nulls are ignored in this comparison.

.LE ;If a substitution has been made for an AC entry then the left and right
codes (types 4 and 5) are compared. If they are identical then they will not
be written to the output IFF file.

.LE ;All other IFF entries including all altered TX entries are copied to
the output IFF file.

.LE ;All opened files are closed down and the program terminates setting $STATUS
to SS$__NORMAL if the run was successful.

.END LIST
.TEST PAGE 8
.BLANK 2
^*----------------------------------------------------------------------\*
.HL 2 ^^^*The Code Definition File\*
.INDEX ISTSEL> code definition file
.INDEX ISTSEL> code definition file> example

.P 0;ISTSEL reads a user defined lookup file to get the information required for
the segment selection process. A default code definition file CODE__DEF.DAT is
supplied with the polygon package and should be present in the directory
defined by the logical name LSL$LOOKUP. A copy of the example file is given
below. 
.BLANK
.NOFILL
.LEFT MARGIN -10
.TEST PAGE 26

!	Example code definition file for POLYGONS utility ISTSEL
!
!	Copyright 1987 Laser-Scan Ltd, Cambridge, England
!
!	Author: G S Tobiss					17-Feb-1987
!
!	File format is:
!
!	%New__code 
!	Old__code__1 [, Old__code__n ... ]
!
!	Where:
!
!       !         -  is a comment. Text after a "!" is ignored.
!	%         -  indicates that the following text is to be read as a new 
!                    segment code
!	New__code -  is the new segment code
!	Old__code -  is [one of a list of] old segment codes to be replaced
!                    by the new code. Old segment codes must be separated by
!                    commas .
!
! For example:
!
%LOW__STRAW__INCORPORATION__POTENTIAL
P123,P67a,P23/u
!
%MEDIUM__STRAW__INCORPORATION__POTENTIAL
P34, 901, River__terrace__material
!
%MEDIUM__STRAW__INCORPORATION__POTENTIAL
P67c,P98,P6Ab
!
.BLANK 2
.FILL
.LEFT MARGIN +10
.P 0;An exclamation mark '!' indicates a comment or comment line and is
ignored by ISTSEL when reading from the code definition file. The new
soil codes must be preceded by a percent '%' character. The old codes must
be separated by commas. The limit on the number of old codes in each group is
set at 100. Although IFF TX and AC entries can hold up to 255 characters, the
number of characters allowed in a new or old code is set at 80. Duplication
of old codes between the different new code groups is detected, a warning
identifying the suspect code is given. Processing is abandoned after the whole
file has been checked for duplication. Duplication of codes within a single new
code group is permitted.

.P 0; Using the example lookup file given above, all segments having the left
or right code 'P34', '901', and 'River__terrace__material' will be recoded
with with the new code 'MEDIUM__STRAW__INCORPORATION__POTENTIAL'. Segments
which have this new code on both left and right sides will be omitted from the
output IFF file and thus polygons formed by the segments having the 3 original
codes 'P34', '901', and 'River__terrace__material' will be merged. The
new polygon now formed by the merged original polygons will have the code
'MEDIUM__STRAW__INCORPORATION__POTENTIAL'.
.PAGE
.LEFT MARGIN -10
^*------------------------------------------------------------------------------\*
.HL 1 ^^^*EXAMPLES\*
.BLANK 2
.NOFILL
.INDEX ISTSEL> examples of use

$ ^*ISTSEL/DEF__FILE=POLDEF.DAT/LOG<CR>\*
^*__Input IFF file: DUA3:[BUREAU.SOILS]OLDCODES.IFF;7<CR>\*
^*__Output IFF file: GLEYS<CR>\*
%ISTSEL-I-DEFOPENED, /DEF_CODE file SYS$DISK:[]POLDEF.DAT;0 opened for read
%LSLLIB-I-IFFOPENED, DUA3:[BUREAU.SOILS]OLDCODES.IFF;7 opened for read
%LSLLIB-I-IFFOPENED, DUA3:[BUREAU.SOILS]OLDCODES.IFF;8 opened for write
Number of left/right coded links processed = 129
Number of left/right coded links deleted = 23
 ELAPSED: 00:02:01.10  CPU: 0:00:57.15  BUFIO:8250  DIRIO: 3230  FAULTS: 1037
$
.LEFT MARGIN +10
.FILL
.P 0;In this run of ISTSEL the user has supplied a specific code definition
lookup file-spec using the /DEF__CODES qualifier. As only the filename and
extension for the lookup file have been specified, the missing device and
directory are taken from the default 'SYS$DISK:[]' (i.e. user's current default
set using the VMS SET DEFAULT or the SD command) and the version number
defaults to ';0', i.e. the latest version of the file. 

.P 0;The /LOG qualifier has also been selected. The user has then pressed
carriage return after which he has received a prompt for the input file. In
response to this prompt he has supplied a complete specification for the input
file. The user has again pressed carriage return and has been prompted for the
output file-spec. The missing parts of the output file specification have been
taken from the input file-spec. 

.P 0;Notice that as a result of specifying the /LOG qualifier, messages have 
been output indicating the successful opening of the code definition lookup 
file and the input and output IFF files. At the end of the run ISTSEL has 
output a summary of the number of left/right coded links processed and how 
many have been omitted from the output file. The run completed successfully.
$STATUS is set to SS$__NORMAL - normal successful completion.
.BLANK 2
.TEST PAGE 10
.NOFILL
.LEFT MARGIN -10
$ ^*ISTSEL/LOG<CR>\*
^*__Input IFF file: DUA3:[BUREAU.SOILS]OLDCODES.IFF;7<CR>\*
^*__Output IFF file: GLEYS<CR>\*
%ISTSEL-E-OPDEF, error opening code definition file SYS$DISK:[]CODE__DEF.DAT;0
-LSLLIB-E-NOSUCHFILE, file cannot be found
 ELAPSED: 00:02:01.10  CPU: 0:00:57.15  BUFIO:8250  DIRIO: 3230  FAULTS: 1037
$
.LEFT MARGIN +10
.FILL
.P 0;In this run of ISTSEL the user has pressed carriage return after the
ISTSEL command and has received a prompt for input. In response to the prompt
he has supplied a complete specification for the input file. The missing parts
of the output file specification have been taken from the input file-spec. The
default definition file SYS$DISK:[]CODE__DEF.DAT is assumed (i.e. that it is
in the current default directory), since no alternative has been specified
with the /DEF__FILE qualifier. No lookup file of that name exists, however,
and ISTSEL aborts execution. STATUS is set to SS$__ABORT. 

.P 0;The user must ensure that a lookup file having the default specification
is available, (or else explicitly supply a lookup file-spec with the /DEF__FILE
qualifier), before attempting to re-run ISTSEL.
.LEFT MARGIN -10
.BLANK
.TEST PAGE 10
.NOFILL
$ ^*ISTSEL POLFILE NEWFILE<CR>\*
 ELAPSED: 00:01:10.20  CPU: 0:00:37.15  BUFIO:6250  DIRIO: 2230  FAULTS: 797
$
.LEFT MARGIN +10
.FILL
.P 0;In this run of ISTSEL the user has only specified a filename for the
input and output file-specs. The missing parts of the file specifications have
been taken from the default file-spec 'LSL$IF:IFF.IFF;0'. The default
definition file SYS$DISK:[]CODE__DEF.DAT;0 is assumed (i.e. that it is in
the current default directory), since no alternative has
been specified with the /DEF__FILE qualifier. The run completed successfully.
$STATUS is set to SS$__NORMAL - normal successful completion.
.PAGE
.LEFT MARGIN -10
^*------------------------------------------------------------------------------\*
.HEADER LEVEL 1 ^*MESSAGES (INFORMATIONAL)\*
.JUSTIFY
.BLANK
These messages give information only, and require no immediate action by the
user. They are often used to supply explanatory information in support of a
warning or error message. 
.BLANK
.LEFT MARGIN +4
.NO JUSTIFY
.I -4;DEFOPENED, /DEF_CODE file 'file-spec' opened for read
.P 0;^*Explanation:\*#The specified (or default) code definition lookup file has
been opened successfully. 
.P 0;^*User action:\*#Check that the file specified is the one that was intended
for use.
.PAGE
.LEFT MARGIN -4
^*------------------------------------------------------------------------------\*
.HL 1 ^^^*MESSAGES (WARNING)\*
.B
.FILL
.P 0;These messages are output when an error has occurred which the user can
correct immediately.
.LEFT MARGIN +4
.NO JUSTIFY
.B 2
.I -4;ERRAC, Only one left/right AC detected in feature with FSN 'integer' ('integer')
.P 0;^*Explanation:\*#The feature identified has has either a type 4 (left hand 
code) or type 5 (right hand code) AC (Ancillary Code) missing. Processing will
continue and the feature will be copied to the output file.
.P 0;^*User action:\*#Use LITES2 to investigate the feature in question and
add the relevant AC. 
.B
.PAGE
.LEFT MARGIN -4
^*------------------------------------------------------------------------------\*
.HL 1 ^^^*MESSAGES (ERROR)\*
.P 0;These messages indicate an error in processing which has caused the
program to terminate. The most likely causes are a corrupt or otherwise
invalid input IFF file, or an error related to command line processing and
file manipulation. As it is most unlikely that any output file produced will
be correctly processed, the output file will normally be deleted. 
.B 2
.P 0;DUPCODES, duplicate code "code" detected at line 'integer' of code definition file 'file-spec'
.LEFT MARGIN +4
.P 0;^*Explanation:\*#Duplicate codes have been detected in the definition file,
supplementary messages will identify the suspect codes. Processing will
continue until the whole definition file has been checked.
.P 0;^*User action:\*#Edit the suspect codes out of the definition file
.B 2
.NO JUSTIFY
.TEST PAGE 12
.I -4;FOR, error in code definition file format at line 'integer of 'file-spec'
.P 0;^*Explanation:\*#A list of old codes was detected before a new code
definition was found. 
.P 0;^*User action:\*#Check the format of the code definition file.
.B 2
.NO JUSTIFY
.TEST PAGE 12
.LEFT MARGIN -4
.P 0;MAXCODEEX, maximum number of new codes exceeded at line 'integer' of code definition file - maximum allowed is 'integer'
.P 0;MAXCODEEX, maximum number of old codes exceeded at line 'integer' of code definition file - maximum allowed is 'integer'
.LEFT MARGIN +4
.P 0;^*Explanation:\*#The maximum number of old or new left/right codes
currently allowed has been exceeded. 
.P 0;^*User action:\*#Ensure that the code definition file does not contain 
more than the specified number of old or new codes. If it does then use
VMS EDIT (or similar) to split the file into two (or more) new files. Re-run
ISTSEL once for each code definition file, thus performing the segment 
selection process in two stages.
.B 2
.NO JUSTIFY
.TEST PAGE 12
.I -4;NODATA, no data found in code definition file 'file-spec'
.P 0;^*Explanation:\*#No data was read before the end of the code definitions 
file was found.
.P 0;^*User action:\*#Check the content of the code definition file.
.B 2
.NO JUSTIFY
.TEST PAGE 12
.I -4;OPDEF, error opening code definition file 'file-spec'
.P 0;^*Explanation:\* ISTSEL is unable to open the code definition file
specified by the /DEF__CODE qualifier argument (or default).
.P 0;^*User action:\* The supplementary Laser-Scan, VMS system or RMS messages
which are output in support of this message will facilitate diagnosis. 
.P 0;Possible causes for the error are:
.LIST "o"
.LE ;the file-spec was invalid
.LE ;the device, directory or file is protected against read access.
.END LIST

.BLANK 2
.NO JUSTIFY
.TEST PAGE 12
.I -4;READEF, error reading line 'integer' of code definition file 'file-spec'
.P 0;^*Explanation:\*#An error has occurred while reading the specified code
definition file. The supplementary error messages should give more information
on the error.
.P 0;^*User action:\*#Check that none of the codes in the code definition file
are longer than 255 characters. Use the information supplied in the 
supplementary messages to diagnose the fault, then use the VMS EDIT (or 
similar) editor to correct the code definitions file. Re-run ISTSEL.
.BLANK 2
.NO JUSTIFY
.TEST PAGE 12
.INDENT -4;UNEXPEOF, unexpected end of IFF input file
.P 0;^*Explanation:\* The input IFF file terminated before an IFF EJ 
entry was encountered.
.P 0;^*User action:\* Use IMEND to correctly terminate the file.
.LEFT MARGIN -4
.PAGE
^*--------------------------------------------------------------------------------\*
.HEADER LEVEL 1 ^*MESSAGES (other)\*
.P 0;In addition to the above messages which are generated by ISTSEL itself,
other messages may be produced by the command line interpreter (CLI) and by
Laser-Scan libraries. In particular, messages may be generated by the IFF
library. These are introduced by '%IFF' and are documented in the IFF library
users' guide. If the cause of the error cannot be traced by the user and
Laser-Scan are consulted, then the output file should be preserved to
facilitate diagnosis. Generally, however, ISTSEL will attempt to delete any
corrupt output file before program termination. 
