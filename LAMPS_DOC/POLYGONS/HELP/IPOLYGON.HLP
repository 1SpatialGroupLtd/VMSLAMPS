
!*******************************************************************************
!*****    The IPOLYGON portion of the POLYGONS package's HELP file   ***********
!*******************************************************************************
2 IPOLYGON

   IPOLYGON is the Laser-Scan automatic IFF POLYGON creation and
   labelling utility. It forms the core of the Laser-Scan POLYGONS
   Package. 

   IPOLYGON is designed to be run in batch mode and all options
   may    be specified on the command line. No user interaction is
   required    during processing. 

   IPOLYGON carries out polygon formation and the determination of
   first order nesting based on the input geometry. 

   IPOLYGON offers two methods for labelling (and checking the
   consistency) of polygons: 

      1) Seed point assignment: the polygon label is extracted from
         the seed point data.
 
      2) Left/Right coding: each segment has a left and right
         AC (Ancillary Code). The polygon label is extracted from the
         text part of the AC. 

   In addition IPOLYGON provides a
   unique (internally generated) identifier for each polygon. 

   IPOLYGON offers four methods of polygon output:

      o   An IFF file containing complete closed polygons as
          single features. 

      o   An IFF file containing labelled segments with
          left/right codes. 

      o   An IFF file containing a single point feature lying in
          each polygon. 

      o   An ASCII file containing lists of those segments that
          make up polygons. 

   All output options allow the label and/or identifier for each 
   polygon to be output to the IFF features through the use of   
   user-specified AC (Ancillary Code) entries. 



3 Command_qualifiers


/ASCII

      /ASCII=([[NO]IDENT],
               [NO]LABEL])
      /NOASCII  (default)

   Causes a list of all the segments which form each polygon
   to be written at the end of the /LIST text file.  If /ASCII is
   specified without /LIST, the presence of /LIST on the command
   line is assumed and a text file created with the specification
   SYS$DISK:[]IPOLYGON.LIS;0. IPOLYGON will then behave as if an
   explicit /LIST qualifier was present on the command line. If
   /ASCII is specified without any of the keyword arguments the
   following defaults are assumed: 

      /ASCII=(NOIDENT, 
              NOLABEL) 

   Segment listings will be output for each of the polygons.
   Whether polygon boundaries include first-order nesting is
   governed by the /OPTIONS=[NO]NEST qualifier. The segment lists
   will be ordered clockwise or anticlockwise depending on the
   /OPTIONS=[ANTI]CLOCKWISE qualifier. The generation of area
   statistics is governed by the /OPTIONS=AREA qualifier. Area
   calculations will reflect the first-order nesting convention
   used to output the segment lists. 

      /ASCII=IDENT
      /ASCII=NOIDENT  (default)

   Indicates that the internally generated polygon identifiers 
   are to be written to the ASCII output file.

   By default identifiers are not written to the ASCII output
   file. 

      /ASCII=LABEL 
      /ASCII=NOLABEL  (default) 

   Indicates that labels obtained from either seed points or
   left/right codes are to be written to the ASCII output file.
   The /ASCII=LABEL combination cannot be used unless the /SEED
   or /LRCODE qualifiers are present. 

   Polygons for which labelling has failed will be output
   depending on the state of the /OPTIONS=UNDEFINED:'keyword'
   qualifier. 

   By default labels are not written to the ASCII output file. 


/LIST
      /LIST[='file-spec']
      /NOLIST  (default)

   By default message and diagnostic output will be to   
   SYS$OUTPUT. This option allows the user to redirect output to 
   the specified text file. If the optional file-spec argument
   is omitted IPOLYGON directs output to a file named   
   SYS$DISK:[]IPOLYGON.LIS. If the user supplies only a partial  
   file-spec the missing file specification components are taken
   from the default specification SYS$DISK:[]IPOLYGON.LIS;0. 

   If the /ASCII qualifier is present then a list of all the
   segments which form each polygon boundary is written at the
   end of the /LIST text file.  If /ASCII is specified without
   /LIST then the presence of /LIST on the command line is
   assumed and a text file created with the specification
   SYS$DISK:[]IPOLYGON.LIS;0. IPOLYGON will then behave as if an
   explicit /LIST qualifier was present on the command line. 


/LITES2
      /LITES2=file-spec
      /NOLITES2  (default)

   Creates a LITES2 command file to take the user to potential
   errors. Messages generated to report a potential error are
   incorporated in the file. By default the LITES2 command file
   specification is parsed against that of the input segments IFF
   file but with the substitution of logical name LSL$LITES2CMD:
   and the extension '.LCM'. Thus if the input IFF file is called
   LSL$IF:TST.IFJ then the default LITES2 command file is
   LSL$LITES2CMD:TST.LCM. 


/LOG
      /LOG
      /NOLOG (default)

   This will result in supplementary messages being sent to
   SYS$OUTPUT. Supplementary messages are generated when a file is
   successfully opened, and a messages indicating the progress of
   IPOLYGON processing are also output. 


/LIST
      /LIST[=file-spec]
      /NOLIST (default)

   By default message and diagnostic output will be to SYS$OUTPUT.
   This option allows the user to redirect output to the specified
   text file. If the optional file-spec argument is omitted IPOLYGON
   directs output to a file named SYS$DISK:[]IPOLYGON.LIS. If the
   user supplies only a partial file-spec the missing file
   specification components are taken from the default specification
   SYS$DISK:[]IPOLYGON.LIS;0. 

   If the /OPTIONS=LIST keyword is specified then a list of all the
   segments which form each polygon is written at the end of the
   /LIST text file.  If /OPTIONS=LIST is specified without /LIST
   then the presence of /LIST on the command line is assumed and a
   text file created with the specification
   SYS$DISK:[]IPOLYGON.LIS;0. IPOLYGON will then behave as if an
   explicit /LIST qualifier was present on the command line. 


/LRCODE
      /LRCODE=([LEFT_AC:'integer'],
               [RIGHT_AC:'integer'])

   Indicates that labelling information is to be extracted from
   ACs    (Ancillary Codes) on the input segments. Each input
   segment must have ACs indicating which polygons lie to the
   left and right of it. The polygon label is taken from the
   string part of the specified ACs. 

      /LRCODE=LEFT_AC:'integer'
      /LRCODE=LEFT_AC:4  (default) 

   The label for the polygon lying to the left of a
   segment is obtained by taking the string part of the AC entry
   with the specified AC type. By default this type is 4. 

      /LRCODE=RIGHT_AC:'integer' 
      /LRCODE=RIGHT_AC:5  (default) 

   The label for the polygon lying to the right of a
   segment is obtained by taking the string part of the AC entry
   with the specified AC type. By default this type is 5. 

   /LRCODE cannot be used with the /SEED qualifier. 


/ONEARM
      /ONEARM=(CONTAIN,DELETE,USE,[NO]WARN)

   The purpose of the /ONEARM qualifier is to enable the user to
   choose how IPOLYGON reacts when it encounters an IFF junction
   which has only one arm. Such junctions can cause great problems
   to polygon formation algorithms which are designed always to
   "turn right" or "turn left" relative to the "current" junction
   arm to form clockwise and anticlockwise polygons respectively. 
   
   IPOLYGON is designed to cope with any complexity of one arm
   junction branching and can, for example, form polygons from a
   mixture of dendritic drainage features and segments which do form
   closed polygons. 
   
   In addition to issuing simple warning messages when a one arm
   junction is encountered, IPOLYGON can deal with one arm junctions
   in one of three ways: 
  
      /ONEARM = CONTAIN

   When /ONEARM=CONTAIN is specified and a one arm junction is
   detected during polygon formation, IPOLYGON will go back to
   the junction that it left prior to arriving at the one arm
   junction and try a different arm. This process is repeated,
   possibly undoing much of the already formed polygon, until a
   route ahead is found and the polygon closes. IPOLYGON will
   pass segments joined to one arm junctions onto the output
   file. If polygon labels or identifiers are being used then an
   AC will indicate the segment is contained within the
   appropriate polygon. 

   /ONEARM=CONTAIN is only valid with the /SEGMENTS output
   qualifier. 

   The combination /ONEARM=CONTAIN cannot be used if
   /ONEARM=DELETE or /ONEARM=USE is present. 

      /ONEARM=DELETE 
      /ONEARM=DELETE  (default) 

   When /ONEARM=DELETE is specified and a one arm junction is
   detected during polygon formation, IPOLYGON will go back to
   the junction that it left prior to arriving at the one arm
   junction and try a different arm. This process is repeated,
   possibly undoing much of the already formed polygon, until a
   route ahead is found and the polygon closes. IPOLYGON will
   omit segments joined to one arm junctions from the output
   file. 

   If /ONEARM=DELETE is used with the /SEGMENTS=JUNCTIONS
   combination the output junction structured file has the same
   junction structure as the input file. Thus segments that would
   normally be omitted from output are retained. These can be
   identified if polygon labels or identifiers are being output.
   Such segments will have the text "Ignored Segment". 

   The combination /ONEARM=DELETE cannot be used if
   /ONEARM=CONTAIN or /ONEARM=USE is present. 
 
      /ONEARM=USE 

   When /ONEARM=USE is specified and a one arm junction is
   detected during polygon formation, IPOLYGON will track back
   down the other side of the free arm. This tracing round
   linework internal to a polygon can form a 'tree' which may (or
   may not) be connected to the outer boundary of the polygon.
   IPOLYGON will pass those segments that make up these trees
   onto the output file. If polygon labels or identifiers are
   being used then the left and right ACs will reference the same
   polygon. 

   The 'tree' will not affect polygon area calculations
   (/OPTIONS=AREA), nor will it affect FPP (Fast Plotting
   Program) area fill. 

   The combination /ONEARM=USE cannot be used if /ONEARM=CONTAIN
   or /ONEARM=DELETE is present. 

      /ONEARM=WARN 
      /ONEARM=NOWARN  (default) 

   Warn the user of the presence of all one arm junctions. If the
   /LITES2 qualifier is specified, commands are sent to the
   LITES2 command file to enable the user to quickly investigate
   the cause of the one arm junction using LITES2. 


/OPTIONS
      /OPTIONS=( [ [NO]AREA]
                 [,[ANTI]CLOCKWISE]
                 [,IDENT_TEXT:'text-string']
                 [,[NO]NEST]
                 [,UNDEFINED:'keyword'])

   Enables the user to select options that determine the method
   of polygon formation and the generation of unique identifiers.
   If /OPTIONS is not specified or is specified without any of
   the keyword arguments the following defaults are assumed: 

      /OPTIONS=(NOAREA,
                ANTICLOCKWISE,
                IDENT_TEXT:"Polygon ",
                NEST,
                UNDEFINED:KEEP)

      /OPTIONS=AREA
      /OPTIONS=NOAREA  (default)

   Provides output of polygon area statistics. The /OPTIONS=AREA
   keyword is available for use only with the /ASCII, /PIP and
   /POLYGONS qualifiers. Output of ASCII segment listings or IFF
   closed polygon boundary features will perform area
   calculations according to the setting of the /OPTIONS=NEST
   qualifier. This will only effect the calculated areas of
   'doughnut' shaped polygons. 

      /OPTIONS=CLOCKWISE
      /OPTIONS=ANTICLOCKWISE  (default)

   Specifies that the segment or coordinate listings of any
   closed polygon features produced as output, using the /ASCII
   or /POLYGONS options, will have their segments/coordinates
   ordered in a consistent clockwise direction. 

   The default coordinate ordering is anticlockwise. (See
   Description Section for details of IPOLYGON treatment of
   nested polygons). 

      /OPTIONS=IDENT_TEXT:'text-string'
      /OPTIONS=IDENT_TEXT:"Polygon "  (default)

   Specifies how the internally generated identifiers are to be
   constructed from an internally generated serial number. By
   default the identifier will be a string of the form 'Polygon
   xx' where xx represents the serial number. The default text
   part of the identifier can be overridden by supplying a new
   text part with the /OPTIONS=IDENT_TEXT:'text-string'
   combination. 

      /OPTIONS=NONEST
      /OPTIONS=NEST  (default)

   Indicates IPOLYGON should not determine first-order polygon
   nesting. Be warned that polygon areas calculated in
   conjunction with the /OPTIONS=NONEST qualifier will be
   incorrect in the case of 'doughnut' shaped polygons. In such
   cases the polygon area will represent that of the whole
   polygon, not the polygon minus the nested polygon area. 

   The /OPTIONS=NONEST combination is only applicable when the
   /ASCII or /POLYGONS qualifiers are present, that is those
   output options that output polygon boundaries as a single
   entity. 

   By default IPOLYGON will determine whether polygons are
   nested. 

      /OPTIONS=UNDEFINED:DELETE
      /OPTIONS=UNDEFINED:KEEP  (default)

   Specifies the IPOLYGON action when polygon labelling fails.
   There is only a need for such action if the output mechanism
   treats polygons in their entirety, namely the /ASCII, /PIP and
   /POLYGONS options. Similarly labelling can only fail if some
   attempt is made to label the polygons, that is either the
   /LRCODE or /SEED qualifier is present. 

   The default action is to output all polygons regardless of
   labelling failure. Polygons which suffered labelling failure
   are given the label "Undefined Polygon". 

   If /OPTIONS=(UNDEFINED:DELETE) is specified, any polygons
   which suffer labelling failure are omitted from the relevant
   output files. 


/PIP
      /PIP=([FC:'integer'],
           [[NO]IDENT],
           [IDENT_AC:'integer'],
           [ITERATE:'integer'],
           [[NO]LABEL],
           [LABEL_AC:'integer'],
           [LAYER:'integer'],
           [OUTPUT:'file-spec'])
      /NOPIP  (default)

   Indicates that one point feature per polygon are to be output
   to an IFF file. The coordinates of the point features are
   calculated to lie within the polygon. If /PIP is specified
   without any of the keyword arguments the following defaults
   are assumed: 

      /PIP=(FC:1,
            NOIDENT,
            ITERATE:1,
            NOLABEL,
            LAYER:1)

   The point-in-polygon features will be output with FC (Feature
   Code) 1 to layer 1. By default polygon labels and identifiers
   will not be copied to the output features. 

      /PIP=OUTPUT:'file-spec'

   Specifies the IFF file that the points-in-polygons are output
   to. In the absence of the /PIP=OUTPUT qualifier the output
   file specification is taken from that of the segment input
   file but with the file extension '.IFF'. This default
   mechanism may be overriden by use of the
   /PIP=OUTPUT:'file-spec' combination. Any file-spec argument
   given will be used as the output file specification. Any parts
   found to be missing from the file-spec OUTPUT will be taken
   from the input file-spec with a '.IFF' extension. 

      /PIP=LAYER:'integer'
      /PIP=LAYER:1  (default)

   Enables the user to specify the layer to be used for IFF
   point-in-polygon output. By default the point features will be
   placed in layer 1 and will be given a feature code of 1. 

      /PIP=FC:'integer'
      /PIP=FC:1  (default)

   Enables the user to specify the FC (Feature Code) to be used
   for IFF point-in-polygon output. By default the point features
   will be placed in layer 1 and will be given a feature code of
   1. 

      /PIP=IDENT
      /PIP=NOIDENT  (default)

   Indicates that the internally generated polygon identifiers
   are to be copied to the point-in-polygon features. The
   identifier is transferred as the string part of the AC type
   specified by the /PIP=IDENT_AC:'integer' combination. 

   The numeric field of the AC will contain the polygon area if
   the /OPTIONS=AREA qualifier is present. 

   By default identifiers are not added to the output
   point-in-polygon features. 

      /PIP=IDENT_AC:'integer'
      /PIP=IDENT_AC:82  (default)

   Specifies which AC type is to be used to copy the polygon
   identifiers to the point-in-polygon features. The
   /PIP=IDENT_AC:'integer' combination cannot be used unless the
   /PIP=IDENT combination is present. By default labels are
   copied to point-in-polygon features using AC type 82. 

      /PIP=ITERATE:'integer'
      /PIP=ITERATE:1  (default)

   Indicates that a maximum of 'integer' iterations should be
   used to place the point-in-polygon. The number of iterations
   should be in the range 1 to 100. All values of the iterate
   parameter will produce points that lie in the required
   polygons. A higher value should produce a better positioned
   point, albeit at the expense of increased CPU time. 

      /PIP=LABEL
      /PIP=NOLABEL  (default)

   Indicates that labels obtained from either seed points or
   left/right codes are to be transferred to the point-in-polygon
   features. The label is transferred as the string part of the
   AC type specified by the /PIP=LABEL_AC:'integer' combination.
   The /PIP=LABEL combination cannot be used unless the /SEED or
   /LRCODE qualifiers are present. 
   
   The numeric field of the AC will contain the polygon area if
   the /OPTIONS=AREA qualifier is present. 
   
   Polygons for which labelling has failed will be output
   depending on the state of the /OPTIONS=UNDEFINED:'keyword'
   qualifier. 

   By default labels are not added to the output point-in-polygon
   features. 

      /PIP=LABEL_AC:'integer'
      /PIP=LABEL_AC:82  (default)

   Specifies which AC type is to be used to pass labels to the 
   point-in-polygon 
   features. The /PIP=LABEL_AC:'integer' combination cannot be 
   used unless the /PIP=LABEL combination is present.
   By default labels are copied to point-in-polygon features
   using AC type 82. 
  

/PME
      /PME
      /NOPME  (default)

   Enables the PME performance monitor. The /PME qualifier is
   reserved for Laser-Scan use. PME is a code optimisation tool
   and should be invoked by LSL software personnel only. 


/POLYGONS
      /POLYGONS=([FC:'integer'],
                [[NO]IDENT],
                [IDENT_AC:'integer'],
                [[NO]LABEL],
                [LABEL_AC:'integer'],
                [LAYER:'integer'],
                [OUTPUT:'file-spec'])
      /NOPOLYGONS  (default)

   Indicates that closed polygon boundaries are to be output to
   an IFF file as single features. If /POLYGONS is specified
   without any of the keyword arguments the following defaults
   are assumed: 

      /POLYGONS=(FC:1,
                 NOIDENT,
                 NOLABEL,
                 LAYER:1)

   The closed polygon boundary features will be output with FC
   (Feature Code) 1 to layer 1. By default polygon labels and
   identifiers will not be copied to the output features. Whether
   polygon boundaries include first-order nesting is governed by
   the /OPTIONS=[NO]NEST qualifier. The polygon boundaries will
   be ordered clockwise or anticlockwise depending on the
   /OPTIONS=[ANTI]CLOCKWISE qualifier. 

   If the /OPTIONS=NONEST qualifier is not present then IPOLYGON
   will determine first-order nesting. First level nested
   polygons will be included in the closed polygon feature with
   an invisible (pen-up) move between the enclosing polygon and
   the nested polygon coordinates. This facilitates area shading
   using standard Laser-Scan plotting software. 

      /POLYGONS=OUTPUT:'file-spec'
 
   Specifies the IFF file that the polygon boundary features are
   output to. In the absence of the /POLYGONS=OUTPUT qualifier
   the output file specification is taken from that of the
   segment input file but with the file extension '.IFF'. This
   default mechanism may be overriden by use of the
   /POLYGONS=OUTPUT:'file-spec' combination. Any file-spec
   argument given will be used as the output file specification.
   Any parts found to be missing from the file-spec OUTPUT will
   be taken from the input file-spec with a '.IFF' extension. 

      /POLYGONS=FC:'integer'
      /POLYGONS=FC:1  (default)

   Enables the user to specify the FC (Feature Code) to be used
   for IFF closed polygon feature output. By default the closed
   polygons will be placed in layer 1 and will be given a feature
   code of 1. 

      /POLYGONS=LAYER:'integer'
      /POLYGONS=LAYER:1  (default)

   Enables the user to specify the layer to be used for IFF
   closed polygon feature output. By default the closed polygons
   will be placed in layer 1 and will be given a feature code of
   1. 

      /POLYGONS=IDENT
      /POLYGONS=NOIDENT  (default)

   Indicates that the internally generated polygon identifiers
   are to be copied to the polygon boundary features. The
   identifier is transferred as the string part of the AC type
   specified by the /POLYGONS= IDENT_AC:'integer' combination. 

   The numeric field of the AC will contain the polygon area if
   the /OPTIONS=AREA qualifier is present. 

   By default identifiers are not added to the output polygon
   boundary features. 

      /POLYGONS=IDENT_AC:'integer'
      /POLYGONS=IDENT_AC:82  (default)

   Specifies which AC type is to be used to copy the polygon
   identifiers to the polygon boundary features. The
   /POLYGONS=IDENT_AC:'integer' combination cannot be used unless
   the /POLYGONS=IDENT combination is present. By default labels
   are copied to polygon boundary features using AC type 82. 

      /POLYGONS=LABEL
      /POLYGONS=NOLABEL  (default)

   Indicates that labels obtained from either seed points or
   left/right codes are to be transferred to the polygon boundary
   features. The label is transferred as the string part of the
   AC type specified by the /POLYGONS=LABEL_AC:'integer'
   combination. The /POLYGONS=LABEL combination cannot be used
   unless the /SEED or /LRCODE qualifiers are present. 

   If the /SEED qualifier is present then any AC (Ancillary Code)
   entries within the seed point feature will be copied to the
   closed polygon feature provided it is not to be used by
   IPOLYGON. This provides the user with flexible multiple
   attribute coding for the closed polygon. Each AC contains a
   numeric code field and up to 255 characters of text. 

   The numeric field of the AC will contain the polygon area if
   the /OPTIONS=AREA qualifier is present. 

   Polygons for which labelling has failed will be output
   depending on the state of the /OPTIONS=UNDEFINED:'keyword'
   qualifier. 

   By default labels are not added to the output polygon boundary
   features. 

      /POLYGONS=LABEL_AC:'integer'
      /POLYGONS=LABEL_AC:82  (default)

   Specifies which AC type is to be used to pass labels to the
   polygon boundary features. The /POLYGONS=LABEL_AC:'integer'
   combination cannot be used unless the /POLYGONS=LABEL
   combination is present. By default labels are copied to
   polygon boundary features using AC type 82. 


/PRINTER
      /PRINTER
      /NOPRINTER  (default)

   Queues the IPOLYGON text output for printing on SYS$PRINT:
   under the name given by the /LIST qualifier. If you specify
   /PRINTER without the /LIST qualifier, the output is directed
   to a file named SYS$DISK:[]IPOLYGON.LIS which is queued
   automatically for printing and, after printing, deleted. 


/SEED
      /SEED=([AC:'integer',
             [FC:'integer'[,...]],
             [FILE:'file-spec'],
             [LAYER:'integer'[,...]],
             [PAIR:'file-spec'],
             [SURROUND:'text-string'],
             [USE:'keyword'])
      /NOSEED  (default)

   Indicates that labelling information is to be extracted from
   seed points. The various options allow the user to specify
   where the seed points are to be read from, how they are to be
   identified and how a label can be obtained from them. 

   /SEED cannot be used with the /LRCODE qualifier. 

      /SEED=AC:'integer'
      /SEED=AC:82  (default)

   Specifies which AC (Ancillary Code) the test is to be taken
   from for labelling if the /SEED=USE:AC combination has been
   used. 

   By default seed points are expected to have an type 1 AC entry
   when the /SEED=USE:AC combination is used. 

      /SEED=FC:'integer'[,...]
      /SEED=FC:1  (default)

   Layer 0 specifies the FC (Feature Code) of the polygon seed
   points. The seed points may either be in the junction
   structured input IFF file or in a separate file specified
   using the /SEED=FILE qualifier. All features in the input file
   (or in the file specified with /SEED=FILE) which have the
   specified FC are considered to be seed points. The maximum
   number of feature codes which may be specified is 32. The
   feature codes must lie in the range 0 to 32767. All features
   which lie within IFF layer 0 will be ignored. 

   By default seed points are expected to have a feature code of
   1. 

      /SEED=FILE:'file-spec'

   Specifies a separate IFF file containing the polygon seed
   point features. Any parts of the file specification which are
   not supplied will be taken from the default specification
   LSL$IF:IFF.IFF;0. 

   It is most important that the /SEED=FILE:'file-spec' argument
   is omitted if the seed points are included within the junction
   structured segments file. IPOLYGON checks that any
   /SEED=FILE:'file-spec' argument does not clash with the input
   segment file specification. 

   All features in the seed file will be treated as seed points,
   and must accord with the rules for seed points, unless the
   seed point features are differentiated from other data in the
   file with /SEED=FC and/or /SEED=LAYER keyword arguments. The
   rules for IFF polygon seed point features are listed in the
   Description Section below. All features which lie within IFF
   layer 0 will be ignored. 

   If either the /SEED=LAYER or /SEED=FC combinations are present
   then seed points (whether they come from the input segment or
   a separate seed point file) are identified as those features
   that either belong to one of the specified layers or have one
   of the specified FCs (Feature Codes). It should be noted that
   these tests are complementary - that is a feature need only
   pass one of the tests to qualify as a seed point. 

   The default behaviour in the absence of both the /SEED=LAYER
   and /SEED=FC combinations depends on whether there is a
   separate seed point file or not. If there is a separate seed
   point file then all features within it are taken to be seed
   points. If there is not a separate seed point file then only
   features with FC one are deemed to be seed points. 

       /SEED:LAYER='integer'[,...]

   Specifies the layers containing the polygon seed points. The
   seed points may either be in the junction structured input IFF
   file or in a separate file specified using the /SEED=FILE
   qualifier keyword. All features in the input file (or in the
   file specified with /SEED=FILE) which lie within the specified
   layer are considered to be seed points. The maximum number of
   layer numbers which may be specified is 32. The layer numbers
   must lie in the range 1 to 32767. All features which lie
   within IFF layer 0 will be ignored. 

   By default no layers are assigned for seed points. 

      /SEED=PAIR:'file-spec'

   Specifies a FC (Feature Code) pair file which contains one or
   more FC pairs. Any parts of the file specification which are
   not supplied will be taken from the default specification
   LSL$IF:IFF.FCP;0. 

   The contents of the FC pair file is used to dynamically select
   the FC of the output polygon boundaries. The FC of the polygon
   boundary is determined from the FC of the corresponding
   polygon seed point. If seed point FC can be found in the first
   column of the FC pair file then the polygon boundary will have
   the FC given in the second column. If the seed point FC cannot
   be found, or no seed point has been assigned, then the FC
   specified by the /SEED=FC:'integer' combination will be used
   instead. It should be noted that this latter case always
   applies to the bounding polygon. 

   The FC pair file is an ASCII file containing pairs of FCs -
   one pair per line. Comment lines may be included in the file
   providing they begin with a '!'. The FC pairs must be ordered
   so that the seed point FCs (first column) are arranged in
   ascending order. Seed point FCs must be unique. 

   The /SEED=PAIR option can only be used when the /POLYGONS
   qualifier is present. 

      /SEED=SURROUND:'text-string'
      /SEED=SURROUND:"Surrounding void"  (default)

   Specifies the label to be assigned to the bounding polygon. By
   default IPOLYGON uses the label "Surrounding void". The
   text-string may have a maximum length of 255 characters. 

      /SEED=USE:AC
      /SEED=USE:FSN 
      /SEED=USE:TEXT  (default)

   Specifies how a text field is to be extracted from the seed
   point to provide the polygon label. 

      /SEED=USE:TEXT

   The default behaviour is specified by the /SEED=USE:TEXT
   combination. Seed points are expected to be an IFF text
   feature and hence to contain a TX (TeXt entry). The contents
   of this TX entry are used as the label for the polygon which
   encloses the seed point. 

      /SEED=USE:AC 

   The /SEED=USE:AC combination indicates that the label is to be
   taken from the string part of an AC (Ancillary Code) entry on
   the seed point feature. The relevant AC type can be specified
   using the /SEED=AC:'integer' qualifier. 

      /SEED=USE:FSN 

   When the /SEED=USE:FSN combination is used the seed points are
   expected to be unorientated point symbol features. The FSN
   (Feature Serial Number) of the seed point will be used as the
   label of the polygon which encloses the seed point. 

   If the /SEED=USE:TEXT combination is superceded then the
   presence of TX entries will be issue a warning. 


/SEGMENTS
      /SEGMENTS=([CONTAIN_IDENT_AC:'integer'],
                 [CONTAIN_LABEL_AC:'integer'],
                 [[NO]IDENT],
                 [[NO]JUNCTIONS],
                 [[NO]LABEL],
                 [LEFT_IDENT_AC:'integer'],
                 [LEFT_LABEL_AC:'integer'],
                 [OUTPUT:'file-spec'],
                 [RIGHT_IDENT_AC:'integer'],
                 [RIGHT_LABEL_AC:'integer'])
      /[NO]SEGMENTS  (default)

   Indicates that coded segments are to be output to an IFF file.
   If /SEGMENTS is specified without any of the keyword arguments
   the following defaults are assumed: 

      /SEGMENTS=(NOIDENT   
                 NOJUNCTIONS,
                 NOLABEL)

   Segments will be output to an IFF file without polygon labels
   and identifiers. The output of segments that are connected to
   one-arm junctions is governed by the state of the /ONEARM
   qualifier. 

      /SEGMENTS=OUTPUT:'file-spec'

   Specifies the IFF file that the coded segments are output to.
   In the absence of the /SEGMENTS=OUTPUT qualifier the output
   file specification is taken from that of the segment input
   file but with the addition of the appropriate file extension.
   If /SEGMENTS=JUNCTIONS is specified, the extension used is
   '.IFJ'. If /SEGMENTS=NOJUNCTIONS is specified, or
   /SEGMENTS=JUNCTIONS is absent from the command line, the
   extension '.IFF' is used. This default mechanism may be
   overriden by use of the /SEGMENTS=OUTPUT:'file-spec'
   combination. Any file-spec argument given will be used as the
   output file specification. Any parts found to be missing from
   the file-spec will be taken from the default file-spec as
   described above. 

      /SEGMENTS=JUNCTIONS
      /SEGMENTS=NOJUNCTIONS  (default)

   Provides IFF junction structured output of the left/right
   coded segments. Unless required at a later processing stage
   within a production flowline, it is recommended that the
   output file junction structure option is not selected as the
   resulting processing slows IPOLYGON output. 

   By default IPOLYGON does not create junction structure. 

      /SEGMENTS=IDENT
      /SEGMENTS=NOIDENT  (default)

   Indicates that the internally generated polygon identifiers
   are to be used to left/right code the output segments. The
   identifier is transferred as the string part of the relevant
   AC types. 

   By default identifiers are not used to code the output
   segments. 

      /SEGMENTS=CONTAIN_IDENT_AC:'integer'
      /SEGMENTS=LEFT_IDENT_AC:'integer'
      /SEGMENTS=RIGHT_IDENT_AC:'integer'

   Allows the user to specify which AC (Ancillary Code) types
   are to be used to code segments. The segments are coded by
   supplying the relevant internally generated polygon identifier
   as the string part of the AC. The
   /SEGMENTS=<...>_IDENT_AC:'integer' qualifier cannot be used
   unless the /SEGMENTS=IDENT qualifier is present. 

       o   If the /ONEARM=CONTAIN qualifier is present a
           segment will have either a 'left' and 'right' coded 
           pair of ACs or a single 'contains' AC. 

       o   If the /ONEARM=DELETE qualifier is present then all
           output segments will have a 'left' and 'right' coded
           pair of ACs each with a different polygon 
           identifier, unless the /SEGMENTS=JUNCTIONS qualifier
           is present in which case some segments will have the
           identifier "Ignored Segment".

       o   If the /ONEARM=USE qualifier is present then all 
           output segments will have a 'left' and 'right' coded
           pair of ACs, although these may have the same 
           identifier.

    By default the AC types used to output coded segments are:

      /SEGMENTS=CONTAIN_IDENT_AC:12
      /SEGMENTS=LEFT_IDENT_AC:4
      /SEGMENTS=RIGHT_IDENT_AC:5


     /SEGMENTS=LABEL
     /SEGMENTS=NOLABEL  (default)

   Indicates that labels obtained either from seed points or
   left/right codes are to be used to left/right code the output
   segments. The label is transferred as the string part of the
   relevant AC types.  The /SEGMENTS=LABEL combination cannot be
   used unless the /SEED or /LRCODE qualifiers are present. 

   By default identifiers are not used to code the output
   segments. 

      /SEGMENTS=CONTAIN_LABEL_AC:'integer'
      /SEGMENTS=LEFT_LABEL_AC:'integer'
      /SEGMENTS=RIGHT_LABEL_AC:'integer'

   Allows the user to specify which AC (Ancillary Code) types are
   to be used to code segments. The segments are coded by
   supplying the relevant polygon label as the string part of the
   AC. The /SEGMENTS=<...>_LABEL_AC:'integer' qualifier cannot be
   used unless the /SEGMENTS=LABEL qualifier is present. 

      o   If the /ONEARM=CONTAIN qualifier is present a segment
          will have either a 'left' and 'right' coded pair of 
          ACs or a single 'contains' AC. 

      o   If the /ONEARM=DELETE qualifier is present then all 
          output segments will have a 'left' and 'right' coded 
          pair of ACs each with a different polygon 
          identifier, unless the /SEGMENTS=JUNCTIONS qualifier
          is present in which case some segments will have the
          identifier "Ignored Segment".

      o   If the /ONEARM=USE qualifier is present then all 
          output segments will have a 'left' and 'right' coded
          pair of ACs, although these may have the same 
          identifier.

   If labelling has failed for a polygon then the polygon label
   "Undefined Polygon" is used. 
 
   By default the AC types used to output coded segments are: 

      /SEGMENTS=CONTAIN_LABEL_AC:12
      /SEGMENTS=LEFT_LABEL_AC:4
      /SEGMENTS=RIGHT_LABEL_AC:5





3 Format



    Although IPOLYGON offers the user many command qualifiers the
    basic command syntax is simple: 

        $ IPOLYGON input-file-spec [qualifier list]


3 Parameters

         input-file-spec

    Specifies the junction structured IFF file from which the
    polygons are  to be formed. Any part of the file specification
    which is not supplied will be taken from the default
    specification 'LSL$IF:IFF.IFJ'. 

