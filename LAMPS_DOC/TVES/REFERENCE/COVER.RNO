
.!** set up Qume page format
.LEFT MARGIN  0
.RIGHT MARGIN 80
.PAGE SIZE    60,80

.!* ensure that .NO FILL also retains blank lines
.KEEP

.!* enable the use of ^^^*...\* and * as bolding flags
.ENABLE BOLDING;.FLAGS  BOLD

.!* change the way .HL works
.!*        n1=6        lowest  level to have 'run-in' format
.!*        n2=2        highest level to have title in uppercase - ie 1 & 2 will have
.!*        n4=0        lowest  level not to have section number at left
.!*        n6=0        number of blank lines before header
.STYLE HEADERS 6,2,,0,,0

.!* Set the page layout for double sided copying, ie page numbers at bottom
.!* centre and title switching sides according to odd or even page number
.!.LAYOUT 2,2

.!* ensure that .INDEX entries will be transmitted as they were typed
.XLOWER

.!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
.TITLE COVER - Intervisibility Calculation and Display
.PAGE

.!******************************************************************************
.!*** TITLE								     ***
.!******************************************************************************

.FIGURE 14
.CENTRE ;^&MODULE COVER\&
.BL
.CENTRE ;^&Intervisibility Calculation and Display\&
.FIGURE 2
.CENTRE ;^&Issue 5.2 - 22-February-1993\&

.FOOT
.FLAGS SUBSTITUTE
.NOFILL
Copyright (C) 1989  Laser-Scan Ltd
Science Park, Milton Road, Cambridge, England CB4 4FY  tel: (0223) 420414

Document "COVER Reference"			Category "Reference"
Document Issue  1.0	D R Catlow		04-November-1985
                2.0     D R Catlow		14-August-1986
		3.0     D R Catlow              18-March-1987
		4.0	D R Catlow		23-November-1987
		5.0     D R Catlow		09-March-1989
		5.1     M W S Reid		20-July-1989
		5.2     J Barber		22-February-1993
.FILL
.NOFLAGS SUBSTITUTE
.END FOOT


.!******************************************************************************
.!*** First page, introduction						     ***
.!******************************************************************************
.PAGE
.BR
^*--------------------------------------------------------------------------------\*
.BR
^*MODULE#####COVER\*
.INDEX COVER

.P0
^*--------------------------------------------------------------------------------\*
.HL 2 ^*FUNCTION\*

.LM +10
COVER determines which areas of the terrain surface are visible or hidden from
the view of an observer. The observer may be positioned on or above
the terrain surface, and may represent either a human observer, or a device
such as a radio transmitter.

.P0; The input to the module is a Digital Terrain Model (DTM) and optionally a
file with information on the heights of surface features. The output is a grid
based intervisibility or cover map, that may be displayed in colour coded form
on a graphics device, or manipulated using other TVES modules. 

.P 0;Both input and output data are held in a Laser Scan Digital Terrain Image
(DTI) file. 
.LM -10

.TP 17
.P0
^*--------------------------------------------------------------------------------\*
.HL 2 ^*FORMAT\*

.LM +10

.P0
$ COVER
.LM -10

.TP 10
.P0
^*--------------------------------------------------------------------------------\*
.HL 2 ^*PROMPTS\*

.LM +10

.P0
COVER is an interactive, command driven program. Command input is expected
when the following prompt is issued:

.P+12
^*COVER >\*

.P0
Commands may be issued at the terminal in response to the prompt, or in the
case of a number of commands, by pressing a button on a digitising puck. 
.LM -10

.TP 10
.P0
^*--------------------------------------------------------------------------------\*

.!******************************************************************************
.!*** Description             						     ***
.!******************************************************************************

.page
.P0
^*--------------------------------------------------------------------------------\*
.HL 2 ^*DESCRIPTION\*

.lm +10
.P 0
COVER determines which areas of the terrain surface are visible or hidden from
the view of one or more observers.  

.P 0
Visibility is calculated from user supplied information on the position and
field of view of the observers, and using elevation data held in the form of a
Digital Terrain Model (DTM). 

.P 0
The user of the module is required to specify the geographical position of an
observer and optionally his height above the terrain surface, his cone of
vision, his direction and maximum distance of view.  The last two
parameters may be specified alternatively by supplying the position of a
target point.

.BR; Observer and target locations may be entered by digitising a series of
points on a map located on a digitising table, or via the terminal keyboard.
Definitions for up to 8 observers may be supplied. 

.P0;The DTM defines the height and shape of the terrain surface.  Optionally a
second file of the same resolution as the DTM and containing information on the
height of surface features such as woodland, may be supplied to the module,
and used in the visibility calculations. 

.BR;All the input data is supplied to the program as raster data held in a
Laser Scan Digital Terrain Image file. 

.P0;When calculating visibility along a line of sight, an option to take into
account earth curvature and terrestrial refraction may be selected.

.P 0
The output from the module is a cover or intervisibility map recorded in a
Digital Terrain Image file.  This map may be displayed in a colour coded form
on a graphics device. Hidden and visible areas of ground may be shown for each
observer, while those areas that are visible to more than one observer may be
distinguished.  Alternatively the visibility data may be processed through
other TVES modules; for example, the boundaries of all hidden ground may be
extracted and plotted in a vector form using the module VECTORISE. 

.P 0
An option to compute visibility along a simple single line of sight is provided
in the module. 

.P 0
COVER may be used to generate a cover map, create a new map from an existing
intervisibility map, or display a cover map, as separate and independent
operations. 
.P 0
.lm -10
.page
.P0
^*--------------------------------------------------------------------------------\*
.HL 2 ^*Calculation of Intervisibility\* 
.lm +8
The manual production of an intervisibility map is a time consuming operation.
Typically, it involves constructing a series of terrain profiles emanating from
an observation point using the contour information on a topographic map, and
the determination of the hidden parts of each profile by the graphical
construction of lines of sight.  Hidden areas are delineated by linking
together adjacent hidden profile sections to form continuous areas of hidden
ground. 

.BR; The accuracy of the resulting cover map depends on the scale of the
contour map, the vertical interval of the contours, the accuracy of the
contours, the number and spacing of the profiles that are constructed, and not
least the map interpretation skill of the user. 

.P 0; The increasing availability of Digital Terrain Models and computer
algorithms, has overcome many of the problems associated with the manual
construction of cover maps. 

.BR; Using computer methods it is possible to produce a more accurate cover map
based on a large number of densely spaced profiles; to interpolate consistently 
heights between recorded data points; to determine quickly line of sights along
profiles, and to produce a digital product that can be plotted, manipulated and
combined with other digital information. Use of automated methods has
encouraged the production of cover maps that show the complex patterns of
visibility generated by a number of observers. 

.bl 2
In order to determine the visibility of an area of terrain to an observer,
COVER constructs a series of lines of sight or profiles between the observation
point, and each DTM node within the defined rectangular area of interest. For
an area of interest covering 200 columns and 200 rows, a total of 40000
lines of sight may be potentially constructed; in practice fewer will be
required since only DTM nodes that lie within an observer's field of view are
considered.  Each DTM node is considered in turn, starting with the node
defining the SW corner of the area of interest. 

.P 0
In order to produce a reliable picture of visibility over an area of terrain,
the construction of this large number of lines of sight is essential, since
each line of sight between an observer and a DTM node, will intersect the grid
of elevation values at slightly different points.  Only in a small number of
cases will a line of sight exactly intersect at a DTM node, so interpolation of
heights between nodes is required. This fact is essential to an understanding
of the intervisibility algorithm used by COVER.

.BL 2
For each DTM node (target point) in the rectangular area of interest, the
following algorithmic steps are performed: 

.LIST
.LE; The height of the target point is read from the DTM, and the distance,
direction and angle of elevation of the target point from the observation point
is calculated. 

.LE; The position of the target point is tested against the field of view of
the observer. Only the visibility of a point that lies inside this 2D or 3D
area (depending on the cone of vision), is computed. 

.LE; The intersection of the line of sight drawn between the observation and
target point, with intervening columns of the DTM is first considered.  Each
column intersection point is calculated and considered in turn. For all
intersection points, other than those actually on a DTM node, a height value is
interpolated linearly using the heights of the DTM nodes above and below the
intersection point. 

.LE; Optionally compensation is applied for earth curvature and terrestrial
refraction, and the height of any surface feature at the intersection point is
derived from a second matrix, and added to the terrain surface height.

.LE; If the height at the intersection point is equal or below
both the observation and target point heights, the point has no influence on
visibility, and the program proceeds to calculate the intersection of the line
of sight with the next column. 

.LE; If the height at the intersection point is higher than the observation
or target points, then the target point cannot be visible to the observer, and
no further processing of the line of sight is performed.  The non-visibility
of the target point is recorded.

.LE; For other cases, the distance and angle of elevation of the intersection
point with respect to the observation point is calculated. If the height at the
intersection point is below the observer, the angle of elevation is of course
negative. 

.LE; The angle of elevation at the intersection point, is compared against the
target point elevation angle.  If it is greater, then it indicates that
the target point is not visible, and no further processing on the line of
sight is performed.  If it is equal or less than the target angle, the
program proceeds to determine the intersection of the line of sight with the
next column, and re-performs the above tests.

.LE; If after all intervening columns are considered, the target point is still
potentially visible to the observer, the program proceeds to consider the
intersection of the line of sight with all intervening DTM rows.  As before the
height at intersection points is interpolated linearly, though this time using
the heights of the DTM nodes immediately to the left and right of the
intersection point.  The height and elevation angle tests are applied as
before. 

.LE; If processing continues until all intervening rows have been considered,
then the target point must be visible to the observer.
.END LIST

.P 0
An important point to note about the implementation of  the algorithm, is that
the DTM nodes immediately surrounding an observer are considered first when
computing visibility along a line of sight.  The speed with which the
visibility of an area of terrain is determined is therefore dependent on the
height and form of the terrain surface in the immediate vicinity of an
observer. The smaller the area of terrain that is visible to an observer, the
faster the cover map will be generated. 
.Lm -8
^*--------------------------------------------------------------------------------\*
.HL 2 ^*Encoding of Cover Map Data Values\*
.lm +8
A visibility value is recorded in the output cover map for each node that
lies within the rectangular area of interest.  The recorded value is
dependent on how many observers are being considered, and to which observer
or observers the node is visible.

.P 0
The visibility status of a node to each observer is held in a bitwise manner:
bit 1 is set for observer 1, bit 2 is set for observer 2 and so on. A bit is
unset if the node is not visible to a particular observer. If the node lies
outside the field of view of all observers, or is recorded as a NULL value
in the input DTM, a value of -1 is written to the cover map. 

.BR; For the simple case of just observer 1, the values in the output cover map
will be in the range -1 to 1; for a cover map generated using observers 1 and
2, the values will be in the range -1 to 3, with a value of 3 indicating that
the node is visible to both observers. 

.P 0
The bitwise manner of encoding the data value is interpreted by COVER when the
cover map is displayed on a graphics device.  Other modules within TVES may not
be able to correctly interpret the values, however the WRITE option is provided
in COVER to write decoded information to a DTI file for use with modules such
as VECTORISE. 
.P0
.LM -8
^*--------------------------------------------------------------------------------\*
.HL 2 ^*Earth curvature and terrestrial refraction\*
.lm +8
.P0; It is important for many applications, and in particular when constructing
lines of sight over long distances, to take into account the effect of
earth curvature and terrestrial refraction in intervisibility calculations.

.BR; Earth curvature causes points to be observed at lower angles as distance
increases, and points to disappear below the horizon. The equation
.LIT

		e = d*d / 2R

.END LIT
is used to compute earth curvature (e), where d is the distance between
the observer and target point in kilometres, and R is the radius of the
earth (taken as 6378 kms in COVER).  For a distance of 10 kilometres, the
value of e will be approximately 7.84 metres.

.P0; Rays of light passing through the earth's atmosphere in any direction
other than vertical are bent from a straight path.  This refraction 
takes place in a direction towards the earth's surface under normal
atmospheric and temperature conditions.  As a result of refraction, points
tend to be observed at a higher elevation as distance from the viewpoint
increases. The equation 
.LIT

		r = (d*d) * k/2R

.END LIT
is used to compute the effect of refraction (r), where d is the distance
between the observer and target point in kilometres, R is the radius of the
earth, and k is the coefficient of refraction.  By default COVER uses a
coefficient value based on a 4/3 Earth of 0.125, although this value may be
redefined by the user. Using the default value, for a distance of 10
kilometres, the value of r is approximately 0.98 metres. 

.P0; If both earth curvature and refraction are taken into account, the height
of a point 10 kilometres from the observer is therefore adjusted downwards by
6.86 metres. 
.LM -8
.P0
^*--------------------------------------------------------------------------------\*
.HL 2 ^*Use of Surface Cover Height Information\*
.lm +8
.P 0;In most areas of the World, surface features such as vegetation and large
buildings, have a considerable influence on visibility along a line of sight.
This is particularly the case in the immediate vicinity of an observer, where
even a single building may severely restrict an observer's field of view. 

.P 0;Surface cover has generally not been taken into account in line of sight
calculations when using computer algorithms, because of the lack of data on the
location and height of surface features. Increasingly however, suitable
datasets are becoming available. A mechanism is provided within COVER to
determine the height of a point using both the terrain elevation data in the
DTM, and data on surface feature heights contained in a second grid file. 

.br;If this source data is available only in  a vector form, the TVES module
I2GRID may be used to generate the grid file used by COVER. The data in the
second file must be held at the same resolution as the elevation data in the
DTM. 

.P 0;If the option to use surface feature heights is selected, then a height
value from the second file is added to the terrain surface height at all points
where a line of sight intersects the grid of elevation values.  It is possible
to specify whether this action is carried out at the target point as well as
intervening points, or just at the intervening points alone. In the former case
it is the visibility of the top of a feature at the target point that is
determined; in the second case the visibility at the base of a feature is
calculated. 
.lm -8
.P0
^*--------------------------------------------------------------------------------\*
.HL 2 ^*Use of a Digitising Table and Puck Buttons\*
.lm +8
If your workstation incorporates a digitising table with a 16 button puck, then
it is possible to register a source document such as a map to the DTM, and to
issue a number of the COVER commands by pressing an appropriate button on the
table puck. 

.P 0 
If the logical name LSL$AUTO__ENABLE__TABLE is defined with a value of "1" the
program will attempt to initialise the Laser Scan Table Monitor Utility on
startup.  If the logical name is absent or has any other value, initialisation
is not performed on startup, however the table can be subsequently initialised
using the command ENABLE TABLE. 

.P 0
The Table Monitor utility controls reading from the digitising
table. It must be set up on your system if COVER is to take input from the
digitising table.  If table initialisation fails then the message: 
.LIT

	*** ERROR *** Initialising table monitor
	COVER will assume no table is available

.END LIT
will be output before the prompt ^*COVER>\* is displayed on the terminal. If
the event of failure, input from the digitising table or puck button is not
possible, and the program will accept commands only from the terminal. 

.P 0
Table initialisation will generally fail because no Table Monitor is currently
active, or because the Table Monitor is locked by another user. If neither of
these reasons appear to apply, you should consult the TABLIB Reference Manual,
or seek guidance from your system manager.

.BL 2
A map is registered to the DTM using the command ^*SETUP MAP\*.  Before giving
this command you should have first selected the input DTM, and have securely
attached the source document to the digitising table. 
.P0;Registration is performed by digitising 4 rectangular registration points.
The registration points represent 4 points on the map that correspond to the 4
corners of the DTM.  The points are digitised in the order top left (NW),
bottom left (SW), bottom right (SE) and top right (NE) using any button on the
table puck. A point is digitised in response to an explanatory prompt on the
terminal. 

.P 0; An error message is generated if any of the angles of the digitised
rectangle are less than 88 degrees, or greater than 92 degrees (ie. if the
corner points of the rectangle are more than 2 degrees off rectangular). In
this situation you will be asked to redigitise the 4 registration points.

.P0; Once a map has been positioned on the table, it is possible to define an
area of interest in the DTM by giving the WINDOW command and digitising two
points on the map.  It is also possible to digitise observer position and
target coordinates using appropriate puck buttons. 
.bl 2

The buttons on the table puck have the following meanings:

.PAGE
.LIT

  	+---------------------------------------------------+
	|            |            |            |            |
	|          0 |          1 |          2 |          3 |
	|            |            |            |            |
	|            |            |            |            |
	|  POSITION  | OBSERVER 1 | OBSERVER 2 | OBSERVER 3 |
	|            |            |            |            |
	|------------|------------|------------|------------|
	|          4 |          5 |          6 |          7 |
	|            |            |            |            |
	|            |            |            |            |
	| OBSERVER 4 | OBSERVER 5 | OBSERVER 6 | OBSERVER 7 |
	|            |            |            |            |
	|------------|------------|------------|------------|
	|          8 |          9 |          A |          B |
	|            |            |            |            |
	|            |            |            |            |
	| OBSERVER 8 |   TARGET   |    POINT   |   WINDOW   |
	|            |            |            |            |
	|------------|------------|------------|------------|
	|          C |          D |          E |          F |
	|            |            |            |            |
	|            |            |            |            |
	| undefined  | undefined  | undefined  |  ABANDON   |
	|            |            |            |            |
	|____________|____________|____________|____________|



.END LIT
.P 0;^*BUTTON 0\* is used to define the position of an observer currently
selected by means of the DEFINE OBSERVER command.  A single point inside the
map area should be digitised. 

.P 0;^*BUTTONS 1 to 8\* are used to define the position of observers 1 to 8
respectively. A single point inside the map area should be digitised.  Note
that when any of these buttons are pressed an implicit DEFINE OBSERVER
command is performed.

.P 0;^*BUTTON 9\* is used to define the position of the target view point
for the observer currently selected by means of the DEFINE OBSERVER command. A
single point inside the map area should be digitised. The distance and
direction of the target point from the observer is automatically calculated.

.P 0;^*BUTTON A\* is used to define the position of a single target point. The
point must be digitised within the map area.  The program will immediately
calculate whether the point is visible to all currently selected observers. 

.P 0;^*BUTTON B\* is used to give a WINDOW command.  The button may be pressed
either inside or outside the map area. After pressing the button, you will be
asked to digitise 2 points inside the map area, defining the SW corner (bottom
left) and NE corner (top right) of a rectangular area of interest. 

.P 0;^*BUTTONS C to E\* are currently undefined.

.P 0;^*BUTTON F\* may be used to abandon map set up, or window definition.  When
the button is pressed, control is returned to the terminal and the prompt
COVER> is displayed. 
.lm -8
.P 0
^*--------------------------------------------------------------------------------\*
.!******************************************************************************
.!*** Commands                						     ***
.!******************************************************************************

.PAGE
.SUBTITLE
.FIGURE 5
.STYLE HEADERS ,,,,1
.HL 2 ^*COVER commands\*
.STYLE HEADERS ,,,,7

.!******************************************************************************
.PAGE
.SUBTITLE _! command
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*_!\*
.INDEX COVER> commands> _!
.INDEX COVER> _! command

.LEFT MARGIN +8
.P0; Treat all text to the right of the '!' as a comment.
.LEFT MARGIN -8

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*FORMAT:        _! [comment text]

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Command parameters:\*

.LEFT MARGIN +8
.P-8;comment text
.P0; text that is to be treated as a comment and which will be excluded from
command interpretation.
.LEFT MARGIN -8

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*DESCRIPTION:\*
.P0; An exclamation mark is the standard TVES package comment delimiter. All 
text (and numbers) which lie to the right of a '!' character are excluded from 
command interpretation. Comments are useful for annotating command procedures
used in batch processing etc.
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Messages:\*_ None.


.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Examples:\*
.BLANK
.BR;COVER> ^*FILEIN TEST !open the file_<CR_>\*
.BR;COVER> ^*!Define a window_<CR_>\*
.BR;COVER> ^*WINDOW 1 1 10 10_<CR_>\*
.BR;COVER>

.!******************************************************************************
.PAGE
.SUBTITLE  CONE command
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*CONE\*

.LM +8
.p 0;Defines the cone of vision of the observer currently selected by means
of the DEFINE OBSERVER command.
.LM -8

.P0
^*--------------------------------------------------------------------------------
.LIT
FORMAT:		CONE angle
.end lit
.p 0
^*--------------------------------------------------------------------------------\*
.BR;^*Command parameters:\*

.LM +8
.P-8;angle
.P0; Angle is the cone of vision specified in degrees.  It should be supplied
as a real (floating point) value in the range 1 to 360. 
.LM -8
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*DESCRIPTION:\*
.p0;CONE is used to define the cone of vision of the observer selected using
the DEFINE OBSERVER command. 
.P0;If the cone angle is less than 180 degrees, the cone of vision is a 3
dimensional area, defining in combination with the distance of view,
the x, y and z extremities of an observer's field of view. 
.BR;For cone angles of 180 degrees or greater, the cone angle defines in
combination with the distance of view, the x and y (planimetric)
extremities of an observer's field of view. 
.BR; Only the visibility status of nodes that lie within an observer's
field of view are determined. 
.BR;In the output cover map, those nodes that are outside the field of view of
all observers are given a value of -1. 
.P0;When an observer is first selected, the default cone of vision is 360
degrees (ie. a complete circular scan around the observer), however if either a
TARGET or DIRECTION command is subsequently given, the default is redefined to
be 90 degrees. 

.BR; For a 360 degrees field of view, the DISTANCE command defines the radial
distance.  For cones of vision less than 360, the field of view is bisected by
a line defining the direction of view.  For example, if the current direction
of view is along a line 45 degrees from North, and the cone 60 degrees, then the
subtended cone is between 15 degrees and 75 degrees from North (ie 30 degrees
either side of the direction of view).
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Messages:\*
.P0;The following error messages are specific to the CONE command:
.LIT

*** ERROR *** Specifying command CONE
No observer has been selected using the DEFINE OBSERVER command

*** ERROR *** Specifying command CONE
Command requires 1 real argument

*** ERROR *** Specifying command CONE
Command argument should be in range 1.0 to 360.0

.END LIT

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Example:\*
             
.P0;COVER>^*DEFINE OBSERVER 1_<CR>\*
.BR;COVER>^*POSITION 100 100_<CR>\*
.BR;COVER>^*DISTANCE 70_<CR>\*
.BR;COVER>^*SHOW OBSERVERS_<CR>\*
.LIT

Current observer settings (Units are DTI Matrix Values)

Observer       Position          Height    Direction    Cone    Distance
  1          100      100         50.3        0.0      360.0      70.0

.END LIT
.BR;COVER>^*DIRECTION 45_<CR>\*
.BR;COVER>^*SHOW OBSERVERS_<CR>\*
.LIT

Current observer settings (Units are DTI Matrix Values)

Observer       Position          Height    Direction    Cone    Distance
  1          100      100         50.3       45.0       90.0      70.0

.END LIT
.BR;COVER>^*CONE 60_<CR>\*
.BR;COVER>^*SHOW OBSERVERS_<CR>\*
.LIT

Current observer settings (Units are DTI Matrix Values)

Observer       Position          Height    Direction    Cone    Distance
  1          100      100         50.3        0.0       60.0      70.0

.END LIT
.BR;COVER>

.!******************************************************************************
.PAGE
.SUBTITLE  CREATE command
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*CREATE\*
.INDEX COVER> commands> CREATE
.INDEX COVER> CREATE command

.LM +8
.p 0;Enables a new cover map to be generated using all or part of the
intervisibility information contained in an existing cover map. 
.LM -8

.P0
^*--------------------------------------------------------------------------------
.LIT
FORMAT:		CREATE infile-spec outfile-spec
.end lit
.p 0
^*--------------------------------------------------------------------------------\*
.BR;^*Command parameters:\*

.LM +8
.P-8;infile-spec
.P0;The file specification of an input DTI file which holds an existing cover
map.  This will be a file that has been created during an earlier run of COVER.
.BR;Any part of the file specification not supplied will be taken from the
default 'LSL$DTI:DTI.VIS'
.BR;If no infile-spec is supplied, you will be asked to supply one in response
to the prompt ^*Input cover map filename>\*
.p-8;outfile-spec
.p 0;The file specification of an output DTI file which will be created to hold
the new cover map. 
.BR;Any part of the file specification not supplied will be taken from the
default 'LSL$DTI:DTI.VIS' 
.BR;If no outfile-spec is supplied, you will be asked to supply one in response
to the prompt ^*Output cover map filename>\*
.LM -8
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*DESCRIPTION:\*
.p0;CREATE is used to generate a new cover map using all or part of the cover
information contained in an existing cover map.
.P0;The SELECT OBSERVER command controls what information is output to 
the cover map. Only visibility data relating to a selected observer is
extracted from the input cover map, and written to the output cover map.
.BR;For example, if the input cover map was generated using observers
1 2 and 3, information relating to only observers 1 and 3 may be selected
for output to the new cover map, by giving the command SELECT OBSERVERS 1 3
before using the CREATE command.
.BR;Information on the position and field of view of each selected observer
read from the input cover map file header, is displayed on the terminal.
The information is output in the current units of measurement.
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Messages:\*_ None
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Example:\*
             
.P0;COVER>^*SELECT OBSERVERS 1 3
.BR;COVER>^*CREATE TEST TEST1<CR>\*
.LIT

Observer values (Units are DTI Matrix Values)

Observer       Position          Height    Direction    Cone    Distance
  1          100      100         50.3        0.0      360.0      70.0
  3           45       30         27.3       23.6       90.0     123.6

.END LIT
.br;COVER>
.bl
.!******************************************************************************

.PAGE
.SUBTITLE   DEFINE OBSERVER command
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*DEFINE OBSERVER\*

.LM +8
.p 0;Determines which observer is to have his position and field of view
defined using the POSITION, DIRECTION, DISTANCE, CONE, HEIGHT and TARGET
commands. 
.LM -8

.P0
^*--------------------------------------------------------------------------------
.LIT
FORMAT:		 OBSERVER observer_number
.end lit
.p 0
^*--------------------------------------------------------------------------------\*
.BR;^*Command parameters:\*

.LM +8
.p  -8;observer__number
.P0; An integer value in the range 1 to 8 that is used to identify the
observer. 
.LM -8
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*DESCRIPTION:\*

.p 0;The DEFINE OBSERVER command controls to which observer the position and
field of view parameters are applied.

.BR;The POSITION, DIRECTION, DISTANCE, CONE, HEIGHT and TARGET commands act
only on the observer currently selected by means of the DEFINE OBSERVER
command. 

.P 0;If a digitising table and 16 button puck is available on the workstation,
puck buttons 1 to 8 may be used to give simultaneous DEFINE OBSERVER and
POSITION commands.  Button 1 is used for observer 1, button 2 for observer
2 and so on.

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Messages:\*
.P0;The following error messages are specific to the DEFINE and DEFINE OBSERVER
commands:
.LIT

*** ERROR *** Defining OBSERVER POSITION using puck button
No map set up has been performed

*** ERROR *** Defining OBSERVER POSITION using puck button
Observer position must lie within DTM bounds

*** ERROR *** Specifying command DEFINE
Command qualifier is OBSERVER

*** ERROR *** Specifying command DEFINE OBSERVER
Command requires 1 integer argument

*** ERROR *** Specifying command DEFINE OBSERVER
Command requires an integer argument in the range 1 to 8

.END LIT

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Examples:\*
             
.P0;COVER>^*DEFINE OBSERVER 5<CR>\*
.br;COVER>
.!******************************************************************************

.PAGE
.SUBTITLE  DIRECTION command
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*DIRECTION\*
.INDEX COVER> commands> DIRECTION
.INDEX COVER> DIRECTION command

.LM +8
.p 0;Defines the viewing direction of the observer currently selected by means
of the DEFINE OBSERVER command. 
.LM -8

.P0
^*--------------------------------------------------------------------------------
.LIT
FORMAT:		    DIRECTION angle
.end lit
.p 0
^*--------------------------------------------------------------------------------\*
.BR;^*Command parameters:\*

.LM +8
.P-8;angle
.P0;Angle is the direction of view specified in degrees measured clockwise from
North (Eg. DIRECTION 270 specifies a viewing direction that is due west). 
.BR;The angle should be supplied as a real (floating point) value in the
range 0 to 360.  
.LM -8
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*DESCRIPTION:\*
.p0;DIRECTION is used to specify the direction of view of the observer
currently selected by means of the DEFINE OBSERVER command. 
.BR;The direction of view is a line constructed between the observer and the
central target point.  It is specified as an angle measured clockwise from
North. 
.P0;Note that no direction need be specified if a 360 degrees scan around the
observer is required. 
.P0; The TARGET command is an alternative way of specifying target distance
and direction of view.
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Messages:\*
.P0;The following error messages are specific to the DIRECTION command:
.LIT

*** ERROR *** Specifying command DIRECTION
No observer has been selected using the DEFINE OBSERVER command

*** ERROR *** Specifying command DIRECTION
Command requires 1 real argument

*** ERROR *** Specifying command DIRECTION
Command argument should be in range 0.0 to 360.0

.END LIT
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Example:\*
             
.P0;COVER>^*DEFINE OBSERVER 1<CR>\*
.BR;COVER>^*POSITION 100 100<CR>\*
.BR;COVER>^*DIRECTION 225<CR>\*
.br;COVER>^*SHOW OBSERVERS<CR>\*
.LIT

Current observer settings (Units are DTI Matrix Values)

Observer       Position          Height    Direction    Cone    Distance
  1          100      100         50.3       225.0      90.0       0.0

.END LIT
.BR;COVER>
.bl
.!******************************************************************************

.PAGE
.SUBTITLE DISABLE ABSOLUTE command
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*DISABLE ABSOLUTE\*
.INDEX COVER> commands> DISABLE ABSOLUTE
.INDEX COVER> DISABLE ABSOLUTE command

.LEFT MARGIN +8
.P 0;Cancels a previous ENABLE ABSOLUTE command, and disables the use of
absolute coordinate values.

.LEFT MARGIN -8

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*FORMAT:                DISABLE ABSOLUTE \*


.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Command parameters:\*_ None.

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*DESCRIPTION:\*
.P 0;DISABLE ABSOLUTE cancels a previous ENABLE ABSOLUTE command.  If DISABLE
ABSOLUTE is given, then coordinate values required by the POINT, POSITION,
TARGET and WINDOW commands, supplied in metre or projection units, must be
specified as an offset from the SW corner of the matrix.
.P 0;The command also controls the format in which DTM header coordinate
values, and observer and target details are displayed, when the SHOW FILEIN,
SHOW OBSERVERS and SHOW TARGET commands are given.
.P 0;By default the use of absolute coordinate values is enabled.
.P 0
^*--------------------------------------------------------------------------------\*
.BR;^*Messages:\*

.P0;The following error message is specific to the DISABLE command:
.LIT

*** ERROR *** Specifying command DISABLE
Command qualifiers are ABSOLUTE, ADD_TARGET, BILINEAR, CULTURE, DIAGNOSTICS,
EARTH_CURVATURE or TABLE

.END LIT

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Examples:\*
.BLANK
.BR;COVER> ^*DISABLE ABSOLUTE_<CR_>\*
.BR;COVER>
.!******************************************************************************

.PAGE
.SUBTITLE DISABLE ADD__TARGET command
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*DISABLE ADD__TARGET\*
.INDEX COVER> commands> DISABLE ADD__TARGET
.INDEX COVER> DISABLE ADD__TARGET command

.LEFT MARGIN +8
.P 0;DISABLE ADD__TARGET is used to cancel a previous ENABLE ADD__TARGET 
command.
.LEFT MARGIN -8

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*FORMAT:                DISABLE ADD__TARGET\*


.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Command parameters:\*_ None.

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*DESCRIPTION:\*
.P 0;The DISABLE ADD__TARGET command is used to cancel any previous ENABLE
ADD__TARGET command.
.BR; The ENABLE ADD__TARGET command controls whether the height of a surface
feature is added to the terrain height at a target point. It therefore controls
whether the visibility of the top of a feature, or the visibility of the base
of a feature at the target point is determined. 
.BR;By default the ADD__TARGET option is disabled.
.P0;Use of the SHOW ENABLE command is recommended to check on the status of the
option before generating a cover map or line of sight. 
.P 0
^*--------------------------------------------------------------------------------\*
.BR;^*Messages:\*
.P0;The following error message is specific to the DISABLE command:
.LIT

*** ERROR *** Specifying command DISABLE
Command qualifiers are ABSOLUTE, ADD_TARGET, BILINEAR, CULTURE, DIAGNOSTICS,
EARTH_CURVATURE or TABLE

.END LIT

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Examples:\*
.BLANK
.BR;COVER> ^*DISABLE ADD__TARGET<CR_>\*
.BR;COVER>
.!******************************************************************************

.PAGE
.SUBTITLE DISABLE BILINEAR command
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*DISABLE BILINEAR\*
.INDEX COVER> commands> DISABLE BILINEAR
.INDEX COVER> DISABLE BILINEAR command

.LEFT MARGIN +8
.P 0;Cancels a previous ENABLE BILINEAR command, and disables the use of
height interpolation at the observer position.

.LEFT MARGIN -8

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*FORMAT:                DISABLE BILINEAR\*

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Command parameters:\*_ None.

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*DESCRIPTION:\*
.P 0; DISABLE BILINEAR cancels a previous ENABLE BILINEAR command. If DISABLE
BILINEAR is given, the observer height is assumed to be that of the nearest 
pixel. This is the default action.

.P 0
^*--------------------------------------------------------------------------------\*
.BR;^*Messages:\*

.P0;The following error message is specific to the DISABLE command:
.LIT

*** ERROR *** Specifying command DISABLE
Command qualifiers are ABSOLUTE, ADD_TARGET, BILINEAR, CULTURE, DIAGNOSTICS,
EARTH_CURVATURE or TABLE.

.END LIT

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Examples:\*
.BLANK
.BR;COVER> ^*DISABLE BILINEAR_<CR_>\*
.BR;COVER>
.!******************************************************************************

.PAGE
.SUBTITLE  DISABLE CULTURE command
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*DISABLE CULTURE\*
.INDEX COVER> commands> DISABLE CULTURE
.INDEX COVER> DISABLE CULTURE command
.LM +8
.p 0; Disables the use of surface feature height information. 
.LM -8

.P0
^*--------------------------------------------------------------------------------
.LIT
FORMAT:		DISABLE CULTURE 
.end lit
.p 0
^*--------------------------------------------------------------------------------\*
.BR;^*Command parameters:\*_ None.
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*DESCRIPTION:\*
.p 0; The DISABLE CULTURE command is used to disable the use of surface feature
height information.  It therefore cancels any previous ENABLE CULTURE command.
.P0;Use of the SHOW ENABLE command is recommended to check on the status of the
option before generating a cover map or line of sight. 
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Messages:\*
.P0;The following error message is specific to the DISABLE command:
.LIT

*** ERROR *** Specifying command DISABLE
Command qualifiers are ABSOLUTE, ADD_TARGET, BILINEAR, CULTURE, DIAGNOSTICS,
EARTH_CURVATURE or TABLE

.END LIT

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Example:\*
             
.P0;COVER>^*DISABLE CULTURE <CR>\*
.BR;COVER>
.bl
.!******************************************************************************

.PAGE
.SUBTITLE DISABLE DIAGNOSTICS command
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*DISABLE DIAGNOSTICS\*
.INDEX COVER> commands> DISABLE DIAGNOSTICS
.INDEX COVER> DISABLE DIAGNOSTICS command

.LM +8
.P 0;Disables the output of diagnostics messages. 
.LM -8

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*FORMAT:                DISABLE DIAGNOSTICS \*


.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Command parameters:\*_ None.

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*DESCRIPTION:\*
.P 0;DISABLE DIAGNOSTICS disables the output of diagnostic messages, and is
therefore used to cancel any previous ENABLE DIAGNOSTICS command.
.BR;By default diagnostic printout, which is sent to SYS$OUTPUT, is enabled.
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Messages:\*
.P0;The following error message is specific to the DISABLE command:
.LIT

*** ERROR *** Specifying command DISABLE
Command qualifiers are ABSOLUTE, ADD_TARGET, BILINEAR, CULTURE, DIAGNOSTICS,
EARTH_CURVATURE or TABLE
.END LIT

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Examples:\*
.BLANK
.BR;COVER> ^*DISABLE DIAGNOSTICS_<CR_>\*
.BR;COVER>
.!******************************************************************************

.PAGE
.SUBTITLE  DISABLE EARTH__CURVATURE command
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*DISABLE EARTH__CURVATURE\*
.INDEX COVER> commands> DISABLE EARTH__CURVATURE
.INDEX COVER> DISABLE EARTH__CURVATURE command

.LM +8
.p 0;Disables the option to take into account earth curvature and terrestrial
refraction when calculating visibility along a line of sight.
.LM -8

.P0
^*--------------------------------------------------------------------------------
.LIT
FORMAT:		 DISABLE EARTH_CURVATURE
.end lit
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*DESCRIPTION:\*
.p 0;Disables the option to take into account earth curvature and terrestrial
refraction when calculating visibility along a line of sight. The command is
therefore used to cancel any previous ENABLE__CURVATURE command.
.P 0;By default, no compensation is made for earth curvature or refraction in
line of sight calculations. 
.P0;Use of the SHOW ENABLE command is recommended to check on the status of the
option before generating a cover map or line of sight. 
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Messages:\*
.P0;The following error message is specific to the DISABLE command:
.LIT

*** ERROR *** Specifying command DISABLE
Command qualifiers are ABSOLUTE, ADD_TARGET, BILINEAR, CULTURE, DIAGNOSTICS,
EARTH_CURVATURE or TABLE
.END LIT

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Examples:\*

.P0;COVER>^*DISABLE EARTH__CURVATURE<CR>\*
.br;COVER>
.!******************************************************************************

.PAGE
.SUBTITLE  DISABLE TABLE command
.INDEX COVER> commands> DISABLE TABLE
.INDEX COVER> DISABLE TABLE command
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*DISABLE TABLE\*
.LM +8
.p 0;Turns off command input from the puck button and digitising table.
.LM -8

.P0
^*--------------------------------------------------------------------------------
.LIT
FORMAT:		DISABLE TABLE
.end lit
.p 0
^*--------------------------------------------------------------------------------\*
.BR;^*Command parameters:\* _None
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*DESCRIPTION:\*
.p 0; The DISABLE TABLE command turns off command and coordinate input
from the puck button and digitising table. If table input is disabled then
COVER will accept commands only from the terminal. 
.p0;Input from the table can be reselected using the ENABLE TABLE command.
.p0;The SHOW ENABLE command may be used to check on the status of table input.
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Messages:\*
.P0;The following error messages are specific to the ENABLE command:
.LIT

*** ERROR *** Specifying command ENABLE
Command qualifiers are ABSOLUTE, ADD_TARGET, BILINEAR, CULTURE, DIAGNOSTICS,
EARTH_CURVATURE or TABLE
 
.END LIT

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Example:\*
             
.P0;COVER>^*DISABLE TABLE <CR>\*
.br;COVER>
.bl
.!******************************************************************************

.PAGE
.SUBTITLE  DISPLAY command
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*DISPLAY\*
.INDEX COVER> commands> DISPLAY
.INDEX COVER> DISPLAY command

.LM +8
.p 0; Displays information contained in a cover map in a colour coded form
on a graphics display. 
.LM -8

.P0
^*--------------------------------------------------------------------------------
.LIT
FORMAT:		 DISPLAY file-spec
.end lit
.p 0
^*--------------------------------------------------------------------------------\*
.BR;^*Command parameters:\*

.LM +8
.P-8;file-spec
.P0; The file specification for a DTI file containing the cover map.
.BR; Any part of the file specification not supplied is taken from the default
'LSL$DTI:DTI.VIS'.
.BR; If no file-spec is supplied, you will be asked to supply one in
response to the prompt ^*Cover map filename>\*
.LM -8
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*DESCRIPTION:\*
.p 0; The DISPLAY command is used to display information contained in
the specified cover map in colour coded form on a graphics screen. 
.P 0;Different colours are used to indicate how many observers can see a
particular area of terrain.  Black is used to indicate those parts of the
terrain surface that are outside the field of view of all observers. 
.BR;The RGB values for the colours are read from the colour table
'LSL$LOOKUP:COVERCOL.DAT'.  The colour values may therefore be changed by
editing this file. 
.P0; Only information relating to those observers currently selected is
displayed on the graphics screen.  Using the SELECT OBSERVERS command it is
therefore possible when a cover map has been generated using a number of
observers, to view the visibility pattern associated with each observer in
turn, or any combination of observers. 
.BR; For this and other applications where a series of images are being
generated from the same cover map, the REDISPLAY command which requires no file
specification, should be used. 
.P0; The image is scaled to fill the area of the screen reserved for
cover map display.  A legend is written on the left of the screen, and relates
the display colours to the number of observers to whom the node is visible.
.BR;Text giving details of the position and field of view for each observer is
written at the bottom of the screen.  The UNITS command controls the units of
measurement that is used when writing observer information. 
.BR; If the cover map is larger than this display area, more of the screen will
be used, but no legend or text will be included. 
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Messages:\*_ None
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Example:\*
             
.P0;COVER>^*DISPLAY TEST <CR>\* 
.br;COVER>^*SELECT OBSERVERS 1 3_<CR>\*
.BR;COVER>^*REDISPLAY <CR>\*
.BR;COVER>
.P 0
.!******************************************************************************

.PAGE
.SUBTITLE  DISTANCE command
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*DISTANCE\*
.INDEX COVER> commands> DISTANCE
.INDEX COVER> DISTANCE command

.LM +8
.p 0;Defines the distance of view of the observer currently selected by means
of the DEFINE OBSERVER command. 
.LM -8

.P0
^*--------------------------------------------------------------------------------
.LIT
FORMAT:		 DISTANCE distance
.end lit
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Command parameters:\*

.LM +8
.P-8; distance
.P0;Distance is the observer's maximum distance of view along the central line
of sight (ie. the distance of the target point from the observer).
.BR;A real (floating point) value is required, specified in either matrix units
if these are the selected units of measurement, or in metres for all other
currently selected units of measurement. 
.LM -8
.p0
^*--------------------------------------------------------------------------------\*
.BR;^*DESCRIPTION:\*
.p0
.p 0;The DISTANCE command is used to specify the distance of the target
point from the observer currently selected using the DEFINE OBSERVER command.
.P0;The distance is specified in the units of measurement that have been
selected with the UNITS command, or set by default when the input DTM was
selected. If matrix units are selected, the distance is calculated in terms of
columns and rows; for all other units of measurement, the distance is measured
in metres. 
.BR; If a cone angle of 360 degrees has been specified for an observer, then
the DISTANCE command is used to specify the radius of the circle surrounding
the observer. 
.P0; ^*NOTE If no distance of view is specified for an observer, infinity is
assumed.\*
.P0; The TARGET command is an alternative way of specifying target distance
and direction of view.
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Messages:\*
.P0;The following error messages are specific to the DISTANCE command:
.LIT

*** ERROR *** Specifying command DISTANCE
No observer has been selected using the DEFINE OBSERVER command

*** ERROR *** Specifying command DISTANCE
Command requires 1 real argument

.END LIT
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Examples:\*

.P0;COVER>^*DEFINE OBSERVER 1<CR>\*
.BR;COVER>^*POSITION 100 100<CR>\*
.BR;COVER>^*DISTANCE 400.32<CR>\*
.LIT

Current observer settings (Units are DTI Matrix Values)

Observer       Position          Height    Direction    Cone    Distance
  1          100      100         50.3        0.0       360.0     400.32

.END LIT
.br;COVER>
.!******************************************************************************


.PAGE
.SUBTITLE ENABLE ABSOLUTE command
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*ENABLE ABSOLUTE\*
.INDEX COVER> commands> ENABLE ABSOLUTE
.INDEX COVER> ENABLE ABSOLUTE command

.LEFT MARGIN +8
.P 0;Selects the use of absolute coordinates values. 

.LEFT MARGIN -8

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*FORMAT:                ENABLE ABSOLUTE \*


.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Command parameters:\*_ None.

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*DESCRIPTION:\*
.P 0;If ENABLE ABSOLUTE is given, then coordinate values required by the
POINT, POSITION, TARGET and WINDOW commands, supplied in metre or projection
units, must be specified as absolute (rather than relative) coordinate values.
.P 0;For example if the projection indicates U.K. National Grid, then the
position of an observer should be specified as 6 figure National Grid
coordinates. 
.P 0; By default values should be specified as absolute coordinates. This
option can be disabled using the DISABLE ABSOLUTE command. 
.P 0
^*--------------------------------------------------------------------------------\*
.BR;^*Messages:\*

.P0;The following error message is specific to the ENABLE command:
.LIT

*** ERROR *** Specifying command ENABLE
Command qualifiers are ABSOLUTE, ADD_TARGET, CULTURE, DIAGNOSTICS,
EARTH_CURVATURE or TABLE

.END LIT

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Examples:\*
.BLANK
.BR;COVER> ^*ENABLE ABSOLUTE_<CR_>\*
.BR;COVER>
.!******************************************************************************


.PAGE
.SUBTITLE ENABLE ADD__TARGET command
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*ENABLE ADD__TARGET\*
.INDEX COVER> commands> ENABLE ADD__TARGET
.INDEX COVER> ENABLE ADD__TARGET command

.LEFT MARGIN +8
.P 0;Enables the visibility of the top of a feature at the target point to be
determined. 
.LEFT MARGIN -8

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*FORMAT:                ENABLE ADD__TARGET\*


.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Command parameters:\*_ None.

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*DESCRIPTION:\*
.P 0;The ENABLE ADD__TARGET command controls whether a surface feature height
value is added to the terrain height at a target point. 
.BR; The command therefore controls whether the visibility of the top of a
feature, rather than the visibility of the base of a feature at a target point,
is computed.
.P0;The command should be used in conjunction with the ENABLE CULTURE
command.
.BR;If the ENABLE CULTURE command has been given, then unless ENABLE
ADD__TARGET is specified, the height of surface features is added to the
terrain surface height at all nodes along a line of sight, but ^*NOT\* at the
target point itself. 
.P0;Use of the SHOW ENABLE command is recommended to check on the status of the
option before generating a cover map or line of sight. 
.P 0
^*--------------------------------------------------------------------------------\*
.BR;^*Messages:\*
.P0;The following messages are specific to the ENABLE and ENABLE ADD__TARGET
commands:
.LIT

*** ERROR *** Specifying command ENABLE
Command qualifiers are ABSOLUTE, ADD_TARGET, CULTURE, DIAGNOSTICS,
EARTH_CURVATURE or TABLE

*** WARNING *** CULTURE is currently not enabled

.END LIT

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Examples:\*
.BLANK
.BR;COVER> ^*ENABLE ADD__TARGET<CR_>\*
.BR;COVER>
.!******************************************************************************

.PAGE
.SUBTITLE ENABLE BILINEAR command
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*ENABLE BILINEAR\*
.INDEX COVER> commands> ENABLE BILINEAR
.INDEX COVER> ENABLE BILINEAR command

.LEFT MARGIN +8
.P 0;Selects the use of a bilinearly interpolated height at the observer 
position.

.LEFT MARGIN -8

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*FORMAT:                ENABLE BILINEAR \*


.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Command parameters:\*_ None.

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*DESCRIPTION:\*
.P 0;If ENABLE BILINEAR is given, the height at the observer position is 
calculated from a bilinear interpolation performed on the four surrounding 
pixel heights, doing the subsequent visibility calculations with these more 
accurate values. (The default action is to set the observer height to that of
the nearest pixel.)

.P 0
^*--------------------------------------------------------------------------------\*
.BR;^*Messages:\*

.P0;The following error message is specific to the ENABLE command:
.LIT

*** ERROR *** Specifying command ENABLE
Command qualifiers are ABSOLUTE, ADD_TARGET, BILINEAR, CULTURE, DIAGNOSTICS,
EARTH_CURVATURE or TABLE

.END LIT

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Examples:\*
.BLANK
.BR;COVER> ^*ENABLE BILINEAR_<CR_>\*
.BR;COVER>
.!******************************************************************************

.PAGE
.SUBTITLE  ENABLE CULTURE command
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*ENABLE CULTURE\*
.INDEX COVER> commands> ENABLE CULTURE
.INDEX COVER> ENABLE CULTURE command
.LM +8
.p 0;Enables the use of surface feature height information when generating a
cover map or determining visibility along a line of sight.
.LM -8

.P0
^*--------------------------------------------------------------------------------
.LIT
FORMAT:		ENABLE CULTURE [file-spec]
.end lit
.p 0
^*--------------------------------------------------------------------------------\*
.BR;^*Command parameters:\*

.LM +8
.P-8;file-spec
.P0; An optional file specification for a DTI file containing height
information on surface features.  The file-spec is only required if this
file was not opened when the input DTM was specified, or if you wish to
specify a new file.
.BR; Any part of the file specification not supplied will be taken from the 
default 'LSL$DTI:DTI.MAT'.
.BR; If no file-spec is supplied, and one is required by the program, you
will be asked to supply one in response to the prompt ^*Matrix filename>\*
.LM -8
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*DESCRIPTION:\*
.p 0; The ENABLE CULTURE command selects the use of surface feature height
information when generating a cover map, or determining visibility along a line
of sight. 
.P 0; This additional height information is read from a DTI file, which will
typically contain height values relating to surface features such as woodland
and large buildings. These features are often referred to as 'culture' in
military environments, and 'clutter' when used in radio propagation studies. 
.BR; If a file specification is supplied with the command, the height data is
read from the specified DTI file. 
.BR; If no file specification is given, the command will simply cancel any
previous DISABLE CULTURE command, and height data read from a currently opened
file will be used. An error message is generated if no such file is currently
opened, and you will be prompted for a filename. 
.P0; It is important that the x and y grid resolutions of the data in the
surface feature DTI file, are the same as the elevation data in the input DTM. 
.P0; If the ENABLE CULTURE command is given, the program will add a height read
from the surface feature file on to the corresponding node in the DTM (ie. the
surface feature height on to the terrain elevation value). 
.BR; The ENABLE ADD__TARGET command controls whether this action is carried
out for all nodes along a line of sight, including the target node, or
for just those nodes between the observer and the target point.
.BR; The SET OFFSET command may be used to control the registration of the two
files. 
.P0;Use of the SHOW ENABLE command is recommended to check on the status of the
option before generating a cover map or line of sight. 
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Messages:\*
.P0;The following error messages are specific to the ENABLE and ENABLE CULTURE
commands:
.LIT

*** ERROR *** Specifying command ENABLE
Command qualifiers are ABSOLUTE, ADD_TARGET, CULTURE, DIAGNOSTICS,
EARTH_CURVATURE or TABLE

*** ERROR *** Specifying command ENABLE CULTURE
Matrix filename is missing

.END LIT

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Example:\*
             
.P0;COVER>^*ENABLE CULTURE TREES<CR>\*
.BR;COVER>^*DISABLE CULTURE<CR>\*
.BR;COVER>^*ENABLE CULTURE<CR>\*
Use of height values in file LSL$DTI:TREES.MAT enabled
.br;COVER>
.bl
.!******************************************************************************

.PAGE
.SUBTITLE ENABLE DIAGNOSTICS command
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*ENABLE DIAGNOSTICS\*
.INDEX COVER> commands> ENABLE DIAGNOSTICS
.INDEX COVER> ENABLE DIAGNOSTICS command

.LEFT MARGIN +8
.P 0;Selects the output of diagnostic printout.
.LEFT MARGIN -8

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*FORMAT:                ENABLE DIAGNOSTICS \*


.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Command parameters:\*_ None.

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*DESCRIPTION:\*
.P 0;ENABLE DIAGNOSTICS selects output of diagnostic messages.
.BR;The diagnostic printout consists of a series of messages indicating
which operation is currently being performed by COVER, and the percentage
progress.
.BR;The messages are sent to SYS$OUTPUT. Note that if you are using a hardcopy
terminal no percentage progress figures are generated.
.P0;By default diagnostic printout is selected, and may be turned off using the
command DISABLE DIAGNOSTICS 
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Messages:\*
.P0;The following error message is specific to the ENABLE command:
.LIT

*** ERROR *** Specifying command ENABLE
Command qualifiers are ABSOLUTE, ADD_TARGET, CULTURE, DIAGNOSTICS,
EARTH_CURVATURE or TABLE
.END LIT

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Examples:\*
.BLANK
.BR;COVER> ^*ENABLE DIAGNOSTICS_<CR_>\*
.BR;COVER>

.!******************************************************************************

.PAGE
.SUBTITLE  ENABLE EARTH__CURVATURE command
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*ENABLE EARTH__CURVATURE\*

.LM +8
.p 0;Selects the option to take into account earth curvature and terrestrial
refraction when generating a cover map or determining visibility along a line
of sight. 
.LM -8

.P0
^*--------------------------------------------------------------------------------
.LIT
FORMAT:		 ENABLE EARTH_CURVATURE
.end lit
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*DESCRIPTION:\*
.p 0;Enables the option to take into account earth curvature and terrestrial
refraction when calculating visibility along a line of sight. 
.p 0;The effect of earth curvature and terrestrial refraction on a line of
sight becomes increasingly significant as the distance between the observer and
the target point increases.
.BR; Earth curvature causes points to be observed at lower angles as distance
increases, and points to disappear below the horizon. The equation
.LIT

		e = d*d / 2R

.END LIT
is used to compute earth curvature (e), where d is the distance between
the observer and target point in kilometres, and R is the radius of the
earth (taken as 6378 kms).  For a distance of 10 kilometres, the
value of e will be approximately 7.84 metres.
.P0; Rays of light passing through the earth's atmosphere in any direction
other than vertical are bent from a straight path.  This refraction 
takes place in a direction towards the earth's surface under normal
atmospheric and temperature conditions.  As a result of refraction, points
tend to be observed at a higher elevation as distance from the viewpoint
increases. The equation 
.LIT

		r = (d*d) * k/2R

.END LIT
is used to compute the effect of refraction (r), where d is the distance
between the observer and target point in kilometres, R is the radius of the
earth, and k is the coefficient of refraction.  By default COVER uses a
coefficient value based on a 4/3 Earth of 0.125  This may be redefined by
the user using the command SET REFRACTION__COEFFICIENT.  For a distance of
10 kilometres the value of r is approximately 0.98 metres.
.P0; If both earth curvature and refraction are taken into account, the
height of a point 10 kilometres from the observer is therefore adjusted
downwards by 6.86 metres.
.P 0;By default, no compensation is made for earth curvature or refraction
in the line of sight calculations.
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Messages:\*
.P0;The following error message is specific to the ENABLE command:
.LIT

*** ERROR *** Specifying command ENABLE
Command qualifiers are ABSOLUTE, ADD_TARGET, CULTURE, DIAGNOSTICS,
EARTH_CURVATURE or TABLE
.END LIT

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Examples:\*

.P0;COVER>^*ENABLE EARTH__CURVATURE<CR>\*
.br;COVER>

.PAGE
.SUBTITLE  ENABLE TABLE command
.INDEX COVER> commands> ENABLE TABLE
.INDEX COVER> ENABLE TABLE command
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*ENABLE TABLE\*
.LM +8
.p 0;Initialises the Table Monitor to allow command input from a table
puck and digitising table.
.LM -8

.P0
^*--------------------------------------------------------------------------------
.LIT
FORMAT:		ENABLE TABLE
.end lit
.p 0
^*--------------------------------------------------------------------------------\*
.BR;^*Command parameters:\* _None
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*DESCRIPTION:\*
.p 0; The ENABLE TABLE command initialises the Table Monitor to allow 
the input of commands from a table puck and digitising table. 
.P 0; The introduction contains details on table initialisation, and on
how commands may be input using a table puck.
.P 0;The DISABLE TABLE command may be used to turn off input from the
digitising table. 
.p0
^*--------------------------------------------------------------------------------\*
.BR;^*Messages:\*
.P0;The following error messages are specific to the ENABLE and ENABLE TABLE
commands:
.LIT

*** ERROR *** Specifying command ENABLE
Command qualifiers are ABSOLUTE, ADD_TARGET, CULTURE, DIAGNOSTICS,
EARTH_CURVATURE or TABLE
 
*** ERROR *** Specifying command ENABLE TABLE
Unable to initialise the table monitor

.END LIT

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Example:\*
             
.P0;COVER>^*ENABLE TABLE <CR>\*
.br;COVER>
.bl
.!******************************************************************************

.PAGE
.SUBTITLE EXIT command
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*EXIT\*
.LEFT MARGIN +8
.P0; Terminates the program.
.LEFT MARGIN -8

.P0
^*--------------------------------------------------------------------------------
.LIT
FORMAT:		 EXIT

.end lit
.P0
^*--------------------------------------------------------------------------------\*
.BR;^^^*Command parameters:\*_ None.

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*DESCRIPTION:\*

.P0; The EXIT command is used to exit from COVER.
.br; <CTRL/Z> (pressing the Ctrl and Z keys together) may also be used to exit
from the program. 
.P 0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*Messages:\*_ None.

.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*Examples:\*

.P0;COVER>^*EXIT<CR>\*
.BR;COVER>
.!******************************************************************************

.PAGE
.SUBTITLE  FILEIN command
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*FILEIN\*

.LM +8
.p 0;Selects and opens the input DTM that contains the terrain elevation data
to be used in the intervisibility calculations. 
.LM -8

.P0
^*--------------------------------------------------------------------------------
.LIT
FORMAT:		 FILEIN file-spec
.end lit
.p 0
^*--------------------------------------------------------------------------------\*
.BR;^*Command parameters:\*

.LM +8
.P-8;file-spec
.P0; The file specification for the input DTM.
.br; Any part of the file specification not supplied is taken from the default
'LSL$DTI:DTI.DTI', although if no file-spec is supplied, you will be asked to
supply one in response to the prompt ^*Input DTI filename>\*
.LM -8
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*DESCRIPTION:\*
.p 0;This command opens and maps into memory a DTI file, containing the
terrain elevation data to be used in the intervisibility calculations.
Details derived from the header of the file are displayed on the terminal
to confirm that the file has been successfully opened.
.p 0;If the logical name LSL$MATRIX__DEFAULT__WINDOW is defined with a value of
"1", then a default area of interest defined in matrix units of bottom left
hand corner 1,1 and top right hand corner 200,200 is set when the file is
opened. If the logical name is absent or has any other value,  or if the input
DTI file has fewer than 200 columns or 200 rows, then a default window
equivalent to the total matrix is set.
.p 0;After opening the DTM, the program looks for a second DTI file with
the same name but with the extension MAT.  This second file is optional, and is
used to hold data on the height of surface features such as woodland that are
present in the area covered by the DTM. 
.BR;If a second DTI file is found, the option to additionally use the height
values in this file is automatically enabled. This is equivalent to
giving the command ENABLE CULTURE. 
.BR;If no second DTI file is found, the option to use the height of surface
features is disabled. The option may be subsequently enabled by giving
an ENABLE CULTURE command with a DTI file specification.

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Messages:\*

.P0;The following error message is specific to the FILEIN command:
.LIT

*** ERROR *** Specifying command FILEIN
Input DTI filename is missing

.END LIT
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Example:\*
             
.P0;COVER>^*FILEIN TEST<CR>\*


.lit

LSL$DTI:TEST.DTI	
Header: LSLA	 Data: WORD

Units are DTI Matrix Values

Matrix Coverage    SW:    1     1    NE:   301   251
Matrix Window      SW:    1     1    NE:   200   200
Matrix Interval	    E:	  1	      N:     1
Value Range	     :      0   to    851

.end lit
.BR;COVER>
.!******************************************************************************

.PAGE
.SUBTITLE  FILEOUT command
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*FILEOUT\*

.LM +8
.p 0;Specifies the name of the output cover map.
.LM -8

.P0
^*--------------------------------------------------------------------------------
.LIT
FORMAT:		 FILEOUT file-spec
.end lit
.p 0
^*--------------------------------------------------------------------------------\*
.BR;^*Command parameters:\*

.LM +8
.P-8;file-spec
.P0; The file specification for the output grid file. Any part of the file
specification not supplied is taken from a default partly constructed from
the main part of the input DTI filename 'LSL$DTI:dti__filename.VIS'
.BR; If no file-spec is supplied, you will be asked to supply one in
response to the prompt ^*Cover map filename>\*
.BR; Note that by default the output grid file is given the extension VIS.
.LM -8 
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*DESCRIPTION:\*
.p0;This command is used to specify the name of the output cover map.
The input file must have previously been defined with the FILEIN command.
.P0; COVER map generation is initiated with the GO command.
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Messages:\*

.P0;The following error message is specific to the FILEOUT command:
.LIT

*** ERROR *** Specifying command FILEOUT.
The input DTM is undefined.
.END LIT
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Example:\*
             
.P0;COVER>^*FILEOUT TEST<CR>\*
File LSL$DTI:TEST.VIS selected for output.
.BR;COVER>
.bl
.P0
.!******************************************************************************.bl

.PAGE
.SUBTITLE  GO command
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*GO\*

.LM +8
.p 0;Initiates intervisibility calculation.
.LM -8

.P0
^*--------------------------------------------------------------------------------
.LIT
FORMAT:		GO
.end lit
.p 0
^*--------------------------------------------------------------------------------\*
.BR;^*Command parameters:\*None
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*DESCRIPTION:\*
.p0;This command is used 
to initiatate intervisibility calculation.
.P0;The viewing parameters for at least one observer must have been
previously defined, the FILEIN command must have been given to read
in a DTM, and a FILEOUT command must have been used to specify an output
visibility file.
.BR;When parameters for a number of observers have been defined, the SELECT
OBSERVER command may be used to restrict calculation to specific observers.
.BR;The areas of the terrain which are visible and hidden, are calculated for
each observer in turn.  If diagnostics are enabled, a summary of the percentage
of the terrain within the area of interest that is either visible, hidden or
outside an observer's field of view, is displayed after an observer has been
processed. 
.P0;The COVER> prompt is displayed when all calculations have been completed,
and the output cover map containing the encoded intervisibility data is closed.
.BR;Observer viewing parameters and observer selections remain current until
redefined by the user.  Similarly, the input DTM remains open, and current
area of interest values in force, until either a new DTM is selected
or the program is terminated. 
.P0;If the ENABLE EARTH__CURVATURE command has been given, compensation for
earth curvature and terrestrial refraction will be made.  Similarly if the
ENABLE CULTURE command has been given, the program will take into account the
height of any intervening surface features when determining visibility.
.P 0;The generated cover map may be displayed on a graphics device as a colour
coded image using the DISPLAY command. 
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Messages:\*
.P0;The following error messages are specific to the GO command:
.LIT

*** ERROR *** Specifying command GO
The input DTM is undefined

*** ERROR *** Specifying command GO
No observer has been selected using the DEFINE OBSERVER command

*** ERROR *** Specifying command GO
output visibility matrix has not been defined

.END LIT
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Example:\*
             
.P0;COVER>^*ENABLE DIAGNOSTICS_<CR>\*
.BR;COVER>^*GO<CR>\*
.LIT

+-----------------------------------------------------------+
|                                                           |
|               Determining areas visible to                |
|                       Observer  1                         |
|                                                           |
+-----------------------------------------------------------+

Observer 1   Visible  13%   Not Visible  32%   Outside  55%

.END LIT
.br;COVER>
.bl
.!******************************************************************************

.PAGE
.SUBTITLE  HEIGHT command
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*HEIGHT\*

.LM +8
.p 0;Defines the height ^*above the terrain surface\* of the observer currently
selected by means of the DEFINE OBSERVER command.
.LM -8

.P0
^*--------------------------------------------------------------------------------
.LIT
FORMAT:		 HEIGHT height
.end lit
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Command parameters:\*

.LM +8
.P-8;height
.p 0; The height of the observer above the ground in metres. A real (floating
point) value is required. 
.LM -8
.p0	
^*--------------------------------------------------------------------------------\*
.BR;^*DESCRIPTION:\*
.p 0;HEIGHT allows the observer currently selected by the DEFINE OBSERVER
command to be positioned above the terrain surface. 
.P 0;The command is interpreted differently depending on whether the observer
is positioned within or outside the DTM area.
.BR;If the observer has been positioned within the geographical bounds of the
DTM using the POSITION command, the value supplied with the HEIGHT command is
added to the terrain surface height at the observer position.
.BR;If the observer is positioned outside the geographical bounds of the DTM,
the command defines the height of the observer above sea-level. 
.P0;The SHOW OBSERVERS command should be used to check that the height of an
observer has been correctly defined.
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Messages:\*
.P0;The following error messages are specific to the HEIGHT command:
.LIT

*** ERROR *** Specifying command HEIGHT
No observer has been selected using the DEFINE OBSERVER command

*** ERROR *** Specifying command HEIGHT
Command requires 1 real argument

.END LIT

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Examples:\*

.P0;COVER>^*DEFINE OBSERVER 1<CR>\*
.BR;COVER>^*POSITION 100 100<CR>\*
.BR;COVER>^*SHOW OBSERVERS<CR>\*
.LIT

Current observer settings (Units are DTI Matrix Values)

Observer       Position          Height    Direction    Cone    Distance
  1          100      100         50.3        0.0      360.0       0.0

.END LIT
.BR;COVER>^*HEIGHT 2.6<CR>\*
.BR;COVER>^*SHOW OBSERVERS<CR>\*
.LIT

Current observer settings (Units are DTI Matrix Values)

Observer       Position          Height    Direction    Cone    Distance
  1          100      100         52.9        0.0      360.0       0.0

.END LIT
.BR;COVER>^*POSITION -10 -10<CR>\*
.BR;COVER>^*HEIGHT 100.7<CR>\*
.BR;COVER>^*SHOW OBSERVERS<CR>\*
.LIT

Current observer settings (Units are DTI Matrix Values)

Observer       Position          Height    Direction    Cone    Distance
  1          -10      -10        100.7        0.0      360.0       0.0

.END LIT
.BR;COVER>

.!******************************************************************************

.PAGE
.SUBTITLE   HELP command
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*HELP\*

.LM +8
.p 0;Invokes help on COVER commands.
.LM -8

.P0
^*--------------------------------------------------------------------------------
.LIT
FORMAT:		 HELP [command]

.end lit
.p 0
^*--------------------------------------------------------------------------------\*
.BR;^*Command parameters:\*

.LM +8
.p -8;command
.P0; the command on which help is required
.LM -8

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*DESCRIPTION:\*

.p 0;A brief description is given of the function and format of the specified 
command. 
.BR;If no parameter is supplied then a list of all commands available is 
given.

.P0
^*--------------------------------------------------------------------------------\*
.BR;^^^*Messages:\*_ None. 

.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^*Examples:\*
             
.P0;COVER>^*HELP DISTANCE\*
.BR;COVER>
.!******************************************************************************

.PAGE
.SUBTITLE  POINT command
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*POINT\*

.LM +8
.p 0;Defines the position of a single target point and computes the visibility
of the point to all currently selected observers. 
.LM -8

.P0
^*--------------------------------------------------------------------------------
.LIT
FORMAT:		 POINT x_coordinate y_coordinate
.end lit
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Command parameters:\*

.LM +8
.P-8; x__coordinate
.p 0; The x coordinate position of the target point.
.P-8; y__coordinate
.p 0; The y coordinate position of the target point.
.LM -8
.BL
.P0;The format of the command parameters is controlled by the UNITS command.
.LIST " "
.LE; UNITS MATRIX - 2 integer values are required defining the position of
the point in terms of a column and row number.
.LE; UNITS METRES - 2 real (floating point) values are required defining the
position of the point in metre values. By default, or if the ENABLE ABSOLUTE
command has been given, the values are absolute coordinates (eg. U.K. National
Grid coordinates); if the DISABLE ABSOLUTE command has been given, then the
coordinates are offsets from the SW corner of the matrix. 
.LE; UNITS SECONDS - 2 real (floating point) values are required defining the
absolute position of the point in seconds of arc. The values are supplied in
the order latitude followed by longitude. A negative latitude value indicates a
position in the Southern Hemisphere, and a negative longitude value a point to
the west of Greenwich. 
.LE; UNITS LATLONG - 2 values are required defining the absolute latitude and
longitude position of the point in the format DDD MM SS H where DDD is
the number of degrees, MM is the number of minutes, SS is the number of
seconds, and H is the hemisphere (N,S,E,W). The values are supplied in the
order latitude followed by longitude.
.LE; UNITS PROJECTION - 2 real (floating point) values defining the
point in projection record units.  By default, or if the ENABLE ABSOLUTE
command has been given, the values are absolute coordinates; if the DISABLE
ABSOLUTE command has been given, then the coordinates are offsets from the SW
corner of the matrix. 
.END LIST
.P0;Note that in all cases, the input values are adjusted to the nearest
column and row values.

.p0
^*--------------------------------------------------------------------------------\*
.BR;^*DESCRIPTION:\*

.p0;The POINT command is used to define the position, and compute the visibility
of a single target point. 
.P0;On giving the command, the program immediately computes the visibility of
this point to all currently selected observers, and prints a summary on the
terminal.  The summary tabulates to how many and to which observers the point
is visible or hidden. 
.P0;The target point must lie inside the geographical bounds of the DTM. 
.P0;If a digitising table is available, and a map has been registered to the
DTM using the SETUP MAP command, puck ^*Button A\* may be used to digitise the
position of the point. 
.P0;If the ENABLE EARTH__CURVATURE command has been given, compensation for
earth curvature and terrestrial refraction will be made.  Similarly if the
ENABLE CULTURE command has been given, the program will take into account the
height of any intervening surface features when determining the visibility of
the point.
.BL 2
The command is used to determine visibility along a simple line of sight. It
may also be used to determine visibility along a linear feature, such
as a road, if the command is repeatedly given to digitise a series of points
along the map feature. 
.P0 
^*--------------------------------------------------------------------------------\*
.BR;^*Messages:\*
.P0;The following error messages are specific to the POINT command:
.LIT

*** ERROR *** Specifying command POINT from the puck button
No map set up has been performed

*** ERROR *** Specifying command POINT
The input DTM is undefined

*** ERROR *** Specifying command POINT
Point must lie within DTM bounds

*** ERROR *** Specifying command POINT
No observer has been selected using the DEFINE OBSERVER command

*** ERROR *** Specifying command POINT
Command requires 2 x y coordinate values

*** ERROR *** Specifying command POINT
Latitude and longitude values supplied in wrong format
.END LIT

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Examples:\*

.P0;COVER>^*DEFINE OBSERVER 1<CR>\*
.BR;COVER>^*POSITION 10 10<CR>\*
.BR;COVER>^*DEFINE OBSERVER 2<CR>\*
.BR;COVER>^*POSITION 70 50<CR>\*
.BR;COVER>^*POINT 32 45<CR>\*
.LIT

Point at position 32 45 (height 345) is:
    Visible to 1 observer (observer: 1)
NOT Visible to 1 observer (observer: 2)

.END LIT
.BR;COVER>

.!******************************************************************************

.PAGE
.SUBTITLE  POSITION command
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*POSITION\*

.LM +8
.p 0;Defines the geographical position of the observer currently selected by
means of the DEFINE OBSERVER command. 
.LM -8

.P0
^*--------------------------------------------------------------------------------
.LIT
FORMAT:		 POSITION x_coordinate y_coordinate
.end lit
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Command parameters:\*

.LM +8
.P-8; x__coordinate
.p 0; The x coordinate position of the observer.
.P-8; y__coordinate
.p 0; The y coordinate position of the observer.
.LM -8
.BL
.P0;The format of the command parameters is controlled by the UNITS command.
.LIST " "
.LE; UNITS MATRIX - 2 integer values are required defining the position of
the observer in terms of a column and row number.
.LE; UNITS METRES - 2 real (floating point) values are required defining the
position of the observer in metre values. By default, or if the ENABLE ABSOLUTE
command has been given, the values are absolute coordinates (eg. U.K. National
Grid coordinates); if the DISABLE ABSOLUTE command has been given, then the
coordinates are offsets from the SW corner of the matrix. 
.LE; UNITS SECONDS - 2 real (floating point) values are required defining the
absolute position of the observer in seconds of arc. The values are supplied in
the order latitude followed by longitude. A negative latitude value indicates a
position in the Southern Hemisphere, and a negative longitude value a point to
the west of Greenwich. 
.LE; UNITS LATLONG - 2 values are required defining the absolute latitude and
longitude position of the observer in the format DDD MM SS H where DDD is
the number of degrees, MM is the number of minutes, SS is the number of
seconds, and H is the hemisphere (N,S,E,W). The values are supplied in the
order latitude followed by longitude.
.LE; UNITS PROJECTION - 2 real (floating point) values defining the position
of the observer in projection record units.  By default, or if the ENABLE
ABSOLUTE command has been given, the values are absolute coordinates; if the
DISABLE ABSOLUTE command has been given, then the coordinates are offsets from
the SW corner of the matrix. 
.END LIST
.P0;Note that in all cases, the input values are adjusted to the nearest
column and row values.

.p0
^*--------------------------------------------------------------------------------\*
.BR;^*DESCRIPTION:\*

.p0;The POSITION command is used to define the geographical location of the
observer currently selected by means of the DEFINE OBSERVER command.
.p 0;An observer may be positioned inside or outside the geographical bounds
of the DTM.
.BR;If the observer is positioned inside the DTM, the height of the surface at
the observer position is determined from the DTM.  The HEIGHT command may be
used, if you wish to position the observer a given distance above the terrain
surface. 
.BR;If the observer is positioned outside the DTM, the height of the terrain
surface cannot be determined, and you should use the HEIGHT command to
set the absolute height of the observer.
.P0;If a digitising table is available, and a map has been registered to the
DTM using the SETUP MAP command, puck ^*button 0\* may be used to digitise the
position of the observer.  When using this option, the observer may only be
positioned within the geographical bounds of the DTM.
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Messages:\*
.P0;The following error messages are specific to POSITION command:
.LIT

*** ERROR *** Specifying command POSITION using puck button
No map set up has been performed

*** ERROR *** Specifying command POSITION using puck button
Digitised point must lie within DTM bounds

*** ERROR *** Specifying command POSITION
The input DTM is undefined

*** ERROR *** Specifying command POSITION
No observer has been selected using the DEFINE OBSERVER command

*** ERROR *** Specifying command POSITION
Command requires 2 x y coordinate values

*** ERROR *** Specifying command POSITION
Latitude and longitude values supplied in wrong format
.END LIT

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Examples:\*

.P0;COVER>^*DEFINE OBSERVER 1<CR>\*
.BR;COVER>^*POSITION 100 100<CR>\*
.BR;COVER>^*SHOW OBSERVERS<CR>\*
.LIT

Current observer settings (Units are DTI Matrix Values)

Observer       Position          Height    Direction    Cone    Distance
  1          100      100         50.3        0.0      360.0       0.0

.END LIT
.BR;COVER>^*UNITS LATLONG<CR>\*
.BR;COVER>^*DEFINE OBSERVER 1<CR>\*
.BR;COVER>^*POSITION 42 00 00N 2 58 40E<CR>\*
.BR;COVER>^*SHOW OBSERVERS<CR>\*
.LIT

Current observer settings (Units are Degrees, Minutes, Seconds)

Observer       Position          Height    Direction    Cone    Distance
  1       42 00 00N  2 58 40E     73.2        0.0      360.0       0.0

.END LIT
.BR;COVER>

.!******************************************************************************

.PAGE
.SUBTITLE  REDISPLAY command
.P0

^*--------------------------------------------------------------------------------\*
.BR;^*REDISPLAY\*
.INDEX COVER> commands> REDISPLAY
.INDEX COVER> REDISPLAY command

.LM +8
.p 0; Displays information contained in a currently opened cover map in a
colour coded form on a graphics display. 
.LM -8

.P0
^*--------------------------------------------------------------------------------
.LIT
FORMAT:		 REDISPLAY
.end lit
.p 0
^*--------------------------------------------------------------------------------\*
.BR;^*Command parameters:\* _None
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*DESCRIPTION:\*
.p 0;The REDISPLAY command is used to display information contained in a
currently opened cover map in colour coded form on a graphics screen. 
.P 0;The command acts in the same way as the DISPLAY command. For example, only
information relating to those observers currently selected is displayed on the
graphics screen. Unlike the DISPLAY command however, REDISPLAY does not require
a cover map file specification. REDISPLAY should therefore be used in
situations where a series of images are being generated from the same cover map
eg. when displaying the visibility pattern of each observer in turn. 
.P 0;In the example below, DISPLAY is used initially to open and display the
information in a cover map, and REDISPLAY is subsequently used to display
data from the same cover map.
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Messages:\*
.P0;The following error message is specific to the REDISPLAY command:
.LIT

*** ERROR *** Specifying command REDISPLAY
No cover map is currently opened for display

.END LIT
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Example:\*
             
.P0;COVER>^*DISPLAY TEST <CR>\* 
.br;COVER>^*SELECT OBSERVERS 1 3_<CR>\*
.BR;COVER>^*REDISPLAY <CR>\*
.BR;COVER>
.P 0
.!******************************************************************************

.PAGE
.SUBTITLE  SELECT ALL command
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*SELECT ALL\*

.LM +8
.P 0;The command is used to select all observers when generating a cover map
or line of sight, or when displaying a cover map on a graphics device. 
.LM -8

.P0
^*--------------------------------------------------------------------------------
.LIT
FORMAT:	        SELECT ALL
.end lit
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Command parameters:\* _None
.p 0 
^*--------------------------------------------------------------------------------\*
.BR;^*DESCRIPTION:\*
.p0;The SELECT ALL command is used to select all observers when generating a
cover map using the commands GO or CREATE, or when computing a line of sight
using the POINT command.  The command also ensures that information relating to
all observers is included when displaying a cover map on a graphics device
using the DISPLAY or REDISPLAY commands, and when decoding information using
the WRITE command. 
.BR;The command overrides any observer selections made using the SELECT
OBSERVER command.
.P0; Current observer selections may be examined using the command SHOW
OBSERVERS.
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Messages:\*
.P0;The following error message is specific to the SELECT command:
.LIT

*** ERROR *** Specifying command SELECT
Command qualifiers are OBSERVER or ALL


.END LIT

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Examples:\*

.P0;COVER>^*SELECT ALL<CR>\*
.BR;COVER>
.!******************************************************************************

.PAGE
.SUBTITLE  SELECT OBSERVERS command
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*SELECT OBSERVERS\*

.LM +8
.P 0;Selects which observers are to be used when generating a cover map or
computing visibility along a line of sight, or when displaying a cover map on a
graphics device. 
.LM -8

.P0
^*--------------------------------------------------------------------------------
.LIT
FORMAT:	        SELECT OBSERVERS observer_number [...]
.end lit
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Command parameters:\*

.LM +8
.P-8;observer__number
.p 0;A list of observer numbers consisting of between 1 and 7 integer values.
The integer values should be in the range 1 to 8. 
.LM -8
.p 0 
^*--------------------------------------------------------------------------------\*
.BR;^*DESCRIPTION:\*
.p0;The SELECT OBSERVER command controls which observers are used when
generating a cover map using the commands GO or CREATE, or computing a line
of sight using the POINT command. The command also controls whether
intervisibility information relating to a particular observer is included when
displaying a cover map on a graphics device using the DISPLAY or REDISPLAY
commands, and what information is decoded when the WRITE command is given. 
.P 0;Up to 7 observers may be specified in the list.
.P 0;The SELECT ALL command should be used if no restrictions are to be
placed on which observers are selected.
.P0; Current observer selection may be examined using the command SHOW
OBSERVERS.
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Messages:\*
.P0;The following error messages are specific to the SELECT and SELECT
OBSERVERS commands:
.LIT

*** ERROR *** Specifying command SELECT
Command qualifiers are OBSERVER or ALL

*** ERROR *** Specifying command SELECT OBSERVER
Command requires at least 1 integer argument

*** ERROR *** Specifying command SELECT OBSERVER
Integer values should be in the range 1 to 8

.END LIT

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Examples:\*

.P0;This example assumes viewing parameters for 3 observers (observers 1 2 and
4) have been entered.

.P0;COVER>^*SELECT OBSERVERS 2 4 <CR>\*
.br;COVER>^*SHOW OBSERVERS<CR>\*
.LIT

Current observer settings (Units are DTI Matrix Values)

Observer       Position          Height    Direction    Cone    Distance
  2          130      140         70.6       30.0       60.0      120.5
  4          114      117         63.2      245.0       60.0      145.2 

.END LIT
.br;COVER>^*SELECT ALL <CR>\*
.br;COVER>^*SHOW OBSERVERS<CR>\*
.LIT

Current observer settings (Units are DTI Matrix Values)

Observer       Position          Height    Direction    Cone    Distance
  1          100      100         50.3        0.0      360.0        0.0
  2          130      140         70.6       30.0       60.0      120.5
  4          114      117         63.2      245.0       60.0      145.2 

.END LIT
.BR;COVER>
.!******************************************************************************

.PAGE
.SUBTITLE   SET OFFSET command
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*SET OFFSET\*

.LM +8
.p 0;Registers a DTI file containing data on the height of surface features,
to the input DTM. 
.LM -8

.P0
^*--------------------------------------------------------------------------------
.LIT
FORMAT:		 SET OFFSET x_offset y_offset

.end lit
.p 0
^*--------------------------------------------------------------------------------\*
.BR;^*Command parameters:\*

.LM +8
.p  -8;x__offset 
.P0; The x offset specified as an integer column value. It defines the
column in the input DTM that corresponds to column 1 in the DTI file.
.p  -8;y__offset 
.P0; The y offset specified as an integer row value. It defines the
row in the input DTM that corresponds to row 1 in the DTI file.
.LM -8
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*DESCRIPTION:\*

.p0; The SET OFFSET command is used to register a DTI file containing
data on the height of surface features, to the input DTM. 
.p0; By default the SW corner of the DTI file is registered to the SW
corner of the DTM. The use of the command is therefore only necessary in
situations were the SW corner of the two files do not represent the same
geographical location.
.BR; The SET OFFSET command should only be given after the file containing the
surface feature heights has been read in, either when opening the input DTM or
by means of the ENABLE CULTURE command. 
.P0; The SHOW SETTINGS command may be used to examine the current OFFSET
values.
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Messages:\*
.P0;The following error messages are specific to the SET and SET OFFSET 
commands:
.LIT

*** ERROR *** Specifying command SET
Command qualifiers are OFFSET or REFRACTION_COEFFICIENT

*** ERROR *** Specifying command SET OFFSET
Command requires 2 integer arguments

*** ERROR *** Specifying command SET OFFSET
Column and row values may not exceed DTM bounds

.END LIT

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Examples:\*
             
.P0		
In this example, the SW corner of the DTI file containing surface feature
height values is registered to column 50 and row 50 of the input DTM. 

.P0;COVER>^*SET OFFSET 50 50<CR>\*
.br;COVER>
.!******************************************************************************

.PAGE
.SUBTITLE  SET REFRACTION__COEFFICIENT command
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*SET REFRACTION__COEFFICIENT\*

.LM +8
.P 0;Specifies the refraction coefficient value that will be used by the
program, when calculating the effect of terrestrial refraction along a line of
sight. 
.LM -8

.P0
^*--------------------------------------------------------------------------------
.LIT
FORMAT:		 SET REFRACTION_COEFFICIENT coefficient
.end lit
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Command parameters:\*

.LM +8
.P-8;coefficient
.p 0;The coefficient of refraction specified as a real (floating point) value. 
.LM -8
.p0
^*--------------------------------------------------------------------------------\*
.BR;^*DESCRIPTION:\*
.p0;This command allows the refraction coefficient value that is used when
calculating the effect of terrestrial refraction on a line of sight, to be
redefined. The supplied value is substituted in the equation: 
.LIT

		r = (d*d) * k/2R

.END LIT
where r is the effect of refraction (r), d is the distance between the observer
and the target point in kilometres, R is the radius of the earth, and k is the
coefficient of refraction. 
.P0; By default COVER uses a coefficient value based on a 4/3 Earth of 0.125 
.p 0;The effect of refraction is only considered in intervisibility
calculations if the ENABLE EARTH__CURVATURE command has been given. 
.P 0;The current value of the coefficient may be examined using the command
SHOW SETTINGS.
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Messages:\*
.P0;The following error messages are specific to the SET and SET
REFRACTION__COEFFICIENT commands: 
.LIT

*** ERROR *** Specifying command SET
Command qualifiers are OFFSET or REFRACTION_COEFFICIENT

*** ERROR *** Specifying command SET REFRACTION_COEFFICIENT
Command requires 1 real argument

.END LIT

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Examples:\*

.P0;COVER>^*SET REFRACTION__COEFFICIENT 0.3<CR>\*
.BR;COVER>
.!******************************************************************************

.PAGE
.SUBTITLE   SETUP MAP command
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*SETUP MAP\*

.LM +8
.p 0;Registers a map or other source document placed on a digitising table,
to the input DTM.
.LM -8

.P0
^*--------------------------------------------------------------------------------
.LIT
FORMAT:		 SETUP MAP
.end lit
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*DESCRIPTION:\*
.p 0;The SETUP MAP command allows a source document to be registered to the
input DTM.
.P0; In order to register the map and a DTM, the DTM should have first been
specified, and a source document should have been securely attached to the
surface of a digitising table. 
.P0;On giving the command you will be asked to digitise 4 rectangular
registration points. The registration points represent 
4 points on the map that correspond to the 4 corners of the DTM.  The points
are digitised in the order top left (NW), bottom left (SW), bottom right (SE)
and top right (NE) using any button on the table puck. A point should be
digitised in response to a prompt on the terminal.
.BR; An error message is generated if any of the angles of the digitised
rectangle are less than 88 degrees, or greater than 92 degrees (ie. if the
corner points of the rectangle are more than 2 degrees off rectangular). In
this case you will be asked to redigitise the 4 registration points.
.BR; Setup of the map may be aborted using <CTRL/Z> (pressing the Ctrl and Z
keys together), or by pressing ^*Button F\* on the table puck.
.p 0;Following the registration of a map to the DTM, coordinate values required
by the WINDOW, POSITION, TARGET and POINT commands, may be input using
an appropriate button on the table puck. 

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Messages:\*
.P0;The following error messages are specific to the SETUP and SETUP MAP
commands:
.LIT

*** ERROR *** Specifying command SETUP
Command qualifier is MAP

*** ERROR *** Specifying command SETUP MAP
Command is invalid if the table has not been initialised

*** ERROR *** Specifying command SETUP MAP
The input DTM must be specified before SETUP MAP

*** ERROR *** Setting up MAP
Badly digitised corner points; try again

.END LIT

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Examples:\*
             
.P0;COVER>^*SETUP MAP<CR>\*
.LIT

Digitise map NW corner>

Digitise map SW corner>

Digitise map SE corner>

Digitise map NE corner>

.end lit
.BR;COVER>

.!******************************************************************************

.PAGE
.SUBTITLE   SHOW ENABLE command
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*SHOW ENABLE\*

.LM +8
.p 0;Shows the current status of those options that may be enabled by means of
the ENABLE command, or disabled using the DISABLE command.
.LM -8

.P0
^*--------------------------------------------------------------------------------
.LIT
FORMAT:		 SHOW ENABLE

.end lit
.P0
^*--------------------------------------------------------------------------------\*
.BR;^^^*Command parameters:\*#None.

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*DESCRIPTION:\*

.p 0; Displays the current status of all the COVER options that may be
enabled or disabled using the ENABLE and DISABLE commands.
.BR; The name of the option is shown, followed by either the word ON or OFF
to indicate its current status.
.BR; If the command SHOW ENABLE is used before any ENABLE or DISABLE commands
have been given, the default status of the options is displayed.
.P0
^*--------------------------------------------------------------------------------\*
.BR;^^^*Messages:\*

.P0;The following message is specific to the SHOW command:

.LIT

*** ERROR *** Specifying command SHOW
Command qualifiers are ENABLE, FILES, OBSERVERS, SETTINGS or TARGETS

.END LIT
.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^*Examples:\*
             
.P0;COVER>^*SHOW ENABLE<CR>\*

.LIT

Current status:

ABSOLUTE         On        ADD_TARGET       Off       CULTURE          Off

DIAGNOSTICS      On        EARTH_CURVATURE  Off       TABLE            Off

.END LIT
.BR;COVER>
.!******************************************************************************

.PAGE
.SUBTITLE   SHOW FILES command
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*SHOW FILES\*

.LM +8
.p 0;Displays information extracted from the header of the input files and
on the output file.
.LM -8

.P0
^*--------------------------------------------------------------------------------
.LIT
FORMAT:		 SHOW FILES

.end lit
.P0
^*--------------------------------------------------------------------------------\*
.BR;^^^*Command parameters:\*#None.

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*DESCRIPTION:\*

.p 0; Details extracted from the header of the DTM are displayed on the
terminal, along with details of the current window or area of interest.
.P 0; The header values are shown in the current units of measurement.  This is
dependent on the header type of the input file, or may be set explicitly using
the UNITS command. 
.p0; Information on the output visibility file selected with the 
FILEOUT command and 
the culture file selected with the ENABLE CULTURE command is also output.
.P0
^*--------------------------------------------------------------------------------\*
.BR;^^^*Messages:\*

.P0;The following messages are specific to the commands SHOW and SHOW FILES:

.LIT

*** ERROR *** Specifying command SHOW
Command qualifiers are ENABLE, FILES, OBSERVERS, SETTINGS or TARGETS

*** WARNING *** The input DTM is undefined

.END LIT
.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^*Examples:\*
             
.P0;COVER>^*SHOW FILES<CR>\*

.LIT

LSL$DTI:TEST.DTI	
Header: LSLA	 Data: WORD

Units are DTI Matrix Values

Matrix Coverage    SW:    1     1    NE:   301   251
Matrix Window      SW:    1     1    NE:   200   200
Matrix Interval	    E:	  1	      N:     1
Value Range	     :      0   to    851

File LSL$DTI:COVER_TEST.VIS selected for output.
.END LIT
.BR;COVER>
.!******************************************************************************

.PAGE
.SUBTITLE  SHOW OBSERVERS command
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*SHOW OBSERVERS\*

.LM +8
.p 0;Displays information about all observers that are currently selected. 
.LM -8

.P0
^*--------------------------------------------------------------------------------
.LIT
FORMAT:		 SHOW OBSERVERS
.end lit
.p0
^*--------------------------------------------------------------------------------\*
.BR;^^^*Command parameters:\*#None.

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*DESCRIPTION:\*
.p0;The SHOW OBSERVERS command is used to display information about currently
selected observers at the terminal. 
.P0;Details of the coordinate position, height and field of view of each
observer, are displayed. 
.BR;The information is shown in the current units of measurement.  This is
dependent on the header type of the input DTM, or may be set explicitly using
the UNITS command. 
.P0
^*--------------------------------------------------------------------------------\*
.BR;^^^*Messages:\*

.P0;The following messages are specific to the commands SHOW and SHOW OBSERVERS

.LIT

*** ERROR *** Specifying command SHOW
Command qualifiers are ENABLE, FILES, OBSERVERS, SETTINGS or TARGETS

*** WARNING *** No observers are currently selected

.END LIT
.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^*Examples:\*

.p0;COVER>^*SHOW OBSERVERS<CR>\*
.LIT

Current observer settings (Units are DTI Matrix Values)

Observer       Position          Height    Direction    Cone    Distance
  1          100      100         50.3        0.0      360.0        0.0
  2          130      140         70.6       30.0       60.0      120.5
  4          114      117         63.2      245.0       60.0      145.2 

.END LIT
.br;COVER>
.!******************************************************************************

.PAGE
.SUBTITLE   SHOW SETTINGS command
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*SHOW SETTINGS\*

.LM +8
.p 0;Shows the current value of those parameters that may be set using the SET
command. 
.LM -8

.P0
^*--------------------------------------------------------------------------------
.LIT
FORMAT:		 SHOW SETTINGS

.end lit
.P0
^*--------------------------------------------------------------------------------\*
.BR;^^^*Command parameters:\*#None.

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*DESCRIPTION:\*

.P 0; Displays the name of all COVER parameters that may be set using the
SET command, and their current values. 
.BR; If the SHOW SETTINGS command is given before using a SET command, the
values shown are the default values that are allocated to the parameters by
COVER. 
.P0
^*--------------------------------------------------------------------------------\*
.BR;^^^*Messages:\*

.P0;The following message is specific to the command SHOW:

.LIT

*** ERROR *** Specifying command SHOW
Command qualifiers are ENABLE, FILES, OBSERVERS, SETTINGS or TARGETS

.END LIT
.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^*Examples:\*
             
.P0;COVER>^*SHOW SETTINGS<CR>\*

.LIT

Current values:

OFFSET     1    1       REFRACTION_COEFFICIENT  0.125

.END LIT
.BR;COVER>
.!******************************************************************************

.PAGE
.SUBTITLE  SHOW TARGETS command
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*SHOW TARGETS\*

.LM +8
.p 0;Displays the position of the target viewing point associated with
each currently selected observer. 
.LM -8

.P0
^*--------------------------------------------------------------------------------
.LIT
FORMAT:		 SHOW TARGETS
.end lit
.p0
^*--------------------------------------------------------------------------------\*
.BR;^^^*Command parameters:\*#None.

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*DESCRIPTION:\*
.p0;This command is used to display at the terminal, the target view point
associated with each currently selected observer. 
.p0;Details are shown in the current units of measurement.  This is dependent
on the header type of the input DTM, or may be set explicitly using the UNITS
command. 
.P0
^*--------------------------------------------------------------------------------\*
.BR;^^^*Messages:\*

.P0;The following messages are specific to the commands SHOW and SHOW TARGETS
.LIT

*** ERROR *** Specifying command SHOW
Command qualifiers are ENABLE, FILES, OBSERVERS, SETTINGS or TARGETS

*** WARNING *** No observers are currently selected

.END LIT
.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^*Examples:\*

.p0;COVER>^*SHOW TARGETS<CR>\*
.LIT

Current Target Points (Units are DTI Matrix Values)

Observer      Target View Point

  1             130      160
  2              70      325

.END LIT
.br;COVER>
.!******************************************************************************
.PAGE
.SUBTITLE SPAWN command
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*SPAWN\*
.INDEX COVER> commands> SPAWN
.INDEX COVER> SPAWN command

.LEFT MARGIN +8
.P0; The SPAWN command enables a subprocess to be created from within COVER. 
.LEFT MARGIN -8

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*FORMAT:                SPAWN command-line\*


.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Command parameters:\*

.LEFT MARGIN +8
.P-8;command-line
.P0; Specifies a DCL command string to be executed as if typed in response to
a '$' prompt. When the command completes, the subprocess terminates and control
is returned to COVER. The command line cannot exceed 80 characters. 
.LEFT MARGIN -8

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*DESCRIPTION:\*
.P0; The SPAWN command enables you to create a subprocess while within
COVER. When the subprocess terminates, control is returned to COVER. 
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Messages:\*
.P 0;The following error messages are specific to the SPAWN command:

.LIT

*** ERROR *** Specifying command SPAWN 
Command requires a valid DCL command line

*** ERROR *** Unable to spawn command, returning to COVER

.END LIT
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Examples:\*

.P0;COVER> ^*SPAWN DIRECTORY LSL$DTI:_*_._DTI<CR_>\*

.NO FILL

Directory DUA3:[LSL.DTI]

TEST1_.DTI;1              8/8       18-AUG-1987 07:56  [LSL,DAVEC]
TEST2_.DTI;1              7/8       18-AUG-1987 17:17  [LSL,DAVEC]
TEST2_.DTI;2              7/8       18-AUG-1987 17:34  [LSL,DAVEC]

Total of 3 files, 22/24 blocks.

.FILL
.BR;COVER> 

.!******************************************************************************

.PAGE
.SUBTITLE  TARGET command
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*TARGET\*

.LM +8
.P 0;Defines the target view point of the observer currently selected by means
of the DEFINE OBSERVER command. 
.LM -8

.P0
^*--------------------------------------------------------------------------------
.LIT
FORMAT:		 TARGET x_coordinate y_coordinate
.end lit
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Command parameters:\*

.LM +8
.P-8; x__coordinate
.p 0; The x coordinate position of the target point.
.P-8; y__coordinate
.p 0; The y coordinate position of the target point.
.LM -8
.P0;The format of the command parameters is controlled by the UNITS command.
.LIST " "
.LE; UNITS MATRIX - 2 integer values are required defining the position of
the target point in terms of a column and row number.
.LE; UNITS METRES - 2 real (floating point) values are required defining the
position of the target point in metre values. By default, or if the ENABLE
ABSOLUTE command has been given, the values are absolute coordinates (eg. U.K.
National Grid coordinates); if the DISABLE ABSOLUTE command has been given,
then the coordinates are offsets from the SW corner of the matrix. 
.LE; UNITS SECONDS - 2 real (floating point) values are required defining the
absolute position of the target point in seconds of arc. The values are
supplied in the order latitude followed by longitude. A negative latitude value
indicates a position in the Southern Hemisphere, and a negative longitude value
a point to the west of Greenwich. 
.LE; UNITS LATLONG - 2 values are required defining the absolute latitude and
longitude position of the target point in the format DDD MM SS H where DDD is
the number of degrees, MM is the number of minutes, SS is the number of
seconds, and H is the hemisphere (N,S,E,W). The values are supplied in the
order latitude followed by longitude.
.LE; UNITS PROJECTION - 2 real (floating point) values defining the position
of the target point in in projection record units.  By default, or if the
ENABLE ABSOLUTE command has been given, the values are absolute coordinates;
if the DISABLE ABSOLUTE command has been given, then the coordinates are
offsets from the SW corner of the matrix. 
.END LIST
.P0;Note that in all cases, the input values are adjusted to the nearest
column and row values.
.p0
^*--------------------------------------------------------------------------------\*
.BR;^*DESCRIPTION:\*
.P0;Defines the position of the target view point of the observer
currently selected by means of the DEFINE OBSERVER command. 
.P0;The TARGET command provides an alternative means to the DIRECTION and
DISTANCE commands, of defining an observer's direction and distance 
of view.
.p0;If a cone of vision for the selected observer has not been previously
defined when the TARGET command is given, or the current cone value is 360
degrees, a cone of vision of 90 degrees is applied to the observer. 
.P0; The target point must be inside the geographical bounds of the DTM, but
may lie outside the current area of interest defined by means of the WINDOW
command. 
.p0;Note that once defined, the target position is applied by default to
subsequent observers when a further DEFINE OBSERVER command is given. 
.P0;If a digitising table is available, and a map has been registered to the
DTM using the SETUP MAP command, puck ^*button 9\* may be used to digitise the
position of the target point.
.P0; The use of the commands SHOW TARGETS and SHOW OBSERVERS is recommended to
confirm the correct definition of target position, and observer field of view
parameters. 
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Messages:\*
.P0;The following error messages are specific to TARGET command:
.LIT

*** ERROR *** Specifying command TARGET using puck button
No map set up has been performed

*** ERROR *** Specifying command TARGET using puck button
Digitised point must lie within DTM bounds

*** ERROR *** Specifying command TARGET
The input DTM is undefined

*** ERROR *** Specifying command TARGET
No observer has been selected using the DEFINE OBSERVER command

*** ERROR *** Specifying command TARGET
Command requires 2 real arguments

*** ERROR *** Specifying command TARGET
Latitude and longitude values supplied in wrong format
.END LIT

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Examples:\*

.P0;COVER>^*UNITS MATRIX<CR>\*
.BR;COVER>^*DEFINE OBSERVER 1<CR>\*
.BR;COVER>^*POSITION 10 10<CR>\*
.BR;COVER>^*TARGET 400 300<CR>\*
.BR;COVER>^*SHOW OBSERVERS<CR>\*
.LIT

Current observer settings (Units are DTI Matrix Values)

Observer       Position          Height    Direction    Cone    Distance
  1          10        10         50.3        56.4      90.0      486.0

.END LIT
.BR;COVER>^*SHOW TARGETS<CR>\*
.LIT

Current Target Points (Units are DTI Matrix Values)

Observer      Target View Point

  1             400      300

.END LIT
.BR;COVER>

.!******************************************************************************

.PAGE
.SUBTITLE UNITS command
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*UNITS\*
.INDEX COVER> commands> UNITS

.INDEX COVER> UNITS command

.LEFT MARGIN +8
.P 0;Specifies the units of measurement that will be used when defining an area
of interest in the input DTM, or defining the position of an observer or target
point.  The command also controls the units of measurement which will be used
when displaying file header details or observer viewing parameters. 
.LEFT MARGIN -8

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*FORMAT:                UNITS units\*


.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Command parameters:\*

.LEFT MARGIN +8
.P-8;units
.P 0;A keyword defining the measurement units, chosen from: 
.LITERAL

	MATRIX	    Matrix grid interval units, i.e rows and columns
	METRES	    Metres on the ground
	LATLONG	    Latitude and Longitude 
		    (in degrees, minutes and seconds)
	SECONDS     Seconds of arc
	PROJECTION  Projection Record Units 
                    (eg. mms on the source document)

.END LITERAL
.LEFT MARGIN -8

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*DESCRIPTION:\*

.P 0;The UNITS command defines in which units of measurement arguments to the
DISTANCE, POINT, POSITION and TARGET commands are specified, and the units of
measurement used when defining an area of interest in the input DTM by means of
the WINDOW command. 
.br;The command also controls in what format details from the header of the
DTM, and observer and target details are displayed, when the SHOW FILES, SHOW
OBSERVERS and SHOW TARGET commands are given. 
.P0;The command should be given after defining the input DTM since an
appropriate default units of measurement is set up when the file is opened. If
the DTM file is of header type TED4 or UHL1 (ie DTED files), then the default
is latitude and longitude specified in degrees, minutes and seconds; for all
other header types, matrix units (ie. columns and rows) are assumed. 
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Messages:\*
.P 0;The following error messages are specific to the UNITS command:

.LIT

*** ERROR *** Specifying command UNITS
Command qualifiers are MATRIX, METRES, PROJECTION, SECONDS or LATLONG

*** ERROR *** Specifying command UNITS
Command qualifier is invalid for the input file

.END LIT
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Examples:\*
.BLANK
.BR;COVER> ^*UNITS MATRIX_<CR_>\*
.BR;COVER> 

.!******************************************************************************

.PAGE
.SUBTITLE WAIT command
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*WAIT\*
.INDEX COVER> commands> WAIT
.INDEX COVER> WAIT command

.LEFT MARGIN +8
.P0; The WAIT command causes processing to be suspended for a specified number
of seconds. 
.LEFT MARGIN -8

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*FORMAT:                WAIT seconds\*


.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Command parameters:\*

.LEFT MARGIN +8
.P-8;seconds
.P0; The number of seconds for which processing is to be suspended. A real
(floating point) value is required. 
.LEFT MARGIN -8

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*DESCRIPTION:\*
.P0; The WAIT command causes processing to be suspended for a specified number
of seconds. It is designed for use in software demonstration situations and is
of no value in a production flowline. 

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Messages:\*

.P 0;The following error message is specific to the WAIT command:
.LIT

*** ERROR *** Specifying command WAIT
Command requires a real argument

.END LIT
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Examples:\*
.BLANK
.BR;COVER> ^*WAIT 4.0_<CR_>\*
.BR;COVER>
.!******************************************************************************

.PAGE
.SUBTITLE  WINDOW command
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*WINDOW\*

.LM +8
.P 0;Specifies an area of interest in the input DTM.
.LM -8
.P0
^*--------------------------------------------------------------------------------
.LIT
FORMAT:		WINDOW  xmin ymin xmax ymax

.end lit
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Command parameters:\*

.LEFT MARGIN +8
.P-8;xmin ymin
.BR; The coordinates of the bottom left hand corner of the defining rectangle.
.P-8;xmax ymax
.BR; The coordinates of top right hand corner of the defining rectangle.
.P0;The format of the command parameters is controlled by the UNITS command.
.LIST " "
.LE; UNITS MATRIX  Requires 4 integer values defining the rectangle in terms
of column and row numbers
.LE; UNITS METRES  Requires 4 real (floating point) values defining the
rectangle in metre values. 
.LE; UNITS SECONDS Requires 4 real (floating point) values defining the
absolute position of the rectangle in seconds of arc.  The values are supplied
in the order latitude followed by longitude for the SW corner, and latitude
followed by longitude for the NE corner.  A negative latitude value indicates a
position in the Southern Hemisphere, and a negative longitude value a point to
the east of Greenwich. 
.LE; UNITS LATLONG Requires 4 values defining the absolute latitude and
longitude position of the rectangle in the format DDD MM SS H where DDD is
the number of degrees, MM is the number of minutes, SS is the number of
seconds, and H is the hemisphere (N,S,E,W). The values are supplied in the
order latitude followed by longitude for the SW corner, and latitude 
followed by longitude for the NE corner.
.LE; UNITS PROJECTION  Requires 4 real (floating point) values defining the
rectangle in projection record units.  By default, or if the ENABLE ABSOLUTE
command has been given, the values are absolute coordinates; if the DISABLE
ABSOLUTE command has been given, then the coordinates are offsets from the SW
corner of the matrix. 
.END LIST
.P0;Note that in all cases, the input values are adjusted to the nearest
column and row values.
.LEFT MARGIN -8
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*DESCRIPTION:\*
.p0;The WINDOW command is used limit intervisibility calculations to a
particular rectangular geographical area.  Only nodes in the DTM that lie
within this area are used in line of sight calculations. 
.br;The area of interest should lie within the geographical bounds of the DTM.
.P0;The command also determines the number of columns and number of rows that
will be present in the output cover map. 
.P 0;If the logical name LSL$MATRIX__DEFAULT__WINDOW is defined with a value of
"1", then a default area of interest defined in matrix units of bottom left
hand corner 1,1 and top right hand corner 200,200 is set when the file is
opened. If the logical name is absent or has any other value,  or if the input
DTI file has fewer than 200 columns or 200 rows, then a default window
equivalent to the total matrix is set.
.P0;If a digitising table is available, puck ^*Button B\* may be used to
give the command WINDOW. When the button is pressed, you will be asked to
digitise 2 further points inside the map area, defining the SW (bottom lefthand)
and NE (top righthand) corners of the rectangle.  Definition of the area of
interest may be abandoned by pressing puck ^*Button F\*.
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Messages:\*

.P 0;The following messages are specific to the WINDOW command:
.LIT

*** ERROR *** Specifying command WINDOW
The input DTM must be specified before WINDOW

*** ERROR *** Specifying command WINDOW using puck button
No map set up has been performed

*** ERROR *** Specifying command WINDOW
Command requires 4 arguments

*** ERROR *** Specifying command WINDOW
NE corner values must exceed SW corner values

*** ERROR *** Specifying command WINDOW
Supplied values exceed matrix extents

*** ERROR *** Specifying command WINDOW
Latitude and longitude values supplied in wrong format

.END LIT
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Examples:\*

.P0;COVER>^*WINDOW 1 1 200 200<CR>\*
.BR;COVER>^*UNITS LATLONG<CR>\*
.BR;COVER>^*WINDOW 42 00 00N 3 00 00E 42 30 00N 2 58 40E\*
.BR;COVER>
.P 0

.!******************************************************************************

.PAGE
.SUBTITLE   WRITE command
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*WRITE\*

.LM +8
.p 0;Generates an output DTI file containing visibility data decoded from
a cover map.
.LM -8

.P0
^*--------------------------------------------------------------------------------
.LIT
FORMAT:		WRITE infile-spec outfile-spec
.end lit
.p 0
^*--------------------------------------------------------------------------------\*
.BR;^*Command parameters:\*

.LM +8
.P-8;infile-spec
.P0;The file specification of the input cover map.  This will be a file that
has been created during an earlier run of COVER. 
.BR;Any part of the file specification not supplied will be taken from the
default 'LSL$DTI:DTI.VIS' 
.BR;If no infile-spec is supplied, you will be asked to supply one in response
to the prompt ^*Input cover map filename>\*
.p-8;outfile-spec
.p 0;The file specification of an output DTI file which will be created to hold
the decoded visibility information.
.BR;Any part of the file specification not supplied will be taken from the
default 'LSL$DTI:DTI.DTI' 
.BR;If no infile-spec os supplied, you will be asked to supply one in response
to the prompt ^*Output DTI filename>\*
.LM -8
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*DESCRIPTION:\*

.p 0;The WRITE command creates an output DTI file containing visibility
information decoded from a cover map. 
.P0; Visibility information in a cover map is held in a bitwise manner. Each
bit of a data value is related to a single observer; a bit is set or unset
depending on whether a node is visible or hidden from view of an observer. 
The header of a cover map holds position and field of view parameters for each
observer. 
.BR; These data and header values are decoded when the DISPLAY or REDISPLAY
commands are given in order to produce a colour coded image showing which
parts of the terrain are visible to an observer or observers, and which parts
of the terrain lie outside their field of view. The information is read only by
the module COVER; other modules within the TVES package are unable to correctly
interpret the data values in a cover map. 
.P0;The WRITE command is provided to allow the visibility data to be stored in
a DTI file in a decoded form. In this form, these data can be processed through
other modules such as VECTORISE and ROVER. 
.BR;The data values written to the output DTI file indicate as on the graphics
screen, how many observers can see a particular area of terrain. A value of 0
indicates the node is visible to no observers; a value of 1 that it is visible
to 1 observer and so on.  A value of -1 indicates that the node is outside the
cone of vision of all observers. 
.P0;The SELECT OBSERVERS command is used to control what information is decoded
from the cover map.  Only information related to the selected observers is
used. 
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Messages:\* _None

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Examples:\*
             
.P0;COVER>^*WRITE TEST__COVER TEST__OUTPUT<CR>\*
.br;COVER>
.!******************************************************************************
.!******************************************************************************
.!*** Example COVER sessions 					     ***
.!******************************************************************************

.!******************************************************************************
.SUBTITLE Example COVER sessions

.PAGE
.P0
^*--------------------------------------------------------------------------------\*
.HL 2 ^*EXAMPLE COVER SESSION\*

.!*** enforce the subtitle
.SUBTITLE Example COVER sessions
.LIT
$ COVER

COVER> filein test

LSL$DTI:TEST.DTI	
Header: LSLA	 Data: WORD

Units are Metres 

Matrix Coverage    SW:   440000    80000    NE:   460000   100000
Matrix Window      SW:   440000    80000    NE:   460000   100000
Matrix Interval	    E:	 50	      N:    50
Value Range	     :      0   to    190

COVER> units matrix
COVER> window 50 50 150 100
COVER> define observer 1
COVER> position 50 50
COVER> show observers

Current observer settings (Units are DTI Matrix Values)

Observer       Position          Height    Direction    Cone    Distance
  1          50        50         50.3        0.0       360.0      0.0

COVER> define observer 2
COVER> pos -10 -10
COVER> height 32.5
COVER> cone 60
COVER> target 130 130
COVER> show observers

Current observer settings (Units are DTI Matrix Values)

Observer       Position          Height    Direction    Cone    Distance
  1          50        50         50.3        0.0      360.0       0.0
  2         -10       -10         32.5	     45.0       60.0     197.9

COVER> fileout test
File LSL$DTI:test.vis  selected for output.
COVER> go

+-----------------------------------------------------------+
|                                                           |
|               Determining areas visible to                |
|                       Observer  1                         |
|                                                           |
+-----------------------------------------------------------+

Observer 1   Visible  33%   Not Visible  67%   Outside   0%

.end lit
.page
.lit
+-----------------------------------------------------------+
|                                                           |
|               Determining areas visible to                |
|                       Observer  2                         |
|                                                           |
+-----------------------------------------------------------+

Observer 2   Visible  14%   Not Visible  22%   Outside  64%

COVER> exit
.end lit
.BL 2
In this example, file LSL$DTI:TEST.DTI is selected as the input DTM.  The
UNITS MATRIX and WINDOW commands have been used to define an area of interest
of 100 columns and 50 rows. Only the visibility of DTM nodes inside the
specified rectangle will be computed. 
.br; The position and field of view of 2 observers is defined.  
.BR; In the case of observer 1, only a position command has been given.  The
default cone of vision (360 degrees) and distance (infinity) values will
therefore be used. The observer has been positioned inside the DTM, so that
the height of the surface at the observation point is automatically derived
from the DTM.
.BR; Observer 2 has been placed outside the DTM.  The height command is used
to set the height at the observation point.  The cone command is used in
conjunction with the target command to restrict the observer's field of view.
Only the visibility of DTM nodes that lie within this field of view will be
determined for observer 2.
.br; The FILEOUT command is used to specify the filename of the output 
cover map, and the GO command is used to initiate intervisibility calculation.

.!******************************************************************************
.SUBTITLE MESSAGES (OTHER)

.PAGE
^^^*--------------------------------------------------------------------------------\*
.HL 1 ^^^*MESSAGES (OTHER)\*
In addition to messages which are generated by the program itself, other
messages may be produced by Laser-Scan libraries. In particular, messages may
be generated the DTI library, and by the Laser-Scan I/O library, LSLLIB. 
.P 0
DTI library messages are introduced by '%DTI', and are documented in the DTILIB
Reference Manual. In all cases the messages indicate a fatal error, that will
cause processing to halt. 
.P 0
LSLLIB messages are introduced by '%LSLLIB' and are generally self-explanatory.
Such messages rarely indicate a fatal error, and are generated most frequently
by entering a command in an invalid format in response to the COVER prompt.

