.!** page format
.LEFT MARGIN  0;.RIGHT MARGIN 80;.PAGE SIZE    60,80;.KEEP
.! enable the use of ^*...\* and * as bolding flags
.ENABLE BOLDING;.FLAGS BOLD

.!** title page
.FIGURE 14
.CENTRE ;^*Laser-Scan Ltd.\*
.FIGURE 2
.CENTRE ;^*PRIM2RASTER User Guide\*
.FIGURE 2
.CENTRE ;^*Issue 1.5\*

.FOOT
.FLAGS SUBSTITUTE
.NOFILL
Copyright (C) $$year Laser-Scan Ltd
Science Park, Milton Road, Cambridge, England CB4 4FY  tel: (0223) 420414

Document "PRIM2RASTER User Guide"			Category "USER"
Document Issue 1.0	Paul Hardy/John Rees		 4-Oct-1989
Document Issue 1.1	Clarke Brunt			11-Feb-1990
Document Issue 1.2	Clarke Brunt			14-Aug-1990
Document Issue 1.3	Clarke Brunt			12-Nov-1990
Document Issue 1.4	Clarke Brunt			13-Sep-1991
Document Issue 1.5	Clarke Brunt			11-Mar-1992
.FILL
.NOFLAGS SUBSTITUTE
.END FOOT

.!* and the title to go at the top of each page
.TITLE PRIM2RASTER - User Guide
 

.! ensure that .INDEX entries will be transmitted as they were typed
.XLOWER

.! change the way .HL works
.!   n1=6  lowest  level to have `run-in' format
.!   n2=2  highest level to have title in uppercase - 1 & 2 will
.!   n4=0  lowest  level not to have section number at left
.!   n6=0  number of blank lines before header
.STYLE HEADERS 6,2,,0,,0
.PAGE
.REQUIRE "PRIM2RASTER.RNT"
.PAGE

.!*****************************************************************************

.BR;^*--------------------------------------------------------------------------------\*
.BR;^*MODULE PRIM2RASTER\*
.INDEX PRIM2RASTER               

.P 0
^*--------------------------------------------------------------------------------\*
.HL 1 ^*FUNCTION\*

.LM +10

.INDEX PRIM2RASTER > FUNCTION
This document describes the IFF file to Raster plotter conversion program
PRIM2RASTER. This program is used in conjunction with the FPPPRIM program
to produce plotter data to drive high-resolution raster plotters.
Formats currently supported are Hell MDP, and Hell TDP.
.P 0
The image FPPPRIM.EXE produces an IFF graphics primitive file for further
processing to a raster plot format. An IFF primitive file is one in which
all the feature representation lookup has already been done, leaving 
straight lines and solid fill areas as the only entities in the file.
See the "FPP User Guide", and the "FPP Plotters User Guide" for more
information on FPPPRIM.
.P 0
The image PRIM2RASTER.EXE takes an IFF graphics primitives file produced by
FPPPRIM, and does vector to raster conversion, outputting in various
raster formats. It is capable of drawing solid filled areas, and lines
with different thicknesses, and different styles of caps (ends) and joins.

.LM -10

.PAGE
.P 0
^*--------------------------------------------------------------------------------\*
.HL 1 ^*FORMAT\*
.INDEX PRIM2RASTER > FORMAT

.LM +10
.NO FILL
.NO JUSTIFY
$ PRIM2RASTER Primitive-IFF-file-name
    
^*Command qualifiers                    Default\*
.INDEX PRIM2RASTER > command qualifiers

.nofill
/BACKGROUND=integer                   /BACKGROUND=0
/BLOCKSIZE=integer                    /BLOCKSIZE=1024
/BORDER[=real]                        /BORDER=2.0
/DENSITY=integer                      /DENSITY=1600
/FOREGROUND[=integer]                 /NOFOREGROUND
/FORMAT=string                        /FORMAT=MDP
/LOG                                  /NOLOG
/LPI=real                             depends on format
/LPMM=real                            depends on format
/MAGTAPE=device                       /MAGTAPE=MUA0:
/MASK=integer                         /MASK=0
/MEMORY=real                          calculated from user's quotas
/MIRROR                               /NOMIRROR
/RESOLUTION=real                      depends on format
.FILL
.JUSTIFY

.LM -10

.tp 10
.P 0
^*--------------------------------------------------------------------------------\*
.HL 1 ^*PROMPTS\*
.INDEX PRIM2RASTER > PROMPTS

.tp 5
.P 10
_Primitive-IFF-file: Primitive-IFF-file-name
.tp 10
.P 0
^*--------------------------------------------------------------------------------\*
.HL 1 ^*PARAMETERS\*
.INDEX PRIM2RASTER > PARAMETERS

.LM +10

.P-10;Primitive-IFF-file-name

.P-2;-#specifies the input primitive IFF file.
The name is parsed against LSL$IF:---.PRIM.

.LM -10

.tp 10
.P0
^*--------------------------------------------------------------------------------\*
.HL 1 ^*COMMAND QUALIFIERS\*
.INDEX PRIM2RASTER > Command Qualifiers

.LM +10

.tp 8
.index PRIM2RASTER > Command Qualifiers > /BACKGROUND
.p-10;/BACKGROUND=integer

.p-2;-#specifies the colour index for the background areas of the image.
The default is zero. Any features whose colour index is equal to the mask
colour will also be done in this colour.

.tp 8
.index PRIM2RASTER > Command Qualifiers > /BLOCKSIZE
.p-10;/BLOCKSIZE=integer

.p-2;-#specifies the size in bytes of blocks to be used for some output formats.
The default is 1024 bytes. For formats with a fixed blocksize, specifying
a large value will result in wasted space, while too small a value will
result in an error if the data cannot fit in the block. If the blocksize is
specified as zero, then a pass through the data will be made to compute the
actual blocksize required - this will make the run take longer, but avoid
the possibility of error.

.tp 8
.index PRIM2RASTER > Command Qualifiers > /BORDER
.p-10;/BORDER[=real]

.p-2;-#specifies width in mm of a border around the data which is to
be included in the raster image (e.g. to allow for any thick lines at
the edges). If the qualifier or its value is omitted, the default is 2.0mm.
/NOBORDER (or a value of 0.0) may be used if a border is not required.

.tp 8
.index PRIM2RASTER > Command Qualifiers > /DENSITY
.p-10;/DENSITY=integer

.p-2;-#specifies the density of the magnetic tape for some output formats.
Available densities are 800, 1600, and 6250 bpi. The default is 1600.
The qualifier will be ignored if the tape device does not support the
specified density, or the density cannot be set by software.

.tp 8
.index PRIM2RASTER > Command Qualifiers > /FOREGROUND
.p-10;/FOREGROUND[=integer]
.i-10;/NOFOREGROUND#^*(default)\*

.p-2;-#if specified then all linework with colour not equal to the mask colour
is done in the specified colour (default 1). The background uses the background
colour so only two colours in total are used. By default, the colour is taken
from the primitive IFF file (originally from the FRT file).

.tp 8
.index PRIM2RASTER > Command Qualifiers > /FORMAT
.p-10;/FORMAT=string

.p-2;-#specifies the output raster format to be used. Formats available
are MDP (HELL MDP format) and TDP (HELL TDP format). The default is MDP.

.tp 8
.index PRIM2RASTER > Command Qualifiers > /LOG
.p-10;/LOG
.i-10;/NOLOG####^*(default)\*

.p-2;-#specifies that informational messages are to be printed during
the run. Recommended in interactive use so that progress may be monitored.

.tp 8
.index PRIM2RASTER > Command Qualifiers > /LPI
.p-10;/LPI=real

.p-2;-#specifies the resolution of the raster data in lines per inch. The
default depends on the selected format. See also /LPMM and /RESOLUTION.

.tp 8
.index PRIM2RASTER > Command Qualifiers > /LPMM
.p-10;/LPMM=real

.p-2;-#specifies the resolution of the raster data in lines per mm. The
default depends on the selected format. See also /LPI and /RESOLUTION.

.tp 8
.index PRIM2RASTER > Command Qualifiers > /MAGTAPE
.p-10;/MAGTAPE=device

.p-2;-#specifies the output tape device for some formats. The default
is MUA0:.

.tp 8
.index PRIM2RASTER > Command Qualifiers > /MASK
.p-10;/MASK=integer

.p-2;-#any features whose colour (as specified in the primitive IFF file)
is equal to the specified colour will be rasterised in the background
colour. The default is 0, which will not normally occur in the IFF file.

.tp 8
.index PRIM2RASTER > Command Qualifiers > /MEMORY
.p-10;/MEMORY=integer

.p-2;-#specifies the size in megabytes of the buffer to be used for
rasterising the data. The default is 90_% of the user's working set extent
(WSEXTENT). If the value exceeds 90_% of either the user's remaining paging
file quota (PGFLQUO), or the maximum number of virtual pages (VIRTUALPAGECNT),
then it is reduced. In general, the larger the buffer the better, provided that
it can be accomodated in the computer's physical memory. If the buffer is too
small, then the data will have to be divided into many 'swathes' resulting in
an increased running time.

.tp 8
.index PRIM2RASTER > Command Qualifiers > /MIRROR
.p-10;/MIRROR
.i-10;/NOMIRROR#^*(default)\*

.p-2;-#specifies that the plot is to be flipped in the X axis.

.tp 8
.index PRIM2RASTER > Command Qualifiers > /RESOLUTION
.p-10;/RESOLUTION=real

.p-2;-#specifies the resolution in mm of the raster data. The default
depends on the selected format. See also /LPI and /LPMM.

.LM -10

.PAGE
.P 0
^*--------------------------------------------------------------------------------\*
.HL 1 ^*DESCRIPTION\*
.INDEX PRIM2RASTER > DESCRIPTION

.LM +10
PRIM2RASTER takes the "primitive" or "stroked" vector data file output by
FPPPRIM and rasterises it.
.P 0
A primitive IFF file, while following IFF format, has some conventions intended
specially for the PRIM2RASTER program. The MH entry contains the text 'PRIM' at
the start, followed by a version number - PRIM2RASTER will not accept a file
without this or with the wrong version number. Features all contain a TH entry,
whose value is the line thickness in microns (with 0 meaning minimum
thickness). The first word of the FS entry (the feature code) will be 100 for
solid area features, or, for lines, a number representing the cap and join
styles. The CAP style is a number in the range 0-2. 0 means butt caps (square
ends), 1 means round caps, and 2 means extended caps (square but extended by
half the line thickness. The JOIN style is also a number in the range 0-2. 0
means miter
.FOOT
.BLANK
.REPEAT 15 "-"
.BR
The spelling 'miter' is used, rather than 'mitre' so as to agree with
X-Windows and PostScript documentation.
.END FOOT
joins (the sides of the thick lines extended to meet),
1 means round joins, and 2 means bevel joins (each segment has a square end,
but the missing triangle is filled in). Miter joins are changed to bevel if the
resulting spike would be 'too long' - this is taken to be when there is an
acute corner in the line with an angle of less than about 11 degrees. Closed
line features will use the join style at the start/end point, and will not have
a cap at all.  The feature code is built up as 10_*JOIN#_+#CAP and so should be
one of 0, 1, 2 ,10, 11, 12, 20, 21, 22. If the file is to be viewed in LITES2
or plotted using another FPP, an FRT with these codes must be provided. The
third word of the FS entry (normally the process code) contains the colour
index to be used for the feature.
.P 0
As in other Laser-Scan programs which are able to fill areas, the maximum
number of points allowed in a solid filled area may be controlled by defining
the logical name LSL$FILL__POINTSMAX to be the required number. The default
value is 8192 points, with the minimum allowed being 100. Exceeding the limit
for number of points will result in PRIM2RASTER producing its 'MAXCOORD'
warning message, and the area being drawn as a line. Similarly the maximum
number of times which a scan line may cross the boundary of an area may be
controlled by defining the logical name LSL$FILL__CUTSMAX to be the required
number. The default value is 100 intersections, with the minimum allowed being
10. Exceeding the limit for intersections will result in messages 'FILL__SIDE -
Too many intersections found - ignored'. Memory has to be allocated in
proportion to these numbers, so unnecessarily large values should be avoided.
Note that to fill areas larger than the defaults, the logical names will
probably have had to be defined while running FPPPRIM also.
.P 0
The process of rasterisation involves the formation of the raster image in
computer memory, prior to its being written out in the appropriate format.
Unless a low resolution is chosen, the total number of pixels in the image is
usually so great that the image cannot reasonably all be stored in memory at
one time, so PRIM2RASTER adopts a strategy of dividing the image into
horizontal bands, or swathes, each of which can fit in memory. The swathes are
rasterised independently, but to avoid scanning the whole IFF file for each
swathe, PRIM2RASTER first build up lists of which features cross each swathe,
and then only the relevant features need be processed.
.P 0
The range entry in the IFF file, together with the resolution chosen, and the
border width, fix the number of pixels required in the image. The area
rasterised is from (0.0,0.0) to the maximum in x and y, plus the border all
round. The size of raster buffer available controls the number of swathes into
which the image must be divided (one byte per pixel is required). The size of
raster buffer is specified by the /MEMORY qualifier. If this qualifier is
omitted, then an amount equal to 90_% of the user's working set extent
(WSEXTENT) is used. If the amount is greater than 90_% of either the remaining
paging file quota (PGFLQUO) or the remaining page table entries
(VIRTUALPAGECNT), then it is reduced, since an attempt to allocate more than
this would cause an immediate "exceeded quota" error. Each swathe initially
requires 8 bytes of memory, which is allocated at this stage. If the output
blocksize has been explicitly specified by the /BLOCKSIZE qualifier, or allowed
to default, then the output buffer is allocated also.
.P 0
A pass of the IFF file is made building up lists of which features pass through
which swathes. For each feature passing through a swathe, 8 bytes of memory
must be allocated - at the end of the pass the amount of memory "allocated for
sectors" is printed if /LOG was given.
.P 0
The data is now rasterised, swathe-by-swathe, starting at the top and finishing
at the bottom. Within a swathe, the scan lines may begin at either the right or
the left - the default depends on the output format in use, and may be reversed
by using the /MIRROR qualifier. The sector lists are used to determine which
features need rasterising for each swathe. For each feature, the coordinates
are read from the IFF file, any vectors completely outside the swathe are
discarded, and the remaining vectors are rasterised into the raster buffer.
Once the swathe is complete, the raster buffer is scanned line by line,
converting it to the format required for output, and writing the output itself.
If /BLOCKSIZE was specified as zero, then on this first pass the length of
block required to store the most complex line in the image is determined, but
the data is not actually written. Once all the swathes have been scanned, a
buffer of the required blocksize is allocated, and a second rasterising pass is
made to write the data.
.P 0
The default action is to use the colour from the primitive IFF file (originally
from the FRT file) as the colour index for rasterised features. The background
colour (where there are no features) is 0 by default, but may be altered using
the /BACKGROUND qualifier. The /MASK qualifiers allows features in a specified
colour also to be rasterised in the background colour. The is most likely to be
useful with the /FOREGROUND qualifier, which causes all features not in the
mask colour to use a single colour, thus producing data with only two colour
values (binary).
.P 0
The format of the raster output is controlled by the /FORMAT qualifier.
.P 0
Some output formats require that each scan line occupies a fixed block size.
The size of block is controlled by the /BLOCKSIZE qualifier. Too large a block
will result in a lot of wasted space, while if the blocksize is too small, a
complex scan line may not fit, which will cause the program to abort. If
/BLOCKSIZE is specified as zero, the the program will make an initial pass
through the data to calculate an appropriate blocksize.
.P 0
Three qualifiers are provided to set the resolution of the raster data (/LPI,
/LPMM, and /RESOLUTION). Whichever of these is most convenient should be used.
The specified resolution will be adjusted to the nearest number actually
supported by the chosen format, for example Hell MDP only supports resolutions
which are an integer number of lines per cm.
.P 0
The process of rasterisation can proceed more efficiently if a reasonably large
amount of memory is available. During rasterisation, the raster buffer is
accessed more or less at random (depending on the features in the IFF file) so
it is important that the whole buffer should fit in physical memory at one
time, otherwise the time spent incurring page faults to retrieve parts of the
buffer from the paging file can be prohibitive (this behaviour is sometimes
called "chasing its tail" - as part of the buffer is brought into memory,
another part has to be removed to make space). Several parameters control the
user's access to memory. The amount of virtual memory available to any process
on the computer is limited by the SYSGEN parameter VIRTUALPAGECNT. The memory
for the raster buffer is also deducted from the user's paging file quota
(PGFLQUO) so PRIM2RASTER will not attempt to allocate a raster buffer which
would use up more than 90_% of the remaining amount of these quotas. These two
quotas control the amount of virtual (rather than physical) memory. As
discussed above, PRIM2RASTER functions much better if the buffers are located
in physical memory. The maximum number of virtual pages which may be located in
the user's physical memory ( the 'working set') at any one time is limited by
the user's WSEXTENT parameter (which itself is limited by the SYSGEN parameter
WSMAX), the ultimate limit being the amount of memory on the machine (after VMS
has reserved its amount - see SHOW MEMORY). If the /MEMORY qualifier is not
given, then a value of 90_% of WSEXTENT is chosen (possibly reduced if this
would exceed the remaining VIRTUALPAGECNT or PGFLQUO). The penalty for too
small a buffer is an increased need to access the IFF file. If all the features
are very small (i.e. each  contained in a single swathe) then this will not be
important, but large features (crossing many swathes) will need to be read once
for each swathe that they cross.
.P 0
It should be remembered that a user's working set can only grow up to the
WSEXTENT parameter if there is not too much competition from other users - only
an amount up to the working set quota (WSQUO) is guaranteed. The size of the
actual paging file on disc is only relevant if more memory is used than can fit
in physical memory, so that some needs to be saved in the paging file.
Essentially, if the program works, then the paging file is large enough. If the
file is not large enough, then one or more processes may eventually get stuck
in the MPWBUSY (modified page writer busy) MWAIT condition - this condition can
sometimes only be cured by re-booting the processor.

.LM -10

.PAGE
.P 0
^*--------------------------------------------------------------------------------\*
.HL 1 ^*FORMATS\*
.INDEX PRIM2RASTER > FORMATS

.LM +10
.HL 2 ^*MDP - HELL MDP\*
HELL MDP is a run-length encoded format output to ANSI structured magnetic
tape, the /MAGTAPE and /DENSITY qualifiers are therefore relevant. The default
resolution is 0.01mm. PRIM2RASTER automatically mounts the tape device, and
dismounts (though doesn't unload) it when finished. By default, the first scan
line output to tape begins at the top right of the picture, but can be flipped
to top left using the /MIRROR qualifier. Each data block on the tape
corresponds to a single scan line, and the blocks are of fixed length, with a
maximum of 10200 bytes. The maximum run length is 255 pixels, and each run
occupies 2 bytes, so the required block size may vary from 2 _* (pixels per
line _/ 255) for a blank scan line, to 2 _* pixels per line for the worst case
of alternate pixels a different colour. A maximum of 65535 blocks (scan lines)
are allowed per file. PRIM2RASTER can write only one file per tape.
.BL
.HL 2 ^*TDP - HELL TDP\*
HELL TDP is a run-length encoded disc format. The default resolution is 0.01mm.
PRIM2RASTER produces two output files in the current directory. Their filenames
are formed by adding the extensions _.PIC and _.TDP to the name of the input
_.PRIM IFF file. The _.PIC file consists of variable length ASCII records,
specifying details of the plot. The last line of the _.PIC file is intended to
contain the full file specification of the _.TDP file, but since the files are
intended for transferring to other systems, this is just specified as
filename_.TDP. The _.TDP file consists of unformatted binary data, with each
scan line occupying an integral number of 512 byte disc blocks (sectors) - the
number is chosen by rounding up the value specified with the /BLOCKSIZE
qualifier (default 1024), or calculated is /BLOCKSIZE is specified as zero, to
a multiple of 512. By default, the first scan line output begins at the
top right of the picture, but can be flipped to top left using the /MIRROR
qualifier. The format of the scan lines is as for HELL MDP except that a two
byte field at the start of each contains the number of runs used in the scan
line.

.LM -10
.PAGE
.P0
^*--------------------------------------------------------------------------------\*
.HL 1 ^*Examples\*

.LM +10
.INDEX PRIM2RASTER > Examples
.LITERAL
$ PRIM2RASTER testframe/foreground/log/res=0.1/format=MDP/blocksize=0
Allocating 0.22 megabytes memory for area fill buffers
Default /MEMORY (90% of WSEXTENT) is 1.8 megabytes
IFF file - LSL$DATA_ROOT:[LSL.IFF]TESTFRAME.PRIM;4
Created on   3-FEB-1990 14:01:06.68
Successfully created TESTFRAME.PIC and .TDP
Converting to TDP format at resolution 0.1 mm
Background value 0
Binary output requested with foreground value 1
Starting to sector the data...
Allocating 1.53 megabytes memory
Image is 2991 by 2141 pixels, divided into 4 swathes of 536 lines
0.013 megabytes memory allocated for sectors
Finished sectoring - 1535 features sectored
First pass, calculating buffer size...
Starting to rasterise the swathes...
Finished swathe      1 of      4
Finished swathe      2 of      4
Finished swathe      3 of      4
Finished swathe      4 of      4
Allocating 512 byte output buffer
Second pass, writing data...
Starting to rasterise the swathes...
Each scan line will use 1 disc block of 512 bytes
Finished swathe      1 of      4
Finished swathe      2 of      4
Finished swathe      3 of      4
Finished swathe      4 of      4
 ELAPSED:    0 00:03:15.89  CPU: 0:01:00.14  BUFIO: 728  DIRIO: 3627
  FAULTS: 6792 

.END LITERAL
.P 0
The /LOG qualifier is used to obtain the printed information. The /FOREGROUND
qualifier is used to produce binary output, defaulting to colour 1. The amount
of memory allocated for area fill buffers is that required when
LSL$FILL__POINTSMAX and LSL$FILL__CUTSMAX are not defined, which allows
features with up to 8192 points, and up to 100 intersections in a scan line.
The /MEMORY qualifier is omitted, so a size based on the user's WSEXTENT is
used. This is not large enough to cover the whole image, and four swathes are
required. The memory actually allocated is 1.53 megabytes. An additional 0.013
megabytes is allocated during sectoring to store pointers to the features in
each swathe. Because /BLOCKSIZE is specified as zero, an initial pass is made
which determines that a blocksize (rounded up to a multiple of 512 for TDP
format) of 512 bytes will suffice.
.LM -10
.require "PRIM2RASTERMSG.RNO"
.page
.require "PRIM2RASTER.RNX"
