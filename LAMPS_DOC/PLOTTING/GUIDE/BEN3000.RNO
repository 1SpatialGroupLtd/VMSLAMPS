.!* enable the use of ^*...\* and * as bolding flags
.ENABLE BOLDING;.FLAGS BOLD
.CHAPTER ^^^*Benson electrostatic plotters\*
.INDEX FPPBEN3000
The Benson 3000 series electrostatic plotters may be used by Laser-Scan
programs FPPBEN3000 (package PLOTTING), and ROVERBEN3000 (package TVES).
.HL 1 ^^^*Colour table\*
The Benson 3000 series colour electrostatic plotters differ from normal
pen plotters in that the colours produced by a particular colour index
(from an FRT file, for instance) may be defined by the user. In this
respect, the plotter resembles a colour display terminal. The Laser-Scan
programs initially define the colours by reading a disc file on logical name
LSL$BENSON__COLOUR. The format of this file is the same as that used
for the VAXstation and Tektronix displays, and the same file may be used,
although it will probably be found that changes are necessary to get
the desired colours on the Benson. Also white should not normally
be used on the Benson, as it will be invisible against the white paper
background. FPP will use the colours defined by the file on logical
name LSL$BENSON__COLOUR for the plot, while ROVER always reads in
another table subsequently (LSL$LOOKUP:ROVER5.DAT by default, or others
by use of the PLANES command, or explicitly by use of the LUT command).
An example colour table file is given in Appendix A.

.HL 1 ^^^*Area filling\*
The maximum number of points allowed in a filled
area is 8192 by default, but may be altered by defining logical name
LSL$FILL__POINTSMAX to be the desired number. Similarly, the maximum
number of times which a hatch line (for hatched fill) may cut the
polygon is 100 by default, but may be altered by defining logical name
LSL$FILL__CUTSMAX to be the desired number - exceeding this limit results
in the message 'FILL__SIDE - Too many intersections found - ignored'.

.HL 1 ^^^*Paper size and pixel size\*
FPP always has the concept of a sheet, in which it positions the plot
according to the command given by the user. On the Benson, the sheet
is assumed by default to be 1.189x0.841 metres (A0 size). It is normally
advisable to use FPP plot position 0, 1 or 2 (POSITION command) to avoid
wastage of paper.
.P 0
ROVER always fills the whole sheet, which is assumed to consist of
1448x1024 pixels for the purpose of displaying a raster image. Since
this may produce a plot which is too large, a means is provided to
change the sheet size, and the number of pixels.
.P 0
Logical name LSL$BENSON__SIZE may be set to to point to a file containing
a single line with 4 real numbers defining the x size (metres), y size
(metres), x number of pixels, and y number of pixels, thus to give the
same effect as the defaults, the file would have the single line:
.NOFILL
1.189 0.841 1448 1024
.BR
.FILL
The pixel numbers are not relevant to FPP, but control the number of
pixels assumed to cover the area for ROVER and LITES2. LITES2 sets
the number of pixels and their size itself, but will never draw more than
the specified number of pixels across a plot. The number may be altered
within LITES2 using the PLOT PIXELS command.
.P 0
The maximum number of pixels which may be specified in either direction
is 16384. Programs may impose other limits of their own e.g_.
10000 for ROVER. The limit for LITES2 depends on the format of the raster data.
For DTI files, the limit is
32768 for byte data, 16384 for word data, and 8192 for long data. There is no
limit for LSI or LSR format files. All of these limits (except ROVER's
10000) are proportional to the maximum number of points in filled areas
and hence may be increased using logical name LSL$FILL__POINTSMAX. The values
given here are for the default of 8192.

.HL 1 ^^^*Plotting mode\*
The Benson 3000 series plotter by default plots in transparent mode, which
means that where parts of the plot overlap, the inks will be combined,
generally giving darker colours. It also has the ability to plot in opaque
mode, where anything drawn replaces what is there already (underlying colours
do not show through).
.P 0
Several mechanisms are provided to select the drawing mode, to satisfy the
needs of the programs FPP, ROVER, and LITES2.
.LIST "o"
.LE
By default FPPBEN3000 plots in transparent mode. The command ESCAPE 1 will
cause opaque mode to be used for subsequent plotting, while ESCAPE 2 will
revert to transparent mode. As an alternative, giving the command WORKSTATION
1000 before beginning a plot will select opaque mode initially.
.LE
By default, ROVERBEN3000 draws the vector overlay using opaque mode, so that
the colours replace any underlying colour. In order to allow the overlay to
be transparent, define the logical name LSL$BENSON__TRANSPARENT (as anything).
.LE
By default, LITES2 will draw any data in overlays whose base plane is greater
than zero in opaque mode. If it is required to draw everything in transparent
mode, then either define the logical name LSL$BENSON__TRANSPARENT (as
anything), or give the command PLOT TYPE 1000 (before PLOT OPEN). Any number
other than 1000 will revert to the original behaviour.
.P 0;As an alternative to the above mechanisms, the PLOT ESCAPE command may
be used, in the same way as for FPPBEN3000. The command PLOT ESCAPE 1 will
switch to opaque plotting, while PLOT ESCAPE 2 will revert to transparent
plotting.
.END LIST

.HL 1 ^^^*Plotter interface\*
The plotter will be connected to the computer by a parallel interface,
probably with device name PLA0:, using the Benson supplied driver
PLDRIVER.

.HL 1 ^^^*Producing plots\*
The plotting programs send their output to Fortran unit number 7, which
results in the file FOR007.DAT being created in the current directory.
Alternatively logical name FOR007 may be defined to be a file name,
for example
.NOFILL
$ Define FOR007 ROVER.BIF
.FILL
This will send output to the disc file ROVER.BIF in the current
directory.
.P 0
Once a disc file has been created, it is sent to the Benson using the
Benson supplied program SENDBIF. This must be set up as a foreign
command, e.g.
.NOFILL
$ SENDBIF :== $LSL$EXE:SENDBIF
.FILL
and sends its output to logical name SYS$PLOT, which must be defined
to be the plotter device, e.g.
.NOFILL
$ Define SYS$PLOT PLA0:
.FILL
The command to plot a file is then e.g.
.NOFILL
$ SENDBIF ROVER
.FILL
which will plot the file ROVER.BIF, or
.NOFILL
$ SENDBIF FPP.PLT
.FILL
which will plot the file FPP.PLT.
.P 0
SENDBIF counts up the number of buffers sent to the plotter. Each buffer
is 4096 bytes, or 8 disc blocks. If using SENDBIF at a hardcopy terminal
or in a batch job, it is best to assign SYS$OUTPUT to NL: to avoid
the incrementing block count wasting paper.

.HL 1 ^^^*Use of ROVER\*
ROVER was originally designed for interactive use on colour graphics
screens. When used on a hardcopy plotter no attempt should be made
to clear parts of the picture, or to use the editing facilities.
The aim should be to produce the desired picture using the minimum
number of commands.

