.LEFT MARGIN  0;.RIGHT MARGIN 80;.PAGE SIZE    60,80
.KEEP

.!** title page
.FIGURE 14
.CENTRE ;^&Laser-Scan##Ltd.\& 
.BLANK
.CENTRE ;^&PLOTTING#package\&
.BLANK
.CENTRE ;^&Release#Notes\&

.FLAGS SUBSTITUTE
.FOOT
.NOFILL
Copyright (C) $$year Laser-Scan Ltd
Science Park, Milton Road, Cambridge, England CB4 4FY  tel: (0223) 420414

Document "PLOTTING Release"				Category "Release Notes"
Document Issue 3.12	Steve Townrow			21-Apr-1992
Document Issue 4.0	Clarke Brunt			13-May-1992
Document Issue 4.1	Clarke Brunt			 1-Jun-1992
Document Issue 4.2	Clarke Brunt			 6-Jul-1992
Document Issue 4.3	Clarke Brunt			21-Jul-1992
Document Issue 4.4	Clarke Brunt			22-Jul-1992
Document Issue 4.5	Clarke Brunt			10-Aug-1992
Document Issue 4.6	Clarke Brunt			 1-Sep-1992
Document Issue 4.7	Clarke Brunt			21-Jan-1993
Document Issue 4.8	Clarke Brunt			11-Feb-1993
Document Issue 4.9	Clarke Brunt			25-Feb-1993
.FILL
.END FOOT
.NOFLAGS SUBSTITUTE

.!* and the title to go at the top of each page
.TITLE PLOTTING Release notes
.PAGE
.HL 1 ^&CONTENT\&
This document describes recent changes to the Laser-Scan LAMPS software
package PLOTTING. This package provides output to hardcopy plotting
devices The main component of the package is the Fast Plotter Program
FPP which is made up of three or sometimes four parts. 
.LIST
.LE
A specific FPP main program for each type of plotter supported eg
FPPCAL5800.EXE for Calcomp 5800 series electrostatic plotters. 
.LE
A single FPP shared image containing the bulk of the application code
(FPPSHR.EXE).
.LE
Specific shared libraries for each type of plotter supported, called 
GKSxxxSHR.EXE, where xxx is the device type e.g. LP for Laserplot). These
may also be used by programs such LITES2 for hardcopy plotting.
.LE
Devices bearing a family resemblance to a Calcomp pen plotter, usually
support a version of the CalComp Host Computer Basic Software (HCBS).
For these plotters,  a single GKSHCBSSHR.EXE is used which in turn calls
upon further shared images. These are named HCBSyyy.EXE where yyy is eg
CAL907 for plotters with Calcomp 907 controllers. 
.END LIST

Details of FPP functionality and commands can be found in HELP within
FPP, and in the latest edition of the FPP Reference Manual. 
.BR
Details of feature representation can be found in the "FRT User Guide"
in the documentation for the MAPPING package.

.P 0
This document is part of the LAMPS V4.1 release, which went into Alpha test in
December 1992. It covers changes to package PLOTTING since the previous LAMPS
release (V4.0) which went into Alpha test in May 1992.
At that time, the extant version of FPP was described as V3.2 of
27-April-1992.
See the release notes for the previous LAMPS release for information about
earlier changes. 

.P 0
The current version of FPP is now V3.3 of 5-November-1992.
FPPSHR.EXE was patched on 11-Feb-1993 to
allow TRI font numbers greater than 32, and has the version number V3.4, which
will apply to all FPP versions except FPPHRD (which does not use FPPSHR).

.HL 1 ^&NEW#OR#CHANGED#FACILITIES\&
In the specified versions of the PLOTTING package programs, shared
libraries, or documentation, the following changes were made: 

.LIST
.DISPLAY ELEMENTS "(",LU,")"

.LE
21-Jul-1992 - Release Notes
.list
.le; These release notes were trimmed back to the last release.
.end list 0

.LE
1-Jun-1992 - GKSCAL5800SHR
.LIST
.LE
This item was included in the previous release, but was not in the copy of
the release notes distributed to all customers. It is therefore included here.
.P 0
FPPCAL5800 has been enhanced to allow thicker lines and to use different join
and cap styles. Previously lines used the Calcomp's hardware thick lines, which
could only be up to 16 'nibs' wide (approx 1mm on a 400 d.p.i_. plotter, and
always had ends which were squared off parallel to the sides of the paper. By
default, the new version still uses these for lines up to 16 'nibs', but for
thicker lines switches to software thick lines (using area fill). Logical name
LSL$CALCOMP__HWTHK may be set to be an integer, denoting the maximum width in
nibs for which hardware lines will be used, thus 0 always uses software lines,
while a large number will always use hardware lines. The default is 16.
.P 0
For software thick lines, the setting of the hardware field in the FRT is used
to indicate what style of line caps and joins are required. The CAP style is a
number in the range 0-2. 0 means butt caps (square ends), 1 means round caps,
and 2 means extended caps (square but extended by half the line thickness. The
JOIN style is also a number in the range 0-2. 0 means mitre joins (the sides of
the thick lines extended to meet), 1 means round joins, and 2 means bevel joins
(each segment has a square end, but the missing triangle is filled in). Mitre
joins are changed to bevel if the resulting spike would be 'too long' - this is
taken to be when there is an acute corner in the line with an angle of less
than about 11 degrees. Closed line features will use the join style at the
start/end point, and will not have a cap at all. The FRT hardware field is
built up as 10_*JOIN#_+#CAP, so for instance 21 would mean JOIN = 2 = bevel,
CAP = 1 = round. If omitted, the hardware field defaults to 0, meaning mitre
joins and butt caps. Remember that the hardware field in the SCT entry (if
present) will override that in the FRT.
.P 0
Software thick lines use Calcomp area fill to fill each line segment. A side
effect of this is that the area colour is used. The colours of hardware thick
lines are not as versatile, and sometimes have difficulty in producing the same
colour as for areas of the same colour index. This has sometimes led to
unexpected colour changes in solid area fill when the maximum number of points
for hardware fill is reached, and close hatching is used instead. Using
software thick lines throughout (LSL$CALCOMP__HWTHK set to 0) may well avoid
this problem. Very thin lines may produce unexpected effects if the area
colours are used, such as if a 1 nib horizontal or vertical line completely
misses the toned dots in the area pattern. To avoid this, either give all lines
a sensible thickness in the FRT (rather than 0), or define LSL$CALCOMP__HWTHK
to a number such as 3, so that the thinnest lines still use hardware lines.
.P 0
Note that the use of software thick lines is likely to increase the plot file
size by a factor of around 4, and so it should only be used if high quality
thick lines are essential.
.LE
A new logical name LSL$CALCOMP__DPI is provided to specify the resolution of
the plotter in dots per inch. The logical name should be defined to be a real
value, the default being 400. This is used to select the correct thickness for
hardware thick lines, which is specified in terms of the resolution.
.END LIST 0

.LE
6-Jul-1992 - GKSCAL5800SHR
.LIST
.LE
This version corrects a problem in the release of 1-Jun-1992 which prevented
raster images from plotting correctly. A patch was sent to those customers
affected.
.END LIST 0

.LE
21-Jul-1992 - GKSCAL5800SHR, GKSVRSC2V1SHR, GKSVRSVGSSHR, GKSBEN3000SHR,
GKSBENOFF3000SHR, GKSPOSTSCRIPTSHR
.LIST
.LE
These versions have been enhanced to speed up the plotting of bit images.
Non-bit images may also be faster, but less noticeably so.
.END LIST 0

.LE
22-Jul-1992 - FPPBENMET, GKSBENMETSHR
.LIST
.LE
These form a specialised version of FPP for Benson Electrostatic Plotters.
.END LIST 0

.LE
10-Aug-1992 - GKSCAL5800SHR, GKSVRSC2V1SHR, GKSVRSVGSSHR, GKSBEN3000SHR,
GKSBENOFF3000SHR, GKSPOSTSCRIPTSHR, GKSPI448SHR, GKSPRIMSHR, GKSMOTIFSHR,
GKSUISSHR, PRIM2RASTER
.LIST
.LE
All the above versions have the ability to use hardware fill for solid filled
areas, at least up to some limit on the number of points, or under control of a
logical name. The clipping of such areas to the boundary of a plot has been
corrected. Previously, areas with 'holes', where the connecting lines crossed
the boundary of the areas, could be plotted incorrectly.
.LE
The sorting algorithm used to draw hatched areas, and solid areas when they
do not use hardware, has been enhanced. This can give a saving of around
25_% processor time when drawing data consisting entirely of such areas.
.LE
GKSCAL5800SHR supports two new logical names. If LSL$CALCOMP__STEPS is defined
as an integer, then the resulting plot will be appropriate
for a plotter with the given number of steps per inch (default is 2032_/inch,
or 800_/cm). If LSL$CALCOMP__SCALE is defined as an integer up to 32, then
the plot data is scaled down by the given number, but a command is sent to
the plotter to scale it up again. The use of either of these logical names
can reduce the amount of data which needs to be transmitted to the plotter,
without visibly degrading the resolution of the plot.
.END LIST 0

.LE
10-Aug-1992 - Plotters User Guide
.LIST
.LE
New versions of the CAL5800 and POSTSCRIPT chapters.
.END LIST 0

.LE
1-Sep-1992 - GKSPOSTSCRIPTSHR
.LIST
.LE
Logical name LSL$PS__FILL__INVIS (to allow the invisible connecting lines to
sub-polygons to be omitted) was disregarded if the plot was being clipped.
It now works whether or not clipping is in force.
.END LIST 0

.LE
5-Nov-1992 - FPPSHR.EXE (V3.3), FPP.HLB
.LIST
.LE
New command ENABLE/DISABLE HWTEXT. This allows the default for the particular
FPP version regarding whether to use hardware text when the appropriate
flag bit appears in the FRT to be overridden.
.LE
New command ANNOTATION HWTEXT [n] to enable (n missing or 1), or disable (n 0)
the use of hardware text for labelling. Default is disabled.
.LE
Labelling will now use an italic font if ANNOTATION FONT is set to a negative
number. Previously, italics were never used.
.LE
The TITLE TEXT command will now use hardware text if this is enabled, and the
appropriate bit appears in the FRT file for the TITLE FC TEXT feature code.
.LE
Some versions of FPP (particularly MOTIF when using Display
PostScript - see below) are now able to calculate the size of hardware text,
and therefore correctly display centre and right justified hardware text.
Previously, the text size was always taken from the TRI file, which may
not have agreed with the hardware text font.
.END LIST 0

.LE
5-Nov-1992 - GKSAEGSHR.EXE
.LIST
.LE
This has no functional changes but is being re-issued containing a dummy
hardware text routine. This is necessary because this image is used at
Laser-Scan as a representative GKS shareable image when linking FPPSHR.
.END LIST 0

.LE
15-Dec-1992 - FPPMOTIF.EXE, GKSMOTIFSHR.EXE
.LIST
.LE
FPPMOTIF now supports hardware text. If the appropriate bit appears in the FRT
flag field for a text feature code, then the text will be drawn using Display
PostScript, or if the X-Windows server does not support this, then X-Windows
text. The former is very high quality, while the latter has a limited range of
sizes and cannot be rotated - if your X-Server does not support Display
PostScript, then you will probably want to use the DISABLE HWTEXT command to
ignore hardware text flags in the FRT and use text from the TRI file. Several
logical names control the operation of Display PostScript, particularly the
mapping of FRT font numbers onto PostScript fonts - the MOTIF chapter of the
Plotters User Guide has details of these. The logical name LSL$UIS__MAX__COLOUR
(used by GKSMOTIFSHR) has been changed to LSL$DECW__MAX__COLOUR, however the
old name still remains valid for compatibility.
.END LIST 0

.LE
15-Dec-1992 - Plotters User Guide
.LIST
.LE
Two errors concerning the hardware line join style have been corrected in the
Calcomp 5800, Primitive IFF/PRIM2RASTER, PostScript, and MOTIF chapters.
The MOTIF chapter also contains details of using Display PostScript for
text output.
.END LIST 0

.LE
15-Dec-1992 - GKSWILDSHR, and WILD chapter of Plotters User Guide.
.LIST
.LE
SPR 2029. If plotting offline, then logical name LSL$WILD__PENS may be defined
to be the number of pens on the plotter (2 or 4). If not defined, or defined
incorrectly, then 2 pens will be used.
.END LIST 0

.LE
16-Dec-1992 - GKSCAL5800SHR, and CAL5800 chapter of Plotters User Guide.
.LIST
.LE
SPR 1978. Logical name LSL$CALCOMP__HW__FILL may now be defined as 0 to disable
hardware area fill. If it is not defined, or is defined as anything else, then
hardware fill will be used for areas of up to 4095 points as before. The reason
for sometimes wanting to disable it is that when this number of points is
exceeded, and close hatching is used instead, it is not always possible to
render the area in exactly the same colour.
.END LIST 0

.LE
21-Jan-1993 - GKSPI448SHR
.LIST
.LE
SPR 1627. FPPPI448 should now correctly draw in transparent mode by default
as documented. Previously, it always used opaque mode regardless of any usage
of ESCAPE commands.
.END LIST 0

.LE
11-Feb-1993 - FPPSHR
.LIST
.LE
FPPSHR was updated on 11-Feb-1993 and now allows up to 127 TRI fonts, with
font numbers in the range 1-127. Logical name LSL$FRT__FONTMAX will have to be
defined as usual to access more than 5 fonts. The version number was changed to
V3.4 to indicate this change. FPPHRD will adopt this
new limit in the next release. The change was mainly intended for use with
Display PostScript text in LITES2, and PostScript text in plots, when the
actual character shapes in the TRI are not used.
.END LIST 0

.LE
25-Feb-1993 - GKSPOSTSCRIPTSHR
.LIST
.LE
A new version of the PostScript driver was released to avoid a problem when
hardware text is plotted using FPP (fatal program exit). This problem had only
arisen since December 1992, when the additional hardware text facilities were
introduced in the MOTIF driver, and had not been encountered by any users.
.END LIST 0

.END LIST
