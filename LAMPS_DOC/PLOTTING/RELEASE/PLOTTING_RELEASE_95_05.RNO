.LEFT MARGIN  0;.RIGHT MARGIN 80;.PAGE SIZE    60,80
.FLAGS BOLD;.ENABLE BOLD
.KEEP

.!** title page
.FIGURE 14
.CENTRE ;^*Laser-Scan##Ltd.\* 
.BLANK
.CENTRE ;^*PLOTTING#package\*
.BLANK
.CENTRE ;^*Release#Notes\*

.FLAGS SUBSTITUTE
.FOOT
.NOFILL
Copyright (C) $$year Laser-Scan Ltd
Science Park, Milton Road, Cambridge, England CB4 4FY  tel: +44 (0) 1223 420414

Document "PLOTTING Release"				Category "Release Notes"
Document Issue 5.4	Clarke Brunt			28-Jan-1994
Document Issue 5.5	Clarke Brunt			15-Feb-1994
Document Issue 5.6	Clarke Brunt			24-Feb-1994
Document Issue 5.7	Clarke Brunt			10-Mar-1994
Document Issue 5.8	Clarke Brunt			28-Mar-1994
Document Issue 5.9	Clarke Brunt			14-Jun-1994
Document Issue 6.0	Clarke Brunt			18-Jul-1994
Document Issue 6.1	Clarke Brunt			 9-Sep-1994
Document Issue 6.2	Clarke Brunt			22-Nov-1994
Document Issue 6.3	Clarke Brunt			16-Dec-1994
Document Issue 6.4	Clarke Brunt			20-Dec-1994
Document Issue 6.5	Clarke Brunt			 6-Apr-1995
Document Issue 6.6	Clarke Brunt			 4-May-1995
Document Issue 6.7	Clarke Brunt			12-May-1995
.FILL
.END FOOT
.NOFLAGS SUBSTITUTE

.!* and the title to go at the top of each page
.TITLE PLOTTING Release notes
.PAGE
.HL 1 ^*CONTENT\*
This document describes recent changes to the Laser-Scan LAMPS software
package PLOTTING. This package provides output to hardcopy plotting
devices. The main component of the package is the Fast Plotter Program
(FPP) which is made up of three or sometimes four parts. 
.LIST
.LE
A specific FPP main program for each type of plotter supported, eg
FPPCAL5800.EXE for Calcomp 5800 series electrostatic plotters. 
.LE
A single FPP shared image containing the bulk of the application code
(FPPSHR.EXE).
.LE
Specific shared libraries for each type of plotter supported, called 
GKSxxxSHR.EXE, where xxx is the device type e.g. LP for Laserplot). These
may also be used by programs such LITES2 for hardcopy plotting.
.LE
Devices bearing a family resemblance to a Calcomp pen plotter, usually
support a version of the CalComp Host Computer Basic Software (HCBS).
For these plotters,  a single GKSHCBSSHR.EXE is used which in turn calls
upon further shared images. These are named HCBSyyy.EXE where yyy is eg
CAL907 for plotters with Calcomp 907 controllers. 
.END LIST

Details of FPP functionality and commands can be found in HELP within
FPP, and in the latest edition of the FPP Reference Manual. 
.BL
Details of feature representation can be found in the "FRT User Guide"
in the documentation for the MAPPING package.

.P 0
This document is part of the LAMPS V4.4 release, which went into Alpha test in
April 1995. It covers changes to package PLOTTING since the previous LAMPS
release (V4.3) which went into Alpha test in January 1994.
At that time, the extant version of FPP was described as V3.6
of 15-February-1994.
See the release notes for the previous LAMPS release for information about
earlier changes.

.P 0
The current version of FPP is now V3.7 of 16-DEC-94.

.HL 1 ^*NEW#OR#CHANGED#FACILITIES\*
In the specified versions of the PLOTTING package programs, shared
libraries, or documentation, the following changes were made: 

.LIST
.DISPLAY ELEMENTS "(",LU,")"

.LE
14-June-1994 - Release Notes
.list
.le; These release notes were trimmed back to the last release.
.end list 0

.LE
14-June-1994 - GKSBENOFF3000SHR.EXE
.LIST
.LE
SPR 2604. This GKS shareable image is a special version for a single customer.
It is built from a Benson offline plotter library which was not written by
Laser-Scan. For this release, changes were made to this library to avoid array
overflow, which was provoked by solid filled areas with above about 300 points,
and caused tracebacks to occur later (integer overflow in the particular
example observed).
.END LIST 0

.LE
13-July-1994 - GKSMOTIFSHR.EXE
.LIST
.LE
SPR 2725. Ensure that Display PostScript text is drawn on the screen ^*before\*
subsequent non-PostScript graphics. Because of the separate PostScript
pipeline, it was previously possible for PostScript text to appear later
than intended, causing problems when the display order was important (such
as using priorities).
.LE
Avoid unnecessarily getting the PostScript pipeline up to date if no
PostScript text has been drawn. This may give a slight performance
improvement if Display PostScript is enabled, but is not being heavily
used.
.END LIST 0

.LE
18-July-1994 - GKSHPGL2SHR.EXE and HP-GL/2 chapter of Plotters Guide
.LIST
.LE
Ensure that filled areas (especially clipped ones) return to their
starting point. Previously, the current pen position could be lost,
resulting in displacement of subsequent parts of the plot.
.LE
A 'TR0' instruction is now included in the HP-GL/2 output. This ensures
that white graphics are actually drawn. Previously, plotters would
default to drawing white 'transparently' (i.e_. not drawing it at all).
.LE
All pixels of bit images (including background) are now drawn, unless
LSL$HP__BACKGROUND is defined as 0, when 0 pixels are left blank. This also
applies to byte images, for which the 0 pixels were always drawn
previously.
.LE
The paper size (PS) instruction derived from an LSL$HP__SIZE file has
been corrected.
.END LIST 0

.LE;FPPSHR.EXE, FPPHRD.EXE, and __TV of 7-Sep-1994
.LIST
.LE
Re-linked to use the FRTLIB shareable image on logical name LSL$FRTSHR.
No other changes.
.END LIST 0

.LE;GKS_*SHR.EXE - all GKS shareable images (25) + __TV versions (7) of
September 1994
.LIST
.LE
Updated to provide support for arbitrary hatching angles in filled areas.
.LE
Prevent 3-point closed areas (i.e. a line) from reaching the FILL__SIDE
routine and producing the 'Bad argument list' error. Instead, 'GKS error
100 in routine GFA' will occur (wrong number of data points). Most
of the libraries do not bother to display this error.
.END LIST 0

.LE;GKSMOTIFSHR.EXE and __TV of 7-Sep-1994
.LIST
.LE
Same changes as in GKS_*.OLB above.
.LE
Add code to calculate a bounding polygon for a Display PostScript text.
This is used when LITES2's REGION command is used on a hardware text.
.LE
Flush out changes to Display PostScript graphical context when the plane
mask is changed. This causes the PostScript text to only affect the
appropriate overlay. Previously it could obliterate data already drawn in
other overlays.
.LE
Alter the method of setting the colour of Display PostScript text. Previously
it was possible to get a colour consisting of 'dithering' between the
desired colour and the adjacent one in the colour table.
.END LIST 0

.LE;GKSPOSTSCRIPTSHR.EXE and __TV of 7-Sep-1994
.LIST
.LE
PS files now identified as produced by GKSPSLIB V2.2 7-September-1994.
.LE
Same changes as in GKS_*.OLB above.
.LE
Add code to calculate a bounding polygon for a PostScript text.
This is intended for future use if a blanking region around text becomes
part of the graphics drawn for the text.
.LE
Change the definitions of `u' and `U' in the prolog. The previous definitions
were not executed correctly by some PostScript interpreters which did not
conform exactly to the Adobe standard. The usual result was `stackoverflow'
or `typecheck' errors.
.LE
SPR 2796. Correct the code produced for compressed byte images (using the IM1
procedure). In some circumstances (for example rows which did not contain a
multiple of 8 pixels), invalid code was output which could result in an
`undefined' or `typecheck' error.
.LE
Correct the prolog code for monochrome compressed bit images (using the
IMM1 procedure). If colour was enabled (LSL$PS__COLORIMAGE defined as 1), and
the plot was sent to a device which supported colour images, then a
`rangecheck' error would result.
.END LIST 0

.LE;FPPPRIM.EXE and __TV of 9-Sep-1994
.LIST
.LE
Now correctly loads the FPP shareable image when used on ALPHA AXP.
.END LIST 0

.LE;PSEXPORT.EXE and __TV of 9-Sep-1994
.LIST
.LE
Handle text continuation lines correctly. These only occurred when long
texts were output, or text containing lots of characters outside the
normal printable range, which are represented in octal. Previously such
lines were copied to the output twice.
.END LIST 0

.LE;GKSCAL5800SHR.EXE and __TV of 22-Nov-1994
.LIST
.LE
Add ESCAPE 3 function (PLOT ESCAPE 3 in LITES2), which begins a new
transparent layer above existing ones (c.f. ESCAPE 1 which begins a new
opaque layer, and ESCAPE 2 which reverts to the bottom transparent layer).
.END LIST 0

.LE;FPPSHR.EXE, FPPHRD.EXE, and __TV of 9-Dec-1994
.LIST
.LE
Now requires FRT shareable image with match parameters 1.3 or higher
(FRTSHR.EXE of 9-Dec-1994 or later).
.LE
Correct the drawing of offset lines (non-zero FRT SIZE entry). It
was possible to get the wrong result if the first or last segments
of a line were invisible, or at the joins between string entries
in the IFF file (usually after each 200 points).
.LE
Correct the drawing of graphical type 6 curves. It was possible to
get the wrong result if the IFF file was revision level 1 (used CB
entries), the feature had more than 200 points, and the point attributes
were constant for one set of points, but varied in other parts of
the feature. (This unusual set of circumstances confused the routine
which determines whether the feature forms a closed loop before starting
to draw it).
.LE
The FRT system now allows line, curve, or area feature codes to be
used as part of the prioritised representation of symbol and text
features. FPP interprets these by constructing the boundary of
the symbol or text, and then drawing it using the specified line,
curve, or area code. The SIZE entry in the FRT for the line, curve,
or area is interpreted as the amount (in sheet mm) by which
to expand the boundary. If SIZE is negative, it is instead interpreted
as a fraction of the height of the symbol or text. Note that SIZE
normally means offset for a line, or hatch spacing for a hatched area -
it does not perform these functions when used as part of a text_/symbol
representation. The text_/symbol boundary may be either simple (a
bounding rectangle), or complex (something better fitting the actual
shape). A complex boundary is chosen by setting bit 15 (value 32768, or
_^X8000) or the FRT FLAGS entry for the line, curve, or area.
.LE
Changes have been made to the user text and symbol drawing routines,
which allow user-written code to control the appearance of these
features. The text shareable image (logical name LSL$TEXT__ROUTINE)
now includes a second entry point, BLANK__TEXT, which can compute
an outline for a text feature when line/curve/area feature codes
are used as part or its prioritised representation (as described
above). Similarly for symbols, an entry BLANK__SYMBOL has been
added to LSL$SYMBOL__ROUTINE. An additional argument is now passed
to the text drawing entry point, DRAW__TEXT, indicating if hardware
text is required. Details of the format of these user-written routines
can be found in the LITES2 Reference Manual.
.END LIST 0

.LE;GKSMOTIFSHR.EXE and __TV of 12-Dec-1994
.LIST
.LE
Re-linked with new GKSMOTIFLIB. Gives better behaviour when attempting
to allocated 8 planes and pre-allocated colours (for DECTerms etc.) are
found at the top of the colour map, rather than the bottom (this
has been observed in some X-servers for PCs). Also assert the colour map for
newly created windows (although window manager settings or other windows may
intervene). 
.END LIST 0

.LE;FPPSHR.EXE, FPPHRD.EXE, and __TV of 15/16-Dec-1994
.LIST
.LE
Now requires FRT shareable image with match parameters 1.4 or higher
(FRTSHR.EXE of 15-Dec-1994 or later).
.LE
Correct blanking of composite texts, and text with non-zero locating
point (problems in first release of 9-Dec-1994).
.LE
Re-build to incorporate changes in the MAPPING package allowing up
to 8 rather than 4 priority/feature code pairs in a PRIO record in the
FRT.
.END LIST 0

.LE; GKS_*SHR.EXE and __TV of 19-Dec-1994 (_* = CAL5800, BEN3000,
BENOFF3000, BENMET, VRSC2V1, VRSVGS)
.LIST
.LE
All GKS shareable images which use GKSCAL5800LIB have been rebuilt
to fix a problem which occurred in PLOT CLOSE after doing a DRAW MAP
in LITES2 using software thick lines on a map with no filled areas.
.END LIST 0

.LE;5-Apr-1995 (change in FRT shareable image, in the MAPPING package)
.LIST
.LE
New logical name LSL$DOLLAR__ESCAPE. If defined as 0, then the usual
processing of the character `$' in text strings (add 128 to the value
of the following character) is turned off. If defined as 1, or not defined
at all, the `$' will continue to be treated as an escape character.
.END LIST 0

.LE; GKS_*SHR.EXE and __TV of 6-Apr-1995 (_* = MOTIF, POSTSCRIPT, HPGL2)
.LIST
.LE
Support has been added for PostScript fonts for languages (such as
Arabic, or Hebrew) which are written from right-to-left. Since these
fonts appear to be supplied with positive character widths (implying
left-to-right writing), there is a new directive in the .PSFONTLIST
file (DIRECTION RIGHT__TO__LEFT) to indicate that a font should
be drawn the other way.
.P 0
In addition, for Arabic, different glyphs need to be selected from the
font depending on the position of a letter within a word. Another
directive in the .PSFONTLIST file (ARABIC) allows a table of glyphs
to be specified.
.P 0
Details of these new directives can be found in the "FRT User Guide",
Issue 3.7 or later, in the documentation for the MAPPING package.
.P 0
N.B. GKSHPGL2SHR does ^*not\* support these new facilities, and is
released purely because it shares some code with GKSPOSTSCRIPTSHR.
.END LIST 0

.LE; GKSMOTIFSHR.EXE and __TV of 4-May-1995
.LIST
.LE
These have been re-linked with new GKSMOTIFLIB, which includes some support
for 12-plane displays. This should not have any visible effect on the
PLOTTING package.
.END LIST 0

.LE;GKSMOTIFSHR.EXE,GKSPOSTSCRIPTSHR.EXE and __TV of 12-May-1995
.LIST
.LE
Fix a problem introduced in the versions of 6-April-1995, whereby
regions around PostScript text strings omitted the last character.
.LE
PS files now identified as produced by GKSPSLIB V2.4 12-May-1995.
.END LIST 0

.END LIST
