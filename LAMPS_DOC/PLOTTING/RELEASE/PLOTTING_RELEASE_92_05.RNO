.LEFT MARGIN  0;.RIGHT MARGIN 80;.PAGE SIZE    60,80
.KEEP

.!** title page
.FIGURE 14
.CENTRE ;^&Laser-Scan##Ltd.\& 
.BLANK
.CENTRE ;^&PLOTTING#package\&
.BLANK
.CENTRE ;^&Release#Notes\&

.FLAGS SUBSTITUTE
.FOOT
.NOFILL
Copyright (C) $$year Laser-Scan Ltd
Science Park, Milton Road, Cambridge, England CB4 4FY  tel: (0223) 420414

Document "PLOTTING Release"				Category "Release Notes"
Document Issue 3.6	Clarke Brunt			 3-Feb-1992
Document Issue 3.7	Ron Russell			10-Feb-1992
Document Issue 3.8	Clarke Brunt			18-Feb-1992
Document Issue 3.9	Ron Russell			 6-Mar-1992
Document Issue 3.10	Clarke Brunt			19-Mar-1992
Document Issue 3.11	Clarke Brunt			 7-Apr-1992
Document Issue 3.12	Steve Townrow			21-Apr-1992
Document Issue 4.0	Clarke Brunt			13-May-1992
Document Issue 4.1	Clarke Brunt			 1-Jun-1992
Document Issue 4.2	Clarke Brunt			 6-Jul-1992
.FILL
.END FOOT
.NOFLAGS SUBSTITUTE

.!* and the title to go at the top of each page
.TITLE PLOTTING Release notes
.PAGE
.HL 1 ^&CONTENT\&
This document describes recent changes to the Laser-Scan LAMPS software
package PLOTTING. This package provides output to hardcopy plotting
devices The main component of the package is the Fast Plotter Program
FPP which is made up of three or sometimes four parts. 
.LIST
.LE
A specific FPP main program for each type of plotter supported eg
FPPCAL5800.EXE for Calcomp 5800 series electrostatic plotters. 
.LE
A single FPP shared image containing the bulk of the application code
(FPPSHR.EXE).
.LE
Specific shared libraries for each type of plotter supported, called 
GKSxxxSHR.EXE, where xxx is the device type e.g. LP for Laserplot).
.LE
Devices bearing a family resemblance to a Calcomp pen plotter, usually
support a version of the CalComp Host Computer Basic Software (HCBS).
For these plotters,  a single GKSHCBSSHR.EXE is used which in turn calls
upon further shared images. These are named HCBSyyy.EXE where yyy is eg
CAL907 for plotters with Calcomp 907 controllers. 
.END LIST

Details of FPP functionality and commands can be found in HELP within
FPP, and in the latest edition of the FPP Reference Manual. 
.BR
Details of feature representation can be found in the "FRT User Guide"
in the documentation for the MAPPING package.

.P 0
This document is part of the LAMPS V4.0 release, which went into Alpha test in
May 1992. It covers changes to package PLOTTING since the previous LAMPS release
(V3.5) which went into Alpha test in September 1991.
At that time, the extant version of FPP was described as V3.1 of
1-August-1991.
See the release notes for the previous LAMPS release for information about
earlier changes. 

.P 0
The current version of FPP is now V3.2 of 27-April-1992.

.HL 1 ^&NEW#OR#CHANGED#FACILITIES\&
In the specified versions of the PLOTTING package programs, shared
libraries, or documentation, the following changes were made: 

.LIST
.DISPLAY ELEMENTS "(",LU,")"

.LE
3-Feb-1992 - Release Notes
.list
.le; These release notes were trimmed back to the last release.
.end list 0

.LE
3-Feb-1992 - GKSMOTIFSHR.EXE
.LIST
.LE; A patched version was issued which avoids a problem in
the SYS$LIBRARY:DECW$XLIBSHR.EXE supplied with DECWindows Motif V1.0. The
program would access violate while setting up the display window.
.END LIST 0

.LE
10-Feb-1992 - Documentation
.LIST
.LE; A new version of the User Guide was issued which includes
documentation for the FPPWILD program.
.END LIST 0

.LE
18-Feb-1992 - GKSVRSVGSSHR.EXE
.LIST
.LE; Includes a solution to a problem in the Versatec supplied VGS library,
whereby the output filename (logical name VEROUT) could not get shorter in
2nd and subsequent plots. The previous filename was not cleared out,
resulting in an invalid filename.
.END LIST 0

.LE
6-Mar-1992 - GKSAEGSHR, GKSBEN3000SHR, GKSBENOFF3000SHR, GKSCAL5800SHR,
GKSFERSHR, GKSGERBSHR, GKSHCBSSHR, GKSHPSHR, GKSKERNGP1SHR, GKSKONGSHR,
GKSLPSHR, GKSMOTIFSHR, GKSPI448SHR, GKSPOSTSCRIPTSHR, GKSPRIMSHR,
GKSTEK__ARGSSHR, GKSUISSHR, GKSVERSSHR, GKSVRSC2V1SHR, GKSVRSVGSSHR,
GKSWILDSHR, GKSXYNETICSSHR
.BL
FPPSHR, FPPHRD
.LIST
.LE;
Allow all these shared images and programs to take account of the
logical names LSL$FILL__POINTSMAX and LSL$FILL__CUTSMAX when drawing
software fill areas.
.BL
The logical name LSL$FILL__POINTSMAX allows the buffer size  to be set
to the required number. The default value is 8192 points, with the
minimum allowed being 100. Fill areas which exceed the limit for number
of points will result in areas not being filled, although they should
still be drawn in outline, albeit with some invisible lines visible.
.BL
Similarly the maximum number of times which a scan line may cross
the boundary of an area may be controlled by defining the logical name
LSL$FILL__CUTSMAX to be the required number. The default value is 100
intersections, with the minimum allowed being 10. Exceeding the limit
for intersections will result in messages 'FILL__SIDE - Too many
intersections found - ignored'.
.BL
Memory has to be allocated in proportion to these numbers, so
unnecessarily large values should be avoided. 
.END LIST 0

.LE
12-Mar-1992 - PRIM2RASTER
.LIST
.LE
PRIM2RASTER also takes into account logical names LSL$FILL__POINTSMAX and
LSL$FILL__CUTSMAX when drawing filled areas. If the logical names have been
used to increase the defaults while using FPPPRIM, then they will also
need to be set when running PRIM2RASTER. The use of the logical names is
described above.
.LE
FPPPRIM and PRIM2RASTER have been enhanced to allow lines to use different join
and cap styles. Previously lines always had round joins and square ends. The
use of the hardware field in the FRT is used to indicate what style of line
caps and joins are required is described below. This is an incompatible change
- the hardware field in the FRT was previously ignored. To produce the old
behaviour, it will be necessary to put 10 (round joins, butt caps) in the
hardware field of all FRT entries, and also in any overriding SCT entries.
Primitive IFF files produced with old versions of FPPPRIM may not be used with
the new PRIM2RASTER - a version number is now included in the IFF map header to
prevent this.
.END LIST 0
.LE
16-Mar-1992 - GKSMOTIFSHR, GKSPOSTSCRIPTSHR, GKSPRIMSHR, PRIM2RASTER
.LIST
.LE
FPPMOTIF, FPPPOSTSCRIPT, and FPPPRIM (+PRIM2RASTER) have been enhanced to allow
lines to use different join and cap styles. Previously MOTIF and POSTSCRIPT
used mitre joins and butt caps, while PRIM used round joins and butt caps. The
setting of the hardware field in the FRT is used to indicate what style of line
caps and joins are required. The CAP style is a number in the range 0-2. 0
means butt caps (square ends), 1 means round caps, and 2 means extended caps
(square but extended by half the line thickness. The JOIN style is also a
number in the range 0-2. 0 means mitre joins (the sides of the thick lines
extended to meet), 1 means round joins, and 3 means bevel joins (each segment
has a square end, but the missing triangle is filled in). Mitre joins are
changed to bevel if the resulting spike would be 'too long' - this is taken to
be when there is an acute corner in the line with an angle of less than about
11 degrees (POSTSCRIPT has a means of changing the angle at which this
happens). Closed line features will use the join style at the start/end point,
and will not have a cap at all. The FRT hardware field is built up as
10_*JOIN#_+#CAP, so for instance 21 would mean JOIN = 2 = extended, CAP = 1 =
round. If omitted, the hardware field defaults to 0, meaning mitre joins and
butt caps. Remember that the hardware field in the SCT entry (if present) will
override that in the FRT. It is expected that these hardware values, and the
default, will also apply to other output devices which support this facility in
the future. This is an incompatible change - the hardware field in the FRT was
previously ignored. If you were using an FRT with hardware values in it, then
to produce the old behaviour, it will be necessary to omit them, or put 0 for
MOTIF and POSTSCRIPT, 10 for PRIM in all FRT entries, and also in any
overriding SCT entries.
.END LIST 0

.LE
19-Mar-1992 - GKSPOSTSCRIPTSHR
.LIST
.LE
POSTSCRIPT plotting now allows drawing in colour 0. Note however that the
background of the plot is left blank - it is not filled with colour 0.
Note also that FPP and LITES2 do not allow IFF features to be drawn in colour
0 (it is converted to 1) - only annotations may be drawn in colour 0, by
setting ANNOTATION COLOUR.
.END LIST 0

.LE
7-Apr-1992 - GKSBEN3000SHR, GKSBENOFF3000SHR, GKSCAL5800SHR, GKSGERBSHR,
GKSHCBSSHR, GKSHPSHR, GKSKERNGP1SHR, GKSKONGSHR, GKSLPSHR, GKSMOTIFSHR,
GKSPI448SHR, GKSPOSTSCRIPTSHR, GKSPRIMSHR, GKSSIG6000SHR, GKSTEK__ARGSSHR,
GKSUISSHR, GKSVERSSHR, GKSVRSC2V1SHR, GKSVRSVGSSHR, GKSWILDSHR, GKSXYNETICSSHR
.LIST
.LE
Further to the changes above, these plotting shareable images have been
amended so that filled areas may have more than 32767 points.
.END LIST 0


.LE
21-Apr-1992 - FPPSHR, FPPBEN3000, FPPBENOFF3000, FPPCAL5800, FPPPI448,
FPPVRSC2V1, FPPVRSVGS
.LIST
.LE
FPP will now perform prioritised line drawing by drawing the feature
representation parts defined in 'PRIO' entries of an FRT in order of their
priority. This is now the default action but can be disabled using the
DISABLE SORT command.
The PAUSE commands, PAUSE LAYER and PAUSE FEATURE are affected by this.
PAUSE LAYER no longer works when prioritised drawing is used, while
PAUSE FEATURE will pause after the
specified number of feature 'parts', not whole features.

.LE
A new command SEPARATOR ESCAPE has been added, thus:
.P 0; SEPARATOR ESCAPE escid
.BR
Used to set up an ESCAPE function (see the ESCAPE command) which is performed
automatically between each level of different priority when prioritised
drawing is used. It is intended to ensure that devices which normally plot
in a transparent manner draw each priority level in a new opaque layer.
The command should not normally be necessary since a default value of 1
is used on the devices for which this is relevant (CAL5800, VRSVGS, BEN3000,
PI448).

.LE
A new command ENABLE SORT has been added:
.P 0; ENABLE SORT
.BR
Draw features using their multiple prioritised representation held in the FRT.
This will involve a pre-pass of the IFF file in order to build up a list in
memory of feature representation parts to be drawn. The list is then sorted
by priority and each part output in turn.
.BR
.LE
Opaque overlays are used be default when prioritised drawing on electrostatic
plotters. (See the SEPARATOR ESCAPE command). Hence the electrostatic FPPxxx
driver images have been modified to set this up.
.LE
The PLOTTING reference manual has been modified to reflect the changes.
.END LIST 0

.LE
29-Apr-1992 - Plotters User Guide
.LIST
.LE
The guide has been changed where required to mention the use of logical names
LSL$FILL__POINTSMAX and LSL$FILL__CUTSMAX to increase the limits for area
fill.
.END LIST 0

.LE
29-Apr-1992 - GKSMOTIFSHR
.LIST
.LE
X-Windows (hardware) area filling is now used by default for solid filled
areas, switching to close hatching (as used previously) if the number of
points for X-Windows (usually around 4092) is exceeded. Previously, logical
name LSL$DECW__HW__FILL had to be defined to enable hardware fill. Now, this
logical name must be defined as 0 to disable hardware fill if required.
Hardware fill should be faster than the close hatching for most areas.
.END LIST 0

.LE
8-May-1992 - PRIM2RASTER
.LIST
.LE
Line join style 2 (bevel), and style 1 (miter) when bevelled to avoid it
being too pointed, have been corrected.
.END LIST 0

.LE
13-May-1992 - GKSPOSTSCRIPTSHR
.LIST
.LE
POSTSCRIPT plotting now has an option to draw raster images in colour, rather
than in grey scale. By default, grey scale is still used, but if logical name
LSL$PS__COLORIMAGE (note the spelling) is defined as 1, and the output is sent
to a PostScript interpreter which supports the 'colorimage' operator, then
'colorimage' is used in place of the 'image' operator. If the logical name is
not defined, or is defined as 0, then 'image' will be used, and the output will
still be greyscale. If a PostScript file has been produced in greyscale, and it
is desired to plot it in colour, then either edit the file, or prepend another
file which defines 'USECOLOR' as 'true' using the sequence of PostScript
"_/USECOLOR true def". Note the the above applies only to raster images -
vector data will always be drawn in colour if plotted on suitable hardware.
.END LIST 0

.LE
1-Jun-1992 - GKSCAL5800SHR
.LIST
.LE
FPPCAL5800 has been enhanced to allow thicker lines and to use different join
and cap styles. Previously lines used the Calcomp's hardware thick lines, which
could only be up to 16 'nibs' wide (approx 1mm on a 400 d.p.i_. plotter, and
always had ends which were squared off parallel to the sides of the paper. By
default, the new version still uses these for lines up to 16 'nibs', but for
thicker lines switches to software thick lines (using area fill). Logical name
LSL$CALCOMP__HWTHK may be set to be an integer, denoting the maximum width in
nibs for which hardware lines will be used, thus 0 always uses software lines,
while a large number will always use hardware lines. The default is 16.
.P 0
For software thick lines, the setting of the hardware field in the FRT is used
to indicate what style of line caps and joins are required. The CAP style is a
number in the range 0-2. 0 means butt caps (square ends), 1 means round caps,
and 2 means extended caps (square but extended by half the line thickness. The
JOIN style is also a number in the range 0-2. 0 means mitre joins (the sides of
the thick lines extended to meet), 1 means round joins, and 3 means bevel joins
(each segment has a square end, but the missing triangle is filled in). Mitre
joins are changed to bevel if the resulting spike would be 'too long' - this is
taken to be when there is an acute corner in the line with an angle of less
than about 11 degrees. Closed line features will use the join style at the
start/end point, and will not have a cap at all. The FRT hardware field is
built up as 10_*JOIN#_+#CAP, so for instance 21 would mean JOIN = 2 = extended,
CAP = 1 = round. If omitted, the hardware field defaults to 0, meaning mitre
joins and butt caps. Remember that the hardware field in the SCT entry (if
present) will override that in the FRT.
.P 0
Software thick lines use Calcomp area fill to fill each line segment. A side
effect of this is that the area colour is used. The colours of hardware thick
lines are not as versatile, and sometimes have difficulty in producing the same
colour as for areas of the same colour index. This has sometimes led to
unexpected colour changes in solid area fill when the maximum number of points
for hardware fill is reached, and close hatching is used instead. Using
software thick lines throughout (LSL$CALCOMP__HWTHK set to 0) may well avoid
this problem. Very thin lines may produce unexpected effects if the area
colours are used, such as if a 1 nib horizontal or vertical line completely
misses the toned dots in the area pattern. To avoid this, either give all lines
a sensible thickness in the FRT (rather than 0), or define LSL$CALCOMP__HWTHK
to a number such as 3, so that the thinnest lines still use hardware lines.
.P 0
Note that the use of software thick lines is likely to increase the plot file
size by a factor of around 4, and so it should only be used if high quality
thick lines are essential.
.LE
A new logical name LSL$CALCOMP__DPI is provided to specify the resolution of
the plotter in dots per inch. The logical name should be defined to be a real
value, the default being 400. This is used to select the correct thickness for
hardware thick lines, which is specified in terms of the resolution.
.END LIST 0

.LE
6-Jul-1992 - GKSCAL5800SHR
.LIST
.LE
This version corrects a problem in the release of 1-Jun-1992 which prevented
raster images from being plotted.
.END LIST 0

.END LIST
