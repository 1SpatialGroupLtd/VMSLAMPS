^*--------------------------------------------------------------------------------\*
.BR;^^^*FILE LEVEL ENTRIES\*
.BLANK
^*--------------------------------------------------------------------------------\*
.HL 2 ^^^*General\*
.INDEX File level entries
.LEFT MARGIN +10
.INDEX Coordinate range
.INDEX HI entry
.P 0;The file level represents the highest division of data within the
hierarchic IFF structure. All data within an IFF file share a common
range entry which describes the coordinate minima and maxima in X and Y.
The data in the file are also considered to share a common production history.
The production history is detailed in the files HI (HIstory) entry. It is
important for the user to recognise the significance of concatenating IFF
files. The previous history of an IFF file is lost when it is merged with
others and the concatenated file is considered to have been "created" and to
have no previous history. 

.BLANK
.TP 6
.LEFT MARGIN -10
^*--------------------------------------------------------------------------------\*
.HEADER LEVEL 2 ^^^*File level entry order\*
.INDEX File level entry order
.LEFT MARGIN +10
.P 0;The order in which IFF entries occur at file level is given below.
An entry printed in ^*bold\* type is obligatory.
.BLANK
.NOFILL
        ^*RA - coordinate RAnge information\*
        HI - HIstory of IFF file
        SH - Sector Header (see section describing IFF
             Junction Structure)
        ^*EJ - End Job (data) marker\*
.LEFT MARGIN -10

.PAGE
.!******************************************************************************
^*--------------------------------------------------------------------------------\*

.HL 2 ^^^*EJ\*########End of Job (data) marker
.INDEX IFF entries> EJ
.INDEX EJ entry
.NO FILL
^*--------------------------------------------------------------------------------\*
.NO JUSTIFY
^*FORMAT\*

.LEFT MARGIN +10
EJ
.P 0;The EJ entry does not have any contents.

.LEFT MARGIN -10
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*DESCRIPTION\*
.LEFT MARGIN +10
.FILL
.JUSTIFY

.P0;The EJ entry should always be the last entry in the IFF file. It signifies
the end of data, and is used to provide a tidy end point (rather than relying
on detecting the end of the file when a program cannot read any more data from
the file). 
.LEFT MARGIN -10
.P0
^*--------------------------------------------------------------------------------\*
^*NOTES\*
.LEFT MARGIN +10
.P 0;Problems may arise if the EJ entry is missing from an IFF file. Many
IFF manipulation programs will terminate execution if the end of file is
detected before an EJ entry is encountered. 

.P 0;The problem of a missing EJ entry may be overcome by using the IMP utility
IMEND. Unlike other IFF manipulation programs, it is quite normal for IMEND to
produce error messages when it reaches the end of sound data and attempts to
read corrupted data. IMEND will truncate the IFF file after the last complete
feature and will terminate the file with an EO, EM, EJ sequence of IFF entries.
.LEFT MARGIN -10
.P0
^*--------------------------------------------------------------------------------\*
.PAGE
.!******************************************************************************
^*--------------------------------------------------------------------------------\*
.HL 2 ^^^*HI\*########HIstory
.INDEX IFF entries> HI
.INDEX HI entry
.NO FILL
^*--------------------------------------------------------------------------------\*
.NO JUSTIFY
^*FORMAT\*

HI
'date'   'time'  'username'   'program'  'function'  'elapsed'  'cpu'  'status'
  .        .         .            .          .           .        .       .
  .        .         .            .          .           .        .       .
  .        .         .            .          .           .        .       .

^*Example\*
.BLANK
.NOFILL
Date        Time  Username     Program   Function     Elapsed  CPU      STATUS
23-JUL-1985 12:22 CLARKE       TWOTVES   Output       01:31:34 00:09:05 00000001

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*DESCRIPTION\*
.LEFT MARGIN +10
.FILL
.JUSTIFY
.P 0;IFF files created after January 1987 provide an optional mechanism for
automatically recording statistics each time they are updated, so
that it may be determined which users and programs contributed to the final
state of the file. The statistics are stored in an HI (HIstory) entry within
the IFF file. This entry is of fixed length (4001 words). The first word
contains a count of the number of filled 'history records', and is followed by
space for 100 80-byte ASCII history records.

.LEFT MARGIN -10
.P0
^*--------------------------------------------------------------------------------\*
^*NOTES\*
.LEFT MARGIN +10
.FILL
.P 0;In order that the IFF history mechanism can work, a blank history entry
must be inserted in files created from scratch. Clearly it would cause
compatibility problems with customer databases which contain historic IFF files
if HI entries were created in output files by default. To overcome this problem
an HI entry is only written to the output file if (one of) the input files
contained an HI entry.  The IMP module ISTART creates a template IFF file
containing an HI entry. 

.P 0; In addition to writing timing statistics into the HI entry, many IFF
manipulation programs also set the 'function' field of the HI and also set the
final status field to indicate the success (or failure!) of the run. 

.INDEX IINFO
.INDEX IMP> IINFO
.P 0; IMP provides a module (IINFO) which may be used to analyse the contents
of an IFF file's HI entry and optionally produce timing statistics to indicate
total elapsed and CPU time spent during the processing of the file. 

.INDEX IFFLIB
.INDEX IMP> IMEND
.INDEX IMEND
.INDEX VMS DUMP
.P 0; When an IFF file is opened for write, a 'prototype' history record, with
blank elapsed and CPU fields, and a status of 0, is written to the HI entry and
also to the forepart of the file. In the event that the file is never properly
closed, this record can be examined (possibly using the VMS DUMP utility) to
determine which operation had failed. It will not be possible to open such a 
file with any IFF library (IFFLIB) based utility (such as those of IMP) until
the IMP module IMEND has been used. 
.LEFT MARGIN -10
.P0
^*--------------------------------------------------------------------------------\*
.PAGE
.!******************************************************************************
^*--------------------------------------------------------------------------------\*
.HL 2 ^^^*RA\*########RAnge
.INDEX IFF entries> RA
.INDEX RA entry
.NO FILL
^*--------------------------------------------------------------------------------\*
.NO JUSTIFY
^*FORMAT\*

.LEFT MARGIN +10
RA X-min X-max Y-min Y-max

where:
   X-min##is the minimum X-coordinate value (real_*4) within the file
   X-max##is the maximum X-coordinate value (real_*4) within the file
   Y-min##is the minimum Y-coordinate value (real_*4) within the file
   Y-max##is the maximum Y-coordinate value (real_*4) within the file

.I -10;^*Example\*
RA  246.890 560.89 348.000 1000.000

.LEFT MARGIN -10
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*DESCRIPTION\*
.LEFT MARGIN +10
.FILL
.JUSTIFY
.P0;The RA entry records the maximum extent of the data in the IFF file.
It is used by plot and display programs to work out whether to clip the
file, and what scale it can be displayed at.

.INDEX RA entry> position in file
.P 0;The range entry is always the first entry in the IFF file.

.LEFT MARGIN -10
.BLANK
^*--------------------------------------------------------------------------------\*
^*NOTES\*
.LEFT MARGIN +10
.INDEX IMP>IPATCH
.INDEX IPATCH
.P 0;The range entry will always be maintained by Laser-Scan IFF manipulation
programs. The user should only need to alter the range if digitising
using LITES2 results in data straying more than 10% outside the
existing CP (Control Point) values. The range values may be altered using
IPATCH.

.P 0;The range entry values ^*do not reflect any origin offset\* used in the
IFF file. The range values only reflect the coordinate range of data held in ST
(coordinate STring) and ZS (3-dimensional string) entries. 

.INDEX RA entry> coordinates used
.P 0;Note that only the recorded coordinates are used, so that the RA entry
will not take into account the path of circle arcs or interpolated curves.

.P 0;The contents of CP (Control Point) entries are not normally used in any
calculation of data range.

.P 0;The coordinate values of registration mark and grid features contained in
layer 0 will be reflected in the range. 

.LEFT MARGIN -10
.BLANK
^*--------------------------------------------------------------------------------\*
