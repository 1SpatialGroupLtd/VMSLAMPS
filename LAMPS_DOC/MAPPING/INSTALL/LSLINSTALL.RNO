.!* set up the Qume page format
.LEFT MARGIN  0;.RIGHT MARGIN 80;.PAGE SIZE    60,80
.KEEP
.FLAGS CAPITAL
.FLAGS BOLD

.!* standard title page
.FIGURE 12

.CENTRE ;^*Laser-Scan Ltd\*
.BL2
.CENTRE;^*LSL LAMPS Software Installation Guide\*
.BL
.CENTRE; ^*Issue 2.0 -  03-Aug-1990\*

.FLAGS SUBSTITUTE
.FOOT
.NOFILL
Copyright (C) $$year Laser-Scan Ltd
Science Park, Milton Road, Cambridge, England CB4 4FY  tel: (0223) 420414

Document "LSL LAMPS Software Installation Guide"

Document Issue 1.0	Paul Hardy		18-Mar-1987
Document Issue 1.4	Paul Hardy		04-Aug-1988
Document Issue 2.0	Paul Hardy		03-Aug-1990
.FILL
.END FOOT
.NOFLAGS SUBSTITUTE

.!* enter a title for the tops of pages
.TITLE ^*LSL LAMPS Installation Guide\*

.!* and now for the first page
.PAGE
.HL 1 ^^^*Introduction\*
.P 0
Laser-Scan LAMPS is a combination of hardware and software components which
together allow use of modern high performance minicomputers and workstations
(DEC VAX series) for digital cartography, automated map production, and GIS
(Geographical Information System) queries.
.P 0
This guide is intended to be of use to personnel carrying out an initial LAMPS
installation on a new customer system. Note that this will usually be LSL staff
with knowledge of LAMPS software, and hence this manual makes considerable
assumptions about prerequisite knowledge. In particular, the installer is
expected to be familiar with the "LAMPS Software Environment Guide". It is also
assumed that the installer is already familiar with general use of a DEC VAX
series computer and of the VMS operating system, with some background in VMS
system management.
.P 0
LSL software is divided into packages, and the main ones involved in a 
basic LAMPS system will be:
.NOFILL

	LSLSYSTEM	LSL software support package
	MAPPING		Mapping kernel support package
	IMP		IFF Map Processing package
	LITES2		Cartographic editor package
	PLOTTING	Map plotting package
.FILL
.P 0
Other optional facilities might include:
.NOFILL

	VTRAK		Vector automatic digitising
	METROPOLIS	Land Information System
	HORIZON		Environmental GIS
	STRUCTURE	Topological vector structuring
	POLYGONS	Polygon formation and manipulation
	MATRIX		Matrix (raster) data manipulation
	DTMCREATE	Terrain model creation
	TVES		Terrain Visualisation and exploitation
.FILL

.P 0
This manual has a section describing prerequisites for installation, and
then a section describing in some detail how to carry out an installation.
.P 0
Appendix A covers points to consider if installing LAMPS on a VAXcluster
or LAVc, where several nodes share a common filestore.
.P 0
Note that an automated procedure called LSLINSTALL.COM is available to carry
out the majority of the steps involved in a LAMPS installation. An example of
use of LSLINSTALL on a standalone VAXstation 3100 is supplied as Appendix B to
this document.

.PAGE
.HL 1 ^^^*Installation Prerequisites\*
.P 0
To start installation of LAMPS software on an existing VAX or MicroVAX
which already has a functioning VMS operating system, the installer
needs access to certain resources. The installation procedure in section 3
guides the installer in ensuring the availability of these resources, but
they are listed here as an overview.

.TP 10
.HL 2 ^^^*Prerequisite Usernames\*
.P
All LAMPS users must be in the same UIC group, both to allow file sharing and
for process synchronisation using shared global sections and common event flags.
The UIC group is normally 100, but can be changed if 100 is already in use.
The following usernames are always needed. See the automated LSLINSTALL
procedure below for details.
.NOFILL

[100,2]	   LSLSOFT	is the owner of all LAMPS programs.
[100,100]  LSLUSER	is a template LAMPS user with ordinary resource quotas
[100,101]  LSLBIG	is a template user with enlarged quotas for eg DTMCREATE

The following usernames are created as needed. 

[100,1]	   VTRAK	is the captive VTRAK user.
[100,3]	   LSLENG 	is the owner of all LSL hardware diagnostics.
[100,5]	   METROPOLIS	is the captive METROPOLIS user.
[100,6]	   HORIZON 	is the captive HORIZON user.
.FILL

.TP 10
.HL 2 ^^^*Prerequisite Directories\*
.P
Five root level directories will be created, owned by [LSLSOFT] with 
corresponding rooted logical names vis:
.NOFILL

LSL$PUBLIC__ROOT: -> [LSLPUBLIC...]	! LSL published software (read-only)
LSL$SITE__ROOT: ->   [LSLSITE...]	! LSL site-specific software 
LSL$USER__ROOT: ->   [LSLUSER...]	! LSL users home directories
LSL$DATA__ROOT: ->   [LSLDATA...]	! LSL data directories
LSL$LOCAL__ROOT: ->  [LSLLOCAL...]	! LSL workspace directories
.FILL
.P
Conventionally, [LSLPUBLIC], [LSLSITE] and [LSLUSER] which contain mainly
static data are often held on the system disk, while [LSLDATA] which contains
volatile data files is often on a different disk to equalise disk accesses.
[LSLLOCAL] contains temporary workspace files and care should be taken on a
VAXcluster satellite that this logical name is redirected to point to a disk
which is local to that node. Other than this, the environment is uniform across
a cluster.
.P
The LSLINSTALL installation procedure will automatically create these
directories and their requisite subdirectories, and set up logical names and
search lists to allow LAMPS software to access directories without knowing
their exact location.

.TP 10
.HL 2 ^^^*Prerequisite Resources\*
.P
The basic LAMPS software packages need no elevated quotas or privileges beyond
what is normally found on most VAXes. It is however important for efficient
operation of LITES2, that per-process working sets are not overly constrained. 
LSL recommend a working set per process (WSQUOTA) of at least 1000 pages, with
2000 pages preferred if large or complex maps are being edited. This can be
reduced slightly if there will be multiple simultaneous users of LITES2 on one
node, and the image is installed shared. WSEXTENT should be set (eg 3 times)
larger than WSQUOTA to allow working set expansion on lightly loaded systems.
The SYSGEN parameter WSMAX must  be larger than the largest WSEXTENT in the UAF
(limited of course by physical memory size). 
.P
Note that some LAMPS packages require extended virtual address space to allow
them to handle matrix or structured data. These include the terrain matrix
manipulation packages MATRIX, DTMCREATE, and TVES, and also the STRUCTURE and
POLYGONS packages. All these packages require that the SYSGEN parameter
VIRTUALPAGECNT be set to at least 36000 pages (18MB), and corresponding value
of PGFLQUOTA be set for each user in the UAF.  Working sets should therefore
be correspondingly bigger (eg 3000 pages WSQUOTA). 
.P
The VTRAK package has considerably larger requirements for virtual and physical
address space in which to hold its large raster datasets. 
Refer to the VTRAK documentation for more information.
.P
The METROPOLIS and HORIZON packages use relational databases and raster
backdrop datasets, and hence also have requirements for enhanced resources.
Refer to their documentation for more information.

.PAGE
.HL 1 ^^^*Installation Procedure\*
.P 0
A command procedure LSLINSTALL.COM is provided as part of the basic
LSL system support package LSLSYSTEM to carry out the main steps in LAMPS
software installation. The procedure has built in help. As however it is
part of the software it is intended to install, some degree of manual
bootstrapping is of course required. 
.P 0
The suggested procedure for installation is as follows, in four parts, three as
the system manager, and one as the LSLSOFT user.

.TP 10
.HL 2 ^^^*First Phase Installation\*
This phase is reading of the LSLINSTALL procedure from the LSL distribution
media (usually TK50 or ½" magtape). In the following examples, this is assumed
to be a TK50 tape to be read from device MUA0:. If you are using other media,
use the appropriate device name (eg MTA1:) and appropriate media load
instructions.
.LIST
.LE
Log on as system manager (SYSTEM).
.LE
Ensure that your default directory is SYS$MANAGER, by giving the command:
.BL
	$ SET DEFAULT SYS$MANAGER
.LE
Insert the TK50 tape into the drive, and ensure that it is online.
.LE
Determine the device name of the TK50 drive (usually MUA0:, or MKA500 if a
SCSI device). All known devices beginning with M (other than MB for MailBox
devices) are magtape drives of some type. Show available devices starting with
"M", by giving the command:
.BL
	$ SHOW DEVICE M
.BL
Choose the appropriate device name from the list. This is taken as MUA0: in
the following examples.
.LE
Mount the tape using the command:
.BL
	$ MOUNT  MUA0:/FOREIGN/NOASSIST
.LE
Read the LSLINSTALL procedure from the first BACKUP saveset on the tape using
the command:
.BL
	$ BACKUP/LOG  MUA0:/REWIND/SELECT=LSLINSTALL.COM  SYS$MANAGER:
.LE
Dismount the tape using the command:
.BL
	$ DISMOUNT  MUA0:/NOUNLOAD
.END LIST

.PAGE
.HL 2 ^^^*Second Phase Installation\*
The next phase involves invoking the LSLINSTALL procedure, which carries out
the following stages:
.NOFILL

PREPARE		- give introduction, and check resources.
USERNAMES	- create standard usernames.
ROOTS		- create root directories and set up rooted logical names.
LOAD		- load and install software issue BACKUP savesets.
DIRECTORIES	- create standard site-dependent directories.
FILES		- copy standard startup files to destinations.
SEARCHLISTS	- setup search lists LSL$EXE:, LSL$COM: etc.
OPTIONS		- set up environment for optional software.
TUNE		- recommend sensible SYSGEN VMS tuning parameters.
.FILL
.LIST
.LE
Remain logged on as user SYSTEM in the same directory.
.LE
Execute the LSLINSTALL procedure by:
.BL
	$ @LSLINSTALL
.LE
Give command HELP to get the help instructions for the procedure.
.BL
	LSLINSTALL> HELP
.LE
Give command INSTALL to start the installation.
.BL
	LSLINSTALL> INSTALL
.LE
The first stage is the PREPARE stage which gives information about the
installation and checks for adequate resources. This will require you to press
RETURN to continue after each screen of information, and will request a Y/N
confirmation that it should go ahead with the installation.
.LE
The next stage is the USERNAMES stage which asks for confirmation, then
creates the standard usernames.
.LE
The next stage is the ROOTS stage which asks for confirmation before creating
the root level directories. It will list available disks, and offer the system
disk (SYS$SYSDEVICE:) as a default when  it inquires on which disk(s) the five
root level directories are to be created. It will then write a startup
definitions file (LSDEFNS__ROOTS.COM) to set up rooted logical names to point
to these directories.
.LE
The next stage is the LOAD stage which asks for confirmation before reading the
distribution savesets from tape. It will list available tape drives, and offer
one as a default when inquiring the device to be used. It also asks for BACKUP
read options (eg /VERIFY, /LOG). 
.P 0
It will ask if you want to select only part of the kit (answer N).
It will then read each save set from the tape to its correct
place on the public tree (LSL$PUBLIC__ROOT:).
.LE
The next stage is the DIRECTORIES stage which asks for confirmation before
creating the required site-specific, data, and user directories.
.LE
The next stage is the FILES stage which asks for confirmation before
copying the template LSL system startup files to SYS$MANAGER:.
.P 0
It will also suggest and ask for an LSL-supplied customer name to be used for
software licence purposes, and write a startup definitions file
(LSDEFNS__SITE.COM) to set up a logical name to this.
.LE
The next stage is the SEARCHLIST stage which asks for confirmation before
generating a command file containing logical name definitions to set up the LSL
search lists for programs, command files, help files, libraries, lookup files,
etc.
.P 0
This option will scan the newly created public tree, and it creates a file
called LSDEFNS__SEARCHLISTS.COM in SYS$MANAGER. This will then be called
from LSDEFNS.COM, which is called from LSSTARTUP.COM, which will be called
from the main SYSTARTUP__V5.COM startup procedure.
.LE
The next stage is the OPTIONS stage which asks for confirmation before creating
any usernames and directories needed by various optional packages. It also asks
if you want a privileged captive operator user to carry out VMS operations
functions.
.LE
The final stage is the TUNE stage which asks for confirmation before checking
VMS SYSGEN parameters, and suggests any changes needed. This will write a file
SYS$SYSTEM:LSLINSTALL__MODPARAMS.DAT with the suggested lines to add to the
MODPARAMS.DAT files.
.LE
LSLINSTALL will exit automatically. If there were no errors to correct, proceed
to the next phase.
.END LIST

.PAGE
.HL 2 ^^^*Third Phase Installation\*
This phase requires manual intervention to adapt the supplied template startup
procedures to suit the site requirements, and to carry out VMS system tuning.
.LIST
.LE
As noted above, some LAMPS packages require extended virtual address space.
If the TUNE stage of LSLINSTALL recommended changes to SYSGEN parameters,
you should do that now.
.P 0
You should note the values recommended above and consider whether they are
indeed suitable for your hardware and software configuration. When satisfied,
edit the values into the MODPARAMS.DAT file in SYS$SYSTEM: using the file
LSLINSTALL__MODPARAMS.DAT as guidelines, then run the DEC-supplied AUTOGEN
procedure, then reboot the system. 
.P 0
Look up AUTOGEN in the VMS System Management manuals if you are not familiar
with changing SYSGEN parameters using AUTOGEN and the MODPARAMS.DAT file. 
.P 0
A typical AUTOGEN command line might be:
.BL
	$ @SYS$UPDATE:AUTOGEN SAVPARAMS SETPARAMS
.P 0
Read the messages from AUTOGEN carefully for warnings of parameters being too
high. If these occur, then adjust MODPARAMS.DAT and try again.
.P 0
Then reboot the system to get the new parameter values in use.
.LE
Next, if this is a new VMS installation, adapt the DEC-supplied template VMS
startup file SYSTARTUP__V5.COM to suit your site requirements if this has not
already been done. Refer to the VMS Installation Guide in the DEC VMS
documentation for more information on SYSTARTUP__V5. This file contains command
which start various optional facilities in VMS such as DECNET, batch and print
queues. In particular, you should ensure:
.LIST
.DISPLAY ELEMENTS '(',ll,')'
.LE
that the queue manager is started.
.LE
that a SYS$BATCH batch queue is started.
.LE
if suitable hardware is available, that a SYS$PRINT printer queue is started. 
.LE
if the node is on a network, that DECNET is started (preferably directly,
rather than using the batch queue as that may cause synchronisation problems)
.LE
if there are Ethernet terminal servers in the configuration, that the file 
SYS$MANAGER:LTLOAD.COM is invoked to start the LAT protocol and load the LT
device driver. Note that unlike the previous items which just involve
uncommenting existing lines, this requires adding a line just before the 
final EXIT command:
.BL
	$ @SYS$MANAGER:LTLOAD	! Set up LAT for terminal servers
.END LIST
Then reboot the system to try the new startup sequence.
.LE
If you did reboot the system to get SYSGEN parameters correct, then you need
to login again as SYSTEM, SET DEFAULT to SYS$MANAGER:, and invoke the LSL
logical name definitions file by giving the command:
.BL
	$ @LSDEFNS
.LE
The next few steps involve adapting the supplied template startup
procedures to suit the site requirements, by editing them.
For some of the files you will just uncomment some lines. In others, you
may have to modify values or insert lines. There are usually not many
changes needed, as the templates are ready configured for a typical standalone
LAMPS system.
.LE
Edit the terminal characteristics setup file LSTERMS.COM to define
logical names and terminal characteristics for any serial line devices
to be used by LAMPS software. This will include VDUs, graphics terminals,
digitising tables, and plotters which are on direct TTcu: or TXcu: devices.
.P 0
See the comments in the LSTERMS.COM file for more information on the logical
names required. Note however, that it is logical name definitions set up at
this stage which are read by the LITES2 login-time definitions file
LITES2INI.COM, to associated digitising tables with screens, and to set up
special decode routines for non-standard tables.
.LE
Edit the port characteristics setup file LSPORTS.COM to define ports, logical
names and terminal characteristics for any serial line devices on ethernet
terminal server lines to be used by LAMPS software. This will include slave 
VDUs, graphics terminals, digitising tables, and plotters which are on  LTAn:
devices. The comments in the previous entry about logical names in LSTERMS.COM
also apply here for any tables and GDUs on LTAn: devices.
.LE
If any LAMPS software is to be installed shared or with elevated privilege,
edit the file LSIMAGES.COM appropriately. Note that it is only worth installing
programs such as LITES2 if they are going to be activated simultaneously by
more than one user on the same node.
.LE
If any LAMPS detached processes are needed on the system (eg a "table monitor"
for smooth tracking from a streaming digitising table), then edit
LSPROCESSES.COM appropriately. Note that a table monitor process is not needed
for the common case of point-mode digitising using LITES2 via direct reads from
the digitising table. It is needed however for the optional TVES utilities.
.LE
If this is a turnkey system where Laser-Scan are setting up
batch and print queues, then files called LSQUEUES.COM and LSPRINTERS.COM
can be edited which contains commented out example queues. Note however, that
before editing these files you should check that the queue facilities in
SYSTARTUP__V5 have been uncommented so as to start the queue manager and the
default print and batch queues, and that they alone are not adequate for your
requirements.
.LE
Edit the LAMPS central login command definitions file LSLOGIN.COM to ensure
that it calls the required package initialisation files, taking care because
some such initialisation command files currently take optional arguments.
Note that there is a particular section of LSLOGIN.COM marked by comments for
such changes.
.LE
Execute the LSSTARTUP procedure by giving the command
.BL
	$ @LSSTARTUP 
.BL
which will carry out the environment initialisation, such as 
defining the LSL standard logical names for this site. 
.LE
Check that the startup executed normally and that the messages from LSSTARTUP
were printed showing execution of the LAMPS startup procedures.
If there were any errors, then re-edit the appropriate file and repeat.
.LE
If this is a turnkey LAMPS system being set up by LSL, then inspect the
optional LSL VMS startup file called LSSYSTARTUP.COM, to see if it is useful
for your installation. This file sets up system announcements and  VMS logical
names, which are not strictly necessary but may be of benefit as templates for
your system.
.LE
Insert the LSL startup procedure(s) into the system startup procedure by
editing SYSTARTUP__V5.COM, and adding one or two lines just before the end or
final EXIT command, either:
.BL
	$ @SYS$MANAGER:LSSTARTUP	! Set up LSL LAMPS environment
.BL
or if you choose to implement the LSSYSTARTUP procedure, then:
.BL
	$ @SYS$MANAGER:LSSYSTARTUP	! Set up LSL VMS environment
.BR
	$ @SYS$MANAGER:LSSTARTUP	! Set up LSL LAMPS environment
.LE
At this point a decision should be taken as to the method of invoking the
LAMPS central login command definitions file SYS$MANAGER:LSLOGIN.COM.
If LAMPS software is only to be used by some of the users of the system, then
a mechanism of explicitly invoking LSLOGIN.COM from each user's
LOGIN.COM file is preferred, and no further steps need be taken here.
If the LAMPS software is to be used by all the users of the system, then it is
preferable to ensure that LSLOGIN.COM
is invoked automatically at login time for
all users via the DEC-supplied central SYS$SYLOGIN mechanism.
In this case the existing file pointed at by the logical name SYS$SYLOGIN
(usually SYS$MANAGER:SYLOGIN.COM)
should be edited to include the line:
.BL
	$ @SYS$MANAGER:LSLOGIN	! invoke LAMPS login definitions
.BL
Note that the LSLOGIN.COM file is kept in SYS$MANAGER, rather than on LSL$COM
to avoid security loopholes caused by this file being in a writable directory
but executed by privileged users such as SYSTEM.
.LE
Carry out any special package-specific installation tasks as detailed in the
documentation for the particular software package. This particularly applies to
package VTRAK at present.
.LE
Unless it is very inconvenient to other users of the system (if any),
now shutdown the VMS system normally and reboot to cause the new startup code
to be executed. Otherwise logoff as SYSTEM.
.LE
Make a note for the System Manager to remember to run the AUTOGEN procedure
with FEEDBACK after a couple of days of work, and afterwards at monthly 
intervals, to tune the SYSGEN system parameters in the light of actual usage.
On a VAXcluster, this should be done regularly on all nodes.
See the VMS system management documentation for more information on AUTOGEN.
.LE
Make a note for the System Manager to do an archive as soon as possible
of the disk(s) which now have the LSL environment, and to set up a system of
regular security archives to protect the installation in case of hardware
failure.
.END LIST

.PAGE
.HL 2 ^^^*Fourth Phase Installation\*
This phase requires no special privileges, and consists largely of tailoring the
LAMPS environment to customer requirements, and verification of correct
installation.
.LIST
.LE
Log on as the LSL software administrator (LSLSOFT), with password LSLSOFT. This
will then prompt you to set a new password, as the current one  is pre-expired.
You should note that you should in due course login as the other LSL usernames
(LSLUSER and LSLBIG) with password same as initial username, and set new
passwords for these accounts.
.LE
Now check the correct execution of the LAMPS startup and login procedures by
checking a program symbol, and listing the available programs eg:
.NOFILL

	$ SHOW SYMBOL ISTART
	$ DIR LSL$EXE:

.FILL
This should show that ISTART=="$LSL$EXE:ISTART" and should list the contents
a series of directories of the form LSL$PUBLIC__ROOT:[IMP.EXE], [LITES2.EXE],
[MAPPING.EXE] etc.
Note that LSL$EXE has as its first translation LSL$SITE__ROOT:[LSL.EXE],
followed by all the LSL$PUBLIC__ROOT .EXE directories. However, as the
LSL$SITE__ROOT directory is usually empty at this point it will not show up on
a DIRECTORY command. 
.LE
Copy appropriate Laser-Scan supplied example FRT, SRI and TRI files from
LSL$PUBLIC__ROOT:[MAPPING.EXAMPLES.FRT] into LSL$FRT:, bearing in mind the
requirements of any tests to be performed. In particular, the Ordnance Survey
example files OS.FRT, OS.SRI, and OS.TRI are useful.
.LE
Copy appropriate Laser-Scan supplied example IFF map data files from
LSL$PUBLIC__ROOT:[MAPPING.EXAMPLES.IFF] into LSL$IF:, bearing in mind the
requirements of any tests to be performed. In particular, the Ordnance Survey
example file LITESDEMO.IFF (a 1:1250 plan) is a good simple example.
.LE
Copy appropriate LITES2 example initialisation, menu, and puck definitions
files from LSL$LITES2CMD: to LSL$LITES2CMD:,
which will put them in LSL$SITE__ROOT:[LITES2.CMD] where they can
be edited to suit local requirements. 
.P 0
Typical files to set up might include:
.LIST
.DISPLAY ELEMENTS '(',ll,')'
.LE
a terminal-independent initialisation file SITEINIT.LCM, (copied from
LSL$LITES2CMD:SITEINIT.LCM) containing any  definitions common to all workstations at
this site (such as whether text heights are in 1/10 mm, or in `points').
.LE
a terminal-dependent initialisation file for each workstation, containing
definitions particular to this workstation such as whether it has a mouse,
bitpad, table, etc. These files must be named 
according to the conventions implemented in LITES2INI.COM, and match the names
set up as LSL$WSn___* logical names in LSTERMS.COM and LSPORTS.COM eg:
.BL
.LM +5
.I -5
TTA3.LCM (copied from TTXX.LCM) for a serial line workstation eg Sigmex 6000
which is attached to serial port 3 of controller A of a standalone MicroVAX or
VAXstation.
.BL
.I -5
LSLM3A__TXA1.LCM (copied from TTXX.LCM) for a serial line workstation eg Sigmex
6000 which is attached to serial port 1 of controller A of a clustered 
MicroVAX or VAXstation with node name LSLM3A.
.BL
.I -5
LSLV3A__WTXX.LCM (copied from WTXX.LCM) for a clustered VWS workstation with
node name LSLV3A.
.BL
.I -5
LSLV3A__TWXX.LCM (copied from TWXX.LCM) for a clustered DECwindows/Motif
workstation with node name LSLV3A.
.BL
.I -5
LSLDSA__PORT__7.LCM (copied from LTXX.LCM) for a serial line workstation eg
Sigmex 6000 connected to port 7 of the terminal server called LSLDSA. 
.LM -5
.END LIST
Note also that there are further
example .LCM files in the directory LSL$PUBLIC__ROOT:[LITES2.EXAMPLES] which
may be of interest.
.LE
If necessary, copy package initialisation command files from LSL$COM: to
LSL$COM: which will put them in LSL$SITE__ROOT:[LSL.COM] where they can
be edited to suit local requirements. An example might be PLOTTINGINI.COM, to
set up the FPP DCL symbols to the correct plotter type.
.LE
If necessary copy customer-specific files from the distribution directories
to appropriate site directories. Eg there may be pre-prepared FRT files
distributed as LSL$PUBLIC__ROOT:[__custname.FRT] which should
be copied into LSL$FRT:
.LE
Logon as LSLUSER and exercise the installed software to show correct
functioning. 
.END LIST
Installation of LAMPS is then complete.

.APPENDIX ^^LAVc Considerations
On a Local Area VAXcluster (LAVC), there are multiple VAX, MicroVAX, and
VAXstation  processors sharing a common filestore. Hence the LAMPS environment
needs consideration in such matters as which files are common and which are CPU
specific.
.P
The following hints have been found useful, and are based on an example LAVC of
a MicroVAX boot node (MVA), a VAXstation 3100 (V3A), and a diskless
VAXstation 2000 (VSA). 
.LIST
.LE
As a general rule, all files should be on disks attached directly to the boot
node which acts as a fileserver. The exceptions are workspace
files specific to a particular node, which should be on a local disk of that
node.
.LE
There is always just one public tree (LSL$PUBLIC__ROOT:) of LAMPS software,
usually on the system disk of the boot node (MVA). 
.LE
There is always just one site tree (LSL$SITE__ROOT) of modified standard files,
usually on the system disk of the boot node (MVA). 
.LE
There is always just one user tree (LSL$USER__ROOT) of user home directories
usually on the system disk of the boot node (MVA). 
.LE
There is always a single primary data tree (LSL$DATA__ROOT:) of data files,
usually on a disk of the boot node. Other trees of data files may exist, but
are accessed eg by a user altering the LSL$IF logical name by using SI.
.LE
It is advantageous for LITES2 workspace and journal files to be written to
the local disk of a VAXstation workstation (eg V3A). If so 
there should be a file LSDEFNS__LOCAL.COM in SYS$SPECIFIC:[SYSMGR] which defines
logical name LSL$LOCAL__ROOT to point to directory [LSLLOCAL.] on a local disk.
A template LSDEFNS__LOCAL.COM is provided with the LSL startup files, which 
will have been copied to SYS$COMMON:[SYSMGR] by the LSLINSTALL procedure.
This can be be copied to SYS$SPECIFIC:[SYSMGR] and edited.
.LE
For a diskless node (VSA), the standard default assignment of 
LSL$LOCAL__ROOT is sufficient,and will put the satellite's 
workspace files on the boot node (MVA).
.LE
If two VAXstation satellites exist, one with a local disk and one diskless,
then a possible alternative is for the diskless node (VSA) to have workspace
files on the other node (V3A). This will work, but is ^&not recommended\& as
it requires that V3A's disk be mounted cluster wide, and means that
VSA will not function if V3A is out of service.
.LE
On a LAMPS system with graphics terminals (eg Sigmex6000) on direct serial
lines to the host, the terminal dependent LITES2 initialisation files are
accessed using the terminal line device name, eg TXA2.LCM, TTB3.LCM. For
terminals on terminal servers, and particularly for any VAXstation screens,
this mechanism cannot work, and instead, the logical name LSL$LITES2TERMINAL is
set up by LITES2INI.COM to translate to the filename part of an appropriate
initialisation file, eg VSA__WTXX. For workstations, this name is
conventionally made up from the nodename followed by WTXX (VWS VAXstation
screens have device name WT:). 
.END LIST

.APPENDIX ^^Example Installation

.LITERAL

	Welcome to VAX/VMS V5.3    

Username: SYSTEM
Password: 
	Welcome to VAX/VMS version V5.3 on node LSLV3O
    Last interactive login on Friday, 13-JUL-1990 09:32
    Last non-interactive login on Friday, 13-JUL-1990 09:32

$!
$! first find the name of our magtape drive
$!
$ SHOW DEVICE M <CR>

Device                  Device           Error    Volume         Free  Trans Mnt
 Name                   Status           Count     Label        Blocks Count Cnt
MKA500:                 Online               0

Device                  Device           Error    Volume         Free  Trans Mnt
 Name                   Status           Count     Label        Blocks Count Cnt
MBA1:                   Online               0
$!
$! now get the LSLINSTALL procedure off the issue tape
$!
$ MOUNT MKA500:/FOREIGN/NOASSIST <CR>
%MOUNT-I-WRITELOCK, volume is write locked
%MOUNT-I-MOUNTED, LSLSYS mounted on _MKA500:
$!
$ BACKUP/LOG MKA500:/REWIND/SELECT=LSLINSTALL.COM SYS$MANAGER: <CR>
%BACKUP-S-CREATED, created SYS$SYSROOT:[SYSMGR]LSLINSTALL.COM;1
$!
$ DISMOUNT MKA500:/NOUNLOAD <CR>
$!
$! now invoke it to carry out the installation
$!
$ @LSLINSTALL <CR>
 
LSL LAMPS software installation procedure V2.0 Try HELP for assistance.
 
LSLINSTALL> HELP <CR>

Commands available are:

HELP		- type this message.
INSTALL		- do complete installation (P,U,R,L,D,F,S,O,T)
PREPARE		- give introduction, and check resources.
USERNAMES	- create standard usernames.
ROOTS		- create root directories and set up rooted logical names.
LOAD		- load and install software issue BACKUP savesets.
DIRECTORIES	- create standard site_dependent directories.
FILES		- copy standard startup files to destinations.
SEARCHLISTS	- setup search lists LSL$EXE:, LSL$COM: etc.
OPTIONS		- set up environment for optional software.
TUNE		- recommend sensible SYSGEN VMS tuning parameters.

Suggested sequence which is done by INSTALL command is:
	PREPARE, USERNAMES, ROOTS, LOAD, DIRECTORIES, FILES, SEARCHLISTS,
	OPTIONS, TUNE

LSLINSTALL> INSTALL <CR>
 
--------------------------------------------------------------
PREPARE - give introduction, and check resources
--------------------------------------------------------------
 
This procedure is used for the installation of LSL LAMPS (Laser-Scan Automated
Map Processing) Mapping and GIS software packages. It is documented in the 
"LAMPS Installation Guide" which is part of the package documentation for the
LSL MAPPING package. 

To run this procedure, you must be logged on as user SYSTEM, as it carries out
the primary system management functions associated with installation of 
LAMPS software, vis:

	- Set up standard usernames for a LAMPS system
	- Load a distribution tape containing the LSL software
	- Create standard site_dependent directories and files
	- Evaluate changes in SYSGEN parameters needed.

The procedure is general enough to cope with installation on most standalone
and turnkey LAMPS systems. It should be noted however, that on complex
pre-existing sites, it may be necessary for the system manager to edit this
procedure to avoid conflicts with assumptions made by previously installed
software packages.

OK to proceed [Y] ?  <CR>
 
--------------------------------------------------------------
USERNAMES - Setting up standard LSL usernames.
--------------------------------------------------------------
 
The procedure will create the following standard usernames:
[100,2]   = [LSLSOFT]	! owner of LSL software
[100,100] = [LSLUSER]	! template LSL user
[100,101] = [LSLBIG]	! template large quota user
 
Proceed with this stage [Y] ?  <CR>
 
Creating user [LSLSOFT]
 
%UAF-I-RDBADDMSGU, identifier LSL value: [000100,177777] added to rights data 
 base
%UAF-I-ADDMSG, user record successfully added
%UAF-I-RDBADDMSGU, identifier LSLSOFT value: [000100,000002] added to rights 
 data base
%UAF-I-MDFYMSG, user record(s) updated
%UAF-I-MDFYMSG, user record(s) updated
%UAF-I-MDFYMSG, user record(s) updated
%UAF-I-MDFYMSG, user record(s) updated
%UAF-I-DONEMSG, system authorization file modified
%UAF-I-NAFNOMODS, no modifications made to network proxy data base
%UAF-I-RDBDONEMSG, rights data base modified
 
Press RETURN to continue  <CR>
 
Creating user [LSLUSER]
 
%UAF-I-COPMSG, user record copied
%UAF-I-RDBADDMSGU, identifier LSLUSER value: [000100,000100] added to rights 
 data base
%UAF-I-MDFYMSG, user record(s) updated
%UAF-I-MDFYMSG, user record(s) updated
%UAF-I-DONEMSG, system authorization file modified
%UAF-I-NAFNOMODS, no modifications made to network proxy data base
%UAF-I-RDBDONEMSG, rights data base modified
 
Press RETURN to continue  <CR>
 
Creating user [LSLBIG]
 
%UAF-I-COPMSG, user record copied
%UAF-I-RDBADDMSGU, identifier LSLBIG value: [000100,000101] added to rights 
 data base
%UAF-I-MDFYMSG, user record(s) updated
%UAF-I-MDFYMSG, user record(s) updated
%UAF-I-MDFYMSG, user record(s) updated
%UAF-I-DONEMSG, system authorization file modified
%UAF-I-NAFNOMODS, no modifications made to network proxy data base
%UAF-I-RDBDONEMSG, rights data base modified
 
Press RETURN to continue  <CR>
 
       Owner         Username           UIC       Account  Privs Pri Directory

LSL Software         LSLSOFT         [100,2]      LSL      Group   4 LSL$SITE_
ROOT:[LSLSOFT]
LSL LAMPS user       LSLUSER         [100,100]    LSL      Group   4 LSL$USER_
ROOT:[LSLUSER]
LSL LAMPS big user   LSLBIG          [100,101]    LSL      Group   4 LSL$USER
_ROOT:[LSLUSER]
%UAF-I-NOMODS, no modifications made to system authorization file
%UAF-I-NAFNOMODS, no modifications made to network proxy data base
%UAF-I-RDBNOMODS, no modifications made to rights data base
 
Press RETURN to continue  <CR>
 
--------------------------------------------------------------
ROOTS - Setting up root level directory trees.
--------------------------------------------------------------
 
The procedure will create the following root level directories:
 
LSL$PUBLIC_ROOT: -> [LSLPUBLIC...]	! LSL published software (read-only)
LSL$SITE_ROOT: ->   [LSLSITE...]	! LSL site-specific software 
LSL$USER_ROOT: ->   [LSLUSER...]	! LSL users home directories
LSL$DATA_ROOT: ->   [LSLDATA...]	! LSL data directories
LSL$LOCAL_ROOT: ->  [LSLLOCAL...]	! LSL workspace directories
 
Proceed with this stage [Y] ?  <CR>
 
Disk devices available are:

Device                  Device           Error    Volume         Free  Trans Mnt
 Name                   Status           Count     Label        Blocks Count Cnt
DKA300:                 Online               0
DKA100:                 Mounted              0  SYS_DISK       1157787   131   1
DUA2:                   Online               0
 
Firstly select a disk for the LSL standard software files.
This will have the following directories:
LSL$PUBLIC_ROOT: -> [LSLPUBLIC...]	! LSL published software (read-only)
 
What device for public tree [default is DKA100:] ?  <CR>
   "LSL$PUBLIC_ROOT" = "DKA100:[LSLPUBLIC.]" (LNM$SYSTEM_TABLE)
 
Now select a disk for the LSL site-specific files.
This will have the following directories:
LSL$SITE_ROOT: ->   [LSLSITE...]	! site-specific software 
 
What device for site tree [default is DKA100:] ?  <CR>
   "LSL$SITE_ROOT" = "DKA100:[LSLSITE.]" (LNM$SYSTEM_TABLE)
 
Now select a disk for the LSL users home directories.
This will have the following directories:
LSL$USER_ROOT: -> [LSLUSER...]	! LSL users home directories
 
What device for user tree [default is DKA100:] ?  <CR>
   "LSL$USER_ROOT" = "DKA100:[LSLUSER.]" (LNM$SYSTEM_TABLE)
 
Now select a disk for the LSL data directories.
This will have the following directories:
LSL$DATA_ROOT: -> [LSLDATA...]	! LSL data directories
 
What device for data tree [default is DKA100:] ?  <CR>
   "LSL$DATA_ROOT" = "DKA100:[LSLDATA.]" (LNM$SYSTEM_TABLE)
 
Now select a disk for the LSL local workspace directories.
This will have the following directories:
LSL$LOCAL_ROOT: -> [LSLLOCAL...]	! LSL workspace directories
 
What device for local tree [default is DKA100:] ?  <CR>
   "LSL$LOCAL_ROOT" = "DKA100:[LSLLOCAL.]" (LNM$SYSTEM_TABLE)
 
Now creating site-specific definitions file LSDEFNS_ROOTS
 
$! LSDEFNS_ROOTS.COM - define LSL root logical names.
$!
$! This file was generated by LSLINSTALL.COM, but can now be edited
$!
$	DEFINE/SYSTEM/TRANS=(CONCEALED,TERMINAL) LSL$PUBLIC_ROOT -
		DKA100:[LSLPUBLIC.]
$	DEFINE/SYSTEM/TRANS=(CONCEALED,TERMINAL) LSL$SITE_ROOT 	-
		DKA100:[LSLSITE.]
$	DEFINE/SYSTEM/TRANS=(CONCEALED,TERMINAL) LSL$DATA_ROOT 	-
		DKA100:[LSLDATA.]
$	DEFINE/SYSTEM/TRANS=(CONCEALED,TERMINAL) LSL$USER_ROOT 	-
		DKA100:[LSLUSER.]
$	DEFINE/SYSTEM/TRANS=(CONCEALED,TERMINAL) LSL$LOCAL_ROOT -
		DKA100:[LSLLOCAL.]
$!
$	EXIT

Press RETURN to continue  <CR>
 
--------------------------------------------------------------
LOAD - Load savesets from distribution medium
--------------------------------------------------------------
 
Proceed with this stage [Y] ?  <CR>
 
 
The following magtape devices are available on this CPU ()
 
Device MKA500: is a TK50 drive (Cartridge tape)
 
Where should issue savesets be read from [default is MKA500:] ?  <CR>
Tape device MKA500: will now be mounted
Hit RETURN when ready <CR>
%MOUNT-I-WRITELOCK, volume is write locked
%MOUNT-I-MOUNTED, LSLSYS mounted on _MKA500:
 
Laser-Scan strongly recommend that the whole of any installation kit is applied.
Do you want to select only part of this kit [default N] ?  <CR>
 
Now select any special options for the loading:
  /VERIFY will carry out an extra BACKUP verification pass for each saveset.
  /LIST will produce a BACKUP listing for each saveset and file loaded.
  /LOG will produce a BACKUP log line for each file loaded.
The defaults are usually adequate for a normal installation.
 
/VERIFY [default N] ?  <CR>
/LIST [default N] ?  <CR>
/LOG [default N] ?  <CR>
 
Starting load now - this may take several minutes.
Load complete
 
Now setting protections on all files on LSL$PUBLIC_ROOT:
 
Press RETURN to continue  <CR>
 
--------------------------------------------------------------
DIRECTORIES - Set up standard site_dependent directories
--------------------------------------------------------------
 
Proceed with this stage [Y] ?  y<CR>
%CREATE-I-CREATED, LSL$SITE_ROOT:[LSL.COM] created
%CREATE-I-CREATED, LSL$SITE_ROOT:[LSL.EXE] created
%CREATE-I-CREATED, LSL$SITE_ROOT:[LSL.LIB] created
%CREATE-I-CREATED, LSL$SITE_ROOT:[LSL.HELP] created
%CREATE-I-CREATED, LSL$SITE_ROOT:[LSL.LOOKUP] created
%CREATE-I-CREATED, LSL$SITE_ROOT:[LSL.FRT] created
%CREATE-I-CREATED, LSL$SITE_ROOT:[LSL.UIL] created
%CREATE-I-CREATED, LSL$SITE_ROOT:[LSL.UID] created
%CREATE-I-CREATED, LSL$SITE_ROOT:[LSL.CDL] created
%CREATE-I-CREATED, LSL$SITE_ROOT:[LSL.FPP] created
%CREATE-I-CREATED, LSL$SITE_ROOT:[LSL.MGMT] created
%CREATE-I-CREATED, LSL$SITE_ROOT:[LSLSOFT] created
%CREATE-I-CREATED, LSL$SITE_ROOT:[LITES2.CMD] created
%CREATE-I-CREATED, LSL$USER_ROOT:[LSLUSER] created
%CREATE-I-CREATED, LSL$DATA_ROOT:[LSL.IFF] created
%CREATE-I-CREATED, LSL$DATA_ROOT:[LSL.DTI] created
%CREATE-I-CREATED, LSL$LOCAL_ROOT:[LITES2.WORK] created
%CREATE-I-CREATED, LSL$LOCAL_ROOT:[LITES2.JNL] created
%SET-I-MODIFIED, LSL$LOCAL_ROOT:[LITES2.JNL] modified
 
Press RETURN to continue  <CR>
 
 
--------------------------------------------------------------
FILES - Copy the startup files to SYS$MANAGER:
--------------------------------------------------------------
 
This will copy the template LS*.com startup files from the newly
loaded public tree, and also any package-specific startup files.
 
Proceed with this stage [Y] ?  <CR>
 
Copying the following startup template files to SYS$COMMON:[SYSMGR]:
	LSDEFNS.COM
	LSDEFNS_DEVICES.COM
	LSDEFNS_LOCAL.COM
	LSDEFNS_SEARCHLISTS.COM
	LSDISKS.COM
	LSDISKS_DISMOUNT.COM
	LSDISKS_LOGICALS.COM
	LSDISKS_MOUNT.COM
	LSIMAGES.COM
	LSLOGIN.COM
	LSPORTS.COM
	LSPRINTERS.COM
	LSPROCESSES.COM
	LSQUEUES.COM
	LSSTARTUP.COM
	LSSYSTARTUP.COM
	LSTERMS.COM
 
 
Copying the following package-specific startup files to SYS$COMMON:[SYSMGR]:
No package-specific startup procedures found
 
Press RETURN to continue  <CR>
 
Creating the login definitions files for LSLUSER and LSLSOFT
 
Creating login.com for [LSLSOFT]
Creating login.com for [LSLUSER]
 
Press RETURN to continue  <CR>

Now you need to specify the Laser-Scan short name for your site, which will be
used for software licensing purposes.

It will usually be an acronym of the name of the organisation, eg LSLCAM. If
you do not know the name that LSL have given your site, either deduce it from
the following list of available licences, or telephone the Customer Services
department at LSL Cambridge.

If you are not able to specify a valid name, then give a value of "UNKNOWN",
and edit the correct value later into the file which will now be created called
SYS$MANAGER:LSDEFNS_SITE.COM. If you do this, then you will not be able to run
full LAMPS software until the correct name and/or licence files are supplied.

Press RETURN to continue  <CR>
 
Licences are available for the following customers:
	LSLCAM
 
What is your customer name [default is LSLCAM] ?  <CR>
 
Now creating site-specific definitions file LSDEFNS_SITE
 
$! LSDEFNS_SITE.COM - define LSL site-specific logical names.
$!
$! This file was generated by LSLINSTALL.COM, but can now be edited
$!
$! Firstly a customer name, to be used for software licences
$!
$	DEFINE/SYSTEM	LSL$CUSTOMER_NAME		LSLCAM
$!
$	EXIT
 
Press RETURN to continue  <CR>
 
--------------------------------------------------------------
SEARCHLISTS - Set up search lists for LSL$EXE etc
--------------------------------------------------------------
 
Proceed with this stage [Y] ?  <CR>

LSL$SEARCHLISTS_GENERATE.COM (V2.0) - generate file of searchlist definitions

Creating LSDEFNS_SEARCHLISTS.COM in SYS$COMMON:[SYSMGR]

$! LSDEFNS_SEARCHLISTS.COM - define LSL searchlists.
$!
$! WARNING - This file is automatically generated by a command procedure
$! Do not edit it. Instead go @LSL$COM:LSLSEARCHLISTS_GENERATE.COM.
$!
$!
$! Set up search list for public tree .COM directories
$!
$	Define/System	LSL$COM	-
		LSL$SITE_ROOT:[LSL.COM],-
		LSL$COM_PUBLIC
$!
$	Define/System	LSL$COM_PUBLIC	-
		LSL$PUBLIC_ROOT:[$XGIS_BYPS.COM],-
		LSL$PUBLIC_ROOT:[IMP.COM],-
		LSL$PUBLIC_ROOT:[LITES2.COM],-
		LSL$PUBLIC_ROOT:[LSLSYSTEM.COM],-
		LSL$PUBLIC_ROOT:[MAPPING.COM],-
		LSL$PUBLIC_ROOT:[MAPSTATION.COM],-
		LSL$PUBLIC_ROOT:[MATRIX.COM],-
		LSL$PUBLIC_ROOT:[METROPOLIS.COM],-
		LSL$PUBLIC_ROOT:[POSTPROCESS.COM],-
		LSL$PUBLIC_ROOT:[SCANCONVERT.COM],-
		LSL$PUBLIC_ROOT:[VTRAK.COM],-
		LSL$PUBLIC_ROOT:[XGIS.COM]
$!
$! Set up search list for public tree .EXE directories
$!
$	Define/System	LSL$EXE	-
		LSL$SITE_ROOT:[LSL.EXE],-
		LSL$EXE_PUBLIC
$!
$	Define/System	LSL$EXE_PUBLIC	-
		LSL$PUBLIC_ROOT:[$XGIS_BYPS.EXE],-
		LSL$PUBLIC_ROOT:[IMP.EXE],-
		LSL$PUBLIC_ROOT:[LITES2.EXE],-
		LSL$PUBLIC_ROOT:[LSLSYSTEM.EXE],-
		LSL$PUBLIC_ROOT:[MAPPING.EXE],-
		LSL$PUBLIC_ROOT:[MATRIX.EXE],-
		LSL$PUBLIC_ROOT:[METROPOLIS.EXE],-
		LSL$PUBLIC_ROOT:[POSTPROCESS.EXE],-
		LSL$PUBLIC_ROOT:[SCANCONVERT.EXE],-
		LSL$PUBLIC_ROOT:[VTRAK.EXE],-
		LSL$PUBLIC_ROOT:[XGIS.EXE]
$!
$! Set up search list for public tree .LIB directories
$!
$	Define/System	LSL$LIBRARY	-
		LSL$SITE_ROOT:[LSL.LIB],-
		LSL$LIBRARY_PUBLIC
$!
$	Define/System	LSL$LIBRARY_PUBLIC	-
		LSL$PUBLIC_ROOT:[LSLSYSTEM.LIB],-
		LSL$PUBLIC_ROOT:[MAPPING.LIB],-
		LSL$PUBLIC_ROOT:[MATRIX.LIB]
$!
$! Set up search list for public tree .HELP directories
$!
$	Define/System	LSL$HELP	-
		LSL$SITE_ROOT:[LSL.HELP],-
		LSL$HELP_PUBLIC
$!
$	Define/System	LSL$HELP_PUBLIC	-
		LSL$PUBLIC_ROOT:[IMP.HELP],-
		LSL$PUBLIC_ROOT:[LITES2.HELP],-
		LSL$PUBLIC_ROOT:[LSLSYSTEM.HELP],-
		LSL$PUBLIC_ROOT:[MAPPING.HELP],-
		LSL$PUBLIC_ROOT:[MATRIX.HELP],-
		LSL$PUBLIC_ROOT:[VTRAK.HELP]
$!
$! Set up search list for public tree .LOOKUP directories
$!
$	Define/System	LSL$LOOKUP	-
		LSL$SITE_ROOT:[LSL.LOOKUP],-
		LSL$LOOKUP_PUBLIC
$!
$	Define/System	LSL$LOOKUP_PUBLIC	-
		LSL$PUBLIC_ROOT:[IMP.LOOKUP],-
		LSL$PUBLIC_ROOT:[LSLSYSTEM.LOOKUP],-
		LSL$PUBLIC_ROOT:[MATRIX.LOOKUP]
$!
$! Set up search list for public tree .UIL directories
$!
$	Define/System	LSL$UIL	-
		LSL$SITE_ROOT:[LSL.UIL],-
		LSL$UIL_PUBLIC
$!
$	Define/System	LSL$UIL_PUBLIC	-
		LSL$PUBLIC_ROOT:[$XGIS_BYPS.UIL],-
		LSL$PUBLIC_ROOT:[LITES2.UIL],-
		LSL$PUBLIC_ROOT:[METROPOLIS.UIL],-
		LSL$PUBLIC_ROOT:[XGIS.UIL]
$!
$! Set up search list for public tree .UID directories
$!
$	Define/System	LSL$UID	-
		LSL$SITE_ROOT:[LSL.UID],-
		LSL$UID_PUBLIC
$!
$	Define/System	LSL$UID_PUBLIC	-
		LSL$PUBLIC_ROOT:[SCANCONVERT.UID],-
		LSL$PUBLIC_ROOT:[VTRAK.UID]
$!
$! Set up search list for public tree .CDL directories
$!
$	Define/System	LSL$CDL	-
		LSL$SITE_ROOT:[LSL.CDL],-
		LSL$CDL_PUBLIC
$!
$	Define/System	LSL$CDL_PUBLIC	-
		LSL$PUBLIC_ROOT:[MAPSTATION.CDL],-
		LSL$PUBLIC_ROOT:[SCANCONVERT.CDL],-
		LSL$PUBLIC_ROOT:[VTRAK.CDL]
$!
$! Set up search list for public tree .CMD directories
$!
$	Define/System	LSL$LITES2CMD	-
		LSL$SITE_ROOT:[LITES2.CMD],-
		LSL$LITES2CMD_PUBLIC
$!
$	Define/System	LSL$LITES2CMD_PUBLIC	-
		LSL$PUBLIC_ROOT:[$XGIS_BYPS.CMD],-
		LSL$PUBLIC_ROOT:[METROPOLIS.CMD],-
		LSL$PUBLIC_ROOT:[XGIS.CMD]
$!
$	EXIT
 
Press RETURN to continue  <CR>
 
--------------------------------------------------------------
OPTIONS - set up environment for optional software
--------------------------------------------------------------
 
Proceed with this stage [Y] ?  y<CR>
 
The procedure will create the following captive usernames:
[100,1]   = [VTRAK]  	! VTRAK captive user
 
Creating user [VTRAK]
 
%UAF-I-COPMSG, user record copied
%UAF-I-RDBADDMSGU, identifier VTRAK value: [000100,000001] added to rights 
 data base
%UAF-I-MDFYMSG, user record(s) updated
%UAF-I-MDFYMSG, user record(s) updated
%UAF-I-MDFYMSG, user record(s) updated
       Owner         Username           UIC       Account  Privs Pri Directory

LSL VTRAK user       VTRAK           [100,1]      LSL      Group   4 LSL$USER_
ROOT:[VTRAK]
%UAF-I-DONEMSG, system authorization file modified
%UAF-I-NAFNOMODS, no modifications made to network proxy data base
%UAF-I-RDBDONEMSG, rights data base modified
 
Press RETURN to continue  <CR>

The LAMPS environment contains an optional privileged user called [OPER],
which is supplied with a template captive command procedure for carrying 
out useful VMS operator functions such as disk archiving, queue management,
system shutdown, etc.

This functionality is particularly useful for small LAMPS turnkey systems,
which are not run as general-purpose timesharing systems, and hence do not 
have full-time system management and systems operations personnel.

Larger systems with many layered products installed will usually already 
have operator accounts, and so will not want to include the LSL offering.

Do you want to create a privileged operator [OPER] user [Y] ?  y<CR>
 
Creating user [OPER]
 
%UAF-I-COPMSG, user record copied
%UAF-I-RDBADDMSGU, identifier OPER value: [000001,000377] added to rights data 
 base
%UAF-I-MDFYMSG, user record(s) updated
%UAF-I-MDFYMSG, user record(s) updated
%UAF-I-MDFYMSG, user record(s) updated
%UAF-I-MDFYMSG, user record(s) updated
%UAF-I-MDFYMSG, user record(s) updated
%UAF-I-MDFYMSG, user record(s) updated
%UAF-I-MDFYMSG, user record(s) updated
       Owner         Username           UIC       Account  Privs Pri Directory

SYSTEM OPERATOR      OPER              [1,377]    OPERATOR All     4 SYS$SYSDEV
ICE:[OPER]
%UAF-I-DONEMSG, system authorization file modified
%UAF-I-NAFNOMODS, no modifications made to network proxy data base
%UAF-I-RDBDONEMSG, rights data base modified
 
 
Press RETURN to continue  <CR>
 
No package-specific installation procedures found
 
Press RETURN to continue  <CR>
 
--------------------------------------------------------------
TUNE - Evaluate SYSGEN parameters.
--------------------------------------------------------------
 
Proceed with this stage [Y] ?  <CR>
 
Current value of VIRTUALPAGECNT is 24384
   LSL recommend at least 300000
   You should edit MODPARAMS.DAT and insert the line:
   MIN_VIRTUALPAGECNT=300000	! Increase for LSL LAMPS
 
Current value of WSMAX is 4100
   LSL recommend at least 16384
   You should edit MODPARAMS.DAT and insert the line:
   MIN_WSMAX=16384	! Increase for LSL LAMPS
 
Press RETURN to continue  <CR>

WARNING - Your current SYSGEN parameters are probably low.

You should note the values which were recommended above and which have been
stored for you in the file SYS$SYSTEM:LSLINSTALL_MODPARAMS.DAT. Consider
whether they are indeed suitable for your hardware and software configuration.
When satisfied, edit the values into the MODPARAMS.DAT file in SYS$SYSTEM:,
then run the DEC-supplied AUTOGEN procedure, then reboot the system. 

Look up AUTOGEN in the VMS System Management manuals if you are not familiar
with changing SYSGEN parameters using AUTOGEN and the MODPARAMS.DAT file. 

You should do this as soon as this LSLINSTALL procedure finishes, before
logging off as SYSTEM.

Press RETURN to continue  <CR>
 

The LSLINSTALL stage of LSL LAMPS software installation is now complete.

If the TUNE stage above suggested changes to MODPARAMS.DAT, do that now.

LSLINSTALL terminating sucessfully
$
$!
$! Now try it out !!!
$!
$ @LSSTARTUP <CR>
Entering LSSTARTUP.COM - Laser-Scan startup procedure
LSDISKS_LOGICALS.COM - Defining LSL disk logical names
LSDEFNS.COM - Defining LSL logical names
%DCL-I-SUPERSEDE, previous value of LSL$PUBLIC_ROOT has been superseded
%DCL-I-SUPERSEDE, previous value of LSL$SITE_ROOT has been superseded
%DCL-I-SUPERSEDE, previous value of LSL$DATA_ROOT has been superseded
%DCL-I-SUPERSEDE, previous value of LSL$USER_ROOT has been superseded
%DCL-I-SUPERSEDE, previous value of LSL$LOCAL_ROOT has been superseded
%DCL-I-SUPERSEDE, previous value of LSL$COM has been superseded
%DCL-I-SUPERSEDE, previous value of LSL$COM_PUBLIC has been superseded
%DCL-I-SUPERSEDE, previous value of LSL$EXE has been superseded
%DCL-I-SUPERSEDE, previous value of LSL$EXE_PUBLIC has been superseded
%DCL-I-SUPERSEDE, previous value of LSL$LIBRARY has been superseded
%DCL-I-SUPERSEDE, previous value of LSL$LIBRARY_PUBLIC has been superseded
%DCL-I-SUPERSEDE, previous value of LSL$HELP has been superseded
%DCL-I-SUPERSEDE, previous value of LSL$HELP_PUBLIC has been superseded
%DCL-I-SUPERSEDE, previous value of LSL$LOOKUP has been superseded
%DCL-I-SUPERSEDE, previous value of LSL$LOOKUP_PUBLIC has been superseded
%DCL-I-SUPERSEDE, previous value of LSL$UIL has been superseded
%DCL-I-SUPERSEDE, previous value of LSL$UIL_PUBLIC has been superseded
%DCL-I-SUPERSEDE, previous value of LSL$UID has been superseded
%DCL-I-SUPERSEDE, previous value of LSL$UID_PUBLIC has been superseded
%DCL-I-SUPERSEDE, previous value of LSL$CDL has been superseded
%DCL-I-SUPERSEDE, previous value of LSL$CDL_PUBLIC has been superseded
%DCL-I-SUPERSEDE, previous value of LSL$LITES2CMD has been superseded
%DCL-I-SUPERSEDE, previous value of LSL$LITES2CMD_PUBLIC has been superseded
LSTERMS.COM - Setting up serial lines
LSPORTS.COM - Setting up terminal server ports
LSIMAGES.COM - Installing images
LSQUEUES.COM - starting queues
LSPRINTERS.COM - setting up printers
Finished LSSTARTUP.COM
$ 
$!
$! seems OK, would carry on now with editing template files etc.
$!
$ LOGOFF <CR>
  SYSTEM       logged out at 13-JUL-1990 10:32:48.54
.END LITERAL
