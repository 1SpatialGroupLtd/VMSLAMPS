.!** Introduction 

.!** set things up
.REQUIRE	"COORDLIB.HD"

.!** first the chapter heading
.CHAPTER ^&Introduction\&

.!** and the titles
.TITLE COORDLIB Reference Manual
.SUBTITLE Introduction

.HL 1 ^&General Description\&
.INDEX ^^COORDLIB
.INDEX ^^COORDLIB> introduction
.INDEX ^^COORDLIB> general description

.P 0
COORDLIB is Laser-Scan's coordinate manipulation library.

.P 0
.INDEX ^^COORDLIB> features
It provides several sets of routines for common operations on graphical 
elements in Laser-Scan software. Currently, facilities are provided for the 
following :-
.LIST 0, "-"
.BLANK
.LE; curve and linear interpolation 
.LE; line filtering 
.END LIST

.P 0 
.INDEX ^^COORDLIB> location of library
The library may be found in LSL$LIBRARY:COORDLIB.OLB, and parameter files 
available for general use in LSL$CMNCOORD:

.P 0
.INDEX ^^COORDLIB> location of sources
The library sources are in LSL$SOURCE__ROOT:[LSLMAINT.COORDLIB...], and the
documentation sources are in LSL$DOC__ROOT:[LSLMAINT.COORDLIB].


.PAGE
.HL 1 ^^^&Documentation Notation\&
.INDEX ^^COORDLIB> documentation notation

.P 0
The following conventions are followed:
.INDEX ^^COORDLIB> documentation conventions

.LIST "*"

.LE; all arguments are fully declared for each routine.

.LE; the following input/output declarations are made:

.LM +6
.P -6
out#-#this variable will be written to by the routine.
.P -6
#in#-#this variable is read by the routine - it is not written to.
.P -6
i/o#-#this variable may be both read by the routine, and written to.
.LM -6

.LE; the following argument types are used:

.LM +10
.P -11
word#####-#this is a Fortran INTEGER_*2, a 16 bit variable.
.P -11
long#####-#this is a Fortran INTEGER_*4, a 32 bit variable. Note that this 
is the default integer size on the VAX, and is assumed unless there are good 
reasons for using a word.
.P -11
logical##-#this is a Fortran LOGICAL variable
.P -11
byte#####-#this is a Fortran BYTE or LOGICAL_*1 variable
.P -11
real#####-#this is a Fortran REAL variable
.P -11
dreal####-#this is a Fortran REAL_*8, or DOUBLE PRECISION variable
.P -11
char#####-#this is a Fortran CHARACTER variable, but see the section on
'Fake strings' in the System chapter
.P -11
external#-#this is a routine declared as EXTERNAL in the calling routine
.LM -10

.LE; all arguments are compulsory.

.LE; parameter files are described using the same data-types as used for 
variables (long, word, real, etc)

.INDEX ^^COORDLIB> common blocks
.LE; none of the common blocks are intended to be accessed by the user and are 
therefore not documented

.END LIST


.HL 1 ^^^&Naming_ Conventions\&
.INDEX ^^COORDLIB> naming conventions

.LIST "*"

.INDEX ^^COORDLIB> naming conventions> common blocks
.INDEX ^^Common blocks> COORDLIB> naming conventions
.LE;all common block names are listed in Appendix B.

.INDEX ^^COORDLIB> naming conventions> routines
.LE;all routine names are also listed in Appendix B.

.LE; the source code for every Fortran routine is contained in its own separate 
file, filenames being the same as the routine names.

.END LIST

.HL 1 ^^^&Coordinate Annotation Conventions\&

.P 0
All coordinate arrays are 2-dimensional REAL*4, the first index being either 1
or 2 for X and Y respectively, and the second the point number. The parameter 
file LSL$CMNCOORD:XYIND.PAR contains parameters for these indices :-

.LM +25
.P -20
long####^*X\*#########-#X coordinate index (= 1)
.P -20
long####^*Y\*#########-#Y coordinate index (= 2)
.LM -25

.P 0
This parameter file is available to users for their own programs.

