.!** Examples

.!** set things up
.REQUIRE	"COORDLIB.HD"

.!** first the appendix heading
.APPENDIX ^&Examples\&

.!** and the titles
.TITLE COORDLIB Reference Manual
.SUBTITLE Examples


.HL 1 ^&Introduction\&

.P 0
The examples given in this Appendix illustrate the use of the filtering 
routines in IMP IFILTER, and the interpolation routines in LITES2.

.HL 1 ^&Filtering\&

.P 0
Both the Douglas-Peucker filter and the LSL BUNCH filter are available 
in IFILTER, the tolerances and other parameters being supplied by means 
of qualifier keywords on the DCL command line. The initialisation 
routines are each called only once, prior to processing any of the line 
strings. The calls are

.P +10
CALL BUNCH__INIT(_<tolerances_>,_<resolution_>,1.0)

.P 0
and

.P +10
CALL DP__INIT(_<tolerance_>,1.0)

.P 0
Note that the scale factor is zero as the coordinates are IFF units.

.P 0
The IFILTER function FILTER__LINE illustrates calls to the COORDLIB 
subroutines DP__LINE and BUNCH__LINE. Declarations in common block /CONTROL/ 
include the following :-

.BLANK
.NOFILL
        LOGICAL*4	HAD__BUN		! set if /BUNCH given
        LOGICAL*4	USE__DP		! set if to use DP filter
.FILL

.P 0
Those in common block /LINES/ can be seen in the listing.

.P 0
In IFILTER the output points are simply buffered up for subsequent output. 
This is done by its ADDPTS, which is also listed. Note that the option for 
drawing on the screen is not applicable in this case.

.HL 1 ^&Interpolation\&

.P 0
LITES2 has Akima and McConalogue curve interpolation options. These are used 
for both drawn curves and generated curves, the latter invoked through the use 
of the CURVE command. Tolerances are input using the TOLERANCE command. 
Interpolation is carried out on one line string at a time, and the tolerances 
can be changed at any time during an editing session. The interpolation 
initialisation routine should therefore be called every time curve 
interpolation is started. 

.P 0
The suggested method of implemention is to replace all current calls to the 
existing INTRPL with calls to a new subroutine INTERP (see listing). This 
calls INTRPL__INIT if the start of the curve is being interpolated. 
Declarations in common block /DRAWIN/ include the following :-

.BLANK
.NOFILL
	REAL SCLFRT		! conversion factor FRT->IFF
	REAL DRANUM(2)		! no. of interpolated points
				! per sheet mm for drawn curves
	REAL GENNUM(2)		! no. of interpolated points
				! per sheet mm for generated curves
	LOGICAL*1 MCCON		! type of interpolation
				! .TRUE.  for McConalogue
				! .FALSE. for Akima
.FILL

.P 0
Note that the real arrays DRAIFF and GENIFF will now be redundant. Minor
changes will therefore be required to the subroutines DOTOLE and INISCL, as 
calculation of those values will not be required. 

.!** now for the sources
.NOFLAGS ALL
.PAGE
.NOFILL
.REQUIRE	"LSL750::LSL$DISK:[IFF.IMP.IFILTER]FILTER_LINE.SRC"
.FILL
.PAGE
.NOFILL
.REQUIRE	"LSL750::LSL$DISK:[IFF.IMP.IFILTER]ADDPTS.SRC"
.FILL
.PAGE
.NOFILL
.REQUIRE	"LSL750::LSL$DISK:[IFF.IMP.IFILTER]LINES.CMN"
.FILL
.PAGE
.NOFILL
.REQUIRE	"INTERP.SRC"
.FILL
