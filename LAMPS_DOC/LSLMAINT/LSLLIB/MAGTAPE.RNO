.!*
.!* new chapter
.!*

.ENTRY Magnetic tape routines > see Basic magnetic tape routines
.INDEX ^^Basic magnetic tape routines

.HL 1 ^&^^Introduction\&
.INDEX ^^Basic magnetic tape routines> introduction

.P 0
This chapter documents the general purpose magtape I/O routines.

.HL 1 ^^^&Magtape_ common_ blocks\&
.INDEX ^^Basic magnetic tape routines> common blocks
.INDEX ^^Basic magnetic tape routines> common blocks> MTIVCM
.INDEX ^^Basic magnetic tape routines> common blocks> MTOVCM
.ENTRY /MTIVCM/ > see Common blocks
.ENTRY /MTOVCM/ > see Common blocks

Two common blocks are provided, one for input and one for output. These are
MTIVCM.CMN, and MTOVCM.CMN, both in LSL$CMNLSL:
.INDEX ^^Common blocks> MTIVCM
.INDEX ^^Common blocks> MTOVCM

.HL 2 ^^^&Input_ common_ block\&
.INDEX ^^Basic magnetic tape routines> input common block

.P 0
The input common block has the following form:
.INDEX ^^Basic magnetic tape routines> input common block> description

.LM +10

.P -10
out#####-#long####^*MTIERR\*
.BR
If an error occurs, then ^*MTIERR\* contains the system error code. This is 
sometimes useful as an auxiliary to the value returned by the function being 
used. If no error occurs, then this value is not touched.

.I -10
out#####-#long####^*MTINBL\*
.BR
records the number of data blocks on the tape, before (ie not including) the
current read position. 

.LM -10

.HL 2 ^^^&Output_ common_ block\&
.INDEX ^^Basic magnetic tape routines> output common block
.INDEX ^^Basic magnetic tape routines> output common block> description

.P 0
The output common block has the following form:

.LM +10
.P -10
out#####-#long####^*MTOERR\*
.BR
If an error occurs, then ^*MTOERR\* contains the system error code. This is 
sometimes useful as an auxiliary to the value returned by the function being 
used. If no error occurs, then this value is not touched.

.P -10
out#####-#long####^*MTONBL\*
.BR
records the number of data blocks on the tape, before (ie not including) the
current write position.

.P -10
i/o#####-#long####^*MTOPTR\*
.BR
points to the next available slot in the user's buffer. It is cleared
by the routines where appropriate, but must otherwise be maintained by the
user. 

.P -10
out#####-#long####^*MTOLST\*
.BR
records the length in bytes of the last buffer written to magtape.

.LM -10

.HL 2 ^^^&Examples\&
.INDEX ^^Basic magnetic tape routines> examples
.INDEX ^^Examples

.P 0
For examples of the use of the magtape routines (although output only),
see the sources of the conversion utility I2MOSS.


.PAGE

.HL 1 ^&^^Input_ routines\&
.INDEX ^^Basic magnetic tape routines> input 

.HL 2 ^^^&MTINIT_ -_ initialise_ tape\&
.INDEX ^^Basic magnetic tape routines> input> tape initialisation
.INDEX ^^Basic magnetic tape routines> input> MTINIT

.P 5
^*ok = MTINIT( [name], [norew], [type] )\*
.INDEX ^^MTINIT

.LM +30
.P -25
out#-#long####^*ok\*#########LSL____NORMAL if initialisation succeeds, 
otherwise see below
.I -25
in##-#char####^*name\*#######the magtape drive to use
.I -25
in##-#logical#^*norew\*######if true, suppresses tape rewind
.I -25
in##-#long####^*type\*#######the type of controller protocol to use
.LM -30

.P 0
MTINIT initialises the tape drive ^*name\*: (default MTA0) for input, and
assigns a channel to it.

.P 0
If ^*norew\* is false (or absent), then the tape is rewound, positioning it at
BOT. Otherwise, the tape is not moved. Regardless, MTINBL will be set to zero.

.P 0
^*type\* is used to indicate what sort of communications protocol is required
to communicate with the magnetic tape drive:

.LIST "*"
.INDEX ^^Basic magnetic tape routines> input> mounting tape
.LE; If ^*type\* is zero (or absent) then a standard tape drive is assumed,
and the tape is assumed mounted foreign (ie by the DCL command MOUNT/FOREIGN).

.INDEX ^^Basic magnetic tape routines> input> MTINIT> serial interface
.INDEX ^^Basic magnetic tape routines> serial interface
.LE; If ^*type\* is one, then a DIL serial interface controller is assumed.
The tape drive will appear to the VAX as a normal serial port.

.LE; Further values of ^*type\* are reserved for possible future uses.
.END LIST


.P 0
The following values of ^*ok\* may be returned:
.INDEX ^^Basic magnetic tape routines> input> MTINIT> condition codes

.LM +18
.P -18
LSL____NORMAL#####-#success#-#tape drive initialised correctly
.I -18
LSL____DEVALLOC###-#failure#-#the magtape drive is already allocated to 
another process (MTIERR will contain SS$__DEVALLOC)
.I -18
LSL____NOSUCHDEV##-#failure#-#there is no device with the name specified by
^*name\* (this error may also be given if ^*name\* defaults, but MTA0 does not 
exist). Note that this error will also be given if ^*name\* does not make 
sense as a device name. MTIERR will give a more precise system error,
describing the problem.
.I -18
LSL____SYSERR#####-#failure#-#some other error occurred - the system error 
code is in MTIERR
.LM -18


.HL 2 ^^^&MTIRWD_ -_ rewind_ magtape\&
.INDEX ^^Basic magnetic tape routines> input> rewind magtape
.INDEX ^^Basic magnetic tape routines> input> MTIRWD

.P 5
^*ok = MTIRWD()\*
.INDEX ^^MTIRWD

.LM +30
.P -25
out#-#long####^*ok\*#########LSL____NORMAL if the rewind succeeds, otherwise 
see below
.LM -30

.P 0
MTIRWD rewinds the tape to BOT. MTINBL is set to zero.

.P 0
The following values of ^*ok\* may be returned:

.LM +18
.P -18
LSL____NORMAL#####-#success#-#tape rewound successfully
.I -18
LSL____SYSERR#####-#failure#-#some other error occurred - the system error 
code is in MTIERR
.LM -18


.HL 2 ^^^&MTIRDB_ -_ read_ block\&
.INDEX ^^Basic magnetic tape routines> input> read block
.INDEX ^^Basic magnetic tape routines> input> MTIRDB


.P 5
^*ok = MTIRDB( buffer, length, bytcnt )\*
.INDEX ^^MTIRDB

.LM +30
.P -25
out#-#long####^*ok\*#########LSL____NORMAL if the read succeeds, otherwise see 
below
.I -25
out#-#byte####^*buffer\*#####a byte buffer to receive data from the tape
.I -25
in##-#long####^*length\*#####the maximum number of bytes to read into buffer
.I -25
out#-#long####^*bytcnt\*#####the number of bytes actually read into buffer
.LM -30

.P 0
MTIRDB reads the next block on the tape, block of maximum length ^*length\*
into the user specified byte buffer ^*buffer\*. The number of bytes actually
read is returned in ^*bytcnt\*. 

.INDEX ^^Basic magnetic tape routines> input> MTIRDB> block length restrictions
.P 0
Note that it is not possible to read a block of ^*length\* less than 14 bytes, 
due to physical limitations of the tape drive - any such blocks on the tape
are ignored as noise. 

.P 0
MTIRDN increments MTINBL, and sets ^*bytcnt\*, whether it succeeds or not.

.P 0
The following values of ^*ok\* may be returned:
.INDEX ^^Basic magnetic tape routines> input> MTIRDB> condition codes

.LM +18
.P -18
LSL____NORMAL#####-#success#-#block read successfully
.I -18
LSL____BUFOVFLW###-#error#-#the block on the tape was too large to fit into
^*buffer\*. The first ^*length\* bytes are transferred, and ^*bytcnt\* is set 
to the actual length of the block on the tape.
.I -18
LSL____EOF########-#error#-#end of file - this is returned if a tapemark is 
read, or if the EOT marker is found. No data will be transferred to
^*buffer\*, and ^*bytcnt\* will be zero. Note, however, that MTINBL will still
be incremented. 
.I -18
LSL____SYSERR#####-#failure#-#some other error occurred - the system error 
code is in MTIERR
.LM -18

.HL 2 ^^^&MTISPC_ -_ space_ forwards/backwards\&
.INDEX ^^Basic magnetic tape routines> input> space forwards or backwards
.INDEX ^^Basic magnetic tape routines> input> MTISPC
.P 5
^*ok = MTISPC( blkno )\*
.INDEX ^^MTISPC

.LM +30
.P -25
out#-#long####^*ok\*#########LSL____NORMAL if the blocks are skipped 
successfully, otherwise see below
.I -25
in##-#long####^*blkno\*######number of blocks to space forwards
.LM -30

.P 0
MTISPC causes the read head to space forwards by ^*blkno\* blocks. If
^*blkno\* is negative, then it spaces backwards. The value of MTINBL is
adjusted accordingly, whether the routine succeeds or not. 

.P 0
The following values of ^*ok\* may be returned:
.INDEX ^^Basic magnetic tape routines> input> MTISPC> condition codes

.LM +18
.P -18
LSL____NORMAL#####-#success#-#tape moved successfully
.I -18
LSL____ENDOFTAPE##-#error#-#returned if either EOT (moving forwards) or BOT 
(moving backwards) is found
.I -18
LSL____ENDOFVOL###-#error#-#returned if two consecutive tapemarks are read
(moving forwards only). The tape remains positioned between the tapemarks, and 
MTISPC may not be used to space past the second tapemark.
.I -18
LSL____SYSERR#####-#failure#-#some other error occurred - the system error 
code is in MTIERR
.LM -18

.HL 2 ^^^&MTIBCK_ -_ backspace_ one_ block\&

.INDEX ^^Basic magnetic tape routines> input> backspace one block
.INDEX ^^Basic magnetic tape routines> input> MTIBCK

.P 5
^*ok = MTIBCK()\*
.INDEX ^^MTIBCK

.LM +30
.P -25
out#-#long####^*ok\*#########result as for MTISPC
.LM -30

.P 0
MTIBCK causes the read head to move backwards by one block. It is identical to 
a call of MTISPC(-1)

.HL 2 ^^^&MTIEOV_ -_ find_ end_ of_ volume\&
.INDEX ^^Basic magnetic tape routines> input> find end of volume
.INDEX ^^Basic magnetic tape routines> input> MTIEOV

.P 5
^*ok = MTIEOV()\*
.INDEX ^^MTIEOV

.LM +30
.P -25
out#-#long####^*ok\*#########LSL____NORMAL if end of volume is reached, 
otherwise see below
.LM -30

.P 0
MTIEOV causes the read head to space over blocks until the end of volume is
reached. This is considered to be marked by two consecutive tapemarks, and the 
tape is left positioned between the two tapemarks. Note that another call of 
MTIEOV will return (successfully) immediately.

.P 0
MTINBL is incremented for each block read in this process.

.P 0
The following values of ^*ok\* may be returned:
.INDEX ^^Basic magnetic tape routines> input> MTIEOV> condition codes

.LM +18
.P -18
LSL____NORMAL#####-#success#-#tape moved successfully
.I -18
LSL____ENDOFTAPE##-#error#-#returned if either EOT (moving forwards) or BOT 
(moving backwards) is found
.I -18
LSL____SYSERR#####-#failure#-#some other error occurred - the system error 
code is in MTIERR
.LM -18

.HL 2 ^^^&MTISNS_ -_ sense_ characteristics\&
.INDEX ^^Basic magnetic tape routines> input> sense characteristics
.INDEX ^^Basic magnetic tape routines> input> MTISNS

.P 5
^*ok = MTISNS(result)\*
.INDEX ^^MTISNS

.LM +30
.P -25
out#-#long####^*ok\*#########LSL____NORMAL if sense succeeds,
otherwise see below
.I -25
out#-#long####^*result\*#####current tape characteristics
.LM -30

.P 0
Senses the tape characteristics and returns them in ^*result\*. See the 
appropriate chapter of the VMS I/O systems manuals for how to interpret
^*result\*

.P 0
The following values of ^*ok\* may be returned:
.INDEX ^^Basic magnetic tape routines> input> MTISNS> condition codes

.LM +18
.P -18
LSL____NORMAL#####-#success#-#tape characteristics sensed successfully
.I -18
LSL____SYSERR#####-#failure#-#some other error occurred - the system error 
code is in MTIERR
.LM -18

.PAGE

.HL 1 ^&^^Output_ routines\&
.INDEX ^^Basic magnetic tape routines> output 

.HL 2 ^^^&MTONIT_ -_ initialise_ tape\&
.INDEX ^^Basic magnetic tape routines> output> tape initialisation
.INDEX ^^Basic magnetic tape routines> output> MTONIT

.P 5
^*ok = MTONIT( [name], [den], [norew], [type] )\*
.INDEX ^^MTONIT

.LM +30
.P -25
out#-#long####^*ok\*#########LSL____NORMAL if initialisation succeeds,
otherwise see below
.I -25
in##-#char####^*name\*#######the magtape drive to use
.I -25
in##-#integer#^*den\*########tape density (see below)
.I -25
in##-#logical#^*norew\*######if true, don't rewind the tape
.I -25
in##-#long####^*type\*#######the type of controller protocol to use
.LM -30

.P 0
MTONIT initialises the tape drive ^*name\*: (default MTA0) for input, and
assigns a channel to it.

.P 0
If ^*norew\* is false (or absent), then the tape is rewound, positioning it at
BOT. Otherwise, the tape is not moved. Regardless, MTINBL will be set to zero.

.P 0
If ^*den\* is -1 (or absent), then it sets the tape characteristics to 1600 bpi
Phase Encoded. Other possible values are 0 for 800 bpi NRZI, or -2 for 6250
bpi GCR. In previous versions, this argument was just a logical, which
will still work (FALSE = 0, TRUE = -1). Only the bottom two bits of
the number are significant.

.P 0
^*type\* is used to indicate what sort of communications protocol is required
to communicate with the magnetic tape drive:

.LIST "*"
.INDEX ^^Basic magnetic tape routines> output> mounting tape
.LE; If ^*type\* is zero (or absent) then a standard tape drive is assumed,
and the tape is assumed mounted foreign (ie by the DCL command MOUNT/FOREIGN).

.INDEX ^^Basic magnetic tape routines> output> MTONIT> serial interface
.INDEX ^^Basic magnetic tape routines> serial interface
.LE; If ^*type\* is one, then a DIL serial interface controller is assumed.
The tape drive will appear to the VAX as a normal serial port.

.LE; Further values of ^*type\* are reserved for possible future uses.
.END LIST

.P 0
The following values of ^*ok\* may be returned:
.INDEX ^^Basic magnetic tape routines> output> MTONIT> condition codes

.LM +18
.P -18
LSL____NORMAL#####-#success#-#tape initialised successfully
.I -18
LSL____DEVALLOC###-#failure#-#the magtape drive is already allocated to 
another process (MTOERR will contain SS$__DEVALLOC)
.I -18
LSL____NOSUCHDEV##-#failure#-#there is no device with the name specified by
^*name\* (this error may also be given if ^*name\* defaults, but MTA0 does not 
exist). Note that this error will also be given if ^*name\* does not make 
sense as a device name. MTOERR will give a more precise system error,
describing the problem.
.I -18
LSL____SYSERR#####-#failure#-#some other error occurred - the system error 
code is in MTOERR
.LM -18

.TP 10
.HL 2 ^^^&MTORWD_ -_ rewind_ magtape\&
.INDEX ^^Basic magnetic tape routines> output> rewind magnetic tape
.INDEX ^^Basic magnetic tape routines> output> MTORWD

.P 5
^*ok = MTORWD()\*
.INDEX ^^MTORWD

.LM +30
.P -25
out#-#long####^*ok\*#########LSL____NORMAL if the rewind succeeds, otherwise 
see below
.LM -30

.P 0
MTORWD rewinds the tape to BOT. MTONBL is set to zero.

.P 0
The following values of ^*ok\* may be returned:
.INDEX ^^Basic magnetic tape routines> output> MTORWD> condition codes

.LM +18
.P -18
LSL____NORMAL#####-#success#-#tape rewound successfully
.I -18
LSL____SYSERR#####-#failure#-#some other error occurred - the system error 
code is in MTOERR
.LM -18

.HL 2 ^^^&MTOWRB_ -_ write_ block\&
.INDEX ^^Basic magnetic tape routines> output> MTOWRB

.P 5
^*ok = MTOWRB( buffer, length )\*
.INDEX ^^MTOWRB

.LM +30
.P -25
out#-#long####^*ok\*#########LSL____NORMAL if the write succeeds, otherwise 
see below
.I -25
in##-#byte####^*buffer\*#####buffer of data to write to the tape
.I -25
in##-#long####^*length\*#####number of bytes of data to write
.LM -30

.P 0
MTOWRB writes a block of length ^*length\* to the magtape from ^*buffer\*.
Before output, it preserves ^*length\* in MTOLST, and after output it
increments MTONBL, and clears MTOPTR. These latter are regardless of success
or failure. 

.INDEX ^^Basic magnetic tape routines> output> MTOWRB> block length restriction
.P 0
Note that it is not possible to write a block of less than 14 bytes, due to 
physical limitations of the tape drive - any such blocks on the tape are 
ignored as noise. An attempt to do such will result in the routine failing 
with LSL____SYSERR, and a bad parameter value error in MTOERR.

.P 0
The following values of ^*ok\* may be returned:
.INDEX ^^Basic magnetic tape routines> output> MTOWRB> condition codes

.LM +18
.P -18
LSL____NORMAL#####-#success#-#block written successfully
.I -18
LSL____ENDOFTAPE##-#error#-#returned if writing the block causes the tape to 
be positioned past the EOT, or if the tape was already there before the write.
Part of the block may have been written.
.I -18
LSL____SYSERR#####-#failure#-#some other error occurred - the system error 
code is in MTOERR
.LM -18

.HL 2 ^^^&MTOEOF_ -_ write_ tapemark\&
.INDEX ^^Basic magnetic tape routines> output> write tapemark
.INDEX ^^Basic magnetic tape routines> output> MTOEOF

.P 5
^*ok = MTOEOF()\*
.INDEX ^^MTOEOF

.LM +30
.P -25
out#-#long####^*ok\*#########LSL____NORMAL if the write succeeds, otherwise 
see below
.LM -30

.P 0
MTOEOF writes a tape mark. It increments MTONBL, whether it succeeds or not.

.P 0
The following values of ^*ok\* may be returned:
.INDEX ^^Basic magnetic tape routines> output> MTOEOF> condition codes

.LM +18
.P -18
LSL____NORMAL#####-#success#-#tapemark written successfully
.I -18
LSL____ENDOFTAPE##-#error#-#returned if writing the tapemark causes the tape to 
be positioned past the EOT, or if the tape was already there before the write.
.I -18
LSL____SYSERR#####-#failure#-#some other error occurred - the system error 
code is in MTOERR
.LM -18

.HL 2 ^^^&MTOSPC_ -_ Space_ backwards/forwards\&
.INDEX ^^Basic magnetic tape routines> output> space backwards or forwards
.INDEX ^^Basic magnetic tape routines> output> MTOSPC

.P 5
^*ok = MTOSPC( blkno )\*
.INDEX ^^MTOSPC
.LM +30
.P -25
out#-#long####^*ok\*#########LSL____NORMAL if the blocks are skipped 
successfully, otherwise see below
.I -25
in##-#long####^*blkno\*######number of blocks to space forwards
.LM -30

.P 0
MTOSPC causes the write head to space forwards by ^*blkno\* blocks. If
^*blkno\* is negative, then it spaces backwards. The value of MTONBL is
adjusted accordingly, whether the routine succeeds or not. 

.P 0
The following values of ^*ok\* may be returned:
.INDEX ^^Basic magnetic tape routines> output> MTOSPC> condition codes

.LM +18
.P -18
LSL____NORMAL#####-#success#-#tape moved successfully
.I -18
LSL____ENDOFTAPE##-#error#-#returned if either EOT (moving forwards) or BOT 
(moving backwards) is found
.I -18
LSL____ENDOFVOL###-#error#-#returned if two consecutive tapemarks are found
(moving forwards only). The tape remains positioned between the tapemarks, and 
MTOSPC may not be used to space past the second tapemark.
.I -18
LSL____SYSERR#####-#failure#-#some other error occurred - the system error 
code is in MTOERR
.LM -18


.HL 2 ^^^&MTOBCK_ -_ Space_ backwards_ one_ block\&
.INDEX ^^Basic magnetic tape routines> output> backspace one block
.INDEX ^^Basic magnetic tape routines> output> MTOBCK

.P 5
^*ok = MTOBCK()\*
.INDEX ^^MTOBCK

.LM +30
.P -25
out#-#word####^*ok\*#########as for MTOSPC
.LM -30

.INDEX ^^Basic magnetic tape routines> output> MTOBCK> condition codes
.P 0
MTOBCK causes the write head to move backwards by one block. It is identical 
to a call of MTOSPC(-1).

.HL 2 ^^^&MTOEOV_ -_ find_ end_ of_ volume\&
.INDEX ^^Basic magnetic tape routines> output> find end of volume
.INDEX ^^Basic magnetic tape routines> output> MTOEOV

.P 0
^*NOTE\* that this routine does not ^&write\& end of volume!

.P 5
^*ok = MTOEOV()\*
.INDEX ^^MTOEOV

.LM +30
.P -25
out#-#long####^*ok\*#########LSL____NORMAL if end of volume is reached, 
otherwise see below
.LM -30

.P 0
MTOEOV causes the write head to space over blocks until the end of volume is
reached. 

.INDEX ^^Basic magnetic tape routines> output> tape marks
.P 0
This is considered to be marked by two consecutive tapemarks, and the 
tape is left positioned between the two tapemarks. Note that another call of 
MTOEOV will return (successfully) immediately.

.P 0
MTONBL is incremented for each block read in this process.

.P 0
The following values of ^*ok\* may be returned:
.INDEX ^^Basic magnetic tape routines> output> MTOEOV> condition codes

.LM +18
.P -18
LSL____NORMAL#####-#success#-#end of volume found successfully
.I -18
LSL____ENDOFTAPE##-#error#-#returned if either EOT (moving forwards) or BOT 
(moving backwards) is found
.I -18
LSL____SYSERR#####-#failure#-#some other error occurred - the system error 
code is in MTOERR
.LM -18


.HL 2 ^^^&MTORDB_ -_ read_ block\&
.INDEX ^^Basic magnetic tape routines> output> read block
.INDEX ^^Basic magnetic tape routines> output> MTORDB

.P 5
^*ok = MTORDB( buffer, length, [bytcnt] )\*
.INDEX ^^MTORDB

.LM +30
.P -25
out#-#long####^*ok\*#########LSL____NORMAL if the read succeeds, otherwise 
see below
.I -25
out#-#byte####^*buffer\*#####a byte buffer to receive data from the tape
.I -25
in##-#long####^*length\*#####the maximum number of bytes to read into buffer
.I -25
out#-#long####^*bytcnt\*#####the number of bytes actually read into buffer
.LM -30

.P 0
MTORDB reads the next block from the tape, of maximum length ^*length\* into
the user specified byte buffer ^*buffer\*. The number of bytes actually read
is returned in ^*bytcnt\*. 

.INDEX ^^Basic magnetic tape routines> output> MTORDB> block length restrictions
.P 0
Note that it is not possible to read a block of ^*length\* less than 14 bytes, 
due to physical limitations of the tape drive - any such blocks on the tape
are ignored as noise 

.P 0
MTORDB increments MTONBL, whether it succeeds or not.

.P 0
The following values of ^*ok\* may be returned:
.INDEX ^^Basic magnetic tape routines> output> MTORDB> condition codes

.LM +18
.P -18
LSL____NORMAL#####-#success#-#block read successfully
.I -18
LSL____BUFOVFLW###-#error#-#the block on the tape was too large to fit into
^*buffer\*. The first ^*length\* bytes are transferred, and ^*bytcnt\* is set 
to the actual length of the block on the tape.
.I -18
LSL____EOF########-#error#-#end of file - this is returned if a tapemark is 
read, or if the EOT marker is found. No data will be transferred to
^*buffer\*, and ^*bytcnt\* will be zero. Note, however, that MTINBL will still
be incremented. 
.I -18
LSL____SYSERR#####-#failure#-#some other error occurred - the system error 
code is in MTOERR
.I -18
LSL____MISSARGS###-#failure#-#one of the mandatory arguments is missing
.LM -18

.TP 10
.HL 2 ^^^&MTOSNS_ -_ sense_ characteristics\&
.INDEX ^^Basic magnetic tape routines> output> MTOSNS
.INDEX ^^Basic magnetic tape routines> output> sense characteristics

.P 5
^*ok = MTOSNS(result)\&\*
.INDEX ^^MTOSNS
.LM +30
.P -25
out#-#long####^*ok\*#########LSL____NORMAL if the sense succeeds, otherwise 
see below
.I -25
out#-#long####^*result\*#####current tape characteristics
.LM -30

.P 0
Senses the tape characteristics and returns them in ^*result\*. See the 
appropriate chapter of the VMS I/O systems manuals for how to interpret
^*result\*

.P 0
The following values of ^*ok\* may be returned:
.INDEX ^^Basic magnetic tape routines> output> MTOSNS> condition codes

.LM +18
.P -18
LSL____NORMAL#####-#success#-#sense performed successfully
.I -18
LSL____SYSERR#####-#failure#-#some other error occurred - the system error 
code is in MTOERR
.LM -18
