.SUBTITLE MESSAGES (INFORMATIONAL)

.!******************************************************************************
.PAGE
^*--------------------------------------------------------------------------------\*
.HL     2 ^^^*MESSAGES (INFORMATIONAL)\*

These   messages  give information   only,    and require no
immediate action by  the  user.  They  are  used to  provide
information on  the  current  state  of the  program, or  to
supply explanatory  information in support  of  a warning or
error message.

.LM +4

.NOJUSTIFY;.TP 10;.P -4
COMCLO, closed output command file
.JUSTIFY

.P0; ^*Explanation:\*
This message is output if /LOG has been specified.
.P0; ^*User action:\*
None.

.NOJUSTIFY;.TP 10;.P -4
COMOPN, opened output command file "'file-spec'"
.JUSTIFY

.P0; ^*Explanation:\*
This message is output if /LOG has been specified.
.P0; ^*User action:\*
None.

.NOJUSTIFY;.TP 10;.P -4
CONVERT, converting runoff workfile to indexed form
.JUSTIFY

.P0; ^*Explanation:\*
When creating data for a .RNO file, NEWMSG assembles the message texts in
a sequential file which is then converted to an indexed file, so that the
messages may be accessed in alphabetical order. If /LOG is specified, then
this message is output before performing the transformation.
.P0; ^*User action:\*
None.

.NOJUSTIFY;.TP 10;.P -4
CONVERTED, 'integer' message records converted
.JUSTIFY

.P0; ^*Explanation:\*
This message follows the CONVERT message, if /LOG has been specified
.P0; ^*User action:\*
None.

.NOJUSTIFY;.TP 10;.P -4
CRECOM, writing DCL command file to use MESSAGE and GENPAR
.JUSTIFY

.P0; ^*Explanation:\*
If /LOG is specified, then this message is output before NEWMSG creates the
DCL command file that can be used to run MESSAGE to generate the .PROMSG__OBJ
message object file, and to compile, link and run GENPAR.FOR
.P0; ^*User action:\*
None.

.NOJUSTIFY;.TP 10;.P -4
CREFOR, writing FORTRAN program to generate parameter files
.JUSTIFY

.P0; ^*Explanation:\*
If /LOG is specified, then this message is output before NEWMSG creates the
FORTRAN program source GENPAR.FOR
.P0; ^*User action:\*
None.

.NOJUSTIFY;.TP 10;.P -4
EXCEPTION, rejected records are listed in "'file-spec'"
.JUSTIFY

.P0; ^*Explanation:\*
This message is output after the CONVERROR message, to indicate the name
of the file which contains a list of the runoff workfile records that could
not be converted to indexed form.
.P0; ^*User action:\*
As for the CONVERROR message.

.NOJUSTIFY;.TP 10;.P -4
FORCLO, closed output FORTRAN file
.JUSTIFY

.P0; ^*Explanation:\*
This message is output if /LOG has been specified.
.P0; ^*User action:\*
None.

.NOJUSTIFY;.TP 10;.P -4
FOROPN, opened output FORTRAN file "'file-spec'"
.JUSTIFY

.P0; ^*Explanation:\*
This message is output if /LOG has been specified.
.P0; ^*User action:\*
None.

.NOJUSTIFY;.TP 10;.P -4
IDXCLO, closed indexed runoff workfile
.JUSTIFY

.P0; ^*Explanation:\*
This message is output if /LOG has been specified.
.P0; ^*User action:\*
None.

.NOJUSTIFY;.TP 10;.P -4
IDXDEL, deleted indexed runoff workfile
.JUSTIFY

.P0; ^*Explanation:\*
This message is output if /LOG has been specified.
.P0; ^*User action:\*
None.

.NOJUSTIFY;.TP 10;.P -4
IDXOPN, opened indexed runoff workfile "'file-spec'"
.JUSTIFY

.P0; ^*Explanation:\*
This message is output if /LOG has been specified, when the indexed runoff
workfile is being opened for read.
.P0; ^*User action:\*
None.

.NOJUSTIFY;.TP 10;.P -4
LINENO, in line 'integer' of the input message file
.JUSTIFY

.P0; ^*Explanation:\*
This message is output after a warning or error message to indicate on which
line of the input message file an error occurred.
.P0; ^*User action:\*
Depends upon the preceding message.

.NOJUSTIFY;.TP 10;.P -4
MESCLO, closed  input message file
.JUSTIFY

.P0; ^*Explanation:\*
This message is output if /LOG has been specified.
.P0; ^*User action:\*
None.

.NOJUSTIFY;.TP 10;.P -4
MESOPN, opened  input message file "'file-spec'"
.JUSTIFY

.P0; ^*Explanation:\*
This message is output if /LOG has been specified.
.P0; ^*User action:\*
None.

.NOJUSTIFY;.TP 10;.P -4
MESSAG, for the message with ident "'ident'"
.JUSTIFY

.P0; ^*Explanation:\*
This message is output after a warning or error message to indicate which
message an error occurred with.
.P0; ^*User action:\*
Depends upon the preceding message.

.NOJUSTIFY;.TP 10;.P -4
NOTEXT2, this one doesn't - it only uses the second one
.JUSTIFY

.P0; ^*Explanation:\*
This message is output after the OLDFORM message.
.P0; ^*User action:\*
See the OLDFORM message.

.NOJUSTIFY;.TP 10;.P -4
OLDFORM, the old NEWMSG program used two texts for each message
.JUSTIFY

.P0; ^*Explanation:\*
If an old form NEWMESSAGE file is processed, it may contain two text fields
for each message. The new .MES file syntax is not compatible with this form,
and will only read the first message text. Unfortunately, in the old form
files, it is the second text that is the one needed. To allow the file to be
processed with NEWMSG, remove the first message text of each pair.
.P0; ^*User action:\*
Change the message definition file - in each case where message descriptions
have two message texts, retain the second one (which should be the one with
EXPAND sequences in it).

.NOJUSTIFY;.TP 10;.P -4
PROCLO, closed output message file
.JUSTIFY

.P0; ^*Explanation:\*
This message is output if /LOG has been specified.
.P0; ^*User action:\*
None.

.NOJUSTIFY;.TP 10;.P -4
PROOPN, opened output message file "'file-spec'"
.JUSTIFY

.P0; ^*Explanation:\*
This message is output if /LOG has been specified.
.P0; ^*User action:\*
None.

.NOJUSTIFY;.TP 10;.P -4
READING, reading REPLACE clause 'integer'
.JUSTIFY

.P0; ^*Explanation:\*
This message may follow the BADREPL error message. It
indicates that the error was in the n'th REPLACE clause in the REPLACE
command for that message.
.P0; ^*User action:\*
Check that the escape clause has correct syntax. It should be
of the form
.blank
.p10; %_<thing> = \ _<text_> \

.NOJUSTIFY;.TP 10;.P -4
RNOCLO, closed output runoff file
.JUSTIFY

.P0; ^*Explanation:\*
This message is output if /LOG has been specified.
.P0; ^*User action:\*
None.

.NOJUSTIFY;.TP 10;.P -4
RNOCRE, opened output runoff file "'file-spec'"
.JUSTIFY

.P0; ^*Explanation:\*
This message is output if /LOG has been specified.
.P0; ^*User action:\*
None.

.NOJUSTIFY;.TP 10;.P -4
SEQCLO, closed sequential runoff workfile
.JUSTIFY

.P0; ^*Explanation:\*
This message is output if /LOG has been specified.
.P0; ^*User action:\*
None.

.NOJUSTIFY;.TP 10;.P -4
SEQDEL, deleted sequential runoff workfile
.JUSTIFY

.P0; ^*Explanation:\*
This message is output if /LOG has been specified.
.P0; ^*User action:\*
None.

.NOJUSTIFY;.TP 10;.P -4
SEQOPN, opened sequential runoff workfile "'file-spec'"
.JUSTIFY

.P0; ^*Explanation:\*
This message is output if /LOG has been specified, when the sequential runoff
workfile is being created.
.P0; ^*User action:\*
None.

.NOJUSTIFY;.TP 10;.P -4
SORTING, sorting messages
.JUSTIFY

.P0; ^*Explanation:\*
Before creating a .RNO file, NEWMSG sorts the messages into
order, by severity and then by alphabetical order of their idents. If /LOG
has been specified, then this message is output before sorting.
.P0; ^*User action:\*
None.

.NOJUSTIFY;.TP 10;.P -4
TRUNCAT, when used as an output name, it will be truncated to "'string'"
.JUSTIFY

.P0; ^*Explanation:\*
This message is output after the NAMTOOLNG message.
.P0; ^*User action:\*
See the NAMTOOLNG message.

.NOJUSTIFY;.TP 10;.P -4
UNEXPCH, unexpected character "'char'" instead of "'char'"
.JUSTIFY

.P0; ^*Explanation:\*
This message may follow the BADREPL error message, to explain
it.
.P0; ^*User action:\*
Correct the error as reported.
.LM -4
.SUBTITLE MESSAGES (WARNING)

.!******************************************************************************
.PAGE
^*--------------------------------------------------------------------------------\*
.HL     2 ^^^*MESSAGES (WARNING)\*

These messages are  output when an error has   occurred that
can be corrected immediately by the user or that the program
will attempt to overcome.

.LM +4

.NOJUSTIFY;.TP 10;.P -4
ERRDEL, error deleting file "'file-spec'"
.JUSTIFY

.P0; ^*Explanation:\*
This message is output if an error occurs in deleting a file. The program
will continue.
.P0; ^*User action:\*
Since the program has not deleted the file, the user should remember to do so.
Further action may be suggested by the system message following this one, 
describing why the file could not be deleted.

.NOJUSTIFY;.TP 10;.P -4
MISSEXPL, 'integer' messages had no EXPLANATION text
.JUSTIFY

.P0; ^*Explanation:\*
This message is output at the end of the program run, and is self-explanatory.
.P0; ^*User action:\*
Insert the required texts in the message file.

.NOJUSTIFY;.TP 10;.P -4
MISSUSER, 'integer' messages had no USERACTION text
.JUSTIFY

.P0; ^*Explanation:\*
This message is output at the end of the program run, and is self-explanatory.
.P0; ^*User action:\*
Insert the required texts in the message file.

.NOJUSTIFY;.TP 10;.P -4
NOEXPL, no explanatory text following EXPLANATION
.JUSTIFY

.P0; ^*Explanation:\*
The text field after the EXPLANATION command was empty.
.P0; ^*User action:\*
Insert the relevant text into the field.

.NOJUSTIFY;.TP 10;.P -4
NOUSER, no user action text following USERACTION
.JUSTIFY

.P0; ^*Explanation:\*
The text field after the USERACTION command was empty.
.P0; ^*User action:\*
Insert the relevant text into the field.

.NOJUSTIFY;.TP 10;.P -4
READREP, error reading the REPLACE command on line 'integer'
.JUSTIFY

.P0; ^*Explanation:\*
The program could not read that line correctly. An associated
LSLLIB message should explain the problem.
.P0; ^*User action:\*
Depends upon the associated message.

.NOJUSTIFY;.TP 10;.P -4
RUBBISH, found an unexpected ''char'' on line 'integer' - may be an old form file
.JUSTIFY

.P0; ^*Explanation:\*
The specified character was found after the terminating backslash of a
message text.
.P0; ^*User action:\*
Check why the character was there. If it is indeed an old form file, convert 
it to the current specification.
.LM -4
.SUBTITLE MESSAGES (ERROR)

.!******************************************************************************
.PAGE
^*--------------------------------------------------------------------------------\*
.HL     2 ^^^*MESSAGES (ERROR)\*

These  messages indicate an  error in processing  which will
cause  the program to terminate. The most likely  causes are
a   corrupt or otherwise  invalid  input file,  or an  error
related to command line processing and file manipulation.

.LM +4

.NOJUSTIFY;.TP 10;.P -4
BADFACNUM, facility number 'integer' is not in the range 'integer' to 'integer'
.JUSTIFY

.P0; ^*Explanation:\*
Only a certain range of facility numbers is supported. Any numbers below
1025 or above 2047 will not be allowed.
.P0; ^*User action:\*
All facility numbers should have been approved or assigned by the facility 
numbers manager. Do not try to invent your own number - this could cause all
sorts of problems.

.NOJUSTIFY;.TP 10;.P -4
BADHL, header level number 'integer' is not 1 or greater
.JUSTIFY

.P0; ^*Explanation:\*
Runoff header level numbers must be one or greater.
.P0; ^*User action:\*
Run the program again with a sensible number. Note that 1 is the default, and
the most common alternative is 2.

.NOJUSTIFY;.TP 10;.P -4
BADREPL, error in REPLACE clauses for message "'ident'"
.JUSTIFY

.P0; ^*Explanation:\*
One of the REPLACE clauses for this message is not of the form
.blank
.p10; %_<thing_> = \ _<text_> \
.blank
A following message should explain the problem.
.P0; ^*User action:\*
Depends upon the following message.

.NOJUSTIFY;.TP 10;.P -4
CONVCONV, error in CONV$CONVERT - converting runoff workfile
.JUSTIFY

.P0; ^*Explanation:\*
An error occurred when trying to convert the sequential runoff workfile into
an indexed file, so that the .RNO file can be created. This message should
be preceded by a message from the CONVERT utility itself, explaining what
went wrong.
.P0; ^*User action:\*
Dependant upon the associated CONVERT error message.

.NOJUSTIFY;.TP 10;.P -4
CONVERROR, 'integer' message records rejected
.JUSTIFY

.P0; ^*Explanation:\*
This message indicates that some of the records in the sequential runoff
workfile could not be converted to the indexed form. A message from the
CONVERT utility may precede this message, giving more details. The offending
records will have been written to a file for inspection - the EXCEPTION 
message will follow, indicating the name of that file.
.P0; ^*User action:\*
Inspect the original message file, and the exception file. The records in
the exception file ^*should\* be of the form
.blank
	_<severity_> _<type_> _<count_> _<ident_> _<text_>
.blank
where these fields are (respectively) one of S,I,W,E or F, one of M,E or U,
a two digit number, a fifteen character message name and a line of text.
If the record in the exception file is not of this form, then report the
problem, with as many details as possible.

.NOJUSTIFY;.TP 10;.P -4
CONVOPTS, error in CONV$OPTS - passing options to CONVERT
.JUSTIFY

.P0; ^*Explanation:\*
An error occurred  when preparing to  convert  the sequential  runoff
workfile into an indexed file, so that the .RNO  file can be  created.
This message should be preceded by a  message from the CONVERT utility
itself, explaining what went wrong.
.P0; ^*User action:\*
Dependant upon the associated CONVERT error message.

.NOJUSTIFY;.TP 10;.P -4
CONVPASS, error in CONV$PASS - passing filespecs to CONVERT
.JUSTIFY

.P0; ^*Explanation:\*
An error occurred when preparing to convert the sequential runoff
workfile into an indexed file, so that the .RNO file can be created.
This message should be preceded by a message from the CONVERT utility
itself, explaining what went wrong.
.P0; ^*User action:\*
Dependant upon the associated CONVERT error message.

.NOJUSTIFY;.TP 10;.P -4
DELETE, error deleting runoff workfile
.JUSTIFY

.P0; ^*Explanation:\*
After each runoff workfile has been finished with, the program will delete it.
This message is given if that deletion did not work, and should be followed
by a system message from the DELETE utility, explaining what went wrong. The
program will continue.
.P0; ^*User action:\*
Dependant upon the associated DELETE error message.

.NOJUSTIFY;.TP 10;.P -4
DESTN, the destination directory may not include a file name, extension or version number
.JUSTIFY

.P0; ^*Explanation:\*
The /DESTINATION qualifier was used, but the destination specified was not
just a device and directory specification.
.P0; ^*User action:\*
Specify the destination correctly.

.NOJUSTIFY;.TP 10;.P -4
DESTNOD, the destination directory may not include a node name
.JUSTIFY

.P0; ^*Explanation:\*
An attempt was made to use the /DESTINATION qualifier to specify a destination
on another node (i.e_. another computer). This is not supported.
.P0; ^*User action:\*
Create the workfiles on the current node, or move to the remote node and use
the program there.

.NOJUSTIFY;.TP 10;.P -4
ERROPN, error opening file "'file-spec'"
.JUSTIFY

.P0; ^*Explanation:\*
An error occurred when trying to open the specified file. This message should
be followed by an LSLLIB or FORTRAN error message indicating what the problem
was.
.P0; ^*User action:\*
Dependant upon the associated error message.

.NOJUSTIFY;.TP 10;.P -4
FACNAMLEN, facility name may not be longer than 'integer' characters
.JUSTIFY

.P0; ^*Explanation:\*
The facility name specified with the /NAME qualifier was too long.
.P0; ^*User action:\*
Specify a facility name which is not too long.

.NOJUSTIFY;.TP 10;.P -4
FACPRELEN, facility prefix may not be longer than 'integer' characters
.JUSTIFY

.P0; ^*Explanation:\*
The facility prefix specified with the /PREFIX qualifier was too long.
.P0; ^*User action:\*
Specify a facility prefix which is not too long.

.NOJUSTIFY;.TP 10;.P -4
FINDEXP, error finding explanatory text line with key "'string'"
.JUSTIFY

.P0; ^*Explanation:\*
When creating the .RNO file, the lines of  explanatory  text for each
message are looked up in the indexed runoff workfile using appropriate
keys. This message indicates that something  has gone  wrong with this
process. It should be  followed  by an LSLLIB  message explaining what
the problem is.
.P0; ^*User action:\*
Dependant upon the associated error message.

.NOJUSTIFY;.TP 10;.P -4
FINDKEY, error finding message text for message "'ident'"
.JUSTIFY

.P0; ^*Explanation:\*
When creating the .RNO file, the message texts are looked up in the indexed
runoff workfile. This message indicates that something has gone wrong with this
process. It should be  followed  by an LSLLIB  message explaining what
the problem is.
.P0; ^*User action:\*
Dependant upon the associated error message.

.NOJUSTIFY;.TP 10;.P -4
IDENTLEN, ident "'string'" truncated to %N characters
.JUSTIFY

.P0; ^*Explanation:\*
The identification field for a message was too long, and has been truncated.
.P0; ^*User action:\*
Edit the original message file, and use a shorter ident for that message.

.NOJUSTIFY;.TP 10;.P -4
MAXMESS, cannot store more than 'integer' messages
.JUSTIFY

.P0; ^*Explanation:\*
The program uses an internal buffer to store message idents, and thus has a
limit on how many messages it can store. This message indicates that the
message file being processed contained too many messages.
.P0; ^*User action:\*
Either use fewer messages, or submit a modification request for the limit on
the number of messages to be increased.

.NOJUSTIFY;.TP 10;.P -4
MESSLEN, message text is longer than 'integer' characters
.JUSTIFY

.P0; ^*Explanation:\*
The text field for a message was too long, and has been truncated.
.P0; ^*User action:\*
Edit the original messages file, and use a shorter text for the message.

.NOJUSTIFY;.TP 10;.P -4
NAMTOOLNG, filename is longer than 'integer' characters
.JUSTIFY

.P0; ^*Explanation:\*
The filename specified for the message file is used to work out the output
name for the parameter and .RNO files. This is normally obtained by adding
"MSG" to the end of the specified name. However, if the filename is so long
that adding "MSG" would generate an illegal name, it will be truncated
sufficiently to allow the appendage to be added. This message is thus followed
by the TRUNCAT message.
.P0; ^*User action:\*
None.

.NOJUSTIFY;.TP 10;.P -4
NOFACNUM, facility number must be specified - use /NUMBER
.JUSTIFY

.P0; ^*Explanation:\*
The facility number identifies the utility producing the messages, and must
always be specified.
.P0; ^*User action:\*
Specify the facility number using the /NUMBER qualifier. Facility numbers are
assigned by the faciltiy number manager, who should be consulted before you
create the messages for a new utility.

.NOJUSTIFY;.TP 10;.P -4
NOIDENT, no ident found for message
.JUSTIFY

.P0; ^*Explanation:\*
As it says, the identification field was missing for a message in the
input message definition file.
.P0; ^*User action:\*
Edit the message file to add the correct ident.

.NOJUSTIFY;.TP 10;.P -4
NOREPL, unable to replace string "'text'" in message "'ident'"
.JUSTIFY

.P0; ^*Explanation:\*
The program could not find the specified EXPAND sequence in the message
text, and was thus not able to replace it, or an error occurred in the
replacement. In the latter case, a system error message will be output to
explain the problem. The program will abandon any further replacements for this
message text.
.P0; ^*User action:\*
Check the REPLACE clause for this message.

.NOJUSTIFY;.TP 10;.P -4
NOTEXT, no message text found
.JUSTIFY

.P0; ^*Explanation:\*
As it says, the message text was missing for a message in the
input message definition file.
.P0; ^*User action:\*
Edit the message file to add the correct text.

.NOJUSTIFY;.TP 10;.P -4
NULLMESS, message text has zero length
.JUSTIFY

.P0; ^*Explanation:\*
The backslash ("\") delimitors for the message text were found in the message
file, but there was nothing between them. Blank messages are not allowed.
.P0; ^*User action:\*
If the message text is truly missing, edit the message file to insert the
correct text. If you actually want a blank message text, then insert a space
character between the backslash delimitors - this is the best approximation
available.

.NOJUSTIFY;.TP 10;.P -4
PARSE, error in internal parsing of the destination
.JUSTIFY

.P0; ^*Explanation:\*
An error has occurred in trying to parse the destination for work files
as by /DESTINATION. This will be followed by an LSLLIB message giving more
information on the problem.
.P0; ^*User action:\*
Dependant upon the associated error message.

.NOJUSTIFY;.TP 10;.P -4
READERR, error reading line 'integer' from input message file
.JUSTIFY

.P0; ^*Explanation:\*
This message will be followed by an LSLLIB message giving more information
on the problem.
.P0; ^*User action:\*
Dependant upon the associated error message.

.NOJUSTIFY;.TP 10;.P -4
READEXP, error reading message text line with key "'string'"
.JUSTIFY

.P0; ^*Explanation:\*
This message indicates an error in reading a mesage text from the indexed
runoff workfile .It will be followed by an LSLLIB message giving more
information on the problem.
.P0; ^*User action:\*
Dependant upon the associated error message.

.NOJUSTIFY;.TP 10;.P -4
READIDX, error reading message text for message "'ident'"
.JUSTIFY

.P0; ^*Explanation:\*
This message will be followed by an LSLLIB message giving more information
on the problem.
.P0; ^*User action:\*
Dependant upon the associated error message.

.NOJUSTIFY;.TP 10;.P -4
READREPX, error reading message REPLACE line with key "'string'"
.JUSTIFY

.P0; ^*Explanation:\*
This message indicates an error in reading a mesage REPLACE clause from the
indexed
runoff workfile .It will be followed by an LSLLIB message giving more
information on the problem.
.P0; ^*User action:\*
Dependant upon the associated error message.

.NOJUSTIFY;.TP 10;.P -4
TOOLONG, line 'integer' of message file is longer than 'integer' characters
.JUSTIFY

.P0; ^*Explanation:\*
No line of the input message file may be longer than 132 characters. This is
to avoid problems with FORTRAN output when outputting RUNOFF files.
.P0; ^*User action:\*
Split the offending line into two shorter lines.

.NOJUSTIFY;.TP 10;.P -4
TRIBRAC, triangular brackets are not allowed in message texts
.JUSTIFY

.P0; ^*Explanation:\*
The characters "<" and ">" are used to delimit message texts internally
within the .PROMSG file generated by the program. They are thus not allowed
within the actual message text itself.
.P0; ^*User action:\*
Replace the offending characters by a description of them.

.NOJUSTIFY;.TP 10;.P -4
VERSION, version numbers are not allowed
.JUSTIFY

.P0; ^*Explanation:\*
When specifying the input message file, a version number may not be specified.
.P0; ^*User action:\*
Do not specify a version number.
.LM -4
.SUBTITLE MESSAGES (FATAL)

.!******************************************************************************
.PAGE
^*--------------------------------------------------------------------------------\*
.HL     2 ^^^*MESSAGES (FATAL)\*

These messages indicate  a severe   error in processing,  or
some form of system failure, which has caused the program to
terminate.

.LM +4

.NOJUSTIFY;.TP 10;.P -4
BADCMD, unrecognised command number 'integer' (command "'string'")
.JUSTIFY

.P0; ^*Explanation:\*
The message severities, and the EXPLANATION and USERACTION keywords, are
read as LSLLIB commands. This message indicates that the part of the program
which interprets these commands is not working correctly.
.P0; ^*User action:\*
Report this problem as a bug.

.NOJUSTIFY;.TP 10;.P -4
BUG, please report the following message - it is a bug
.JUSTIFY

.P0; ^*Explanation:\*
As it says.
.P0; ^*User action:\*
As it says.

.NOJUSTIFY;.TP 10;.P -4
STATE, unknown internal state in READ____MESSAGES
.JUSTIFY

.P0; ^*Explanation:\*
The routines that read the message file have become confused as to what it
is that they are currently reading.
.P0; ^*User action:\*
Report this problem as a bug.

.NOJUSTIFY;.TP 10;.P -4
UNKSEVLET, unrecognised severity mnemonic "'string'"
.JUSTIFY

.P0; ^*Explanation:\*
When retrieving a message from the indexed runoff workfile, the program has
not recognised the severity code for the message.
.P0; ^*User action:\*
Report this problem as a bug, including the runoff workfiles.
.LM -4
.SUBTITLE MESSAGES (OTHER)

.!******************************************************************************
.PAGE
^*--------------------------------------------------------------------------------\*
.HL     2 ^^^*MESSAGES (OTHER)\*

In addition to the above messages which are generated by the
program itself,   other messages  may  be   produced by  the
command line interpreter (CLI) and by  Laser-Scan libraries.
In particular, messages may be  generated by the IFF library
and  by the  Laser-Scan  I/O library,  LSLLIB.  IFF  library
messages are introduced by   '%IFF' and are  documented in
the IFF library users' guide. In most cases IFF errors will
be due to a corrupt input file, and this should be the first
area of investigation. If the  cause of  the error cannot be
traced by the  user, and  Laser-Scan are consulted, then the
output  file should  be  preserved to  facilitate diagnosis.
LSLLIB  messages  are  introduced  by    '%LSLLIB' and are
generally self-explanatory.  They are  used  to  explain the
details of program generated errors.
