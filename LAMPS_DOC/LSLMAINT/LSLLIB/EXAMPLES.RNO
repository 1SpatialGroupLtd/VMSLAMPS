.page
.p0;^*--------------------------------------------------------------------------------\*
.hl 1 ^^^*EXAMPLES - THE MESSAGE DEFINITION FILE\*

.p0; The following is an extract from the message definition file used to
produce the messages for NEWMSG. The result of running NEWMSG/RUNOFF on
the full file (followed by suitable editing of the actual message texts)
can be seen in the MESSAGE documentation for NEWMSG, below.

.blank
.literal
!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
! E R R O R  messages
!
ERROR	BADFACNUM	\facility number %N is not in the range %N to %N\
EXPLANATION
\Only a certain range of facility numbers is supported. Any numbers below
1025 or above 2047 will not be allowed.\
USERACTION
\All facility numbers should have been approved or assigned by the facility 
numbers manager. Do not try to invent your own number - this could cause all
sorts of problems.\

ERROR	CONVCONV	\error in CONV$CONVERT - converting runoff workfile\
EXPLANATION
\An error occurred when trying to convert the sequential runoff workfile into
an indexed file, so that the .RNO file can be created. This message should
be preceded by a message from the CONVERT utility itself, explaining what
went wrong.\
USERACTION	\Dependant upon the associated CONVERT error message.\

ERROR		CONVERROR	\%I4 message records rejected\
EXPLANATION
\This message indicates that some of the records in the sequential runoff
workfile could not be converted to the indexed form. A message from the
CONVERT utility may precede this message, giving more details. The offending
records will have been written to a file for inspection - the EXCEPTION 
message will follow, indicating the name of that file.\
USERACTION
\Inspect the original message file, and the exception file. The records in
the exception file ^*should\\* be of the form
_.blank
	_<severity_> _<type_> _<count_> _<ident_> _<text_>
_.blank
where these fields are (respectively) one of S,I,W,E or F, one of M,E or U,
a two digit number, a fifteen character message name and a line of text.
If the record in the exception file is not of this form, then report the
problem, with as many details as possible.\
.end literal


.page
.p0;^*--------------------------------------------------------------------------------\*
.hl 1 ^^^*EXAMPLES - USING THE PROGRAM\*

.nofill
.keep

$ ^*NEWMSG NEWMSG /NUMBER=1026/RUNOFF_<CR_>\*
Message file:     NEWMSG.MES
Facility number:  1026
Facility name:    NEWMSG
Facility prefix:  NEWMSG____
Generating output for FORTRAN RUNOFF
Generating output for message object module
$ ^*SET VERIFY_<CR_>\*
$ ^*@NEWMSG.TEMP__COM_<CR_>\*
$!
$! Temporary command file generated by NEWMSG
$!
$	on error then continue
$!
$	adc  SYS$DISK:[]NEWMSG.PROMSG__TEMP/co=SYS$DISK:[]NEWMSG.PROMSG
$	message/nolist/obj=SYS$DISK:[]NEWMSG.PROMSG__OBJ  SYS$DISK:[]NEWMSG.PROMSG__TEMP
$	if .not.$status then goto had__an__error
$	pvv  SYS$DISK:[]NEWMSG.PROMSG__OBJ
$	purge/nolog  SYS$DISK:[]NEWMSG.PROMSG__OBJ
$	delete/noconfirm  SYS$DISK:[]NEWMSG.PROMSG;
$	delete/noconfirm  SYS$DISK:[]NEWMSG.PROMSG__TEMP;
$	delete/noconfirm  ADC.IDE;
$!
$	fortran/nolist  GENPAR
$	if .not.$status then goto had__an__error
$	link/nomap	GENPAR,SYS$DISK:[]NEWMSG.PROMSG_OBJ
$	if .not.$status then goto had__an__error
$	run  GENPAR
$!
$	purge/nolog  SYS$DISK:[]NEWMSGMSG.PAR
$!
$	delete/noconfirm  GENPAR.FOR;
$	delete/noconfirm  GENPAR.OBJ;
$	delete/noconfirm  GENPAR.EXE;
$!
$! ****************************************************
$!
$	delete/noconfirm  TJI_MES:[TEST]NEWMSG.TEMP__COM;1
$	exit 1
$ ^*DIR_<CR_>\*

Directory LSL$SOURCE__ROOT:[LSLMAINT.LSLLIB.MESSAGE]

NEWMSG.PROMSG__OBJ;2
                         12/12      28-JUL-1987 15:17  [LSL,TONY]          
NEWMSGMSG.PAR;1          15/16      28-JUL-1987 15:18  [LSL,TONY]          
NEWMSGMSG.RNO;1          46/48      28-JUL-1987 15:17  [LSL,TONY]          

Total of 6 files, 76/116 blocks.
$
.fill
.nokeep
.lm +10
.p0; This example shows the use of NEWMSG to generate its own message
definitions. It has not specified which parameter files are required, and
has thus obtained .PAR files for inclusion in FORTRAN sources. The command
file NEWMSG.TEMP__COM has then been obeyed, and DIRECTORY used to show what
files have been created. Using NEWMSG and then obeying the command file
produced in this manner is the normal way that the message utility would
be used in command files.
.lm -10


.keep
.nofill
$ ^*NEWMSG SMALL /NUMBER=1234/PREFIX=SML____/PARAM=(FORT,C)/LOG_<CR_>\*
Message file:     SMALL.MES
Facility number:  1234
Facility name:    SMALL
Facility prefix:  SML____
Generating output for FORTRAN C
Generating output for message object module
%NEWMSG-I-MESOPN, opened  input message file "SMALL.MES"
%NEWMSG-I-PROOPN, opened output message file "SYS$DISK:[]SMALL.PROMSG"
.SEVERITY INFORMATIONAL
 SMALL          	<This is SMALL - type HELP for help>
.SEVERITY WARNING      
 PARDON         	<Please type that again, correctly>
 BADVALUE       	<The value %N is not allowed>
.SEVERITY ERROR        
 NOFILE         	<You have not specified a file to SMALLify>
.SEVERITY FATAL        
 BUG            	<Internal error - please report error %S to Laser-Scan>
%NEWMSG-I-MESCLO, closed  input message file
%NEWMSG-I-PROCLO, closed output message file
%NEWMSG-I-FOROPN, opened output FORTRAN file "SYS$DISK:[]GENPAR.FOR"
-NEWMSG-I-CREFOR, writing FORTRAN program to generate parameter files
%NEWMSG-I-FORCLO, closed output FORTRAN file
%NEWMSG-I-COMOPN, opened output command file "SYS$DISK:[]SMALL.TEMP_COM"
-NEWMSG-I-CRECOM, writing DCL command file to use MESSAGE and GENPAR
%NEWMSG-I-COMCLO, closed output command file
$
.fill
.nokeep
.lm +10
.p0; In this example, a message file called SMALL.MES has been read. The
facility prefix has been changed to "SML____", and parameter files for
FORTRAN and C are requested. The /LOG qualifier has been used to produce
extra output describing the progress of the program.
.lm -10


.nofill
.keep
$ ^*NEWMSG_<CR_>\*
_Input message file: SMALL_<CR_>\*
%NEWMSG-E-NOFACNUM, facility number must be specified - use /NUMBER
$
.nokeep
.fill
.lm +10
.p0; In this example, the program has prompted the user for a message
definition file. The user has not specified the facility number for the
messages, and thus the program has aborted.
.lm -10

.nofill
.keep
$ ^*NEWMSG SMALL /NUMBER=1234/RUNOFF/NOPARAM/NOOBJ/LOG_<CR_>\*
Message file:     SMALL.MES
Facility number:  1234
Facility name:    SMALL
Facility prefix:  SMALL____
Generating output for RUNOFF
%NEWMSG-I-MESOPN, opened  input message file "SMALL.MES"
%NEWMSG-I-SEQOPN, opened sequential runoff workfile "SYS$DISK:[]SMALL.TEMP_SEQ"
%NEWMSG-I-MESCLO, closed  input message file
%NEWMSG-I-SEQCLO, closed sequential runoff workfile
%NEWMSG-I-SORTING, sorting messages
%NEWMSG-I-CONVERT, converting runoff workfile to indexed form
%NEWMSG-I-CONVERTED,   15 message records converted
%NEWMSG-I-SEQDEL, deleted sequential runoff workfile
%NEWMSG-I-IDXOPN, opened indexed runoff workfile "SYS$DISK:[]SMALL.TEMP_IDX"
%NEWMSG-I-RNOCRE, opened output runoff file "SYS$DISK:[]SMALLMSG.RNO"
%NEWMSG-I-RNOCLO, closed output runoff file
%NEWMSG-I-IDXDEL, deleted indexed runoff workfile
$
.fill
.nokeep
.lm +10
.p0; In this example, only the runoff file is required. Note the use of both
/NOPARAMETERS and /NOOBJECT to suppress all other files. Also note that,
because /NOOBJECT has been specified, the /LOG does not reflect the message
texts from the file.
.lm -10

.nofill
.keep
$ ^*NEWMSG WRONG /NUMBER=1111/NOLOG_<CR_>\*
%NEWMSG-W-RUBBISH, found an unexpected '\' on line 5 - may be an old form file
-NEWMSG-I-OLDFORM, the old NEWMSG program used two texts for each message
-NEWMSG-I-NOTEXT2, this one doesn't - it only uses the second one
%NEWMSG-W-MISSEXPL,   6 messages had no EXPLANATION text
%NEWMSG-W-MISSUSER,   6 messages had no USERACTION text
$
.nokeep
.fill
.lm +10
.p0; The message file used in this example appears to have included a message
description in the old form. This seems plausible, since six messages are
reported not to have EXPLANATIONs, and six not to have USERACTIONs (in fact,
the same six). Note the use of /NOLOG to suppress the normal informational
output.
.lm -10
