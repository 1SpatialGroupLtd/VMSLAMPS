
.!** set up Qume page format
.LEFT MARGIN  0
.RIGHT MARGIN 80
.PAGE SIZE    60,80

.!* ensure that .NO FILL also retains blank lines
.KEEP

.!* enable the use of ^^^*...\* and * as bolding flags
.ENABLE BOLDING;.FLAGS  BOLD

.!* change the way .HL works
.!*        n1=6        lowest  level to have 'run-in' format
.!*        n2=2        highest level to have title in uppercase - ie 1 & 2 will have
.!*        n4=0        lowest  level not to have section number at left
.!*        n6=0        number of blank lines before header
.STYLE HEADERS 6,2,,0,,0

.!* Set the page layout for double sided copying, ie page numbers at bottom
.!* centre and title switching sides according to odd or even page number
.!.LAYOUT 2,2

.!* ensure that .INDEX entries will be transmitted as they were typed
.XLOWER

.!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
.TITLE ITCHECK - Error checking of IFF heighted data.
.PAGE

.!******************************************************************************
.!*** First page, introduction                                               ***
.!******************************************************************************

.BR
^^^*--------------------------------------------------------------------------------\*
.BR
^^^*MODULE#####ITCHECK\*
.INDEX ITCHECK

.P0
^^^*--------------------------------------------------------------------------------\*
.BR
^^^*DEVELOPED from\*###DTMPREPARE module TCHECK.
.P0
^^^*--------------------------------------------------------------------------------\*
.HL 1 ^^^*FUNCTION\*

.LEFT MARGIN +10

.P 0;ITCHECK is a utility to detect and tabulate errors in vector data.

.BLANK
.LEFT MARGIN -10
^^^*--------------------------------------------------------------------------------\*
.HL 1 ^^^*FORMAT\*
.INDEX ITCHECK> FORMAT
.LEFT MARGIN +10
.P 0;$ ITCHECK
.BLANK
.TEST PAGE 9
.LEFT MARGIN -10
^^^*--------------------------------------------------------------------------------\*
.HL 1 ^^^*PROMPT\*
.LEFT MARGIN +10
.P 0;ITCHECK is command driven. Command input is expected when the following 
prompt is issued:-
.P 0;ITCHECK>
.BLANK
.LEFT MARGIN -10
^^^*--------------------------------------------------------------------------------\*
.PAGE
^^^*--------------------------------------------------------------------------------\*
.HL 1 ^^^*DESCRIPTION\*
.INDEX ITCHECK> DESCRIPTION

.BLANK
^^^*--------------------------------------------------------------------------------\*
.HL 2 ^^^*General\*
.BLANK 1
.LM +8
.P 0;ITCHECK is a utility to detect and tabulate errors in IFF vector data.
It may be used to validate a height value associated with a map feature,
and to check for errors in the form of a feature.  Errors in height or form
may arise from data capture or data editing operations.
.P 0;Typically, the data input for checking will consist of heighted contours
and spot heights, and map features, such as rivers and ridge lines.  These
features are used in the generation of a DTM by modules in the Laser-Scan
package DTMCREATE.  Validating the map data using ITCHECK is an important aid
to controlling the quality and accuracy of the DTM, and in a production
situation, may avoid expensive and time consuming problems, resulting from the
input into the terrain modelling process of incorrectly heighted or malformed
data. 

.P 0;Note, that it is difficult for any utility to detect all possible errors
that may be present in digital data derived from a map.  The quality and
nature of the source document, the data capture system, and in particular the
amount of cartographic 'licence' or enhancement applied in the design of the
map, greatly influence the success of an automated checking procedure. The
ITCHECK tabulation report should, therefore, not be considered an
authoritative statement on the errors present in the file.  The report is a
guide, which will allow a user to effectively investigate areas of potential
error, either in conjunction with a plot of the data, or with a LITES2
guidance file produced by ITCHECK. 

.P 0;The checks performed by ITCHECK are grouped into six categories.  
A single category or a number of categories of checks, may be selected using
the CHECK command.  The following checks are performed in each category:

.P 0;^*Category 1\* Height checks
.LM +4
.P 0;Supplementary contour heights are divisible by the supplementary contour 
interval.
.P 0;Contour heights are divisible by the contour interval.
.P 0;Index contour heights are divisible by the index contour interval.
.P 0;All heights lie within a specified range.
.P 0;Contour values between lower and upper range limits are present.
.P 0;Index contour values between lower and upper range limits are present.
.P 0;Coastline features have zero height.
.P 0;Cliff AC 80 and AC 81 lie within a specified range.
.LM -4
.P 0;^*Category 2\* Link checks
.LM +4
.P 0;Features lie within a map border, as defined by the bounding rectangle
derived from
the control point (CP) entry, or via the BORDER command.
.P 0;Loop features are correctly closed.
.P 0;Connecting line features have the same height.
.P 0;Line features such as contours are connected to two other items.
.LM -4
.TEST PAGE 4
.P 0;^*Category 3\* Intersection checks
.LM +4
.P 0;River features do not cross line features more than once.
.P 0;Line features do not cross other line features.
.LM -4
.P 0;^*Category 4\* Profile height checks
.LM +4
.P 0;The heights of neighbouring features are consistent with the contour 
interval.
.LM -4
.P 0;^*Category 5\* Loop, duplicate points and spot height single coordinate 
checks.
.LM +4
.P 0;Spot heights have a valid CB (one coordinate in CB entry).
.P 0;Line feature ends do not cross.
.P 0;Line features do not contain internal loops. 
.P 0;Line features do not have duplicate points.
.LM -4
.P 0;^*Category 6\* Validity of spot heights checks
.LM +4
.P 0;Spot heights are consistent with neighbouring contours.
.LM -4
.BLANK

.P 0;Category 1 checks are applied to all map features that may be assigned a
single height value (eg. contour). The height is derived by ITCHECK from an AC
2 (integer height) or AC 3 (floating point height) entry associated with each
feature.  Map features for which it is not appropriate to hold a constant
height, such as rivers and ridge-lines, even if they are defined by
three-dimensional coordinates, are excluded from the check. 

.P 0;The checks in this category ensure contours are divisible  by the 
appropriate contour interval, and that the height of a feature is within a 
specified height range.  Contour interval height range parameters are 
defined using the relevant ITCHECK commands.

.P 0;Checks in category 2 are designed to detect errors in the geometry of a
feature resulting from digitising, and errors in the heights of linked or
connecting features.  For example, features are checked that they lie within a
map area, and that a contour feature which is a continuation of
another contour feature has the same height.  The latter check is often
required because a single map contour line may have been digitised as a number
of separate IFF features, or may have been broken into separate features on
the map to allow for contour labelling.  Tolerance values, which allow for
cartographic elements such as labelling, and for variation in the quality of
the digitising, are specified using relevant ITCHECK commands. 

.P 0;Checks are made in category 3 to detect map features that incorrectly 
intersect other map features.  Such errors may arise during data capture,
particularly if the map data have been derived from a number of different
map sources.  ITCHECK will determine the number of times a feature intersects
another feature and, depending on the type of feature, will report an error.  
For example, a contour should not cross or touch another contour, while a river
should cross the same contour line only once.

.P 0;The check in category 4 is used to verify height trends in the digital
data, ie. the accuracy of a feature height relative to a neighbouring
feature.  The check involves taking a series of profiles or sections through
the map data. Profiles are taken at regular intervals, separated by a distance
parameter (in IFF units) specified with the PROFILE__INTERVAL command, and are
constructed from the top to the bottom of the map border.  
The intersection of a profile with
each map feature is calculated, so that the relevant positions of features may
be determined.  The heights of neighbouring features are checked against each
other using an appropriate height interval. 

.P 0;The profile interval, and hence the number of profiles constructed,
should be selected according to the density and distribution of features on 
the map. Too large an interval leaves the risk of the profiles missing small 
features, while an interval that is too small will result in a lot of time 
being wasted duplicating checks unnecessarily. 

.P 0;Checks in category 5 are applied to all types of map features.  They
are designed to detect errors in the geometry of a feature resulting from
digitising.  For example, features with duplicate points or with loops. 
Spot heights are checked to ensure they are defined by only one coordinate
pair.  Any height value associated with a feature is not used in these series
of checks.

.P 0;The category 6 check is designed to verify the value of a map spot
height.  The spot height is compared with the height of adjacent map 
features, and is verified using an appropriate height interval.  For 
example, a spot height of value 105 metres, that is completely contained 
in a contour of height 50 metres, on a map with a contour interval of 10 
metres, will be reported in error.

.P 0;Note the amount of processing required to perform the checks will 
vary from category to category.  Checks on all the coordinates defining 
a feature will take longer than checks on the heights of the features, or 
checks that use just the feature's start and end points.  Checks that
require the intersection of feature coordinate strings are the most
computationally intensive.  

.TEST PAGE 22
.P 0;Performing all categories of checks may not always be required.  Which
checks are relevant, is dependent on how the data was captured, and on the
map features that are input into ITCHECK.  The following table shows the
checks that are performed on different map features. 

.LIT


--------------------------------------------------------------
|                        |             CHECKS                |
|                        |-----------------------------------|
|GROUP NAMES             |  1  |  2  |  3  |  4  |  5  |  6  | 
|------------------------|-----|-----|-----|-----|-----|-----|
|CLIFF                   |  *  |  *  |  *  |     |  *  |     |
|COASTLINES              |  *  |  *  |  *  |  *  |  *  |     |
|CONTOURS                |  *  |  *  |  *  |  *  |  *  |  *  |
|INDEX_CONTOURS          |  *  |  *  |  *  |  *  |  *  |  *  |
|LAKES                   |  *  |  *  |  *  |  *  |  *  |  *  |
|RIDGES                  |     |  *  |  *  |     |  *  |     |
|RIVERS                  |     |  *  |  *  |     |  *  |     |
|SPOT_HEIGHTS            |  *  |  *  |     |     |  *  |  *  |
|SUPPLEMENTARY_CONTOURS  |  *  |  *  |  *  |  *  |  *  |  *  |
--------------------------------------------------------------

.END LIT

.BLANK 2    
.LM -8
.HL 2 ^^^*Group definition table\*
.LM +8
.BLANK
.P 0;A group definition table is used by ITCHECK to define which feature codes
belong to a given group for the purpose of vector checking. For example, which
features are rivers. The group definition table must be initialised before the
ITCHECK module can do any vector checking. This is achieved using the LOOKUP
command. 
.P 0;The group definition table is defined in an ASCII text file and can be
easily generated using a text editor such as EDT. The format of this file 
is given as follows:- 
.LIT

group_name feature_code[,...]

.END LIT
.P 0;The 'group__name' describes a class of map feature eg. RIVERS. The
following group names are recognised by the program: 
.TEST PAGE 10
.LIT

CLIFFS
COASTLINES
CONTOURS
INDEX_CONTOURS
LAKES
RIDGE_LINES
RIVERS
SPOT_HEIGHTS
SUPPLEMENTARY_CONTOURS

.END LIT
Note, that the same group name may appear more than once in the table. An
invalid group name will be ignored by the program, and a warning message will
be displayed. 
.P 0
The 'feature__code' is a feature identifier specified as an integer value in
the range 0 to 32767. A single feature code, or a list or range of feature
codes may be supplied for each group. Multiple feature codes are specified
separated by commas or spaces, while a range of feature codes is specified by
means of a colon ':'. 
.p 0
It is not permissible for more than one group to share the same feature code. A
group definition file containing two or more groups sharing the same feature
code will cause the LOOKUP command to display an error message and terminate. 
.p 0
The following are examples of group definition files:- 
.TEST PAGE 7
.BLANK 2
.LIT
Example 1 

CONTOURS 5,10:15
LAKES 100
SPOT_HEIGHTS 27
RIVERS 7
.END LIT
.TEST PAGE 7
.LIT

Example 2

CONTOURS 6
INDEX_CONTOURS 4
SUPPLEMENTARY_CONTOURS 5
CONTOURS 100:200
.END LIT

.P 0;In example 2 the CONTOURS 'group__name' has been specified twice. This is
perfectly valid and feature codes 100 to 200 will be loaded to the group
definition table along with feature code 6. However, a warning message will be
issued indicating a possible problem. 
.P 0;Once a group definition table has been read, it is possible to include or
exclude a group of map features for checking, using the commands SELECT FC and
DESELECT FC.  By default ITCHECK will include all groups of features that are
present in an input IFF file in the checking process.


.TEST PAGE 59
.LM -8
.HL 2 ^^^*Tolerance\*
.BLANK
.LM +8
.P 0;This section explains how the tolerance parameters are used within the
vector checking process. The module requires three tolerance parameters to
be specified for category 2 checking. These parameters are 'border__tolerance' 
'maximum__tolerance' and 'minimum__tolerance' supplied using TOLERANCE commands 
BORDER, MAXIMUM and MINIMUM respectively. The 'minimum__tolerance' and 
'maximum__tolerance' are applied as follows:
.LIT

          <----->                  'minimum_tolerance' 
      <--------------->            'maximum_tolerance' 

.END LIT
.LIT
............    .............      
.END LIT
.LM +35
.BR;Features are considered to be linked, since the gap is less than the 
minimum tolerance. A minimum tolerance is required to take into account small 
inaccuracies in junctions etc.
.LM -35
.LIT

.......            ..........      
.END LIT
.LM +35
.BR;Features are considered to be unlinked, since the gap is greater than the 
minimum tolerance and less than the maximum tolerance. This is not a genuine 
gap in the linework.  The condition will cause an error to be reported.
.LM -35
.LIT

...                      ....      
.END LIT
.LM +35
.P 0;Features are considered to be unlinked, but are acceptable since the gap
is greater than the maximum tolerance. This may be due to a genuine gap for a
contour label.  No error is reported. 
.LM -35
.P 0;The 'border__tolerance' is applied as follows:-
.LIT

        <-----> <----->            'border_tolerance' 

...........    |
...............|...
.END LIT
.LM +35
.BR;These features are treated as though they touch the sheet border.
.LM -35
.LIT


.....          |
.END LIT
.LM +35
.BR;This feature is considered to fall short of the sheet border, and will be 
reported as being in error.  Either the message 'Links to only 1 item' or 
'Links to no other item' will be output
.LM -35

.LM -8
.BLANK 
.TEST PAGE 15
.HL 2 ^^^*Input IFF files\*
.BLANK
.LM +8
.P 0;ITCHECK will allow up to 5 input IFF files to be specified by the user. 
Typically each input file will contain features relating to a particular
group, eg. contour lines may be contained in one file while rivers and ridge
lines may be held in a separate file.  Alternatively, a single IFF file
containing all map features may be supplied.  If multiple files are specified
it is important that they have an identical local origin.  If this is not the
case, ITCHECK will display an error message, and abandon the current IFF file.
This prevents the user from inadvertently specifying two or more IFF files
which are not part of the same geographic area. 


.P 0;For a number of applications the user may wish to restrict checking
to a particular section of the map.  This may be performed using the 
WINDOW command.  This command is used to define a rectangular area.  
Any map features that lie entirely outside this rectangular area will be
excluded from the checks.  Note that if any part of a feature passes through the 
rectangle, the whole of the feature will be used in the error checking process.

.P 0;The height of a feature is determined from an ancillary code
entry.  An AC 2 entry holds an integer height, and an AC 3 entry a floating
point height value.  If a feature which would normally be expected to have a height
value is found to have no AC entry, ITCHECK will remove this feature from
the checking process.  A warning message will be displayed with the FSN
and FC of the unheighted feature.

.P 0;All contours, spot heights, lakes and coastline features are expected
to be heighted.  Rivers and ridges in the input file may be defined
by three-dimensional strings, however, ITCHECK will perform no checks on
the height values.
.P 0;ITCHECK has a maximum IFF string length restriction of 50000. If this 
maximum string length is exceeded, a message is issued and the offending
feature is excluded from all checks. Users are advised to break features
having more than 50000 points into 2 or more smaller ones each having not more
than 50000 points.
.LM -8
.BLANK 
.HL 2^^^*Error Report\*
.BLANK
.LM +8
.P 0;If errors are found in a feature during a check process, ITCHECK will
produce a tabulation error file.  By default, this file is given the name
ITCHECK.LIS and is created in the user's current directory.  An alternative
file specification may be supplied using the LIST command. 

.P 0;The first page of the tabulation error file contains general information
about the check process.  This will include the file specifications of the
input and output files, parameter information such as intervals and tolerances
and information on any window that may have been defined. Subsequent pages of
the report contain a table of the detected errors under the following
headings:- 
.LIT

MAP   FSN   FC   HEIGHT    XCOORD    YCOORD   VECTOR   ERROR DESCRIPTION
.END LIT

.P 0;The coordinate value output will depend on the category of check.  The
coordinates will normally represent a point closest to the detected error. 
For example, intersection checks will output the intersection coordinates,
geometry checks will output the coordinates of the end of the feature in error
and height checks will output the first coordinates of the feature. Note:
missing contours features within range can be detected but due to the nature
of this error no coordinate data is available. 

.LM -8
.BLANK 
.TEST PAGE 12
.HL 2^^^*Output Error File\*
.BLANK
.LM +8
.P 0;An output error IFF file may be optionally produced.  This is achieved
using the OUTPUT command. The file will contain portions of the input IFF data
found to be in error.  At most 10 points will be output defining the first 10
points of a feature, or the section of the line at which the error occurs. The
created output error file will maintain the original FSN etc.  Data relating
to different checks will be output to separate layers.  By default the first
layer will be 2, although, this may be defined using the LAYER command.
ITCHECK will automatically increment the layer number between checks. 

.P 0;The output file may be displayed on a graphics device or plotted on a
hardcopy device. The plot may be annotated with the feature's FSN to assist in
correction of the data. 
.LM -8
.BLANK
.HL 2^^^*LITES2 Guidance File\*
.BLANK
.LM +8

.P 0;A LITES2 guidance file may be optionally produced.  This is achieved
using the LITES command.  LITES2 commands are output to this file to assist
correction or investigation of the features that have been detected in error,
using the LITES2 cartographic editor. 

.PAGE
.LM -8
.HL 2 ^^^*Example\*
.BLANK
.LM +8
.P 0;A typical command sequence is:
.LITERAL

LOOKUP ITCHECK                  (file is LSL$LOOKUP:ITCHECK.DAT)
DESELECT FC 10:15               (deselect FC 10 through 20)
IFF MAP1                        (input file 1 is LSL$IF:MAP1.IFF)
IFF MAP2                        (input file 2 is LSL$IF:MAP2.IFF)
CONTOUR_INTERVAL 20             (contour interval to use)
INDEX_INTERVAL 100              (index contour interval to use)
SUPPLEMENTARY_INTERVAL 5        (supplementary contour interval to use)
ZLIMITS 100 600                 (the upper and lower contour limits)
CHECK 1,3:5                     (perform checks 1,3,4 & 5)
PROFILE 5                       (profile interval for use in check 4)
LIST SYS$LOGIN:AREA1.LIS        (name of tabulation file)
GO                              (start to process)


.END LITERAL

.P 0; This series of commands will set up to perform checks 1, 3, 4 _& 5 on two
IFF files LSL$IF:MAP1.IFF and LSL$IF:MAP2.IFF. Mandatory parameters to
control the checking process are also specified. Detected errors being
reported in text error tabulation file SYS$LOGIN:[]AREA1.LIS. 

.P 0; Note, in this example, feature codes 10 through 15 have been deselected 
from the checking process.

.LM -8

.P 0;^*--------------------------------------------------------------------------------\*
.PAGE
.HL 2 ^^^*ITCHECK command defaults.\*
.LEFT MARGIN +10

.P 0;No command defaults have been set on program startup.
.LEFT MARGIN -10

.BLANK
.!******************************************************************************
.!*** Commands                                                               ***
.!******************************************************************************
^^^*--------------------------------------------------------------------------------\*
.PAGE
.SUBTITLE
.FIGURE 5
.STYLE HEADERS ,,,,1
.HL 1 ^^^*ITCHECK_ commands\*
.STYLE HEADERS ,,,,7

.!******************************************************************************
.PAGE
.SUBTITLE _@ command
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*_@\*
.INDEX ITCHECK> commands> _@
.INDEX ITCHECK> _@ command

.LEFT MARGIN +8
.P 0;Take command input from the specified file.
.LEFT MARGIN -8

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*FORMAT:	_@file-spec\*


.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Command parameters:\*

.LEFT MARGIN +8
.P-8;file-spec
.P 0;The file to be opened and used for command input.

.P 0;Any parts of the file-spec not supplied for the @ command will be 
taken from the default specification 'SYS$DISK:[].COM;0'.
.LEFT MARGIN -8

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*DESCRIPTION:\*
.P 0;ITCHECK offers the facility of command input from an indirect command
file. The '@' character preceding a file-spec will cause ITCHECK to open
and read commands from the specified file until: 
.LIST
.LE ;a RETURN command is detected and command input is returned to SYS$COMMAND.
.LE ;end-of-file is detected. This provokes an error message and command input
is returned to SYS$COMMAND. 
.END LIST 

.P 0;Nested command files are not supported (i_.e_. a command file containing an
'@' command), although sequential '@' commands are supported when read from
SYS$COMMAND.

.P 0;As an aid to batch log interpretation ITCHECK will echo all commands
read from an indirect command file. 
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Messages:\*

.P 0;The following messages are specific to the _@ command:

.P 0;_*_*_*_ WARNING_ _*_*_*_ "@" must precede a file-spec
.P 0;_*_*_*_ WARNING_ _*_*_*_ Indirect file error - returning to terminal input
.P 0;_*_*_*_ ERROR_ _*_*_*_ Can't open indirect command file 'file-spec'


.TEST PAGE 8
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Examples:\*
.NO FILL
.BLANK
.BR;ITCHECK> ^*@PRESETS_<CR_>\*
.BR;ITCHECK> LOOKUP GROUP1
.BR;ITCHECK> DESELECT FC 27
.BR;ITCHECK> CHECK 1,3:5
.BR;ITCHECK> CONTOUR__INTERVAL 10
.BR;ITCHECK> INDEX__INTERVAL 50
.BR;ITCHECK> SUPPLEMENTARY__INTERVAL 2
.BR;ITCHECK> PROFILE__INTERVAL 5
.BR;ITCHECK> RETURN
.BR;ITCHECK>
.FILL

.!******************************************************************************
.PAGE
.SUBTITLE _! command
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*_!\*
.INDEX ITCHECK> commands> _!
.INDEX ITCHECK> _! command

.LEFT MARGIN +8
.P 0;Treat all text to the right of the '!' as a comment.
.LEFT MARGIN -8

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*FORMAT:	_! [comment text]\*

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Command parameters:\*

.LEFT MARGIN +8
.P-8;comment text
.P 0;text that is to be treated as a comment and which will be excluded from
command interpretation.
.LEFT MARGIN -8

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*DESCRIPTION:\*
.P 0;An exclamation mark is the standard DTMPREPARE package comment delimiter.
All text (and numbers) which lie to the right of a '!' character are excluded
from command interpretation. Comments are useful for annotating command
procedures used in batch processing etc_. 


.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Messages:\*_ None.


.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Examples:\*
.BLANK
.BR;ITCHECK> ^*_! a comment for the sake of it_<CR_>\*
.BR;ITCHECK> ^*CHECK 1:5_<CR_>\*
.BR;ITCHECK> 


.!******************************************************************************
.PAGE
.SUBTITLE   BORDER command
.INDEX ITCHECK> commands> BORDER
.INDEX ITCHECK> BORDER command
.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^*BORDER\*

.LM +8
.p 0; Defines the coordinates of the map border.
.LM -8

.P0
^*--------------------------------------------------------------------------------
.LIT
FORMAT:	        BORDER sw_xcoord sw_ycoord ne_xcoord ne_ycoord

or

FORMAT:	        BORDER sw_xcoord sw_ycoord nw_xcoord nw_ycoord
		       ne_xcoord ne_ycoord se_xcoord se_ycoord
.end lit
.p 0;
^*--------------------------------------------------------------------------------\*
.BR;^*Command parameters:\*

.LM +8
.P-8;sw__xcoord sw__ycoord 
.P0; The coordinates of the south-west (bottom lefthand)
.P-8;nw__xcoord nw__ycoord 
.P0; The coordinates of the north-west (top lefthand)
.P-8;ne__xcoord ne__ycoord
.P0; The coordinates of the north-east (top righthand)
.P-8;se__xcoord se__ycoord
.P0; The coordinates of the south-east (bottom righthand)
.P 0; The coordinates are specified in IFF units, as real (floating point)
values. 
.LM -8
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*DESCRIPTION:\*

.P 0; BORDER is used to define the map limits of the IFF file. By 
default, the bounding rectangle derived from the CP entry values is used.  

.P 0;The BORDER command can be given in one of two ways.  The first method
requires that the south-west followed by the north-east coordinates be
supplied to define the rectangle.  The second method requires that the
south-west, north-west, north-east and south-east corners be supplied, in
that order to define the area of interest. 

.P 0;This command is normally used when the values in the IFF file CP entry
are known not to correspond to the actual map area ie. when the control points
do not define the corners of the map. Care should be taken when inputting
parameters with this command, as it may lead to the generation of erroneous
messages when category 2 (link checks) checks are carried out. 
  
.P 0;The command SHOW BORDER may be used to examine the border coordinate
values. 
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Messages:\*
.P0;The following error messages are specific to the BORDER command:
.LIT

*** ERROR *** Specifying command BORDER
Command requires either: 
   2 x,y coordinate pairs (SW and NE)
or
   4 x,y coordinate pairs (SW, NW, NE and SE)

*** ERROR *** Specifying command BORDER
Real argument not found

*** ERROR *** Specifying command BORDER
NE x coordinate > SW x coordinate

*** ERROR *** Specifying command BORDER
NE y coordinate > SW y coordinate

*** ERROR *** Specifying command BORDER
SE x coordinate < SW x coordinate

*** ERROR *** Specifying command BORDER
NE x coordinate < NW x coordinate

*** ERROR *** Specifying command BORDER
NW y coordinate < SW y coordinate

*** ERROR *** Specifying command BORDER
NE y coordinate < SE y coordinate
.END LIT

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Examples:\*
             
.P0;ITCHECK>^*BORDER 0.0 0.0 300.0 350.0 <CR>\*
.BR;ITCHECK>

.!******************************************************************************
.PAGE
.SUBTITLE   CHECK command
.INDEX ITCHECK> commands> CHECK
.INDEX ITCHECK> CHECK command
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*CHECK \*

.LM +8
.p 0;Specifies which category or categories of checks are to be performed.
.LM -8

.P0
^*--------------------------------------------------------------------------------
.LIT
FORMAT:         CHECK category[,...]
.end lit
.p 0;
^*--------------------------------------------------------------------------------\*
.BR;^*Command parameters:\*

.LM +8
.P-8;category
.P0; An integer number in the range 1 to 6. Multiple categories 
may be specified separated by commas or spaces, while a range of categories
may be specified by means of a colon ':'. eg. CHECK 1,3:5 includes categories
1,3,4 and 5. Alternatively keywords 'ALL' may be specified, to request that 
all checks are to be carried out.
.LM -8
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*DESCRIPTION:\*


.P 0;The CHECK command is used to specify which category or categories of
checks are to be performed by the ITCHECK process. When two or more categories
are specified by the CHECK command the lowest category number is always
processed first. The checks are performed when the GO command is given.

.P0;The following categories of checks may be specified by using the  
the CHECK command (see utility description for more information): 

.P 0;Category 1 Height checks.
.P 0;Category 2 Link checks.
.P 0;Category 3 Intersection checks.
.P 0;Category 4 Validity of neighbouring height checks.
.P 0;Category 5 Loop, duplicate points and spot height single coordinate. 
.P 0;Category 6 Validity of spot heights checks.

.P 0;The SHOW CHECK command can be used to display which checks are currently 
selected. 
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Messages:\*
.P0;The following error messages are specific to the CHECK command:
.LIT

*** ERROR *** Specifying command CHECK
Unexpected character 'char' at this point 

*** ERROR *** Specifying command CHECK
Command requires check number or range of check numbers
.END LIT
.TEST PAGE 4
.LIT
*** ERROR *** Specifying command CHECK
Illegal check 'number' number
Checks must be between 1 - 6


.END LIT
.P 0
^*--------------------------------------------------------------------------------\*
.BR;^*Examples:\*
             
.p0;ITCHECK>^*CHECK 6,1:3<CR>\*
.br;ITCHECK>
.!******************************************************************************
.PAGE
.SUBTITLE   CLOSE IFF command
.INDEX ITCHECK> commands> CLOSE IFF
.INDEX ITCHECK> CLOSE IFF command
.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^*CLOSE IFF\*

.LM +8
.p 0; Closes all opened input IFF files.
.LM -8

.P0
^*--------------------------------------------------------------------------------
.LIT
FORMAT:	        CLOSE IFF
.end lit
.p 0;
^*--------------------------------------------------------------------------------\*
.BR;^*Command parameters:\*

.LM +8
.P-8;none
.LM -8
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*DESCRIPTION:\*

.P 0; The CLOSE IFF command is used to close all opened input IFF files. The
command is generally used to close a set of input IFF files after checking has
been performed, before specifying a new set of IFF files for a new series of
checks. 

.P 0;The command is also useful when an IFF file is opened in error.
  
.P 0;The command SHOW FILES may be used to list all opened input IFF files.
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Messages:\*
.P0;The following error message is specific to the CLOSE IFF command:
.LIT

*** ERROR *** Specifying command CLOSE IFF
No input IFF files opened

.END LIT

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Examples:\*
             
.P0;ITCHECK>^*CLOSE IFF <CR>\*
.LIT
All input IFF files have been closed
.END LIT
.BR;ITCHECK>

.!******************************************************************************
.PAGE
.SUBTITLE   CLOSE LIST command
.INDEX ITCHECK> commands> CLOSE LIST
.INDEX ITCHECK> CLOSE LIST command
.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^*CLOSE LIST\*

.LM +8
.p 0; Closes an error tabulation file that has been opened using the LIST
command. 
.LM -8

.P0
^*--------------------------------------------------------------------------------
.LIT
FORMAT:	        CLOSE LIST
.end lit
.p 0;
^*--------------------------------------------------------------------------------\*
.BR;^*Command parameters:\*

.LM +8
.P-8;none
.LM -8
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*DESCRIPTION:\*

.P 0; The CLOSE LIST command is used to close the error tabulation file. The error 
tabulation file can be re-specified using the LIST command.
  
.P 0;The command SHOW FILES may be used to list all files specified.
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Messages:\*
.P0;The following error message is specific to the CLOSE LIST command:
.LIT

*** ERROR *** Specifying command CLOSE LIST
No LIST file opened

.END LIT

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Examples:\*
             
.P0;ITCHECK>^*CLOSE LIST<CR>\*
.BR;ITCHECK>

.!******************************************************************************
.PAGE
.SUBTITLE   CLOSE LITES command
.INDEX ITCHECK> commands> CLOSE LITES 
.INDEX ITCHECK> CLOSE LITES command
.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^*CLOSE LITES\*

.LM +8
.p 0; Close a LITES command file that has been opened using the LITES command.
.LM -8

.P0
^*--------------------------------------------------------------------------------
.LIT
FORMAT:	        CLOSE LITES 
.end lit
.p 0;
^*--------------------------------------------------------------------------------\*
.BR;^*Command parameters:\*

.LM +8
.P-8;none
.LM -8
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*DESCRIPTION:\*

.P 0; The CLOSE LITES command is used to close the LITES2 command file. The LITES2 command 
file can be re-specified using the LITES command.
  
.P 0;The command SHOW FILES may be used to list all files specified.
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Messages:\*
.P0;The following error message is specific to the CLOSE LITES command:
.LIT

*** ERROR *** Specifying command CLOSE LITES 
No LITES2 file opened

.END LIT

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Examples:\*
             
.P0;ITCHECK>^*CLOSE LITES<CR>\*
.BR;ITCHECK>

.!******************************************************************************
.PAGE
.SUBTITLE   CLOSE OUTPUT command
.INDEX ITCHECK> commands> CLOSE OUTPUT 
.INDEX ITCHECK> CLOSE OUTPUT command
.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^*CLOSE OUTPUT \*

.LM +8
.p 0; Closes an output IFF error file that has been opened using the OUTPUT 
command. 
.LM -8

.P0
^*--------------------------------------------------------------------------------
.LIT
FORMAT:	        CLOSE OUTPUT 
.end lit
.p 0;
^*--------------------------------------------------------------------------------\*
.BR;^*Command parameters:\*

.LM +8
.P-8;none
.LM -8
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*DESCRIPTION:\*

.P 0; The CLOSE OUTPUT command is used to close an opened output IFF error file. 
The output IFF error file can be re-specified using the OUTPUT command.
  
.P 0;The command SHOW FILES may be used to list all files specified.
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Messages:\*
.P0;The following error message is specific to the CLOSE OUTPUT command:
.LIT

*** ERROR *** Specifying command CLOSE OUTPUT 
No OUTPUT file opened

.END LIT

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Examples:\*
             
.P0;ITCHECK>^*CLOSE OUTPUT<CR>\*
.BR;ITCHECK>

.!***************************************************************************
.PAGE
.SUBTITLE CONTOUR__INTERVAL command
.INDEX ITCHECK> commands> CONTOUR__INTERVAL
.INDEX ITCHECK> CONTOUR__INTERVAL command
.P0
^^^*------------------------------------------------------------------------------\*
.BR;^*CONTOUR__INTERVAL\*

.LM +8
.P 0; Specifies the contour interval.
.LM -8

.P0
^*--------------------------------------------------------------------------------
.LIT
FORMAT:		CONTOUR_INTERVAL contour_interval
.END LIT
.p 0
^*--------------------------------------------------------------------------------\*
.BR;^*Command parameters:\*

.LM +8
.P-8;contour__interval
.P0; This specifies the height interval between adjacent contour lines. The
value must be a positive number greater than zero. 
.P0; If SUPPLEMENTARY__INTERVAL command has been executed then:
.LIT

		contour_interval >= supplementary_interval    
.END LIT
.P0; If INDEX__INTERVAL command has been executed then:
.LIT

		contour_interval <= index_interval    
.END LIT

.LM -8
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*DESCRIPTION:\*

.P 0;The CONTOUR__INTERVAL command is used to specify the height interval
between adjacent contours. The contour interval is used to check that all
normal contours (as opposed to supplementary or index contours) are divisible
by the contour interval. 
.P 0;The parameter is also used to check that all contours are present between
the lower and upper contour limits as specified by the ZLIMITS command. 
.P 0;The contour interval must be specified before the GO command if CHECK 1
and/or CHECK 4 have been requested. 
.P 0;The currently defined contour interval may be examined using the SHOW
INTERVALS command. 
.P 0
^*--------------------------------------------------------------------------------\*
.BR;^*Messages:\*
.P0;The following error messages are specific to the CONTOUR__INTERVAL command:
.LIT

*** ERROR *** Specifying command GO

Command requires contour interval

*** ERROR *** Specifying command CONTOUR_INTERVAL
Value is less than previously specified SUPPLEMENTARY_INTERVAL
'supplementary_interval'

*** ERROR *** Specifying command CONTOUR_INTERVAL
Value is greater than previously specified INDEX_INTERVAL 'index_interval'

.END LIT
.P 0
^*--------------------------------------------------------------------------------\*
.BR;^*Example:\*

.P0;ITCHECK>^*CONTOUR__INTERVAL 10<CR>\*
.BR;ITCHECK>^*SHOW INTERVALS<CR>\*
.LIT
INTERVALS:
   Contour interval is 10.00
   No index interval specified
   No supplementary interval specified
   No profile interval specified
.END LIT
.BR;ITCHECK>
.P0
.!******************************************************************************
.PAGE
.SUBTITLE   DESELECT FC command
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*DESELECT FC \*

.LM +8
.p 0;Excludes an IFF feature from checking on the basis of feature code.
.LM -8

.P0
^*--------------------------------------------------------------------------------
.LIT
FORMAT:         DESELECT FC feature_code [,...]
.end lit
.p 0;
^*--------------------------------------------------------------------------------\*
.BR;^*Command parameters:\*

.LM +8
.P-8;feature__code
.P0; An integer feature code in the range 0 to 32767. Multiple feature codes
may be specified separated by commas or spaces, while a range of feature codes
may be specified by means of a colon ':'. eg. DESELECT FC 10:13 excludes feature
codes 10,11,12 and 13. 
.P 0;Alternatively a group name supplied by the group definition table may be
specified. eg. DESELECT FC LAKES 
.LM -8
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*DESCRIPTION:\*


.p 0;The DESELECT FC command is used to exclude IFF features from checking. Features are excluded on the basis of their
feature code. This is useful if particular features are known to be in error, 
since they can be deselected from the error checking process.
.P 0;By default ITCHECK will use all features defined in the group definition 
table. 
.P 0;The SHOW GROUP command can be used to display feature
selections for each of the groups defined.  
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Messages:\*
.P0;The following error messages are specific to the DESELECT and DESELECT FC
commands: 
.LIT

*** ERROR *** Specifying command DESELECT
Command qualifiers are FC, FSN or LAYER             

*** ERROR *** Specifying command DESELECT FC
Unexpected character 'char' at this point 

*** ERROR *** Specifying command DESELECT FC
Illegal feature code 'fc'

*** ERROR *** Specifying command DESELECT FC
No group definitions loaded
Therefore no feature codes available for selection
Use command LOOKUP to load group definition table
.END LIT
.TEST PAGE 4
.LIT
*** ERROR *** Specifying command DESELECT FC
Invalid group name 'group_name'

*** ERROR *** Specifying command DESELECT FC
Group not defined
Therefore no feature codes available for selection
Use command LOOKUP to load group definition table containing required group

.END LIT
.P 0
^*--------------------------------------------------------------------------------\*
.BR;^*Examples:\*
             
.p0;ITCHECK>^*DESELECT FC 1<CR>\*
.br;ITCHECK>^*DESELECT FC SPOT__HEIGHTS<CR>\*
.br;ITCHECK>^*DESELECT FC 7:10,56:78<CR>\*
.br;ITCHECK>
.!******************************************************************************
.PAGE
.SUBTITLE   DESELECT FSN command
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*DESELECT FSN \*

.LM +8
.p 0;Excludes an IFF feature from checking on the basis of feature serial number.
.LM -8

.P0
^*--------------------------------------------------------------------------------
.LIT
FORMAT:	        DESELECT FSN fsn [,...]
.end lit
.p 0;
^*--------------------------------------------------------------------------------\*
.BR;^*Command parameters:\*

.LM +8
.P-8;fsn
.P0; An integer feature serial number in the range 0 to 65534. Multiple feature
serial numbers may be specified separated by commas or spaces, while a range of
numbers may be specified by means of a colon ':'. eg. DESELECT FSN 10:13 excludes
feature serial numbers 10,11,12 and 13. 
.LM -8
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*DESCRIPTION:\*


.p 0;The DESELECT FSN command is used to exclude IFF features from checking. Features are excluded on the basis of their
feature serial number. This is useful if a particular feature is known to be in error, 
since it can be deselected from the error checking process.
.P 0;By default ITCHECK will use all FSN's within an overlay. 
.P 0;The SHOW SELECTION command may be used to display which FSN's 
are currently selected. 

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Messages:\*
.P0;The following error messages are specific to the DESELECT and DESELECT FSN
commands: 
.LIT

*** ERROR *** Specifying command DESELECT
Command qualifiers are FC, FSN or LAYER             

*** ERROR *** Specifying command DESELECT FSN
Unexpected character 'char' at this point 

*** ERROR *** Specifying command DESELECT FSN
Illegal FSN number 'fsn'

.END LIT
.P 0
^*--------------------------------------------------------------------------------\*
.BR;^*Examples:\*
             
.p0;ITCHECK>^*DESELECT FSN 4<CR>\*
.br;ITCHECK>^*DESELECT FSN 7:10,56:78<CR>\*
.br;ITCHECK>
.!******************************************************************************
.PAGE
.SUBTITLE   DESELECT LAYER command
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*DESELECT LAYER \*

.LM +8
.p 0;Excludes an IFF feature from checking process on the basis of layer number.
.LM -8

.P0
^*--------------------------------------------------------------------------------
.LIT
FORMAT:	        DESELECT LAYER layer [,...]
.end lit
.p 0;
^*--------------------------------------------------------------------------------\*
.BR;^*Command parameters:\*

.LM +8
.P-8;layer
.p 0;An integer layer number in the range 1 to 32767. Multiple layer numbers
may be specified separated by commas or spaces, while a range of layer numbers
may be specified by means of a colon ':'. eg. DESELECT LAYER 10:13 excludes all
features in layers 10,11,12 and 13. 
.LM -8
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*DESCRIPTION:\*

.p 0;The DESELECT LAYER command is used to exclude IFF features from the checking 
process. Features are excluded on the basis of IFF
layer.
.P 0;By default ITCHECK will use all features within an IFF file. 
.P 0;The SHOW SELECTION command may be used to display which layers 
are currently selected. 
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Messages:\*
.P0;The following error messages are specific to the DESELECT and DESELECT 
LAYER commands:
.LIT

*** ERROR *** Specifying command DESELECT
Command qualifiers are FC, FSN or LAYER             

*** ERROR *** Specifying command DESELECT LAYER
Unexpected character 'char' at this point 

*** ERROR *** Specifying command DESELECT LAYER
Illegal layer number 'layer number'

.END LIT
.P 0
^*--------------------------------------------------------------------------------\*
.BR;^*Examples:\*
             
.p0;ITCHECK>^*DESELECT LAYER 7<CR>\*
.br;ITCHECK>^*DESELECT LAYER 1,7:10<CR>\*
.br;ITCHECK>

.P0
.!******************************************************************************
.PAGE
.SUBTITLE EXIT command
.INDEX ITCHECK> commands> EXIT 
.INDEX ITCHECK> EXIT command

.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*EXIT \*
.LEFT MARGIN +8
.P 0;Exit from ITCHECK.
.LEFT MARGIN -8

.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^*FORMAT:	EXIT \*

.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*Command parameters:\*#None.

.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*Description:\*
.P 0;The EXIT command is used to exit from ITCHECK. Any opened files are 
closed.

.P 0;<CTRL/Z> (pressing the Ctrl and Z keys together) may also be used
to exit from the program.

.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*Messages:\*#None.

.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*Examples:\*

.P0;ITCHECK_> ^^^*EXIT_<CR_>\*
.BR;#ELAPSED: 00:00:20.04  CPU: 0:00:04.71  BUFIO: 281  DIRIO: 46  FAULTS: 263 
.BR;_$

.P0
.!******************************************************************************
.PAGE
.SUBTITLE GO command
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*_GO\*
.INDEX ITCHECK> commands> GO
.INDEX ITCHECK> GO command

.LEFT MARGIN +8
.P 0;Starts the vector checking process.
.LEFT MARGIN -8

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*FORMAT:	GO\*

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Command parameters:\* None


.P0
^*--------------------------------------------------------------------------------\*
.BR;^*DESCRIPTION:\*

.P 0;The GO command is used to start the processing and the error checking of
the input IFF files.  Before the check processing takes places, the following
tests will be carried out to ensure that certain preconditions hold:- 

.LEFT MARGIN +8
.P -3;1._ At least one input IFF file has been opened. 
An error message will be displayed and the command terminated if this test fails.

.P -3;2._ A group definition table has been loaded using the LOOKUP
command.  An error message will be displayed and the command terminated 
if this test fails.

.P -3;3._ A CHECK command has been given to define the category or
categories of vector checks to be performed. An error message will be
displayed and the command terminated if this test fails. 

.P -3;4._ Depending on the categories of vector checks selected, tests are carried 
to ensure than mandatory parameters for those checks have been specified.
An error message will be displayed and the command terminated 
if this any of these tests fail.

.LEFT MARGIN -8

.P 0;Detected errors in the vector data will be reported in the tabulation
error file.  Optionally the detected errors, will be output to a LITES2
command file if the LITES command has been given. If the OUTPUT command has
been specified then a portion of the coordinate data in the vicinity of
detected error will be output to an IFF error file. 

.P 0;Upon successful completion of the  checks the ITCHECK command prompt will
be displayed. Any opened files apart from the input IFF files will be closed.
The category parameter, specified with the CHECK command, will be undefined. 
Before another GO command can be given it will be necessary to re-specify 
the new sequence of checks using the CHECK command.
This is to avoid running the same sequence of checks accidentally. 


.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Messages:\*

.P 0;The following messages are specific to the GO command:
.LIT

*** ERROR *** Specifying the command GO
No input IFF files open              >> Execute command IFF

*** ERROR *** Specifying the command GO
No group definition table loaded     >> Execute command LOOKUP

*** ERROR *** Specifying the command GO
No checks selected                   >> Execute command CHECK

*** ERROR *** Specifying the command GO
Contour interval not specified       >> Execute command CONTOUR_INTERVAL

*** ERROR *** Specifying the command GO
Index interval not specified         >> Execute command INDEX_INTERVAL

*** ERROR *** Specifying the command GO
Supplementary interval not specified >> Execute command SUPPLEMENTARY_INTERVAL

*** ERROR *** Specifying the command GO
Contour limits not specified         >> Execute command ZLIMITS

*** ERROR *** Specifying the command GO
Border tolerance not specified       >> Execute command TOLERANCE BORDER

*** ERROR *** Specifying the command GO
Maximum tolerance not specified      >> Execute command TOLERANCE MAXIMUM

*** ERROR *** Specifying the command GO
Minimum tolerance not specified      >> Execute command TOLERANCE MINIMUM

*** ERROR *** Specifying the command GO
Profile interval not specified       >> Execute command PROFILE_INTERVAL

*** ERROR *** No feature code match found
Either:-  FC has been deselected     >> Execute SELECT command
or        lookup file is invalid     >> Execute LOOKUP command

.END LIT

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Examples:\*
.BLANK
.NO FILL
   .
   .
   .
   .
.BR;ITCHECK> ^*CHECK ALL_<CR_>\*
.BR;ITCHECK> ^*GO_<CR_>\*
 <PROCESSING CHECK 1>  100% complete
 <PROCESSING CHECK 2>  100% complete
 <PROCESSING CHECK 3>  100% complete
 <PROCESSING CHECK 4>  100% complete
 <PROCESSING CHECK 5>  100% complete
 <PROCESSING CHECK 6>  100% complete
.BR;ITCHECK> 

.FILL

.!******************************************************************************
.PAGE
.SUBTITLE HELP command
.INDEX ITCHECK> commands> HELP
.INDEX ITCHECK> HELP command

.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*HELP\*
.LEFT MARGIN +8
.P 0;Give help on a subject
.LEFT MARGIN -8

.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^*FORMAT:	HELP subject\*


.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*Command parameters:\*

.LEFT MARGIN +8
.P-8;subject
.P 0;The subject on which help is required.
.LEFT MARGIN -8

.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*Description:\*
.P 0;The HELP command looks the rest of the line up in the DTMPREPARE HELP
library. This library contains a brief summary of the operation of each
command. 

.P 0;The information is looked up in the ITCHECK section of the DTMPREPARE
help library, LSL$HELP:DTMPREPARE.HLB. 


.P0;^^^*--------------------------------------------------------------------------------\*
.BR;^^^*Messages:\*

.P 0;Where required, warning messages are output via the VMS LBR$OUTPUT__HELP
utility.

.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*Examples:\*
.BLANK
.BR;ITCHECK> ^^^*HELP CLOSE LIST<CR>\*

.P 0;ITCHECK
.P0;######CLOSE
.P 0;#########LIST
.LEFT MARGIN +3
.P 0;The CLOSE LIST command is used to close the tabulation error file which has been previous
specified by the LIST command.
.LEFT MARGIN -3
.BR;ITCHECK>


.!***************************************************************************
.PAGE
.SUBTITLE IFF command
.INDEX ITCHECK> commands> IFF
.INDEX ITCHECK> IFF command
.P0
^^^*------------------------------------------------------------------------------\*
.BR;^*IFF\*

.LM +8
.P 0;The IFF command specifies the name of an Internal Feature Format file,
containing vector data that is to be input to the checking process.
.LM -8

.P0
^*--------------------------------------------------------------------------------
.LIT
FORMAT:		IFF file_spec
.END LIT
.p 0
^*--------------------------------------------------------------------------------\*
.BR;^*Command parameters:\*

.LM +8
.P-8;file__spec
.P0; The specification of the input IFF file to be opened for checking.

.P0;Any part of the file__spec not supplied for the IFF command will be 
taken from the default file specification 'LSL$IF:IF.IFF'.

.LM -8
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*DESCRIPTION:\*

.P 0;The IFF command specifies the name of an Internal Feature Format file,
containing vector data that is to be input to the checking process.
.P 0;Multiple files may be specified by repeatedly giving the IFF command. Up
to five input IFF files may be defined. Note: all the input IFF file must
share a common local origin. 
.P 0;The SHOW FILES command will display the file specification of the 
input IFF files currently opened for vector checking.

.P 0
^*--------------------------------------------------------------------------------\*
.BR;^*Messages:\*
.P0;The following error messages are specific to the IFF command:
.LIT

*** WARNING *** You must specify a file-spec argument to the IFF command

*** ERROR *** You must specify a file-spec argument to the IFF command

*** ERROR *** Specifying command IFF
A GO command with a checking sequence has been performed
No more IFF input files can be opened at this stage
Execute command CLOSE IFF followed by IFF to open a new series of files

*** ERROR *** Specifying command IFF
Maximum of five files already opened

*** ERROR *** Opening input IFF file 'file_spec'

.END LIT
.TEST PAGE 5
.LIT
*** ERROR *** With input IFF file 'file_spec'
Has a different local origin than the first file opened
Local origin of this file is : X = 'x_coord' Y = 'y_coord'
Local origin of first file is : X = 'x_coord' Y = 'y_coord'

.END LIT
.P 0
^*--------------------------------------------------------------------------------\*
.BR;^*Example:\*

.P0;ITCHECK>^*IFF AREA1__M1<CR>\*
.BR;IFF file LSL$IF:AREA1__M1 selected as input
.BR;ITCHECK>^*IFF AREA1__M2<CR>\*
.BR;IFF file LSL$IF:AREA1__M2 selected as input
.BR;ITCHECK>

.!***************************************************************************
.PAGE
.SUBTITLE INDEX__INTERVAL command
.INDEX ITCHECK> commands> INDEX__INTERVAL
.INDEX ITCHECK> INDEX__INTERVAL command
.P0
^^^*------------------------------------------------------------------------------\*
.BR;^*INDEX__INTERVAL\*

.LM +8
.P 0; Specifies the index contour interval.
.LM -8

.P0
^*--------------------------------------------------------------------------------
.LIT
FORMAT:		INDEX_INTERVAL index_interval
.END LIT
.p 0
^*--------------------------------------------------------------------------------\*
.BR;^*Command parameters:\*

.LM +8
.P-8;index__interval
.P0; This specifies the height interval between 
index contour lines. The value must be a positive number greater
than zero. 
.P0; If SUPPLEMENTARY__INTERVAL command has been executed then:
.LIT

		index_interval > supplementary_interval    
.END LIT
.P0; If CONTOUR__INTERVAL command has been executed then:
.LIT

		index_interval >= contour_interval    
.END LIT

.LM -8
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*DESCRIPTION:\*

.P 0;The INDEX__INTERVAL command is used to specify the index contour interval.
The value is used to check that all 
index contour features are divisible by the index contour interval.
.P 0; The parameter is also used to check that all index contours are present
between the lower and upper contour limits as specified by the ZLIMITS command.
If an index contour is absent and a normal contour present instead then a warning 
message is entered into the error tabulation file. 
.P 0;This value must be assigned before the GO command is given if CHECK 1 
has been requested, otherwise it will be assigned, by default, to the
contour__interval, and a warning to this effect will be given. 
.P 0
^*--------------------------------------------------------------------------------\*
.BR;^*Messages:\*
.P0;The following error messages are specific to the INDEX__INTERVAL command:
.LIT

*** WARNING ***  Specifying command GO
Index interval not specified.         >> Defaulting to previously specified CONT
OUR_INTERVAL

*** ERROR *** Specifying command INDEX_INTERVAL
Value is less than previously specified SUPPLEMENTARY_INTERVAL 
'supplementary_interval'

*** ERROR *** Specifying command INDEX_INTERVAL
Value is less than previously specified CONTOUR_INTERVAL 'contour_interval'

.END LIT
.P 0
^*--------------------------------------------------------------------------------\*
.BR;^*Example:\*

.P0;ITCHECK>^*INDEX__INTERVAL 50<CR>\*
.BR;ITCHECK>^*SHOW INTERVAL<CR>\*
.LIT
INTERVALS:
   No contour interval specified
   Index interval is 50.00
   No supplementary interval specified
   No profile interval specified
.END LIT
.BR;ITCHECK> 
.P0
.!***************************************************************************
.PAGE
.SUBTITLE LAYER command
.INDEX ITCHECK> commands> LAYER
.INDEX ITCHECK> LAYER command
.P0
^^^*------------------------------------------------------------------------------\*
.BR;^*LAYER\*

.LM +8
.P 0; Specifies the initial layer number in the output IFF error file.
.LM -8

.P0
^*--------------------------------------------------------------------------------
.LIT
FORMAT:		LAYER layer
.END LIT
.p 0
^*--------------------------------------------------------------------------------\*
.BR;^*Command parameters:\*

.LM +8
.P-8;layer
.P0; This specifies the first layer number in the output IFF file.  An integer
number in the range 0 to 32761 is required.

.LM -8
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*DESCRIPTION:\*

.P 0;The LAYER command is used to specify the number of the initial layer in the
output IFF error file. The layer number is automatically incremented by 1 between
the different checking processes when the GO command is executed.

.P 0;If the LAYER command is not given then error layer 2 is initially 
created in the output IFF file.
.P 0
^*--------------------------------------------------------------------------------\*
.BR;^*Messages:\*
.P0;The following error messages are specific to the LAYER command:
.LIT

*** ERROR *** Specifying command LAYER
Command requires initial layer number

*** ERROR *** Specifying command LAYER
Parameter 'layer' not in range 1 - 32761

.END LIT
.P 0
^*--------------------------------------------------------------------------------\*
.BR;^*Example:\*

.P0;ITCHECK>^*LAYER 5<CR>\*
.BR;ITCHECK>^*CHECK 2,3:5<CR>\*
.BR;ITCHECK>


.!***************************************************************************
.PAGE
.SUBTITLE LIST command
.INDEX ITCHECK> commands> LIST
.INDEX ITCHECK> LIST command
.P0
^^^*------------------------------------------------------------------------------\*
.BR;^*LIST\*

.LM +8
.P 0; Specifies the name of the tabulation error file.
.LM -8

.P0
^*--------------------------------------------------------------------------------
.LIT
FORMAT:		LIST file_spec
.END LIT
.p 0
^*--------------------------------------------------------------------------------\*
.BR;^*Command parameters:\*

.LM +8
.P-8;file__spec
.P0; The specification of the tabulation error file. 

.LM -8
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*DESCRIPTION:\*

.P 0;The LIST command specifies the name of a tabulation error file which
will contain the list of errors output during the vector checking process. 

.P 0;If the LIST command is not given, the default file-spec will be
ITCHECK.LIS on the current directory.

.P 0;On completion of the GO command any opened tabulation error file
will be closed. The LIST command will need to be given again if another series
of checks are to be performed and a tabulation error file other than the
default is required. 

.P 0;The SHOW FILES command will display the name of the currently specified
tabulation error file.

.P 0
^*--------------------------------------------------------------------------------\*
.BR;^*Messages:\*
.P0;The following error messages are specific to the LIST command:
.LIT

*** WARNING *** You must specify a file-spec argument to the LIST command

*** ERROR *** You must specify a file-spec argument to the LIST command

*** ERROR *** Unable to interpret input file-spec

.END LIT
.P 0
^*--------------------------------------------------------------------------------\*
.BR;^*Example:\*

.P0;ITCHECK>^*LIST AREA1__CHK1_4.TXT<CR>\*
.BR;ITCHECK>

.!***************************************************************************
.PAGE
.SUBTITLE LITES command
.INDEX ITCHECK> commands> LITES
.INDEX ITCHECK> LITES command
.P0
^^^*------------------------------------------------------------------------------\*
.BR;^*LITES\*

.LM +8
.P 0; Specifies the name of an output LITES2 command file.
.LM -8

.P0
^*--------------------------------------------------------------------------------
.LIT
FORMAT:		LITES file_spec
.END LIT
.p 0
^*--------------------------------------------------------------------------------\*
.BR;^*Command parameters:\*

.LM +8
.P-8;file__spec
.P0; The specification of the LITES2 command file.

.P0;Any part of the file__spec not supplied for the LITES command will be 
taken from the default file specification 'LSL$LITES2CMD:LCM.LCM'.
.LM -8
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*DESCRIPTION:\*

.P 0;The LITES command specifies the name of the output LITES2 command or 
guidance file.

.P 0;The LITES2 command file will only be generated if the LITES command is
given.  During the vector checking process most detected errors will generate
entries into this file. The resulting command file can be used in conjunction
with the LITES2 cartographic editor to position an error in the IFF files,
and to assist correction of the data.

.P 0;On completion of the GO command any opened tabulation error file
will be closed. The LITES command will need to be given again if another series
of checks are to be performed and a LITES2 command file is required. 

.P 0;The SHOW FILES command will display the name of the currently specified
LITES2 command file.

.P 0
^*--------------------------------------------------------------------------------\*
.BR;^*Messages:\*
.P0;The following error messages are specific to the LITES command:
.LIT

*** WARNING *** You must specify a file-spec argument to the LITES command

*** ERROR *** You must specify a file-spec argument to the LITES command

*** ERROR *** Unable to interpret input file-spec

.END LIT
.P 0
^*--------------------------------------------------------------------------------\*
.BR;^*Example:\*

.P0;ITCHECK>^*LITES AREA1__CHK1_4.LCM<CR>\*
.BR;ITCHECK>

.!***************************************************************************
.PAGE
.SUBTITLE LOOKUP command
.INDEX ITCHECK> commands> LOOKUP
.INDEX ITCHECK> LOOKUP command
.P0
^^^*------------------------------------------------------------------------------\*
.BR;^*LOOKUP\*

.LM +8
.P 0; Specifies the name of an ITCHECK group definition file.
.LM -8

.P0
^*--------------------------------------------------------------------------------
.LIT
FORMAT:		LOOKUP file_spec
.END LIT
.p 0
^*--------------------------------------------------------------------------------\*
.BR;^*Command parameters:\*

.LM +8
.P-8;file__spec
.P0; The specification of the file containing the group definitions.

.P0;Any part of the file__spec not supplied for the LOOKUP command will be 
taken from the default file specification 'LSL$LOOKUP:ITCHECK.DAT'.
.LM -8
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*DESCRIPTION:\*

.P 0;The LOOKUP command specifies the name of the file containing the ITCHECK group 
definitions.  The loading of a group definition table is a mandatory requirement 
of the ITCHECK module.

.P 0;The SHOW FILES command will display the last group definition file 
loaded using the LOOKUP command. The SHOW GROUPS command may be used to examine
the group definitions

.P 0
^*--------------------------------------------------------------------------------\*
.BR;^*Messages:\*
.P0;The following error messages are specific to the LOOKUP command:
.LIT

*** WARNING *** You must specify a file-spec argument to the LOOKUP command

*** WARNING *** Unrecognised group name 'group_name'

*** WARNING *** No feature codes with group name 'group_name'

*** WARNING *** Group 'group_name' previously defined
Feature codes will be added to the group definition table

*** ERROR *** You must specify a file-spec argument to the LOOKUP command

*** ERROR *** Unable to interpret input file-spec

*** ERROR *** Specifying command LOOKUP
Unable to open file 'file_spec'

*** ERROR *** Specifying command LOOKUP
While reading file 'file_spec'

*** ERROR *** Specifying command LOOKUP
Unable to close file 'file_spec'

.END LIT
.TEST PAGE 3
.LIT
*** ERROR *** in LOOKUP file 'file_spec'
Unexpected character 'char' at this point

*** ERROR *** in LOOKUP file 'file_spec'
Illegal feature code 'feat_code'
Feature code must be between 0 - 32767

*** ERROR *** in LOOKUP file 'file_spec'
New feature code 'feat_code' in group 'group_name' is not unique

.END LIT
.P 0
^*--------------------------------------------------------------------------------\*
.BR;^*Example:\*

.P0;ITCHECK>^*LOOKUP GROUP__TABLE1.DAT<CR>\*
.BR;ITCHECK>^*SHOW GROUPS<CR>\*
.LIT
GROUPS:
   COASTLINES have been defined
The following feature codes are currently selected:
14
   CONTOURS have been defined
The following feature codes are currently selected:
5:10,55
   INDEX_CONTOURS have been defined
The following feature codes are currently selected:
66
   LAKES have been defined
The following feature codes are currently selected:
4
   RIVERS have been defined
The following feature codes are currently selected:
2
   SPOT_HEIGHTS have been defined
The following feature codes are currently selected:
27
   SUPPLEMENTARY_CONTOURS have been defined
The following feature codes are currently selected:
77
.END LIT
.BR;ITCHECK>

.!***************************************************************************
.PAGE
.SUBTITLE OUTPUT command
.INDEX ITCHECK> commands> OUTPUT
.INDEX ITCHECK> OUTPUT command
.P0
^^^*------------------------------------------------------------------------------\*
.BR;^*OUTPUT\*

.LM +8
.P 0; Opens an output IFF (Internal Feature Format) error file.
.LM -8

.P0
^*--------------------------------------------------------------------------------
.LIT
FORMAT:		OUTPUT file_spec
.END LIT
.p 0
^*--------------------------------------------------------------------------------\*
.BR;^*Command parameters:\*

.LM +8
.P-8;file__spec
.P0; The specification of the output IFF error file to receive coordinates in error.

.P0;Any part of the file__spec not supplied for the OUTPUT command will be 
taken from the default file specification 'LSL$IF:IFF.IFF'.

.LM -8
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*DESCRIPTION:\*

.P 0;The OUTPUT command specifies the name of an output Internal Feature Format error file.
If any features are found to be in error during the checking process, the 
coordinates describing the relevant part of the feature will be output to the file.
A maximum of 10 coordinates will be written. Which part of the feature these
coordinates define is dependent on the nature of the error.
.P 0;For each category of error checking a new layer within the IFF will be 
created. The LAYER command may be used to control which layers are created in the file. 
.P 0;The SHOW FILES command will display the file specification of the 
output IFF error file.

.P 0
^*--------------------------------------------------------------------------------\*
.BR;^*Messages:\*
.P0;The following error messages are specific to the OUTPUT command:
.LIT

*** WARNING *** You must specify a file-spec argument to the OUTPUT command

*** ERROR *** You must specify a file-spec argument to the OUTPUT command

*** ERROR  *** Unable to interpret output file-spec

.END LIT
.P 0
^*--------------------------------------------------------------------------------\*
.BR;^*Example:\*

.P0;ITCHECK>^*OUTPUT AREA1__OVERLAY<CR>\*
.BR;ITCHECK>

.!******************************************************************************
.PAGE
.SUBTITLE PAUSE command
.INDEX ITCHECK> commands> PAUSE
.INDEX ITCHECK> PAUSE command

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*PAUSE\*
.LEFT MARGIN +8
.P 0;Pauses ITCHECK execution.
.LEFT MARGIN -8

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*FORMAT:	PAUSE \*


.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Command parameters:\*_ None.


.P0
^*--------------------------------------------------------------------------------\*
.BR;^*DESCRIPTION:\*
.P 0;Pauses ITCHECK execution and issues a prompt for a carriage return to
continue execution. This command is designed for use in software demonstration
situations.


.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Messages:\*_ None.


.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Examples:\*
.BLANK
.BR;ITCHECK> ^*PAUSE_<CR_>\*
.BLANK
.BLANK
.BR;Press <RETURN> to continue^*_<CR_>\*
.BR;ITCHECK> 

.P0
.!***************************************************************************
.PAGE
.SUBTITLE PROFILE__INTERVAL command
.INDEX ITCHECK> commands> PROFILE__INTERVAL
.INDEX ITCHECK> PROFILE__INTERVAL command
.P0
^^^*------------------------------------------------------------------------------\*
.BR;^*PROFILE__INTERVAL\*

.LM +8
.P 0; Specifies the interval between successive vertical profiles.
.LM -8

.P0
^*--------------------------------------------------------------------------------
.LIT
FORMAT:		PROFILE_INTERVAL profile_interval
.END LIT
.p 0
^*--------------------------------------------------------------------------------\*
.BR;^*Command parameters:\*

.LM +8
.P-8;profile___interval
.P0; This specifies the distance between vertical profiles.  The value must 
be a positive integer number. 

.LM -8
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*DESCRIPTION:\*

.P 0;The PROFILE__INTERVAL command is used to specify the interval distance 
along the
x axis between vertical profiles. The parameter is mandatory for a processing 
sequence which includes check 4. 
.P 0
^*--------------------------------------------------------------------------------\*
.BR;^*Messages:\*
.P0;The following error messages are specific to the PROFILE__INTERVAL command:
.LIT

*** ERROR *** Specifying command PROFILE_INTERVAL
Command requires profile interval

*** ERROR *** Specifying command PROFILE_INTERVAL
Value is less than 1

.END LIT
.P 0
^*--------------------------------------------------------------------------------\*
.BR;^*Example:\*

.P0;ITCHECK>^*PROFILE__INTERVAL 5<CR>\*
.BR;ITCHECK>^*SHOW INTERVAL<CR>\*
.LIT
INTERVALS:
   No contour interval specified
   No Index interval specified
   No supplementary interval specified
   Profile interval is 5
.END LIT
.BR;ITCHECK>

.!******************************************************************************
.PAGE
.SUBTITLE RETURN command
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*RETURN\*
.INDEX ITCHECK> commands> RETURN
.INDEX ITCHECK> RETURN command

.LEFT MARGIN +8
.P 0;Restores command input from an indirect file to SYS$COMMAND.
.LEFT MARGIN -8

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*FORMAT:	RETURN \*


.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Command parameters:\*_ None.

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*DESCRIPTION:\*
.P 0;Restores command input from an indirect file to SYS$COMMAND.
.P 0;A typical application is to allow the user to use an indirect command file
to set up those run time defaults which are constant within a flowline and then
return to input from the terminal (or batch stream) for the run specific
commands. To do this RETURN must be the last command in the indirect command
file. 

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Messages:\*

.P 0;The following messages are specific to the RETURN command:
.P 0;RETURN command detected - returning to terminal input
.P 0;RETURN command ignored - command input is already from terminal

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Examples:\*
.BLANK
.BR;ITCHECK> ^*@PRESET__INTERVAL_<CR_>\*
.BR;ITCHECK> CONTOUR__INTERVAL 10.0
.BR;ITCHECK> INDEX__INTERVAL 50.0
.BR;ITCHECK> SUPPLEMENTARY__INTERVAL 2.0
.BR;ITCHECK> PROFILE__INTERVAL 5
.BR;ITCHECK> RETURN
.BR;ITCHECK>
.!******************************************************************************
.PAGE
.SUBTITLE   SELECT FC command
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*SELECT FC \*

.LM +8
.p 0;Select IFF features for checking on the basis of feature code.
.LM -8

.P0
^*--------------------------------------------------------------------------------
.LIT
FORMAT:         SELECT FC feature_code [,...]
.end lit
.p 0;
^*--------------------------------------------------------------------------------\*
.BR;^*Command parameters:\*

.LM +8
.P-8;feature__code
.P0; An integer feature code in the range 0 to 32767. Multiple feature codes
may be specified separated by commas or spaces, while a range of feature codes
may be specified by means of a colon ':'. eg. SELECT FC 10:13 includes feature
codes 10,11,12 and 13 if they are in a particular group definition table. 
Alternatively a group name from the group definition table may be specified
eg SELECT FC RIVERS. 
.LM -8
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*DESCRIPTION:\*


.p 0;The SELECT FC command is used to include IFF features for checking.
Features are included on the basis of their feature code. The feature code must be 
defined in one of the group definition tables for it to be used in the 
checking process.
.P 0;By default ITCHECK will use all features within the group definition 
table loaded using the LOOKUP command. 
.P 0;The SHOW GROUP command can be used to display feature selections 
for each of the groups defined.  
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Messages:\*
.P0;The following error messages are specific to the SELECT and SELECT FC 
commands:
.LIT

*** ERROR *** Specifying command SELECT
Command qualifiers are FC, FSN or LAYER             
.END LIT
.LIT

*** ERROR *** Specifying command SELECT FC
Unexpected character 'char' at this point 

*** ERROR *** Specifying command SELECT FC
Illegal feature code 'fc'

*** ERROR *** Specifying command SELECT FC
No group definitions loaded
Therefore no feature codes available for selection
Use command LOOKUP to load group definition table

*** ERROR *** Specifying command SELECT FC
Invalid group name 'group_name'

.END LIT
.TEST PAGE 5
.LIT
*** ERROR *** Specifying command SELECT FC
Group not defined
Therefore no feature codes available for selection
Use command LOOKUP to load group definition table containing required group

.END LIT
.P 0
^*--------------------------------------------------------------------------------\*
.BR;^*Examples:\*
             
.p0;ITCHECK>^*SELECT FC 1<CR>\*
.br;ITCHECK>^*SELECT FC SPOT__HEIGHTS<CR>\*
.br;ITCHECK>^*SELECT FC 7:10,56:78<CR>\*
.br;ITCHECK>
.!******************************************************************************
.PAGE
.SUBTITLE   SELECT FSN command
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*SELECT FSN \*

.LM +8
.p 0;Include an IFF feature for checking on the basis of feature serial number.
.LM -8

.P0
^*--------------------------------------------------------------------------------
.LIT
FORMAT:	        SELECT FSN fsn [,...]
.end lit
.p 0;
^*--------------------------------------------------------------------------------\*
.BR;^*Command parameters:\*

.LM +8
.P-8;fsn
.P0; An integer feature serial number in the range 0 to 65534. Multiple feature
serial numbers may be specified separated by commas or spaces, while a range of
numbers may be specified by means of a colon ':'. eg. SELECT FSN 10:13 
includes feature serial numbers 10,11,12 and 13. 
.LM -8
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*DESCRIPTION:\*


.p 0;The SELECT FSN command is used to include IFF features for checking. Features are 
included on the basis of their
feature serial number. 
.P 0;By default ITCHECK will use all FSNs' within an layer. 
.P 0;The SHOW SELECTION command may be used to display which FSN's 
are currently selected.

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Messages:\*
.P0;The following error messages are specific to the SELECT and SELECT FSN 
commands:
.LIT

*** ERROR *** Specifying command SELECT
Command qualifiers are FC, FSN or LAYER             
.END LIT
.LIT

*** ERROR *** Specifying command SELECT FSN
Unexpected character 'char' at this point 

*** ERROR *** Specifying command SELECT FSN
Illegal FSN number 'fsn'

.END LIT
.P 0
^*--------------------------------------------------------------------------------\*
.BR;^*Examples:\*
             
.p0;ITCHECK>^*SELECT FSN 4<CR>\*
.br;ITCHECK>^*SELECT FSN 7:10,56:78<CR>\*
.br;ITCHECK>
.!******************************************************************************
.PAGE
.SUBTITLE   SELECT LAYER command
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*SELECT LAYER \*

.LM +8
.p 0;Includes an IFF feature for checking on the basis of layer number.
.LM -8

.P0
^*--------------------------------------------------------------------------------
.LIT
FORMAT:	        SELECT LAYER layer [,...]
.end lit
.p 0;
^*--------------------------------------------------------------------------------\*
.BR;^*Command parameters:\*

.LM +8
.P-8;layer
.p 0;An integer layer number in the range 1 to 32767. Multiple layer numbers
may be specified separated by commas or spaces, while a range of layer numbers
may be specified by means of a colon ':'. eg. SELECT LAYER 10:13 excludes all
features in layers 10,11,12 and 13. 
.LM -8
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*DESCRIPTION:\*

.p 0;The SELECT LAYER command is used to include IFF features for checking.
Features are included on the basis of IFF
layer.
.P 0;By default ITCHECK will use all features within an IFF file. 
.P 0;The SHOW SELECTION command may be used to display which layers 
are currently selected.
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Messages:\*
.P0;The following error messages are specific to the SELECT and SELECT LAYER 
commands:
.LIT

*** ERROR *** Specifying command SELECT
Command qualifiers are FC, FSN or LAYER             

*** ERROR *** Specifying command SELECT LAYER
Unexpected character 'char' at this point 

*** ERROR *** Specifying command SELECT LAYER
Illegal layer number 'layer'

.END LIT
.P 0
^*--------------------------------------------------------------------------------\*
.BR;^*Examples:\*
             
.p0;ITCHECK>^*SELECT LAYER 7<CR>\*
.br;ITCHECK>^*SELECT LAYER 1,7:10<CR>\*
.br;ITCHECK>
.!******************************************************************************
.PAGE
.SUBTITLE SHOW BORDER command
.INDEX ITCHECK> commands> SHOW BORDER
.INDEX ITCHECK> SHOW BORDER command
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*SHOW BORDER\*

.LEFT MARGIN +8
.P 0;Displays information on the current values which define the 
map border.
.LEFT MARGIN -8

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*FORMAT:	SHOW BORDER\*


.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Command parameters: None.\*

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*DESCRIPTION:\*

.P 0;The command SHOW BORDER displays the x, y coordinates which define the
map border.  This will display either the SW and NE coordinates or the SW, NW,
NE and SE coordinates depending on how the BORDER command was given. 
 
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Messages:\*
.P 0;The following message is specific to the SHOW command:
.LIT

*** ERROR *** Specifying the command SHOW
Available show command qualifiers are:
      BORDER      CHECKS      FILES       GROUPS      INTERVALS
      SELECTIONS  TOLERANCES  WINDOWS     ZLIMITS
.END LIT

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Examples:\*

.P0;ITCHECK> ^*BORDER 10.0 220.0 100.0 375.0_<CR_>\*
.BR;ITCHECK> ^*SHOW BORDER_<CR_>\*
.LIT
   Border setting:  SW X = 10.0
                    SW Y = 220.0
                    NE X = 100.0
                    NE Y = 375.0
.END LIT
.BR;ITCHECK>

.!******************************************************************************
.PAGE
.SUBTITLE SHOW CHECKS command
.INDEX ITCHECK> commands> SHOW CHECKS
.INDEX ITCHECK> SHOW CHECKS command
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*SHOW CHECKS\*

.LEFT MARGIN +8
.P 0;Displays information on the current series of checks to be performed.
.LEFT MARGIN -8

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*FORMAT:	SHOW CHECKS\*


.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Command parameters: None.\*

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*DESCRIPTION:\*

.P 0;The command SHOW CHECKS displays the series of checks that will be 
performed when the GO command is given.

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Messages:\*
.P 0;The following message is specific to the SHOW command:
.LIT

*** ERROR *** Specifying the command SHOW
Available show command qualifiers are:
      BORDER      CHECKS      FILES       GROUPS      INTERVALS
      SELECTIONS  TOLERANCES  WINDOWS     ZLIMITS
.END LIT

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Examples:\*

.P0;ITCHECK> ^*CHECKS 1,3:5_<CR_>\*
.BR;ITCHECK> ^*SHOW CHECKS_<CR_>\*
.LIT
   Current settings are 1 3 4 5
.END LIT
.BR;ITCHECK>

.!******************************************************************************
.PAGE
.SUBTITLE SHOW FILES command
.INDEX ITCHECK> commands> SHOW FILES
.INDEX ITCHECK> SHOW FILES command
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*SHOW FILES\*

.LEFT MARGIN +8
.P 0;Displays file specification of all ITCHECK files input and output.
.LEFT MARGIN -8

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*FORMAT:	SHOW FILES\*


.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Command parameters: None.\*

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*DESCRIPTION:\*

.P 0;The command SHOW FILES displays the files specification for all currently 
specified input and output ITCHECK files. File spec data is displayed for input 
IFF files, the output error IFF, the tabulation error file, the LITES2 command 
file and the group definition file lookup. Refer to the 
following commands for the file name specification:-

.P 0;IFF for input IFF files. 
.BR;OUTPUT for output IFF error file. 
.BR;LIST for tabulation error file. 
.BR;LITES for LITES2 command file. 
.BR;LOOKUP for group definition table file. 


.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Messages:\*
.P 0;The following message is specific to the SHOW command:
.LIT

*** ERROR *** Specifying the command SHOW
Available show command qualifiers are:
      BORDER      CHECKS      FILES       GROUPS      INTERVALS
      SELECTIONS  TOLERANCES  WINDOWS     ZLIMITS
.END LIT

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Examples:\*

.P0;ITCHECK> ^*LOOKUP GROUPDEF1_<CR_>\*
.BR;ITCHECK> ^*IFF AREA1__LINE__FC_<CR_>\*
.BR;ITCHECK> ^*IFF AREA1__SPOT__FC_<CR_>\*
.BR;ITCHECK> ^*LIST AREA1.LIS_<CR_>\*
.BR;ITCHECK> ^*LITES AREA1_<CR_>\*
.BR;ITCHECK> ^*SHOW FILES_<CR_>\*
.LIT
FILES:
    IFF file LSL$IF:AREA1_LINE_FC selected for input
    IFF file LSL$IF:AREA1_SPOT_FC selected for input
    LIST file AREA1.LIS selected for tabulated errors
    LITES file LSL$LITES2CMD:AREA1.LCM selected
    LOOKUP file LSL$LOOKUP:GROUPDEF1.DAT loaded the last group definition table
.END LIT
.BR;ITCHECK>

.!******************************************************************************
.PAGE
.SUBTITLE SHOW GROUPS command
.INDEX ITCHECK> commands> SHOW GROUPS
.INDEX ITCHECK> SHOW GROUPS command
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*SHOW GROUPS\*

.LEFT MARGIN +8
.P 0;Displays the name of all currently defined groups, together with the 
selected feature codes.
.LEFT MARGIN -8

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*FORMAT:	SHOW GROUPS\*


.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Command parameters: None.\*

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*DESCRIPTION:\*

.P 0;The command SHOW GROUPS displays the name of all groups defined in the group 
definition table.  The command also listed the currently selected feature 
codes under the defined groups. The group definition table can be loaded by 
using the LOOKUP command. If the SHOW GROUPS command is given before the LOOKUP 
command a message is displayed indicating that no group definition table has 
been loaded.

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Messages:\*
.P 0;The following message is specific to the SHOW command:
.LIT

*** ERROR *** Specifying the command SHOW
Available show command qualifiers are:
      BORDER      CHECKS      FILES       GROUPS      INTERVALS
      SELECTIONS  TOLERANCES  WINDOWS     ZLIMITS
.END LIT

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Examples:\*

.P0;ITCHECK> ^*SHOW GROUPS_<CR_>\*
.LIT
GROUPS:
    No group definition tables loaded
.END LIT
.BR;ITCHECK> ^*LOOKUP GROUPDEF1_<CR_>\*
.BR;ITCHECK> ^*DESELECT FC SHOT__HEIGHTS_<CR_>\*
.BR;ITCHECK> ^*SHOW GROUPS_<CR_>\*
.LIT
    COASTLINES have been defined         
The following feature codes are currently selected:
14
    CONTOURS have been defined         
The following feature codes are currently selected:
5,55:60
    INDEX_CONTOURS have been defined         
The following feature codes are currently selected:
6
    SUPPLEMENTARY_CONTOURS have been defined
7         
    SPOT_HEIGHTS have been defined
No feature codes selected
.END LIT
.BR;ITCHECK>

.!******************************************************************************
.PAGE
.SUBTITLE SHOW INTERVALS command
.INDEX ITCHECK> commands> SHOW INTERVALS
.INDEX ITCHECK> SHOW INTERVALS command
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*SHOW INTERVALS\*

.LEFT MARGIN +8
.P 0;Displays information on the current interval parameters.
.LEFT MARGIN -8

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*FORMAT:	SHOW INTERVALS\*


.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Command parameters: None.\*

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*DESCRIPTION:\*

.P 0;The command SHOW INTERVALS displays the value of the current contour 
interval, index contour interval, supplementary contour interval and profile 
interval. These parameters may be varied using the 
CONTOUR__INTERVAL, INDEX__INTERVAL, SUPPLEMENTARY__INTERVAL and 
PROFILE__INTERVAL commands.

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Messages:\*
.P 0;The following message is specific to the SHOW command:
.LIT

*** ERROR *** Specifying the command SHOW
Available show command qualifiers are:
      BORDER      CHECKS      FILES       GROUPS      INTERVALS
      SELECTIONS  TOLERANCES  WINDOWS     ZLIMITS
.END LIT

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Examples:\*

.P0;ITCHECK> ^*CONTOUR__INTERVAL 10.0_<CR_>\*
.BR;ITCHECK> ^*INDEX__INTERVAL 50.0_<CR_>\*
.BR;ITCHECK> ^*SUPPLEMENTARY__INTERVAL 2.0_<CR_>\*
.BR;ITCHECK> ^*SHOW INTERVALS_<CR_>\*
.LIT
INTERVAL:
    Contour interval is 10.00
    Index interval is 50.00
    Supplementary interval is 2.00
    No profile interval specified
.END LIT
.BR;ITCHECK>

.!******************************************************************************
.PAGE
.SUBTITLE SHOW SELECTIONS command
.INDEX ITCHECK> commands> SHOW SELECTIONS
.INDEX ITCHECK> SHOW SELECTIONS command
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*SHOW SELECTIONS\*

.LEFT MARGIN +8
.P 0;Displays current IFF layer, feature code and FSN selections.
.LEFT MARGIN -8

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*FORMAT:	SHOW SELECTIONS\*


.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Command parameters: None.\*

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*DESCRIPTION:\*

.P 0;The command SHOW SELECTIONS, displays the currently selected IFF layers, feature codes and FSNs. 
The layers, feature codes and FSNs required in the 
processing can be selected and deselected using the appropriate SELECT 
or DESELECT commands.

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Messages:\*
.P 0;The following message is specific to the SHOW command:
.LIT

*** ERROR *** Specifying the command SHOW
Available show command qualifiers are:
      BORDER      CHECKS      FILES       GROUPS      INTERVALS
      SELECTIONS  TOLERANCES  WINDOWS     ZLIMITS
.END LIT

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Examples:\*

.P0;ITCHECK> ^*SHOW SELECTIONS _<CR_>\*
.LIT
SELECTIONS 
    No group definition tables loaded
.END LIT
.BR;ITCHECK> ^*LOOKUP GROUPDEF1_<CR_>\*
.BR;ITCHECK> ^*DESELECT LAYER 6:11_<CR_>\*
.BR;ITCHECK> ^*SHOW SELECTIONS _<CR_>\*
.LIT
SELECTION:
Following layers selected:
0:5,12:32767
Following feature codes selected:
5,7,27,55:60
All FSN's selected
.END LIT
.BR;ITCHECK>

.!******************************************************************************
.PAGE
.SUBTITLE SHOW TOLERANCES command
.INDEX ITCHECK> commands> SHOW TOLERANCES 
.INDEX ITCHECK> SHOW TOLERANCES command
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*SHOW TOLERANCES \*

.LEFT MARGIN +8
.P 0;Displays information on the current tolerances parameters.
.LEFT MARGIN -8

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*FORMAT:	SHOW TOLERANCES \*


.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Command parameters: None.\*

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*DESCRIPTION:\*

.P 0;The command SHOW TOLERANCES displays information on the current border 
tolerance, minimum tolerance and maximum tolerance. These parameters may be 
varied using the appropriate TOLERANCE BORDER, TOLERANCE MINIMUM and 
TOLERANCE MAXIMUM commands.

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Messages:\*
.P 0;The following message is specific to the SHOW command:
.LIT

*** ERROR *** Specifying the command SHOW
Available show command qualifiers are:
      BORDER      CHECKS      FILES       GROUPS      INTERVALS
      SELECTIONS  TOLERANCES  WINDOWS     ZLIMITS
.END LIT

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Examples:\*

.P0;ITCHECK> ^*SHOW TOLERANCES_<CR_>\*
.LIT
    No border tolerance specified
    No minimum tolerance specified
    No maximum tolerance specified
.END LIT
.BR;ITCHECK> ^*TOLERANCE BORDER 1.0_<CR_>\*
.BR;ITCHECK> ^*TOLERANCE MINIMUM 0.5_<CR_>\*
.BR;ITCHECK> ^*TOLERANCE MAXIMUM 4.0_<CR_>\*
.BR;ITCHECK> ^*SHOW TOLERANCES_<CR_>\*
.LIT
INTERVALS:
    Border tolerance value is 1.00
    Minimum tolerance value is 0.50
    Maximum tolerance value is 4.00
.END LIT
.BR;ITCHECK>

.!******************************************************************************
.PAGE
.SUBTITLE SHOW WINDOW command
.INDEX ITCHECK> commands> SHOW WINDOW 
.INDEX ITCHECK> SHOW WINDOW command
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*SHOW WINDOW \*

.LEFT MARGIN +8
.P 0;Displays the current SW and NE coordinates which define the 
map window.
.LEFT MARGIN -8

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*FORMAT:	SHOW WINDOW \*


.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Command parameters: None.\*

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*DESCRIPTION:\*

.P 0;The command SHOW WINDOW displays the SW and NE x, y coordinates
which define the map window. The window coordinates are defined using 
the WINDOW command. 



.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Messages:\*
.P 0;The following message is specific to the SHOW command:
.LIT

*** ERROR *** Specifying the command SHOW
Available show command qualifiers are:
      BORDER      CHECKS      FILES       GROUPS      INTERVALS
      SELECTIONS  TOLERANCES  WINDOWS     ZLIMITS
.END LIT

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Examples:\*

.P0;ITCHECK> ^*WINDOW 50.0 300.0 90.0 350.0_<CR_>\*
.BR;ITCHECK> ^*SHOW WINDOW _<CR_>\*
.LIT
   window setting:  SW X = 50.0
                    SW Y = 300.0
                    NE X = 90.0
                    NE Y = 350.0
.END LIT
.BR;ITCHECK>

.!******************************************************************************
.PAGE
.SUBTITLE SHOW ZLIMITS command
.INDEX ITCHECK> commands> SHOW ZLIMITS 
.INDEX ITCHECK> SHOW ZLIMITS command
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*SHOW ZLIMITS \*

.LEFT MARGIN +8
.P 0;Displays information on the lower and upper contour levels.
.LEFT MARGIN -8

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*FORMAT:	SHOW ZLIMITS \*


.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Command parameters: None.\*

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*DESCRIPTION:\*

.P 0;The command SHOW ZLIMITS displays information on the current lower and 
upper height limits. These parameters may be 
varied using the ZLIMITS command.

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Messages:\*
.P 0;The following message is specific to the SHOW command:
.LIT

*** ERROR *** Specifying the command SHOW
Available show command qualifiers are:
      BORDER      CHECKS      FILES       GROUPS      INTERVALS
      SELECTIONS  TOLERANCES  WINDOWS     ZLIMITS
.END LIT

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Examples:\*

.P0;ITCHECK> ^*ZLIMITS 100.0 500.0_<CR_>\*
.BR;ITCHECK> ^*SHOW ZLIMITS_<CR_>\*
.LIT
ZLIMITS:
    Lower contour limit is 100.000
    Upper contour limit is 500.000
.END LIT
.BR;ITCHECK>

.!******************************************************************************
.PAGE
.SUBTITLE SPAWN command
.INDEX ITCHECK> commands> SPAWN
.INDEX ITCHECK> SPAWN command

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*SPAWN\*
.LEFT MARGIN +8
.P0; The SPAWN command enables a subprocess to be created from within ITCHECK.
.LEFT MARGIN -8

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*FORMAT:                SPAWN command-line\*


.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Command parameters:\*

.LEFT MARGIN +8
.P-8;command-line
.P0; Specifies a DCL command string to be executed as if typed in response to
a '$' prompt. When the command completes, the subprocess terminates and control
is returned to ITCHECK. The command line cannot exceed 80 characters. 
.LEFT MARGIN -8

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*DESCRIPTION:\*
.P0; The SPAWN command enables you to create a subprocess while within
ITCHECK. When the subprocess terminates, control is returned to ITCHECK.
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Messages:\*
.P 0;The following error messages are specific to the SPAWN command:

.LIT

*** ERROR *** Specifying command SPAWN 
Command requires a valid DCL command line

*** ERROR *** Unable to spawn command, returning to ITCHECK

.END LIT
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Examples:\*

.P0;ITCHECK> ^*SPAWN DIRECTORY LSL$DTI:_*_._DTI<CR_>\*

.NO FILL

Directory DUA3:[LSL.DTI]

TEST1_.DTI;1              8/8       18-AUG-1987 07:56  [LSL,DAVEC]
TEST2_.DTI;1              7/8       18-AUG-1987 17:17  [LSL,DAVEC]
TEST2_.DTI;2              7/8       18-AUG-1987 17:34  [LSL,DAVEC]

Total of 3 files, 22/24 blocks.

.FILL
.BR;ITCHECK> 
.!***************************************************************************
.PAGE
.SUBTITLE SUPPLEMENTARY__INTERVAL command
.INDEX ITCHECK> commands> SUPPLEMENTARY__INTERVAL
.INDEX ITCHECK> SUPPLEMENTARY__INTERVAL command
.P0
^^^*------------------------------------------------------------------------------\*
.BR;^*SUPPLEMENTARY__INTERVAL\*

.LM +8
.P 0; Specifies the supplementary contour interval.
.LM -8

.P0
^*--------------------------------------------------------------------------------
.LIT
FORMAT:		SUPPLEMENTARY_INTERVAL supplementary_interval
.END LIT
.p 0
^*--------------------------------------------------------------------------------\*
.BR;^*Command parameters:\*

.LM +8
.P-8;supplementary__interval
.P0; This specifies the height interval between any two  
supplementary contour lines. The value must be a positive number greater
than zero. 
.P0; If CONTOUR__INTERVAL command has been executed then:
.LIT

		supplementary_interval <= contour_interval    
.END LIT
.P0; If INDEX__INTERVAL command has been executed then:
.LIT

		supplementary_interval < index_interval    
.END LIT

.LM -8
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*DESCRIPTION:\*

.P 0;The SUPPLEMENTARY__INTERVAL command is used to specify the supplementary index contour interval.
The value is used to check that all 
supplementary contour features are divisible by the supplementary contour interval.
.P 0;This value must be assigned before the GO command is given if CHECK 1 
has been requested, otherwise it will be assigned, by default, to the
contour__interval, and a warning to this effect will be given. 
.P 0
^*--------------------------------------------------------------------------------\*
.BR;^*Messages:\*
.P0;The following error messages are specific to the SUPPLEMENTARY__INTERVAL command:
.LIT

*** WARNING ***  Specifying command GO
Supplementary interval not specified. >> Defaulting to previously specified CONT
OUR_INTERVAL

*** ERROR *** Specifying command SUPPLEMENTARY_INTERVAL
Value is greater than previously specified CONTOUR_INTERVAL 'contour_interval'

*** ERROR *** Specifying command SUPPLEMENTARY_INTERVAL
Value is greater than previously specified INDEX_INTERVAL 'index_interval'

.END LIT
.P 0
^*--------------------------------------------------------------------------------\*
.TEST PAGE 12
.BR;^*Example:\*

.P0;ITCHECK>^*SUPPLEMENTARY__INTERVAL 2<CR>\*
.BR;ITCHECK>^*SHOW INTERVAL<CR>\*
.LIT
INTERVALS:
   No contour interval specified
   No index interval specified
   Supplementary interval is 2.00
   No profile interval specified
.END LIT
.BR;ITCHECK>
.P0
.!***************************************************************************
.PAGE
.SUBTITLE TOLERANCE BORDER command
.INDEX ITCHECK> commands> TOLERANCE BORDER
.INDEX ITCHECK> TOLERANCE BORDER command
.P0
^^^*------------------------------------------------------------------------------\*
.BR;^*TOLERANCE BORDER\*

.LM +8
.P 0; Specifies the border tolerance value.
.LM -8

.P0
^*--------------------------------------------------------------------------------
.LIT
FORMAT:		TOLERANCE BORDER border_tol
.END LIT
.p 0
^*--------------------------------------------------------------------------------\*
.BR;^*Command parameters:\*

.LM +8
.P-8;border__tol
.P0; This specifies the border tolerance value. The value must be a positive
real number. Normally this value would be small. Values less than 0.5% of the x or y 
map extent being typical.  

.LM -8
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*DESCRIPTION:\*

.P 0;The TOLERANCE BORDER command is used to specify the border tolerance
value. This parameter is mandatory for check 2. The border tolerance  is used
to determine whether line features touch the map border; and no feature lies
partly or wholly outside the map border.   See section under "Tolerance" in
ITCHECK utility description for more information on tolerance parameters. 
.P 0
^*--------------------------------------------------------------------------------\*
.BR;^*Messages:\*
.P0;The following error messages are specific to the TOLERANCE and TOLERANCE 
BORDER commands:
.LIT

*** ERROR *** Specifying command TOLERANCE 
Command qualifiers are
BORDER   MAXIMUM   MINIMUM

*** ERROR *** Specifying command TOLERANCE BORDER
Command requires tolerance value

*** ERROR *** Specifying command TOLERANCE BORDER
Value 'border_tol' is less than or equal to 0.0

.END LIT
.P 0
^*--------------------------------------------------------------------------------\*
.BR;^*Example:\*

.P0;ITCHECK>^*TOLERANCE BORDER 1<CR>\*
.BR;ITCHECK>^*SHOW TOLERANCE<CR>\*
.LIT
TOLERANCES:
   Border tolerance value is 1.000
   No minimum tolerance specified
   No maximum tolerance specified
.END LIT
.BR;ITCHECK>
.!***************************************************************************
.PAGE
.SUBTITLE TOLERANCE MAXIMUM command
.INDEX ITCHECK> commands> TOLERANCE MAXIMUM
.INDEX ITCHECK> TOLERANCE MAXIMUM command
.P0
^^^*------------------------------------------------------------------------------\*
.BR;^*TOLERANCE MAXIMUM\*

.LM +8
.P 0; Specifies the maximum tolerance value.
.LM -8

.P0
^*--------------------------------------------------------------------------------
.LIT
FORMAT:		TOLERANCE MAXIMUM maximum_tolerance
.END LIT
.p 0
^*--------------------------------------------------------------------------------\*
.BR;^*Command parameters:\*

.LM +8
.P-8;maximum__tolerance
.P0; This specifies the maximum tolerance value. The value must be a positive
real number. Normally this value should reflect the maximum allowable gap
between continuous line features.

.LM -8
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*DESCRIPTION:\*

.P 0;The TOLERANCE MAXIMUM command is used to specify the maximum tolerance
value. The command is mandatory for check 2. The value defined by this command
is used to test whether a continuous line feature is connected to similar
allowing for any valid gaps which may be present. Breaks can occur in contour
line features where it is necessary to annotate a height. The maximum
tolerance value specifies the maximum width of such gaps.  See section under
"Tolerance" in ITCHECK utility description for more information on 
tolerance parameters. 

.P 0
^*--------------------------------------------------------------------------------\*
.BR;^*Messages:\*
.P0;The following error messages are specific to the TOLERANCE and TOLERANCE MAXIMUM commands:
.LIT

*** ERROR *** Specifying command TOLERANCE 
Command qualifiers are
BORDER   MAXIMUM   MINIMUM

*** ERROR *** Specifying command TOLERANCE MAXIMUM
Command requires tolerance value

*** ERROR *** Specifying command TOLERANCE MAXIMUM
Value 'minimum_tolerance' is less than or equal to 0.0

*** ERROR *** Specifying command TOLERANCE MAXIMUM
Value is less than or equal to previously specified TOLERANCE MINIMUM
'minimum_tolerance'

.END LIT
.P 0
^*--------------------------------------------------------------------------------\*
.BR;^*Example:\*

.P0;ITCHECK>^*TOLERANCE MAXIMUM 1<CR>\*
.BR;ITCHECK>^*SHOW TOLERANCE<CR>\*
.LIT
TOLERANCES:
   No border tolerance specified
   Minimum tolerance value is 1.000
   No maximum tolerance specified
.END LIT
.BR;ITCHECK>
.P 0;
.!***************************************************************************
.PAGE
.SUBTITLE TOLERANCE MINIMUM command
.INDEX ITCHECK> commands> TOLERANCE MINIMUM
.INDEX ITCHECK> TOLERANCE MINIMUM command
.P0
^^^*------------------------------------------------------------------------------\*
.BR;^*TOLERANCE MINIMUM\*

.LM +8
.P 0; Specifies the minimum tolerance value.
.LM -8

.P0
^*--------------------------------------------------------------------------------
.LIT
FORMAT:		TOLERANCE MINIMUM minimum_tolerance
.END LIT
.p 0
^*--------------------------------------------------------------------------------\*
.BR;^*Command parameters:\*

.LM +8
.P-8;minimum__tolerance
.P0; This specifies the minimum tolerance value. The value must be a positive
real number. Normally minimum tolerance would be set to have a value which is
smaller than the closest distance between any two continuous line features
having different heights.   
.LM -8
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*DESCRIPTION:\*

.P 0;The TOLERANCE MINIMUM command is used to specify the minimum tolerance
value. The command is mandatory for check 2. The value defined using this
command is used to test whether a continuous line feature is connected to
another continuous line feature of the same height. See section under
"Tolerance" in ITCHECK utility description for more information on tolerance
parameters. 
 
.P 0
^*--------------------------------------------------------------------------------\*
.BR;^*Messages:\*
.P0;The following error messages are specific to the TOLERANCE and TOLERANCE MINIMUM commands:
.LIT

*** ERROR *** Specifying command TOLERANCE 
Command qualifiers are
BORDER   MAXIMUM   MINIMUM

*** ERROR *** Specifying command TOLERANCE MINIMUM
Command requires tolerance value

*** ERROR *** Specifying command TOLERANCE MINIMUM
Value 'minimum_tolerance' is less than or equal to 0.0

*** ERROR *** Specifying command TOLERANCE MINIMUM
Value is greater than or equal to previously specified TOLERANCE MAXIMUM
'maximum_tolerance'

.END LIT
.P 0
^*--------------------------------------------------------------------------------\*
.BR;^*Example:\*

.P0;ITCHECK>^*TOLERANCE MINIMUM 1<CR>\*
.BR;ITCHECK>^*SHOW TOLERANCE<CR>\*
.LIT
TOLERANCES:
   No border tolerance specified
   Minimum tolerance value is 1.000
   No maximum tolerance specified
.END LIT
.BR;ITCHECK>
.!******************************************************************************
.PAGE
.SUBTITLE WAIT command
.INDEX ITCHECK> commands> WAIT
.INDEX ITCHECK> WAIT command

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*WAIT\*
.LEFT MARGIN +8
.P 0;Suspend processing for the specified number of seconds.
.LEFT MARGIN -8

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*FORMAT:	WAIT seconds\*


.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Command parameters:\*

.LEFT MARGIN +8
.P-8;seconds
.P 0;The number of seconds for which ITCHECK processing is to be suspended.
An integer value is required
.LEFT MARGIN -8

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*DESCRIPTION:\*
.P 0;The WAIT command causes processing to be suspended for a specified
number of seconds. It is designed for use in software demonstration 
situations and is of no value in a production flowline.

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Messages:\*

.P 0;The following warning message is specific to the WAIT command:
.P 0;_*_*_*_ WARNING_ _*_*_*_ You must specify the number of seconds to wait

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Examples:\*
.BLANK
.BR;ITCHECK> ^*WAIT 4_<CR_>\*
.BR;ITCHECK>



.!******************************************************************************
.PAGE
.SUBTITLE WINDOW command
.INDEX ITCHECK> commands> WINDOW
.INDEX ITCHECK> WINDOW command

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*WINDOW\*
.LEFT MARGIN +8
.P0;Specifies the rectangle to be used in the checking processes.
.LEFT MARGIN -8

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*FORMAT:	WINDOW x__min y__min x__max y__max\*


.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Command parameters:\*

.LEFT MARGIN +8
.P-8;x__min y__min
.P 0;The coordinates of the bottom left hand corner of the defining rectangle.
.P-8;x__max y__max
.P 0;The coordinates of the top right hand corner of the defining rectangle.
.LEFT MARGIN -8

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*DESCRIPTION:\*
.P 0;The command is used to define rectangular limits to be used in the error 
checking process. This is useful if only a small segment of the map needs 
to be vector checked. If any part of a feature passes through the rectangle 
defined by the WINDOW command then the whole of the feature will be used in 
the error checking process. Features that do not intersect the defined rectangle are 
excluded from checking.

.P 0;The SHOW WINDOW command will display the current window settings.

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Messages:\*

.P 0;The following warning messages are specific to the WINDOW command:
.LIT

*** ERROR *** Specifying command WINDOW
Command requires 2 x,y coordinate pairs (SW and NE)

*** ERROR *** Specifying command WINDOW
NE x coordinate < SW x coordinate

*** ERROR *** Specifying command WINDOW
NE y coordinate < SW y coordinate

.END LIT
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Examples:\*
.P0;ITCHECK> ^*WINDOW 100.0 150.0 200.0 200._<CR_>\*
.BR;ITCHECK> 

.!***************************************************************************
.PAGE
.SUBTITLE ZLIMITS command
.INDEX ITCHECK> commands> ZLIMITS
.INDEX ITCHECK> ZLIMITS command
.P0
^^^*------------------------------------------------------------------------------\*
.BR;^*ZLIMITS\*

.LM +8
.P 0; Specifies the lower and upper contour limits
.LM -8

.P0
^*--------------------------------------------------------------------------------
.LIT
FORMAT:		ZLIMITS min_contour max_contour
.END LIT
.p 0
^*--------------------------------------------------------------------------------\*
.BR;^*Command parameters:\*

.LM +8
.P-8;min__contour max__contour
.P0; This specifies the lower and upper contour limits.  The values can be any
real numbers. The upper limit must be greater than the lower limit.

.LM -8
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*DESCRIPTION:\*

.P 0;The ZLIMITS command is used to specify the lower and upper contour limits
for height checking. The command is mandatory for a processing sequence which 
includes check 1. The minimum contour and maximum contour parameters are used 
to ensure that all contours and index contours are present within the height 
limits, and that no contours lie outside the height range.
  
.P 0
^*--------------------------------------------------------------------------------\*
.BR;^*Messages:\*
.P0;The following error messages are specific to the ZLIMITS command:
.LIT

*** ERROR *** Specifying command ZLIMITS
Command requires lower and upper height limits

*** ERROR *** Specifying command ZLIMITS
lower height = upper height

*** ERROR *** Specifying command ZLIMITS
lower height > upper height

.END LIT
.P 0
^*--------------------------------------------------------------------------------\*
.BR;^*Example:\*

.P0;ITCHECK>^*ZLIMITS 0.0 100.0<CR>\*
.BR;ITCHECK>^*SHOW ZLIMITS<CR>\*
.LIT
ZLIMITS:
   Lower contour limit is 'minimum_contour'
   Upper contour limit is 'maximum_contour'
.END LIT
.BR;ITCHECK>
 
.!******************************************************************************
.!*** EXAMPLES                                                               ***
.!******************************************************************************
.PAGE
.SUBTITLE
.FIGURE 5
.STYLE HEADERS ,,,,1
.HL 1 ^^^*ITCHECK_ examples\*
.STYLE HEADERS ,,,,7
.SUBTITLE EXAMPLES

.PAGE
^*--------------------------------------------------------------------------------\*
.BLANK2
.NO FILL

$ ITCHECK
DTMPREPARE module ITCHECK of 12:20:05 30-MAR-88
ITCHECK> ^*LOOKUP LOOKUP3.DAT<CR>\*
ITCHECK> ^*LIST LIST3.LIS<CR>\*
ITCHECK> ^*OUTPUT OUTPUT3.IFF<CR>\*
ITCHECK> ^*IFF IFF3_1<CR>\*
IFF file LSL$IF:IFF3_1.IFF;0 selected as input
ITCHECK> ^*IFF IFF3_2<CR>\*
IFF file LSL$IF:IFF3_2.IFF;0 selected as input
ITCHECK> ^*IFF IFF3_3<CR>\*
IFF file LSL$IF:IFF3_3.IFF;0 selected as input
ITCHECK> ^*IFF IFF3_4<CR>\*
IFF file LSL$IF:IFF3_4.IFF;0 selected as input
ITCHECK> ^*IFF IFF3_5<CR>\*
IFF file LSL$IF:IFF3_5.IFF;0 selected as input
ITCHECK> ^*TOLERANCE BORDER 1<CR>\*
ITCHECK> ^*TOLERANCE MAXIMUM 5<CR>\*
ITCHECK> ^*TOLERANCE MINIMUM 1<CR>\*
ITCHECK> ^*CONTOUR 10<CR>\*
ITCHECK> ^*INDEX 50<CR>\*
ITCHECK> ^*SUPPLEMENTARY 2<CR>\*
ITCHECK> ^*PROFILE 10<CR>\*
ITCHECK> ^*ZLIMITS 0 190<CR>\*
ITCHECK> ^*DESELECT FC 27<CR>\*
ITCHECK> ^*SHOW GROUPS<CR>\*

GROUPS:
   COASTLINES have been defined
The following feature codes are currently selected:
14
   CONTOURS have been defined
The following feature codes are currently selected:
5
   INDEX_CONTOURS have been defined
The following feature codes are currently selected:
6
   LAKES have been defined
The following feature codes are currently selected:
4
   RIVERS have been defined
The following feature codes are currently selected:
2
   SPOT_HEIGHTS have been defined
No feature codes selected
   SUPPLEMENTARY_CONTOURS have been defined
The following feature codes are currently selected:
7

ITCHECK> ^*CHECK 1,3:5<CR>\*
ITCHECK> ^*GO<CR>\*
 
  IFF Feature Code Summary
The following feature codes are currently selected:
14
Group name: COASTLINES number of items: 1
The following feature codes are currently selected:
5
Group name: CONTOURS number of items: 32
The following feature codes are currently selected:
6
Group name: INDEX_CONTOURS number of items: 3
The following feature codes are currently selected:
4
Group name: LAKES number of items: 1
The following feature codes are currently selected:
2
Group name: RIVERS number of items: 1
No feature codes selected
Group name: SPOT_HEIGHTS number of items: 0
The following feature codes are currently selected:
7
Group name: SUPPLEMENTARY_CONTOURS number of items: 2

< PROCESSING CHECK 1> 100% complete 
< PROCESSING CHECK 3> 100% complete 
< PROCESSING CHECK 4> 100% complete 
< PROCESSING CHECK 5> 100% complete
ITCHECK> ^*EXIT<CR>\*
 ELAPSED:    0 00:04:27.10  CPU: 0:00:30.52  BUFIO: 286  DIRIO: 587  FAULTS: 384 

$
.!******************************************************************************
.!*** MESSAGES                                                               ***
.!******************************************************************************
.PAGE
.SUBTITLE
.FIGURE 5
.STYLE HEADERS ,,,,1
.HL 1 ^^^*ITCHECK_ messages\*
.STYLE HEADERS ,,,,7

.PAGE
.SUBTITLE MESSAGES (WARNING)
^*--------------------------------------------------------------------------------\*

.HL 2 ^^^*MESSAGES (WARNING)\* None
.PAGE
.SUBTITLE MESSAGES (ERROR)
^*--------------------------------------------------------------------------------\*

.HL 2 ^^^*MESSAGES (ERROR)\* None
.PAGE
.SUBTITLE MESSAGES (FATAL)
^*--------------------------------------------------------------------------------\*

.HL 2 ^^^*MESSAGES (FATAL)\* None
.PAGE
.SUBTITLE MESSAGES (OTHER)
^^^*--------------------------------------------------------------------------------\*

.HL 2 ^^^*MESSAGES (OTHER)\*

In addition to the above messages which are generated by the program itself,
other messages  may  be   produced by  Laser-Scan libraries. In particular,
messages may be  generated by the IFF library or by the  Laser-Scan  I/O
library,  LSLLIB.  IFF library messages are introduced by %IFF and are
documented in the IFFLIB Reference manual. LSLLIB  messages  are  introduced 
by '%LSLLIB' and are generally self-explanatory.  They are often used  to 
explain the details of program generated errors. 

.P 0;If the  cause of  the error cannot be traced by the user, and 
Laser-Scan are consulted, then the output  file should  be  preserved to 
facilitate diagnosis. 



