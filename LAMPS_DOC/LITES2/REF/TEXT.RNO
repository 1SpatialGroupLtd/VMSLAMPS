
.!
.! TEXT
.! This part of the LITES2 Reference manual talks about
.! text handling within LITES2
.!
.REQUIRE "REF.HD"
.INDEX text
.!

.HL 1 ^^^*TEXT within LITES2\*
.P0
Text features in maps are different from other data, in that they
generally have no physical equivalent on the ground.
.BR; This section of the user manual explains in detail how text is
handled within LITES2.

.INDEX Text characteristics
.HL 2 ^*Characteristics common to all text features\*
.P0
Text features are handled in LITES2 by storing (at least) the following
characteristics in the IFF file:
.LIST '*'
.LE;the coordinates of the text's locating point
.LE;the angle at which the text lies
.LE;the text string (as ASCII characters)
.LE;the feature code, which must be graphical type 10, in the current FRT
.LE;the style of the text, which is an integer in the range 0 - 3
.LE;the category of the text, which is an integer in the range 0-63
.END LIST
The style and category are characteristics that are specific to Ordnance
Survey maps, and may be set to 0 (or even used for other purposes) with
non-Ordnance Survey type data. 
.B
In addition, a flag is set to indicate that the feature is a text. This
flag is set for the use of other programs which may not use the FRT
mechanism.

.INDEX Size of text
.HL 2 ^*Size of text\*
.P0
The area that a text occupies on the map depends on:
.LIST '*'
.LE;the number and actual characters in the ASCII string
.LE;the shape of the characters. These are defined in the TRI file that 
is being used. For details of TRI files, see the FRTLIB reference manual.
.LE;the height of the text. The width of each character in a font is a
fixed proportion of its height; all characters in a text string have the
same height, which is called the height of the text. 
.END LIST
.INDEX Height of text
The height of a text can either be stored in the IFF file or in the FRT
file, and which method is chosen depends on the setting of the HEIGHT
option. If this is enabled (using the ENABLE HEIGHT command), then the
height is stored in the IFF file and as a consequence is variable, for
any feature code.  By default the HEIGHT option is disabled, and this
means that the height of any text feature is defined by its feature
code; the actual height is read from the FRT. 
.B
Heights are stored in the FRT as mm at map scale.
.B
When heights are stored in the IFF file, there are two possibilities:
.LIST '*'
.LE;if the POINT option is disabled, then the height is stored as mm at
map scale. 
.BR
Note that the smallest discrete step in height in this case is 0.01mm.
.LE;if the POINT option is enabled (the default case), then the height
is stored as a point size.  These are point sizes as defined by the
Ordnance Survey, Southampton, and their relationship to mm on the map
sheet are given in the following table: 
.TP 17
.NOFILL

           ^*Point Size\*          ^*Height in mm\*

               24                  5.00
               22                  4.45
               20                  3.95
               18                  3.60
               16                  3.25
               14                  2.90
               12                  2.45
               11                  2.20
               10                  2.05
                9                  1.75
                8                  1.60
                7                  1.40
                6                  1.25
                5                  1.10
                3                  0.85
.FILL
.B
Note that some point sizes are undefined.
.END LIST

.INDEX Justification of text
.HL 2 ^*Justification of text\*
.P0
By enabling the positioning option (ENABLE POSITION - enabled by default) a
locating (or justification) position can be stored with each text.  This
is an integer in the range 0 - 8, indicating one of the nine possible
locating points as shown in the following diagram:
.TP 6
.NOFILL

                     2-------------5-------------8
                     _|             _|             _|
                     1-------------4-------------7
                     _|             _|             _|
                     0-------------3-------------6

.FILL
This is the point of the text that will lie over its digitised point.
.B
If the location option is disabled, LITES2 treats all texts as if 
locating position 0 has been chosen.
.B
Each character in a font is usually terminated by some blank space, so
that the characters in strings of text are separated. When the length of
a text string is required (e_.g_. when drawing a box around it), this
space must be subtracted from the last character.
.B
The TOLERANCE JUSTIFY command sets the amount to be subtracted from a
text string to represent this blank space. The argument is the
proportion of the height of the text that is blank space. By default the
value 0.333333 is used. 

.INDEX Composite text
.HL 2 ^*Composite text\*
.P0
There is an additional (licensed) feature in LITES2 to allow the
construction and manipulation of composite text features. Access to this
feature is achieved by enabling the COMPOSITE option (disabled by
default). 
.B
Composite texts are texts that consist of several text strings, all of
which have their own characteristics.  It is possible to either
manipulate the text feature as a whole, or to edit each sub-text
individually. When editing the whole feature, then LITES2 will be in
MODIFY state;  when editing the sub_texts then LITES2 goes into MODIFY
(part) state. 
.B
LITES2 commands that are specifically for manipulating composite texts
are: 
.TP 4
.NOFILL

   THIS, FIRST, NEXT, PREVIOUS, LAST,
   WHOLE, COLLAPSE,
   PARAGRAPH, SPLIT, BEND
.FILL
.B
.NOTE ^*Important Note\*
This feature uses the TS entry in the IFF file. While the new IMP suite
of utility programs and the FPP plotting programs can deal with these
entries, other older programs cannot. 
.B
In particular the DAMP utilities will not work on these files, and some data
conversion programs such as I2MOSS etc_. will not deal with
composite texts.
.END NOTE

