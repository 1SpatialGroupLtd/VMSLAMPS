
.!
.! EDGEMATCH
.! This part of the LITES2 Reference manual talks about
.! edge matching
.!
.REQUIRE "REF.HD"
.INDEX Edgematching
.!
.HL 1 ^^^*Edgematching within LITES2\*
.P 0
.!
The EDGEMATCH command allows features on either side of a predefined line to be
JOINed, TIEd  or EXTENDed automatically on this line.
.BR; This section of the user  manual explains in detail how this is achieved
and how to use the command. 
.!
.HL 2 ^*Defining a base to EDGEMATCH to\* 
Before features can be EDGEMATCHed a base must be defined.  This 
base is a vector of a linear feature.  To define it, a feature is found;
 the cursor is moved to the required vector (first vertex, or between 
the two vertices) with the VERTEX, NEXT, PREVIOUS, FRACTION (etc) 
commands; finally the command BASE EDGE is given.  Any previously defined
edgematching base will have been overwritten.
.BL
Details of the current edgematching base can be seen by giving the 
SHOW BASE command.
.HL 2 ^*Controlling EDGEMATCHing\*
Default settings of things that control edgematching may need to be 
altered. These are:-
.LM 30
.NO JUSTIFY
.BL
.INDENT-25;_* TOLERANCE EDGE######-##for finding points within this 
distance of the line, and then within this distance of the projection 
of the aforementioned point on the line.  The default is set to 1.5 
sheet mms
.BL
.INDENT-25;_* TOLERANCE PROPAGATE#-##any mismatch between edgematched 
features will be propagated this distance back along both features.
.BR
If no propagation is required (ie the mismatch is to be taken 
out on the first vector of each feature) then this value should 
be set to 0_.0.  The default is 10 sheet mms.
.BL
.INDENT-25;_* MATCH FSN###########-##only features with the same FSN 
will be edgematched.
.BR
OFF by default.
.BL
.INDENT-25;_* MATCH FC############-##only features with the same FC 
will be edgematched.
.BR
ON by default.
.BL
.INDENT-25;_* MATCH MAP###########-##only features within the same 
map will be edgematched.
.BR
ON by default.
.BL
.INDENT-25;_* MATCH LAYER#########-##only features within the same 
layer will be edgematched.
.BR
ON by default.
.BL
.INDENT-25;_* MATCH PC############-##only features with the same process 
code will be edgematched.
.BR
OFF by default.
.BL
.INDENT-25;_* MATCH AC############-##only features which have exactly
matching AC types 2, 3, 4 and 5 will be edgematched.
.BR
OFF by default.
.LM 0
.JUSTIFY
.BL
Details of the current settings can be seen with the SHOW TOLERANCE and
SHOW MATCH commands.
.BL
Note that MATCH settings are used by the TIE and JOIN command, and that
the TOLERANCE PROPAGATE setting is used by the PROPAGATE command.
.HL 2 ^*Invoking EDGEMATCHing\*
There are three commands to invoke edgematching - EDGEMATCH JOIN,
EDGEMATCH TIE and EDGEMATCH EXTEND.  These are based on the LITES2 JOIN,
TIE  and EXTEND commands.
.BL
LITES2 does not allow a feature to be JOINed (or TIEd) to itself.
This means that EDGEMATCH JOIN will not produce closed 
features.  To achieve this effect, it is necessary to use the 
EDGEMATCH TIE command first, to produce features whose ends are 
coincident, then EDGEMATCH JOIN will give the desired
result.
.HL 2 ^*What EDGEMATCHing does\*
The program acts as follows (EDGEMATCH JOIN and EDGEMATCH TIE):-
.LIST
.LE; It SEARCHes for the next end of a feature (graphical types 1 6 11 _& 12)
which lies within the edgematching tolerance of the edgematching
base (and satisfies any current SELECTion criteria).
.BR
It will not find the base itself.
.LE; It drops the cursor perpendicularly onto the base (or its
extension) - position A
.LE; It FINDs the features (that satisfy the current SELECTion criteria)
whose ends lie within the edgematching tolerance of the cursor.  If
there are several, only the four closest are considered; if there are
none, then the program returns to step 1).
.LE;It looks at the (up to) four features that have been found
and checks them against certain criteria (see below).
.BR
The closest feature that satisfies all the criteria is accepted.  If
none of the four features satisfy all the criteria then the program
returns to step 1).
.LE; A perpendicular is dropped from the end of this found feature onto
the base (or its extension) - position B.  The mean of position A and 
position B is computed - if it lies outside the base, it is moved onto
the end of the base - and the two features are TIEd or JOINed, 
as appropriate, at this point.  Any mismatch is propagated along 
each feature the defined distance.
.LE; For TIE, one of the two features is allowed to be in a read-only map.
In this case, the end of the editable feature is moved to the nearest position
on the baseline to the end of the read only feature.
.LE; If the features are TIEd together, the second feature has its end
marked, so that it will not be found in step 1).
.LE;The program returns to step 1).
.ELS
When there are no more features found in the SEARCH, the edgematch is
complete.
.BR
If there were any features which were found in step 1, that were not
ultimately matched with something, the user is given the chance of
giving the REVIEW command. This runs a command file that:-
.LIST '*'
.LE; takes the user to all the positions where a problem occurred
.LE; lists the problems
.LE; allows the user to make any manual edits in the area.
.ELS
.HL 2 ^*Criteria for accepting matching features.\*
The criteria used to accept found features
to match with the "searched for" feature are:- 
.LIST '*'
.LE; The found feature must not have a substantial part of it lying
along the base line.
.LE; The two features must have the second from end vertex, from the
end of the feature in question, on opposite sides of the edgematch
base.
.LE; The found feature must not be the edgematch base
.LE; If MATCH FC is set, then the two features must have the same feature
code.
.LE; If MATCH FSN is set, then the two features must have the same 
feature serial number.
.LE; If MATCH MAP is set, then the two features must be in the same
map.
.LE; If MATCH LAYER is set, then the two features must be in the same 
layer.
.LE; If MATCH PC is set, then the two features must have the same 
process code set.
.LE; If MATCH AC is set, then the two features must have exactly the
same AC types 2, 3, 4 and 5. (ie values and any strings must match)
.LE; The found feature has not been used to match to anything else
before.
.ELS
.HL 2 ^*EDGEMATCH EXTEND\*
EDGEMATCH EXTEND SEARCHes for the next end of a feature as with JOIN and TIE.
The intersection of the last line segment of the feature and the baseline is 
calculated.
The feature is then extended or truncated to the intersection point 
on the base line. The amount by which the feature may be extended is limited to
three times the current edgematching tolerance.
.BL 
REVIEW takes the user to those positions where no intersection
 with the baseline could be calculated. This may occur when:-
.list '*'
.le;the last line segment points away from the baseline or is parallel to it.
.le;the intersection lies outside the baseline. 
.le;the length of the line which has been extended is greater than three
times the edgematching tolerance.
.els
