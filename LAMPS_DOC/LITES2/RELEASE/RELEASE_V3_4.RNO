.LEFT MARGIN  0;.RIGHT MARGIN 80;.PAGE SIZE    60,80
.FLAGS BOLD
.KEEP


.!!!!!!!!!!!!   for double sided output
.!!!LAYOUT 2,2
.!!!!!!!!!!!!


.!** title page
.NOFILL
.!                                            Bureau / Sales Support / Software
.FILL
.FIGURE 14
.CENTRE ;^&Laser-Scan Ltd.\& 
.FIGURE 2
.CENTRE ;^&LITES2\&
.BLANK
.CENTRE ;^&Release Notes -  Versions 3.3 and 3.4\&
.!

.FLAGS SUBSTITUTE
.FOOT
.NOFILL
Copyright (C) $$year Laser-Scan Ltd
Science Park, Milton Road, Cambridge, England CB4 4FY  tel: (0223) 420414

Document "LITES2 Release"				Category "Release Notes"
Document Issue 3.3	Clarke Brunt			29-Oct-1990
Document Issue 3.4	Clarke Brunt			26-Mar-1991
Modified		Clarke Brunt			26-April-1991
Modified		Clarke Brunt			15-May-1991
Modified		Clarke Brunt			29-May-1991
Modified		Clarke Brunt			31-May-1991
Modified		Clarke Brunt			17-Jun-1991
.FILL
.END FOOT
.NOFLAGS SUBSTITUTE

.!* and the title to go at the top of each page
.TITLE LITES2 Release notes
.PAGE
.HL 1 ^&CONTENT\&
This document describes recent changes to the Laser-Scan LAMPS software
package LITES2. This package provides facilities for display and editing
of geographic and map data. 

.P 0
Details of LITES2 functionality and commands can be found using the HELP
facility in LITES2, and in the latest edition of the LITES2 Reference
Manual. Supporting information is found in the documentation for the
MAPPING package. 

.P 0
This document covers changes to package LITES2 since the previous
general release of LAMPS software, which was frozen ready for issue in
August 1990. At that time, the extant version of LITES2 was
described as V3.2 of 19-July-1990. See the LITES2 release notes for the
previous LAMPS release for information about earlier changes. 

.P 0
The current version of LITES2 is now V3.4. An interim version (V3.3) was
issued to certain Beta test customers since October 1990.

.HL 1 ^&ENHANCEMENTS\&
The following particularly significant enhancements are included in LITES2 V3.3:
.LIST
.LE;The LITES2 macro language now supports statement labels
in macros and other command lines. These may be
used as the target of JUMP, JTRUE, and JFALSE commands to allow simple
programming of loops and conditional branches in macros. See the sections
below concerning labels, JUMP commands, and ABORT command.
.P 0
The label facility complements the recent facilities in LITES2 V3.2
for parameters and arguments to macros. Recent enhancements to the UILGEN and
UILMENUS programs for the Motif version provide a flexible `point and 
click' graphical user interface (GUI). Together they make the LITES2 macro 
language and UIM menu language into a powerful toolset for developing complex
tailored GIS applications.

.LE;Support is now included as an option in the Motif version of LITES2 
for the generation of hardcopy output via the PLOT command (see below).
Initially, only the Calcomp 5800 and Versatec 3600 electrostatic plotters
are supported as output devices.
.END LIST

The following particularly significant enhancements are included in LITES2 V3.4:
.LIST
.LE;LITES2 takes advantage of the recent enhancements to FRTLIB in the
MAPPING package. These allow more complex graphic representation and
symbology to be used for display and plotting. See the MAPPING Package
Release Notes for full details. 

.LE;All versions of LITES2 now allow the function keys and keypad keys
on DEC VDU terminals to be defined to execute LITES2 commands. 

.LE;The UIS and Motif versions of LITES2 have improved support for 
a secondary display window, including sharing of colour map. This allows eg 
both a global view and a zoomed in local view to be displayed on the screen
simultaneously.
.END LIST

.PAGE
.HL 1 ^&NEW OR CHANGED FACILITIES IN V3.3\&
The following facilities have been added, implemented or had their
actions altered:- 
.LIST
.LE;New PLOT commands - for generation of hardcopy output from the MOTIF
version of LITES2. These commands require an appropriate optional `auxiliary
GKS shared image'. They are primarily intended for use within a layered
GIS application, such as the Laser-Scan METROPOLIS or HORIZON products.
.LIST '*'
.LE;PLOT ADVANCE -
Performs a clear operation on the plot device. Depending on the plotter in
use, this will advance to a new sheet of paper, or load new film etc.
.LE;PLOT AUTOSCALE -
Specifies that IFF and image data drawn into the plot is to be scaled to
fit the available plotting area. This is the default. See PLOT SCALE and
PLOT RATIO for details of setting an absolute plot scale.
.LE;PLOT CLIP n -
Controls whether annotations sent to the plotter are clipped at the
boundary of the drawing area. Specify 1 to clip (default), or 0 not to
clip. The picture from the primary or secondary display is always clipped.
.LE;PLOT CLOSE -
Finishes off a plot and closes the connection to the plot device.
.LE;PLOT LIMITS xmin xmax ymin ymax -
This command is not implemented - the limits for the display are used.
.BR
Sets the coordinate range for the plot when the various annotating
DRAW commands are used. 
If the limits do not define an area with the same aspect ratio
as the plot area, then part of the plot area will not be used. If this
command is not given, or the values are omitted, then the default limits
(the same as the LITES2 working area) are used. The plot limits may
be changed at any time. 
.LE;PLOT LOAD filename -
Loads the specified GKS shareable image for hardcopy plotting. This
command must be given before a plot can be started with PLOT OPEN.
GKS shareable images for different plot devices are supplied by Laser-Scan,
and will normally reside in the LSL$PUBLIC__ROOT:[PLOTTING.EXE] directory,
which is included in the LSL$EXE search list. They have names like GKSxyzSHR.EXE
where xyz is some indication of the plotter device, eg CAL5800.
The specified filename may be either a logical name (which must translate
to a device, directory, and filename, the file extension of .EXE being
assumed), or an actual file name (in which case a default of LSL$EXE:---.EXE
is applied).
For example, to plot on a Laserplot, one might give the command
PLOT LOAD GKSLPSHR.
.LE;PLOT OFF -
Causes output from drawing commands to revert to its normal destination,
rather than the plotter.
.LE;PLOT ON -
Directs any output from drawing commands to the plotter.
.LE;PLOT OPEN -
Opens the plot device and begins a plot. Use PLOT ON and PLOT OFF commands
to direct drawing output to the plotter. The plot is terminated by a
PLOT CLOSE command.
.LE;PLOT ORIGIN xoff yoff -
Set the origin of the drawing area. The position of the drawing area
specified using PLOT POSITION and PLOT SIZE commands is offset by the
specified amount in mm.
.LE;PLOT PIXELS n -
Sets the maximum number of image pixels in either x or y to be drawn into
the plotting area when plotting images. Setting a low value will force
subsampled views to be drawn, which might save time, or prevent pixels
far too small for the plotter from being drawn. The default number depends
on the particular plotter in use.
.LE;PLOT POSITION n -
Set the plotting position within the drawing area. Position 0 is bottom
left, 1 is centre left, 2 is top left, 3 is bottom centre, and so on up
to 8 which is top right. The default is position 0.
.LE;PLOT RATIO r -
Specifies the ratio between the scale of the plot and the true scale of
the data, thus the command PLOT RATIO 1.0 will produce a plot at its
true scale (provided that this has been set correctly by SCALE commands,
or by default).
.LE;PLOT SCALE r -
Specifies the source scale of the plot to be produced. For this to work,
the IFF data must have a source scale defined in its map descriptor.
For example, if a map is a 1:1250, then the command PLOT SCALE 2500
will cause it to be plotted at half the size.
.LE;PLOT SIZE x y -
Set the size of the plotting area in mm. The default is the full size
of the available area on the plotter. The size is set to this default
by the PLOT OPEN command, so any PLOT SIZE commands should come after
PLOT OPEN.
.LE;PLOT TYPE n -
Sets the workstation type for use in future PLOT OPEN commands. Appropriate
numbers (if required) are given in the section of the FPP Plotters User
Guide for the plot device concerned.
.END LIST
.LE;New system variables
.BL
.LIST '*'
.LE;$ABSX and $ABSY contain to absolute cursor position as DOUBLE values.
They are equivalent to $CURSX + $MDOFFSET1 and $CURSY + $MDOFFSET2.
.LE;$GT__FC must be followed by an integer feature code. Contains the
corresponding integer graphical type.
.LE;$OPTPSIZE contains the current setting of ENABLE PSIZE.
.LE;$OVERLAY contains the overlay that the current found feature is selected
to be drawn into (using OVERLAY SELECT), or 0 if no overlay is selected.
.END LIST
.LE;The number of user variables allowed has been increased from 500 to
1000.
.LE;The number of macros allowed has been increased from 500 to 1200.
.LE;ASK STRING FILE__FIND filespec. Returns in $ASK__CHAR1 and $ASK__INT1
the full file specification of the file. If the file does not exist, 0 is
returned in $ASK__INT1. If the filespec contains wildcards ("_*", "_%", or
"..."), then repeated commands with the same filespec will return subsequent
matching files. This command is useful when writing macros to manipulate 
files external to LITES2.
.LE;CHANGE FSN and CHANGE MAP on linear type feature now updates
the maximum FSN for the map, ditto CHANGE FSN for symbol/text. It is now
possible to CHANGE FSN to the same FSN as a feature has already, provided that
a CHANGE MAP (whilst in a COPY or MODIFY sequence) has been done already.
.LE;New user routine USRGMH to retrieve (and optionally
write back) a map header and map descriptor. This is called after USRINI, if
USRINI returns a code _> 100 the difference between 100 and the return code
indicates the map number). It returns the same return codes as USRINI. There
are arguments to say if the map header and map descriptor are to be written
back. Only the same number of bytes may be written back. See LITES2 Reference
Manual for full details.
.LE;Allow the setting of flags in new type OS map headers via the OPERATION
OS__MH__FLAGS command. See the documentation for the OSTF module of the 
CONVERT package for more information on the new OS map header.
.LE;VIEW RENDER command now checks whether an image is outside the view window.
.LE;The acceptance test procedure, included in the LITES2 documentation set,
has been altered to reflect the fact that "DI G" was no longer unambiguous
for "DISABLE GRAPHICS". The command has been altered to "DISA G".
.LE;Statement labels can now be defined in macros.
Any command may be preceded by a label. This begins with ".",
consists of letters, numbers, and underline characters, and is terminated by
":". The case of the letters in a label is not significant. The label may be
used as a target for JUMP, JTRUE, and JFALSE commands (qv), and must be in the
same command line, or macro as the command which refers to it. These is no need
for labels in different macros to be different, but if duplicate labels occur
in the same macro, then the first one will always be found.
.LE;The JUMP, JTRUE, and JFALSE commands now allow their target to be a label,
in addition to a macro as before. If the target begins with ".", then it
is assumed to be a label, and is searched for in the current macro or
command line.
.LE;ABORT ALWAYS is the same as ABORT TRUE and ABORT FALSE, except that
it aborts the current macro or command line unconditionally. This may
be useful now that jumps to labels may skip the ABORT command and still
execute commands after it. ALWAYS is the default secondary for ABORT. 
.END LIST

.PAGE
.HL 1 ^&NEW OR CHANGED FACILITIES IN V3.4\&
The following facilities have been added, implemented or had their
actions altered:- 
.LIST
.LE;The following new commands are provided:
.LIST '*'
.LE;IMAGE LSR and DRAW LSR allow access to LSR (Laser-Scan Raster)
format image files.
.LE;ANNOTATION ANGLE and ANNOTATION LOCATION set an angle and
locating point for annotation text output using the various DRAW commands.
INCOMPATIBLE CHANGE to those commands which draw a symbol and a text
annotation - the text is only offset from the bounding box of the symbol if
the ANNOTATION OFFSET is non-zero, whereas previously zero offsets used still
to cause the text to be drawn at the top-right of the symbol. If the offsets
are negative, then they are taken to be from the bottom and left of the
symbol, rather than the top and right.
.LE;ASK STRING ANNOTATION__SIZE obtains the size that the given
string would be if drawn using the DRAW TITLE of DRAW TEXT commands.
.LE;PLOT ANNOTATION SCREEN and PLOT ANNOTATION PLOT specify whether annotations
on hardcopy plots are to be scaled as mm on the plot (default), or in the
same proportion to the rest of the detail as they would have been on the
screen.
.LE;SPR 493. DRAW NUMBERS annotates features like DRAW MARK, but with the point
numbers.
.LE;OPERATION OS__MH__TEXTCAT and CANCEL OS__MH__TEXTCAT allow updating of
OS map header flags for text features with a specific category.
.LE;OVERLAY COLOUR and OVERLAY BACKDROP now allow the colour to be
specified using the HLS and HSV schemes, in addition to RGB. SHOW COLOURS
allows RGB (default), HLS, or HSV to be specified after the (optional) colour
numbers, and ASK has subcommands HLS and HSV to return a colour as for the
ASK RGB command.
.END LIST
.LE;The following new system variables are provided:
.LIST '*'
.LE;$GEOG__STRING contains the geographical position (latitude and longitude)
of the cursor as a character string.
.END LIST
.LE;LITES2UIS supports new logical names LSL$UIS__HW__FILL (enables hardware
solid filling, rather than close hatching using software), and
LSL$UIS__RESOLUTION (controls the default line width to be used). These
are documented in the VAXstation User Guide.
.LE;LITES2MOTIF supports new logical name LSL$DECW__HW__FILL (enables hardware
solid filling, rather than close hatching using software). This is
documented in the Motif User Guide.
.LE;PICTURE ROTATE 0 now cancels the rotation completely (as do IMAGE SETUP or
PICTURE SETUP followed by ABANDON) rather than just setting an angle of 0.
This is more efficient.
.LE;LITES2 now distinguishes between point and area type pixels in images.
For point type pixels, the origin is the bottom left of the bottom left pixel,
whereas for area type it is at the centre of the pixel.
Previously, for LSI and area type LSR, LITES2 added half a pixel size to the
origin so that it could then treat them as point type, whereas DTI files were
assumed to be point type anyway. The half pixel is now
added internally, so that the origin displayed by SHOW IMAGE, or set by IMAGE
ORIGIN is not amended. This change is incompatible with the old behaviour only
if the IMAGE ORIGIN command is given for LSI or area type LSR files.
SHOW IMAGE now displays the pixel type.
.LE;SHOW VERSION (and the version information printed when LITES2 starts up)
now has knowledge of a greater number of VAX CPU types.
.LE;LITES2 takes advantage of the recent enhancements to FRTLIB in the
MAPPING package. These allow more complex graphic representation and
symbology to be used. See the MAPPING Package Release Notes for full
details. This gives the following major advantages: 
.LIST 
.DISPLAY ELEMENTS '(',ll,')'
.LE;FRT/SRI/TRI files which would
previously have exceeded some size limit in FRTLIB can now be used. 
.LE;Invisible lines in filled areas within symbols and texts,
thickness and spacing of hatch lines in hatched areas within 
symbols and texts, and phase retained invisible steps in patterned lines,
are now all supported.
.END LIST 0
.LE;All versions of LITES2 now allow the function keys and keypad keys
on DEC VDU terminals to be defined to execute LITES2 commands. This is done
by defining a PUCK on device 0. Which of the keys actually function depends
on the (DCL) commands SET#TERM/[NO]LINE__EDITING and SET#TERM/NUMERIC__KEYPAD
or /APPLICATION__KEYPAD. See the LITES2 Reference Manual, and HELP COMMANDS
FUNCTION within LITES2 for full details.
.LE;The total number of menu squares and puck buttons has been increased
from 900 to 1000, and the number of pucks from 5 to 7. This is to allow
for the extra puck (device 0) using the keyboard function keys (see above).
.LE;Any AFTER INPUT command is now executed if ENABLE CONTINUE is in force,
even if there was an error during input. Previously, if there was an error,
the command was never done, and a message was output saying that it hadn't
been done.
.LE;A blank line is now a valid response to an INQUIRE for a CHARACTER
type variable (and results in the variable being set to the null string).
Previously the prompt would be repeated until at least one character
was entered. Entering CTRL/Z in an INQUIRE causes the variable to be
left unchanged - this may have been the case previously, but was not
well defined.
.LE;The HELP facility is now interactive. After HELP is entered interactively
(i.e_. not in a command file or macro), the user is prompted for further
topics. This should make it much easier to peruse the LITES2 help topics
without having to enter more HELP commands.
The possible responses are the same as in the DCL HELP utility.
CTRL/Z will exit from help and return to the LITES2 prompt (as will a
sufficient number of blank lines).
.LE;Tracking the cursor while in an INQUIRE no longer results in the
prompt being repeated on the terminal.
.LE;Better treatment of secondary display.
The MOTIF and UIS versions of LITES2 make better use of the secondary display
(ENABLE SECONDARY). Highlighting and cursor tracking now work in the secondary
display. The primary and secondary displays have been made to share the same
hardware colour map - this means that colours in them will be identical, but
will no longer run out of colours defining two separate colour maps. All
commands which define colours or overlays in the primary or secondary will
affect both displays equally (thus creating a 3 plane overlay on the primary
for instance, will create the same 3 plane overlay on the secondary).
.END LIST

.PAGE
.HL 1 ^&PROBLEMS FIXED IN V3.3\&
This release corrects the following problems that have been found to exist
in  LITES2 Version 3.2 :-
.LIST
.LE;Avoid IFF 'NF' errors which could arise during the construction of
feature with more than 200 points, if many maps were in use, and features
in the other maps were found during the construction.
.LE;Do not attempt to use hardware line styles (LITES2 hardware does not
support these) even if they are specified in the FRT file.
.LE;Avoid division by zero, and incorrect positioning, when using the table
cursor after an OS Setup. This bug was introduced in version 3.2, and was
patched to correct it in some versions of 3.2.
.LE;Forbid the command IMAGE STEP 0.0, which caused division by zero.
.LE;Ensure that DRAW FEATURE draws into the correct ANNOTATION OVERLAY.
Previously features with more than 200 points did not correctly select
the overlay, and could be drawn in the wrong colour.
.LE;Allow the MARGIN command to operate correctly, even after DRAW IFF had
been used to draw a non-OS map.
.LE;UIS and MOTIF versions. When using ENABLE SECONDARY (to get a second
window containing the map picture), then if SUPPRESS PRIMARY was done in
order to just redraw the secondary, no drawing at all took place.
.LE;Fix problem where END or ABANDON from WINDOW would return to SETUP
state, rather than READY. This took place after an ABANDON from PICTURE SETUP
had been done, and was rectified as soon as a ZOOM command was used.
.LE;SPR 956. Correct bug (introduced in version 3.1) where the REGION tests
could fail when a vertex of the region had the same y coordinate as the point
being checked.
.END LIST

.PAGE
.HL 1 ^&PROBLEMS FIXED IN V3.4\&
This release corrects the following problems that have been found to exist
in  LITES2 Version 3.3 :-
.LIST
.LE;LITES2MOTIF corrects a problem that could cause bit image files to be
drawn incorrectly (sometimes the image was sheared, and at other times just
took longer to draw than necessary).
.LE;New versions of LITES2DSRSHR and LITES2KRISSSHR released. These are
required with any LITES2 after V3.0 to run the KERN DSR stereo instrument.
Attempts to use the old versions of these produced a continuous stream
of "No input" messages from LITES2, and the DSR input did not work.
.LE;SPR 1032. Rectangles constructed using the RECTANGLE command only output Z
coordinates if ENABLE Z is in force.
.LE;SPR 1036. A line offset specified in the SIZE entry of the FRT is now
treated as sheet mm as intended, and not IFF units.
.LE;SPR 1077. Correct the MOVE operation on 3D features when the initial cursor
position has a Z, but the final position doesn't. The intention was to leave
the Zs unchanged, but it actually added the initial Z to all coordinates.
It was possible to prevent the problem in any case by ensuring that
initial and final Zs the same, or undefining the initial Z before doing MOVE.
.LE;Allow DISPLAY COLOURS to reduce the number of allocated colours in the
primary and secondary displays (in addition to displays 3 and 4). The
size of table produced by SAVE COLOURS or SAVE LUT will reflect the
reduced number.
.LE;Correct problem with base squaring - some features were not squared
depending on the direction of digitising of the base.
.LE;Fix problem in OS squaring concerning the removal of redundant points
at the start of features.
.LE;Avoid error when performing an INQUIRE without a prompt string for a
variable declared as DOUBLE.
.LE;Several problems with hardcopy output have been fixed.
.LE;26-Apr-1991.
.BR;New version of LITES2SIG6000 V3.4 released which has been patched to
correct a problem that caused TRI files with invisible vectors not to
be downloaded to the Sigmex correctly (ENABLE HWTEXT). This problem,
associated with the treatment of invisible vectors in the new FRTLIB, was
introduced in version 3.4.
At the same time, a longstanding problem was fixed that caused TRI files in
which the characters had many components to take longer to download than
necessary.
.LE;15-May-1991.
.BR;Incorrect versions of USRINI.FOR in the directories
[LITES2.ROUTINES.EXAMPLE] and [LITES2.ROUTINES.TEMPLATE] were published some
time ago (a new template routine was put in the example directory). The two
routines have now been corrected.
.LE;31-May-1991.
.BR;LITES2MOTIF.EXE was patched to correct a problem in hardcopy plotting.
If two or more images were plotted simultaneously, then under some
circumstances they would all use the same origin, rather than their
own specific origins.
.LE;13-Jun-1991.
.BR;LITES2MOTIF.EXE was patched to correct a problem in hardcopy plotting.
If IMAGE SETUP was in use, then the positioning of annnotations on a
plot could be incorrect.
.LE;17-Jun-1991.
.BR;LITES2TEK4100.EXE - a new version (V3.4-1) was released to correct
a fatal error whilst initialising the graphics on the TEK display.
.END LIST

.PAGE
.HL 1 ^&CHANGES TO ANCILLARY PROGRAMS FOR V3.3\&
This release includes the following changes to ancillary programs included 
with LITES2 Version 3.2 :-
.LIST
.LE;UILMENUS and UILGEN - add LABEL LABEL command to allow a LABEL widget 
to have its text label changed.
.LE;UILMENUS and UILGEN - allow tab, return, and arrow keys to move between
text input fields in the same box.
.END LIST

.PAGE
.HL 1 ^&CHANGES TO ANCILLARY PROGRAMS FOR V3.4\&
This release includes the following changes to ancillary programs included 
with LITES2 Version 3.3 :-
.LIST
.LE;New version of UILMENUS corrects a problem with very
long "DO" strings, resulting from the substitution of a long filename from
a file selection box. Previously, if the string exceeded 256 characters, then
an access violation could result. The new version allows strings (after
substitution) up to 512 characters, with any additional characters being
ignored. Note that LITES2 is limited to reading 255 characters in a single
command line, so a single "SEND" string should not exceed this length.
.LE;When using UILMENUS on a screen with a different number of pixels than
1024x864, then take account of both dimensions rather than just the width.
This will means that e.g_. on a 1280x1024 screen, there will
now be a small gap at the right, rather than items attempting to be off the
bottom of the screen (and possibly being pushed back on by the window
manager.
.LE;SPR 1079. The ADD and REMOVE
commands in UILMENUS now allow an individual named widget to be added
or removed, in addition to whole boxes as supported previously. The
WIDGET NAME command in UILGEN should be used to give a name to any widget
for which it is intended to use ADD or REMOVE. .UIL and .UID files produced
using the old UILGEN will work with the new UILMENUS, but it will only
be possible to add or remove certain types of widgets.
.LE;A command qualifier /LOGICAL and
a command DEFINE have been added to UILMENUS define a specified job logical
name. This is intended as a secondary mechanism for communicating to
the parent process when UILMENUS is run as a subprocess.
.LE
A new version of the UILMENUS User Guide (V1.3) documents these changes.
.LE;29-May-1991.
.BR;New versions of the header files for UILMENUS (LSL__ARGS.UIL and
LSL__CDL__ARGS.UIL) allow list boxes to have a horizontal scroll bar if
an item becomes too long.
.LE;14-Jun-1991.
.BR;New optional user routine for LITES2 to calculate 3D volumes, primarily
intended for use with a 3D input device such as the KERN DSR. This software
consists of a LITES2 user routine VOLUME__ROUTINE.EXE, and a command file
VOLUME.LCM. See the "LITES2 - 3D Volume Calculation User Guide" for full
details.
.END LIST
