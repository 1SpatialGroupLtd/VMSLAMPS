.LEFT MARGIN  0;.RIGHT MARGIN 80;.PAGE SIZE    60,80
.FLAGS BOLD
.KEEP

.!** title page
.NOFILL
.!                                            Bureau / Sales Support / Software
.FILL
.FIGURE 14
.CENTRE ;^&Laser-Scan Ltd.\& 
.FIGURE 2
.CENTRE ;^&LITES2\&
.BLANK
.CENTRE ;^&Release Notes -  Version 2.9\&

.FLAGS SUBSTITUTE
.FOOT
.NOFILL
Copyright (C) $$year Laser-Scan Ltd
Science Park, Milton Road, Cambridge, England CB4 4FY  tel: (0223) 420414

Document "LITES2 Release"				Category "Release Notes"
Document Issue 2.9	Ron Russell, Clarke Brunt	22-August-1989
.FILL
.END FOOT
.NOFLAGS SUBSTITUTE

.!* and the title to go at the top of each page
.TITLE LITES2 Release notes
.PAGE
.HL 1 ^&CONTENT\&
This document describes recent changes to the Laser-Scan LAMPS software
package LITES2. This package provides facilities for display and editing
of geographic and map data. 

.P 0
Details of LITES2 functionality and commands can be found in HELP, and
in the latest edition of the LITES2 Reference Manual. Supporting
information is to be found in the documentation for the MAPPING package.

.P 0
This document covers changes to package LITES2 since the previous
general release of LAMPS software, which was frozen ready for issue on
01-May-1989. At that time, the extant version of LITES2 was described as
V2.8 of 16-Jan-1989. See the LITES2 release notes for the previous LAMPS
release for information about earlier changes. 

.HL 1 ^&IMPORTANT NOTES\&
The following changes require minor modifications to the LITES2
environment for upwards compatability with previous versions of LITES2. 

.LIST
.LE;The format of the file which saves table setup information has
changed. Hence this release of LITES2 requires documents on digitising
tables and bitpads to be redigitised the first time it is run on each
workstation. 
.LE;To use the GEOGRAPHICAL and SHOW GEOGRAPHICAL commands, or to use
the system variables $LATITUDE or $LONGITUDE, the logical name
LSL$LITES2__GEOG__ROUTINES must point to the image
LSL$EXE:LITES2GEOGSHR.EXE. The following command should be added to the
command file LSL$COM:LITES2INI.COM
.BL
.C;$ define LSL$LITES2__GEOG__ROUTINES LSL$EXE:LITES2GEOGSHR.EXE
.BL
.LE;To use the solid viewing capability of LITES2 (with the VIEW command)
the logical name 
LSL$LITES2__VIEW__ROUTINES must point to the image
LSL$EXE:LITES2VIEWSHR.EXE. The following command should be added to the
command file LSL$COM:LITES2INI.COM
.BL
.C;$ define LSL$LITES2__VIEW__ROUTINES LSL$EXE:LITES2VIEWSHR.EXE
.END LIST

.HL 1 ^&BUGS FIXED IN V2.9\&
This release corrects the following bugs that have been found to exist
in  LITES2 Version 2.8 :-
.LIST
.LE;When paragraphing texts there is always at least one word in each
sub-text. Previously, when filling to a distance shorter than the first
word, a null string was inserted in the first subtext. Null strings are
invalid.
.LE;Do not allow the PARAGRAPH command to accept distances equal or less 
than 0.0 mm.
.LE;Correct bug introduced in version 2.8 when adjusting text length
(and box around text) for italicised texts. This caused italicised text
not to be justified correctly with the PARAGRAPH JUSTIFY command.
.LE;User routines will now work, even if there were compilation/link 
warnings when they were built.
.LE;Justify paragraphs of text that have subtexts with different
heights or feature codes correctly.
.LE;Make sure that circles are properly closed. Generated circles 
sometimes did not have identical start and end points.
.LE;When intersecting lines with circle arcs, correct bug that sometimes 
caused the cursor to jump to the start of the found object, after an 
intersection with a circle arc.
.LE;Always search all subtexts for specified strings in a SEARCH TEXT 
command. This bug caused texts randomly not to be found, depending on
where the search was started.
.LE;Don't overwrite system error messages output when setting up user 
routines, with the VDU prompt.
.LE;Stop "Duplicated point ignored" messages and access violation when 
bending texts around zero length (or very small) parts of circle arcs.
The text will now be bent round the whole circle in these circumstances.
.LE;Correct bug that once having invoked the user routine image pointed 
at by the logical name LSL$LITES2ROUTINES__n with the ROUTINE n command,
caused the ROUTINE 10n command to access the same image, even if 
LSL$LITES2ROUTINES__10n pointed to a different one.
.LE;Clip full circles correctly. Clipping of full circles only worked 
correctly when the start angle was at 0.0 degrees.
.LE;Correctly deal with invisible lines in new OS squaring algorithm
(where points may be removed from features). The ends of invisible
lines were on occasions removed when they should not have been.
.LE;Correct bug in map setup that caused parts of the map to be 
inaccessible when using small IFF units (eg when range of map was about
1.0 IFF units).
.NOTE
Correcting this bug involved changing the format of the information that 
is stored for the "Use last setup facility". Users will have to 
redigitise all menus and tracking areas the first time LITES2 version 
2_.9 is used.
.END NOTE
.LE; UIS version - Correct allowed number of colours on 4-plane
displays. See UIS workstation guide for use of WORKSTATION TYPE and 
LSL$UIS__MAX__COLOUR logical name. Default is still to use 64 colours (6 
planes) for 8 plane display, and 8 colours (3 planes) on 4 plane
display.
.LE;Stop access violation when enabling the PME performance monitor if
it has been already enabled. 
.LE;Show sector sizes in mm correctly in SHOW SECTOR command.
Similarly, show mm discrepancies when doing table setups correctly.
.LE;OS Squaring - correct bug that caused sides of features that lie
at exactly 0 or 90 degrees not to be squared.
.LE;Correct bug, introduced in version 2.8, that caused circle arcs
to be not findable after they were constructed. This occurred when they
were constructed in conjunction with composite texts.
.LE;SPR 393 - When checking for intersections, take care to find 
features that end on the found feature, as well as those that cross
them.
.LE;Make sure that system variable $MOANED is set correctly after every 
command. It was not set when an error occurred while decoding a command, 
as distinct from executing a command.
.LE;Avoid problem whereby when using a table monitor, the next keyboard
command was lost after an IFF command which wasn't from the keyboard.
.LE;UIS version; Avoid trace back if BITPAD enabled but PRIMARY not 
enabled.
.LE;Allow SHOW GROUP to display feature codes up to 32767. Previously 
only codes up to 4095 were displayed, despite higher ones being in the 
group.
.LE;Prohibit generation of zero length texts with the TEXT and 
SUBSTITUTE commands (to bring them in line with the REPLACE command).
Zero length texts cannot be found, and if they are in components of 
composite texts peculiar effects between FIND, SEARCH and LOCATE are 
experienced.
.LE;Avoid "argument out of range" message when second argument to
IMAGE PIXELSIZE is omitted.
.LE;UIS version: avoid possible traceback, in the unlikely case of a 
QUIT back to INITIAL state while the left mouse button is held down,
followed by reading in another map
.LE;Allow the user routines to create symbol string features (graphical
type 11) correctly. Features with only one point were being constructed.
.LE;Draw subtexts of text features the correct size, when they are 
created by the user routines.
.LE;Find composite texts by the boxes around their subtexts correctly
when DISABLE HEIGHT is in force.
.LE;Avoid access violation if the command part of an ELSE or THEN 
command is longer than 80 characters.
.LE;Test circle arcs against regions correctly when using the system 
variables $INREGION and $OUTREGION
.LE;Set the feature code correctly when splitting composite texts apart,
resulting in at least one simple text.
.LE;Correct bugs when PARAGRAPHing texts.
.LIST
.DISPLAY ELEMENTS ll
.LE;justifying italic text did not work properly
.LE;justifying to a specified distance did not work exactly
.END LIST
.LE;Correct bug that caused features to be deleted when the operation to 
join several texts together was abandoned.
.LE;Test composite texts against regions correctly. If any subtext
crosses the region boundary then the feature cuts the region, as it does
if at least one subtext is completely inside and one subtext is
completely outside the region. Otherwise the feature is inside or outside
the region. 
.LE;Do not allow FILTER and MOVE commands in same "part" operation.
(The MOVE command had no effect)
.LE;Cancel any outstanding generated feature command (eg CIRCLE CENTRED)
when doing INCLUDE command.
.LE;Correct bug that, when regions had been defined but not selected,
caused ENABLE AND to deselect all features.
.LE;Do not allow command ANNOTATION FONT to accept fonts less than or
equal to 0. These values at best only used the corresponding positive
font number, and at worst caused a series of error messages when the
DRAW LABEL command was given.
.LE;Correct bug that sometimes caused parts of raster images to be
displaced slightly on the screen. Also attempt to ensure that the zoom
factor for an image remains constant when doing a DRAW SCREEN or ZOOM 1
command, particularly when IMAGE SETUP has been used.
.END LIST

.PAGE
.HL 1 ^&NEW OR CHANGED FACILITIES IN V2.9\&
The following facilities have been added, implemented or had their
actions altered:- 
.LIST
.LE; New commands
.LIST 'o'
.LE; ENABLE Z - licensed command that allows use of LITES2 as a 3 
dimensional editor (ie Z is treated as a coordinate, not a point 
attribute)
.LE; ENABLE DSR - allow use of KERN DSR photogrammetric plotter as input
device. This command requires an additional licenced shareable image.
See the LITES2 KERN DSR Workstation guide for details.
.LE; ENABLE KRISS [subcommand]  - allow use of KERN KRISS image injection
system as a display. This command requires an additional licenced
shareable image. 
.LE; FORCE SLOPE and FORCE FLAT to allow the height of LITES2 cursor to
be set according to the heights of the points of the feature being
edited. 
.LE; FILE command
.LIST ' '
.LE;FILE OPEN file-number filename - open existing file for read
.LE;FILE CLOSE file-number - close specified file
.LE;FILE READ - move the next record from the currently selected file 
into the system variable $FILELINE
.LE;FILE WRITE [text] - write the text string to file currently selected 
for writing
.LE;FILE CREATE file-number filename - open new file for write
.LE;FILE SELECT file-number - select specified file for reading or 
writing
.LE;FILE APPEND file-number filename - open existing file for write
.END LIST
.LE; UIS version only
.LIST ' '
.LE;DISPLAY - command with many secondary and tertiary commands to allow
user defined windows on the VAXstation screen. See HELP for various
subcommands. The VAXstation now supports a secondary window (ENABLE
SECONDARY) for display of the map. See the "VAXStation (UIS) Workstation
Guide" for details. 
.LE;SAVE LUT - write out an overlay LUT LCM file of the specified
VAXstation display
.LE;SAVE DISPLAY - write out a DTI file of the specified VAXstation 
display
.LE;VIEW - licensed command with many secondary and tertiary commands to
render DTI and IFF files (see HELP for various subcommands). This is
major added functionality providing perspective terrain viewing with
culture overlay within a LITES2 display window. 
.END LIST
.LE; RECTANGLE DIAGONAL - construct a rectangular feature given two 
opposite corners and a point on one side
.LE;RECTANGLE SIDE - construct a rectangular feature given two adjacent
corners and a point on the side opposite. 
.LE; FOLLOW commands - to allow stream digitising; depends on 
availability of hardware.
.LIST ' '
.LE;FOLLOW [TABLE] - read coordinates continuously from table
.LE;FOLLOW DSR - read coordinates continuously from Kern DSR
.LE;FOLLOW SCREEN - read coordinates continuously from screen cursor
.LE;TOLERANCE FOLLOW - set tolerances for stream digitising
.END LIST
.LE;DRAW MOVE - move drawing position in currently selected window 
without drawing line (cf DRAW VECTOR)
.LE;ANNOTATION DISPLAY - command to be used in conjunction with 
labelling and DRAW commands and multiple VAXstation windows.
.LE;SHOW DISPLAY, SHOW VIEW, SHOW LIGHTS - show settings resulting from
DISPLAY and VIEW commands 
.LE;DRAW AREAREGION - command to draw a region as a fill area (as 
distinct from DRAW REGION that draws outline of the region).
.LE;DECLARE DOUBLE - command to declare a double precision (8 byte) 
variable. Arithmetic on these variables is carried out to maximum 
precision.
.LE; SELECT ALL command now takes an optional tertiary argument to allow 
the user to reset just one class of selections
.LIST ' '
.LE ;SELECT ALL AC - 
All ACs are selected.
.LE ;SELECT ALL CATEGORY - 
All text categories are selected.
.LE ;SELECT ALL FCS - 
All feature codes are selected.
.LE ;SELECT ALL FLAGS - 
Selection of features flagged as edited, unedited and deleted is
cancelled. ie Edited and unedited features are selected, while deleted
features are not selected
.LE ;SELECT ALL FSNS - 
All feature serial numbers are selected.
.LE ;SELECT ALL LAYERS - 
All layers are selected.
.LE ;SELECT ALL MAPS - 
All maps are selected.
.LE ;SELECT ALL REGIONS - 
Any selections by region are cancelled.
.LE ;SELECT ALL STYLE - 
All text styles are selected.
.END LIST
.LE;SORT GT - sort by graphical type, so that solid areas do not overwrite
lines, texts and symbols. This command causes drawing to be
done in the order:
.LIST
.DISPLAY ELEMENTS LL,')'
.LE;Fill#Areas#(graphical#type##12)
.LE;Line#work##(graphical#types#1-6#and#11)
.LE;Symbols####(graphical#types#7-9)
.LE;Text#######(graphical#type##10)
.END LIST
.LE;FEATURE REGION n - create a feature from region n
.LE;PRIORITY POSITION - put (or remove) implicit POSITION commands 
before the command on specified puck buttons
.END LIST
.LE;Allow user defined array variables. The various DECLARE commands can
take a variable name that ends with an integer (up to 65535) - eg
DECLARE INTEGER I3 - and the left hand side of LET commands can use
these variables - LET I2 = 27 or LET I'n = 27. The subscript can 
itself be a substituted variable - eg LET M = 'I'N''
.LE;Some system variables are now double precision
.LIST ' '
.LE;$MDOFFSET
.LE;$LATITUDE
.LE;$LONGITUDE
.LE;$AREA
.END LIST
.LE; New system variables
.LIST 'o'
.LE;$CURSZ
.LE;$CURSZ__EXIST
.LE;$COLOUR
.LE;$CURSINREGION
.LE;$FILELINE
.LE;$EOF
.LE;$DISPLAYCOLUMNS
.LE;$DISPLAYROWS
.LE;$IMAGEROWS
.LE;$IMAGECOLUMNS
.LE;$IMAGEORIGINX
.LE;$IMAGEORIGINY
.LE;$IMAGEPIXSX
.LE;$IMAGEPIXSY
.LE;$CURSINIMAGE
.LE;$REGIONAREA n
.LE;$HADSELECT
.LE;$HADSELECT__AC
.LE;$HADSELECT__CAT
.LE;$HADSELECT__FC
.LE;$HADSELECT__FLAG
.LE;$HADSELECT__FSN
.LE;$HADSELECT__LAYER
.LE;$HADSELECT__MAP
.LE;$HADSELECT__REGION
.LE;$HADSELECT__STYLE
.LE;$DISPLAYNUMBER
.LE;$OVERLAYNUMBER
.LE;$CONSTRUCTION__LAYER
.LE;$CONSTRUCTION__MAP
.LE;$CONSTRUCTION__FC
.LE;$IMAGE__EXIST n
.END LIST
.LE;LITES2 now works as a 3 dimensional editor if Z has been enabled
.LE;POSITION and ABSOLUTE now take an optional 3rd argument which allows
the height of the cursor to be set.
.LE;BEND STRETCH now treats characters with zero width (in the TRI) as 
being diacritical marks, and considers them to be part of the following 
character for spacing purposes. Note that the width in the TRI must be 
exactly 0.0. As a side effect, texts with the $ escape character are now 
spaced correctly.
.BL
COLLAPSE also recognises the diacritical marks when deciding whether a
composite texts is a series of words (put spaces between) or letters
(don't) 
.BL
For SIGMEX users using ENABLE HWTEXT, characters with zero width are 
downloaded to the SIGMEX with a very small finite width to allow them to 
plot correctly, so there is no need to give them a finite width in the 
TRI.
.LE;The POINT command, when given in MODIFY state, now takes you into
MODIFY (part) state. This is to make it compatible with FIRST, NEXT etc
.LE;OFFSET now carries any point attributes through from the original to 
the new feature.
.LE;Increasing the range of an IFF file and using the "use last setup" 
facility when setting up the map on the table, the increased range of 
the map is now reflected in the area of the digitising table that can be 
accessed.
.LE;WRITE and EXIT can now take an optional filename when there is more 
than one map read in, but if only one map is selected for output.
.LE;The use of the INSERT command has been increased to allow its use in 
CONSTRUCT state to insert an inaccessible point in a construction (see 
HELP) for details.
.LE;Number of user definable macros and variables has been increased to 
500 each. Their names may now all have up to the maximum of 16
characters.
.LE;Text in the DRAW TITLE and DRAW TEXT commands may now be enclosed in 
double quotes ("). This allows a way to get leading spaces (or only 
spaces).
.LE;REGION n command now takes an optional tertiary command. The command
REGION n POINT x y adds a single point to the region, which need not
already exist. The command is now available in INITIAL and READY states
as well as when there is a found object. 
.LE;SHOW OPTIONS and SHOW TOLERANCES now take an optional tertiary
argument, FIRST or SECOND, which causes the first or second half of the
data to be displayed on the screen. 
.LE;LITES2 will take account of the logical name LSL$ITALIC__ANGLE - 
see latest release of package MAPPING
.LE;LITES2 now takes account of invisible lines when drawing the 
outlines of fill areas. This means that fill areas with holes in them are
handled better.
.LE; The UIS version of LITES2 now includes a hierarchical screen menu
system called UISMENUS, which runs as a sub-process. See the LITES2
"VAXStation (UIS) Workstation Guide" for details.
.LE;The string defined by the SET PROCESS command is now executed when
the construction of a text or symbol is completed with an END command.
.LE;Allow classification of values in images (DTI files). More control
over the colour assigned to a particular value is provided by the IMAGE
STEP, IMAGE RANGE, IMAGE FIRSTCOLOUR, IMAGE BAND, and IMAGE SEA commands.
The IMAGE BITS command reverts to the previous behaviour.
.END LIST
