
.LEFT MARGIN  0;.RIGHT MARGIN 80;.PAGE SIZE    60,80
.KEEP

.!** title page
.FIGURE 14
.CENTRE ;^&Laser-Scan Laboratories Ltd.\& 
.FIGURE 2
.CENTRE ;^&LITES2 (Poligarfica)\&
.BLANK
.CENTRE ;^&Release Notes - 11-December-1986\&
.FOOT
.FLAGS SUBSTITUTE
.NOFILL
Copyright (C) $$year Laser-Scan Laboratories Ltd
Science Park, Milton Road, Cambridge, England CB4 4BH  tel: (0223) 315414

Document "LITES2 Release"				Category "Release Notes"
Document Issue 1.1	Ron Russell			11-Dec-1986
.FILL
.NOFLAGS SUBSTITUTE
.END FOOT

.!* and the title to go at the top of each page
.TITLE LITES2 Release notes
.PAGE
.HL 1 ^&BUGS FIXED\&
This release corrects the following bugs that have been found to exist
in your current release (dated 7-Nov-1985):-
.LS
.LE; file names are output without trailing blanks when doing table setup
.LE; several possible array overflows and arithmetic traps
avoided with associated stack dumps
.LE; cursor now reappears after a WRITE command, without a redraw
.LE; SHMACRO does not now output multiple copies of some lines
.LE; cannot now create text features with a height of 0.0mms
.LE; allow testing of one point lines with regions
.LE; deal with UNITS command correctly in TOLERANCE CURDRAW and CURGEN
.LE; match layers correctly in FIND and EDGEMATCH after RENAME LAYER
.LE; fix problems with the refresh picture in LOOP
.LE; erase old feature before drawing new one in USER routine
.LE; ensure that layer selections correct after MERGE LAYER
.LE; ignore CTRL/Z on an otherwise blank line (used to do TEXT when next
command given)
.LE; fix problem caused by duplicated points in the last ST of a feature
(produced in LASERAID junction files)
.LE; fix problems with OFFSET
.LE; prevent possible access violation when symbols are bigger than the map!
.LE; retain FSN of original feature in BRIDGE
.LE; re-draw in sorted order now works properly (see SORT command below)
.LE; remove graphics properly if a construction with more than 200 points
is abandoned
.LE; EXAMINE LINE now gives length 0.0 for a one point symbol string
.LE; set colour correctly for filled areas in symbols
.LE; SHOW COMMANDS and SHOW MACROS now work properly.
.LE; System variables $MAP now goes from 1 to 9 (rather than 0 to 8), and
$LAYER has correct layer number (rather than layer index number). These
were incorrect in old TEST command, before introduction of variables.
.LE; Problems associated with a return to INITIAL state (DISABLE EXIT)
fixed. Regions now removed properly, and possible "Bad block address" errors
fixed (these did not harm the data in any way).
.LE; eliminate 'trapezoidal window box' problem by getting rid of refresh box 
before redrawing
.LE; avoid losing command after redrawing map
.LE; accept PUCK or MENU commands followed by spaces or tabs
.LE; SEARCH is now valid in EDIT and MODIFY states (bug in 20-Dec-1985 release)
.LE; PING and RASP do not cause extra linefeeds on non-TVES versions
.LE; Correct refresh of texts and symbols in MODIFY state
.LE; Ensure unique segment number used with DEPOSIT command
.LE; Fix bug causing region selections to be ignored on re-draw.
.LE; Deal correctly with very big features, or features with many ACs.
.LE; Output TH entry just before first ST (i.e. after all ACs)
.LE; Fix bug with region clipping (zero point feature created)
.LE; Linear features being MOVEd are tracked around on ARGS version.
.LE; ST's with more than 200 points are dealt with correctly
.LE; Do not re-draw deleted features on TEK if not scrubbing
there is nowhere to get it from. In this case, simulate a DUMP command.
.LE; Make sure that (most) labels are not clipped
.LE; Stop labels degenerating when zoomed in
.LE; Avoid 'invalid argument to ATAN2' in DRAW LABELS
.LE; Avoid negative size text boxes for very short texts
.LE; Argument to TOLERANCE DEGREES, and ROTATE TO/BY now a real (not integer)
.LE; INCLUDE now works properly while BRIDGEing
.LE; Command prompt no longer overwritten by output, and a new prompt is
always generated when the state changes and PROMPT STATE is in use.
.LE; Bug in SEARCH fixed. It was occasionally possible that features edited
or constructed between SEARCH ALL and the first SEARCH NEXT would be found
subsequently by SEARCH NEXT. As a result of the bug fix, the LOCATE command
has returned as a more efficient alternative to SEARCH when only one
feature is wanted.
.END LIST

.PAGE
.HL 1 ^&NEW OR CHANGED FACILITIES\&
The following facilities have been added, implemented or had their actions
altered:-
.LIST
.LE; INCLUDE to include existing features within current constructions
.LE; DEPOSIT to deposit the text or symbol that is currently being modified
.LE; LOCATE  to locate a particular feature - identified by FSN or
a text string. (This command subsequently withdrawn.)
.LE; various optimisations in reading command files and macro handling
.LE; various optimisations with attempts to reduce paging
.LE; use of logical name LSL$LITES2TERMINAL to provide user control of
terminal specific files (for use with virtual terminals)
.LE; keyboard input terminated by _^Z is taken either as a TEXT command
or as a REPLACE command, depending on the state.
.LE; on WOSP stations, text box is locally tracked while moving with the
cursor.
.LE; LOCATE (see above) has been withdrawn again. SEARCH is now just as
efficient.
.LE; SORT command available to specify whether to re-draw in FSN order,
or IFF file order (default), when ENABLE SORT set. Re-draw in IFF file
order should be fastest method.
.LE; SEARCH DELETED is available to find all deleted features for possible
recovery. SEARCH NEXT will find the next deleted feature.
.LE; A recovered feature can now be found using SEARCH LAST.
.LE; BRIDGE now works differently at the ends of features. It can now be
used to replace the end section of a feature, and also to add new points
to the end.
.LE; SHOW SORT command shows whether drawing sorted by FSN or IFF
position.
.LE; LITES2 will not run without a license now.
.LE; New option EXIT for ENABLE/DISABLE/TOGGLE. If disabled, then EXIT,
DUMP, or QUIT when in READY state cause a return to INITIAL state after
outputting the maps(s). Macros, menus, FRT file etc are retained so that
the time required to read in a new map is reduced. QUIT in INITIAL state
always terminates the program. Default is ENABLE EXIT, so that the
commands behave as before by default.
.LE; If the arguments to the POSITION or SHEET commands are omitted, the
cursor is moved to the centre of the screen.
.LE; WINDOW now uses a refresh box to indicate the window being defined.
In addition, WINDOW MAP draws the existing window on the screen (at a
scale as though the whole map were currently displayed).
.LE; New option NARROW for ENABLE/DISABLE/TOGGLE. If enabled, then the
actual window defined using WINDOW is drawn, rather than expanding it to
the shape of the screen. Default is DISABLE NARROW.
.LE; New option BRIEF for ENABLE/DISABLE/TOGGLE. If enabled (default), then
only primitive commands are written to the journal file. If disabled,
the all commands (including macro names and jumps) are journalled, with
the non-primitive ones being preceded by the comment character.
.LE; New commands ORIENT, and BASE ORIENT. Used to rotate and move a linear
feature such that a specified segment lies along the base line.
.LE; New commands SET AC, TRANSFER AC. Any number of AC entries may be
set in the current attribute set for inclusion in constructed features.
TRANSFER AC adds the current ACs to an existing feature. If the ANCILLARY
(or AC) command is used in READY state, then the ACs in the current
attribute set are edited, as opposed to those in a feature. ACs may be
stored in attribute sets (PUT, GET), and are set in the current attribute
set by REPEAT.
.LE; Single quote (') may no longer be used to delimit strings in the
SUBSTITUTE command. Double quote (") must be used if the strings contain
spaces.
.LE; The text is now optional in the REPLACE command. REPLACE with no text
may be used to remove the text of an AC, but is still an error for a
text feature (which cannot have zero characters).
.LE; All commands which accept a text string now allow the string to be
delimited by double quotes ("). These must be used if the string is to
have leading spaces or tab characters. If quotes are used, then a repeated
quote must be used to represent a quote within the string. This applies to
the commands MESSAGE, TEXT, ADD, REPLACE, LET, TEST, SEARCH#TEXT, PROMPT#TEXT.
.LE; SHOW CONDITIONS has been withdrawn.
.LE; New facility: VARIABLES. Named variables to store INTEGERs, REALs, or
CHARACTERs may be declared using the DECLARE command. The uses of variables
are: (i) They may be textually substituted in commands by enclosing the
variable name in single quotes. (ii) They may be set to the value of
an arithmetic expression by the LET command. (iii) Their value may be
compared with an expression by the TEST command.
.BL
A value for a variable may be obtained from the operator via the interactive
controls by the INQUIRE command.
.BL
New option SUBSTITUTION for ENABLE/DISABLE/TOGGLE. If enabled, then anything
enclosed in single quotes is taken to be a variable name for substitution.
If disabled (default) then single quote is treated as a normal character.
Note that variables are never substituted while defining a macro.
.BL
The TEST command has changed. The old TEST conditions are now SYSTEM
VARIABLES, and their names should be preceded by the character $.
System variables may be used in all the ways that user variables are,
except that their value may not be set. One consequence of this is that
the state names in a TEST#$STATE must be given in full and in upper case.
.BL
SHOW VARIABLES gives names and values for used and system variables.
.LE; New commands THEN and ELSE. Execute a single command (which may be a macro,
or @file) depending on whether the condition flag is true or false. Continues
execution from the current macro or command file afterwards (unlike JTRUE and
JFALSE). 
.LE; New option VERIFY for ENABLE/DISABLE/TOGGLE. Switches verification of
found features on and off without affecting VERIFY settings. Default ON.
.LE; New command VERIFY GROUP, causes verification of all FRT groups which
include the feature code of found feature. VERIFY FEATURE must be on also.
.LE; If VERIFY FEATURE is on, the process code, and additional text codes
are verified, in addition to present information.
.LE; AND and OR commands do not check the condition if the result of the
test is already known (flag already false for AND, true for OR). This
means that a sequence such as TEST#$FOUND#_#AND#$FC=3 will not give an
error on $FC if there is no found feature.
.LE; Operations involving REGIONS have been optimised.
.LE; Command reading has been optimised. Approximately 25 percent less CPU
spent decoding commands. 
.LE; Macros may now contain up to 32767 characters (rather than 255), and
up to 1000 macros (900 puck and menu boxes, 100 user macros) may be defined.
(Only 500 out of 1000 could actually contain anything previously). These
facilities have been temporarily "hidden" in this release, but may be
made available soon.
.LE; Listing of a long macro with SHOW MACRO can now be aborted with CTRL/C
.LE; New command ENABLE AND allows ANDing of regions (rather than the default 
of OR)
.LE; New command CLIP divides the current feature, where it cuts the specified 
region boundary, to create one or more new features. Subcommands are
.LIST "*"
.LE; INREGION### which divides the current feature into features that lie 
completely inside the specified region.
.LE; OUTREGION## which divides the current feature into features that lie 
completely outside the specified region.
.LE; CUTREGION## which divides the current feature into features that lie 
completely inside and completely outside the specified region.
.END LIST
.LE; TOLERANCE CURGEN and TOLERANCE CURDRAW have been incompatibly changed.
Now three arguments, the first of which is the ^&inverse\& of the old
argument. The others provide additional control over the number of
interpolated points, dependent on radius of curvature.
.LE; A rubber band line to the cursor is now provided with ROTATE, ALIGN,
and STRETCH.
.LE; New system variable $BUTTON, contains number of last puck button used.
.LE; Text point sizes have been altered slightly to agree with OS definition.
One third of a character width is now subtracted from the box size (used for
text positioning) to remove the space after the last character.
.LE; New command WORKSTATION COLOUR. Changes colours dynamically (if possible
on given implementation). Implemented for Sigma ARGS 7000 in TVES version,
Sigmex 6100, and TEK 4100.
.LE; Sigmex 6100 version now has refresh F/L markers.
.LE; New command PRIORITY PUCK, enables puck buttons to obey their puck macro,
even if pressed over the menu.
.LE; Do not draw present window box on a suppressed display.
.LE; CTRL/C during reading of a map terminates read-in. As much data as has
been read in may be drawn and edited. This may be useful for demos, or if the
wrong map has been specified (use CTRL/C, then DISABLE EXIT and QUIT to return
to INITIAL state).
.LE; A new RAnge entry is calculated during EXIT, rather than just keeping
the old values.
.LE; Macros may now contain up to 32767 characters.
.LE; New subcommand SCRUB for ENABLE/DISABLE/TOGGLE. If disabled, deleted
features are not scrubbed out (TEK4014 versions only).
.LE; It is now possible to define 1000 macros (100 user + 900 menu/puck)
.LE; Cope with offset feature codes (where FRTSIZ not equal to 0) for linear
features (see recent release of FRTLIB)
.LE; LITES2 can now cope with version 4 file names - allows "_$" and "__" in
names; the names can also be incredibly long
.LE; New commands DRAW LABEL, LABEL and ANNOTATION to allow features to be
tagged with FSN, FC and AC info
.LE; WORKSTATION COLOUR command implemented for GWS IV workstation
.LE; OFFSET command now available for texts and symbols
.LE; New system variables
.LIST '*'
.LE; _$CURSINWINDOW which is _.TRUE_. when cursor is within current
window 
.LE; _$WINDOW 1, _$WINDOW 2, _$WINDOW 3 AND _$WINDOW 4 which hold the
size of the current window 
.END LIST
.LE; New system variables
.LIST '*'
.LE; $ACPRESENT#which is _.TRUE. if Found Object has ACs or TCs
.LE; $ACTOTAL###number of ACs + TCs (only available in AC state)
.LE; $ACTYPE####type of current AC (only available in AC state)
.LE; $ACIVALUE##value of current AC as an integer (only available in AC state)
.LE; $ACRVALUE##value of current AC as a real (only available in AC state)
.LE; $ACTEXT####text of current AC (only available in AC state)
.LE; $ACTEXTLEN#and its length (only available in AC state)
.END LIST
.LE; ANNOTATION SCREEN and ANNOTATION WINDOW commands, to allow labels to
be drawn around the cursor
.LE; History entry is updated, if there is one in the file
.LE; "Date of last amendment" in OS map headers is updated, if the file
has a valid OS map header.
.LE; New option INFORM for ENABLE/DISABLE/TOGGLE. Turns off/on all
informational messages.
.LE; DRAW REGIONS and DRAW GRID now use the ANNOTATION COLOUR
.LE; MEND command now implemented. Performs JOIN on a series of line
features.
.LE; LOCATE command is back. Similar to SEARCH but finds only first
occurrence. Use in preference to SEARCH when not using SEARCH NEXT.
Does not affect an ongoing SEARCH NEXT sequence.
.BL
.I -5; ****** RELEASE of 22-Sep-1986
.END LIST
.BL
Details of all these commands can be found
in HELP and the latest edition of the LITES2 Reference Manual.
