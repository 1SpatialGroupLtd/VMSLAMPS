

































                                Laser-Scan Ltd.
                                Laser-Scan Ltd.





                              LITES2 - Vignetting
                              LITES2 - Vignetting



                         Release Notes -  Version V1.1
                         Release Notes -  Version V1.1































































Copyright (C) 2004 Laser-Scan Ltd

Science Park, Milton Road, Cambridge, England CB4 4FY  tel: +44 (0) 1223 420414



Document "LITES2 Vignetting Release"                    Category "Release Notes"

Document Issue V1.0     Clarke Brunt                    14-Jul-1998

Document Issue V1.1     Clarke Brunt                    17-Jul-1998


LITES2 Vignetting Release notes (V1.1)                                    Page 2





   CONTENT
1  CONTENT



This document describes recent  changes  to  the  Vignetting  component  of  the

Laser-Scan LAMPS software package LITES2.



This document is for a special release of the  vignetting  software  which  went

into  Alpha  test  in  July  1998.   It  covers  relevant changes the vignetting

software since the previous release of June 1998.







   NEW OR CHANGED FACILITIES
2  NEW OR CHANGED FACILITIES



The following facilities have been  added,  implemented  or  had  their  actions

altered:-



    (a)  There is a new release (V1.2) of the "LITES2 Vignette Generation - User

         Guide", from which the important changes are reproduced below.



    (b)  The vignetting software now checks the integrity of area  features  (in

         particular  that  there are no self-intersections) after the two stages

         in the process at which FILTER is used.  If problems  are  found,  then

         the  user  can  make  manual  edits  to  correct them, and continue the

         process  by  repeating  the  vignetting  command  (i.e.   VIGINNER   or

         VIGCREATE).







   PROBLEMS FIXED IN THIS RELEASE
3  PROBLEMS FIXED IN THIS RELEASE



This release corrects the following problems that have been found  to  exist  in

the vignetting software :-



    (a)  The recently introduced checking  of  open  features  in  VIGCHECK  was

         occasionally  reporting  that  they contained a self-intersection, even

         when they didn't.  This has now been fixed.



    (b)  There is a new version of ICHECK in the IMP package  which  will  check

         features  with  up  to 100000 points (previously 10000), and will check

         layer 0  providing  that  this  is  specified  in  a  /LAYER  qualifier

         (previously is was always skipped).







   CHANGES IN VIGNETTE USER GUIDE
4  CHANGES IN VIGNETTE USER GUIDE



The following significant changes are extracted from the new (V1.3)  version  of

the "LITES2 Vignette Generation - User Guide":-



    (a)  About the outer buffer,  whose  distance  is  the  first  parameter  to

         VIGINIT:



         This outer ring is not part of the finished result.  It  will  normally

         by  further  out  than  the  edge  of  the vignette, producing smoother

         results the further out it is.


LITES2 Vignetting Release notes (V1.1)                                    Page 3





    (b)  The variable name for this outer distance has been  corrected.   It  is

         VIG_BUFFER_DIST         VIG_OUTER_DIST
         VIG_BUFFER_DIST and not VIG_OUTER_DIST.



    (c)  Mentions the idea of copying selected coastal features to a free  layer

         when vignetting just part of the chart:



         Make copies of them using a free feature code or layer, and save  those

         to the _VIG_SEL macro before using VIGCHECK.



    (d)  New section about filtering during VIGINNER:



         First the outer ring at  VIG_BUFFER_DIST  is  created.   This  is  then

         filtered   to  remove  excessive  points.   On  occasions,  the  filter

         operation may cause the features to self-intersect.  If  this  happens,

         the  procedure will stop after writing some messages about the problem.

         The user may then edit the outer ring to fix the problem  (taking  care

         not  to  corrupt any connecting invisible lines).  The VIGINNER command

         should then be repeated.  It will carry on where  it  left  off,  again

         checking the outer ring for self-intersection.



         Once the outer ring is satisfactory, the procedure will buffer it  back

         towards  the  coastline,  to  produce  the  solid  vignette boundary at

         VIG_SOLID_DIST.  One or more features of FC VIG_REGION_FC  are  created

         marking  the  boundary  of  the  inner ring.  These are again filtered.

         These features may be modified in order  to  alter  the  shape  if  the

         eventual vignette.



    (e)  New description of self-intersection check in VIGCREATE:



         VIGCREATE first checks that these features do not  self-intersect.   If

         this happens, the procedure will stop after writing some messages about

         the problem.  The user may then edit the inner ring to fix the  problem

         (taking  care  not  to  corrupt  any  connecting invisible lines).  The

         VIGCREATE command should then be repeated.



    (f)  It is pointed out that the VIGREGION stage is optional.  If  no  region

         is  required,  omit  this  stage.  Be sure to do CANCEL REGION 1 if the

         region might exist already.



    (g)  New additional notes:



         If you do not wish to choose a region  of  interest  for  VIGINNER  and

         VIGCREATE, then omit using VIGREGION completely (and do CANCEL REGION 1

         if there is any chance that region 1 already exists).



         Using VIGREGION to select the region of interest does not work unless a

         region can be constructed which completely encloses all the features of

                   including closing  lines  round  the  neatline
         interest (including closing  lines  round  the  neatline),  whilst  not

         enclosing  any  which  not  wanted.   You  can  check that you have the

         correct  features  by   selecting   the   closed   coastline   features

         (VIG_REGION_FC),  and  also  doing  SELECT INREGION 1, then drawing the

         selected features.  If a feature appears to have been missed out of the

         vignetting  operation,  then check that it (and its closing lines round

         the neatline) lie within the region.


LITES2 Vignetting Release notes (V1.1)                                    Page 4





         Some charts, for example those with several independent  water  inlets,

         cannot be vignetted either in their entirety or by selecting by region,

         since in either case there are areas which claim to be  both  land  and

         sea  at  the  same time.  In this case, there is no choice but to makes

         copies of selected coastline features using either a spare feature code

         or  layer, and perform the entire flowline, from VIGCHECK to VIGCREATE,

         on just these features.



         If the generation of buffers  fails  after  several  instances  of  the

         message   "Failed   to  generate  buffer.   Trying  again  with  vector

         length...", followed by "Too few points around circle arcs.  Alter with

         TOLERANCE  CIRGEN  command",  then  as  the  message  says,  change the

         TOLERANCE CIRGEN parameters to put  more  points  in  generated  circle

         arcs.  LITES2's HELP on GEOMETRY BUFFER says more about this.



         If the vignette procedure claims that  a  feature  self-intersects,  it

         will already have displayed a message about the problem.  Some of these

         messages come from LITES2's geometry handling commands, and  references

         to  `inner'  and  `outer'  may  refer  to  inner  and  outer  rings  of

         geometries, rather than referring to the  vignettes.   The  coordinates

         given   in  these  messages  may  not  accurately  identify  where  the

         self-intersection is, but  just  identify  the  particular  ring  which

         contains  it.   You  can write out a copy of the data and use ICHECK to

         find the problem.  Note that if you want ICHECK to check layer 0,  then

         it  must  be  specified  using  the  /LAYER  qualifier.   If  there are

         intersections which ICHECK cannot  find,  then  try  using  the  /TOUCH

         qualifier  with  a  suitably  small  tolerance,  as this will find more

         `borderline' cases.



         The vignetting procedure uses LITES2's FILTER command internally at two

         stages  (both during VIGINNER).  First the outer ring is filtered, then

         the inner ring (the solid vignette boundary).  The current settings for

         TOLERANCE  BUNCH  are  used  for  these  operations, so the user should

         ensure that these are sensible.  Different settings may be tried if the

         filter operation is frequently introducing self-intersections into area

         features.



         When making  manual  edits  to  remove  self-intersections,  either  in

         VIGINNER  on  the  outer  ring, or in VIGCREATE on the inner ring, then

         great care should be taken not to spoil the coincident invisible  lines

         which  will  connect  any  `holes' to the outer boundary or their area.

         These must remain precisely coincident if the feature  is  to  be  used

         subsequently as a geometry.  It is best not to edit these line segments

         or their end points at all, confining all edits to points with  visible

         lines on either side.



         If automating the process of vignetting by embedding  the  commands  in

         macros,  then when doing SAVE SELECTIONS _VIG_SEL, care should be taken

         that macro _VIG_SEL does not already exist.  If it does, it  should  be

         cancelled first, using CANCEL MACRO _VIG_SEL.  This will cause an error

         if the macro doesn't exist.  You can either ignore the errors by  using

         ENABLE CONTINUE, or else avoid them by testing whether the macro exists

         first, for example:

               ASK STATUS MACRO _VIG_SEL

               TEST $ASK_INT1=0

               ELSE CANCEL MACRO _VIG_SEL


LITES2 Vignetting Release notes (V1.1)                                    Page 5





         The LITES2 command LOOP (which is short for LOOP NORMAL, as opposed  to

         LOOP  EXTEND)  is  the  easiest  way  of  precisely closing an existing

         feature.  It moves the first and last points to  their  mean  position,

         which is the same behaviour as MEND at breaks in features.

