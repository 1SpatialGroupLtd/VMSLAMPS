.LEFT MARGIN  0;.RIGHT MARGIN 80;.PAGE SIZE    60,80
.FLAGS BOLD
.KEEP


.!!!!!!!!!!!!   for double sided output
.!!!LAYOUT 2,2
.!!!!!!!!!!!!


.!** title page
.NOFILL
.!                                            Bureau / Sales Support / Software
.FILL
.FIGURE 14
.CENTRE ;^&Laser-Scan Ltd.\& 
.FIGURE 2
.CENTRE ;^&LITES2\&
.BLANK
.CENTRE ;^&Release Notes -  Version 4.0\&
.!

.FLAGS SUBSTITUTE
.FOOT
.NOFILL
Copyright (C) $$year Laser-Scan Ltd
Science Park, Milton Road, Cambridge, England CB4 4FY  tel: (0223) 420414

Document "LITES2 Release"				Category "Release Notes"
Document Issue 4.0	Clarke Brunt/Paul Hardy		06-May-1992
.FILL
.END FOOT
.NOFLAGS SUBSTITUTE

.!* and the title to go at the top of each page
.TITLE LITES2 Release notes
.PAGE
.HL 1 ^&CONTENT\&
This document describes recent changes to the Laser-Scan LAMPS software
package LITES2. This package provides facilities for display and editing
of geographic and map data. 

.P 0
Details of LITES2 functionality and commands can be found using the HELP
facility in LITES2, and in the latest edition of the LITES2 Reference
Manual. Supporting information is found in the documentation for the
MAPPING package. 

.P 0
This document is part of the LAMPS V4.0 release, which went into Alpha test in
May 1992. It covers changes to package LITES2 since the previous LAMPS release
(V3.5) which went into Alpha test in September 1991.
At that time, the extant version of LITES2 was described as V3.5 of
25-September-1991.
See the release notes for the previous LAMPS release for information about
earlier changes. 

.P 0
The current version of LITES2 is now V4.0 of 9-April-1992.

.HL 1 ^&ENHANCEMENTS\&
The following particularly significant enhancements, regarding map
representation and display, are included in LITES2 V4.0
.LIST
.LE;Support is provided for multiple prioritised representations for features,
using descriptions specified in the FRT file.
This allows full cartographic control over drawing priorities when one feature
crosses another. It also allows more complex representation, including road
casings. See the release notes for the MAPPING and PLOTTING packages for
more information on this facility, and the entry for the LITES2 command
SORT PRIORITY below.
.LE;The restrictions on the size and complexity of fill area features are
removed. This allows full cartographic representation of features such as
oceans, soil type polygons, etc. See below for further details.
.LE;Support is provided in LITES2MOTIF display and in LITES2 plotting to
PostScript for control of end caps and line joins. This allows WYSIWYG display
of thick lines.
.LE;Support is provided for non-scaling feature representations, allowing texts
and symbols whose size does not increase as you zoom in.
This is selectable by feature code in the FRT. It also allows control over 
scaling of line thickness and area hatch spacing.
.END LIST

.PAGE
.HL 1 ^&INCOMPATIBLE CHANGES\&
Particular attention is drawn to the following changes in LITES2 V4.0, which
may result in behaviour incompatible with previous versions. The items are also
described in more detail in the appropriate section below.
.LIST
.LE;As part of an enhancement to allow the option of more variables, macros,
and menu squares/puck buttons, the default number available of each of these
has been reduced. If you were previously using a large number of these items,
you may need to define some logical names before starting LITES2.
.LE;LITES2 V4.0 has been built using VMS 5.4-3, and has been
verified under VMS VMS V5.4-3 and under V5.5.
It is not supported on versions of VMS prior to V5.4-3.
.LE;LITES2MOTIF V4.0 is built using the "DECwindows Motif V1.0" 
layered product. It therefore requires this to be installed to run sucessfully.
It is not supported under either the "DECwindows Developer's Kit
for Motif V1.0" or V1.1 which supported earlier versions of LITES2MOTIF.
One advantage of the change is that the executable image is much smaller than
previous releases.
.END LIST

.PAGE
.HL 1 ^&NEW OR CHANGED FACILITIES IN V4.0\&
The following facilities have been added, implemented or had their
actions altered:- 
.LIST
.LE;The following new commands are provided:
.LIST '*'
.LE;ANNOTATION WIDTH real - sets the line width used for annotations in screen
mm.
.LE;ASK LEGEND__SIZE - returns (in $ASK__REAL 1 and $ASK__REAL 2) the width
and height as a proportion of the screen that a legend drawn using DRAW LEGEND
would be. The number of boxes is returned in $ASK__INT 1.
.LE;ASK STRING ISDATETIME string - returns -1 in $ASK__INT 1 if the string
is a valid VMS format date time, otherwise 0.
.LE;CREATE ABORT__MAILBOX [name] - creates a mailbox
called 'name' or LSL$LITES2ABORT if absent. When anything is written to the
mailbox by another process, LITES2 treats it as though CTRL/C has been pressed,
and outputs whatever was sent after the 'Operation aborted' message.
If the string sent to the mailbox begins with a digit, then this is not
included in the message, but is interpreted as follows:
.LM +4
.P -4;0 - as for ordinary CTRL/C
.I -4;1 - only abort long operations such as DRAW, but not command reading
.I -4;2 - abort e.g_. DRAW and then command reading as well
.LM -4
No digit is equivalent to 0.
.P 0
This facility is intended for use by the MOTIF version of LITES2, in
co-operation with UILMENUS (see below), but is present in all versions.
The different behaviour associated with a digit at the start of the
mailbox string is intended to overcome the shortcoming of CTRL/C that
it is difficult to ensure that only e.g_. a DRAW command is aborted, and
not also any command files or macros which invoked the DRAW.
.LE;DISTANCE [ABSOLUTE/RELATIVE] d - (SPR 1304) moves a given distance along
a line or circle arc, measured along the feature. ABSOLUTE (the default) is
measured from the start of the feature, or backwards from the end if a negative
number is given. RELATIVE is measured forwards or back from the current cursor
position.
.LE;EXAMINE DISTANCE - (SPR 1304) gives the current distance of the cursor
along a linear or circle arc feature. This information is also given by EXAMINE
ALL.
.LE;PLOT SEPARATOR ESCAPE n - used to specify a PLOT ESCAPE function which
is performed automatically when the priority changes and drawing sorted by
priority is being used. It is used on plotters which by default draw
transparently to ensure that each priority layer is drawn opaque. The default
value (which is reset by PLOT LOAD) is 0, which means that no separator will be
used. The value 1 is usually required for electrostatic plotters. See the PLOT
ESCAPE command and the Plotters User Guide in the PLOTTING package
documentation for details of what functions are available.
.LE;SHOW FC__PRIORITIES [fc] - shows the drawing priorities set up in the FRT
for a particular feature code (if one is given), otherwise all feature codes.
.LE;SHOW PLOT - gives details of what hardcopy plot settings are in force
as a result of PLOT commands.
.LE;SORT PRIORITY - causes features to be drawn according to the priorities
defined for feature codes in the PRIORITY entries in the FRT file. This does
not apply to drawing during initial read-in of a file, and requires that ENABLE
SORT be in force also.
.END LIST
.LE;The following new system variables are provided:
.LIST '*'
.LE;$DISTANCE (SPR 1304) contains the current distance of the cursor along a
linear or circle arc feature.
.LE;$IMAGE__RANGE__ZMIN n and $IMAGE__RANGE__ZMAX n contain the minimum and
maximum data values in image n.
.LE;$FILESELECTED contains the number of the file currently selected using
the LITES2 FILE commands, or 0 if no file is selected.
.END LIST
.LE;The number of image bands available (using the IMAGE BAND command) has
been increased from 10 to 32.
.LE;The number of regions available (using the REGION command) has
been increased from 10 to 32.
.LE;The number of user variables (SPR 1416), macros, and menu squares/puck
buttons which may be declared using the DECLARE, MACRO, MENU and PUCK commands
can be adjusted be defining the logical names LSL$LITES2__VARIABLEMAX,
LSL$LITES2__MACROMAX, and LSL$LITES2__MENUSQUAREMAX to be the desired numbers
before starting LITES2. In order to save memory for users not requiring many
variables, macros, or menu squares/puck buttons, the defaults have been reduced
from 1000 to 200 (variables), 1200 to 600 (macros), and 1000 to 500 (menu
squares/puck buttons) - this is an INCOMPATIBLE CHANGE.
.LE;LITES2 now supports text and symbols which are drawn at a fixed size
on the screen, regardless of zoom factor. If bit 14 (value 16384) is set in the
flags field of the FRT entry for the feature, it will be drawn with its size
measured in screen mm rather than sheet mm. The same applies to line
thicknesses and fill area hatch spacing. Such text and symbol features have the
restriction that FIND operations are only reliable for the locating point, and
not the bounding box.
.LE;
The number of data points allowed in filled areas, and the complexity
of the areas may be adjusted using logical names LSL$FILL__POINTSMAX and
LSL$FILL__CUTSMAX, which should be defined before starting LITES2 if
required (SPRs 1140, 1212, 1439).
.BL
Logical name LSL$FILL__POINTSMAX controls the maximum number of points allowed
in a fill area feature. The default value is 8192 points, with the minimum
allowed being 100. Fill areas which exceed the limit for number of points will
result in areas not being filled, although they should still be drawn in
outline, albeit with any invisible segments visible. The same logical name
controls the ability to draw raster images with a large number of pixels
in a single row, so beware setting it too small.
.BL
Similarly the maximum number of times which a scan line may cross
the boundary of an area may be controlled by defining the logical name
LSL$FILL__CUTSMAX to be the required number. The default value is 100
intersections, with the minimum allowed being 10. Exceeding the limit
for intersections will result in messages 'FILL__SIDE - Too many
intersections found - ignored'.
.BL
Memory has to be allocated in proportion to these numbers, so
unnecessarily large values should be avoided. 
.LE;LITES2 cancels any outstanding read to the VDU terminal during a SPAWN
command, so that if the spawned procedure attempts to read from the terminal,
it gets the first line typed, which would otherwise have been absorbed
by LITES2. This was only a problem if the SPAWN command was invoked by a
menu etc_. rather than from the keyboard.
.LE;When a REAL or DOUBLE LITES2 variable (user or system) becomes
large (or small) enough, it is displayed in 'E' notation. For large values,
there was a space after the 'E', followed by a 3 digit exponent - an example
might be '#.10000000E#009'. (For small values, the space was occupied by a '-'
sign.) If the substituted value of a variable was used as a macro parameter,
the space would make it appear as two parameters within the macro. To overcome
this problem, the space has been replaced by a '+' sign - the above example
becomes '#.10000000E+009'. This only applies to the values of LITES2 variables,
and not to any other values displayed by LITES2, which may still use the E
format with a space (SPR 1567).
.LE;If CTRL/C is pressed when LITES2 is waiting for interactive input, then
the CTRL/C is acknowledged by the usual 'Operation aborted' message.
Previously, the CTRL/C would be stored up causing, the next command to
be ignored.
.LE;LITES2MOTIF now supports different styles of end caps and line joins,
including selection of round or square ends, and mitred or round corners,
specified by the hardware field in the FRT.
See the LITES2 - X-Windows (MOTIF) Workstation Guide for details.
.LE;If logical name LSL$DECW__HW__FILL is used to utilise hardware area
fill in LITES2MOTIF, then software filling will be used if the number of
points exceeds the limit for the hardware - this is commonly 4092 points.
.LE;The tertiary command 'SUB' for OVERLAY ATTRIBUTE has been changed to
'SUBTRACT' to be consistent with the others, which are all real words.
The abbreviation 'SUB' will still work.
.LE;(SPRs 894 and 1018) EDGEMATCH TIE will now tie editable features to the
ends of features in a read only map. The end point is moved onto the baseline
at the position nearest to the end of the read only feature. This makes most
sense if the read only feature already ends on the baseline. EDGEMATCH JOIN now
rejects features in read only maps - previously these could result in errors.
.LE;LITES2MOTIF now uses hardware fill for solid areas by default. Define
logical name LSL$DECW__HW__FILL as 0 to use software fill. Software fill
is used if there are too many points for hardware.
.LE;The package-specific initialisation file LITES2INI.COM has been modified
to support remote X-windows sessions on Motif workstations and X-terminals.
.LE;SPRs 1013, 1289. New shareable image LITES2DSRSPOTSHR.EXE is intended for
use with KERN DSR photogrammetric plotters when SPOT imagery is in use. Logical
name LSL$LITES2__KERN__ROUTINES should be pointed to LSL$EXE:LITES2DSRSPOTSHR
in order to use it. The difference between it and LITES2DSRSHR (which is
normally used) is that the function to drive the DSR to a given position
without waiting for it to get there is not used, since it is not available in
the KERN plate processor program intended for SPOT imagery. Because of this,
LITES2 operations which frequently drive the DSR to positions from the VAX may
prove slow.
.END LIST

.PAGE
.HL 1 ^&PROBLEMS FIXED IN V4.0\&
This release corrects the following problems that have been found to exist
in LITES2 Version 3.5 :-
.LIST
.LE;Previous releases of LITES2 could produce composite text
components with no characters, which were illegal on subsequent read in.
To fix this, null components of composite texts are changed to a single
space on read in. The null components are no longer produced, and the
components with a single space are handled correctly by the PARAGRAPH
commands (SPR 1362).
.LE;The CPU type is now checked correctly when testing the user's LITES2
license. It was previously incorrect for some VAX models.
.LE;The JOIN, TIE, MEND, and EDGEMATCH commands now correctly maintain
invisible end segments of features. These used to be forbidden, but since
allowing them, these commands sometimes made them visible depending on
the direction of digitising of the various features (SPR 1511).
.LE;It is now possible to respond to an INQUIRE command with a blank
line (provided that the variable is CHARACTER type - any numeric type
is prompted for again). This did not always work previously (depending
on whether the default, or a user defined prompt was used).
.LE;SHOW MENU or SHOW PUCK reliably stop when CTRL/C is pressed.
Previously CTRL/C usually just aborted the listing of the current menu
or puck macro, and the SHOW command then continued with the next one.
.LE;The timer is now cleared when a WAIT command is terminated
prematurely by CTRL/C. Previously, the timer was left running, and
could terminate a later WAIT when it finally expired.
.LE;The EDGEMATCH EXTEND command no longer attempt to extend features in
a read only map. This used to result in error messages.
.END LIST

.PAGE
.HL 1 ^&CHANGES TO ANCILLARY PROGRAMS FOR V4.0\&
This release includes the following changes to ancillary programs included 
with LITES2 Version 4.0 :-
.LIST
.LE;The following changes have been made to the Motif menu system utilities
UILMENUSMOTIF and UILGENMOTIF:
.LIST '*'
.LE;UILGENMOTIF and UILMENUSMOTIF require the "DECwindows Motif V1.0"
layered product to be installed. They are not supported under either the 
"DECwindows Developer's Kit for Motif V1.0" or V1.1 which supported earlier
versions. They also require either VMS V5.4-3, or VMS V5.5.
.LE;Because of the change to "DECwindows Motif V1.0", any existing menus must be
re-built from their component UIM files. 
.LE;After UIL files for menus have been generated using UILGENMOTIF, 
they must be compiled to UID files  using the DEC-provided UIL compiler in
motif mode. This means using the command "$ UIL/MOTIF <menufile>".
.LE;A colour mixing box is provided, specified by the BOX COLOUR__MIX command
in UILGEN. It returns red, green, and blue colour components to the application
program. The colour displayed initially may be set by the UILMENUS action
COLOUR#RGB#r#g#b#name.
.LE;Colours and fonts are handled differently so as
to allow them to be specified in a resource file - this allows a different
customised appearance to be specified at run time.
.LE;Modal boxes now only prevent the user from accessing other boxes
in the UILMENUS application, rather than all other boxes on the screen.
A side effect of this is that the 'no entry' sign pointer is no longer
displayed.
.LE;Menus are scaled in both width and height so as to fit better on screens
with different sizes and aspect ratios.
.LE;New UILMENUS qualifier, /CLASSNAME=string, provides an alternative
application class to LSLUILMENUS, and hence allows a differently named
resource file - classname.DAT in DECW$USER__DEFAULTS: or DECW$SYSTEM__DEFAULTS:.
.LE;New UILMENUS action - LIST MOVE "item" list1 list2, moves a button
from one list to another, keeping its DO string, and its selected state.
.LE;The LIST SELECT action in a multiple list now always results in the
item being selected, and does not merely toggle it.
.LE;A side effect of allowing colours to be specified in a resource file
caused icons using colours from DEFINE COLOUR NAME not to work. Icons
attempting to use colours from DEFINE COLOUR RGB never worked in any case.
Colours for icons must now be defined using the actual UIL color function.
.LE;New UILMENUS qualifier - /ABORT[=file] qualifier. Default is /NOABORT,
default file if /ABORT given is LSL$LITES2ABORT:. The action ABORT [string]
writes string (or blank line) to the abort file (or is ignored if none
present) which is expected to be LITES2 abort mailbox, set up using the
CREATE ABORT__MAILBOX command in LITES2. See the LITES2 section of these notes
for information on this command.
.LE;UILMENUS no longer exits quietly if the qualifiers /NOOUTPUT or /NOINPUT
are given.
.LE;UILGEN allows conditional compilation of UIM files so that a set of
UIM files may be used to produce different menus. The mechanism, which is
modelled on the 'C' language precompiler, uses commands _#IFDEF, _#IFNDEF,
_#ELSE, and _#ENDIF in the UIM files, with the UILGEN qualifier
/DEFINE=(symbol1,symbol2...) to specify which symbols are defined.
.LE;LIST widgets now have a horizontal scroll bar when items are too long
to fit in the widget.
.LE;LIST widgets with a fixed width are now supported.
The UILGEN LIST command takes an optional 4th argument - if present then the
3rd argument becomes a fixed width, and the 4th (3rd if no 4th) is the number
of items. If the 4th argument is omitted, then the list will expand according
to the width of the items.
.LE;Single list widgets use a slightly different selection method than
previously (known as Browse Select rather than Single Select). The difference
is that the pointer may be tracked to other items while the left button is
held down. Only the item containing the pointer when the button is released
will trigger, rather than the item containing the pointer when the button was
pressed. This change is to avoid a click on an item which is already selected
from deselecting it in single lists.
.END LIST
.LE;New versions of the header files for UILMENUS (LSL__ARGS.UIL and
LSL__CDL__ARGS.UIL) are provided, with minor changes to match the new programs.
.LE;A new version of the example file COMPLEX__EXAMPLE.UIM is provided,
with minor changes.
.END LIST
