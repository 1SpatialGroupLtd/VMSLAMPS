.LEFT MARGIN  0;.RIGHT MARGIN 80;.PAGE SIZE    60,80
.FLAGS BOLD
.KEEP

.!** title page
.NOFILL
.!                                            Bureau / Sales Support / Software
.FILL
.FIGURE 14
.CENTRE ;^&Laser-Scan Ltd.\& 
.FIGURE 2
.CENTRE ;^&LITES2\&
.BLANK
.CENTRE ;^&Release Notes -  Version 3.1\&
.!

.FLAGS SUBSTITUTE
.FOOT
.NOFILL
Copyright (C) $$year Laser-Scan Ltd
Science Park, Milton Road, Cambridge, England CB4 4FY  tel: (0223) 420414

Document "LITES2 Release"				Category "Release Notes"
Document Issue 3.1	Ron Russell / Clarke Brunt	2-April-1990
.FILL
.END FOOT
.NOFLAGS SUBSTITUTE

.!* and the title to go at the top of each page
.TITLE LITES2 Release notes
.PAGE
.HL 1 ^&CONTENT\&
This document describes recent changes to the Laser-Scan LAMPS software
package LITES2. This package provides facilities for display and editing
of geographic and map data. 

.P 0
Details of LITES2 functionality and commands can be found in HELP, and
in the latest edition of the LITES2 Reference Manual. Supporting
information is to be found in the documentation for the MAPPING package.

.P 0
An appendix to this document contains the main changes to the LITES2
reference manual.

.P 0
This document covers changes to package LITES2 since the previous
general release of LAMPS software, which was frozen ready for issue on
01-November-1989. At that time, the extant version of LITES2 was
described as V3.0 of 6-Oct-1989. See the LITES2 release notes for the
previous LAMPS release for information about earlier changes. 

.HL 1 ^&ENHANCEMENTS\&
The following significant enhancements are included in LITES2 V3.1
.LIST
.LE;Support for "continuous map" functionality, where a large
pre-defined geographical area can be divided horizontally into "tiles"
and vertically into "strata". Map data of particular parts of the area 
can then be loaded into LITES2 as needed, without the user having 
knowledge of the map file naming convention. See commands RANGE,
MAPS, ASK MAP__NUMBER and system variables _$MAP__SHEET and 
_$MAP__NUMBER.
.LE;Support for drawing of picture data into the additional displays
of LITES2. This allows facilities such as pointing to a building feature 
in the main display, and having a detailed plan appear in one of the 
windows, and a pictorial image in another. See DRAW IFF, DRAW DTI and 
DRAW LSI commands.
.LE;Initial Beta test release of a DECwindows version of LITES2 called 
LITES2DECW. This provides similar functionality to the UIS version, but 
will run under the DECwindows windowing system. It includes a new menu 
system call UILMENUS, similar to the UISMENUS provided with LITES2UIS.
See the "LITES2 DECW workstation guide" and the "UILMENUS User Guide" 
for more information. Note that this version is still under active
development and may be subject to change without notice.
.END LIST

.PAGE
.HL 1 ^&NEW OR CHANGED FACILITIES IN V3.1\&
The following facilities have been added, implemented or had their
actions altered:- 
.LIST
.LE; New commands
.LIST 'o'
.LE; RANGE LIMITS xmin xmax ymin ymax - to set LITES2 working area in
INITIAL state, so that further maps can be read in in READY state (see
below)
.LE; RANGE SECTOR xmin xmax ymin ymax - to allow an area less than the
entire LITES2 working area to be sectored. This command is not 
implemented yet.
.LE; ASK MAP__NUMBER [string] - if the argument is present then this
command fills in the system variable _$MAP__NUMBER with the number of 
the first map that contains the string in its name; if no string is
present then the variable will contain the number of the next map that
contains the string given in the last ASK MAP__NUMBER command that had
an argument. In either case, if the string is not found in any map name,
the variable will contain 0.
.LE; ENABLE, DISABLE and TOGGLE CHECKS - to control checking of
duplicates when defining macros and variables. This will be of use
to users who habitually define the same large number of macros and 
variables with each run of LITES2 in well tested command files. It 
should not be used while these command files are under development.
.LE; SHOW COLOURS [range] - show the specified colours in the current
overlay and display. If no range is given all the available colours are
listed. This command is only available on versions with suitable 
hardware facilities.
.LE; ENABLE KRISS REGISTRATION - to register the IFF image with the
photographic image in a KERN DSR with a KRISS image injection system
.LE; New DRAW commands -  for drawing into additional displays in UIS and
DECW versions
.LIST '*'
.LE; DRAW IFF filename - to draw an IFF file (using current FRT, TRI and
SRI files) 
.LE; DRAW LSI filename - to draw a LSI file
.LE; DRAW DTI filename - to draw a DTI file
.END LIST
.LE; SPAWN/NOWAIT - a variant of the SPAWN command, which spawns a
DCL command without LITES2 waiting for its completion. This is useful
when creating parallel processes to run menus like UISMENUS etc.
.LE; CREATE MAILBOX n - to create a mailbox on LSL$LITES2AUX__n. This
is useful when other processes have to communicate with LITES2.
.END LIST
.LE; New system variables
.BL
.LIST 0 '*'
.LE;$IMAGE__SETUP
.LE;$MAPTOTAL
.LE;$MAP__SHEET
.LE;$MAP__NUMBER
.END LIST
.LE; The MAPS command now has optional secondary commands
.LIST '*'
.LE;MAPS [IN] n - same as old MAPS n command - allows up to 9 maps to
be specified in INITIAL STATE
.LE;MAPS OPEN n - specifies number of IFF files that can be open at
once (default 3). This command requires new IFFSHR.EXE, supplied as part
of the MAPPING package (qv).
^*
.NOTE IMPORTANT NOTE
It is not necessary nor advisable to have every IFF file read into
LITES2 open at once. The number of files that can be opened is limited
by the user's file quota.\*
.END NOTE
.END LIST
.LE; The commands WRITE filename and EXIT filename are no longer
invalid when there are multiple maps and more than one is selected
for output. Instead, all selected maps are output to one merged file.
.LE; The commands IFF, INSITU and READ are now valid in READY state,
when more IFF files can be specified, as long as they fall within the
LITES2 coordinate space. Only those files specified in INITIAL state
can be set up on the digitising table. Up to a total of 100 maps can
now be opened using these commands.
.LE;SUPPRESS can now be used to suppress all displays in any state (not
just INITIAL state as previously)
.LE;Trailing blanks and tabs are now stripped off commands. As a result
commands such as MESSAGE will require double quotes to include trailing
blanks or tabs.
.LE;The following SELECT commands now accept plural secondary and 
tertiary arguments
.LIST  '*'
.LE;SELECT STYLES
.LE;SELECT CATEGORY and SELECT CATEGORIES
.LE;SELECT ALL ACS
.LE;SELECT ALL STYLES
.LE;SELECT ALL CATEGORY and SELECT ALL CATEGORIES
.END LIST
.LE;UIS and DECW versions: Refresh of construction always refreshes the
first vector, to allow start of feature to be identified. 
.LE;When refreshing composite text, the number of component texts
refreshed can now be controlled. One box will always be refreshed;
the number of additional boxes is controlled by the REFRESH POINTS
command. Each box requires 5 vertices.
.LE;The command SHOW MEMORY now gives information about availability
of locks and open files. It also has an optional argument (in range
1-3) which, if present controls the output of information about
LITES2 memory zones.
^*
.LE;Many VIEW commands have been altered, some removed and others added.
The LITES2 perspective viewing optional module is under continuous
development and details of the current commands are supplied
separately.\*
.LE;A new version of UISMENUS.EXE on 1-May-1990 has increased maxima
for the number of buttons per console (from 100 to 150) and the
total number of consoles (from 200 to 250).

.END LIST
.PAGE

.HL 1 ^&BUGS FIXED IN V3.1\&
This release corrects the following bugs that have been found to exist
in  LITES2 Version 3.0 :-
.LIST
.LE;Correct longstanding bug where features near right edge of area were
not found when INREGION selected. 
.LE;Ensure that $MOANED is set correctly. Previously it was sometimes
not correctly set when an error occurred while decoding a command.
.LE;Allow user routines to get input from the terminal (without first
requiring a carriage return)
.LE;Associate correct map name with map number in SHOW CP command. (SPR 
605)
.LE;When using ENABLE BOX ensure that boxes are drawn at minimum line
width.
.LE;Exit from LITES2 more elegantly when a "Insufficient virtual memory"
error occurs. Previously, under these conditions the debugger was
called, but it could not be started (due to insufficient virtual memory)
and the job exited with a register dump. 
.LE;Avoid integer overflow error when constructing features in USER
routines 
.LE;Correct various bugs that occurred when clipping and testing 
features against regions. (SPRs 602 and 618)
.LE;Avoid redrawing refresh picture after every command when moving 
texts and symbols in MODIFY state.
.LE;UIS and DECW versions: ensure that button box is initialised 
properly; if previous run of LITES2 had been aborted abnormally, there
were cases where continuous "No Input" messages were output when the
button box was next initialised.
.LE;New version of UISMENUS.EXE on 2nd February 1990 fixes problem with
access violation, usually occurring when pressing a mouse button on
a heavily loaded system.
.LE;New version of UISMENUS.EXE on 23rd February 1990 fixes problem with
the filling of menu boxes which occurred with DEC VWS Version 4.2.
.LE;V3.1 of LITES2TEK4100.EXE was amended on 2nd March 1990, to correct a
problem with the highlighting on Westward displays.
.LE;All the V3.1 versions of LITES2 were amended on 2nd April 1990, to correct a
problem in JOINing texts to make a composite text, which caused a collapse
or access violation during subsequent editing.
.END LIST

.APPENDIX ^^Changes to LITES2 Reference Manual
These changes have resulted in the following changes to the LITES2 reference
manual (version 3.0)
.LIST
.LE; ^^^&System variables\&
.FILL
System variables have names beginning with the character $. The available
system variables can be displayed using the command "SHOW VARIABLES $".
An error results if an attempt is made to use a system variable which is
undefined e.g. $FSN when there is no found feature. A list of available
system variables follows:

.LM +10
.P -10;$IMAGE__SETUP
.BR;INTEGER   -1 if the vector data has been setup to align with the
image(s), else 0
.P -10;$MAP__NUMBER
.BR;INTEGER  Contains the next map number containing the string
specified by an ASK MAP__NUMBER command
.P -10;$MAP__SHEET [n] May be followed by an integer representing the scale of
the map sheet whose name is required (eg 1250 or 10560). If this value is not
supplied the sheet scale currently being used by LITES2 is used.
.BL;CHARACTER Contains the name of the map sheet that covers the current
cursor position. By default, the sheet naming convention is that used by
the Ordnance Survey of Great Britain. This provides map names for the
scales 1/1250, 1/2500, 1/10000, 1/10560, 1/25000. In addition a name
will be generated for scales greater than 1/250000.
.BL
This default algorithm can be substituted by a user supplied one which
can be passed either the absolute position of the cursor or its
geographical position. This substitution is achieved by supplying a
shared image pointed at by the logical name
LSL$LITES2__GET__SHEET__ROUTINES. Example source files that contain
instructions to do this are supplied in
LSL$PUBLIC__ROOT:[LITES2.ROUTINES.EXAMPLES] and are called
GET__SHEET__GEOG__EXAMPLE.FOR and GET__SHEET__GRID__EXAMPLE.FOR.
.P -10;$MAPTOTAL
.BR;INTEGER   Contains the total number of maps read in
.LM -10
.LE; ^^^&RANGE\&
.FILL
Specifies an area to be sectored which is not the default area. By
default the area that will be sectored is the combined range of all maps
and images specified in INITIAL state, plus 10% (i.e. 5% of the combined
range is added to all edges).
.NOFILL

Format:  RANGE  subcommand

Valid in state  INITIAL
.LIST '*'
.LE ;^^^&RANGE LIMITS\&
.FILL
Specifies the area that will become the LITES2 coordinate space.
The coordinates are specified as full projection coordinates i.e.
coordinates that include any origin offset specified in the IFF files.
.BL
This command is intended for use when further maps will be read in
READY state.
.NOTE
.LIST
.LE;any specified range will be expanded by the range of maps and images
specified in INITIAL state. This expanded range will then be further
expanded by 10%.
.LE;any expanded range will persist on return to INITIAL state.
.END LIST
.END NOTE
.NOFILL

Format:  RANGE LIMITS xmin xmax ymin ymax
.LE ;^^^&RANGE SECTOR\&
.FILL
Specifies an area to be sectored which is not the default area. The
sector mechanism is used to provide the spatial index and fast find
mechanism.
.BL
The coordinates are specified as full projection coordinates i.e.
coordinates that include any origin offset specified in the IFF files.
.BL
This command is not yet implemented
.NOFILL

Format:  RANGE SECTOR xmin xmax ymin ymax
.END LIST
.FILL
.LE; ^^^&ASK\&
.FILL
A command that places information in associated system variables.
.NOFILL

Format:  ASK subcommand

Valid in states:
READY LINE CIRCLE TEXT SYMBOL EDIT MODIFY ON WINDOW CONSTRUCT AC RECOVER SETUP

.LIST '*'
.LE ;^^^&ASK MAP__NUMBER\&
.FILL
If the optional string argument is present then this command fills in
the system variable $MAP__NUMBER with the number of the first map that
contains the string in its name; if no string is present then the
variable will contain the number of the next map that contains the
string given in the last ASK MAP__NUMBER command that had an argument.
.BL
In either case, if the string is not found in any map name, the
variable will contain 0.
.NOFILL

Format:  ASK MAP__NUMBER [string]

eg       ASK MAP__NUMBER .IFF
         SHOW VARIABLE $MAP__NUMBER

                     1                        for example
         ASK MAP__NUMBER
         SHOW VARIABLE $MAP__NUMBER

                     2                        for example
         ASK MAP__NUMBER
         SHOW VARIABLE $MAP__NUMBER

                     0                        for example

.END LIST
.FILL
.LE; ^^^&ENABLE\&
.FILL
Activates specified optional facilities.
Use DISABLE (qv) to deactivate facilities.
.NOFILL

Format:  ENABLE  subcommand

Valid in all states (except where specified)
.LIST '*'
.LE ;^^^&ENABLE CHECKS\&
.FILL
When defining macros and user variables, check that the name does not
already exist.
.BL
If CHECKS are disabled, the user is allowed to multiply define macros
and variables, but every time the user defined macro table and variable
table is accessed then a warning message is output (even if the multiply
defined entity is not being accessed). If a multiply defined entity is
accessed its value is undefined.
.BL
The purpose of this command is to speed up reading large, proven
initialisation files in production environments by disabling checks
while they are being read. To get the maximum benefit the following
guidelines should be followed:
.LIST
.LE;All primitive LITES2 commands should be preceded by a "_%"
.LE;Initialisation of variables (with LET commands) should be grouped
together at the end of the initialisation after all the variables have
been declared.
.LE;Checks should be ENABLEd before returning to interactive mode. There
is no advantage in having checks disabled while not declaring macros and
variables.
.END LIST
.NOFILL

Format:  ENABLE CHECKS
.LE ;^^^&ENABLE KRISS\&
.FILL
KERN KRISS image superimposition equipment to be used to display
data in a KERN DSR photogrammetric plotter. This command is only
valid in conjunction with the ENABLE DSR command.
The KRISS is initialised and any subsequent LITES2 graphics will be
drawn on the KRISS. If the ENABLE KRISS command is given while in
INITIAL state, then the KRISS will be initialised when the map(s) are
read in. If the KRISS is already initialised, then any ENABLE/DISABLE
KRISS commands will just make the KRISS image visible/invisible. 
.BL
The subcommands (if given) control further KRISS options.
.BL
This option is only available with some versions of LITES2, and the
user should refer to the hardware dependent reference manual for
the possibilities available with his hardware.
.BL
.INDEX LSL$LITES2__KERN__ROUTINES
Use of the KERN DSR and KRISS depends on a shared image pointed at by
the logical name LSL$LITES2__KERN__ROUTINES. This image is supplied by
Laser-Scan. The name of this image depends on whether the DSR is to be
used on its own, or in conjunction with a KRISS system. 
.NOFILL

Format:  ENABLE KRISS [subcommand]
.LIST 'o'
.LE ;^^^&ENABLE KRISS DIALOG\&
.FILL
Specifies an area on the KRISS menu plane to be used as a one line
dialogue area. Messages may be written to this area using the
ENABLE KRISS MESSAGE command. The arguments specify the position
of the bottom left of the area, and also its height and length, all
in pixels in the range 0-1023. The maximum allowed height is 100.
The default dialogue area is at position 0,61 with height 20 and
length 1023.
.NOFILL

Format:  ENABLE KRISS DIALOG xpos ypos height length
.LE ;^^^&ENABLE KRISS MESSAGE\&
.FILL
Displays the given text in the KRISS dialogue area. If no text is given,
the area is cleared.
If the text is to have leading spaces or tabs, then it must be enclosed
in double quotes.
.NOFILL

Format:  ENABLE KRISS MESSAGE  [text]
.LE ;^^^&ENABLE KRISS REGISTRATION\&
.FILL
Performs a manual registration of the KRISS image with the plates.
The user is prompted to move the plates until registration is
achieved, and then press the right DSR button to accept, or the left
button to leave the registration unchanged. Once set, the registration
will be maintained for the duration of the LITES2 session. 
If the argument n is given as zero, then the effect of any manual
registration is removed.
.NOFILL

Format:  ENABLE KRISS REGISTRATION [n]
.LE ;^^^&ENABLE KRISS SIDE\&
.FILL
Specifies which eye is to see the KRISS screen menu, status area, and
dialogue area. The argument should be 1#for left (default), 2#for
right, 3#for both, or 0#to make the menu invisible.
.NOFILL

Format:  ENABLE KRISS SIDE side
.LE ;^^^&ENABLE KRISS STATUS\&
.FILL
Specifies an area on the KRISS menu plane to be used as a status area.
When enabled, the area will continuously display the current state,
plus the currently set map, layer, and feature code.
The optional arguments specify the position of the bottom left of the
area, and also its height, all in pixels in the range 0-1023. The maximum
allowed height is 100. If the arguments are omitted, the command just
enables/disables the status area without changing its position.
The default status area is at position 0,30 with height 20.
.NOFILL

Format:  ENABLE KRISS STATUS [xpos ypos height]
.END LIST
.END LIST
.FILL
.LE; ^^^&SHOW\&
.FILL
Displays information requested.
.NOFILL

Format:  SHOW  subcommand

Valid in all states
.LIST '*'
.LE ;^^^&SHOW COLOURS\&
.FILL
Show the specified colours in the current overlay and display.
.BR
If no range of colour indices is given all the available colours
are listed.
.BL
This command is only available on versions with suitable hardware
facilities.
.NOFILL

Format:  SHOW COLOURS [range]

eg       SHOW COLOURS 1,3,5,7-11
.LE ;^^^&SHOW MEMORY\&
.FILL
Intended as a program development aid.
.BR
Shows statistics concerning use of dynamic memory, lock usage and
file usage.
.BR
If an (optional) integer argument in the range 1-3 is given, then 
an increasing amount of information will be given about the
various dynamic memory zones used by LITES2.
.NOFILL

Format:  SHOW MEMORY [level]
.END LIST
.FILL
.LE; ^^^&DRAW\&
.FILL
Draws on the LITES2 screen(s).
.BL
DRAW MAP and DRAW SCREEN clear the display and draw the whole or
part of the IFF file(s) being edited. The features in the IFF file
are drawn with the characteristics specified for their feature code
in the FRT file being used.
.BL
Other DRAW commands allow additional information to be added to the
picture on the screen. This data is drawn with characteristics specified
by the ANNOTATION command.
.NOFILL

Format:  DRAW  subcommand

Valid in states  READY LINE CIRCLE TEXT SYMBOL SETUP
.LIST '*'
.LE ;^^^&DRAW DTI\&
.FILL
Draws the specified DTI file in the current display.
.BR
Draws the bottom left corner of the image if its size exceeds
that of the display.
.NOFILL

Format:  DRAW DTI [filename]
.LE ;^^^&DRAW IFF\&
.FILL
Draws the specified IFF file in the current display.
.NOFILL

Format:  DRAW IFF [filename]
.LE ;^^^&DRAW LSI\&
.FILL
Draws the specified LSI file in the current display.
.BR
Draws the bottom left corner of the image if its size exceeds
that of the display.
.NOFILL

Format:  DRAW LSI [filename]
.END LIST
.FILL
.LE; ^^^&SPAWN\&
.FILL
An appropriate licence is required to use this command.
.BR
Creates a sub-process to execute a DCL command (which may be an @file
command). If doing several commands, then one can SPAWN @TT:, perform the
commands, then LOGOUT or CTRL/Z. 
Unless the /NOWAIT qualifier is given, LITES2 will wait for the subprocess
to complete before continuing. If /NOWAIT is used, then the command executed
by the subprocess should not normally read from or write to the terminal,
since this is likely to result in confusion.
.NOFILL

Format:  SPAWN [/NOWAIT] command

eg       SPAWN DIRECTORY LSL$IF:
or       SPAWN/NOWAIT UILMENUS EXAMPLE

Valid in all states

.FILL
.LE; ^^^&CREATE\&
.FILL
Creates a new entity.
.NOFILL

Format:  CREATE  subcommand

Valid in states  INITIAL READY
.LIST '*'
.LE ;^^^&CREATE MAILBOX\&
.FILL
Creates a mailbox as an alternative LITES2 command input source. The
integer argument is the auxiliary input number in the range 1-4.
CREATE MAILBOX 1 creates a mailbox with logical name LSL$LITES2AUX,
while CREATE MAILBOX n for n = 2, 3, or 4 creates a mailbox with
logical name LSL$LITES2AUX__n. By default, the logical name for the
mailbox goes into the JOB logical name table, so that it will be visible
to any subprocesses. The logical name must not already exist when
the CREATE MAILBOX command is given - LITES2 will automatically attempt
to read commands from these logical names if they exist.
.P 0
If it was required, for example, that the logical name for the mailbox
was placed in the group logical name table, then give the DCL command
.P 0
##$ Define/table=LNM$PROCESS__DIRECTORY _-
.BR
#################LNM$TEMPORARY__MAILBOX LNM$GROUP
.P 0
before starting LITES2.
.NOFILL

Format:  CREATE MAILBOX  integer
.END LIST
.FILL
.LE; ^^^&MAPS\&
.FILL
Specify number of IFF files to be read in, or the number of IFF files
that can be open at once.
.NOFILL

Format:  MAPS [subcommand] integer

Valid in state  INITIAL
.LIST '*'
.LE ;^^^&MAPS [IN]\&
.FILL
Allows a number of IFF files to be specified in INITIAL state.
Default is 1 so command is only needed if more than one map is
to be read using IFF, READONLY, or INSITU commands.
.BR
Note that only maps specified in INITIAL state can be set up on
a digitising table.
.BR
The command MAPS 0 may be used, provided that at least one image file
has been specified using IMAGE commands, to cause LITES2 to move into
READY state without any IFF files. The image files can then be
displayed as required.
.NO FILL

Format:  MAPS  [IN] integer

eg       MAPS 4
or       MAPS IN 4

.LE ;^^^&MAPS OPEN\&
.FILL
Specifies number of IFF files that LITES2 can keep open at once when
multiple maps are being used.
.BR
LITES2 opens and closes IFF files as they are accessed, and if dealing
with a large number of files (eg when using LITES2 in a "continuous
mapping" mode) it may be advantageous to allow more than a maximum of 3
(the default) to be open at once.
.BR
Users should note that there is a limit to the number of files (of all
kinds) that they can have open at once. As the MAPS OPEN command only
takes effect when LITES2 accesses files (after they have been read in)
unrecoverable errors can occur if this number of open files is exceeded
at this stage.
.BL
Note that it is ^*NOT\* necessary to allow LITES2 to open all the IFF
files it is accessing at once. Unless the MAPS OPEN command shows an
obvious performance improvement, it is recommended that it should not be
used.
.NOFILL

Format:  MAPS  OPEN integer
.END LIST
.FILL
.LE; ^^^&EXIT\&
.FILL
Finishes editor session and creates new version of IFF file(s).
.BR
If SELECT OUTPUT has been given, then only the selected features
are output.
.BR
A filename for the output may be specified. If a filename is specified
and more than one map has been selected for output, the selected files
will be merged together to form one file. This merged file will have
a valid type 2 map descriptor, having the scale of the first map that
it contains. Its map header will be blank.
.BL
If DISABLE EXIT (qv) was used, LITES2 will return to INITIAL state in
preparation for reading in different map(s).
.NOFILL

Format:  EXIT  [filename]  (full command required)

Valid in state  READY
.FILL
.LE; ^^^&WRITE\&
.FILL
Creates new version of IFF file(s) from the current workspace file(s)
as for EXIT. The editing session is not terminated.
.BR
May be used to output the current state of editing, or to create subsets
of a file using SELECT OUTPUT.
.BR
A filename for the output may be specified. If a filename is specified
and more than one map has been selected for output, the selected files
will be merged together to form one file. This merged file will have
a valid type 2 map descriptor, having the scale of the first map that
it contains. Its map header will be blank.
.BL
WRITE may be used to produce new versions of READONLY or INSITU files,
possibly with selections, whereas EXIT has no effect on these.
.NOFILL

Format:  WRITE  [filename]  (full command required)

Valid in state  READY

.FILL
.LE; ^^^&REFRESH\&
.FILL
Changes refresh characteristics for lines.
.NOFILL

Format:  REFRESH  subcommand

Valid in states  INITIAL READY LINE CIRCLE EDIT ON CONSTRUCT
.LIST '*'
.LE ;^^^&REFRESH POINTS\&
.FILL
Maximum number of refreshed points (range 2 to 200, default 50).
.BL
When refreshing composite text each component takes 5 vertices. At least
one component is refreshed.
.NOFILL

Format:  REFRESH POINTS integer
.END LIST

.END LIST
