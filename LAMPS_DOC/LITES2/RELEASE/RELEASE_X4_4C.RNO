.LEFT MARGIN  0;.RIGHT MARGIN 80;.PAGE SIZE    60,80
.FLAGS BOLD
.KEEP


.!!!!!!!!!!!!   for double sided output
.!!!LAYOUT 2,2
.!!!!!!!!!!!!


.!** title page
.FILL
.FIGURE 14
.CENTRE ;^*Laser-Scan Ltd.\* 
.FIGURE 2
.CENTRE ;^*LITES2\*
.BLANK
.CENTRE ;^*Release Notes -  Version X4.4C\*
.!

.FLAGS SUBSTITUTE
.FOOT
.NOFILL
Copyright (C) $$year Laser-Scan Ltd
Science Park, Milton Road, Cambridge, England CB4 4FY  tel: (0223) 420414

Document "LITES2 Release"				Category "Release Notes"
Document Issue X4.4C	Clarke Brunt/Paul Hardy		7-November-1994
.FILL
.END FOOT
.NOFLAGS SUBSTITUTE

.!* and the title to go at the top of each page
.TITLE LITES2 Release notes (X4.4C)
.PAGE
.HL 1 ^*CONTENT\*
This document describes recent changes to the Laser-Scan LAMPS software
package LITES2. This package provides facilities for display and editing
of geographic and map data. 

.P 0
Details of LITES2 functionality and commands can be found using the HELP
facility in LITES2, and in the latest edition of the LITES2 Reference
Manual. Supporting information is found in the documentation for the
MAPPING package. 

.P 0
This document is for a special release called LITES2 X4.4C,
which went into Alpha test in November 1994.
It covers relevant changes to package LITES2
since the previous LAMPS release (V4.3) which went into Alpha test in January
1994. 

.P 0
The specific version covered here is LITES2 X4.4C of 7-Nov-1994. This
is an interim release containing new functionality for particular customers.
Only the Motif version of LITES2 is affected.

.P 0
See the release notes for the previous LAMPS release for
information about earlier changes. 

.HL 1 ^*ENHANCEMENTS\*
The following particularly significant enhancements are included in
LITES2 X4.4C
.LIST
.LE; The ability to read 'encrypted' LCM files. Applications written
using the LITES2 command language can now be hidden from the final user.
The encryption is performed by the LCMSQUASH program, using an integer
code allocated to the developer by Laser-Scan, and an alphanumeric key
chosen by the developer (and communicated to Laser-Scan). Only users with
an appropriate LITES2 licence will be able to read the files.
.LE; New facilities to allow LITES2 to be used for update of
vector mapping, using scanned aerial photography as a backdrop. This includes
local transformation setup.
.LE; New representation facilities allow automatic generation of prioritised
`blanking' areas and borders around text and symbol features, and also
selection of priority levels for display.
.END LIST

.PAGE
.HL 1 ^*INCOMPATIBLE CHANGES AND WARNINGS\*
Particular attention is drawn to the following changes in LITES2 X4.4, which
may result in behaviour incompatible with previous versions, or merit special 
warnings. The items are also
described in more detail in the appropriate section below.
.LIST
.LE; LITES2 X4.4C requires the FRTLIB shareable image, FRTSHR.EXE,
with GSMATCH parameters 1.2 or higher. This is dated 7-November-1994 or
later. Logical name LSL$FRTSHR must point to this image, as documented
in the MAPPING package release notes.
.END LIST 0

.PAGE
.HL 1 ^*NEW OR CHANGED FACILITIES IN X4.4\*
The following facilities have been added, implemented or had their
actions altered:- 
.LIST
.DISPLAY ELEMENTS '(',LL')'
.LE; Command files (.LCM) whose first line consists of the sequence '_#_%_#',
followed by an integer and optional comment are assumed to be encrypted.
A special LITES2 licence is required to read such files. The contents of
encrypted files are not echoed or written to the journal file (instead, just the
@filename directive is journalled), and the contents of any macros defined
by the file cannot be echoed or examined. The encryption is performed by the
LCMSQUASH program. Developers who want to encrypt their own LCM application
should apply to Laser-Scan for a code number.
.LE
The licensing mechanism for LITES2 now allows the program to be licensed
for machines with a specific model type (system parameter HW__MODEL),
rather than just the CPU type. This change has been made because many recent
models all use the same CPU type. The output from the SHOW VERSION command
now displays any model type information from the licence.
.LE
The message "Too many features - segment numbers re-used" used to occur
every time the number of features read in or generated passed multiples
of 32767. The message was of MOAN severity and could cause command
procedures and macros to terminate. The message was only of importance
on displays supporting segments (Sigmex or Tektronix series), and indeed
only if ENABLE SEGMENTS was in use. The message is no longer produced on
displays for which it is not relevant, and a LEARNER message has been
added to explain its implications.
.LE; New logical name LSL$LSR__PLOT__MODE controls the 'chunks' in which
LSR files are drawn when plotting. This is particularly intended for
producing optimal PostScript output for different PostScript RIPs.
The values are:
.LIST '*'
.LE; 0 or undefined - do as before. Plot using the tiles in the file if
plotting at a 1 to 1 pixel scale, otherwise plot in swathes the full
width of the image and with a height limited by the available graphics
buffer memory (controlled by logical name LSL$FILL__POINTSMAX).
.LE; 1 - always plot in swathes (as for 0) even if at 1 to 1 scale.
This avoids the problem with using tiles that some RIPs could not cope
with a large number of tiles.
.LE; 2 - plot in (nearly) square chunks as large as possible. Avoids
potential problem with RIPs which want to rasterise the image with
scan lines in a direction perpendicular to the swathes.
.LE; _>100 - plot in squares of the specified size (if possible).
.END LIST 0
A new diagnostic message (produced if ENABLE DIAGNOSTICS) gives the
details of the chunks being used when the image is drawn.
.LE; New command UNITS FACTOR allows user specified units (rather than
just IFF or MM as before) to be applied to the next command accepting
a length. After a UNITS FACTOR command, EXAMINE LINE, LENGTH, and
DISTANCE will additionally display the scaled value.
.LE; New commands FORCE LINE and FORCE DISTANCE (used while constructing)
constrain the cursor onto a circle fixing the length of the current
segment (LINE), of the feature so far (DISTANCE). These may be combined
with FORCE ANGLE or FORCE BEARING to completely constrain the position of
the next point. While constrained, the use of FIND will only find
features at intersections with the constraint. The command FORCE LENGTH,
which was never implemented, has been withdrawn.
.LE; Take advantage of new facilities in FRTLIB and GKSMOTIFLIB, allowing
the REGION command, when applied to a text feature, to produce the
correct region for a PostScript hardware text. Previously, the TRI
file was still used to calculate the region.
.LE; New facilities are included to allow LITES2 to be used for update of
vector mapping, using scanned aerial photography as a backdrop.  In particular
a new WARP command is provided to control local warping of images to fit the
vector data.  Refer to the LITES2 Help facility for more information on these
new commands and variables.
.LIST '*'
.LE; WARP CLEAR - Delete all warp points.
.LE; WARP DELETE n - Deletes a warp point.
.LE; WARP FIT - Calculate a fit to the current set of warp points.
.LE; WARP IMAGE - Warp the raster image to fit the vector data.
.LE; WARP MAP - Warp the vector data to fit the raster image (default).
.LE; WARP OFF - Turn off warping.
.LE; WARP ON - Turn on warping.
.LE; WARP POINT IMAGE x  y - Specify a data point for fitting a warp.
.LE; WARP POINT MAP x  y - Specify a data point for fitting a warp.
.LE; WARP REPLACE IMAGE n x y - Replace a previously specified warp data point.
.LE; WARP REPLACE MAP n x y - Replace a previously specified warp data point.
.LE; WARP TRANSFORM t - Specifies the type of warp transformation to be used,
where t = AFFINE, EXTENDED, LINEAR, ORTHOGONAL, or PROJECTIVE.
.LE; SHOW WARP - show details of the warp transformations.
.END LIST 0
.P 0; The following restrictions apply to transformation of images using
the WARP command.
.LIST '*'
.LE; Only one image file may be transformed. If several are open,
then the one with the lowest number in the lowest numbered overlay
will be transformed, and the other will not be drawn at all.
.LE; Only LSR and DTI format files may be transformed (not LSI).
.LE; The `PROJECTIVE' transformation may not be used with DTI files
(this is in the interests of efficiency).
.LE; Images may not be transformed while plotting.
.END LIST 0
.BL
These restrictions may be lifted in future releases of LITES2.
.P 0
A side effect of transforming an image using the WARP command is
that it may be drawn at an arbitrary scale, rather than having
to use integral multiples of the pixel size. If desired, this
effect can be utilised by setting up a null warp - the easiest
may to do this is to use WARP TRANSFORM LINEAR and to specify two
identical points for the transformation.
.LE; New system variables are supplied to provide access to information about
the new image warping facilities.  These are:
.LITERAL
$WARP_COEFFS_IMAGE
$WARP_COEFFS_MAP
$WARP_DIRTY
$WARP_FITTED
$WARP_IMAGE_N
$WARP_IMAGE_Y
$WARP_MAP_N
$WARP_MAP_X
$WARP_MAP_Y
$WARP_MODE
$WARP_RESIDUAL_X
$WARP_RESIDUAL_Y
$WARP_RMS_X
$WARP_RMS_Y
$WARP_TRANSFORM
.END LITERAL
.LE
New commands SELECT_/DESELECT PRIORITY (or PRIORITIES) enable only the
selected priority layers to be drawn when using ENABLE SORT and
SORT PRIORITY together with PRIO entries in the FRT file. Only
drawing is affected (not FINDing). SELECT ALL PRIORITIES restores
the default of drawing all priority layers (as does SELECT ALL).
The system variable $HADSELECT now includes priority selections,
and new system variable $HADSELECT__PRIORITY show if any priority
selections are in force.
.LE
The FRT system now allows line, curve, or area feature codes to be
used as part of the prioritised representation of symbol and text
features. LITES2 interprets these by constructing the boundary of
the symbol or text, and then drawing it using the specified line,
curve, or area code. The SIZE entry in the FRT for the line, curve,
or area is interpreted as the amount (in sheet mm) by which
to expand the boundary. If SIZE is negative, it is instead interpreted
as a fraction of the height of the symbol or text. Note that SIZE
normally means offset for a line, or hatch spacing for a hatched area -
it does not perform these functions when used as part of a text_/symbol
representation. The text_/symbol boundary may be either simple (a
bounding rectangle), or complex (something better fitting the actual
shape). A complex boundary is chosen by setting bit 15 (value 32768, or
_^X8000) or the FRT FLAGS entry for the line, curve, or area. The complex
boundary for a text is the same as the region around a text constructed
by the REGION command.
.LE
Version has been incremented to be LITES2 X4.4C. The executable file for
this special release is called LITES2MOTIF.EXE
.END LIST 0

.PAGE
.HL 1 ^*PROBLEMS FIXED IN THIS RELEASE\*
This release corrects the following problems that have been found to exist
in LITES2 Version 4.3 :-
.LIST
.DISPLAY ELEMENTS '(',LL')'
.LE; SPR 2720. The EXAMINE ATTRIBUTES command now includes a final 'S'.
The documentation and help always included an 'S', but the actual command
didn't. EXAMINE ATTRIBUTE remains a valid abbreviation.
.LE; SPR 2721. Point attributes, including Z, are now stored correctly when
long features are digitised. In releases up to V4.2, the attributes were
correct up to 180 points, but points 181-200, 361-380 etc. were given the
same attributes as points 1-20. Version V4.3 increased the size of buffers
for highlighting from 200 to 1000 points, which would have caused the
problem to appear for points 981-1000 etc. instead, but constructions as
long as this with Z enabled caused another problem.
.LE; New LITES2GEOMSHR.EXE returns a null geometry if an error occurs,
rather than producing obscure error codes.
.LE; SPR 2725. When using Display PostScript in LITES2MOTIF, ensure that
text and linework are drawn in the correct order. Previously, buffering
in the Display PostScript pipeline could cause text to be drawn after
(and hence on top of) linework which is should have preceded. At the same
time, avoid periodic flushing of the Display PostScript pipeline if
no PostScript has been output - this should give a slight performance
improvement.
.LE; Ensure that Display PostScript text is drawn into the correct
overlay. Previously it could be drawn into all overlays, which for
example could 'burn' holes in an underlying raster, visible if the
text overlay was concealed.
.LE; Ensure that Display PostScript text uses the correct colour
from the colour table. Previously, it could sometimes use a colour
made up by 'dithering' between two adjacent colours.
.LE; SPR 2825. Avoid a potential 'collapse' if ENABLE ENCLOSING was used,
and area features were subsequently changed into lines with CHANGE FC, or
by reading a new FRT.
.LE; SPR 2880. Offset lines (non-zero SIZE entry
in the FRT for a line) were not drawn correctly for features with
a single point in an IFF CB or ST entry. This would usually mean
for example a feature with 201 points (since 200 points are
traditionally stored in each entry), but the effect could also
be produced by using EDIT VISIBILITY to make the end segment of
a line invisible, and then visible again.
.LE; Changes in the FRT library mean that patterned lines are now output
using multi-point line segments rather than 2-point ones. When data
points were close together, and a thick line was used, the 2-point lines
could produce a poor effect at the joins on some displays.
.END LIST 0

.PAGE
.HL 1 ^*CHANGES TO ANCILLARY PROGRAMS FOR THIS RELEASE\*
This release includes the following changes to ancillary programs
included  with LITES2 Version X4.4:
.LIST
.DISPLAY ELEMENTS '(',LL')'
.LE; LCMSQUASH - version of 3-June-1994. New qualifiers /CODE=integer and
/KEY=string allow the encryption of LCM files. The code is an integer allocated
to developers by Laser-Scan, while the key is a character string chosen by the
developer and communicated to Laser-Scan. The encrypted LCM files can only
be decoded by LITES2 users who have a special licence. The /COMMENT qualifier
allows a comment to be added the the first line of the output LCM files
(whether encrypted or not).
.LE; UILMENUSINI.COM - version of 17-Oct-1994. Set up symbols for UILMENUS and
UILGEN correctly when on an Alpha AXP system.
.END LIST 0
