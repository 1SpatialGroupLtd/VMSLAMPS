.SUBTITLE FORMAT DESCRIPTION
.PAGE
.TP 10
.P 0
^*--------------------------------------------------------------------------------\*
.HL 1 ^^^*FORMAT DESCRIPTION\*

.LM +10

.TP 10
.P 0
^*----------------------------------------------------------------------\*
.HL 2 ^^^*Introduction\*

.P 0
IFF2SIF provides a translation from Laser-Scan's Internal Feature Format (IFF)
to a subset of Intergraph's Standard Interchange Format (SIF). For a brief
comparison of the way IFF and SIF regard data, see the section on DATA
PREPARATION - IFF2SIF below.

.P 0
SIF2IFF provides the reverse translation.

.P 0
IFF2SIF produces the ASCII text format, version 8_.8_.2, as described in the
document ^*Standard Interchange Format (SIF) Command Language Implementation
Guide (8.8.2)\* of 12-May-1985 (Intergraph document DIXD4110). 

.P 0
If the /SCITEX qualifier of IFF2SIF is given, the format produced is the
SCITEX version of SIF.

.P 0
SIF2IFF receives the ASCII text format, version 8_.8_.2 and earlier.

.TP 10
.P 0
^*----------------------------------------------------------------------\*
.HL 2 ^^^*Magnetic tape input/output\*

.P 0
IFF2SIF writes to magnetic tape in standard SIF ASCII format.
The output is at either 800 or 1600 bpi, in blocks of 1024 bytes. The record 
size defaults to 72 bytes, but may be specified at any size between 40 and 80 
bytes (inclusive). Records are padded with spaces if necessary.

.P 0
There are no header blocks, and the last block of each file is padded with 
spaces. Each file is separated from the previous by a tapemark, and there are 
two tapemarks after the last file. Files on the tape are synonymous with the
original IFF files output.

.P 0
SIF2IFF can read standard SIF ASCII format from tape. For users from
CCG (Canadian Centre for Geomatics) SIF2IFF will read and ignore
a CELL file preceding the SIF file if the /CELL qualifier given.

.TP 10
.P 0
^*----------------------------------------------------------------------\*
.HL 2 ^^^*Disk file output\*

.P 0
IFF2SIF output may also be made to disk file. Again, the record length defaults to 72 
bytes, but may be changed to anywhere between 40 and 80 bytes (one character
per byte). Records are filled with spaces if necessary. 

.P 0
Each disk file contains the output from one IFF file.

.P 0
These files may then be output to magnetic tape using either of the VAX
programs BACKUP or EXCHANGE - the former is intended for transfer between
VAXes, and the latter provides an ANSI standard tape format (it replaces the
RSX utility FLX on VAXes with VMS version 4.0 and up). Consult the relevant
Digital manuals for more details of these utilities. 

.P 0
SIF2IFF can read standard SIF ASCII format from disk as well as tape,
and writes the IFF file to disk.

.PAGE


.TP 10
.P 0
^*----------------------------------------------------------------------\*
.HL 2 ^^^*The SIF subset supported - IFF2SIF\*

.P 0
The data is output using only a subset of SIF commands. This section describes 
what may be expected in the output.


.TP 10
.BLANK
.HL 3 ^^^*Summary of commands output\*

.P 0
The following SIF commands are output:

.lm -5
.LITERAL

DID/NA=name,DA=date,MO=mode,
    RA=xmin,xmax,ymin,ymax,ident       	drawing identification
OVR/level                               specify overlay/level
ACZ/LO=height,HI=height                 specify height value (Z)
LAC/LS=style                            specify line style
LAC/LT=weight                           specify line weight
LAC/LC=colour                           specify line colour
FNT/font                                specify text font
TLC/CO=length,JU=just                   specify text length & justification
BST/OP                                  begin complex string
EST/                                    end complex string
LST/OP,x1,y1,x2,y2,.._.                 line string - open
LST/SO,x1,y1,x2,y2,.._.                 line string - solid (closed)
LST/HO,x1,y1,x2,y2,.._.                 line string - hole  (closed)
CIR/CE=x,y,P1=x1,y1,P2=x2,y2            circle
ARC/CC,CE=x,y,P1=x1,y1,P2=x2,y2         arc, counterclockwise
ARC/CL,CE=x,y,P1=x1,y1,P2=x2,y2         arc, clockwise
ARC/P1=x1,y1,P2=x2,y2,P3=x3,y3          arc, circumcircle
MTX/AN=rot,XS=xscale,YS=yscale          symbol cell transformation matrix
SYM/OR=xo,yo,CELLNAME                   symbol cell
CUR/x1,y1,x2,y2,...                     curved line (draw time interpolation)
TX3/OR=x,y,AN=rot,TH=ht,TW=wd           text line range block - 2d
TXT/text                                text line - 2d
TXT/OR=x,y,TH=ht,TW=wd,MA=matrix,text   text line - 3d
IDE/AS=assoc,CO=class,ID=ident,KE=key
ASV/DE=delim,ID=pent,KE=pocc,values
.END LITERAL
.lm +5

.P 0
The following variations of SIF commands apply when the /SCITEX qualifer of
IFF2SIF is specified:

.lm -5
.LITERAL

DID/NA=name,DA=date,MO=mode,
    RA=xmin,xmax,ymin,ymax,DU=munit,
    sunit,runit,munitid,sunitid,ident   drawing identification
TXT/BL=x1,y1,BR=x2,y2,TL=x3,y3,
    MA=matrix,text                      text line - 3d
SYM/OR=xo,yo,MA=matrix,CELLNAME         symbol cell
.END LITERAL
.lm +5

.P 0
The following SIF commands are omitted when the /SCITEX qualifer of
IFF2SIF is specified:

.lm -5
.LITERAL

MTX
TX3
LAC/LC
IDE
ASV
.END LITERAL
.lm +5

.P 0
For lines and curves, continuation lines (flagged by 4 spaces at the beginning 
of the line) are also output.

.PAGE

.TP 10
.P 0
^*----------------------------------------------------------------------\*
.HL 2 ^^^*The SIF subset supported - SIF2IFF\*

.P 0
Not all of the SIF command set is applicable to the IFF format so
SIF2IFF translates the following subset:-

.BLANK
.NOFILL
DID###LAC###LST###SYM###TXT###FNT###IDE###CIR###ARC###CUR###OVR
.BLANK
EST###PTN###TPC###PAR###PLN###CLP###TX3###ACZ###MTX###PA3###
.FILL

.PAGE

.TP 10
.P 0
^*----------------------------------------------------------------------\*
.HL 2 ^^^*Details of IFF2SIF command output\*


.TP 10
.BLANK
.HL 3 ^^^*File Characteristics\*

.LM +10
.P -8; Coordinate Format

.P 0
Coordinate data is output in Units of Resolution (UORs). The size of one UOR 
is specified by the customer, preferably in metres on the ground.

.P 0
All coordinates are output in unsigned 32 bit format - that is they fall
within the range 0 to 4294967295. Coordinates are output in the minimum width
possible. 

.P -8; Characters per record

.P 0
By default, 72 characters are output per record. If requested, record sizes of
40 to 80 characters may be produced. The record size may not change within a
single tape. 

.P 0
Records are padded with trailing spaces if necessary.

.P -8; Graphic Mode

.P 0
The files produced may be 2-d or 3-d files. The graphic mode used is stated
in the DID command within the SIF file.

.P -8; Spaces in the file

.P 0
Spaces are not output between fields in commands, and are thus only present
as

.LIST
.LE; part of an ASCII string (text line or symbol cell name)
.LE; padding of a record or block
.LE; continuation characters at the beginning of a line
.END LIST

.TP 7
.P -8; Non-repetition of commands

.P 0
The OVR, ACZ and LAC commands (which set active characteristics) are only
output when necessary to change a characteristic. Thus if a series of elements
are in level 3, the OVR/3 command will be output before the first element,
and not repeated before the rest.

.LM -10


.TP 10
.BLANK
.HL 3 ^^^*Details of output\*

.P 0
This section describes the commands output in more detail

.LM +10
.TP 10
.P -6
Continuation lines

.P 0
These are used for coordinate output (eg in LST), and may also be used to 
continue a command when the record length is such that the command must be 
split over several records.

.P 0
Continuation lines are signalled by 4 spaces at the beginning of the record,
followed by the continuing data. The following sequences are never split over 
record boundaries:

.LIST

.LE; _<SIF command_>#/#_<2 character data keyword_>

.LE; _<2 character data keyword_>#=#_<single data value_>

.LE; _<2 character data keyword_>#=#_<coordinate pair/triple_>

.END LIST

.P 0
Also, a field separation comma is never output at the start of a continuation
record.

.P 0
If a text string must be continued, then the text string is always split such 
that the split occurs after a non-space character. If the split would occur at 
a space character, then the text is split at the previous character.

.TP 10
.P -6; MTX - Generate symbol cell transformation matrix

.P 0
No mirroring is provided, and scaling is always the same in X and Y. The
command is thus always output as 

.P 10
^*MTX/AN=rot,XS=scale,scale\*

.P 0
where ^*rot\* is the angle of alignment in degrees, and ^*scale\* is the scale
factor for the symbol cell - this defaults to 1.0. These are all output as
positive floating point numbers.

.P 0
If the /SCITEX qualifier of IFF2SIF is specified, the MTX command is 
omitted from the output file.

.TP 10
.P -6; TX3 - Generate text line range block

.P 0
The command is output as 

.P 10
^*TX3/OR=xo,yo,AN=rot,TH=height,TW=width\*

.P 0
where ^*xo,yo\* is the origin of the text (its position) in UORs, ^*rot\* is
the angle at which the text is placed in degrees, and is a positive floating
point number, and ^*height\* and ^*width\* are the values (in UORs) defined
for the relevant font.

.P 0
If the /SCITEX qualifier of IFF2SIF is specified, the TX3 command is omitted 
from the output file.

.P 0
This command is not used in 3-d files.

.TP 10
.P -6; OVR - Define the active level

.P 0
The command is output as

.P 10
^*OVR/level\*

.P 0
where ^*level\* is an integer between 1 and 63. Level 63 is used as the error 
level for certain types of IFF2SIF error - unless otherwise stated, data on 
this level was probably improperly coded.

.TP 10
.P -6; ACZ - Define the active Z value

.P 0
The command is output as

.P 10
^*ACZ/LO=height,HI=height\*

.P 0
where ^*height\* is the Z value for all following coordinates. The command

.P 10
^*ACZ/\*

.P 0
is used to unset the active Z level, when elements follow which do not have
a defined Z value.

.P 0
This command is not used in 3-d files.

.TP 10
.P -6; LAC - Define the active line/area characteristics

.P 0
The following commands are used

.P 10
^*LAC/LS=style\*
.I 10
^*LAC/LT=weight\*
.I 10
^*LAC/LC=colour\*

.P 0
where ^*style\* is the line style, range 0 to 7, ^*weight\* is the line weight,
range 0 to 31, and ^*colour\* is the line colour (or other coding), range 0 to 
255. All of these arguments are integers.

.P 0
If the /SCITEX qualifier of IFF2SIF is specified, the LAC/LC command is
omitted from the output file.

.TP 10
.P -6; FNT - Define the active text font

.P 0
The command is output as

.P 10
^*FNT/font\*

.P 0
where ^*font\* is an integer between 0 and 126.

.TP 10
.P -6; TLC - Define text line characteristics

.P 0
The command is output as

.P 10
^*TLC/CO=length,JU=just\*

.P 0
where ^*length\* is the number of characters in the text line, between 1 and
255 (although the maximum is likely to be 80), and ^*just\* is the text line
justification, between 1 and 9, conventions as specified in the Intergraph SIF
documentation. Both arguments are integers. 

.TP 10
.P -6; LST - Generate line string

.P 0
The commands supported are

.P 10
^*LST/OP,x1,y1,x2,y2,.....,xm,ym\*
.I 10
^*LST/SO,x1,y1,x2,y2,.....,xm,ym\*
.I 10
^*LST/HO,x1,y1,x2,y2,.....,xm,ym\*

.P 0
where ^*x1,y1\*, etc, are the coordinates in UORs (as integers - see
"Coordinate Format" above). Any of these commands may be continued by
continuation lines - for instance 

.P 10
^*LST/OP,x1,y1,x2,y2,.....,xm,ym,\*
.I 10
^*####xn,yn,xo,yo,xp,yp,...\*

.P 0
A single line string command will never contain more than 101 points.
Line strings of length greater than 101 points are output as separate LST
commands within a complex string - see the BST command.

.P 0
For 3-dimensional data, each ^*xi,yi\* becomes ^*xi,yi,zi\*

.TP 10
.P -6; CIR - Generate circle

.P 0
This command is output as

.P 10
^*CIR/OR=xc,yc,P1=x1,y1,P2=x2,y2\*

.P 0
where ^*xc,yc\* is the origin of the circle in UORs, and ^*x1,y1\* and
^*x2,y2\* are the coordinates of two points on the circumference of the
circle.

.P 0
For 3-dimensional data, each ^*xi,yi\* becomes ^*xi,yi,zi\*

.TP 10
.P -6; ARC - Generate arc

.P 0
This command may be output in one of three possible forms

.P 10
^*ARC/CC,CE=xc,yc,P1=x1,y1,P2=x2,y2\*
.I 10
^*ARC/CL,CE=xc,yc,P1=x1,y1,P2=x2,y2\*
.I 10
^*ARC/P1=x1,y1,P2=x2,y2,P3=x3,y3\*

.P 0
where the first is a counterclockwise arc, the second a clockwise arc, and
the third a circumcircle arc.

.P 0
For the first two forms, ^*xc,yc\* is the centre of the arc, ^*x1,y1\* the
point defining its start, and ^*x2,y2\* that defining its end. For the third
form, ^*x1,y1\* is the point defining the start of the arc, ^*x3,y3\* the
point defining its end, and ^*x2,y2\* a point on the arc between these two.
All of these coordinates are output in UORs. 

.P 0
For 3-dimensional data, each ^*xi,yi\* becomes ^*xi,yi,zi\*

.TP 10
.P -6; SYM - Generate symbol cell

.P 0
This command is output as

.P 10
^*MTX/AN=rot,XS=1.0,1.0\*
.I 10
^*SYM/OR=xo,yo,CELLNAME\*

.P 0
where the MTX command is described above, ^*xo,yo\* is the symbol origin, and
^*CELLNAME\* is the name of the required symbol cell.

.P 0
For 3-dimensional data, ^*xo,yo\* becomes ^*xo,yo,zo\*

.P 0
Alternatively if the /SCITEX qualifier is specified this command is
output as

.P 10
^*SYM/OR=xo,yo,MA=matrix,CELLNAME\*

.P 0
where ^*xo,yo\* is the symbol origin, ^*matrix\* is the transformation matrix
and ^*CELLNAME\* is the name of the required symbol cell.

.P 0
SCITEX does not support 3D symbols.

.TP 10
.P -6; CUR - Generate curve

.P 0
If used, this command is output as

.P 10
^*CUR/x1,y1,x2,y3,...,xm,ym\*

.P 0
where ^*x1,y1\*, etc, are the master points defining the curve. Continuation
lines may be used as for the LST command, and curves of greater than 101
points are treated as complex strings in the same way as for the LST command.

.P 0
For 3-dimensional data, each ^*xi,yi\* becomes ^*xi,yi,zi\*

.P 0
Note that in general, all curves will be output as line strings using LST. 
Laser-Scan can produce curve strings using master points, but normally 
interpolate the curve at digitise time. This ensures that an acceptable curve 
is produced, and is visible on check plots, regardless of the interpolation
being used. 

.TP 10
.P -6; TXT - Generate text line

.P 0
This command is output as either

.P 10
^*TX3/OR=xo,yo,AN=rot,TH=height,TW=width\*
.I 10
^*TXT/text\*

.P 0
for 2 dimensional data, or as

.P 10
^*TXT/OR=xo,yo,zo,TH=height,TW=width,\*
.I 10
^*####MA=matrix,\*
.I 10
^*####text\*

.P 0
for 3 dimensional data. ^*xo,yo\* and ^*xo,yo,zo\* are the origin of the text
(its position) in UORs, ^*height\* and ^*width\* are the values (in UORs)
defined for the relevant font, ^*matrix\* is a rotation matrix defining the
orientation of the text, and ^*text\* is the text line required. 

.P 0
Alternatively if the /SCITEX qualifier is specified this command is
output as

.P 10
^*TXT/BL=x1,y1,BR=x2,y2,TL=x3,y3,MA=matrix,text\*

.P 0
where ^*x1,y1\* is the bottom left coord of the text, ^*x2,y2\* is
the bottom right and ^*x3,y3\* is the top left, ^*matrix\* is a rotation
matrix.

.P 0
SCITEX does not support 3D text.

.TP 10
.P -6; BST - Begin complex string

.P 0
The forms of this command supported are

.P 10
^*BST/OP\*
.I 10
^*BST/SO\*
.I 10
^*BST/HO\*

.P 0
which start a complex string, shape and hole respectively. The BST command
is followed by a sequence of LST/OP or CUR commands, terminated by an EST
command. The subsidiary linear commands are explicitly connected - that
is, the last point of one is repeated as the first point of the next.

.TP 10
.P -6; EST - End complex string

.P 0
This command is output as

.P 10
^*EST/\*

.P 0
and ends a complex string sequence. Every BST command will be matched by
an EST command.

.TP 10
.P -6; DID - Drawing identification

.P 0
This command is output as

.P 10
^*DID/NA=name,DA=date,MO=dim,RA=xmin,xmax,ymin,ymax,ident\*

.P 0
where ^*name\* is the file name (in 1 to 12 characters) - this is the filename 
used for the original IFF file, uppercased, with any non-alphanumeric 
characters removed, and truncated to 12 characters.
^*date\* is the current date, in the format

.P 10
^*ddMMMyy\*

.P 0
for instance being 18FEB85 for the 18th of February, 1985. ^*dim\* is the
dimensionality of the data in the file - either 2 or 3. 
^*xmin,xmax,ymin,ymax\* specifies the coord range of the file.
^*ident\* is an identification string, which is currently always the text 

.P 5
^*Produced#by#Laser_-Scan#Ltd._,#Cambridge_,#England\*

.P 0
Alternatively if the /SCITEX qualifier is specified this command is
output as

.P 10
^*DID/NA=name,DA=date,MO=dim,RA=xmin,xmax,ymin,ymax,\*
.I 10
^*####DU=munit,sunit,runit,munitid,sunitid,\*
.I 10
^*####ident\*

.P 0
where ^*munit\* is the number of master units, ^*sunit\* is the subunits
per master unit, ^*runit\* is unit of resolution, ^*munitid\*
is the type of master units and ^*sunitid\* is the type of sub units.

.P 0
For SCITEX ^*munit\* and ^*sunit\* are always set to 1, and ^*munitid\*
and ^*sunitid\* are set to M (metres) and MM (millimetres)
respectively.

.TP 10
.P -6; IDE - Identifier

.P 0
This command is output as

.P 10
^*IDE/AS=assoc,CO=class,ID=ident,KE=key\*

.P 0
where ^*assoc\* is the association type (always 1 in this version to
signal new IGDS database entry).
^*class\* is the linkage family class (always 0 for this version).
^*ident\* is the identification number (always the current FSN).
^*key\* is the occurrence number (always 0 in this version).

.P 0
If the /SCITEX qualifier of IFF2SIF is specified, the IDE command is 
omitted from the output file.

.TP 10
.P -6; ASV - Associative  Values

.P 0
This command is output as

.P 10
^*ASV/DE=delim,ID=pent,KE=pocc,values\*

.P 0
where ^*delim\* is the delimiter character.
^*pent\* is the parent entity number (always the current FSN).
^*pocc\* is the parent occurrence number (always 0 for this version).
^*values\* is the values field which contains attribute names and
either values or text separated by the delimiter character.

.P 0
If the /SCITEX qualifier of IFF2SIF is specified, the ASV command is 
omitted from the output file.

.LM -10

.TP 10
.P 0
^*----------------------------------------------------------------------\*
.HL 2 ^^^*Typical IFF2SIF output clusters\*

.P 0
The following clusters of records should be typical of those output to the SIF 
file:

.LIST "*"

.TP 10
.LE; For a text line
.LM +10
.LITERAL
OVR/level
FNT/font
LAC/LS=style
LAC/LT=weight
LAC/LC=colour
TLC/CO=length,JU=just
TX3/OR=x,y,AN=rot,TH=height,TW=width
TXT/text
.END LITERAL
.LM -10

.TP 8
.LE; For a symbol cell
.LM +10
.LITERAL
OVR/level
LAC/LS=style
LAC/LT=weight
LAC/LC=colour
MTX/AN=rot,XS=xscale,YS=yscale
SYM/OR=xo,yo,CELLNAME
.END LITERAL
.LM -10

.TP 8
.LE; For an open line string
.LM +10
.LITERAL
OVR/level
LAC/LS=style
LAC/LT=weight
LAC/LC=colour
LST/OP,x1,y1,x2,y2,....,xm,ym,
    xn,yn,xo,yo,....xz,yz
.END LITERAL
.LM -10

.TP 8
.LE; For a contour of length greater than 101 points
.LM +10
.LITERAL
OVR/level
ACZ/LO=height,HI=height
LAC/LS=style
LAC/LT=weight
LAC/LC=colour
BST/OP
LST/OP,x1,y1,x2,y2,....,xm,ym,
    xn,yn,xo,yo,....xz,yz
LST/OP,x1a,y1a,x2a,y2a,....,xma,yma,
    xna,yna,xoa,yoa,....xza,yza
EST/
.END LITERAL
.LM -10

.END LIST

.LM -10
