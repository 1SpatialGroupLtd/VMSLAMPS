.!** set up Qume page format
.LEFT MARGIN  0
.RIGHT MARGIN 80
.PAGE SIZE    60,80
.FLAGS BOLD
.SUBTITLE DATA PREPARATION
.PAGE
.TP 10
.P 0
^*--------------------------------------------------------------------------------\*
.HL 1 ^^^*DATA PREPARATION\*

.LM +10

.TP 10
.P 0
^*----------------------------------------------------------------------\*
.HL 2 ^^^*Comparison of MOSS and IFF\*

.P 0
IFF is a feature oriented data format - data is separated into features, and 
each feature represents one 'thing' on the map. An integer feature code is used
to say what type of thing it is that the feature represents. A feature might
thus be a contour, or a house, or a river, depending on the type of map
being digitised, and the way that the data is to be used.

.P 0
MOSS GENIO format shares this concept of a 'feature', and the simple form of
MOSS we produce is essentially a fixed format ASCII representation of an
IFF file on a feature by feature basis.

.P 0
The subset of MOSS GENIO format produced by I2MOSS does not contain any
facility for the transmission of IFF map level entries, layers, text, line
thickness or multiple attribute coding of IFF features. 

.P 0;I2MOSS is thus best suited for use with an IFF containing spot heights,
contour strings or 3 dimensional strings (held in IFF ZS entries). All spot
height (IFF one point ST entries) and contour features (2 dimensional IFF
strings held in ST entries) MUST have a height value held in an IFF AC entry.
By default this AC will be of type 3, which carries the height value as a
floating point number. Any ACs in IFF features which consist of 3d strings
(IFF ZS entries) will be ignored. I2MOSS cannot be used to generate MOSS GENIO
strings of greater than 3 dimensions. 


.TP 10
.P 0
^*----------------------------------------------------------------------\*
.HL 2 ^^^*Pre digitising preparation\*

.P 0
The customer should supply a list of the MOSS GENIO string labels to be 
associated with each feature type on the map, e.g. road casings, contours, 
culverts etc.

.P 0
For digitising within IFF, feature codes must be assigned to all of these
data-types, and an FRT file (together with SRI and TRI files) created.
Care should be taken in considering what graphical type the  IFF features 
should have. I2MOSS cannot, for example, perform the interpolation required by 
graphical type 6 (interpolated curve).

.P 0;The relationship between the IFF feature codes used during processing
within the LAMPS system and MOSS GENIO string labels should be defined in a
I2MOSS cross codes file, (see below).

.TP 10
.P 0
^*----------------------------------------------------------------------\*
.HL 2 ^^^*Three-dimensional and contour data\*

.TP 10
.BLANK
.HL 3 ^^^*Three-dimensional MOSS output\*

.P 0
IFF2MOSS is normally used to output contour data, but it can also output
MOSS data in three dimensional mode. The output data are three
dimensional coordinates - that is, an X,Y and Z value for each data point. 

.P 0;Features should be digitised into IFF ZS (3D string) entries if
MOSS 3D strings are required for output.


.TP 10
.P 0
^*----------------------------------------------------------------------\*
.HL 3 ^^^*Contour data\*

.P 0
If there is only a single height associated with each feature, (e.g.
contours), IFF2MOSS translates any height AC found in the IFF file into the
height field of the 080 string header record. 

.P 0;Contours should be digitised into IFF ST (2D string) entries.

.P 0
^*----------------------------------------------------------------------\*
.HL 3 ^^^*Heights in IFF files used for MOSS formatting\*
.P 0
Every IFF feature being output ^*MUST\* contain explicit height data. If the
feature contains ZS entries, then these will be used directly. If the feature
contains ST entries, then a height must be supplied in a type 2 or 3 contour
height AC. If MOSS GENIO format is being used to output data which have no
attached height information then it should be agreed with the customer what
value is to be written into the height field of the '080' string header
record. Even if no height informtion is required an AC (Ancillary Code)
must be present in all IFF features. This AC by default will cause the 
transmission of the height 0.0 to the MOSS GENIO file.

.TP 10
.P 0
^*----------------------------------------------------------------------\*
.HL 2 ^^^*Offsetting data\*

.P 0
In some cases, the size of the map being digitised is small compared to the
coordinate values that are required as output - for instance, if data is output
in UTM coordinates (as metres on the ground), then the numbers being output
will be very large. In such cases, the actual data in the IFF file is
generally offset relative to the bottom left hand corner of the particular
sheet, to preserve accuracy. The offset removed from the data is carried in
a type 2 MD (Map Descriptor) in the IFF file.

.P 0
I2MOSS enables the user to specify the origin offset of the IFF data in the
origin offset field of a type 2 Map Descriptor.

.P 0
N.B. MOSS GENIO forbids negative coordinates if the MOSS string header
contains an origin offset. 

.LEFT MARGIN -10
.BLANK 2
.TEST PAGE 10
^*----------------------------------------------------------------------------
--\*
.HL 2 ^^^*The I2MOSS CROSS CODES file\*
.LEFT MARGIN +10
.P 0
A powerful feature of I2MOSS is the ability to carry into the MOSS GENIO file
the feature coding applied in the IFF file via a user definable lookup table
which associates each IFF feature code with a MOSS GENIO string label. The
lookup table file is specified to I2MOSS via the I2MOSS/CROSS__CODES qualifier.
The CROSS CODES lookup file is an ASCII text file containing IFF feature
code/MOSS GENIO string label pairs. The format of this file is best explained
using the annotated example set out below: 
.LEFT MARGIN -10
.TP 15;.LITERAL
!==============================================================================
! Example /CROSS__CODES file to cross tabulate IFF feature codes to 
! MOSS GENIO string labels. Note free format, two entities per record.
! The first entity is the IFF feature code, the second is the MOSS GENIO
! string label to be output in the MOSS string header for any features
! which had the associated IFF feature code 
!
! "!" is a comment delimiter, all text to the right of a "!" will be 
! ignored. A "!" must not appear between the IFF feature code and the
! MOSS string label. I2MOSS will report an error if this is found.
! 
!
! Either lower or upper case may be used (or a mixture of the two),
! I2MOSS will upper-case all text before output to the MOSS GENIO card
! images
!
!
!
! MOSS string labels are restricted to 4 characters and are usually of
! the form AA00, where AA are 2 alphabetic characters. You are free, of
! course, to use what-ever your local MOSS installation will stand, but
! bear in mind that I2MOSS will truncate your string to 4 characters.
!
!
 121 KI00	! an in-line comment!
 122 KI00
 124 KI00
 128 KI
 123 KI0
!
! very free format records (all valid)
!
 13  					RIVS
		123	ROAD
	800						case	! wow
5			Go


!
! blank lines may be used to separate records if you wish
!


987			cat

0		 dog

717	fish

!
! end
!

.END LITERAL

.BLANK 3
.TEST PAGE 10
^*----------------------------------------------------------------------------
--\*
.HL 2 ^^^*Digitising data for transfer to MOSS GENIO format\*
.LEFT MARGIN +10
.P 0;Features which are to receive different MOSS GENIO string 
label should be similarly differentiated by IFF feature code. If desired, data 
may be differentiated by feature code in the IFF file but can be given the 
same MOSS string label after lookup in the /CROSS__CODES file. The example
/CROSS__CODES file (above) shows that the different IFF feature codes 121, 122,
and 124 all become KI00 on output to MOSS format. It is thus possible to 
separate data for check plotting purposes while in IFF format which are 
required combined when translated to MOSS format.


.P 0;IFF layer 0 is reserved for registration mark features and should not be
used to contain any digitising. I2MOSS will ignore the contents of IFF layer
0. 

.P 0;All contour features should contain an AC (Ancillary Code) to carry the 
contour height. By default I2MOSS expects to find a type 3 AC in each feature.
The user may specify alternative AC types used to carry height information
on the I2MOSS command line at run time. Any features which lack a type 3
AC or an AC of the specified type will not be transferred to MOSS GENIO 
format.

.P 0;No height AC is required in 3D IFF features containing ZS entries.

.P 0;Care should be taken that the digitised coordinates will fit into
the MOSS GENIO record format of F10.3. If they do not then output conversion 
error will ocurr. To overcome this problem, ITRANS should be used to
subtract an offset from the IFF coordinates. This offset is placed in the
origin offset field of a type 2 MD (Map Descriptor). The offset to be removed 
should be chosen carefully so as to ensure that none of the string coordinates
becomes negative.
.LEFT MARGIN -10
