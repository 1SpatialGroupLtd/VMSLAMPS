.!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
.!! Those items which should be checked when changing the programs due to new
.!! versions of NTF are flagged with the comment
.!!
.!!		.!! NTF version
.!!
.!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
.SUBTITLE FORMAT DESCRIPTION
.PAGE
.TP 10
.P 0
^*--------------------------------------------------------------------------------\*
.HL 1 ^^^*FORMAT DESCRIPTION\*

.LM +10

.TP 10
.P 0
^*----------------------------------------------------------------------\*
.HL 2 ^^^*Introduction\*

.p0; The National Transfer Format (NTF) is the UK standard format for
transferring spatially referenced data. Further information about the format
may be obtained by contacting

.lm +15
.p0;The NTF Secretariat
.br;c/o Research _& Deveopment
.br;Ordnance Survey
.br;Romsey Road
.br;Maybush
.br;Southampton SO9 4DH
.br;England
.lm -15

.!! NTF version
.note
The programs described in this chapter support version 1.1 of NTF up to and
including the modifications released in April 1989 and version 2.0 of NTF
(BS7567) with some restrictions.

For a copy of the British Standard document BS7567 contact
.end note

.lm +15
.p0;The Director
.br;Standard Technical
.br;BSI Standard
.br;Linford Wood
.br;Milton Keynes MK14 6LE
.br;England
.lm -15

.p0; NTF is a relatively simple format. The default transfer method is 9 track
magnetic tape at 1600bpi. The blocksize is fixed (at 2000 bytes), and each
block is regarded as a sequence of up to 80 character records. Each record 
starts
with a 2 character identifying field, and ends with a single character which
indicates whether it is continued. The data held in a record (and its
continuations) is determined by the identifying field at the start of the
record. All data is held as ASCII characters.

.p0; The data stored in NTF is divided into a hierarchical structure.
Everything being transferred is called a ^*Transfer Set\*, which is composed
of several ^*Volumes\* - one volume per magnetic tape. The software detailed
in the rest of this chapter does not support multivolume transfer sets - all of
the data must be on a single physical medimum. Each transfer set is also
divided into ^*Databases\* - in the NTF sense, this can mean true databases,
or may just be a convenient way of dividing the data in the transfer set.
Each database is then divided into a sequence of ^*Sections\*, and it is these
that correspond to the IFF files being transferred.

.p0; There are five ^*levels\* of NTF at version 1.1.
.lm +20
.p-10;level#0:##is used to transfer raster data
.p-10;level#1:##is used to transfer simple vector data, with limited attribute
representation (compare this to the Ordnance Survey (GB) format OSTF).
.p-10;level#2:##is used to transfer simple vector data, with an unlimited
number of attributes per feature.
.p-10;level#3:##is used to transfer topologically structured data - this may
be as simple as link _& node, or as complex as full object structuring.
.p-10;level#4:##is used to transfer vector data, but the producer of the data
may use a data dictionary to redefine the fields present in records, and even
to define new records.
.lm -20

.p0; At version 2.0 the ^*levels\* are as follows
.lm +20

.p-10;level#1:##is used to transfer simple vector data, with limited attribute
representation (compare this to the Ordnance Survey (GB) format OSTF).
.p-10;level#2:##is used to transfer simple vector data, with an unlimited
number of attributes per feature.
.p-10;level#3:##is used to transfer a limited level of topologically structured
data including complex features and a link _& node mechanism.
.p-10;level#4:##is used to transfer topologically structured data - this may
be as simple as link _& node, or as complex as full object structuring.
.p-10;level#5:##provides the ability to use a data dictionary to redefine the
fields present in records or to define new records and can be used to supply
raster data (eg Ordnance Survey's 50000 DTM data).
.lm -20

.p0; The following points should be noted concerning the current implementation
of the translation programs:

.list "o"

.!! NTF version
.!!!!!!!
.le; The programs are written to conform to version 1.1 of the NTF standard
and a subset of support for version 2.0 (BS7567).
.!!!!!!!

.le; Multivolume transfer sets are not supported when using I2NTF. When using
NTF2I to directly read from unformatted tape, the program will prompt the
user to mount the next continuation volume when the tape mark after the first
volume is detected. If seperate volumes are supplied on formatted media, the
individual files should be appended together into one large disk file.

.le; Only levels 1, 2 and 3 are supported.

.le; At the moment, three dimensional coordinate data may be output using
I2NTF, but may not be read using NTF2I. Per point attributes are not supported
in either direction.

.le; At level 1, the only attributes (values) recognised are orientation (OR)
and height (HT).

.le; At levels 2 and 3, full attribute transfer is possible in both directions.
 A file containing the destinations for attributes must be given together with 
an FRT defining the IFF AC's.

.le; The NTF version 1.1 specification has various predefined attributes which
need not be defined in the header of the NTF file, but this is not the case at
NTF version 2.0 where all attributes must be defined.

.le; At level 3, topologically structured data may be output using I2NTF, but 
will be read as unstructured data using NTF2I.

.le; Projection information for each IFF file will be written as comments to
the appropriate section in the NTF.

.end list 0
.lm -10






