.SUBTITLE DATA PREPARATION
.PAGE
.TP 10
.P 0
^*--------------------------------------------------------------------------------\*
.HL 1 ^^^*DATA PREPARATION\*

.LM +10

.TP 10
.P 0
^*----------------------------------------------------------------------\*
.HL 2 ^^^*Comparison of Informap and IFF\*

.P 0
IFF is a feature oriented data format - data is separated into features, and
each feature represents one 'thing' on the map. An integer feature code is used
to say what type of thing it is that the feature represents. A feature might
thus be a contour, or a house, or a river, depending on the type of map being
digitised, and the way that the data is to be used. IFF also allows features to
be grouped into separate layers, and can hold attribute information either on a
'per feature' basis, or on a 'per point' basis. 

.P 0
In contrast, Informap has no concept of a 'feature', the basic elements of
graphical data being line segments, points and circle arcs. It does, however,
have the capacity to hold a large amount of attribute data in an ordered manner.
This allows complex searches and enquiries to be performed on the data. Enough
information about the individual graphic elements can be held to enable them to
look the same on the screen as they would if taken from the equivalent IFF file.

.P 0
IFF is much more suited to the capture and editing of map data, whereas Informap
is better when it comes to the manipulation and use of that data. Despite the
differences in the way the data is held, transfer between Informap and IFF is
relatively easy with no loss of information. 

.TP 10
.P 0
^*----------------------------------------------------------------------\*
.HL 2 ^^^*Preparation for data to be transferred between Informap and IFF\*

.P 0
It is quite likely that IFF will be used as the digitising format and the data
subsequently transferred to an Informap database. On the other hand, data may be
transferred from an Informap database to IFF for complex editing operations, or
for other spatial processing functions such as structuring or polygon formation.
IFF may also be used as in intermediate format for converting data from an
external transfer format such as SIF or NTF to Informap, or vice versa. 

.P 0
Whatever the purpose for transferring data, the correlation between IFF feature
codes and Informap datatypes has to be defined. This definition should include
the datatype and linetype to be used for each feature code, the line weight,
style and colour to be used, the text fonts and sizes required and symbols to be
used. The definition should also include the relationship between IFF attributes
and Informap attributes, if these are to be preserved 

.P 0
The implementation of these specifications requires 
.LIST "o"
.LE; an Informap schema, defining each datatype, 
.LE; a parameter file for I2IMAP, the IFF to Informap translator, 
.LE; a parameter file for IMAP2I, the Informap to IFF translator, and
.LE; an FRT file (together with SRI and TRI files) 
.END LIST 

.P 0
The Informap schema is a mandatory requirement by both programs.

.P 0
The parameter files define the relationships between 
.BLANK
.LIST 
.DISPLAY ELEMENTS LL, ")"
.LE; IFF feature codes and Informap datatypes and linetypes, and
.LE; IFF AC entries and Informap attributes. 
.END LIST 

.P 0
There is not likely to be a one-to-one correspondence in the above
relationships. For this reason, the parameter files for each program will be
different. In particular, several IFF feature codes may map onto the same
datatype/linetype combination in Informap. This means that IFF data translated
into Informap and then back to IFF can finish up with a reduced set of feature
codes and attribute codes. 

.P 0
Sometimes, most often in the transfer of attributes, an FRT file (together with
SRI and TRI files) will have to be created. Feature codes must be assigned to
all of the corresponding Informap datatype/linetype combinations. Care should be
taken to ensure that the graphical type for the IFF features is compatible with
the corresponding Informap datatype. 

.P 0
IFF files prepared for transfer to Informap using I2IMAP should be revision
level 0, with coordinates held in ST entries. ZS entries are not supported. Text
features should have TH entries to hold the text height, and the text category
in the FS entry should be set. All features should have the text/symbol bit in
the FS entry set to the appropriate value to indicate the feature type. The map
data can be held in any layer in the IFF file. 

.P 0
When transferring data from Informap, IMAP2I will only produce ST entries unless
the output revision level has been set to 1 within the system. The attributes in
any facility datatypes will be ignored, unless the appropriate definitions are
present in the parameter file. Note that it is not possible to transfer Informap
attributes into IFF point attributes. Text features will contain TH entries
holding the text height. All features will have the text/symbol bit in the FS
entry set to the appropriate value to indicate the feature type. All data will
be output to layer 1 in the IFF file. 

.P 0
Note that in addition to the above it may also be necessary to supply
instructions on how to digitise or edit the various features. 


.PAGE
.TP 10
.P 0
^*----------------------------------------------------------------------\*
.HL 2 ^^^*The I2IMAP parameter file

.P 0
This file contains three tables :-

.BLANK
.LIST 
.DISPLAY ELEMENTS LL,")"
.LE; the feature description table,
.LE; the attribute description table, and
.LE; the translation error table.
.END LIST 

.P 0
The attribute description table and translation error table are both optional.

.P 0;
Each line of a particular table is prefixed with a command which identifies the
line as belonging to that table. The lines are free-format, so the order of
entries matters, but the actual position of entries on the line is not
important. 

.P 0
Any text starting with the "!" character is treated as a comment, and is
ignored. Comments can appear on the same lines as commands, or on separate
lines. Note that commands may be in upper or lower case. 

.BLANK
.HL 3 ^^^*The feature description table\*

.P 0
The feature description table describes the translations required to produce
Informap data from IFF data. Each line is prefixed with the FDT command which
tells the program how to translate a particular feature code into the
data-base. 

.P 0
A line has one of the following two forms :-

.P 5
^*FDT###fc###dtype###ltype###[pen]\*

.P 5
^*FDT###fc###dtype###ltype###[low###high###[cat]#]\*

.P 0
where the fields are :-

.LIST "-"
.LE;^*FDT####\*-#the command FDT. This states that this line is an entry in the
feature description table 

.LE;^*fc#####\*-#the feature code being described - a value in the range 0 to
32767 

.LE;^*dtype##\*-#the Informap data type, an integer matching the value required
from the schema. This should be in the range 1 to 128. 

.LE;^*ltype##\*-#the Informap line type, an integer in the range 1 to 128. 

.LE;^*pen####\*-#the pen number to be used for symbols, an integer from 1 to 8. 
This field is only present for symbol feature codes.

.LE;^*low####\*-#the lower limit of a range of point sizes or text heights for a
text feature. This field is only present for text feature codes. 

.LE;^*high###\*-#the upper limit of a range of point sizes or text heights for a
text feature. This field is only present for text feature codes. 

.LE;^*cat####\*-#a specified text category (which can be a font number) for a
text feature. This field is only present for text feature codes. 
.END LIST

.
.P 0
An example follows :-

.LM +5
.BLANK 2
.NOFILL
FDT####1####6####1			!#line###-#public building
!
FDT###27###14####2####2			!#symbol
FDT###28####2####1####0##999####3	!#text
FDT###29###15####6			!#line
.FILL
.BLANK 2
.LM -5

.P 0
Note that it is possible to have several entries in the table for a single text
feature code. Note also that if text features in the IFF file contain heights,
or if text categories are set, then height ranges must be supplied in the table.
These may be chosen to cover the full height range possible, e.g 1 to 24 (for
heights given as point sizes). 

.BLANK
.HL 3 ^^^*The attribute description table\*

.P 0
The attribute description table describes the translations required to produce
Informap attributes from IFF attributes. Each line is prefixed with the ADT
command which tells the program how to translate a particular attribute into the
data-base. 

.P 0
A line has one of the following two forms :-

.P 5
^*ADT#CODE###code###entry###field###NGname###[dtype]\*
.! ***** ^*ADT#CODE###code###entry###[field]###NGname###[dtype]\*

.P 5
^*ADT#NAME###name###entry###field###NGname###[dtype]\*
.! ***** ^*ADT#NAME###name###entry###[field]###NGname###[dtype]\*

.P 0
where the fields are :-


.LIST "-"
.LE;^*ADT####\*-#This command states that this line is an entry in the attribute
description table. 

.LE;^*CODE###\*-#this sub-command states that the attribute will be described by
its IFF attribute code. 

.LE;^*code###\*-#the IFF attribute code, an integer in the range 0 to 32767, 
as derived from the appropriate ACD entry in an FRT file.

.LE;^*NAME###\*-#this sub-command states that the attribute will be described by
its IFF attribute name. 

.LE;^*name###\*-#the IFF attribute name, as given by the appropriate ACD entry
in an FRT file. The names "STARTX", "STARTY", "ENDX" and "ENDY" are reserved for
transferring between secondary annotation points. 

.LE;^*entry##\*-#a command specifying which IFF entry the attribute is to be
taken from. The only valid command is 
.LIST " "
.LE; ^*AC\* which specifies that an AC entry is to be used
.END LIST

.LE;^*field##\*-#a sub-command to AC, specifiying which field the attribute is
to be taken from - valid commands are either 
.LIST " "
.LE; ^*VALUE\* which specifies that the AC value field is to be used, or
.LE; ^*TEXT#\* which specifies that the AC text# field is to be used
.END LIST 

.LE;^*NGname#\*-#the Informap non-graphic field name, a string which can be up
to 8 characters in length 

.LE;^*dtype##\*-#an optional Informap data type or range of data types. A range
should be specified as a series of integers and/or sub-ranges in ascending
order, separated by commas. A sub-range consists of two integers separated by a
hyphen. Any given data type must be in the range 1 to 128. 
.END LIST

.P 0
An example follows :-

.LM +5
.BLANK
.LITERAL
ADT CODE 6			AC TEXT		PARNAME		20
!
ADT NAME COUNTY_LEFT_OF_LINE	AC TEXT		COUNTYL		16
ADT NAME COUNTY_RIGHT_OF_LINE	AC TEXT		COUNTYR		16
.END LITERAL
.LM -5

.BLANK
.HL 3 ^^^*The translation error table\*

.P 0
The translation error table specifies default datatypes to be applied to feature
codes for which there is no defined translation in the FDT table. These
TRANS__ERR entries are entered in the parameter file following the FDT table.
Separate definitions are required for lines, symbols and text. They are
specified as follows: 

.list "-"
.LE;^*TRANS__ERR__TEXT######fc###dtype###ltype###[low###high###[cat]#]\*
.LE;^*TRANS__ERR__LINES#####fc###dtype###ltype\*
.LE;^*TRANS__ERR__SYMBOLS###fc###dtype###ltype###[pen]\*
.END LIST

.P 0
where the fields are the same as for the FDT table.

.PAGE
.TP 10
.P 0
^*----------------------------------------------------------------------\*
.HL 2 ^^^*The IMAP2I parameter file\*

.P 0
This file contains two tables :-

.BLANK
.LIST 
.DISPLAY ELEMENTS LL,")"
.LE; the datatype description table, and
.LE; the attribute description table
.END LIST 

.P 0
The attribute description table is optional.

.P 0
Each line of a particular table is prefixed with a command which identifies the
line as belonging to that table. The lines are free-format, so the order of
entries matters, but the actual position of entries on the line is not
important. Any text starting with the "!" character is regarded as a comment,
and is ignored. Comments can appear on the same lines as commands, or on
separate lines. Note that commands may be in upper or lower case. 

.BLANK
.HL 3 ^^^*The datatype description table\*

.P 0
The datatype description table describes the translations required to produce
IFF data from Informap data. Each line is prefixed with the DDT command which
tells the program how to translate a particular datatype and linetype into an
IFF feature code. 

.P 0
A line has the form :-

.P 5
^*DDT###dtype###ltype###fc###[size###[cat]#]\*

.P 0
where the fields are :-

.LIST "-"

.LE;^*DDT####\*-#the command DDT which states that this line is an entry in the
datatype description table 

.LE;^*dtype##\*-#the Informap data type, an integer matching the value required 
from the schema. This should be in the range 1 to 128.

.LE;^*ltype##\*-#the Informap line type, an integer in the range 1 to 128. 

.LE;^*fc#####\*-#the IFF feature code, a value in the range 0 to 32767

.LE;^*size###\*-#the IFF text size, an integer which can represent either a
point size or height in millimetres. If not required, i.e. if text sizes are
taken from the FRT, enter 0. This field is only present for primary annotation
datatypes, and is optional if ^*cat\* is not supplied. 

.LE;^*cat####\*-#a specified text category (which can be a font number) for a
text feature. This field is only present for primary annotation datatypes, and
is optional. 
.end list

.P 0
An example follows :-

.LM +5
.BLANK
.NOFILL
DDT####6####1####1			!#line###-#public building
DDT###14####2###27			!#symbol
DDT####2####1###28####12####3		!#text
DDT###15####6###29			!#line
.FILL
.LM -5

.P 0
Note that there must be an entry in the table for every datatype/linetype 
combination which is likely to occur.

.BLANK
.HL 3 ^^^*The attribute description table\*

.P 0
The attribute description table describes the translations required to produce
IFF attributes from Informap attributes. Each line is prefixed with the ADT
command which tells the program how to translate a particular attribute from
the data-base. 

.P 0
A line has one of the following two forms :-

.P 5
^*ADT#CODE###code###entry###field###NGname###[dtype]\*
.! ***** ^*ADT#CODE###code###entry###[field]###NGname###[dtype]\*

.P 5
^*ADT#NAME###name###entry###field###NGname###[dtype]\*
.! ***** ^*ADT#NAME###name###entry###[field]###NGname###[dtype]\*

.P 0
where the fields are :-

.LIST "-"

.LE;^*ADT####\*-#the command ADT which states that this line is an entry in the
attribute description table. 

.LE;^*CODE###\*-#the sub-command CODE which states that the attribute will be 
described by its IFF attribute code. 

.LE;^*NAME###\*-#the sub-command NAME which states that the attribute will be
described by its IFF attribute name. 

.LE;^*code###\*-#the IFF attribute code, an integer in the range 0 to 32767, 
as derived from the appropriate ACD entry in an FRT file.

.LE;^*name###\*-#the IFF attribute name, as given by the appropriate ACD entry
in an FRT file. 

.LE;^*entry##\*-#a command specifying which IFF entry the attribute is to be 
transferred to. The only valid command is 
.LIST " "
.LE; ^*AC\* which specifies that an AC entry is to be used
.END LIST 

.LE;^*field##\*-#a sub-command to AC, specifiying which field the attribute is
to be transferred to - valid commands are either 
.LIST " "
.LE; ^*VALUE\* which specifies that the AC value field is to be used, or
.LE; ^*TEXT#\* which specifies that the AC text# field is to be used
.END LIST 

.LE;^*NGname#\*-#the Informap non-graphic field name, a string which can be up
to 8 characters in length 

.LE;^*dtype##\*-#an optional Informap data type or range of data types. A range
should be specified as a series of integers and/or sub-ranges in ascending
order, separated by commas. A sub-range consists of two integers separated by a
hyphen. Any given data type must be in the range 1 to 128. 
.END LIST

.P 0
An example follows :-

.LM +5
.BLANK
.NO FILL
ADT CODE 6			AC TEXT		PARNAME		20
!
ADT NAME COUNTY_LEFT_OF_LINE	AC TEXT		COUNTYL		16
ADT NAME COUNTY_RIGHT_OF_LINE	AC TEXT		COUNTYR		16
.FILL
.LM -5


.LM -10
