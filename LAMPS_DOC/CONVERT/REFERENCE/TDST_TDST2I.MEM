





*--------------------------------------------------------------------------------*



1  *UTILITY     TDST2I*



*--------------------------------------------------------------------------------*



1.1  *FUNCTION*

          TDST2I is a SysScan DST ASCII format to IFF  converter.   It
          produces a standard IFF disc file.



*--------------------------------------------------------------------------------*



1.2  *FORMAT*

          $ TDST2I input-TDST-file-spec  output-IFF-file-spec 

          *Command qualifiers                       Defaults*
          /FRT = file-spec                         /NOFRT
          /OBJECT_AC = integer                     /NOOBJECT_AC
          /PARAMETER_FILE = file-spec              /NOPARAMETER_FILE



*--------------------------------------------------------------------------------*



1.3  *PROMPTS*

          Input TDST filename :   input-TDST-file-spec
          Output IFF filename :   output-IFF-file-spec



*--------------------------------------------------------------------------------*



1.4  *PARAMETERS*

input-TDST-file-spec

        - specifies the TDST file which is to be  converted  into  IFF
          format.   Any  part  of the file name which is not specified
          will   be   taken    from    the    default    specification
          'LSL$DST:TDST.TDST'.  Only one filename may be specified for
          each run of the program.

                                                                Page 2
*UTILITY     TDST2I*


output-IFF-file-spec

        - specifies the IFF file which is to  be  created.   Only  one
          filename  may be specified for each run of the program.  Any
          part of the file name which is not explicitly given will  be
          taken from the default specification 'LSL$IF:IFF.IFF'.



*--------------------------------------------------------------------------------*



1.5  *COMMAND QUALIFIERS*


/FRT [= file-spec]

        - This qualifier is required if a parameter file  is  supplied
          with  the  /PARAMETER_FILE qualifier to define a TDST to IFF
          feature code translation, and should  not  be  given  if  no
          parameter  file  is  used.   It is required to determine the
          graphical type of the requested feature codes  to  correctly
          set the IFF entries and values from the TDST entries.

          Any parts of the file-spec not supplied with this  qualifier
          will be taken from the default of 'LSL$FRT:TDST.FRT'.

/OBJECT_AC [= integer]

        - If this qualifier is given, the  names  of  the  objects  or
          areas  to  which  feature  elements belong are output to the
          text field of an AC entry, the  AC  type  being  the  number
          given  with  this qualifier.  If no number is specified with
          the qualifier a default AC type 1 will be used.

/PARAMETER_FILE [= file-spec]

        - If this qualifier is given,  a  user  definable  translation
          from   TDST   entity,  colour  number  and  line  style/text
          inclination/symbol  number  to  IFF  feature  code  may   be
          specified.

          If there is no /PARAMETER_FILE qualifier given, the  feature
          codes  will  be  derived  in  a simple combination of colour
          number and pattern number.

          Any parts of the file-spec not supplied with this  qualifier
          will be taken from the default of 'LSL$LOOKUP:TDST.PAR'.



                                                                Page 3
*UTILITY     TDST2I*


*--------------------------------------------------------------------------------*



1.6  *DESCRIPTION*


          1.6.1  *Command line* -

          The symbol TDST2I is normally set up as:

                    TDST2I == "$lsl$exe:tdst2i"

          and the program may then be used as if it were a normal  VMS
          utility.


          TDST2I converts TDST files into IFF format.   The  input  is
          compatible  with  the  Syscan  program UNLDST which converts
          data from the DST format used by their utilities.  It  forms
          part  of an exchange flowline between Laser-Scan and SysScan
          formats.  The reverse path from IFF to DST is carried out by
          SysScan's  LOADST,  and  I2TDST  which  is the complement of
          TDST2I.

          The feature codes used for the output IFF file  are  derived
          from  a  combination  of the TDST style code and colour code
          for each feature, unless a parameter file is supplied.   Not
          using  a  parameter file may result in features of different
          graphical types, or different entity types, being given  the
          same FC.

          The parameter file allows a user definable translation  from
          TDST    entity,    colour   number   and   line   style/text
          inclination/symbol number to IFF  feature  code.   The  line
          types,  symbol numbers and text inclinations should map onto
          line patterns, symbols and text fonts defined in the  user's
          FRT, SRI and TRI files.

          There are four DST entity types supported:  ARC, POINT, POLY
          and   TEXT.   Processing  of  AREA,  MULTIPOINT  and  OBJECT
          entities in the input DST file is not supported,  and  these
          entities are simply read through.

          The parameter file should contain for the  supported  entity
          types:

! DST Entity   Colour number  Line style         Feature code
!
     ARC          Colour      Line type              FC
     POINT        Colour      Symbol number          FC
     POLY         Colour      Line type              FC
     TEXT         Colour      Text inclination       FC

                                                                Page 4
*UTILITY     TDST2I*


          If a parameter file is given, only the supplied  colour  and
          pattern  combinations  for the given entities will be output
          to the IFF file, and any not matching will be  ignored.   In
          this  way, for example, all red features in the DST file may
          be omitted from the translation to IFF.

          If the DST range is inconsistent with the coordinate  values
          encountered  in  the  main body of the DST file, (ie.  there
          were coordinate values encountered outside the DST range), a
          warning  message  is given.  The correct range is written to
          the RA entry at the end of the program run.

          All OBJECT and AREA  entity  fields  are  read  through  and
          ignored,   as   are  MULTIPOINT  features  as  there  is  no
          satisfactory way of conversion to IFF.  The feature elements
          comprising  an  OBJECT or AREA are assumed to be repeated in
          their respective entities elsewhere in the DST file.  It  is
          left  to  the  user  to  join AREA feature elements into the
          total area feature.

          The names of the OBJECTS or AREAS to which an entity belongs
          can  be  output to the text field of an AC entry for the IFF
          feature if the /OBJECT_AC=ac_type is given.

          


          *----------------------------------------------------------------------*



          1.6.2  * TDST2I and logical names* -

          TDST2I requires that logical name LSL$DST:  should point  to
          the  directory  containing  the  TDST  file  which  is to be
          converted into IFF format.  It also  requires  that  logical
          name LSL$IF:  be set up to point to a directory to which the
          IFF file is to be written.   Either  of  these  two  logical
          names  may  be  overridden  by explicit specification of the
          directory  concerned.   This  is  not  recommended  as   the
          location of files will quickly become confusing.



                                                                Page 5
*UTILITY     TDST2I*


*--------------------------------------------------------------------------------*



1.7  *EXAMPLES*



$ *TDST2I/OBJECT_AC=2 CONTOURS CONTOURS2*
 ELAPSED: 00:01:32.06  CPU: 0:00:53.65  BUFIO: 29  DIRIO: 126  FAULTS:
108 
$



          This example demonstrates the use of TDST2I.  The TDST  file
          LSL$DST:CONTOURS.DST  has been successfully processed and an
          IFF format disk file LSL$IF:CONTOURS2.IFF has been produced.
          All object names will have been output to the text fields of
          AC type 2 entries.



                                                                Page 6
MESSAGES (WARNING)


*--------------------------------------------------------------------------------*



1.8  *MESSAGES (WARNING)*

These messages are output when an  error  has  occurred  that  can  be
corrected  immediately by the user or that the program will attempt to
overcome.

CIRCANGERR, ARC data angle inconsistent with full circle at line
    'integer'

    *Explanation:* The parameter file  has  specified  that  this  ARC
    feature  should  be a full circle, but the incremental angle given
    at the line shown is not 360 degrees.  This angle will be ignored.

    *User  action:*  Check  the  FRT  file  or  parameter   file   for
    consistency.

ENTIGNORE, DST entity ignored at line 'integer'

    *Explanation:* The combination of colour and line pattern,  symbol
    number  or text inclination at the line shown was not found in the
    supplied parameter file for the current entity type, and  will  be
    omitted from the translation to IFF.

    *User action:* Check the parameter file if this an error.

RANGEWRONG, DST Range inconsistent with coordinate data

    *Explanation:* The range information in the header of the DST file
    does not agree with the coordinates in the main body of the file.

    *User action:* None; the IFF range will  be  calculated  from  the
    coordinate information.
%RUNOFF-W-CJL, Can't output line correctly -- margins too narrow.  Line will not be justified

	on output page 6; on input line 56 of page 1 of file "LSL$DOC_ROOT:[000000.CONVERT.REFERENCE]TDST_TDST2IMSG.RNO;8"


                                                                Page 7
MESSAGES (ERROR)


*--------------------------------------------------------------------------------*



1.9  *MESSAGES (ERROR)*

These messages indicate an error in processing which  will  cause  the
program  to  terminate.   The  most  likely  causes  are  a corrupt or
otherwise invalid input file, or an  error  related  to  command  line
processing and file manipulation.

ERRINTLIN, Error interpreting contents of DST file on line 'integer'

    *Explanation:* An error occured whilst trying to read the contents
    of TXTBUF.  This could be due to the presence of the wrong type of
    variable e.g.  encountering a character string when trying to read
    an integer.

    *User action:* Inspect the ASCII DST  file  around  the  indicated
    line and look for any deviations from the expected format.

NOLOGSEC, Logic section not found at line 'integer'

    *Explanation:* A relevant start to a  new  section  could  not  be
    found  in the DST file where it was expected the file is therefore
    corrupt.

    *User action:* Edit the source DST file at the indicated line  and
    amend to a correct format.

NOMASEOS, End of master section not found

    *Explanation:* Initial scanning of the input file could  not  find
    the  obligatory  EOS  entry  in  the  master section of the master
    section.

    *User action:* Check the DST file and add an EOS  entry  into  the
    master section.

NOMASSEC, Master section not found

    *Explanation:* Initial scanning of the input file could  not  find
    the obligatory MASTER section of the file.

    *User action:* Check the DST file and amend with  a  dummy  master
    record if it appears to be missing.

                                                                Page 8
MESSAGES (ERROR)


UNACREIFF, Unable to create specified IFF file 'file-spec'

    *Explanation:* It  was  not  posible  to  open  the  IFF  file  as
    specified.   Further  information  should  be  obtainable from the
    adjoining system message.

    *User action:* Repeat the specification after taking notice of the
    IFFLIB error messages.

UNAOPNDST, Unable to open DST file 'file-spec'

    *Explanation:* The DST file specified does not exist, or could not
    be opened.

    *User action:* Check the spelling and path name  of  the  file  as
    specified,  also  check that LSL$DST points to where you expect it
    to.

UNKGEOIDN, Unknown geometry type at line 'integer'

    *Explanation:*  The  program  has  encountered  a  geometry   type
    definition that is unknown to it.

    *User action:* Edit the DST source file at the indicated line  and
    correct any obvious errors (such as incorrect geometry name).



                                                                Page 9
MESSAGES (OTHER)


*--------------------------------------------------------------------------------*



1.10  *MESSAGES (OTHER)*

In addition to the above messages which are generated by  the  program
itself, other messages may be produced by the command line interpreter
(CLI) and by Laser-Scan libraries.  In  particular,  messages  may  be
generated  by  the  IFF  library  and  by  the Laser-Scan I/O library,
LSLLIB.  IFF  library  messages  are  introduced  by  '%IFF'  and  are
documented  in the IFF library users' guide.  In most cases IFF errors
will be due to a corrupt input file, and this should be the first area
of  investigation.   If the cause of the error cannot be traced by the
user, and Laser-Scan are consulted, then the  output  file  should  be
preserved  to facilitate diagnosis.  LSLLIB messages are introduced by
'%LSLLIB' and  are  generally  self-explanatory.   They  are  used  to
explain the details of program generated errors.
