.!** set up Qume page format
.LEFT MARGIN  0
.RIGHT MARGIN 80
.PAGE SIZE    60,80
.FLAGS BOLD
.SUBTITLE UTILITY I2MOSS
.PAGE
.B
^*--------------------------------------------------------------------------------\*
.HL 1 ^^^*UTILITY#####I2MOSS\*

^*--------------------------------------------------------------------------------\*
.HL 2 ^^^*FUNCTION\*
.FILL
.LM +10
.P 0;I2MOSS is an IFF to MOSS GENIO format converter. It produces MOSS GENIO
card images for 2 and 3 dimensional MOSS strings based on IFF spot height,
contour and 3 dimensional strings. Output may be directed to disk file or to
magnetic tape. 
.BLANK
.NO JUSTIFY
.NOFILL
.LM -10
^*--------------------------------------------------------------------------------\*
.HL 2 ^^^*FORMAT\*
.LM +10
.NO FILL

$ I2MOSS input-file-spec output-file-spec

^*Command Qualifiers		             Defaults\*

/CROSS__CODES[=file-spec]                   MOSS strings not
                                           labelled.
/HEIGHT__AC=integer                         Heights expected in 
                                           type 3 ACs.
/[NO]LOG                                   /NOLOG
/NAME="ascii-string"                       File name is used as
                                           model name.
/NOFC=[integer[,...]]                      All IFF feature codes
                                           formatted.
/NOLAYER=[integer[,...]]                   All IFF layers formatted.
/TERMINATOR=real                           MOSS default 0.0, 0.0 used.
.BLANK
^*Qualifiers for magnetic tape output:\*
.BLANK
/BLOCK__SIZE=integer                        /BLOCK__SIZE=800
/DENSITY=800                               /DENSITY=1600
/REWIND                                    /NOREWIND
/SERIAL__MAGTAPE                            Output to unibus/massbus
                                           magtape

.LM -10
^*--------------------------------------------------------------------------------\*
.HL 2 ^^^*PROMPTS\*
.LM +10
.NO FILL

__IFF-file:	input-file-spec
__MOSS-file:	output-file-spec

.LM -10
^*--------------------------------------------------------------------------------\*
.HL 2 ^^^*PARAMETERS\*
.LM +10
.P -10;input-file-spec 
.JUSTIFY
.P -2;- specifies the IFF file which is to be formatted into MOSS GENIO card
images. Any part of the file name which is not specified will be taken from the
default specification 'LSL$IF:IFF.IFF'. 
.TP 10
.P -10;output-file-spec
.P -2;- specifies the  MOSS GENIO file which is  to  be  created. Any part of
the file name which is not explicitly given will be taken from the parsed input
specification, but the default extension '.MOSS'. I2MOSS can output the MOSS
GENIO format data to magnetic tape. The default action is to create a disk
file. Should output to magnetic tape be required it is necessary to supply the
desired tape device name as the file-spec (see examples below). 
.LM 0
.BLANK
.TP 12
^*--------------------------------------------------------------------------------\*
.HL 2 ^^^*QUALIFIERS\*
.LEFT MARGIN +10
.P -10;/CROSS__CODES=file-spec
.JUSTIFY
.P -2;- enables the user to specify a file containing a table of IFF feature
codes and MOSS GENIO string labels. This table is used to convert the IFF
feature codes into MOSS GENIO string labels to enable strings with different
IFF feature codes to be differentiated in the MOSS format file. The default
action of I2MOSS is not to output any MOSS GENIO string labels at all. If
/CROSS__CODES is specified without a file argument then the default
/CROSS__CODES file; LSL$MOSS:MOSSCODES.DAT is searched for and opened. If
/CROSS__CODES is specified with a file argument then the file-spec supplied is
parsed against the default file-spec 'LSL$MOSS:MOSSCODES.DAT'. A description of
the layout of a /CROSS__CODES file together with an annotated example is given
in the DESCRIPTION section below. 
.BLANK
.TP 10
.P -10;/HEIGHT__AC=integer
.P -2;- by default I2MOSS expects all IFF 2d string features
(and spot height features held in IFF ST entries) to have a type 3 AC containing
the feature height as a floating point number. /HEIGHT__AC enables the user to
specify that the feature height is to be extracted from the longword field of
the specified AC type as an integer value. Only one type of AC may be specified
for one run of I2MOSS. Features which do not contain an AC of the specified
type will not be output into MOSS GENIO format. 
.BLANK
.TP 10
.P -10;/LOG
.I -10;/NOLOG##(default)
.P -2;- this will  result in  supplementary messages being sent to SYS$OUTPUT.
Supplementary messages are generated when a file is successfully opened and a
reassuring message output each time a new IFF layer is found in the IFF file. 
.BLANK
.TP 10
.P -10;/NAME='ascii-string'
.P -2;-#enables the user to specify the model name to be written into the 
first record of the MOSS GENIO file immediately after the GENIO option
keyword. The model name may have a maximum of 40 characters. By default
I2MOSS will extract and use the filename from the IFF input file 
specification as the MOSS model name. Thus if the input IFF file was
DUA3:[BUREAU.MOSS]CULVERTS_AND_GUTTERS.IFF;9 the default model name would
be "CULVERTS_AND_GUTTERS".
.BLANK
.TP 10
.P -10;/NOFC=integer[,...]
.P -2;- enables deselection for MOSS output of all IFF features
which have feature codes of the specified values. By default I2MOSS will
process all features in the input IFF file (except those in layer 0). The
maximum number of feature codes which may be deselected is 1024. 
.BLANK
.TP 10
.P -10;/NOLAYER=integer[,...]
.P -2;- enables deselection for MOSS output of all IFF features which lie in
the layers with the specified values. The maximum
number of IFF layers which may be deselected is 1024. By default I2MOSS will not
convert to MOSS GENIO any features which lie within IFF layer 0, as this layer
is reserved for digitising control and registration features. 
.BLANK
.TP 10
.P -10;/TERMINATOR=integer
.P -2;- by  default I2MOSS uses the  default MOSS GENIO  string termination
value of 0.0 0.0. /TERMINATOR enables the user to specify a different
coordinate to be used to signify the end of a MOSS string. /TERMINATOR expects
only one argument as the x and y ordinate of the terminating string coordinate
will be made the same. If I2MOSS is used on an IFF file containing a type 2 IFF
MD (Map Descriptor) which is set up, the /TERMINATOR argument must not be
negative. MOSS GENIO forbids negative coordinates if the MOSS string header
contains an origin offset, such an origin offset will be extracted from a type
2 IFF MD entry. 
.B 2
.TP 10
.P -10;^*Qualifiers for use with magnetic tape output.\*
.BLANK
.P -10;/BLOCK__SIZE=integer
.P -2;- by default I2MOSS writes magnetic tape with a block size of 800 bytes.
/BLOCK__SIZE enables the user to specify a different block size. MOSS GENIO
files consist of card images each represented by an 80 byte record. The
/BLOCK__SIZE argument must be divisible by 80, and lie in the range 80 to 8000.
I2MOSS checks that these criteria are met. 
.B
.TP 10
.P -10;/DENSITY=integer
.P -2;- I2MOSS can write magnetic tapes at 800 and 1600 bpi. By default 1600 bpi
is used. /DENSITY enables the user to specify the tape density to be used, only
/DENSITY=800 (bpi and /DENSITY=1600 (bpi) are valid. 
.B
.TP 10
.P -10;/REWIND
.P -2;- by default I2MOSS does not rewind the magnetic tape before writing a
MOSS file to it. I2MOSS looks for end of volume, signified by two tape marks,
and positions the write head between the two tape marks before writing the
file. The second tape mark is over-written and a new end of volume substituted
at the end of the new file. Thus more than one MOSS file may be written to the
same tape. /REWIND enables the user to specify that the tape is to be rewound
and the new file is to be written starting at the beginning of the tape. Any
existing file(s) on the tape will be over-written. 
.B
.TP 10
.P -10;/SERIAL__MAGTAPE
.P -2;- if a device name is specified on the output file-spec
I2MOSS checks to determine whether the device is a magnetic tape drive. If
however the magnetic tape drive is a non-standard DEC machine on a serial line
I2MOSS determines that it is trying to output to a terminal (on the serial line)
and does not do the tape output required. /SERIAL__MAGTAPE, when used in
conjunction with a magnetic tape logical name on the output file specification
will result in the magnetic tape drive (perceived as a terminal) to be used
correctly as a magnetic tape drive.

.B
.TP 10
.LEFT MARGIN -10
^*--------------------------------------------------------------------------------\*
.NOKEEP
.FILL
.JUSTIFY
.HL 2 ^^^*DESCRIPTION\*
.LEFT MARGIN +10
.P 0;I2MOSS is Laser-Scan's IFF to MOSS GENIO formatter.  It offers the
following features: 
.FILL
.LIST "o"
.LE ;converts data from Laser-Scan IFF format disk file to MOSS GENIO card
images on magnetic disk;

.LE ;optionally converts data from Laser-Scan IFF format disk file to MOSS
GENIO card images on magnetic tape;

.LE ;if magnetic tape output is selected the user may choose between 800 bpi
and 1600 bpi, and also to select the output block size;

.LE ;can format IFF 2 dimensional (IFF ST) and 3 dimensional (IFF ZS) strings;

.LE ;enables the user to specify the IFF AC type used to carry the string height
for 2 dimensional strings;

.LE ;enables the user to specify that strings identified by particular IFF 
feature codes may given specific MOSS GENIO string labels to enable the strings
to be differentiated in the MOSS file;

.LE ;enables the user to specify the MOSS GENIO string terminator combination;

.LE ;enables the user to specify the MOSS GENIO model name string;

.LE ;enables the user to specify the MOSS GENIO string origin offset for all
strings in the MOSS file based on the IFF type 2 Map Descriptor origin offset;

.LE ;enables the user to specify whether particular IFF features are to be
excluded from the MOSS GENIO file on the basis of IFF feature code or position
within IFF layer. 

.END LIST
.P 0
I2MOSS must be supplied with an IFF containing spot heights, contour strings or
3 dimensional strings (held in IFF ZS entries). All spot height (IFF one point
ST entries) and contour features (2 dimensional IFF strings held in ST entries)
MUST have a height value held in an IFF AC entry. By default this AC will be of
type 3, which carries the height value as a floating point number. Any ACs in
IFF features which consist of 3d strings (IFF ZS entries) will be ignored. 
For further details of I2MOSS digitising requirements see the data preparation
section above. 

.P 0;A powerful feature of I2MOSS is the ability to carry into the MOSS GENIO
file the feature coding applied in the IFF file via a user definable lookup
table which associates each IFF feature code with a MOSS GENIO string label.
For details of the content and layout of I2MOSS CROSS CODES files see the data
preparation section above. 
.LEFT MARGIN -10
.BLANK 2
.TEST PAGE 10
^*##########----------------------------------------------------------------------\*
.LEFT MARGIN +10
.HL 3 ^^^* I2MOSS and logical names\*
.FILL
.JUSTIFY
.P 0;I2MOSS requires that logical name LSL$IF: (or IF:) should point to the
directory containing the IFF file which is to be converted into MOSS GENIO
format. It also requires that logical name LSL$MOSS: be set up to point to a
directory containing the default lookup table for the /CROSS__CODES command
qualifier. The default lookup table must be called LSL$MOSS:MOSSCODES.DAT. An
annotated example of such a lookup table is given in the DESCRIPTION section.
It is recommended that LSL$MOSS: point to a directory which is quite separate
from the normal working directories to reduce the chance of the lookup file(s)
being accidentally deleted.
.LEFT MARGIN -10
.BLANK 2
.TEST PAGE 10
^*--------------------------------------------------------------------------------\*
.HL 2 ^^^*RESTRICTIONS\*
.LM +10
.P 0;I2MOSS operates with the following restrictions:

.LIST "o"
.LE ;I2MOSS cannot be used to generate MOSS GENIO strings of greater than 3
dimensions.

.LE ;Features IFF layer 0 will not be formatted into MOSS GENIO card
images, as these features are reserved for use as digitising control and
registration marks. 

.LE ;No IFF text entries will be processed. 

.LE ;The /NOLAYER and /NOFC qualifiers can each take a maximum of 128 arguments
(including, of course, burst numeric ranges) only.

.LE ;The /NAME qualifier takes an ASCII string of maximum length 40 bytes.

.LE ;MOSS string origin offsets are only available from the type 2 MD entry
(Map Descriptor). If a type 2 MD origin offset is used in conjunction with
/TERMINATOR the /TERMINATOR argument must not be negative. MOSS GENIO forbids
negative coordinates if the MOSS string header contains an origin offset.

.LE ;If using a magnetic tape drive on a serial line (perceived as a terminal)
the /SERIAL__MAGTAPE qualifier must be specified.

.LE ;If writing to magnetic tape the block size must be divisible by 80, and
lie in the range 80 to 8000.

.END LIST
.BLANK
.LEFT MARGIN -10
.TEST PAGE 12
^*--------------------------------------------------------------------------------\*
.NOFILL
.KEEP
.HL 2 ^^^*EXAMPLES\*
.NO FILL
.BLANK
$ ^*I2MOSS CONTOURS AMOS\*
 ELAPSED: 00:01:32.06  CPU: 0:00:53.65  BUFIO: 29  DIRIO: 126  FAULTS: 108 
$
.B
.JUSTIFY
.LEFT MARGIN +10
.FILL
.P 0;This example demonstrates the most common use of I2MOSS. IFF file
LSL$IF:CONTOURS.IFF has been successfully processed and a MOSS GENIO format
disk file LSL$IF:AMOS.MOSS;0 has been produced. The GENIO strings will not have
string labels.
.NOFILL
.LEFT MARGIN -10
.NO JUSTIFY
.B2
.TEST PAGE 20
$ ^*I2MOSS TST/NOLAY=(1230:1270)/LOG/NAME="EXAMPLE MODEL ONE" JIM<CR>\*
%LSLLIB-I-IFFOPENED, DUA3:[BUREAU.RO]TST.IFF;0 opened for read
%I2MOSS-I-MOSOPNOUT, MOSS file LSL$IF:JIM.MOSS;0 opened for output
%I2MOSS-I-SKIPLYR, skipping IFF layer 1230
%I2MOSS-I-LAYER, IFF layer 1 found
%I2MOSS-I-LAYER, IFF layer 88 found
%I2MOSS-W-MISSHT, IFF feature FSN 270 (36) has no height AC
-I2MOSS-I-SKIPFEAT, skipping IFF feature FSN 270 (36)
%I2MOSS-I-LAYER, IFF layer 66 found
%I2MOSS-I-LAYER, IFF layer 55 found
%I2MOSS-I-LAYER, IFF layer 44 found
%I2MOSS-W-MISSHT, IFF feature FSN 330 (44) has no height AC
-I2MOSS-I-SKIPFEAT, skipping IFF feature FSN 330 (44)
%I2MOSS-I-LAYER, IFF layer 11 found
%I2MOSS-I-LAYER, IFF layer 151 found
%I2MOSS-I-LAYER, IFF layer 9999 found
 ELAPSED: 00:00:04.97  CPU: 0:00:01.94  BUFIO: 42  DIRIO: 21  FAULTS: 171 
$
.B
.JUSTIFY
.LEFT MARGIN +10
.FILL
.P 0;This example demonstrates the use of I2MOSS with the /LOG qualifier set.
The number of messages output has increased. Notice that there are some warning
messages caused by the specified features lacking a height AC. By default the
height AC is taken to be type 3 (floating point height). The /NOLAYER qualifier
has been used to exclude any IFF layer found in the IFF file which lies in the
range 1230 to 1270. Although the input file LSL$IF:TST.IFF has been
successfully processed those features which lacked a height AC will not have
been transferred to the MOSS GENIO file. The IFF file should be modified using
LITES2 to add the missing ACs and I2MOSS re-run. Despite the omitted features
the run complete successfully and $STATUS is set to SS$__NORMAL.
.NOFILL
.LEFT MARGIN -10
.NO JUSTIFY
.B2
$ ^*I2MOSS SEWERS/HEIGHT__AC=2/LOG/CROSS__CODES=PROJECT1.DAT SEWERS<CR>\*
%LSLLIB-I-IFFOPENED, DUA3:[BUREAU.RO]SEWERS.IFF;0 opened for read
%I2MOSS-I-MOSOPNOUT, MOSS file LSL$IF:SEWERS.MOSS;0 opened for output
%I2MOSS-I-CRSSOPNIN, file LSL$MOSS:PROJECT1.DAT opened for /CROSS__CODES
%I2MOSS-I-LAYER, IFF layer 12 found
%I2MOSS-I-LAYER, IFF layer 11 found
%I2MOSS-I-LAYER, IFF layer 16 found
%I2MOSS-I-LAYER, IFF layer 9 found
 ELAPSED: 00:00:04.99  CPU: 0:00:01.96  BUFIO: 110  DIRIO: 22  FAULTS: 180 
$
.B
.JUSTIFY
.LEFT MARGIN +10
.FILL
.P 0;This example illustrates the use of the /CROSS__CODES qualifier to
specify a look-up file for translation of IFF feature codes into MOSS GENIO
string labels. Notice that the /CROSS__CODES file-spec was supplied without a
device and directory specification and so the default device and directory
specification have been applied using logical name LSL$MOSS:. The run complete
successfully and $STATUS is set to SS$__NORMAL. 
.NOFILL
.LEFT MARGIN -10
.NO JUSTIFY
.B 2
$ ^*I2MOSS TST/HEIGHT__AC=2/LOG/REWIND/BLOCK__SIZE=2048/DENSITY=800 MSA0:<CR>\*
%I2MOSS-E-INVBLK, invalid block size \2048\
-I2MOSS-I-BLKDIV, block size must be divisible by 80
 ELAPSED: 00:00:00.51  CPU: 0:00:00.17  BUFIO: 2  DIRIO: 0  FAULTS: 76 
.B
.JUSTIFY
.LEFT MARGIN +10
.FILL
.P 0;Although intended to create an output file on the magnetic tape unit MSA0:
this run of I2MOSS has failed. By default I2MOSS writes magnetic tape with a
block size of 800 bytes. In this example the user has specified the /BLOCK__SIZE
qualifier to change the block size written to tape. MOSS GENIO files consist of
card images each represented by am 80 byte record. The /BLOCK__SIZE argument
must be divisible by 80, and lie in the range 80 to 8000. I2MOSS checks that
these criteria are met. One of them was not. Notice that the /REWIND qualifier
was specified to force the output file to be written at the beginning of the
tape, thus over-writing any data already on the tape. The default tape density
of 1600 bpi has been explicitly replaced by the /DENSITY=800 (bpi) qualifier.
$STATUS is set to SS$__ABORT.
.NOFILL
.NO JUSTIFY
.LEFT MARGIN -10
.B 2
$ ^*I2MOSS/SERIAL__MAGTAPE/REWIND/BLOCK__SIZE=4000/DENSITY=800<CR>\*
__IFF-file:^* TST<CR>\*
__MOSS-file:^* LSL$TERTAPE:<CR>\*
 ELAPSED: 00:00:00.64  CPU: 0:00:00.27  BUFIO: 3  DIRIO: 0  FAULTS: 111 
$
.B
.JUSTIFY
.LEFT MARGIN +10
.FILL
.P 0;In this example output is to be to the serial line magnetic tape unit
pointed to by the logical name LSL$TERTAPE:. As the tape unit is on a serial
line (which I2MOSS will perceive to be a terminal device), I2MOSS must be told
that this is a non-standard (ie non massbus/unibus) tape drive with the
/SERIAL__MAGTAPE qualifier. The file is to be written at 800 bpi with a 
block size of 4000. The tape will be rewound before any output begins. The
run has completed successfully, $STATUS is set to SS$__NORMAL.

.NOFILL
.LEFT MARGIN -10
.PAGE
.BLANK
^*--------------------------------------------------------------------------------\*
.NOKEEP
.FILL
.JUSTIFY
.HL 2 ^^^*MESSAGES (informational)\*
.P 0;These messages give information only, and require no immediate action by
the user (except perhaps to verify that the correct options have been
selected). Most will only appear if /LOG has been specified on the command
line, unless they are used to provide supplementary information after an error
has occurred. 
.BLANK 2
.LEFT MARGIN +4
.TEST PAGE 12
.I -4;BLKDIV, block size must be divisible by 80
.JUSTIFY
.P 0;^*Explanation:\* You have used /BLOCK__SIZE to specify a different block
size from the default of 800 bytes. MOSS GENIO files consist of card images
each represented by am 80 byte record. The /BLOCK__SIZE argument must be
divisible by 80, and lie in the range 80 to 8000. 
.NO JUSTIFY
.JUSTIFY
.P 0;^*User action:\* Check that the /BLOCK__SIZE argument size criteria are 
met before retyping the command line.
.NO JUSTIFY
.BLANK
.TEST PAGE 12
.I -4;CRSSOPNIN, file 'file-spec' opened for /CROSS__CODES
.JUSTIFY
.P 0;^*Explanation:\* The specified lookup table file has been successfully
opened for input. IFF feature code to MOSS GENIO string label correlation will
be based on its contents. 
.NO JUSTIFY
.P 0;^*User action:\* None. 
.BLANK
.TEST PAGE 12
.I -4;LAYER, IFF layer 'integer' found
.P 0;
^*Explanation:\* I2MOSS has reached the specified IFF layer while processing the
IFF input file. 
.P 0;^*User action:\* None. 
.BLANK
.TEST PAGE 12
.JUSTIFY
.I -4;MINMAXBLK, minimum block size is 80, maximum block size is 8000
.P 0;^*Explanation:\* By default I2MOSS writes magnetic tape with a block size
of 800 bytes. /BLOCK__SIZE enables the user to specify a different block size.
MOSS GENIO files consist of card images each represented by an 80 byte record.
The /BLOCK__SIZE argument must be divisible by 80, and lie in the range 80 to
8000. I2MOSS checks that these criteria are met. 
.JUSTIFY
.P 0;^*User action:\* Check that the /BLOCK__SIZE argument size criteria are met
before retyping the command line.
.BLANK
.TEST PAGE 12
.I -4;MOSOPNOUT, MOSS file 'file-spec' opened for output
.JUSTIFY
.P 0;
^*Explanation:\* The specified MOSS file has been successfully created and opened for output.
.P 0;^*User action:\* None.
.BLANK
.TEST PAGE 12
.I -4;POSSDEN, possible densities are 800 and 1600 bpi
.JUSTIFY
.P 0;^*Explanation:\* by default I2MOSS writes magnetic tape with a density of
1600 bpi. An alternative density of 800 bpi is provided via the /DENSITY
qualifier. You have specified an argument to /DENSITY which is neither 800 bpi or 1600 bpi. 
.P 0;
^*User action:\* Check that the /DENSITY argument is either 800 or 1600 when
.NO JUSTIFY
retyping the command line.
.BLANK
.TEST PAGE 12
.I -4;SKIPFEAT, skipping IFF feature FSN integer (integer)
.JUSTIFY
.P 0;^*Explanation:\* As a result of specifying feature codes with the /NOFC
qualifier IFF features with the specified feature codes will not be output to
the MOSS GENIO file. This message tells the user that a particular feature is
being ignored. 
.P 0;^*User action:\* None.
.BLANK
.TEST PAGE 12
.I -4;SKIPLAY, skipping IFF layer 'integer'
.JUSTIFY
.P 0;^*Explanation:\* As a result of specifying IFF layers with the /NOFC
qualifier IFF features within the specified IFF layers will not be output to
the MOSS GENIO file. This message tells the user that a particular layer is
being ignored. 
.NO JUSTIFY
.P 0;^*User action:\* None.
.BLANK
.LEFT MARGIN-4
.PAGE
^*--------------------------------------------------------------------------------\*
.HL 2 ^^^*MESSAGES (warning)\*
.P 0;These messages indicate that I2MOSS has been unable to guarantee that a
specified feature has been correctly processed.
.FILL
.NO JUSTIFY
.BLANK
.LEFT MARGIN+4
.TEST PAGE 12
.I -4;LABTOOLNG, MOSS string label is too long 'ascii-string'
.JUSTIFY
.P 0;^*Explanation:\* MOSS GENIO string labels can only be 4 characters long.
I2MOSS has read from the /CROSS__CODES file a label which has more than 4
characters. The string label has been truncated and written to the MOSS GENIO
file.
.NO JUSTIFY
.P 0;
^*User action:\* Check that a truncated string label is acceptable. Why was it
.NO JUSTIFY
too long in the first place?
.BLANK
.TEST PAGE 12
.I -4;MISSHT, IFF feature FSN 'integer' ('integer') has no height AC
.JUSTIFY
.P 0;
.JUSTIFY
^*Explanation:\* The specified IFF feature has no AC entry of the required type 
(default type 3 or some other identified by /HEIGHT__AC). The IFF feature will
not be transferred to the MOSS file. 
.NO JUSTIFY
.P 0;^*User action:\* Check why the feature does not have a height AC. If
necessary modify the IFF feature using LITES2 then rerun I2MOSS.
.BLANK
.TEST PAGE 12
.I -4;
NOTEOF, tape was not at end of file. Rewinding and looking for end of volume.
.JUSTIFY
.P 0;^*Explanation:\* The /NOREWIND qualifier (default) was specified and the
tape drive write head was not at the last end of file position. The tape will be
rewound and the end of volume (signified by two successive tape marks) will be
found. The write head is then positioned between the two tape marks and output
can then begin.
.NO JUSTIFY
.P 0;^*User action:\* None.
.BLANK
.TEST PAGE 12
.TEST PAGE 12
.I -4;UNSETMD, IFF type 2 map descriptor is unset
.JUSTIFY
.P 0;^*Explanation:\* The input IFF file has a type 2 MD (Map Descriptor) which
is unset.
.NO JUSTIFY
.P 0;^*User action:\* Ensure that the IFF MD is meant to be unset.
.BLANK
.LEFT MARGIN -4
.PAGE
^*--------------------------------------------------------------------------------\*
.HL 2 ^^^*MESSAGES (error)\*
.BLANK
These messages indicate an error in processing which has caused the program to
terminate. The most likely causes are a corrupt or otherwise invalid input IFF
file, or an error related to command line processing and file manipulation.
It is most unlikely that any output file produced will be correctly processed.
Generally, in the event of a processing error I2MOSS will delete the MOSS output
file before calling exit, (unless writing to magnetic tape).
.LEFT MARGIN+4
.BLANK
.TEST PAGE 12
.I -4;BADDEV, error enquiring about device 'device name'
.JUSTIFY
.P 0;^*Explanation:\* If the output file specification contains a device name
I2MOSS uses a VMS system service (LIB$GETDVI) to determine whether the output
device is a magnetic tape unit. The system service considers the output device
name to be invalid. Bear in mind that the output file specification may have
defaulted from the input file-specification which may contain a device name. 
.NO JUSTIFY
.P 0;^*User action:\* Ensure that the output device name was correctly
specified. If the problem persists consult your system manager.
.BLANK
.TEST PAGE 12
.I -4;COMPOSINV, comment delimiter position invalid in /CROSS__CODES file in line 'int' 'string'
.JUSTIFY
.P 0;^*Explanation:\* A line in the /CROSS__CODES file contains a comment
delimiter (a "!") in an invalid position. The message contains a string 'string'
and the line number 'integer' which should help identify the offending line.
.NO JUSTIFY
.P 0;^*User action:\* Correct the offending /CROSS__CODES file line.  Re-run
I2MOSS.
.BLANK
.TEST PAGE 12
.I -4;CROSSEOF, unexpected end of /CROSS__CODES file detected
.JUSTIFY
.P 0;^*Explanation:\* The last line in the /CROSS__CODES file contains
only one of the expected pair of values or the /CROSS__CODES file is empty.
.NO JUSTIFY
.P 0;^*User action:\* Correct the offending /CROSS__CODES file line. Re-run
I2MOSS.
.BLANK
.TEST PAGE 12
.I -4;ERRDCRSS, error reading line 'integer' of /CROSS__CODES file
.JUSTIFY
.P 0;^*Explanation:\* The specified line in the /CROSS__CODES file contains
only one of the expected pair of values, or an alphabetic character in the
IFF feature code field.
.NO JUSTIFY
.P 0;^*User action:\* Correct the offending /CROSS__CODES file line.  Re-run
I2MOSS.
.NO JUSTIFY
.BLANK
.TEST PAGE 12
.I -4;ERROPMOSS, error opening MOSS file 'file-spec' for output
.JUSTIFY
.P 0;^*Explanation:\* The specified file cannot be created and opened for
writing. This message will usually be followed by another giving the reason for
the failure.
.P 0;^*User action:\* The accompanying message should indicate the cause of the
error. Check the file specification for errors, check that that directory
is not write-protected. If the problem continues, notify the system manager. 
.NO JUSTIFY
.BLANK
.TEST PAGE 12
.I -4;INVBLK, invalid block size 'integer'
.JUSTIFY
.P 0;^*Explanation:\* By default I2MOSS writes magnetic tape with a block size
of 800 bytes. /BLOCK__SIZE enables the user to specify a different block
size. MOSS GENIO files consist of card images each represented by an 80 byte
record. The /BLOCK__SIZE argument must be divisible by 80, and lie in the range
80 to 8000. I2MOSS checks that these criteria are met.
.P 0;^*User action:\* Check that the /BLOCK__SIZE argument size criteria are
met before retyping the command line.
.NO JUSTIFY
.BLANK
.TEST PAGE 12
.I -4;INVDENS, invalid tape density selected
.JUSTIFY
.P 0;^*Explanation:\* The /DENSITY qualifier has been specified with an invalid
tape density. I2MOSS supports only 800 bpi and 1600 bpi tape output.
.NO JUSTIFY
.P 0;^*User action:\* Re-enter the command line and specify either /DENSITY=800
or /DENSITY=1600.
.BLANK
.NO JUSTIFY
.TEST PAGE 12
.INDENT -4;INVALFC, 'integer' is an invalid feature code argument#-#value must lie in range 0#-#32767
.P 0;^*Explanation:\* The specified feature code lies outside the indicated
range for valid IFF feature codes.
.P 0;^*User action:\* Respecify the I2MOSS command line ensuring that
any feature code specifications lie within the range 0#-#32767.
.BLANK
.NO JUSTIFY
.TEST PAGE 12
.INDENT -4;INVALLAY, 'integer' is an invalid layer argument#-#value must lie in range 0#-#32767\
.P 0;^*Explanation:\* The specified feature code lies outside the indicated
range for valid IFF layer numbers.
.P 0;^*User action:\* Respecify the I2MOSS command line ensuring that
any layer number specifications lie within the range 0#-#32767. (Note that
by default layer 0 is reserved for registration marks and grid features).
.BLANK
.TEST PAGE 12
.I -4;MTBLK, error writing magnetic tape block
.JUSTIFY
.P 0;^*Explanation:\* I2MOSS has received a message from the I2MOSS magnetic
tape i/o routines that an error occurred writing a block to the tape. 
.P 0;^*User action:\* The accompanying message should indicate the cause of the
error. Check that the tape is still loaded, check that the tape unit is online,
check that that tape is not write-protected. If the problem continues, notify
the system manager. 
.NO JUSTIFY
.BLANK
.TEST PAGE 12
.I -4;MTOPEN, error initialising tape unit 'device name'
.JUSTIFY
.P 0;^*Explanation:\* I2MOSS has determined that the output device name is
that of a magnetic tape unit and has attempted to initialise the tape unit.
It has failed. 
.P 0;^*User action:\* The accompanying message should indicate the cause of the
error. Check that the tape is mounted, check that the tape is loaded, check that
the tape unit is online, check that that tape is not write-protected. If the
problem continues, notify the system manager. 
.NO JUSTIFY
.BLANK
.TEST PAGE 12
.I -4;NEGCOORD, IFF feature FSN 'integer' ('integer') has negative coordinate. Invalid with MOSS origin offset.
.JUSTIFY
.P 0;^*Explanation:\* I2MOSS has detected an IFF feature containing a negative
coordinate in spite of the fact that the IFF file contains a set type 2 MD
(Map Descriptor) entry. The map descriptor contains an origin offset. MOSS GENIO
forbids negative coordinates with a string origin offset.
.NO JUSTIFY
.P 0;^*User action:\* Correct the offending coordinate(s). Re-run I2MOSS.
.BLANK
.TEST PAGE 12
.I -4;OPNCROSS, error opening file 'file-spec' for /CROSS__CODES
.JUSTIFY
.P 0;^*Explanation:\* The specified file cannot be opened for reading. This
message will usually be followed by another giving the reason for the failure.
.P 0;^*User action:\* The accompanying message should indicate the cause of the
error. Check the file specification for errors, check that logical name
LSL$MOSS: has been assigned to the correct device and directory, check that the
file and directory are not protected against read access. If the problem
continues, notify the system manager. 
.NO JUSTIFY
.BLANK
.TEST PAGE 12
.I -4;TOOMNYLAB, too many MOSS labels defined
.JUSTIFY
.P 0;^*Explanation:\* The file specified by the /CROSS__CODES qualifier (default
LSL$MOSS:MOSSCODES.DAT) contains more than 500 IFF feature code to MOSS GENIO
string label assignments.
.P 0;^*User action:\* Reduce the number of IFF feature code to MOSS GENIO
string label assignments. Re-run I2MOSS.
.NO JUSTIFY
.BLANK
.TEST PAGE 12
.I -4;UNDEFCLAB, MOSS string label for IFF feature code undefined
.JUSTIFY
.P 0;^*Explanation:\* The specified line in the /CROSS__CODES file contains
only one of the expected pair of values, or an alphabetic character in the
IFF feature code field.
.P 0;^*User action:\* Correct the offending /CROSS__CODES file line.  Re-run
I2MOSS.
.NO JUSTIFY
.BLANK
.TEST PAGE 12
.I -4;UNEXPEOF, unexpected end of IFF file
.JUSTIFY
.P 0;^*Explanation:\* I2MOSS has detected the end of the IFF file, but has not
detected an IFF 'EJ' entry.
.NO JUSTIFY
.JUSTIFY
.P 0;^*User action:\* Use IMEND on the file, which will correctly position the
EOF marker and insert an EJ entry at the end of the file.  Re-run I2MOSS on 
the corrected file.
.NO JUSTIFY
.BLANK
.TEST PAGE 12
.I -4;WREOT, error writing tape mark on 'device name'
.JUSTIFY
.P 0;^*Explanation:\* I2MOSS has received a message from the mag tape i/o
routines that an error occurred while writing a tapemark to the tape.
.P 0;^*User action:\* The accompanying message should indicate the cause of the
error. Check that the tape is still loaded, check that the tape unit is online,
check that that tape is not write-protected. If the problem continues, notify
the system manager. 
.NO JUSTIFY
.BLANK
.LEFT MARGIN -4
.PAGE
.BLANK
^*--------------------------------------------------------------------------------\*
.HL 2 ^^^*MESSAGES (fatal)\*
.BLANK
.JUSTIFY
These messages indicate a fatal error in processing which has resulted in
immediate program termination and may indicate an error in the program itself.
It is most unlikely that the output file will be correctly processed.
Generally, in the event of a processing error I2MOSS will delete the MOSS
output file before calling exit, (unless writing to magnetic tape). 
.NO JUSTIFY
.BLANK
.LEFT MARGIN+4
.BLANK
.TEST PAGE 12
.I -4;INSUFBUF, insufficient coordinate buffer space for IFF feature FSN 'integer' ('integer')
.JUSTIFY
.P 0;^*Explanation:\* I2MOSS buffers up all the coordinates from all IFF ST
entries for a single IFF feature before outputting to MOSS file. The specified
feature has more than 50000 points. There is insufficient internal buffer
space for I2MOSS to hold any more points.
.P 0;^*User action:\* Check that this is a valid IFF feature. If it is then it
will have to be split into smaller features none of which exceed 50000 points. 
.NO JUSTIFY
.LEFT MARGIN-4
.PAGE
^*--------------------------------------------------------------------------------\*
.HL 2 ^^^*MESSAGES (other)\*
.BLANK
.JUSTIFY
.FILL
.P 0;In addition to the above messages which are generated by I2MOSS itself,
other messages may be produced by the command line interpreter (CLI) and by
Laser-Scan libraries. In particular, messages may be generated by the IFF
library. These are introduced by '%IFF' and are documented in the IFF library
users' guide. In most cases IFF errors will be due to a corrupt input file, and
this should be the first area of investigation. If the cause of the error
cannot be traced by the user and Laser-Scan are consulted, then the input file
should be preserved to facilitate diagnosis.
.NO JUSTIFY
