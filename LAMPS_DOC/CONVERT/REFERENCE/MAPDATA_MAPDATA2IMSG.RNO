.SUBTITLE MESSAGES (SUCCESS)

.!******************************************************************************
.PAGE
^*--------------------------------------------------------------------------------\*
.HL     2 ^^^*MESSAGES (SUCCESS)\*

These messages are used to   indicate that the program   has
succeeded in performing some action, and  do not require any
user action.

.LM +4

.NOJUSTIFY;.TP 10;.P -4
NORMAL, successful function return
.JUSTIFY

.P0; ^*Explanation:\*
This message is used internally by the program for debugging purposes
and will not normally appear to users.
.P0; ^*User action:\*
None.
.LM -4
.SUBTITLE MESSAGES (INFORMATIONAL)

.!******************************************************************************
.PAGE
^*--------------------------------------------------------------------------------\*
.HL     2 ^^^*MESSAGES (INFORMATIONAL)\*

These   messages  give information   only,    and require no
immediate action by  the  user.  They  are  used to  provide
information on  the  current  state  of the  program, or  to
supply explanatory  information in support  of  a warning or
error message.

.LM +4

.NOJUSTIFY;.TP 10;.P -4
FCFND, 'integer' feature code'(s)' found in parameter file
.JUSTIFY

.P0; ^*Explanation:\*
This message informs the user that the parameter file has been successfully
read, and feature codes found.
.P0; ^*User action:\*
None.

.NOJUSTIFY;.TP 10;.P -4
IFFOPN, Created output IFF file 'file-spec'
.JUSTIFY

.P0; ^*Explanation:\*
This message informs the user that the IFF file has been successfully 
created and opened for write.
.P0; ^*User action:\*
None.

.NOJUSTIFY;.TP 10;.P -4
LINEINPAR, line 'number' of parameter file
.JUSTIFY

.P0; ^*Explanation:\*
This message always appears after an error has occurred while decoding a line 
in the parameter file, and it informs the user of the offending line number. 
The previous message will have been generated either by LSLLIB or by the 
program itself, and the line in question will be ignored.
.P0; ^*User action:\*
If the error message was generated by LSLLIB, it most likely indicates an 
error in the parameter file which should be amended. Otherwise, see the 
relevant error message explanation.

.NOJUSTIFY;.TP 10;.P -4
NOFRT, no FRT file has been specified
.JUSTIFY

.P0; ^*Explanation:\*
This message will appear in the absence of /FRT on the command line, or if
/NOFRT was specified.
.P0; ^*User action:\*
This will result in a IFF file containing line and symbol features that only
have default feature codes. If a comprehensive mapping from MapData feature
code to IFF feature code is required, the user should supply an accurate
parameter file and FRT.

.NOJUSTIFY;.TP 10;.P -4
OPNFRT, FRT file 'filename' opened for read
.JUSTIFY

.P0; ^*Explanation:\*
This message informs the user that the FRT file has been successfully
opened for read. This message will be displayed when the /LOG qualifier 
is selected.
.P0; ^*User action:\*
None.

.NOJUSTIFY;.TP 10;.P -4
OPNPAR, PARAMETER file 'filename' opened for read
.JUSTIFY

.P0; ^*Explanation:\*
This message informs the user that the parameter file has been successfully
opened for read. This message will be displayed when the /LOG qualifier 
is selected.
.P0; ^*User action:\*
None.
.LM -4
.SUBTITLE MESSAGES (WARNING)

.!******************************************************************************
.PAGE
^*--------------------------------------------------------------------------------\*
.HL     2 ^^^*MESSAGES (WARNING)\*

These messages are  output when an error has   occurred that
can be corrected immediately by the user or that the program
will attempt to overcome.

.LM +4

.NOJUSTIFY;.TP 10;.P -4
BADATTCODE, attribute code 'code' out of range ('min' to 'max')
.JUSTIFY

.P0; ^*Explanation:\*
An invalid IFF attribute code (outside the given range) has been read either
from the command line or from the parameter file. If the attribute code has
been read from the parameter file, the LINEINPAR message indicating the
offending line number will follow, and the program will continue to read the
file, ignoring this line. Otherwise program execution will terminate.
.P0; ^*User action:\*
For a parameter file error, amend the attribute code on the relevant line in
the file, and for a command line error, respecify the command using an
appropriate attribute code. The program can then be run again.

.NOJUSTIFY;.TP 10;.P -4
BADFC, feature code 'fc' out of range ('min' to 'max')
.JUSTIFY

.P0; ^*Explanation:\*
An invalid feature code (outside the given range) has been read from the 
parameter file. The LINEINPAR message indicating the parameter file line
number will follow, and the program will continue to read the file, ignoring
this line.
.P0; ^*User action:\*
Amend the feature code on the relevant line in the parameter file, and if
necessary run the program again.

.NOJUSTIFY;.TP 10;.P -4
BADMDCODE, invalid MAPDATA feature code 'string'
.JUSTIFY

.P0; ^*Explanation:\*
An invalid MAPDATA feature code has been read from the 
parameter file. The LINEINPAR message indicating the parameter file line
number will follow, and the program will continue to read the file, ignoring
this line.
.P0; ^*User action:\*
Amend the MAPDATA feature code on the relevant line in the parameter file,
and if necessary run the program again.

.NOJUSTIFY;.TP 10;.P -4
ERRFNDFC, could not find FC 'number' in FRT file
.JUSTIFY

.P0; ^*Explanation:\*
The IFF feature code, (read from the parameter file) could not be found 
in the FRT file. This error may be caused either by entering an incorrect
FC entry in the parameter file, or by specifying an incorrect FRT file. The
program will use the relevant default feature code.
.P0; ^*User action:\*
Check the FC in the parameter file, and the specification of the FRT file.

.NOJUSTIFY;.TP 10;.P -4
FCDEFAULT, default FC used for feature code 'code' at line 'number'
.JUSTIFY

.P0; ^*Explanation:\*
The MAPDATA feature at the given line has a default feature code assigned
as the MAPDATA code has not been given in the supplied parameter file.
.P0; ^*User action:\*
Amend the parameter file if required.

.NOJUSTIFY;.TP 10;.P -4
FEATNOTCURV, Curved feature with FC 'code' not graphical type 6
.JUSTIFY

.P0; ^*Explanation:\*
The CODE entry in the parameter file defined the reported feature code to be
interpreted as a predominantly curved feature and to insert control points to
constraint the shape. However, the feature code given was not defined as being
of graphical type 6 (interpolated curve) in the FRT.
.P0; ^*User action:\*
This warning is to make the user aware of possible conflicts. If this is what
was intended then this message can be ignored.

.NOJUSTIFY;.TP 10;.P -4
FEATNOTSTR, Straight feature with FC 'code' not graphical type 1 or 12
.JUSTIFY

.P0; ^*Explanation:\*
The CODE entry in the parameter file defined the reported feature code to be
interpreted as a predominantly straight feature and to interpolate the curve
points into the feature. However, the feature code given was not defined as
being of graphical type 1 (linear) or 12 (area) in the FRT.
.P0; ^*User action:\*
This warning is to make the user aware of possible conflicts. If this is what
was intended then this message can be ignored.

.NOJUSTIFY;.TP 10;.P -4
NOSTRING, cannot read character string
.JUSTIFY

.P0; ^*Explanation:\*
A character string cannot be read where expected from the parameter file. A
character string in this context may be an attribute name, or a MAPDATA
feature code. The LINEINPAR message indicating the parameter file line number
will follow, and the program will continue to read the file, ignoring this
line.
.P0; ^*User action:\*
Edit the parameter file to include the attribute name or MAPDATA feature code
where expected, and if necessary run the program again.

.NOJUSTIFY;.TP 10;.P -4
NOTLINEFTR, FC 'fc' is not defined as a linear feature at line 'number'
.JUSTIFY

.P0; ^*Explanation:\*
The feature found on the reported line has more than one point and yet was
not assigned a linear feature code (with Graphical Type 1 or 6). The only
exception to this is when a two point feature is assigned to be a scalable
symbol and this is done by mapping the MapData feature code onto and IFF
feature code which has a Graphical Type of 8.
.P0; ^*User action:\*
Check the FC in the parameter file, and the specification of the FRT file.

.NOJUSTIFY;.TP 10;.P -4
NOTSYMBFTR, FC 'fc' is not defined as a symbol feature at line 'number'
.JUSTIFY

.P0; ^*Explanation:\*
The feature found on the reported line has only one point and yet was not
assigned mapping onto a symbol feature (with Graphical Type 7).
.P0; ^*User action:\*
Check the FC in the parameter file, and the specification of the FRT file.

.NOJUSTIFY;.TP 10;.P -4
TOOMNYDEFS, Too many parameter file definitions. Maximum is 'number'
.JUSTIFY

.P0; ^*Explanation:\*
Each `CODE' line entry which gives a MapData feature code to IFF feature code
mapping is stored in an array and this limit has been exceeded. The maximum
number permitted is as shown and any definitions beyond this number will be
ignored. The program will continue as normal.
.P0; ^*User action:\*
Please contact Laser-Scan and ask if this limit can be increased.

.NOJUSTIFY;.TP 10;.P -4
UNKCMD, unknown command "'command'"
.JUSTIFY

.P0; ^*Explanation:\*
The given command in the parameter file was not recognised. The LINEINPAR 
message indicating the parameter file line number will follow, and the program 
will continue to read the file, ignoring this line.
.P0; ^*User action:\*
Check the reported command in the parameter file and ensure that it is
defined and used correctly.
.LM -4
.SUBTITLE MESSAGES (ERROR)

.!******************************************************************************
.PAGE
^*--------------------------------------------------------------------------------\*
.HL     2 ^^^*MESSAGES (ERROR)\*

These  messages indicate an  error in processing  which will
cause  the program to terminate. The most likely  causes are
a   corrupt or otherwise  invalid  input file,  or an  error
related to command line processing and file manipulation.

.LM +4

.NOJUSTIFY;.TP 10;.P -4
BADTOLS, All smoothing tolerances are 0.0 - specify at least one
.JUSTIFY

.P0; ^*Explanation:\*
The Akima smoothing tolerances CURVE__SEPARATION, CURVE__CHORD and 
CURVE__DEVIATION were all zero. At least one must be specified for the
smoothing to work.
.P0; ^*User action:\*
Run the program again with correct values.

.NOJUSTIFY;.TP 10;.P -4
BADVALUE, Bad value given to qualifier or keyword command 'name'
.JUSTIFY

.P0; ^*Explanation:\*
The value given to the reported qualifier or parameter file keyword is
unreasonable.
.P0; ^*User action:\*
Run the program again with a sensible value.

.NOJUSTIFY;.TP 10;.P -4
ERRCLOPAR, error closing parameter file 'file-spec'
.JUSTIFY

.P0; ^*Explanation:\*
The parameter file could not be closed. An additional LSLLIB message will 
follow, giving the reason for the failure. If this is due to a system error, 
the system error message will also appear. The program exits immediately.
.P0; ^*User action:\*
Ascertain the cause of the failure from the messages given, and take the
appropriate remedial action. If the error is due to a serious problem such as
a system failure, the System Manager should be informed. Once the problem has
been solved, you can run the program again.

.NOJUSTIFY;.TP 10;.P -4
ERROPNFRT, error reading FRT file 'filename'
.JUSTIFY

.P0; ^*Explanation:\*
An error occurred while reading in the FRT file. A message 
output by the Feature Representation Library (FRTLIB) will appear before this 
message, giving further information as to what has gone wrong. For example, 
the specified FRT file may not exist, or it may be in another directory.
.P0; ^*User action:\*
Dependent upon the associated error messages.

.NOJUSTIFY;.TP 10;.P -4
ERROPNPAR, error opening parameter file 'filename'
.JUSTIFY

.P0; ^*Explanation:\*
The parameter file could not be opened. An additional LSLLIB message will 
follow, giving the reason for the failure. If this is due to a system error, 
the system error message will also appear. The program exits immediately.
.P0; ^*User action:\*
Ascertain the cause of the failure from the messages given. There may be a 
simple remedy, e.g. a change in the directory specification. Alternatively, 
this error could be due to a more serious problem such as a system failure, 
in which case the System Manager should be informed. Once the problem has been 
solved, you can run the program again.

.NOJUSTIFY;.TP 10;.P -4
ERRRDPAR, error reading from parameter file 'file-spec' at line 'number'
.JUSTIFY

.P0; ^*Explanation:\*
The given line could not be read from the parameter file. An additional
LSLLIB message will follow, giving the reason for the failure. If this is due
to a system error, the system error message will also appear. The program
exits immediately.
.P0; ^*User action:\*
Ascertain the cause of the failure from the messages given, and take the
appropriate remedial action. If the error is due to a serious problem such as
a system failure, the System Manager should be informed. Once the problem has
been solved, you can run the program again.

.NOJUSTIFY;.TP 10;.P -4
NOCOORD, no valid coordinate entries at line 'number'
.JUSTIFY

.P0; ^*Explanation:\*
There were no valid coordinate entries in the given MAPDATA feature.
.P0; ^*User action:\*
Check the MAPDATA file and correct the errors.

.NOJUSTIFY;.TP 10;.P -4
NOPARFC, no valid entries in parameter file
.JUSTIFY

.P0; ^*Explanation:\*
There were no valid entity or FC entries in the given parameter file.
.P0; ^*User action:\*
Check the parameter file and correct the errors.

.NOJUSTIFY;.TP 10;.P -4
OUTBUFFULL, Coordinate buffer full - limit of 'number' reached
.JUSTIFY

.P0; ^*Explanation:\*
The output buffer which holds the coordinates has filled up and the program
will stop immediately. The current size of this buffer is as reported.
.P0; ^*User action:\*
Contact Laser-Scan and request if this limit can be increased.

.NOJUSTIFY;.TP 10;.P -4
TWOVALUES, Error in qualifier /OFFSET - two values required
.JUSTIFY

.P0; ^*Explanation:\*
The /OFFSET qualifier requires two values, one for the x and one for the y
coordinate of the origin offset. The format for this qualifier is
/OFFSET=(x,y) where x and y are real numbers.
.P0; ^*User action:\*
When using the /OFFSET qualifier, ensure that two values are always given.

.NOJUSTIFY;.TP 10;.P -4
UNACREIFF, Unable to create specified IFF file 'file-spec'
.JUSTIFY

.P0; ^*Explanation:\*
It was not possible to open the IFF file as specified. Further information
should be obtainable from the adjoining system message.
.P0; ^*User action:\*
Repeat the specification after taking notice of the IFFLIB error messages.

.NOJUSTIFY;.TP 10;.P -4
UNAOPN, Unable to open MAPDATA file 'file-spec'
.JUSTIFY

.P0; ^*Explanation:\*
The MAPDATA file could not be opened. An additional LSLLIB message
will follow, giving the reason for the failure. If this is due to a system
error, the system error message will also appear.
.P0; ^*User action:\*
Ascertain the cause of the failure from the messages given. There may be a 
simple remedy, e.g. a change in the directory specification. Alternatively, 
this error could be due to a more serious problem such as a system failure, 
in which case the System Manager should be informed. Once the problem has been 
solved, you can run the program again.

.NOJUSTIFY;.TP 10;.P -4
UNKATTCODE, cannot find attribute code 'code'
.JUSTIFY

.P0; ^*Explanation:\*
An IFF attribute code specified either on the command line or in the
parameter file cannot be found in the ACD tables. The message immediately
preceding this one will give further information as to why the code was not
recognised. Program execution will terminate.
.P0; ^*User action:\*
If the attribute code was specified on the command line, respecify the command
line using the correct code. If the attribute code was incorrectly specified
in the parameter file, amend the attribute code in the file. Run the program
again.

.NOJUSTIFY;.TP 10;.P -4
UNKATTNAME, cannot find attribute name 'name'
.JUSTIFY

.P0; ^*Explanation:\*
An IFF attribute name specified either on the command line or in the
parameter file cannot be found in the ACD tables. The message immediately
preceding this one will give further information as to why the name was not
recognised, and the NOFRT message may follow. Program execution will
terminate.
.P0; ^*User action:\*
If the NOFRT message indicates that an FRT file is required, respecify the
command line with the /FRT qualifier. If the /FRT qualifier is used, ensure
that the appropriate ACD definition appears in the FRT file. If the attribute
name was specified on the command line, respecify the command line using the
correct name. If the attribute name was incorrectly specified in the parameter
file, amend the attribute name in the file. Run the program again.
.LM -4
.SUBTITLE MESSAGES (OTHER)

.!******************************************************************************
.PAGE
^*--------------------------------------------------------------------------------\*
.HL     2 ^^^*MESSAGES (OTHER)\*

In addition to the above messages which are generated by the
program itself,   other messages  may  be   produced by  the
command line interpreter (CLI) and by  Laser-Scan libraries.
In particular, messages may be  generated by the IFF library
and  by the  Laser-Scan  I/O library,  LSLLIB.  IFF  library
messages are introduced by   '%IFF' and are  documented in
the IFF library users' guide. In most cases IFF errors will
be due to a corrupt input file, and this should be the first
area of investigation. If the  cause of  the error cannot be
traced by the  user, and  Laser-Scan are consulted, then the
output  file should  be  preserved to  facilitate diagnosis.
LSLLIB  messages  are  introduced  by    '%LSLLIB' and are
generally self-explanatory.  They are  used  to  explain the
details of program generated errors.
