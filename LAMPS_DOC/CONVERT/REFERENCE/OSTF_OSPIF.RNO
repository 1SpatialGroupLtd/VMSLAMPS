.SUBTITLE UTILITY OSPIF
.PAGE
.LM 0
.TP 10
.P 0
^*--------------------------------------------------------------------------------\*
.HL 1 ^^^*UTILITY OSPIF\*

.TP 10
.P 0
^*--------------------------------------------------------------------------------\*
.HL 2 ^^^*FUNCTION\*

.LM +10

.P 0
OSPIF is a program for printing out the contents of an IFF file in summary 
format, and is useful for checking that a map has been successfully coded and 
formatted. The information produced includes the identity of the map sheet, 
feature codes, descriptions of texts, and start and end points of each feature. 

.LM -10

.TP 10
.P 0
^*--------------------------------------------------------------------------------\*
.HL 2 ^^^*FORMAT\*

.LM +10

.P 0
$ OSPIF IFF-file-spec 

.BLANK
.NOFILL
^*Command qualifiers                       Defaults\*

/[NO]FC[=integer]                        All feature codes
/FRT=file-spec                           No FRT file read
/[NO]FSN[=integer]                       All feature serial numbers
/[NO]KEEP[=file-spec]                    /NOKEEP
/[NO]PRINT                               /NOPRINT
/[NO]TYPE                                /TYPE
.FILL

.LM -10

.TP 10
.P 0
^*--------------------------------------------------------------------------------\*
.HL 2 ^^^*PROMPT\*

.LM +10

.NO FILL
__IFF-file:      input-file-spec
.FILL

.LM -10

.TP 10
.P 0
^*--------------------------------------------------------------------------------\*
.HL 2 ^^^*PARAMETERS\*

.LM +10
 
.P -10;input-file-spec

.P -2;- specifies the IFF file which is to be printed. Any part of the
file specification which is not supplied will be taken from the default
specification 'LSL$IF:IFF.IFF'. 

.LM -10

.TP 10
.P 0
^*--------------------------------------------------------------------------------\*
.HL 2 ^^^*COMMAND QUALIFIERS\*

.LM +10

.TP 8
.P -10;/FC[=integer]
.BR
.I -10;/NOFC
.P -2;-#enables selection of a range of feature codes to be output. 
Either a single feature code or a range may be specified - multiple 
ranges are not allowed. /FC by itself selects all feature codes (the default). 
Feature codes must lie in the range 0 to 32767, and up to 1024 are allowed. 
Note, however, that the feature code table can only cope with feature codes in 
the range 0 to 1000. Any features in the IFF file with codes outwith this range 
will be ignored, and warning messages will appear.

.TP 8
.P -10;/FRT=file-spec
.P -2;-#causes an FRT file, containing commands to set up an ACD common block, 
to be read in and obeyed. These definitions will then be used to identify any 
AC codes encountered and reported. If no FRT file is specified, then  only the 
default AC values will be identified, any others will be described by a '?' in 
the appropriate position in the output.
 
.TP 8
.P -10;/FSN[=integer]
.BR
.I -10;/NOFSN
.P -2;-#enables selection of a range of feature serial numbers to be output. 
Either a single feature serial number or a range may be specified - multiple 
ranges are not allowed. /FSN by itself selects all features (the default). 
Feature serial numbers must lie in the range 1 to 65535, and up to 1024 are 
allowed. 

.TP 8
.P -10;/KEEP[=file-spec]
.BR
.I -10;/NOKEEP
.P -2;-#causes the output to be written to the given file-spec. The default
file-spec is PIFFILE.TMP

.TP 8
.P -10;/PRINT
.BR
.I -10;/NOPRINT
.P -2;-#causes the output to be spooled. That is, it is written 
to the file PIFFILE.TMP, and printed. When the printing has completed, the 
file is deleted. 

.TP 8
.P -10;/TYPE
.BR
.I -10;/NOTYPE
.P -2;-#causes the output to be written to the terminal, and is the default 
action.

.LM -10

.TP 10
.P 0
^*--------------------------------------------------------------------------------\*
.HL 2 ^^^*RESTRICTIONS\*

.LM +10

.LIST 'o'
.LE
/KEEP, /PRINT and /TYPE are mutually exclusive
.END LIST

.LM -10

.TP 10
.P 0
^*--------------------------------------------------------------------------------\*
.HL 2 ^^^*DESCRIPTION\*

.LM +10

.P 0
After the command line has been decoded, the relevant information is read from 
the feature code file (see below). The program then reads through the IFF file 
sequentially, printing the relevant 
information for each feature. Whenever a new feature code is encountered, a 
new header with the feature code and description is printed. Information from 
the map header is summarised at the start of the output, and some totals given 
at the end.

.P 0
OSPIF will only accept IFF files containing type 2, 3 or 4 MH entries.
If the map header is type 3, the positions of the BGI, job number and
capture scale are obtained from the translation table LSL$OS__MH__TABLE, and
the values will be read from the header for inclusion in the display.
The Eastings, Northings and storage scale will be taken from the map
descriptor. Refer to the IFFOSTF DATA PREPARATION section for details on how
to set up the translation table.

.P 0
IFF ZS (3-d string) entries are treated like ST (2-d string) entries, the 
heights being ignored. Similarly, CB (co-ordinate blocks with variable numbers 
of co-ordinates and per point attributes) entries will be treated like ST 
entries, with any heights and attributes being ignored.  Composite texts (i.e. features which contain 
Text Status (TS) entries) are treated like individual text features, except 
that the feature serial number is the same for each component, and the number 
of components is given at the end of the feature.

.BLANK
.HL 3 ^*Feature Code Names\*

.P 0
OSPIF outputs the name of each feature code as it encounters it (eg 'Name' or 
'Antiquity symbol'). It obtains this information from a text file 
pointed to by the logical name LSL$OS__CODES. Care must be taken to change this 
file when amendments are made to FRT files.

.P 0
Each line in the file is of fixed format, and consists of four 4-character 
fields followed by a 28-character field, thus :-

.P 0
#####_<fc_>#####_<type_>#####_<layer_>#####_<code_>#####_<description_>

.BLANK
.NOFILL
where	_<fc_> is the feature code
	_<type_> is the feature type 
	     1 and 2 for lines
	     3 for names
	     5 for 1-point symbols
	     6 for 2-point symbols
	     7 for scaled symbols
	_<layer_> is the layer number and is ignored
	_<code_> is an OS specific code which is ignored
	_<description_> is the feature code description
.FILL

.P 0
An example follows :-

.BLANK
.NOFILL
   1   1   1   1Building (public)
  18   2   1  12Railway (disused)
  28   3   1   0Name
  40   5   1  10Telephone post/pillar (GPO)
  48   6   1  23Elect pylon (standard)
  49   7   1   0Elect pylon (surveyed)
.FILL

.LM -10

.PAGE
.P 0
^*--------------------------------------------------------------------------------\*
.HL 2 ^^^*EXAMPLES\*
.KEEP
.BLANK
.NOFILL
$ ^*OSPIF/FRT=RON__ACD INFO__TEST<CR>\*
IFF file LSL$IF:INFO__TEST.IFF;0
FRT file LSL$FRT:RON__ACD.FRT
Job     0 Map Ref SV0000SW on 27-NOV-1987 11:48:50.32   
Reference corner       0,      0
BGI   0m.; storage scl 1:    0 data cap scl 1:    0

Section identification: created by IFROMTEXT at 15:01:42 on 26-NOV-87

Layer  1

Code   0 type 1 - Unknown feature type
  FSN   Size     Start - Coords       Final - Coords      PC
    1      1       0.00     0.00        0.00     0.00      0
AC found : Contour =         100
    2      1       0.00     0.00        0.00     0.00      0
AC found : Height = 101.123
    3      1       0.00     0.00        0.00     0.00      0
AC found : Contour =         200
    4      1       0.00     0.00        0.00     0.00      0
AC found : Height = -12.1

Layer  2

Code   0 type 1 - Unknown feature type
  FSN   Size     Start - Coords       Final - Coords      PC
    5      1       0.00     0.00        0.00     0.00      0
AC found : Contour =         -10
    6      1     234.57   948.40      234.57   948.40      0
    7      1       0.00     0.00        0.00     0.00      0
AC found : Secondary__FC =     0
    8      1       0.00     0.00        0.00     0.00      0
AC found : Contour =        1000
    9      1       0.00     0.00        0.00     0.00      0
AC found : Height = -100.582
   10      1       0.00     0.00        0.00     0.00      0
   11      1       0.00     0.00        0.00     0.00      0
   12      1       0.00     0.00        0.00     0.00      0
AC found : Contour =           0
   13      1       0.00     0.00        0.00     0.00      0
   14      0       0.00     0.00        0.00     0.00      0
AC found : Text =    13  "This is text"
   15      0       0.00     0.00        0.00     0.00      0
AC found : INT__EXAMPLE =         -11
   16      0       0.00     0.00        0.00     0.00      0
AC found : INTEGER__EXAMPLE =       1000

Layer  3

Code   0 type 1 - Unknown feature type
  FSN   Size     Start - Coords       Final - Coords      PC
   17      0       0.00     0.00        0.00     0.00      0
AC found : SECURITY__MARKER = 1

Total FSNs    17 (different    17); total points      13
 ELAPSED:    0 00:00:24.93  CPU: 0:00:09.85  BUFIO: 63  DIRIO: 17  FAULTS: 405 
$
.FILL

.LM +10

.P 0
This illustrates the use of an FRT file, containing AC defintions, when 
reporting on an IFF file containing AC entries. Some of the AC definitions 
above, such as CONTOUR, are default codes, while others, such as 
SECURITY__MARKER are defined in the specified FRT file.
.LM -10

.BLANK
.NOFILL
$ ^*OSPIF/KEEP=CCB1.LIS CCB1_<CR_>\*
%LSLLIB-I-IFFOPENED, DUA0:[OS.IFF]CCB1.IFF;1 opened for read
%OSPIF-I-CREOUT, output file CCB1.LIS created
 ELAPSED:    0 00:00:04.52  CPU: 0:00:03.40  BUFIO: 9  DIRIO: 21  FAULTS: 203 
$
.FILL

.LM +10

.P 0
When output is directed to a text file, a message confirming that the IFF file 
has been opened is output, followed by a message indicating that the output 
file has been created.

.LM -10

.BLANK
.NOFILL
$ ^*OSPIF/PRINT CCB1_<CR_>\*
%LSLLIB-I-IFFOPENED, DUA0:[OS.IFF]CCB1.IFF;1 opened for read
 ELAPSED:    0 00:00:05.23  CPU: 0:00:03.51  BUFIO: 9  DIRIO: 23  FAULTS: 199 
$
.FILL

.LM +10

.P 0
When the output is spooled and printed, only the message confirming that the 
IFF file has been opened is output.

.LM -10

.TP 50
.BLANK
.NOFILL
$ ^*OSPIF TEST/FC=28_<CR_>\*
IFF file LSL$IF:TEST.IFF;0
Job  3500 Map Ref TA9999   on 11-AUG-1987 13:07:31.32   
Reference corner  599000, 499000
BGI 100m.; storage scl 1: 2500 data cap scl 1: 1500

Section identification: Created by RJH as a text file

Layer  1

Code  28 type 5 - Name
  FSN   Size     Start - Coords    Ang  P S  C  Text
   45      5     611.62   860.16     0  6 1  1  IMPORTANT BUILDING BELOW ULC
   62     10     263.73   846.38    32  0 0  0  T
   62     10     270.42   850.32    28  0 0  0  h
   62     10     276.06   853.17    25  0 0  0  i
   62     10     280.18   855.01    22  0 0  0  s
   62     10     286.75   857.53    19  0 0  0     
   62     10     294.17   859.83    15  0 0  0  i
   62     10     298.55   860.93    12  0 0  0  s
   62     10     305.46   862.28     9  0 0  0     
   62     10     313.17   863.26     5  0 0  0  a
   62     10     320.56   863.69     1  0 0  0     
   62     10     328.32   863.61   357  0 0  0  b
   62     10     335.35   863.06   353  0 0  0  e
   62     10     342.32   862.08   350  0 0  0  n
   62     10     348.51   860.82   346  0 0  0  t
   62     10     354.62   859.20   343  0 0  0     
   62     10     361.99   856.75   339  0 0  0  t
   62     10     367.85   854.38   336  0 0  0  e
   62     10     374.21   851.35   332  0 0  0  x
   62     10     380.36   847.92   329  0 0  0  t
Composite text with 19 components
   63     24     198.41   663.98     0  0 0  0  This is a paragraph of text
   63     24     198.41   642.22     0  0 0  0  being used for testing
   63     24     198.41   620.46     0  0 0  0  transformations.  Note that 
   63     12     198.41   605.83     0  0 0  0  the point size of the text
   63     12     198.41   592.19     0  0 0  0  can change.
Composite text with 5 components

Layer 11

Total FSNs     3 (different     3); total points      25
 ELAPSED:    0 00:00:05.25  CPU: 0:00:03.61  BUFIO: 46  DIRIO: 29  FAULTS: 209 
$
.FILL

.LM +10

.P 0
In this example, only feature code 28 (text) has been selected for output. 
There are three features, two of which are composite texts. Note that the FSN 
is the same for each component, and a summary of the number of components is 
given at the end of the feature. Note the different angles for each component 
of FSN 62, and the change in point size for FSN 63. This file contains a grid 
in layer 11, but since the feature code for grid lines is not being output, 
only the heading appears.

.LM -10

.BLANK
.NOFILL
$ ^*OSPIF TESTERR2_<CR_>\*
IFF file LSL$IF:TESTERR2.IFF;0
Job  3500 Map Ref TA9999   on 11-AUG-1987 13:08:01.87   
Reference corner  599000, 499000
BGI 100m.; storage scl 1: 2500 data cap scl 1: 1500

Section identification: Created by RJH as a text file

Layer  1

Code  30 type 1 - Fence,wall (non road)
  FSN   Size     Start - Coords       Final - Coords      PC
    1      7     899.71    -0.00      999.90    74.12      0

Code  14 type 1 - Railway (narrow gauge)
  FSN   Size     Start - Coords       Final - Coords      PC
    2     15     999.61    62.30      904.69    -0.00      0

Code 993 type 0 - 
%OSPIF-W-NOTINTAB, FSN 3 has feature code 993 not in code table
%OSPIF-W-UNKFC, FSN 4 has unknown feature code 2000

Code   0 type 1 - Unknown feature type
  FSN   Size     Start - Coords       Final - Coords      PC
    5    178     177.44   404.49      177.44   404.49      0

Code  87 type 1 - CL Motorway roundabout
  FSN   Size     Start - Coords       Final - Coords      PC
    6    145     192.19   375.68      192.19   375.68     20

Code  29 type 1 - Fence,wall etc (road)
  FSN   Size     Start - Coords       Final - Coords      PC
    7     22     238.18   405.66      213.96   365.82     21

Code  21 type 1 - Road edge of carriageway
  FSN   Size     Start - Coords       Final - Coords      PC
    8     18     233.11   405.76      220.61   377.05     21
    9     33     185.94   448.63      232.23   414.75     21

Code  49 type 4 - Elect pylon (surveyed)
  FSN   Size     Start - Coords    Ang
%OSPIF-W-NULLVEC, FSN 10 has null alignment vector
%OSPIF-W-ZEROSIZE, FSN 10 is zero size scaled symbol
   10   0.00     254.69   427.15     0

Code  35 type 1 - Unsvyd pecks plotted
  FSN   Size     Start - Coords       Final - Coords      PC
   11     58     598.73   329.69      759.57   388.96      0

Code  28 type 5 - Name
  FSN   Size     Start - Coords    Ang  P S  C  Text
%OSPIF-W-NULLVEC, FSN 12 has null alignment vector
   12      5     611.62   860.16     0  6 1  1  IMPORTANT BUILDING

Total FSNs    10 (different    10); total points     480
 ELAPSED:    0 00:00:05.02  CPU: 0:00:02.71  BUFIO: 59  DIRIO: 16  FAULTS: 188 
$
.FILL

.LM +10

.P 0
This example illustrates an IFF file which contains several errors. FSN 3 has 
a feature code of 993 which does not appear in the feature code table on 
LSL$OS__CODES. The heading is output, but the feature is ignored. FSN 4 has a 
feature code of 2000 which outside the allowed range 0-1000, and so is 
ignored. Statistics for 
the feature are output, but a warning message also appears. FSN 10 is a 
scaled symbol with equal centre and aligning points. This results in the two 
warning messages, although the statistics do appear. Finally, FSN 12 has the 
same problem as FSN 10, its orientation point being equal to its locating 
point.

.LM -10
.NOKEEP
.!******************************************************************************
.! get the messages
.!
.REQUIRE "OSTF_OSPIFMSG.RNO"
