





*--------------------------------------------------------------------------------*



1  *DATA PREPARATION*

          In order to facilitate a flexible transfer of  data  between
          TDST  and  IFF  formats,  a  lookup table may be used.  This
          determines how TDST entities are translated into IFF feature
          codes.

          


          *----------------------------------------------------------------------*



          1.1  *The TDST2I parameter file

          The parameter file contains one lookup table :-

          Each line of the table is  prefixed  with  a  command  which
          identifies   the  entity  to  which  the  IFF  feature  code
          corresponds.  The lines are free-format,  so  the  order  of
          entries  matters,  but the actual position of entries on the
          line is not important.  Commands may be in  upper  or  lower
          case.

          A maximum of 1000 entries will be allowed  per  entity  type
          per parameter file.

          Any text starting with the "!" character is  regarded  as  a
          comment,  and  is  ignored.  Comments can appear on the same
          lines as commands, or on separate lines.

          There must always be a FRT file  given  with  the  parameter
          file  to  be  able  to  determine  the graphical type of the
          requested feature code, so that the IFF feature entries  and
          values may be set up correctly.

          If the FC could not be found in  the  FRT  file,  a  warning
          message  will  be  given and certain default graphical types
          will be used for the particular entity:  GT2 (clockwise arc)
          or  GT  3 (anticlockwise arc) for ARC entities, depending on
          whether the angle difference is negative (GT2)  or  positive
          (GT3);  GT  1  (linear)  for  POLY  entities; GT 8 (oriented
          symbol) for  POINT  entities  and  GT  10  (text)  for  TEXT
          entities.

          If the FC is found in the FRT file, its  graphical  type  is
          checked  against  the allowed GT's for the particular entity
          type, and if  the  GT  is  not  allowed,  the  same  default
          graphical  types  as  if  the  FC  were  not in the FRT file
          (above) will be imposed.  The allowed  graphical  types  for
          each   entity   type   are   listed  below  in  the  mapping

                                                                Page 2
*DATA PREPARATION*


          restrictions below.


          


          *----------------------------------------------------------------------*



          1.1.1  *The parameter table format* -

          The parameter file  determines  the  translation  from  TDST
          entities  into  IFF  features.  The entity types allowed for
          conversion to IFF are ARC, POINT, POLYGON and TEXT, and only
          these  are  allowed in the parameter file.  AREA, OBJECT and
          MULTIPOINT entities are ignored by  TDST2I,  and  just  read
          through.   It is assumed that the component features of AREA
          and OBJECT entities are repeated elsewhere in the TDST  file
          under  their  respective  entity  types.   There  is  no IFF
          equivalent to the MULTIPOINT entity.

          Each line is prefixed with the entity  type  command,  which
          must  be  one  of  ARC,  POINT,  POLY or TEXT as illustrated
          below.

          A line has one of the following forms :-
!
!
! Entity type      colour             style         IFF feature code
!
*ARC            colour number       line type          FC*
*POINT          colour number       symbol number      FC*
*POLY           colour number       line type          FC*
*TEXT           colour number       text inclination   FC*

          where the fields are :-

            *line type *- the line  type  number  in  the  TDST  file,
                        corresponding  to the IFF pattern index in the
                        FRT file matching the parameter file.

            *symbol number *- the TDST symbol number, coresponding  to
                        the  IFF  symbol FC in the FRT (and SRI files)
                        associated with the parameter file.

            *inclination index *- the TDST inclination (equivalent  to
                        text font) corresponding to the IFF text FC in
                        the FRT (and TRI files)  associated  with  the
                        parameter file.

            *FC *- the IFF feature code.

          All numerical entries must be non-negative, and  all  fields
          must be present.

                                                                Page 3
*DATA PREPARATION*


          Text heights will be written to IFF TH entries (in  mm./100)
          from  the  TDST  text  height  field, (ENABLE HEIGHT will be
          required in LITES2).

          


          *----------------------------------------------------------------------*



          1.2  *Mapping restrictions between  TDST  entities  and  IFF
               features*

          The mapping  between  TDST  entities  and  IFF  features  is
          restricted  by the nature of the TDST entity types and their
          associated IFF graphical types.  The following is a list  of
          TDST entity types that may correspond to IFF grapical types.

               *IFF Graphical Types                TDST Entities*

               1 = LINEAR                         POLY
               2 = CLOCKWISE ARC                  ARC
               3 = ANTICLOCKWISE ARC              ARC
               4 = CIRCUMCIRCLE ARC               ARC
               5 = FULL CIRCUMCIRCLE              ARC
               6 = INTERPOLATED CURVE             POLY
               7 = UNORIENTED SYMBOL              POINT
               8 = ORIENTED SYMBOL                POINT
               9 = SCALED SYMBOL                  POINT
               10 = TEXT                          TEXT
               11 = SYMBOL STRING                 POLY
               12 = FILL AREA                     POLY


          The following is the summary  of  the  mapping  restrictions
          from TDST entity types to IFF graphical types :-

               *TDST Entities                      IFF Features (GT)*

               ARC                                CLOCKWISE ARC (2)
                                                  ANTICLOCKWISE    ARC
          (3)
                                                  CIRCUMCIRCLE ARC (4)
                                                  FULL CIRCUMCIRCLE
          (5)
               POINT                              UNORIENTED    SYMBOL
          (7)
                                                  ORIENTED SYMBOL (8)
                                                  SCALED SYMBOL (9)
               POLY                               LINEAR (1)
                                                  INTERPOLATED   CURVE
          (6)
                                                  SYMBOL STRING (11)
                                                  FILL AREA (12)
               TEXT                               TEXT (10)

                                                                Page 4
*DATA PREPARATION*


          


          *----------------------------------------------------------------------*



          1.3  *Reading of parameter file*

          TDST2I utilises the  library,  DSTPARLIB,  for  reading  the
          parameter  file.   Messages  output  from  this  library are
          prefixed by '%DSTPAR_'.  These messages are documented here.



                                                                Page 5
MESSAGES (WARNING)


*--------------------------------------------------------------------------------*



1.4  *MESSAGES (WARNING)*

These messages are output when an  error  has  occurred  that  can  be
corrected  immediately by the user or that the program will attempt to
overcome.

ERRFCGT, FC 'integer' has wrong GT 'integer' in FRT file for 'string'
    entity

    *Explanation:* The graphical type (GT) from the FRT file  for  the
    indicated feature code (FC) in the parameter file is inappropriate
    for the associated entity.  The program will use default graphical
    types dependent on the entity type.

    *User action:* Check the FC in the entity entry in  the  parameter
    file, and the specification of the FRT file.

ERRFNDFC, error finding FC 'number' in FRT file

    *Explanation:* Error encountered when looking for IFF feature code
    (FC),  read  from the parameter file, in the FRT file.  This error
    may be caused either by entering an  incorrect  FC  entry  in  the
    parameter  file,  or  by  specifying  an  incorrect FRT file.  The
    program will use default graphical types dependent on  the  entity
    type.

    *User action:* Check the FC in the entity entry in  the  parameter
    file, and the specification of the FRT file.

UNKPRICMD, unknown primary command parameter at line 'number'

    *Explanation:* The primary command read from the parameter file is
    not  recognised.   Valid primary parameter entries are ARC, POINT,
    POLY and TEXT.  The program will continue,  ignoring  the  current
    line.

    *User action:* Check the parameter file.



                                                                Page 6
MESSAGES (ERROR)


*--------------------------------------------------------------------------------*



1.5  *MESSAGES (ERROR)*

These messages indicate an error in processing which  will  cause  the
program  to  terminate.   The  most  likely  causes  are  a corrupt or
otherwise invalid input file, or an  error  related  to  command  line
processing and file manipulation.

ERROPNFRT, error reading FRT file 'filename'

    *Explanation:* There was an error reading the FRT file.

    *User action:* Check the FRT file and correct the error.

ERROPNPAR, error opening parameter file:  'filename'

    *Explanation:* The  parameter  file  could  not  be  opened.   The
    program  will  not  be able to continue upon the detection of this
    error.

    *User action:* Check the existence and  status  of  the  parameter
    file.

ERRRDPAR, error reading parameter file at line 'number'

    *Explanation:* There was an error reading the  parameter  file  at
    the  indicated  line  number.   The  program  may  not  be able to
    continue upon the detection of this error, or may give  unexpected
    results.

    *User action:* Check the parameter file at the indicated location.

NOPARFC, no valid entries in parameter file

    *Explanation:* There were no valid entity or  FC  entries  in  the
    given parameter file.

    *User action:* Check the parameter file and correct the errors.



                                                                Page 7
MESSAGES (OTHER)


*--------------------------------------------------------------------------------*



1.6  *MESSAGES (OTHER)*

In addition to the above messages which are generated by  the  program
itself, other messages may be produced by the command line interpreter
(CLI) and by Laser-Scan libraries.  In  particular,  messages  may  be
generated  by  the  IFF  library  and  by  the Laser-Scan I/O library,
LSLLIB.  IFF  library  messages  are  introduced  by  '%IFF'  and  are
documented  in the IFF library users' guide.  In most cases IFF errors
will be due to a corrupt input file, and this should be the first area
of  investigation.   If the cause of the error cannot be traced by the
user, and Laser-Scan are consulted, then the  output  file  should  be
preserved  to facilitate diagnosis.  LSLLIB messages are introduced by
'%LSLLIB' and  are  generally  self-explanatory.   They  are  used  to
explain the details of program generated errors.
