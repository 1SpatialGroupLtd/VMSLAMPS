



  *--------------------------------------------------------------------------------*



  0.1  *MESSAGES (SUCCESS)*

  These messages are used to indicate that the program has succeeded  in
  performing some action, and do not require any user action.

  NORMAL, successful function return

      *Explanation:* This message is used internally by the program  for
      debugging purposes and will not normally appear to users.

      *User action:* None.


                                                                  Page 2
  MESSAGES (INFORMATIONAL)


  *--------------------------------------------------------------------------------*



  0.2  *MESSAGES (INFORMATIONAL)*

  These messages give information only, and require no immediate  action
  by  the  user.   They  are  used to provide information on the current
  state of the program, or to supply explanatory information in  support
  of a warning or error message.

  BLOCKFND, number of BLOCK(symbol)s found:  'number'

      *Explanation:* This message informs the user of the  total  number
      of BLOCKs(symbols) found in the parameter file.  This message will
      be displayed when the /LOG qualifier is selected.

      *User action:* None.

  ENTITYFND, number of ENTITYs found:  'number'

      *Explanation:* This message informs the user of the  total  number
      of  ENTITYs  found  in  the  parameter file.  This message will be
      displayed when the /LOG qualifier is selected.

      *User action:* None.

  LAYERFND, number of LAYERs found:  'number'

      *Explanation:* This message informs the user of the  total  number
      of  LAYERs  found  in  the  parameter  file.  This message will be
      displayed when the /LOG qualifier is selected.

      *User action:* None.

  LTYPEFND, number of LTYPEs found:  'number'

      *Explanation:* This message informs the user of the  total  number
      of  LTYPEs  found  in  the  parameter  file.  This message will be
      displayed when the /LOG qualifier is selected.

      *User action:* None.

  OPNPAR, PARAMETER file 'name' opened for read

      *Explanation:* This message informs the user  that  the  parameter
      file  has been successfully opened for read.  This message will be
      displayed when the /LOG qualifier is selected.

      *User action:* None.


                                                                  Page 3
  MESSAGES (INFORMATIONAL)


  RDFRTERR, error reading FRT data

      *Explanation:* There was a problem reading the  FRT  data  in  the
      parameter  file.   This message is used internally and not seen by
      the the user.

      *User action:* Check the FRT or  parameter  file  and  correct  as
      necessary.

  STYLEFND, number of STYLEs found:  'number'

      *Explanation:* This message informs the user of the  total  number
      of  STYLEs  found  in  the  parameter  file.  This message will be
      displayed when the /LOG qualifier is selected.

      *User action:* None.


                                                                  Page 4
  MESSAGES (WARNING)


  *--------------------------------------------------------------------------------*



  0.3  *MESSAGES (WARNING)*

  These messages are output when an  error  has  occurred  that  can  be
  corrected  immediately by the user or that the program will attempt to
  overcome.

  COLNOTMAT, colours in PARAMETER and FRT files do not match, FC
      'number', colour 'number'

      *Explanation:* The colour specified by the entry in the  parameter
      file does not match that found in the FRT file.  The FC and colour
      number will be given in the message.  The  program  will  use  the
      colour  index  in  the  parameter  file  (i.e.   the  colour index
      explicitly specified by the  user)  for  that  particular  entity.
      This message may be turned off by use of the /QUIET qualifier.

      *User action:* Check the consistency  of  colour  fields  in  both
      PARAMETER and FRT file.

  ERRFNDFC, error finding FC 'number' in FRT file

      *Explanation:* Error finding IFF feature code (FC) in the FRT file
      having,  having  read  the FC from the parameter file.  This error
      may be caused either by having the wrong FC entry in the parameter
      file, or specifying the wrong FRT file.  The program will continue
      upon the detection of this error, but may incur other errors later
      when  trying  to  translate  this FC on encountering it in the IFF
      file.

      *User action:* Check the FC in the ENTITY entry in  the  parameter
      file, and the specification of the FRT file.

  UNKPRICMD, unknown primary command parameter at line 'number'

      *Explanation:* The primary command read from the parameter file is
      not  recognised.   Valid  primary  parameter entries are LAYER and
      ENTITY.  The program will continue ignoring the current line.

      *User action:* Check the parameter file.

  UNKSECCMD, unknown secondary command parameter at line 'number'

      *Explanation:* The secondary command read from the parameter  file
      is  not  recognised.   Valid secondary parameter entries are LINE,
      POINT, CIRCLE, ARC, TRACE, SOLID, TEXT, INSERT, and POLYLINE.  The
      program will continue ignoring the current line.

      *User action:* Check the parameter file.


                                                                  Page 5
  MESSAGES (WARNING)


  UNKTEXTCMD, unknown second TEXT command parameter at line 'number'

      *Explanation:* The secondary command read from the parameter  file
      for the TEXT command is not recognised.  Valid secondary parameter
      entries are SIZE.

      *User action:* Check the parameter file, and rerun the program.


                                                                  Page 6
  MESSAGES (ERROR)


  *--------------------------------------------------------------------------------*



  0.4  *MESSAGES (ERROR)*

  These messages indicate an error in processing which  will  cause  the
  program  to  terminate.   The  most  likely  causes  are  a corrupt or
  otherwise invalid input file, or an  error  related  to  command  line
  processing and file manipulation.

  ERROPNPAR, error opening parameter file:  'filename'

      *Explanation:* The  parameter  file  could  not  be  opened.   The
      program  will  not  be able to continue upon the detection of this
      error.

      *User action:* Check the existence and  status  of  the  parameter
      file.

  ERRRDENT, error reading ENTITY entry at line 'number'

      *Explanation:* Error encountered when reading ENTITY entry in  the
      parameter file.  This may be caused either by a missing field or a
      negative numerical  entry.   The  program  will  not  be  able  to
      continue upon the detection of this error.

      *User action:* Check the ENTITY entry in the parameter file.

  ERRRDLAY, error reading LAYER entry at line 'number'

      *Explanation:* Error encountered when reading LAYER entry  in  the
      parameter file.  This may be caused either by a missing field or a
      negative IFF LAYER number.   The  program  will  not  be  able  to
      continue upon the detection of this error.

      *User action:* Check the LAYER entry in the parameter file.

  ERRRDPAR, error reading parameter file at line 'number'

      *Explanation:* The indicated line number  of  the  parameter  file
      could  not be read.  The program will not be able to continue upon
      the detection of this error.

      *User action:* Check the parameter file at the indicated location.


                                                                  Page 7
  MESSAGES (ERROR)


  ERRRDTEXT, error reading TEXT entry at line 'number'

      *Explanation:* Error encountered when reading TEXT SIZE  entry  in
      the  parameter file.  This may be caused either by a missing field
      or a negative number.  The program will not be  able  to  continue
      upon the detection of this error.

      *User action:* Check the TEXT SIZE entry in the parameter file.

  ERRTEXTFONT, error in font entry in TEXT entry at line 'number'

      *Explanation:* There was an error in  the  font  supplied  in  the
      ENTITY  TEXT  entry.   This  may be caused either by a negative or
      unreadable number.  The program will not be able to continue  upon
      the detection of this error.

      *User action:* Check the TEXT entry in the parameter file.

  PARFILERR, error reading DXF parameter file

      *Explanation:* There was an error in the specified parameter  file
      rendering   it  unreadable.   Other  messages  will  give  further
      information and the line number.

      *User action:* Check the parameter file and correct the error.


                                                                  Page 8
  MESSAGES (OTHER)


  *--------------------------------------------------------------------------------*



  0.5  *MESSAGES (OTHER)*

  In addition to the above messages which are generated by  the  program
  itself, other messages may be produced by the command line interpreter
  (CLI) and by Laser-Scan libraries.  In  particular,  messages  may  be
  generated  by  the  IFF  library  and  by  the Laser-Scan I/O library,
  LSLLIB.  IFF  library  messages  are  introduced  by  '%IFF'  and  are
  documented  in the IFF library users' guide.  In most cases IFF errors
  will be due to a corrupt input file, and this should be the first area
  of  investigation.   If the cause of the error cannot be traced by the
  user, and Laser-Scan are consulted, then the  output  file  should  be
  preserved  to facilitate diagnosis.  LSLLIB messages are introduced by
  '%LSLLIB' and  are  generally  self-explanatory.   They  are  used  to
  explain the details of program generated errors.
