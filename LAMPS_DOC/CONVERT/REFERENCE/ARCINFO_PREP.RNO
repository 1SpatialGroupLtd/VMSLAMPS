.SUBTITLE DATA PREPARATION
.PAGE
.TP 10
.P 0
^*--------------------------------------------------------------------------------\*
.HL 1 ^^^*DATA PREPARATION\*

.LM +10

.TP 10
.P 0
^*----------------------------------------------------------------------\*
.HL 2 ^^^*Comparison of ARC/INFO and IFF\*

.P 0
IFF is a feature orientated data format - data is separated into features, and 
each feature represents one 'thing' on the map. An integer feature code is used
to say what type of thing it is that the feature represents. A feature might
thus be a contour, or a house, or a river, depending on the type of map
being digitised, and the way that the data is to be used.

.P 0
The ARC/INFO format shares this concept of a 'feature' but does not hold all
information relevant to a single feature in the same place within the dataset,
but rather separates the information into different sections so that, for
example, the coordinates of the points defining the feature are stored away
from any attribute information that the IFF feature might have. The contents
of these different sections are indexed by the internal EXPORT ID number,
which is cross-referenced to the IFF feature serial numbers and feature codes
in later tables.

.P 0
ARC/INFO has its own feature coding scheme whereby the FRT file is read and
any features unique in graphical type (GT), colour, width, size and secondary
code are assigned a sequential symbol number unique within the three major
ARC/INFO feature types of linear (ARC), symbol (LAB) and text (TXT). These are
cross-referenced back to IFF feature codes in later tables.

.P 0
It is essential that a feature representation table (FRT) file be supplied
to I2ARC with the IFF file, as the graphical type of any feature is of prime
importance in the correct placement of entries through the ARC/INFO file.

.TP 10
.P 0
^*----------------------------------------------------------------------\*
.HL 2 ^^^*Feature Translation\*

When converting from IFF to ARC/INFO, it is not possible to translate fully
some IFF graphical types, (the only features to be translated exactly are the
linear feature with GT 1 consisting simply of a string of coordinates, and the
text feature with GT 10 consisting of a character string, size, orientation
and position). These are listed below, together with their approximations.

.P 0
All arc (true arcs, not to be mistaken with the ARC/INFO definition of an arc)
and circle features (GTs 2, 3, 4, 5) in IFF are defined by three coordinates;
edge-centre-edge or three edge points. These must be interpolated sufficiently
to enable these features to be translated as simple linear features.

.P 0
Interpolated curves (GT 6) are considered to be a simple linear feature.

.P 0
Symbol features (GTs 7, 8, 9) in IFF may have size or orientation information
contained in the FRT file or in the IFF RO or TH entries, or a second defining
point. This information is lost in the translation to ARC/INFO which can only
consider a symbol as a simple entity.

.P 0
Symbol string features (GT 11) are considered to be simple linear features, 
and the symbols defining the vertices are lost.

.P 0
Fill area features (GT 12) are considered to be a closed linear feature, and 
any pattern fill information is lost.

.TP 10
.P 0
^*----------------------------------------------------------------------\*
.HL 2 ^^^*Preparation for data to be transferred between EXPORT and IFF\*

.P 0
It is quite likely that IFF will be used as the digitising format and the data
subsequently transferred to an EXPORT database. On the other hand, data may
be transferred from an EXPORT database to IFF for complex editing operations,
or for other spatial processing functions such as structuring or polygon
formation.
.P 0
Whatever the purpose for transferring data, the relationship between IFF
attributes and EXPORT attributes, if these are to be preserved, should be
defined.

.P 0
The implementation of this requires 
.LIST "o"
.LE; a parameter file defining attribute correlation, and
.LE; an FRT file (together with SRI and TRI files) containing an ACD section
.END LIST 0

.BL
The parameter file defines how the EXPORT attributes will be represented in
IFF AC entries. It is cross referenced with the ACD section in the FRT by
name or code to get its datatype. A mechanism also exists to specify whether the
attribute is to go into the AC text or value field. If it is to go into the text
field, the datatype in the ACD is ignored. If the datatype in the ACD conflicts
with the datatype of the attribute in the EXPORT file, a warning will be given
and the attribute ignored.

.P 0
In converting from ARC2I, the attributes in any coverage tables other than
the .AAT or .PAT will be ignored. Attributes in the .AAT and .PAT table will be
ignored unless the appropriate definitions are present in the parameter file. 
When transferring attributes, the .AAT and .PAT attribute information should
be in the same order as with the ARC and LAB sections respectively. The ID
numbers in the .PAT entries should match the ID number and order of the
corresponding points in the LAB section. If one attribute is wrong this may
throw the ordering out and cause the following points to be given no
attributes.

.P 0
When transferring data from EXPORT, ARC2I will only produce ST entries
unless the output revision level has been set to 1 within the system.
Text features will contain TH entries holding the text height. All features
will have the text/symbol bit in the FS entry set to the appropriate value to
indicate the feature type. All data will be output to layer 1 in the IFF file.

.TP 10
.P 0
^*----------------------------------------------------------------------\*
.HL 2 ^^^*The ARC2I parameter file\*

.P 0
This file contains three parts :-

.BLANK
.LIST 0
.DISPLAY ELEMENTS LL,")"
.LE; the default line, symbol and text feature codes, and
.LE; the attribute description table, and
.LE; the annotation feature codes
.END LIST 0


.BLANK
.HL 3 ^^^*The default feature codes\*
.P 0
The default feature codes are optional. If they are missing, the default
feature codes are 1, 2 and 3 for lines, symbols, and text respectively. These
defaults can be overridden using the commands DEF__LINE, DEF__SYMBOL and
DEF__TEXT in the parameter file to allow users to give these feature types
the feature codes of their choice.
.P 0
An example follows :-

.BLANK
.LITERAL
!
! Type         <fc>
!
DEF_LINE	10
DEF_SYMBOL	20
DEF_TEXT	30
!
.END LITERAL

.BLANK
.HL 3 ^^^*The attribute description table\*
.P 0
Each line of the table is prefixed with a command which identifies the line as
belonging to that table. The lines are free-format, so the order of entries
matters, but the actual position of entries on the line is not important. 
Any text starting with the "!" character is regarded as a comment, and is 
ignored. Comments can appear on the same lines as commands, or on 
separate lines. Note that commands may be in upper or lower case.
.!** and can be abbreviated to the shortest non-ambiguous form.

.P 0
The attribute description table describes the translations required to produce
IFF attributes from EXPORT attributes. Each line is prefixed with the ADT
command which tells the program how to translate a particular attribute.

.P 0
.TP 8
A line has one of the following two forms :-

.P 5
^*ADT#CODE###code###entry###field###Ename###Etable\*

.P 5
^*ADT#NAME###name###entry###field###Ename###Etable\*

.P 0
where the fields are :-

.LM +14

.P -9
^*ADT####\*-#the command ADT which states that this line is an entry in the
attribute description table. 

.I -9
^*CODE###\*-#the sub-command CODE which states that the attribute will be 
described by its IFF attribute code. 

.I -9
^*NAME###\*-#the sub-command NAME which states that the attribute will be
described by its IFF attribute name. 

.I -9
^*code###\*-#the IFF attribute code, an integer in the range 0 to 32767, 
as derived from the appropriate ACD entry in an FRT file.

.I -9
^*name###\*-#the IFF attribute name, as given by the appropriate ACD entry in 
an FRT file.

.I -9
^*entry##\*-#a command specifying which IFF entry the attribute is to be 
transferred to - 
the only valid command is 
.LIST 0," "
.LE; AC which specifies that an AC entry is to be used
.END LIST 0

.I -9
^*field##\*-#a sub-command to AC, specifying which field the attribute is to 
be transferred to - valid commands are either
.LIST 0," "
.LE; VALUE which specifies that the AC value field is to be used, or
.LE; TEXT# which specifies that the AC text# field is to be used
.END LIST 0

.I -9
^*Ename##\*-#the EXPORT attribute name, a string which can be up to 16
characters in length

.I -9
^*Etable#\*-#a sub-command which denotes which EXPORT table the entry is
referring to - the .AAT table or the .PAT table.
 Logically, the valid commands are either
.LIST 0," "
.LE; AAT which denotes this entry as referring to the .AAT table, or
.LE; PAT which denotes this entry as referring to the .PAT table
.END LIST 0
.LM -14
.BL
The purpose of the 'Etable' column is because attributes of the same name can
be used for lines as for symbols. They may even have different datatypes. In
this case, two entries should be given, one with this field having command
AAT and the other with command PAT. They should have different unique names or
codes to reference the datatype in the ACD section of the FRT.
.BL
If a code is specified, it should reflect the ACD table which the attribute
refers to. ACD table 1 entries range from 1000-1999, ACD table 2 entries range
from 2000-2999 and so on.
.BL

.TP 15
.P 0
An example follows :-
.LM -10
.BLANK
.LITERAL
!
!     NAME/CODE Group		AC VALUE/TEXT	EXPORT-att	EXPORT-table
!
ADT	NAME	MajorTwo	AC VALUE	MAJOR2		AAT
ADT	NAME	MinorTwo	AC VALUE	MINOR2		AAT
ADT	CODE	1050		AC TEXT		LINE		AAT
ADT	NAME	Spot		AC VALUE	SPOT		AAT
!
ADT	NAME	MinorTwo	AC VALUE	MINOR2		PAT
ADT	CODE	1120		AC TEXT		TYPE		PAT
ADT	NAME	XCoord		AC VALUE	X-COORD		PAT
ADT	NAME	YCoord		AC VALUE	Y-COORD		PAT
ADT	NAME	SiteId		AC TEXT		SITE-ID		PAT
ADT	NAME	SiteType	AC TEXT		SITE-TYPE	PAT
ADT	CODE	1230		AC VALUE	BEG-A		PAT
!
.END LITERAL
.LM +10


.BLANK
.HL 3 ^^^*The annotation feature codes\*
.P 0
Each line of the table is prefixed with a command which identifies the line as
belonging to that table. The lines are free-format, so the order of entries
matters, but the actual position of entries on the line is not important. 
Any text starting with the "!" character is regarded as a comment, and is 
ignored. Comments can appear on the same lines as commands, or on 
separate lines. Note that commands may be in upper or lower case.
.!** and can be abbreviated to the shortest non-ambiguous form.

.P 0
The annotation feature code table describes the lookup between text LEVEL and
SYMBOL numbers into IFF feature codes. Each line is prefixed with the ANNO
command which tells the program that a line is part of this table. A feature
code can be assigned to a text feature on the basis of its LEVEL code, SYMBOL
code or both.

.BLANK
.TP 8
A line has one of the following three forms :-

.P 5
^*ANNO###FC###fcode###LEVEL###lcode###SYMBOL###scode\*

.P 5
^*ANNO###FC###fcode###LEVEL###lcode\*

.P 5
^*ANNO###FC###fcode###SYMBOL###scode\*

.P 0
where the fields are :-

.LM +14
.P -9
^*ANNO###\*-#the command ANNO which states that this line is an entry in the
annotation feature code table.
.I -9
^*FC#####\*-#the sub-command FC which will be followed by the feature code to
be derived from the LEVEL code, SYMBOL code or both.
.I -9
^*fcode##\*-#the IFF feature code, an integer in the range 0 to 32767, to be
assigned to a feature with the corresponding LEVEL or SYMBOL codes.
.I -9
^*LEVEL##\*-#the LEVEL sub-command denotes that the feature code will be
assigned to text features with the following LEVEL code. If the SYMBOL command
is also given on this line, then the feature code can only be assigned if both
the LEVEL and SYMBOL codes match. If neither match in the whole table, the
default feature code is used.
.I -9
^*lcode##\*-#the value of the LEVEL code used to determine if this feature code
is to be assigned to a feature.
.I -9
^*SYMBOL#\*-#the SYMBOL sub-command denotes that the feature code will be
assigned to text features with the following SYMBOL code. If the LEVEL command
was also given on this line, then the feature code can only be assigned if both
the LEVEL and SYMBOL codes match. If neither match in the whole table, the
default feature code is used.
.I -9
^*scode##\*-#the value of the SYMBOL code used to determine if this feature
code is to be assigned to a feature.
.LM -14
.TP 10
.NOTE
The order of entries in the ANNO table is important. The program performs a
simple linear search through the table to assign feature codes on the basis of
a first match between LEVEL and SYMBOL codes. So if, for example, you required
an IFF feature code of 1001 to be assigned to features which have an ARC/INFO
LEVEL code of 2 and SYMBOL code of 5, but a feature code of 1002 to be assigned
to features with a LEVEL code of 2 irrespective of the SYMBOL code, then the
feature code 1001 must appear in the list first. If the feature code 1002 was
put in the table first, this would match everything with LEVEL code 2 and no
features would be assigned feature code 1001.
.END NOTE
.BLANK

.TP 15
.P 0
An example follows :-
.LM -10
.BLANK
.LITERAL
!
!       FC      fcode	LEVEL  lcode	SYMBOL   scode
!
ANNO	FC	1000	LEVEL	1
ANNO	FC	1001	LEVEL	2	SYMBOL	5
ANNO	FC	1002	LEVEL	2
ANNO	FC	1003	SYMBOL	3
ANNO	FC	1003	SYMBOL	6
ANNO	FC	1003	SYMBOL	7
!
.END LITERAL
.LM +10
.BLANK
The example also shows that the same feature code may be assigned on the basis
of different LEVEL or SYMBOL codes.

.BLANK
.TP 10
.P 0
^*----------------------------------------------------------------------\*
.HL 2 ^^^*The I2ARC parameter file\*

.P 0
This file is almost identical to the ARC2I parameter file but only contains
an attribute description table.

.BLANK
.HL 3 ^^^*The attribute description table\*
.P 0
Each line of the table is prefixed with a command which identifies the line as
belonging to that table. The lines are free-format, so the order of entries
matters, but the actual position of entries on the line is not important. 
Any text starting with the "!" character is regarded as a comment, and is 
ignored. Comments can appear on the same lines as commands, or on 
separate lines. Note that commands may be in upper or lower case.
.!** and can be abbreviated to the shortest non-ambiguous form.

.P 0
The attribute description table describes the translations required to produce
EXPORT attributes from IFF attribute. Each line is prefixed with the ADT
command which tells the program how to translate a particular attribute.

.P 0
.TP 8
A line has one of the following two forms :-

.P 5
^*ADT#CODE###code###entry###field###Ename\*

.P 5
^*ADT#NAME###name###entry###field###Ename\*

.P 0
where the fields are :-

.LM +14

.P -9
^*ADT####\*-#the command ADT which states that this line is an entry in the
attribute description table. 

.I -9
^*CODE###\*-#the sub-command CODE which states that the attribute will be 
described by its IFF attribute code. 

.I -9
^*NAME###\*-#the sub-command NAME which states that the attribute will be
described by its IFF attribute name. 

.I -9
^*code###\*-#the IFF attribute code, an integer in the range 0 to 32767, 
as derived from the appropriate ACD entry in an FRT file.

.I -9
^*name###\*-#the IFF attribute name, as given by the appropriate ACD entry in 
an FRT file.

.I -9
^*entry##\*-#a command specifying which IFF entry the attribute is to be 
transferred to - 
the only valid command is 
.LIST 0," "
.LE; AC which specifies that an AC entry is to be used
.END LIST 0

.I -9
^*field##\*-#a sub-command to AC, specifying which field the attribute is to 
be transferred to - valid commands are either
.LIST 0," "
.LE; VALUE which specifies that the AC value field is to be used, or
.LE; TEXT# which specifies that the AC text# field is to be used
.END LIST 0

.I -9
^*Ename##\*-#the EXPORT attribute name, a string which can be up to 16
characters in length

.LM -14
.BL
The difference between this and the ARC2I parameter file is the absence of the
'Etable' column because attributes of IFF line features automatically go into
the .AAT table and attributes of IFF symbol features go in the .PAT table.
.BL
The AC entry and its sub-commands TEXT and VALUE were included for consistency
with the ARC2I parameter file but are ignored. This way I2ARC can use an ARC2I
parameter file with minimal changes. This entry is not used because I2ARC
reads the ACD datatype from the FRT to determine which field to read the value
from. For example, if the ACD datatype is 'C' then the text is read from the
optional text string and the integer and real fields are ignored.

.BL
If a code is specified, it should reflect the ACD table which the attribute
refers to. ACD table 1 entries range from 1000-1999, ACD table 2 entries range
from 2000-2999 and so on.
.BL

.TP 15
.P 0
An example follows :-
.LM -10
.BLANK
.LITERAL
!
!     NAME/CODE Group		AC VALUE/TEXT	EXPORT-att
!
ADT	NAME	MajorTwo	AC VALUE	MAJOR2	
ADT	NAME	MinorTwo	AC VALUE	MINOR2
ADT	CODE	1050		AC TEXT
		LINE
ADT	NAME	Spot		AC VALUE	SPOT
ADT	NAME	MinorTwo	AC VALUE	MINOR2
ADT	CODE	1120		AC TEXT		TYPE
ADT	NAME	XCoord		AC VALUE	X-COORD
ADT	NAME	YCoord		AC VALUE	Y-COORD
ADT	NAME	SiteId		AC TEXT		SITE-ID
ADT	NAME	SiteType	AC TEXT		SITE-TYPE
ADT	CODE	1230		AC VALUE	BEG-A
!
.END LITERAL
.LM +10

.LM -10
.PAGE
An example ARC2I parameter file is given below, followed by the ACD section of
the FRT with which it is associated.
.BL
.LM 0
.LITERAL
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!
! ARC/INFO Parameter file for attribute conversion in ARC2I
!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!
! Default feature codes
!
!              <fc>
DEF_LINE	10
DEF_SYMBOL	20
DEF_TEXT	30
!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
! 
! Attribute Definitions
!
!     NAME/CODE Group		AC VALUE/TEXT	EXPORT-att	EXPORT-table
!
ADT	NAME	MajorOne	AC VALUE	MAJOR1		AAT
ADT	NAME	MinorOne	AC VALUE	MINOR1		AAT
ADT	NAME	MajorTwo	AC VALUE	MAJOR2		AAT
ADT	NAME	MinorTwo	AC VALUE	MINOR2		AAT
ADT	NAME	Line		AC TEXT		LINE		AAT
ADT	NAME	Spot		AC VALUE	SPOT		AAT
ADT	NAME	Type_aat	AC VALUE	TYPE		AAT
!
ADT	NAME	MajorOne	AC VALUE	MAJOR1		PAT
ADT	NAME	MinorOne	AC VALUE	MINOR1		PAT
ADT	NAME	MajorTwo	AC VALUE	MAJOR2		PAT
ADT	NAME	MinorTwo	AC VALUE	MINOR2		PAT
ADT	NAME	Type_pat	AC TEXT		TYPE		PAT
ADT	NAME	XCoord		AC VALUE	X-COORD		PAT
ADT	NAME	YCoord		AC VALUE	Y-COORD		PAT
ADT	NAME	SiteId		AC TEXT		SITE-ID		PAT
ADT	NAME	SiteType	AC TEXT		SITE-TYPE	PAT
ADT	NAME	BeginDate	AC VALUE	BEG-A		PAT
ADT	NAME	EndDate		AC VALUE	END-A		PAT
ADT	NAME	PhotoDates	AC TEXT		PHOTO-DATES	PAT
ADT	NAME	System		AC TEXT		SYSTEM		PAT
ADT	NAME	SubSystem	AC TEXT		SUBSYSTEM	PAT
ADT	NAME	Class		AC TEXT		CLASS		PAT
ADT	NAME	SubClass	AC TEXT		SUBCLASS	PAT
ADT	NAME	Modifier	AC TEXT		MODIFIER	PAT
ADT	NAME	LCCode		AC TEXT		LCCODE		PAT
ADT	NAME	LUCode		AC VALUE	LUCODE		PAT
ADT	CODE	1968		AC TEXT		F-1968		PAT
ADT	CODE	1973		AC TEXT		F-1973		PAT
ADT	CODE	1976		AC TEXT		F-1976		PAT
ADT	CODE	1980		AC TEXT		F-1980		PAT
ADT	CODE	1983		AC TEXT		F-1983		PAT
ADT	CODE	1984		AC TEXT		F-1984		PAT
ADT	CODE	1985		AC TEXT		F-1985		PAT
ADT	CODE	1986		AC TEXT		F-1986		PAT
ADT	CODE	1987		AC TEXT		F-1987		PAT
ADT	CODE	1988		AC TEXT		F-1988		PAT
ADT	CODE	1989		AC TEXT		F-1989		PAT
!
!       FC      fcode	LEVEL  lcode	SYMBOL   scode
!
ANNO	FC	1000	LEVEL	1
ANNO	FC	1001	LEVEL	2	SYMBOL	5
ANNO	FC	1002	LEVEL	2
ANNO	FC	1003	SYMBOL	3
ANNO	FC	1003	SYMBOL	6
ANNO	FC	1003	SYMBOL	7
!
.END LIT
.BL
Note that in this example, the CODE for the last few entries reflect the date
associated with the attributes. This is just for clarity because integers are
not permitted in the ACD group names which were called 'TextA' etc. instead of
'F-1968' etc.

.BL
The ACD part of the FRT:
.BL
.LITERAL
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!
! ACD part of FRT for ARC/INFO EXPORT attribute translation with ARC2I
!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
ACD	TABLE	1
!
!   datatype   code     group
!
ACD	I	10	MajorOne
ACD	I	20	MinorOne
ACD	I	30	MajorTwo
ACD	I	40	MinorTwo
ACD	I	50	Type_aat
ACD	C	60	Line
ACD	I	70	Spot
ACD	C	80	Type_pat
ACD	R	90	XCoord
ACD	R	100	YCoord
ACD	C	110	SiteId
ACD	C	120	SiteType
ACD	D	130	BeginDate
ACD	D	140	EndDate
ACD	C	150	PhotoDates
ACD	C	160	System
ACD	C	170	SubSystem
ACD	C	180	Class
ACD	C	190	SubClass
ACD	C	200	Modifier
ACD	C	210	LCCode
ACD	I	220	LUCode
ACD	C	968	TextA		! F-1968
ACD	C	973	TextB		! F-1973
ACD	C	976	TextC		! F-1976
ACD	C	980	TextD		! F-1980
ACD	C	983	TextE		! F-1983
ACD	C	984	TextF		! F-1984
ACD	C	985	TextG		! F-1985
ACD	C	986	TextH		! F-1986
ACD	C	987	TextI		! F-1987
ACD	C	988	TextJ		! F-1988
ACD	C	989	TextK		! F-1989
.END LIT



