.SUBTITLE UTILITY DCW2I
.PAGE
.TP 10
.P 0
^*--------------------------------------------------------------------------------\*
.HL 1 ^^^*UTILITY DCW2I\*

.TP 10
.P 0
^*--------------------------------------------------------------------------------\*
.HL 2 ^^^*FUNCTION\*

.LM +10

.P 0
DCW2I extracts data from a Digital Chart of World (DCW) CD-ROM and creates
individual IFF files for each 5 degree square tile for each coverage. The
program must use a parameter file to determine which IFF feature codes to
assign to features and this also controls feature selection. Any features
not present in the Feature Code file will be omitted. A similar parameter
file is required for the conversion of DCW attributes into IFF AC entries.
.LM -10

.TP 10
.P 0
^*--------------------------------------------------------------------------------\*
.HL 2 ^^^*FORMAT\*

.LM +10

.P 0
$ DCW2I

.BLANK
^*Command qualifiers\*
.NOFILL
None.
.FILL

.LM -10

.TP 10
.P 0
^*--------------------------------------------------------------------------------\*
.HL 2 ^^^*PROMPTS\*

.LM +10

.P 0
DCW2I is an interactive, command driven utility. Command input is expected
when the following prompt is given:

.P +5
DCW2I >
.LM -10

.TP 10
.P 0
^*--------------------------------------------------------------------------------\*
.HL 2 ^^^*COMMAND QUALIFIERS\*

.LM +10

.TP 7
None.
.LM -10


.TP 10
.P 0
^*--------------------------------------------------------------------------------\*
.HL 2 ^^^*RESTRICTIONS\*

.LM +10
.P 0
Text features will not be output along shaped lines. In DCW data, text features
may be accompanied with a SHAPE__LINE field which controls the position and
orientation along a line. DCW2I will output the first point of the SHAPE__LINE
as the lower left corner of the string. If the SHAPE__LINE contains one point,
the feature will be given a rotation (RO) of zero, otherwise it will be given
a rotation equal to the angle between the first and last points.
.P 0
Coverages GAZETTE, LIBREF and TILEREF are not catered for.
.P 0
The program does not guarantee that the area features created from the DCW
database are 'correct' when traversed (ie the inside is always on the same side
of the edge). Typically, areas containing holes will have line segments which
cross and these may cause problems if the IFF files are used with other LAMPS
programs such as IPOLYGON.
.LM -10


.TP 10
.P 0
^*--------------------------------------------------------------------------------\*
.HL 2 ^^^*DESCRIPTION\*

.LM +10


.TP 10
.BLANK
.HL 3 ^^^*DCW Coverages And Their Classes\*

.P 0
In summary, the coverages and their respective classes for the DCW libraries
EURNASIA, NOAMER, SOAMAFR and SASAUS are as follows:
.LM +5
.NOFILL

^*Thematic Layer      Coverage Mnemonic    Available Classes\*

Aeronautical                AE                       Points
Cultural Landmarks          CL           Areas Lines Points Text
Data Quality                DQ           Areas Lines        Text
Drainage                    DN           Areas Lines Points Text
Drainage-Supplemental       DS                       Points
Hypsography                 HY           Areas Lines Points
Hypsography-Supplemental    HS                 Lines Points
Land Cover                  LC           Areas       Points Text
Ocean Features              OF                 Lines Points Text
Physiography                PH                 Lines        Text
Political/Oceans            PO           Areas Lines Points Text
Populated Places            PP           Areas       Points Text
Railroads                   RR                 Lines        Text
Roads                       RD                 Lines        Text
Transportation Structure    TS                 Lines Points Text
Utilities                   UT                 Lines        Text
_*Vegetation                 VG           Areas

.FILL
_*Vegetation data is only available for a portion of the NOAMER library.

.BLANK 2
.LM -5
The coverages and classes available for the BROWSE library are:
.LM +5
.NOFILL

^*Thematic Layer      Coverage Mnemonic    Available Classes\*

Compilation Date            CO           Areas
Data Volume                 DV           Areas
Drainage                    DN           Areas Lines
Geographic Regions          GR           Areas Lines        Text
Hypsographic Data           DA           Areas
     Availablity
ONC index                   IN           Areas              Text
Political/Oceans            PO           Areas Lines        Text
Populated Places            PP                       Points Text

.FILL
.LM -5

.TP 10
.BLANK
.HL 3 ^^^*Output Files\*
.P 0
The output IFF files have the following characteristics:
.P 0
The format of the filename is CCGGnn.IFF where CC is the coverage, GG is the
GEOREF and nn is the sub-tile (eg DQXE32).
.P 0
For each coverage, a sub-directory (with the coverage name) is created
into which all files relating to that coverage will go. For example, if a
target directory of LSL$DATA__ROOT:[DCWDATA] is given, all IFF files created
from the Data Quality (DQ) coverage will be put into a directory called
LSL$DATA__ROOT:[DCWDATA.DQ].
.P 0
The IFF range entry (RA) will lie between 0.0 and 5.0 in x and y and the origin
offset in the Map Descriptor (MD) entry will be set to the south-west corner of
the tile from which it originated. For example, a tile at GEOREF XE32 will have
origin offset (145.0,-25.0). Refer to the GEOREF Tiling System diagram in the
back of the DCW Product Specification for information on the longitude and
latitude of each GEOREF.
.BLANK
.TP 10
.BLANK
.HL 3 ^^^*The Parameter Files\*
.P 0
A description of the Feature and Attribute Code files can be found in the
DATA PREPARATION section of the IFFDCW Reference Manual.
.P 0
The Feature Code file is compulsory and relates one or two DCW attributes in
each feature table to an IFF feature code.
.P 0
The Attribute Code is optional and is used to define the output IFF AC codes
and their datatypes for any DCW attributes. If it is not given, no attributes
will be present in the output IFF files.
.BLANK
.TP 10
.BLANK
.HL 3 ^^^*Program Action\*
.P 0
Before the program is invoked, the desired DCW CD-ROM should be mounted using
CD__MOUNT. Alternatively, it is possible to emulate the CD-ROM by copying the
required files onto another device providing the directory hierarchy and
content remains the same. It is not possible to copy the DCW directory files
(.DIR) onto to a VAX/VMS device since they originated from MS-DOS and are not
compatible. They will have to be created with the same names and hierarchy
using CREATE/DIRECTORY.
.P 0
When the program is invoked, the user is presented with a prompt at which all
commands must be entered. The GO command begins the translation but before it
is specified the Feature Code file, library, device, target directory and at
least one feature class must be given.
.P 0
The program begins by reading the Feature Class Schema (FCS) table which is
essential for all coverages as it contains the primary and foreign key
relationships between the various DCW tables. If this file cannot be read
then no data in the coverage can be translated.
.P 0
Now, the Feature Tables for each coverage will be read and since these files
cover the whole library they are usually quite large and may take a long time.
These files are read into memory and structured in a way that will allow fast
access to any row of the table. This, however, has a large memory overhead and
may exceed the page file quota allocated to the user process. If this happens,
see if the page file quota can be increased or run the program one class at a
time.
.P 0
It is recommended that only those classes required in the translation are
selected as this will prevent the need to hold potentially very large tables
in memory which are never used. This will also help in reducing the processing
time.
.P 0
Each IFF file will now be opened and the Primitive Tables for each class will
be read. These are cross-referenced with their respective Feature Tables using
the foreign keys defined in the FCS table. The Feature Tables hold information
at the feature level such as attributes and the Primitive Tables hold the
geometry.
.P 0
The Area Feature Table references the face (FAC), ring (RNG) and edge (EDG)
Primitive Tables.
.P 0
The Line Feature Table references the edge (EDG) Primitive Table.
.P 0
The Point Feature Table references the node (END) Primitive Table.
.P 0
The Text Feature Table references the text (TXT) Primitive Table.
.P 0
When the IFF file is closed, the memory used for the Primitive Tables can be
freed but this is not the case for the Feature Tables. Only when all the tiles
in a particular coverage have been translated can the memory assigned to the
Feature Tables be freed and made available for the next set of coverage tables.
.TP 10
.BLANK
.HL 3 ^^^*Recommendations\*
.P 0
When processing large volumes of data, the following factors are advised.
.LIST "o"
.LE;Run the program as a batch job.
.BR;This will ensure a log file is produced which will provide a list of all
files created and any problems that occurred.

.LE;Translate one coverage at a time.
.BR;The more coverages that are converted in one go, the greater the amount
of memory used. Even though the memory allocated to Feature Tables is freed
between coverages, there is inevitably some 'latent' memory build up which
may tip the balance and cause the program to exceed its page file quota.

.LE;Only select those feature classes required.
.BR;This will prevent the program from holding large unused tables in memory
and help speed up the translation.

.LE;Use the ENABLE VERBOSE option. This is the default.
.BR;The output of additional messages during the translation can help in
identifying the source of any problems that occur.
.END LIST 0

.TP 10
.BLANK
.HL 3 ^^^*DCW Area Features\*
.P 0
DCW holds area features in face (FAC), ring (RNG) and edge (EDG) tables.
The face table contains a face ID number and a pointer to the ring table.
The ring table contains a list of all the edges which make up a face, the first
edge being the perimeter and any subsequent edges are holes within the polygon.
This list in the ring table is series of pointers into the edge table which
denotes the start edge of the perimeter or hole. By following edges through the
edge table, the pointers should cycle back to the start edge.

.P 0
Area features are created in DCW2I by building up a list of edges making up the
perimeter and joining the holes in the area by invisible line segments. The
starting edge of the perimeter (or hole) may point to other edges and the list
cycles back around to the start edge again, thus closing the perimeter (or
hole). Any holes in the polygon will be connected to the last point of the
perimeter by an invisible line (pen-up) segment.

.P 0
It has been discovered (in coverage PO for example) that there are some edges
in the EDG table which have the same face on both sides and are often used to
connect islands to a coast by this single line. However, there are examples
where these edges are used in such a way that causes the IFF area features 
to close but be 'inside-out' and not filled correctly.

.P 0
These edges (with the same face on both side) can also cause the edge list not
to close which would result in the program creating an infinite list of edges
which make up an area. The program therefore checks if the number of entries in
the list has exceeded a limit which will only result in a warning
message (TOOMANYEDGES) and the feature being ignored.

.P 0
.NOTE
Often, these area features do not close because they have been incorrectly
coded in the DCW data as having NULL codes. For example, some line features
(rivers) in the DN (drainage) coverage are NULL coded as area and never close
and so trying to build an area out of these will cause the TOOMANYEDGES
message. We therefore recommend that the NULL coded features ARE NOT PRESENT
IN THE FEATURE CODE TABLE so that they will be ignored.
.END NOTE

.P 0
It is therefore recommended that inspection of area features is performed
using LITES2 to identify and try to correct any problems.

.LM -10

.TP 10
.P 0
^*--------------------------------------------------------------------------------\*
.HL 2 ^^^*COMMANDS\*

.LM +10

.P 0
DCW2I is driven by various commands. One command may be given on 
each prompt line - anything after that command is ignored.

.P 0
Commands may be abbreviated, so long as the abbreviation is not ambiguous (the 
program will complain if it is, and ignore the abbreviation).


.TP 10
.BLANK
.HL 3 ^^^*Summary of commands\*

.P 0
In summary, the available commands are:

.BLANK
.LIST 0," "
.LE;^*@\*file-spec###################read commands from indirect file
.LE;^*ACFILE\*#file-spec#############read Attribute Code file
.LE;^*DESELECT#CLASS\*#class#########remove class selection
.LE;^*DESELECT#COVERAGE\*#coverage###remove coverage selection
.LE;^*DESELECT#GEOREF\*#georefs######remove GEOREF selection
.LE;^*DESELECT#LIBRARY\*#library#####remove library selection
.LE;^*DEVICE\*#name##################device name of mounted CD-ROM
.LE;^*DISABLE#REPLY\*################turn command reply off
.LE;^*DISABLE#VERBOSE\*##############turn messages off
.LE;^*ENABLE#REPLY\*#################acknowledge each command
.LE;^*ENABLE#VERBOSE\*###############provide more feedback
.LE;^*FCFILE\*#file-spec#############read Feature Code file
.LE;^*GO\*###########################start processing
.LE;^*QUIT\*#########################leave program (before GOing)
.LE;^*RETURN\*#######################return to interactive input
.LE;^*SELECT#CLASS\*#class###########choose which classes to extract
.LE;^*SELECT#COVERAGE\*#coverage#####choose which coverages to extract
.LE;^*SELECT#GEOREF\*#georefs########choose which GEOREFs to extract
.LE;^*SELECT#LIBRARY\*#library#######choose which library to extract
.LE;^*SHOW#ALL\*#####################display all options
.LE;^*SHOW#ENABLE\*##################display the enabled options
.LE;^*SHOW#SELECTIONS\*##############display everything selected
.LE;^*SPAWN\*#command-line###########execute a DCL command line
.LE;^*TARGET\*#directory#############specify destination for files
.LE;^*TEXTGAP\*#tolerance############padding distance between characters

.END LIST

.TP 14
.BLANK
.HL 3 ^^^*Alphabetical list of commands\*

.LM +10
.BLANK
.I -8
^*@\*'file-spec'
.P 0
The ampersand ('@') command tells the program to read commands from the
indirect command file following the character. Each command will then be read
from this file until a RETURN or GO command is encountered. If any error
occurs while reading the file then control passes back to interactive input
and subsequent commands after the offending one will be ignored.
.BLANK
.TP 10
.I -8
^*ACFILE\* 'file-spec'
.P 0
The Attribute Code file must be read by the program if it is to handle
attributes in the translation. This file models a lookup mechanism between DCW
attributes and IFF AC codes and can also be used to select which attributes
will be translated, so that any not present in the file will be ignored.
.P 0
The lookup mechanism enables any field (not just attributes) of a DCW table
to be output as an IFF AC attached to the feature, provided it is of type
integer (I), short integer (S in DCW, but I in the AC file ), date (D) or
text (T). This is especially useful for debugging as it would enable, for
example, the ID from a DCW table to be output as an AC which would help in
locating problems in the data.
.BLANK
.TP 10
.I -8
^*DESELECT\*##'sub-command'
.P 0
This command is the inverse of the SELECT command. It has identical
sub-commands and undoes particular selections made.

.LM +8

.BLANK
.TP 5
.I -8
^*DESELECT#CLASS\*##ALL|AREAS|LINES|POINTS|TEXT
.P 0
This is used to remove all or one feature class type from the list of selected
classes. Initially all feature classes will be selected and at least one class
must be selected before attempting to use the GO command. The arguments to
SELECT and DESELECT CLASS are themselves sub-commands and only one is permitted
at a time. If more are required, type in the whole command again.
.BLANK
.TP 5
.I -8
^*DESELECT#COVERAGE\*##coverage-list
.P 0
This is used remove one or more coverages from the current list of selected
ones. No coverages are initially selected as these depend on which library is
required. If no coverages are selected when the GO command is specified, a
warning is given and all coverages are selected.
.P 0
Valid BROWSE coverages are CO, DV, DN, GR, DA, IN, PO and PP.
.P 0
Valid coverages for the libraries other than BROWSE are AE, CL, DQ, DN, DS, HY,
HS, LC, OF, PH, PO, PP, RR, RD, TS, UT and VG
.P 0
It is also permitted to specify ALL in which case all coverages in the current
library will be deselected.
.BLANK
.TP 5
.I -8
^*DESELECT#GEOREF\*##GEOREF-list
.P 0
This is used to remove one or more GEOREFs or single GEOREF sub-tiles from the
current list of selected ones. If the GEOREF-list contains just a single GEOREF
such as XE, then all 9 sub-tiles (11 to 33) will automatically be removed. It
is also possible to remove individual sub-tiles by specifying XE:32, for
example, which removes tile 32 in GEOREF XE providing XE has already been
selected.
.BLANK
.TP 5
.I -8
^*DESELECT#LIBRARY\*##BROWSE|EURNASIA|NOAMER|SASAUS|SOAMAFR
.P 0
This command can be used to deselect the currently selected library. Since the
coverages in the BROWSE library are different to those in the other libraries,
all coverages will be deselected when swapping between then. However, when
changing between libraries with the same coverages, no such deselection is
made. Selecting a new library with the SELECT LIBRARY command has exactly the
same effect.

.LM -8

.BLANK
.TP 10
.I -8
^*DEVICE\* 'device-name'
.P 0
This compulsory command tells the program the device name of the CD-ROM reader
from with the data is to be extracted. The device should contain a DCW CD-ROM
mounted in accordance with ISO 9660 provided by the CD__MOUNT utility. The
program checks that there is a top-level directory called 'DCW' on the
mounted media.

.P 0
It is possible to copy files from the CD-ROM onto another device and use that
provided that the directory structure and content are identical. An example
of the structure would be 'device-name:[DCW.SASAUS.DQ.X.E.33]'.
.BLANK
.TP 10
.I -8
^*DISABLE\*##'sub-command'
.P 0
This command is the inverse of the ENABLE command. It has identical
sub-commands and turns off the enabled options.

.LM +8
.BLANK
.TP 5
.I -8
^*DISABLE#REPLY\*
.P 0
This command is used to prevent the program from confirming each command given
with a reply.
.BLANK
.TP 5
.I -8
^*DISABLE#VERBOSE\*
.P 0
This command is used to inform the program to produce only the minimal number
of messages required during processing. If a problem occurs during the
translation, it may not be immediately obvious where it occurred without the
additional messages and so the verbose option is enabled by default.
If, as will often be the case, the program is run as a batch process, the batch
log file will contain a useful record of any problems and having the verbose
option enabled will help.
.BLANK
.LM -8


.TP 10
.I -8
^*ENABLE\*##'sub-command'
.P 0
This command is used to turn on certain options.

.LM +8
.BLANK
.TP 5
.I -8
^*ENABLE#REPLY\*
.P 0
This command is used to tell the program to confirming each command given
with a reply. This is the default action.
.BLANK
.TP 5
.I -8
^*ENABLE#VERBOSE\*
.P 0
This command is used to inform the program to output more messages during
processing. If the program is run as a batch process, the batch log file will
contain a useful record of any problems and having the verbose option enabled
will help. This is the default action.

.LM -8

.BLANK
.TP 10
.I -8
^*FCFILE\* 'file-spec'
.P 0
The Feature Code file is compulsory and is used to determine which feature
codes to assign to each IFF feature based on one or two DCW attributes.
This file models a lookup mechanism between DCW attributes and IFF feature
codes but can also be used to select which features will be translated, so
that any not present in the file will be ignored.
.BLANK
.TP 10
.I -8
^*GO\*
.P 0
This command should be the last one given and starts the processing of the data
based on the selections made. Before the GO command is given it is necessary to
have specified the Feature Code file, library, device, target directory and at
least one feature class.
.BLANK
.TP 10
.I -8
^*QUIT\*
.P 0
This command is used to exit the program before processing is started with the
GO command. After processing is finished, the program is automatically
terminated and so QUIT is not needed then. Ctrl-Z will also abort the program
from the interactive prompt.
.BLANK
.TP 10
.I -8
^*RETURN\*
.P 0
This command is required at the end of an indirect command file and is used to
tell the program to return from reading the file back to interactive input. If
it is not given, control will return when the end of the file is reached.
.BLANK
.TP 10
.I -8
^*SELECT\*##'sub-command'
.P 0
This command is used to determine which aspects of the DCW data set are
required to be translated into IFF.

.LM +8

.BLANK
.TP 5
.I -8
^*SELECT#CLASS\*##ALL|AREAS|LINES|POINTS|TEXT
.P 0
This is used to add all or one feature class type to the list of selected
classes. The arguments to SELECT and DESELECT CLASS are themselves sub-commands
and only one is permitted at a time. If more are required, type in the whole
command again. Initially all feature classes will be selected and at least one
class must be selected before attempting to use the GO command. The ability to
select just a few classes prevents the program from reading those (potentially
very large) unwanted DCW tables and hence decreases the time and memory
requirements on the program.
.BLANK
.TP 5
.I -8
^*SELECT#COVERAGE\*##coverage-list
.P 0
This is used to add one or more coverages to the current list of selected
ones. No coverages are initially selected as these depend on which library is
required. If no coverages are selected when the GO command is specified, a
warning is given and all coverages are selected.
.P 0
Valid BROWSE coverages are CO, DV, DN, GR, DA, IN, PO and PP.
.P 0
Valid coverages for the libraries other than BROWSE are AE, CL, DQ, DN, DS, HY,
HS, LC, OF, PH, PO, PP, RR, RD, TS, UT and VG
.P 0
It is also permitted to specify ALL in which case all coverages in the current
library will be selected.
.BLANK
.TP 5
.I -8
^*SELECT#GEOREF\*##GEOREF-list
.P 0
This is used to add one or more GEOREFs or single GEOREF sub-tiles to the
current list of selected ones. If the GEOREF-list contains just a single GEOREF
such as XE, then all 9 sub-tiles (11 to 33) will be extracted. It is also
possible to extract individual sub-tiles by specifying XE:32, for example,
which will add tile 32 in GEOREF XE to the list,  providing XE has already
been selected. If no GEOREFs are selected when the GO command is specified, a
warning is given and all will be selected.
.P 0
It is likely that all GEOREFs will be extracted at once but 10 individual
ones are permitted. For each one in this list, a record is kept of which of
the 9 sub-tiles are required. If the limit of 10 GEOREFs is not sufficient,
then the program should be run as many times as required.
.BLANK
.TP 5
.I -8
^*SELECT#LIBRARY\*##BROWSE|EURNASIA|NOAMER|SASAUS|SOAMAFR
.P 0
This command is used to choose which library is required. Since the coverages
in the BROWSE library are different to those in the other libraries, all
coverages will be deselected when swapping between them. However, when changing
between libraries with the same coverages, no such deselection is made.

.LM -8

.BLANK
.TP 10
.I -8
^*SHOW\*##'sub-command'
.P 0
This command is used display the current options made so far as a result of
other commands.
.LM +8
.BLANK
.TP 5
.I -8
^*SHOW#ALL\*
.P 0
This command reports the device, target directory, text gap, enabled options
and selections made.
.BLANK
.TP 5
.I -8
^*SHOW#ENABLE\*
.P 0
This command is used to show the currently enabled options.
.BLANK
.TP 5
.I -8
^*SHOW#SELECTIONS\*
.P 0
This command is used to show the currently selected library, coverages, GEOREFs
and feature classes. This is done automatically when the GO command is given
to aid the user.

.LM -8

.BLANK
.TP 10
.I -8
^*SPAWN\*##'command-line'
.P 0
This enables the user to execute a single DCL command-line from within DCW2I
and immediately returns to terminal input.
.BLANK
.TP 10
.I -8
^*TARGET\*##'directory'
.P 0
This command is required to define the destination directory for the output
IFF files. A node and directory should be given of the form
'device:[directory]' and IFF files are output at one level of hierarchy below
this. In the given directory, a sub-directory will be created for each
coverage and each tile of that coverage will be place there. For example, if a
target directory of LSL$DATA__ROOT:[DCWDATA] is given, all IFF files created
from the Data Quality (DQ) coverage will be put into a directory called
LSL$DATA__ROOT:[DCWDATA.DQ].
.BLANK
.TP 10
.I -8
^*TEXTGAP\*##'tolerance'
.P 0
This command defines the spacing between characters which, if exceeded, will
result in an extra space being inserted between each character of a text
string.

.P 0
Each DCW text Feature Table contains a TEXTGAP field which contains
a value defining the spacing between characters. In order to give the user
control over this, additional spaces can be inserted by entering a tolerance
which is less than those in the table. However, DCW text data already contains
extra spaces between characters and so the default tolerance is large (100.0)
so that the user must explicitly set it to force the insertion of extra spaces.

.LM -10

.LM -10

.PAGE

.TP 10
.P 0
^*--------------------------------------------------------------------------------\*
.HL 2 ^^^*EXAMPLE\*

.BLANK
.KEEP
.NO FILL
$ ^*CD__MOUNT LSLV3B$DKB500: SASAUS\*_<CR_>
%MOUNT-I-CDROM__ISO, SASAUS:DMA__DCW (1 of 1) , mounted on __LSLV3B$DKB500:
$
$ ^*DCW2I\*_<CR_>
Digital Chart of the World to IFF converter
Version 1.0 of 10:48:35 22-JUL-92
DCW2I> ^*@EXAMPLE.COM\*_<CR_>
%DCW2I-I-CMDINPUT, Command input being read from file SYS$DISK:[]EXAMPLE.COM;0

DCW2I> ^*DEVICE LSLV3B$DKB500:\*_<CR_>
Device name      : LSLV3B$DKB500

DCW2I> ^*TARGET LSLV3B$DKB100:[LSLDATA]\*_<CR_>
Target directory : LSLV3B$DKB100:[LSLDATA]

DCW2I> ^*DESELECT CLASS ALL\*_<CR_>
Classes selected   : NONE

DCW2I> ^*SELECT CLASS AREAS\*_<CR_>
Classes selected   : AREAS

DCW2I> ^*SELECT LIBRARY SASAUS\*_<CR_>
Library selected   : SASAUS, Southern Asia and Australia

DCW2I> ^*SELECT COVERAGE DQ\*_<CR_>
Coverages selected : DQ

DCW2I> ^*SELECT GEOREF XE:33\*_<CR_>
GEOREFs selected   : XE, Tiles: 33

DCW2I> ^*ACFILE LSLV3B$DKB100:[LSLDATA]DCW.ACT\*_<CR_>
Reading file : LSLV3B$DKB100:[LSLDATA]DCW.ACT

DCW2I> ^*FCFILE LSLV3B$DKB100:[LSLDATA]DCW.FCT\*_<CR_>
Reading file : LSLV3B$DKB100:[LSLDATA]DCW.FCT

DCW2I> ^*GO\*_<CR_>

Library selected   : SASAUS, Southern Asia and Australia
Coverages selected : DQ
GEOREFs selected   : XE, Tiles: 33
Classes selected   : AREAS


Reading LSLV3B$DKB500:[DCW.SASAUS.DQ]FCS
Reading LSLV3B$DKB500:[DCW.SASAUS.DQ]DQAREA.AFT

Creating IFF file LSLV3B$DKB100:[LSLDATA.DQ]DQXE33.IFF
Reading LSLV3B$DKB500:[DCW.SASAUS.DQ.X.E.33]FAC
Reading LSLV3B$DKB500:[DCW.SASAUS.DQ.X.E.33]RNG
Reading LSLV3B$DKB500:[DCW.SASAUS.DQ.X.E.33]EDG
4 Feature(s) written to file

Freeing memory allocated to feature tables...

Freeing memory allocated to feature/attribute code tables...

ELAPSED:    0 00:00:33.06  CPU: 0:00:09.79  BUFIO: 71  DIRIO: 63  FAULTS: 1416 
$
.NOKEEP
.FILL

.LM +10

.P 0
This example shows a user outputting a single IFF file containing just the area
features in the Data Quality (DQ) coverage of GEOREF XE, sub-tile 32. Only
the Area Feature Table (DQAREA.AFT) is read to prevent the need to read the
tables for unwanted classes.

.LM -10

.!*****************************************************************************
.! get the messages
.!
.REQUIRE "DCW_DCW2IMSG.RNO"
