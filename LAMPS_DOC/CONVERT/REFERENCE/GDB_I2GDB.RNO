.SUBTITLE UTILITY I2GDB
.PAGE
.TP 10
.P 0
^*--------------------------------------------------------------------------------\*
.HL 1 ^^^*UTILITY I2GDB\*

.TP 10
.P 0
^*--------------------------------------------------------------------------------\*
.HL 2 ^^^*FUNCTION\*

.LM +10

.P 0
I2GDB reads an Internal Feature Format (IFF) file, and produces
a file on disc in SICAD/GDB (Geographical Data Base) format.

.LM -10

.TP 10
.P 0
^*--------------------------------------------------------------------------------\*
.HL 2 ^^^*FORMAT\*

.LM +10

.P 0
$ I2GDB input-IFF-file-spec output-GDB-file-spec

.BLANK
.NOFILL
^*Command qualifiers               Defaults\*

/[NO]DEBUG                         /NODEBUG
/FRT=file-spec                     /FRT=LSL$FRT:OS.FRT
/[NO]LOG                           /NOLOG
/PARAMETERS=file-spec              /PARAMETERS=
                                     LSL$FRT:GDB_PARAMS.PAR

.FILL

.LM -10

.TP 10
.P 0
^*--------------------------------------------------------------------------------\*
.HL 2 ^^^*PROMPT\*

.LM +10

.NO FILL
__Input IFF file:           input-IFF-file-spec

__Output GDB file:          output-GDB-file-spec
.FILL

.LM -10

.TP 10
.P 0
^*--------------------------------------------------------------------------------\*
.HL 2 ^^^*PARAMETERS\*

.LM +10

.P -10;input-IFF-file-spec

.P -2;-#This parameter specifies 
the name of an IFF file, and is compulsory. The data written to the
output file are read from this file. Only one filename may be specified for
each run of the program.

.BR;The default device and extension LSL$IF:filename.IFF are applied to the 
input file specification when it is parsed.

.P -10;output-GDB-file-spec

.P -2;-#This parameter specifies the SICAD/GDB data file spec, and is 
compulsory. 
The data read from the input IFF file is written to this file. Only one 
filename may be specified for each run of the program.

.BR;The default filename and extension GDB.GDB are applied to the 
output file specification when it is parsed.

.LM -10

.TP 20
.P 0
^*--------------------------------------------------------------------------------\*
.HL 2 ^^^*COMMAND QUALIFIERS\*

.LM +10

.BL;
.P -10;/DEBUG
.I -10;/NODEBUG (default)

.P -2;-#When /DEBUG is present, the I2GDB utility will output many more
diagnostic messages as it processes the input file than it would under normal
running, or with the /LOG qualifier given. Each IFF entry is signalled, with 
the FSN and ISN given for the NF entries, and the number of coordinate points
and their visibility given for ST/ZS/CB entries, as an aid to tracing any IFF 
conversion problems. 

.BL;.TP 8
.P -10;/FRT = file-spec

.P -2;-#The /FRT command qualifier specifies a Feature Representation Table 
(FRT) file which the program will read to determine the graphical types (GT)
of the IFF features. The FRT qualifier with file-spec is compulsory.

.BR;The default file specification is LSL$FRT:OS.FRT, against which the
file specification given with /FRT qualifier is parsed.

.BL;
.P -10;/PARAMETERS = file-spec

.P -2;-#The /PARAMETERS command qualifier specifies a Parameters file which the
program will read to determine how particular IFF constructs map onto GDB
constructs. The PARAMETERS qualifier with file-spec is not compulsory.

.BR;The default file specification is LSL$FRT:GDB_PARAMS.PAR, against which the
file specification given with /PARAMETERS qualifiers is parsed. 

.BL;
.P -10;/LOG
.I -10;/NOLOG (default)

.P -2;-#When /LOG is present, the I2GDB utility will output 
diagnostic messages about any file creation or deletion as it processes the 
input IFF file so that any disc errors may be traced.

.LM -10

.TP 10
.P 0
^*--------------------------------------------------------------------------------\*
.HL 2 ^^^*RESTRICTIONS\*

.LM +10

.P0
Only one IFF file is allowed in each run of I2GDB, to produce a single GDB file.


.LM -10

.TP 10
.P 0
^*--------------------------------------------------------------------------------\*
.HL 2 ^^^*DESCRIPTION\*

.LM +10

.TP 10
.BLANK
.HL 3 ^^^*Command line\*

.P 0
The symbol I2GDB is normally set up as:

.P 10
I2GDB == "$lsl$exe:i2gdb"

.P 0                      
and the program may then be used as if it were a normal VMS utility.

.LM -10
.TP 10
.P 0
^*--------------------------------------------------------------------------------\*
.HL 2 ^^^*PARAMETERS FILE\*
.LM +10

.TP 10
.BLANK

.P 0;
A parameters file uses three sorts of commands to map IFF constructs onto GDB
constructs. 

.BLANK
.HL 3 ^^^*LAYER\*
.LM +5
The LAYER command is followed by an IFF layer number, and a corresponding GDB
layer number to use as output for the EB parameter.

.P 5
LAYER 0 31             ! IFF layer 0 -> GDB EB 31

.P 0
If no LAYER command has been given for a particular layer encountered, then
I2GDB uses the IFF layer number, modulo 32, as the GDB layer number. 

.P 0
All LAYER commands in the parameters file should appear in ascending order of
IFF layer number.

.LM -5

.BLANK
.HL 3 ^^^*SYMBOL\*
.LM +5

.P 0
The SYMBOL command takes an FRT symbol number (SC), a corresponding
8-character name to use in the GDB NAM field and an optional scale factor.

.BLANK
.NOFILL
SYMBOL 21 XCROSS       ! IFF SC 21 -> GDB NAM "XCROSS"
SYMBOL 22 XCROSS 3.0   ! IFF SC 22 -> GDB NAM "XCROSS", scale factor 3.0
.FILL

.P 0
If no SYMBOL command has been given for a particular SC encountered, then I2GDB
creates a name from the "SC" followed by the IFF SC number, e.g., "SC21".

.P 0
The scale factor is used to map the IFF unit symbol square onto a symbol square
in SICAD. The IFF unit symbol square extends from (-1,-1) to (+1,+1), the SICAD
symbol square is of arbitrary size, set by the creator of the symbol library.

.P 0
The value of scale factor to be entered in the parameters file should be
.BLANK
.NOFILL
(Length of side of GDB symbol square) / (Length of side of IFF symbol square).
.FILL

.P 0;For example, if the GDB symbols used are defined on (-400,-400) to
(+400,+400) then the scale factor should be 400. A default of 1 is assumed if
no value is given.

.P 0
There is a special use of the SYMBOL command shown below:
.NOFILL

SYMBOL 23 PG          ! IFF SC 23 -> PG output
.FILL

.P 0
In this case the symbol will be output as if it was a single point in STU level
1. This would be done as a way of entering a geodetic fix point or similar.

.P 0 
All SYMBOL commands in the parameters file should appear in ascending order of
IFF SC number. See note below on corresponding FC entries.

.BLANK
.LM -5;
.HL 3 ^^^*FC\*
.LM +5;

.P 0 
The FC command takes an FRT feature code (FC) and provides ST and SM
integer values. It also provides flags to say whether a line is to be output
using LI,LY constructs, what kind of spline to use for translating curve
elements, whether to output area using FL constructs, and whether to output a
text using TX or FR constructs.

.BLANK
.NOFILL
FC 123 ST 3 SM 4 LI   ! IFF FC 123 -> GDB LI with ST and SMs.
FC 124 ST 3 LY FL     ! IFF FC 124 -> GDB FL area using LY.
FC 125 TX M 0.9	      ! IFF FC 125 -> text, aspect ratio(M) = 0.9
FC 126 FR             ! IFF FC 125 -> GDB FR cadastral label.
FC 127 SN ZSP FREI    ! IFF FC 127 -> GDB FREI (free) spline.
.FILL

.P 0
The allowable spline types are:
.NOFILL
	(i)   FREI (free spline, zero curvature at both ends)
	(ii)  SCHL (closed spline)
	(iii) STAN (tangent fixed at start, free at end)
	(iv)  STAE (tangent fixed at both ends)
.FILL

.P 0; If no FC command has been given for a particular FC encountered, then the
default action depends on the graphical type (GT) of the feature as found from
the FRT. For linear features, LIs are used in preference to LYs. For text
features TX is used with no FR output, aspect ratio 0.81. For area features,
the area is output as line elements. For curves, the curve is output as a free
spline. For No ST or SM entries are made.

.P 0; Note carefully that the SYMBOL entry specifies the translation only of
the IFF secondary codes. Therefore it is still necessary to give FC entries for
the features which use these symbols.  

.P 0; Note that if insufficient info is available to the converter, for example
through missing attribute data, it may use default values anyway.

.P 0; Note that a FL element is output using LI line segments unless an
explicit LY flag has been given in the relevant FC command.

.BLANK
.P 0;
If defaults are used, a set of messages of the form:
.P 5;
"x features with FC y have been output using default translations"
.P 0
will be output at the end of the program.

.LM -5

.LM -10
.TP 10
.P 0
^*--------------------------------------------------------------------------------\*
.HL 2 ^^^*PROGRAM ACTION\*
.LM +10

.P0;I2GDB is a utility to transfer an Internal Feature Format (IFF) disc
file to a SICAD/GDB format ASCII disc file.

.P0;Note that only a single dataset may be transferred during a single run 
of the program.

.P 0
For a full description of the SICAD/GDB output file structure and format, see 
the Format section of this module's documentation.

.P 0
After decoding the command line for input and output file names and the 
qualifiers, the FRT file is read and the values stored in internal arrays 
indexed by feature code (FC).

.P 0
The supplied IFF file is opened with input revision level of one so that any
ST or ZS entries are translated into CB entries, from which x and y
coordinates are read and possibly z coordinates and PKZ symbol definitions.
Z coordinates are used to produce HGEL parameters on points.

.P 0 ;
After writing the range values to a header comment line, I2GDB translates
the IFF file entry by entry into the relevant GDB feature element hierarchy or
STU level.

.P 0
Any overlay (NO) entry is recorded for writing to the EB level entry of each
feature element.

.P 0;
Contour line heights as attribute codes (ACs) 2 and 3 are detected and
used to produce HGEL parameters on lines.

.P 0
Any information in TX, TH or RO entries is stored for later use depending on
the graphical type of the feature.

.P 0 
What I2GDB does with coordinate information from any CBs (and converted
ST/ZS entries) depends on the graphical type (GT) of the feature derived from
the feature code (FC) in the FS entry and on entries in the parameters file.

.LM +5; 
.P 0; Linear feature (GT 1) coordinates are output at the top level
(STU=1) either as line segment (LI) feature elements or as poly-line (LY)
feature elements according to the relevant FC command in the parameters file.
The default is LI if there is no parameters file or no relevant FC command.
Each LI segment is defined by a pair of point (PG) elements at a lower level
(STU=2). A LY feature has the first and last vertices output to point (PG)
elements at a lower level (STU=2) unless the polyline is closed. In this case
the start point is repeated in the FLD field if the LY element. The default is
to output "zero" point symbols parameters (PKZ Z), but if a "PKZ" attribute is
attached to a point in a coordinate block then a non-zero PKZ parameter will be
output.

.P 0;Line features with only two points will be output as LIs even if the
parameter file specifies that feature is to be output as an LY.

.P 0;Polyline (LY) and spline (SN) features are split after 48 points
(including the two end points). In the case of a 49 point feature, it will be
split earlier into two LYs or SNs.

.P 0; Interpolated curve features (GT6) are output to spline (SN) feature
elements at the top level (STU=1), with the first and last vertices output to
point (PG) elements in a lower level (STU=2) unless the spline is closed. The
type of spline output depends on the translation set up in the parameters file.
For STAN and STAE splines the user must have attached WAN and WEN angles as
appropriate as feature level attributes. If these are missing, then a FREI
spline will be output. Similarly, if a SCHL spline is not in fact closed, then
a FREI spline will be output.

.P 0;
Symbol string features (GT11) are output as a series of symbols at the top
level (STU=1), one at each vertex of the string.

.P 0
Area features (GT12) are output to area (FL) elements at the top level (STU=1)
provided an entry of the form:
.P 5;
FC 124 ST 3 LY FL
.P 0;
exists in the parameters file. The segments of the bounding polygon are
decomposed into either a series of LI segments or a LY feature according to the
parameters file FC command. The default is to use LI segments.  Any hatching
information present from the FRT file is used if possible for the parameter
fields. If no relevant FC command exists in the parameters file then the
feature will be output as simple LI segments with no areal parameters.

If the SC entry of the FRT is 101->106, ST is set to 0, invisible perimeter.

Note that if the user attaches an attribute named 'W' to the area which holds
real values, then the converter outputs this value instead of the angle derived
from the FRT.

.P 0; Part arc features (GT2,3,4) are output to curve (BO) feature elements at
STU=1, with the end vertices used for lower level (STU=2) point (PG) elements,
with no symbols. The radius and angle subtended by the arc are calculated from
the three edge coordinates or edge-centre-edge coordinates and used in the
relevant parameter fields. Note that all BO feature elements have anticlockwise
sense, and so clockwise arcs from IFF have their sense reversed.

.P 0
Full circle features (GT5) are output to circle (KR) elements, with the radius
calculated from the three edge coordinates and used in the relevant parameter 
field.

.P 0; All symbol features (GT7,8,9) are output to symbol (SY) elements at
STU=1.  The values from the IFF RO and TH entries, and from the FRT file, are
used to calculate the various parameter field entries. The symbol scale from
the parameter file is used to ensure the GDB symbols have the correct scale
factor.

.P 0
Text features (GT10) are output to text (TX) elements at STU=1 unless an FC
command in the parameters file for the FC encountered specifies an FR cadastral
label. For example:
.P 5;
FC 125 FR
.P 0;

In the FR case, the text string should be of the form n1/n2 and is used to
construct the two cadastral number parameters of the features.

.P 0
In both TX and FR cases, the values from the IFF RO and TH entries
and from the FRT file are used to calculate the various parameter
field entries. For TX output, text features that are components of a
text status (TS) string are processed as separate features. For FR output, the
feature attributes NDX and NDY are processed to give cadastral offsets.

.LM -5

.P 0
If a linear feature contains invisible line breaks, the sections are output to
GDB as separate features.

.LM -10

.PAGE
.P 0
^*--------------------------------------------------------------------------------\*
.HL 2 ^^^*EXAMPLES\*

.P 0
.NOFILL
$#^*I2GDB/FRT=OS TEST__GDB GDB _<CR_>\*

  Now processing the IFF file LSL$IF:TEST__GDB.IFF to GDB.GDB

%I2GDB-S-NORMAL, successful completion
 ELAPSED:    0 00:00:08.15  CPU: 0:00:01.82  BUFIO: 18  DIRIO: 61  FAULTS: 210 


.FILL

.P0;This example shows a normal run of I2GDB
successfully converting the IFF file LSL$IF:TEST__GDB.IFF into the GDB
file GDB.GDB.

.!******************************************************************************
.! get the messages
.!
.REQUIRE "GDB_I2GDBMSG.RNO"
                  
                                                
