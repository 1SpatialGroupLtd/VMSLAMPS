.SUBTITLE DATA PREPARATION
.PAGE
.TP 10
.P 0
^*--------------------------------------------------------------------------------\*
.HL 1 ^^^*DATA PREPARATION\*

.LM +10

.TP 10
.P 0
^*----------------------------------------------------------------------\*
.HL 2 ^^^*Comparison of MapData and IFF\*

.P 0
IFF is a feature orientated data format - data is separated into features, and 
each feature represents one 'thing' on the map. An integer feature code is used
to say what type of thing it is that the feature represents. A feature might
thus be a contour, or a house, or a river, depending on the type of map
being digitised, and the way that the data is to be used.

.P 0
The MapData format shares this concept of a 'feature' but only supports simple
lines and symbols. A feature consists of a feature serial number, a feature
code, one optional text attribute and the coordinate(s). The main difference
between the MapData and the IFF Data Model is that MapData allows different
parts of the same feature to have different representations. This is held in
the MapData file by assigning to each point of the coordinates a flag which can
denote the point is to be drawn as part of a curve and/or at high or low
priority (over or under other features).

.P 0
Since the IFF Data Model cannot directly mirror this representation scheme
at the per-point level the data can be altered by various options described
below.

.P 0
MapData has its own feature coding scheme whereby feature codes lie in the
range 1.1 to 127.127 which are treated as a major and minor codes not as a
real number. There must exist a mapping between these and IFF feature codes
(which are integers that lie in the range 1 to 32767) and this is described
in the parameter file mechanism below.

.TP 10
.P 0
^*----------------------------------------------------------------------\*
.HL 2 ^^^*Feature Translation\*

When converting from IFF to MapData it is only possible to translate simple
IFF features. These are lines (which can be interpolated curves) and symbols
only. Text features are ignored since the MapData format does not support them.

.P 0
All arcs and circle features (GTs 2, 3, 4, 5) in IFF are defined by three
coordinates; edge-centre-edge or three edge points. These must be interpolated
sufficiently to enable these features to be translated as simple linear
features.

.P 0
Interpolated curves (GT 6) are considered to be a simple linear feature.

.P 0
Symbol features (GTs 7, 8, 9) are all converted into MapData features and
GTs 8 and 9 will generate point features with two points (the second denoting
its orientation).

.P 0
Symbol string features (GT 11) are considered to be simple linear features, 
and the symbols defining the vertices are lost.

.P 0
Fill area features (GT 12) are considered to be a closed linear feature, and 
any pattern fill information is lost.

.TP 10
.P 0
^*----------------------------------------------------------------------\*
.HL 2 ^^^*Preparation for data to be transferred between MapData and IFF\*

.P 0
It is quite likely that IFF will be used as the digitising format and the data
subsequently transferred to a MapData system. On the other hand, data may
be transferred from a MapData system to IFF for complex editing operations,
or for other spatial processing functions such as structuring or polygon
formation.
.P 0
Whatever the purpose for transferring data, the relationship between IFF
feature codes and MapData feature codes, if these are to be preserved,
should be defined.

.P 0
The implementation of this requires 
.LIST "o"
.LE; a parameter file defining feature code correlation, and
.LE; an FRT file (together with SRI and TRI files) containing an ACD section
.END LIST 0

.P 0
The main purpose of the parameter file is to define how the MapData feature
codes map onto IFF feature codes but may also contain definitions for various
tolerances and meta-data (such as local origin and scale-factor).

.P 0
MAPDATA2I and I2MAPDATA will read the same parameter file and this is
encouraged to ensure accurate and consistent translation. This is particularly
useful when batch converting multiple files from the same volume of data as
the various meta-data will be the same.
.TP 10
.P 0
^*----------------------------------------------------------------------\*
.HL 2 ^^^*The MAPDATA2I parameter file\*

.P 0
This file contains two types of entry :-

.BLANK
.LIST 0
.DISPLAY ELEMENTS LL,")"
.LE; the environment settings, and
.LE; the feature code lookup table
.END LIST 0


.BLANK
.HL 3 ^^^*The environment setting keywords\*
.P 0
These keywords are the same as many of the DCL command line qualifiers and
can be used to save the need to specify an option each time on the command
line which is particularly useful when batch processing many files.
.P 0
Example keywords follow :-

.BLANK
.LITERAL
!
!
CURVE_AC	CODE	2001
PRIORITY_AC	NAME	Priority
TEXT_AC	NAME	Text
!
CORNER_POINT_SEPARATION	40.0
!
CURVE_SEPARATION		40.0
CURVE_CHORD			10.0
CURVE_DEVIATION		0.5
!
SCALE				200000
OFFSET			400000 100000
MULTIPLY			1000
!
DEFAULT_LINE_FC		1
DEFAULT_SYMBOL_FC		25
!
!
.END LITERAL
.BL
For an explanation of these keywords, see the corresponding command line
qualifiers documented in the MAPDATA2I Reference Manual.
.BL
Any I2MAPDATA keywords which are present in the parameter file will be
read and ignored by MAPDATA2I, but any undefined words or syntax will be
reported.

.BLANK
.HL 3 ^^^*The feature code lookup table\*
.P 0
Each line of the table is prefixed with a command which identifies the line as
belonging to that table. The lines are free-format, so the order of entries
matters, but the actual position of entries on the line is not important. 
Any text starting with the "!" character is regarded as a comment, and is 
ignored. Comments can appear on the same lines as commands, or on 
separate lines. Note that commands may be in upper or lower case.
.!** and can be abbreviated to the shortest non-ambiguous form.

.P 0
The feature code lookup table describes the translations required to produce
IFF feature codes from MapData feature codes. Each line is prefixed with the
CODE command which tells the program how to translate a particular feature
code.

.P 0
.TP 8
A line has the following form:-

.P 5
^*CODE###IFF-code###MD-fc###Interp###Curve-code\*

.P 0
where the fields are :-

.LM +14

.P -14
^*CODE########\*-#the command CODE states that this line is an entry in the
feature code lookup table. 
.BL
.I -14
^*IFF-code####\*-#the IFF feature code that will be used for the IFF feature
which mirrors the MapData feature with the feature code defined by ^*MD-fc\*.
.BL
.I -14
^*MD-fc#######\*-#the MapData feature code which maps onto the above IFF
feature code. The feature code should lie in the range 1.1 to 127.127.
.BL
.I -14
^*Interp######\*-#the interpretation of the MapData feature when creating a 
corresponding IFF feature. This can be blank in which case the IFF feature is
an exact copy of the MapData feature or it can be one of the following three
keywords:
.BL
.LIST 0," "
.LE
STRAIGHT - this should be used when the feature is predominantly straight
and any curved sections will be interpolated (smoothed) by having additional
points stored in the feature. The output graphical type for the feature
should be linear (GT 1) and the degree of smoothing is controlled by the
tolerances of qualifiers /CURVE__SEPARATION, /CURVE__CHORD and
/CURVE__DEVIATION or their corresponding parameter file keywords.
.BL
.LE
CURVE - this should be used when the feature is predominantly curved with
a few straight sections within which are maintained by inserting new points
along the section to hold the shape. These features should have a curve
graphical type (GT 6) and the insertion of controlling point is done at a
distance specified by /CORNER__POINT__SEPARATION from the non-curved point.
.BL
.LE
BREAK - this option can be used to break the feature when there is a change
between the curve and straight sections. This will require that two
feature codes are present in the parameter file for the two types of section.
The parameter file should contain the IFF straight FC, the MapData code, the
keyword `BREAK' and the IFF curve FC.
.END LIST 0
.BL
.I -14
^*Curve-code##\*-#the IFF feature code for the curve section of broken
features. This should only be present in the parameter file when the BREAK
option is used. The feature code supplied should be of graphical type 6.

.LM -14
.BL
Symbol features should not have an ^*Interp\* option as these apply to
linear features only.
.BL
Rotatable symbols in MapData are held with two points, the first being the
locating point and the second giving its orientation (from the first). These
can be converted to IFF by ensuring that the destination IFF feature code for
the feature is of graphical type 8 (a rotated symbol). In this case the IFF
feature will have the single locating point and the corresponding rotation
written to IFF RO entry of the feature.
.BL

.TP 15
.P 0
An example follows :-
.LM -10
.BLANK
.LITERAL
!
! Feature code lookup section of parameter file
!
!CODE  IFF-fc   MD-fc   interp   Curve-fc
!
CODE	1201	12.1	CURVE			!Open (route)
CODE	1202	12.2	CURVE			!Under construction (route)
CODE	1203	12.3	CURVE			!In tunnel
CODE	1212	12.12				!Junc open restricted access
CODE	1213	12.13				!Junction open-full access
CODE	1214	12.14				!Junction under construction
CODE	1224	12.24				!Location
CODE	1225	12.25				!Symbol placement
CODE	1232	12.32	CURVE			!Link road
CODE	1401	14.1	STRAIGHT		!Open (route)
CODE	1402	14.2	STRAIGHT		!Under construction (route)
CODE	1403	14.3	STRAIGHT		!In tunnel
CODE	1412	14.12				!Junc open restricted access
CODE	1413	14.13				!Junction open-full access
CODE	1432	14.32	BREAK	   999		!Link road
CODE	1501	15.1	BREAK	   999		!Open (route)
CODE	1502	15.2	BREAK	   999		!Under construction (route)
CODE	1503	15.3	BREAK	   999		!In tunnel
CODE	1512	15.12				!Junc open restricted access
CODE	1513	15.13				!Junction open-full access
CODE	1524	15.24				!Location
CODE	1525	15.25				!Symbol placement
CODE	1532	15.32	CURVE			!Link road
CODE	1601	16.1	CURVE			!Dual carriageway
CODE	1602	16.2	CURVE			!Under construction (route)
CODE	1603	16.3	CURVE			!In tunnel
!
.END LITERAL
.LM +10

.BLANK
.TP 10
.P 0
^*----------------------------------------------------------------------\*
.HL 2 ^^^*The I2MAPDATA parameter file\*

.P 0
This file is almost identical to the MapData2I parameter file but only contains
an attribute description table.

.P 0
This file contains two types of entry :-

.BLANK
.LIST 0
.DISPLAY ELEMENTS LL,")"
.LE; the environment settings, and
.LE; the feature code lookup table
.END LIST 0

.BLANK
.HL 3 ^^^*The environment setting keywords\*
.P 0
These keywords are the same as many of the DCL command line qualifiers and
can be used to save the need to specify an option each time on the command
line which is particularly useful when batch processing many files.
.P 0
Example keywords follow :-

.BLANK
.LITERAL
!
CURVE_AC	CODE	2001
PRIORITY_AC	NAME	Priority
TEXT_AC	NAME	Text
!
ADD_OFFSET
DIVIDE		1000
!
.END LITERAL
.BL
For an explanation of these keywords, see the corresponding command line
qualifiers documented in the I2MAPDATA Reference Manual.
.BL
Any MAPDATA2I keywords which are present in the parameter file will be
read and ignored by I2MAPDATA, but any undefined words or syntax will be
reported.

.BLANK
.HL 3 ^^^*The feature code lookup table\*
.P 0
Each line of the table is prefixed with a command which identifies the line as
belonging to that table. The lines are free-format, so the order of entries
matters, but the actual position of entries on the line is not important. 
Any text starting with the "!" character is regarded as a comment, and is 
ignored. Comments can appear on the same lines as commands, or on 
separate lines. Note that commands may be in upper or lower case.
.!** and can be abbreviated to the shortest non-ambiguous form.

.P 0
The feature code lookup table describes the translations required to produce
MapData feature codes from IFF feature codes. Each line is prefixed with the
CODE command which tells the program how to translate a particular feature
code.

.P 0
.TP 8
A line has the following form:-

.P 5
^*CODE###IFF-code###MD-fc###Interp###Curve-code\*

.P 0
where the fields are :-

.LM +14
.BL
.P -14
^*CODE########\*-#the command CODE states that this line is an entry in the
feature code lookup table. 
.BL
.I -14
^*IFF-code####\*-#the IFF feature code which maps onto the output MapData
feature code described by ^*MD-fc\*.
.BL
.I -14
^*MD-fc#######\*-#the MapData feature code which is used for the output feature
when converting a feature with feature code ^*IFF-code\*. The feature code
should lie in the range 1.1 to 127.127.
.BL
.I -14
^*Interp######\*-#the interpretation of the MapData used by MAPDATA2I only.
I2MAPDATA will ignore this field but it was included here for completeness as
the same parameter file can be read by I2MAPDATA and MAPDATA2I.
.BL
.I -14
^*Curve-code##\*-#the IFF feature code for the curve section which is only used
by MAPDATA2I. I2MAPDATA will ignore this field but it was included here for
completeness as the same parameter file can be read by I2MAPDATA and MAPDATA2I.
.LM -14
.BL
Rotatable symbols in MapData are held with two points, the first being the
locating point and the second giving its orientation (from the first). These
can be converted from IFF symbol features (denoted by the appropriate bits set
in the FS entry) if they have two points and are of graphical type 8. The
second MapData point will be derived by converting the angle in the IFF RO
entry into a second point.
.BL

.LM -10
.PAGE
Here is an example of a MAPDATA parameter file for use with both MAPDATA2I
and I2MAPDATA.
.BL
.LM 0
.LITERAL
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!
!			     MapData Parameter File
!
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
!
! Environment setting for MAPDATA2I
!
CURVE_AC	CODE	2001
PRIORITY_AC	NAME	Priority
TEXT_AC		NAME	Text
!
CORNER_POINT_SEPARATION	40.0
!
CURVE_SEPARATION	40.0
CURVE_CHORD		10.0
CURVE_DEVIATION		0.5
!
SCALE			200000
OFFSET			400000 100000
MULTIPLY		1000
!
DEFAULT_LINE_FC		1
DEFAULT_SYMBOL_FC	25
!
!
! Environment settings for I2MAPDATA
!
ADD_OFFSET
DIVIDE			1000
!
!
! Feature code lookup table for MAPDATA2I and I2MAPDATA
!
!
!CODE  IFF-fc   MD-fc   interp   Curve-fc
!
CODE	1201	12.1	CURVE			!Open (route)
CODE	1202	12.2	CURVE			!Under construction (route)
CODE	1203	12.3	CURVE			!In tunnel
CODE	1212	12.12				!Junc open restricted access
CODE	1213	12.13				!Junction open-full access
CODE	1214	12.14				!Junction under construction
CODE	1224	12.24				!Location
CODE	1225	12.25				!Symbol placement
CODE	1232	12.32	CURVE			!Link road
CODE	1401	14.1	STRAIGHT		!Open (route)
CODE	1402	14.2	STRAIGHT		!Under construction (route)
CODE	1403	14.3	STRAIGHT		!In tunnel
CODE	1412	14.12				!Junc open restricted access
CODE	1413	14.13				!Junction open-full access
CODE	1432	14.32	BREAK	   999		!Link road
CODE	1501	15.1	BREAK	   999		!Open (route)
CODE	1502	15.2	BREAK	   999		!Under construction (route)
CODE	1503	15.3	BREAK	   999		!In tunnel
CODE	1512	15.12				!Junc open restricted access
CODE	1513	15.13				!Junction open-full access
CODE	1524	15.24				!Location
CODE	1525	15.25				!Symbol placement
CODE	1532	15.32	CURVE			!Link road
CODE	1601	16.1	CURVE			!Dual carriageway
CODE	1602	16.2	CURVE			!Under construction (route)
CODE	1603	16.3	CURVE			!In tunnel
!
.END LIT



