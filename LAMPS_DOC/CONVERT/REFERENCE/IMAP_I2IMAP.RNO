.SUBTITLE UTILITY I2IMAP
.PAGE
.TP 10
.P 0
^*--------------------------------------------------------------------------------\*
.HL 1 ^^^*UTILITY I2IMAP\*

.TP 10
.P 0
^*--------------------------------------------------------------------------------\*
.HL 2 ^^^*FUNCTION\*

.LM +10

.P 0
I2IMAP reads an IFF file and outputs the data to an Informap database. The 
program is driven by a parameter file which describes each feature code, and 
by the Informap schema which describes the database. Options exist to select 
only particular feature codes and to select a rectangular area.

.LM -10

.TP 10
.P 0
^*--------------------------------------------------------------------------------\*
.HL 2 ^^^*FORMAT\*

.LM +10

.P 0
$ I2IMAP IFF-file-spec 

.BLANK
.NOFILL
^*Command qualifiers                       Defaults\*

/AREA=(limit[,...])                      All data output
/DRAWING=name                            IFF-file-spec name part
/FC=(integer[,...])                      All feature codes
/[NO]FRT[=file-spec]                     /NOFRT
/INVALID__COORDS=name                     No invalid coordinate output
/[NO]LOG                                 /NOLOG
/MAX__INVALID                             No maximum applied
/OFFSET=(coordinates)                    See text
/PARAMETER=file-spec                     See text
/[NO]QUIET                               /NOQUIET
/SCHEMA=name                             None
/SUMMARY                                 No summary output

.FILL

.LM -10

.TP 10
.P 0

^*--------------------------------------------------------------------------------\*
.HL 2 ^^^*PROMPT\*

.LM +10

.NO FILL
__IFF-file:          IFF-file-spec
.FILL

.LM -10

.TP 10
.P 0
^*--------------------------------------------------------------------------------\*
.HL 2 ^^^*PARAMETERS\*

.LM +10

.P -10;IFF-file-spec

.P -2;-#specifies the IFF file which is to be converted. Any part of the 
file-spec which is not supplied will be taken from the default specification
'LSL$IF:IFF.IFF'. 

.LM -10

.TP 10
.P 0
^*--------------------------------------------------------------------------------\*
.HL 2 ^^^*COMMAND QUALIFIERS\*

.LM +10

.TP 7
.P -10;/AREA=(WEST:real,SOUTH:real,EAST:real,NORTH:real)
.P -2;-#ensures that only data falling within the area specified will be output
from the IFF file. The keywords are the western, southern, eastern and northern
boundaries of the area required, in ^*IFF units\* with respect to the local
origin. Only the required keywords need to be given, the others defaulting to
the limits given in the range (RA) entry in the IFF file. The /AREA qualifier is
not allowed in conjunction with the /INVALID__COORDS qualifier. 

.TP 7
.P -10;/DRAWING=name
.P -2;-#specifies the Informap drawing to which the data is to be output. The
drawing name may be from 1 to 9 alphanumeric characters. The default drawing
name is the name part of the parsed IFF-file-spec, truncated to 9 characters if
necessary. 

.TP 7
.P -10;/FC=(integer[,...])
.P -2;-#causes I2IMAP to output only those IFF features which have the specified
feature code(s). The /FC qualifier will accept single, multiple or ranges of
feature code arguments. Ranges may be specified with starting and ending feature
codes that are separated by a colon, for example /FC=56:58. When specifying more
than one range of feature codes, separate each range with a comma, for example
/FC=(1:5,56:89). The maximum number of feature codes which may be specified is 
1024. 

.TP 8
.P -10;/FRT[=file-spec]
.BR
.I -10;/NOFRT
.P -2;-#specifies an FRT file which the program will read and use to interpret
non-standard AC entries. The FRT file-spec is parsed against the default
LSL$FRT:'name'.FRT where 'name' is the name specified with /SCHEMA. 
.P 0
/FRT is necessary if ADT NAME is present in the parameter file, otherwise that
particular attribute definition will be skipped. The FRT is also used to
ascertain ACD types, and if not specified, a default ACD type will be assumed. 

.TP 15
.P -10;/INVALID__COORDS=[file-spec]
.P -2;-#specifies the file to contain details of any coordinates in the IFF file
falling outside the map area. The details recorded will be the actual
coordinates of the point and the Feature Serial Number, Feature Code and Text
category (if appropriate) of the feature. For text and symbol features only one
entry will be written to this file. For line features one entry will be written
to this file for each coordinate that is outside the bounds of the map. The
file-spec is parsed from the default SYS$DISK:'name'.INV where 'name' is the
name specified with /SCHEMA. The qualifier is intended for use with OS type IFF
files which contain the map extent in the CP entry. If the facility is to be
used with any other files then care should be taken that the CP entry contains
values representing the map extent. The /INVALID__COORDS qualifier is not
allowed with the /AREA qualifier. 

.TP 8
.P -10;/LOG
.BR
.I -10;/NOLOG
.P -2;-#causes supplementary messages to be sent to SYS$OUTPUT. Supplementary
messages are generated when a file is successfully opened, and a reassuring
message is output each time a new IFF layer is encountered in the input file. 

.TP 7
.P -10;/MAX__INVALID=n
.P -2;-#specifies the maximum number of entries to be written to the invalid 
coordinates file before processing is stopped. If this qualifier is not 
supplied then there is no restriction on the number of errors detected. The
qualifier is not valid unless the /INVALID__COORDS qualifier is also specified.

.TP 7
.P -10;/OFFSET=(EAST:real,NORTH=real)
.P -2;-#specifies an Easting and Northing offset (in IFF units) to be applied 
to all coordinates in the IFF file, before output to Informap. If the IFF file 
contains a type 2 map descriptor (MD) entry, the origin offset in that entry is 
used by default. Otherwise, the origin is assumed to be (0,0).

.TP 7
.P -10;/PARAMETER=file-spec
.P -2;-#specifies the IFF parameter file, which defines the transformation of
feature codes in the IFF data to data types in the Informap data base. The
parameter file-spec is parsed from the default
.I +10;STI__ROOT:[300010]'name'.I2IMAP__PAR
.P 0;where 'name' is the name specified with /SCHEMA. If /PARAMETER is not given
explicitly on the command line, the default parameter file-spec used. 

.TP 8
.P -10;/QUIET
.BR
.I -10;/NOQUIET
.P -2;-#suppresses the UNKFC and UNKATT warning messages. UNKFC informs the user
that a particular feature code has not been defined in the parameter file.
UNKATT informs the user that a particular attribute has not been defined for
transfer into the current datatype. This qualifier can be useful if (for
example) only a partial parameter file has been created, and /FC has been used
to select those feature codes which ^*have\* been defined. 

.TP 7
.P -10;/SCHEMA=name
.P -2;-#specifies the schema to be used in outputting the map data. The schema
name may be from 1 to 9 alphanumeric characters. This qualifier is mandatory. 


.TP 7
.P -10;/SUMMARY=[file-spec]
.P -2;-#specifies the file to be used in outputting summary details about the
translation of an individual map sheet. The entries in the file are currently 
.BLANK
.LIST 0
.DISPLAY ELEMENTS LL,")"

.LE; FCE - Feature Code Errors i.e. the number of features for which a 
translation could not be found within the parameter file, and 

.LE; CRE - Coordinate Range Errors i.e. the number of errors written to the 
invalid coords file (if specified). 
.END LIST

The file-spec is parsed from the default SYS$DISK:'name'.SUM where 'name' is
the name used with /DRAWING. 

.LM -10

.TP 10
.P 0
^*--------------------------------------------------------------------------------\*
.HL 2 ^^^*RESTRICTIONS\*

.LM +10

.LIST 'o'
.LE
/SCHEMA must be specified
.LE
/MAX__INVALID requires an /INVALID__COORDS specification
.LE
/AREA and /INVALID__COORDS are not allowed together
.END LIST

.LM -10

.TP 10
.P 0
^*--------------------------------------------------------------------------------\*
.HL 2 ^^^*DESCRIPTION\*

.LM +10

.P 0
I2IMAP reads an IFF file containing a single map and produces an Informap
working storage drawing with the aid of a parameter file and an Informap schema.
The user is assumed to have a working knowledge of the Informap system,
including how to set up and use the schema. 

.TP 10
.BLANK
.HL 3 ^^^*IFF file\*

.P 0
The IFF file should conform to the standards set out in the DATA PREPARATION
section under the heading 'Preparation for data to be transferred between
Informap and IFF'. 

.TP 10
.BLANK
.HL 3 ^^^*Parameter file\*

.P 0
This file contains one or more of the following tables:

.list "o"
.LE;A feature description table (FDT). This describes the translations needed
to produce Informap data from IFF data.

.LE;An attribute description table (ADT) which describes the translations needed
to produce Informap attributes from IFF attributes.

.LE;A translation error table specifying default datatypes to be applied to
feature codes for which there is no defined translation in the FDT. 
.END LIST

The format of the table is described in the DATA PREPARATION section under the
heading ^*'The I2IMAP parameter file'\*. The file will probably have been set up
by the LAMPS system manager and remain relatively static at most installations. 

.TP 10
.BLANK
.HL 3 ^^^*Using the program\*

.P 0
Normal use of the program is in batch mode - that is, running it via a batch
command file, submitted with the SUBMIT command. It is also possible to run
I2IMAP interactively, although as translating an IFF file can take a long time
this is not necessarily the best method. 

.P 0
I2IMAP may have been set up to include at least the /PARAMETER and /SCHEMA
qualifiers on your system, so you may only need to give the input IFF file and
/DRAWING. 

.TP 10
.BLANK
.HL 3 ^^^*How the program works\*

.P 0
Once the program has been invoked and the command line successfully read, a
summary of the inputs and outputs is displayed. Then the parameter file is read
and if successful the IFF file is opened. 

.P 0
If /OFFSET has not been specified, the IFF file is scanned for the map 
descriptor (MD) entry. If the descriptor is type 2, it is read in to obtain the 
origin offset. 

.P 0
The program reads the range (RA) entry from the IFF file, this is used with the
origin offset and any area limits to deduce the Informap drawing limits. These
are then used to calculate the DEL factor and the distance to be used for
working out text and symbol orientating points. 

.P 0
If /AREA was specified, the program checks to see if the map
.list "-"
.le;is totally within the area (in which case no clipping is required), 
.le;is totally outside the area (in which case it will be skipped),
.le;overlaps the area (in which case it will be clipped).
.end list
 A check is also made to ensure that the area boundaries are sensible. 

.P 0
The contents of the IFF file are processed to produce the Informap drawing
files. The datatype and linetype for a particular feature code are obtained from
the parameter file, but for processing purposes the type of feature (line,
symbol or text) is ascertained from the setting of the text/symbol bit in the
IFF FS entry rather than by using the Informap data kind. ^*Note\* that there
are no consistency checks between these two values. 

.P 0
Different types of data are treated as follows :-

.LIST "o"

.LE;
Linear data is output without modification. Green mode is used for the first
point in a feature, white elsewhere. Invisible lines are regarded as feature
breaks - no connection is transmitted. 

.LE;
Symbols are output using the position and rotation angle supplied in the IFF
file. The pen number used is determined by the FDT entry in the parameter file
for that symbol feature code. Note that scaled symbols are not treated
separately - they are still output using only the position and rotation angle
from the IFF file. 

.LE;
The datatype and linetype for a particular text depend on the IFF text height
and text category (often used to hold the font number). If a text does not fall
within any of the specified height ranges or categories, the first entry in
the table for that particular feature code is used by default. If set, the IFF
text justification is used to determine the equivalent Informap justification. 
The IFF text style entry is ignored. 

.END LIST 0

.P 0
Coordinates are assumed to be held in ST entries - ZS entries are not 
supported. 

.P 0
The Informap attribute name for a particular IFF attribute is obtained from the
parameter file. A new non-graphic record is always written when a new feature is
encountered in the IFF file.

.P 0
AC entries in text features cannot be transferred. similarly, if the feature
code translates to a non-facility datatype, AC entries are ignored.

.P0 
IFF attributes of type "real" will if necessary translate to the nearest
integer in Informap . Similarly, IFF integer attributes can translate into
Informap type real. IFF character attributes and text strings will be truncated
if necessary. 

.P 0
When all applicable data has been output to the drawing file, the program will 
exit.

.TP 10
.BLANK
.HL 3 ^^^*The Informap drawing\*

.P 0
The drawing produced by I2IMAP is output to the directory specified in the 
schema.

.P 0
^*Note:\*#if a drawing already exists new data will be appended to it. Thus
/DRAWING may be used successively to add to a particular drawing - this is not
generally recommended, as facetisation produces the required effect. 

.BLANK
.TP 10
.HL 3 ^^^*Secondary annotation points\*
.P 0
I2IMAP allows selected AC entries from the IFF file to be transferred as 
secondary annotation points in the Informap drawing.
.P 0
As mentioned in "Informap data preparation", the IFF attribute names "STARTX",
"START", "ENDX" and "ENDY" are reserved for the purpose of transferring
Secondary annotation points. All of these names must be present as "ADT NAME"
entries in the attribute description to enable secondary annotation transfer. 
E.g.
.BLANK
.I +10;ADT#NAME#STARTX#AC#VALUE#COMMENT
.P 0
Although the "dtype" field of the ADT entry is not used, its presence is 
required for the ADT entry to be valid.
.P 0
Corresponding entries must be present as ACD entries in the FRT file which
translate the names "STARTX"... into IFF attribute codes. E.g. 
.BLANK
.I +10;ACD TABLE 1
.I +10;ACD R 1 STARTX -1.0E37 +1.0E#&
.P 0
This specifies that the IFF Attribute name "STARTX" corresponds to the IFF
ancillary code 1001 (see the FRT user guide for information on FRT entries). 
.P 0
AC entries must be present in the IFF file for these secondary annotation points
to be transferred. E.g. 
.BLANK
.I +10;NF#186 158
.I +10;FS#29 0 0 0
.I +10;AC#1001 122.1191
.I +10;AC#1002 61.32813
.I +10;AC#1003 120.7519
.I +10;AC#1004 58.4961
.I +10;TH#0
.I +10;ST#2 0
.I +10;###122.1191   61.32813
.I +10;###120.7519    58.4961
.I +10;EF
.P 0
In this example the AC codes 1001, 1002, 1003 and 1004 correspond to the
Attribute names STARTX, STARTY, ENDX and ENDY respectively.
.p 0
These ACs will be processed by I2IMAP and a 2 point secondary annotation point
will be transferred to the Informap drawing. The first point will be at
(122.1191,#61.32813) and the second point (the rotation point) will be at
(120.7519,#58.4961). These points will be converted to absolute coordinates
prior to being output to the Informap drawing using details from the 
map-descriptor "MD" entry from the IFF file. 
.P 0
Multiple secondary annotation points, up to a limit of 32, may be created for
a given feature. The relevant ACs are taken in order, so the first STARTX will
be associated with the first STARTY (and the first ENDX and ENDY if present),
and the second STARTX with the second STARTY. In the case of a discrepancy,
the smaller of the numbers of STARTX and STARTY ACs for a given feature will
be taken as definitive. 
.P 0
^*Note:\* The rotation point will be assumed to be the same as the first point
if the appropriate AC entries for ENDX and ENDY are missing from the IFF file. 
.LM -10
.PAGE
.P 0
^*--------------------------------------------------------------------------------\*
 
.HL 2 ^^^*EXAMPLES\*
 
.BLANK
.NO FILL
$ ^*I2IMAP/SCHEMA=DEMO/PAR=STI__ROOT:[LSL.LOOKUP]/LOG SP7461SE_<CR_>\*
 
Schema           : DEMO
Parameter file   : STI__ROOT:[LSL.LOOKUP]DEMO.I2IMAP__PAR
IFF input file   : LSL$IF:SP7461SE.IFF
Informap drawing : SP7461SE
Outputting supplementary messages
 
%I2IMAP-I-READPAR, reading parameter file
%LSLLIB-I-IFFOPENED, STI__ROOT:[LSL.TEMP]SP7461SE.IFF;1 opened for read
 
Offsets          :  474500.00,  261000.00
 
%I2IMAP-I-LAYER, layer 1 found
%I2IMAP-W-UNKFC, FC 66 has not been defined, FSN 1179 ignored
%I2IMAP-W-UNKFC, FC 66 has not been defined, FSN 1180 ignored
%I2IMAP-W-UNKFC, FC 66 has not been defined, FSN 1183 ignored
%I2IMAP-W-UNKFC, FC 90 has not been defined, FSN 1205 ignored
%I2IMAP-W-UNKFC, FC 98 has not been defined, FSN 1206 ignored
%I2IMAP-W-UNKFC, FC 90 has not been defined, FSN 1207 ignored
%I2IMAP-W-UNKFC, FC 90 has not been defined, FSN 1208 ignored
%I2IMAP-W-UNKFC, FC 98 has not been defined, FSN 1209 ignored
%I2IMAP-W-UNKFC, FC 98 has not been defined, FSN 1210 ignored
%I2IMAP-W-UNKFC, FC 98 has not been defined, FSN 1211 ignored
%I2IMAP-W-UNKFC, FC 98 has not been defined, FSN 1212 ignored
%I2IMAP-W-UNKFC, FC 98 has not been defined, FSN 1213 ignored
%I2IMAP-W-UNKFC, FC 98 has not been defined, FSN 1214 ignored
%I2IMAP-W-UNKFC, FC 98 has not been defined, FSN 1215 ignored
%I2IMAP-W-UNKFC, FC 96 has not been defined, FSN 1216 ignored
%I2IMAP-W-UNKFC, FC 98 has not been defined, FSN 1217 ignored
%I2IMAP-W-UNKFC, FC 98 has not been defined, FSN 1218 ignored
%I2IMAP-W-UNKFC, FC 98 has not been defined, FSN 1219 ignored
%I2IMAP-W-UNKFC, FC 102 has not been defined, FSN 1220 ignored
%I2IMAP-W-UNKFC, FC 102 has not been defined, FSN 1221 ignored
%I2IMAP-W-UNKFC, FC 100 has not been defined, FSN 1222 ignored
%I2IMAP-W-UNKFC, FC 102 has not been defined, FSN 1227 ignored
%I2IMAP-W-UNKFC, FC 102 has not been defined, FSN 1228 ignored
%I2IMAP-W-UNKFC, FC 102 has not been defined, FSN 1229 ignored
%I2IMAP-W-UNKFC, FC 102 has not been defined, FSN 1232 ignored
%I2IMAP-W-UNKFC, FC 102 has not been defined, FSN 1233 ignored
%I2IMAP-W-UNKFC, FC 102 has not been defined, FSN 1234 ignored
%I2IMAP-W-UNKFC, FC 102 has not been defined, FSN 1235 ignored
%I2IMAP-W-UNKFC, FC 98 has not been defined, FSN 1239 ignored
%I2IMAP-W-UNKFC, FC 102 has not been defined, FSN 1240 ignored
%I2IMAP-W-UNKFC, FC 102 has not been defined, FSN 1241 ignored
%I2IMAP-W-UNKFC, FC 102 has not been defined, FSN 1242 ignored
%I2IMAP-W-UNKFC, FC 102 has not been defined, FSN 1243 ignored
%I2IMAP-W-UNKFC, FC 102 has not been defined, FSN 1244 ignored
%I2IMAP-I-IFFCLOSED, IFF file closed
 
 ELAPSED:    0 00:02:56.85  CPU: 0:01:34.77  BUFIO: 2252  DIRIO: 1544  FAULTS: 269 
$ 
.FILL

.LM +10

.P 0
This example shows what happens when some feature codes in the IFF file are
not defined in the parameter file.
.P 0
The parameter file directory has been specified, but the file-spec name part and
extension have both defaulted (the name to the schema name).
.P 0
^*Note:\*#if the schema and parameter file are fixed at a site, the symbol
I2IMAP could be set up to include the /SCHEMA and /PARAMETER qualifiers. 
.P 0
Only the name part of the IFF file-spec has been given, defaults being filled in
for the directory and extension. The Informap drawing name defaults to the the
IFF file-spec name part, in the absence of a /DRAWING qualifier.
.P 0
All IFF feature codes are converted to the appropriate Informap datatypes,
except those which have not been defined in the parameter file. A warning
message is output for each feature whose feature code is undefined, and the
feature is ignored.The /LOG qualifier causes the extra informational messages
to be output.
.P 0
^*Note:\*#the offset applied to IFF coordinates is the origin offset in the Map
Descriptor (MD) entry in the IFF file. 

.LM -10

.BLANK
.NO FILL
$ ^*I2IMAP/SCHEMA=DEMO/PAR=STI__ROOT:[LSL.LOOKUP] SP7461 -\*
__$ ^*/DRAW=MY__MAP/AREA=(W:600,E:900,S:200,N:650)/FC=(15,21,30,108)/QUIET_<CR_>\*
 
Schema           : DEMO
Parameter file   : STI__ROOT:[LSL.LOOKUP]DEMO.I2IMAP__PAR
IFF input file   : LSL$IF:SP7461.IFF
Informap drawing : MY__MAP
Selecting by FC
Not complaining about unknown FCs
Offsets          :  474000.00,  261000.00
Area selected    :  474600.00,  261200.00 to  474900.00,  261650.00
 
 ELAPSED:    0 00:01:09.52  CPU: 0:00:51.04  BUFIO: 185  DIRIO: 1010  FAULTS: 230 
$ 
.FILL

.LM +10

.P 0
This example illustrates the conversion of a specified area and selected feature
codes from an IFF file.
.P 0
The IFF file-spec is given and an explicit Informap drawing name is specified
with /DRAWING.
.P 0
/AREA defines the boundaries of the area to be converted. These are specified in
IFF units. If a boundary coincides with the edge of a map the relevant keyword
is not required. 
.P 0
Feature codes to be translated are specified with /FC, and /QUIET is used to
suppress the messages warning of undefined feature codes in the parameter file.
The /QUIET qualifier should only be used by experienced operators. 
.P 0
The offset applied to IFF coordinates is the origin offset in the Map Descriptor
(MD) entry in the IFF file.
.P 0
Note the use of the DCL continuation character "-", and abbreviations for
 /PARAMETER, /DRAWING and the /AREA keywords. 

.LM -10

.!
.!******************************************************************************
.! get the messages
.!
.REQUIRE "IMAP_I2IMAPMSG.RNO"
