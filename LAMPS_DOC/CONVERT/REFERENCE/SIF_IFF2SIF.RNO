.SUBTITLE UTILITY IFF2SIF
.PAGE
.TP 10
.P 0
^*--------------------------------------------------------------------------------\*
.HL 1 ^^^*UTILITY IFF2SIF\*

.TP 10
.P 0
^*--------------------------------------------------------------------------------\*
.HL 2 ^^^*FUNCTION\*

.LM +10

.P 0
IFF2SIF provides a translation from IFF to a subset of Intergraph's Standard
Interchange Format (SIF). It produces SIF ASCII text format, to magnetic tape
or to a disk file. The actual translation is guided by a SIF Definition
File (SDF) and a normal FRT file. Commands are provided to allow the scaling
and shifting of data as it is output.

.LM -10

.TP 10
.P 0
^*--------------------------------------------------------------------------------\*
.HL 2 ^^^*FORMAT\*

.LM +10

.P 0
$ IFF2SIF

.BLANK
^*Command qualifiers\*
.NOFILL
/ SCITEX
.FILL

.LM -10

.TP 10
.P 0
^*--------------------------------------------------------------------------------\*
.HL 2 ^^^*PROMPTS\*

.LM +10

.P 0
IFF2SIF is an interactive, command driven utility. Command input is expected
when the following prompt is given:

.P +10
iff2sif_>

.LM -10

.TP 10
.P 0
^*--------------------------------------------------------------------------------\*
.HL 2 ^^^*COMMAND QUALIFIERS\*

.LM +10

.TP 7
.P -10;/SCITEX
.P -2;-#enables output for the SCITEX version of SIF. This is a licensed
option. To use this qualifier the logical name ^*LSL$IFF2SIF__SCITEX\*
must point to the shared image supplied by Laser-Scan which checks that
a licence has been obtained. If this image is not present an error
occurs.


.LM -10

.TP 10
.P 0
^*--------------------------------------------------------------------------------\*
.HL 2 ^^^*DESCRIPTION\*

.LM +10


.TP 10
.BLANK
.HL 3 ^^^*Files required\*

.P 0
IFF2SIF requires that the following files be specified:

.LIST "o"
.LE; IFF file(s)
.BR; These contain the data to be translated.
.LE; FRT file
.BR; This is the Feature Representation File used to describe the meaning
of the feature codes within the file. It will be the same FRT that was used
when the file was created, or when it was edited with LITES2.
.LE; SDF file
.BR; This is the SIF Description File, which defines how each feature code
should be translated to SIF. 
.END LIST 0

.p0
In addition, two other forms of file may also be used

.LIST "o"
.LE; SRI file
.BR; This is a Symbol Representation IFF file, which defines the graphic
used for each IFF symbol. It is only required if scaled symbols are being
output via IFF2SIF.
.LE; Input list file
.BR; This is a text file containing the list of IFF files to be output, one
per line. It may be used instead of giving a succession of IFF commands.
.END LIST


.TP 10
.BLANK
.HL 3 ^^^*Output units and scale\*

.P 0
The data is output in SIF Units of Resolution (UORs). The customer should have
defined what size one UOR should be - perhaps one millimetre on the ground. In
order to convert the units in the IFF file into UORs in the output, IFF2SIF
must be told the scale of the IFF units with respect to ground units, and the
size of UORs in ground units. 

.P 0
The coordinates read from the IFF file may be offset and scaled to place
them into the correct coordinate range in the destination SIF file.

.TP 8
.P 0
The transformations applied are:

.NOFILL
.TP 2
.P 5
^*x in UORs = ( x in IFF + x offset ) _* IFF scale / UOR unit\*
.I 5
^*y in UORs = ( y in IFF + y offset ) _* IFF scale / UOR unit\*

.BLANK
.TP 11
.P 0
If height data is being scaled, then

.P 5
^*z in UORs = ( z in IFF + z offset ) _* z scale / UOR unit\*

.P 0
or if height data is being magnified, then

.P 5
^*z in UORs = ( z in IFF + z offset ) _* z multiplication\*

.P 0
otherwise

.P 5
^*z in UORs = ( z in IFF + z offset )\*

.FILL

.P 0
^*x#offset\* and ^*y#offset\* are either taken from the map descriptor of each
file, after the MAPDESCRIPTOR OFFSET command has been given, or are explicitly
specified with the OFFSET command. ^*z#offset\* is specified with the ZOFFSET
command. If offsets are not requested, then the offset addition is not
performed.

.P 0
Offsets should be used in the following cases:

.LIST
.LE; when the local origin of the IFF file is to be added to the x,y
coordinates so that the absolute coordinates may be output.
.LE; when a constant offset is to be added to the z values.
.LE; when negative coordinates are to be output, to make the coordinates be
greater than or equal to zero (since IFF2SIF outputs unsigned data). If this
is to be done for x,y coordinates, the map descriptor's local origin may not
currently be used.
.END LIST

.P 0
^*IFF#scale\* is specified with the IFFSCALE command, and is the scale of
the data in the IFF file. This will generally be 1:1 - that is one IFF unit
represents one ground unit. We assume that ground units are metres. 

.P 0
^*z#scale\* is specified with the ZSCALE command, and is the scale of the
height data in the IFF file. This command is only given if Z data is present
and to be scaled in a similar manner to the X,Y coordinates. The default
action is not to scale any height data.

.P 0
^*z#multiplication\* is specified with the ZMULTIPLY command, and is the
value to multiply all heights by before outputting them. This command is only
given if Z data is present and to be multiplied by a constant, for instance to
retain the precision of fractional heights. The default action is not to
multiply any height data. 

.P 0
^*UOR#unit\* is specified with the UORUNITS command, and is the size of a
UOR in metres on the ground. Thus if UORs are ground millimetres, one UOR is
0.001 ground metres, and ^*UOR#unit\* will be 0.001 

.P 0
Finally, IFF2SIF also requires the scale of the digitised document with regard
to the ground. This is needed in case the user specifies text sizes in
millimetres on the sheet. Since all data is output in UORs, which are in ground
units, IFF2SIF requires the sheet scale so that it can guarantee to be able to
output any texts correctly. 

.LM -10

.TP 10
.P 0
^*--------------------------------------------------------------------------------\*
.HL 2 ^^^*COMMANDS\*

.LM +10

.P 0
IFF2SIF is told what to do by various commands. One command may be given on 
each prompt line - anything after that command is ignored.

.P 0
Commands may be abbreviated, so long as the abbreviation is not ambiguous (the 
program will complain if it is, and ignore the abbreviation).


.TP 10
.BLANK
.HL 3 ^^^*Summary of commands\*

.P 0
In summary, the available commands are:

.BLANK
.LIST 0," "
.LE;APPEND################append data to end of tape
.LE;DEBUG#################for debugging
.LE;DENSITY##number#######choose magtape density
.LE;DIMENSION##dim########specify 2 or 3 dimensional output
.LE;FRT##filespec#########specify FRT file
.LE;HELP##command#########give help on a command
.LE;IFF##filespec#########specify next file to output
.LE;IFFSCALE##scale#######specify scale of IFF units (default 1:1)
.LE;IGNORE##layer#########ignore an IFF layer
.LE;INPUT__LIST##filespec#read the IFF filespecs from this file
.LE;JUSTIFICATION##posn###specify a text justification
.LE;MAGTAPE##tapedrive####choose magtape drive
.LE;MAPDESCRIPTOR##what###choose to use information from the MD entry
.LE;NOMAGTAPE#############don't output to magtape
.LE;NOOUTPUT##############undo OUTPUT
.LE;NOREFLECT#############for debugging
.LE;NOZSCALE##############heights not to be scaled (default)
.LE;OFFSET###X,Y##########specify offset of map (in IFF units)
.LE;OUTPUT##filespec######output next IFF file to disk
.LE;RECORD##size##########specify output record size (default 72)
.LE;REFLECT###############for debugging
.LE;SDF##filespec#########specify SIF definition file
.LE;SHEETSCALE##scale#####specify scale of sheet
.LE;SHOW##################show the current state for next output
.LE;SRI##filespec#########specify a symbol definition file
.LE;TEXTLEVEL##what#######where to get text level from
.LE;TEXTSIZE##what########where to get text size from
.LE;UORUNIT##metres#######specify size of UORs (output units)
.LE;ZMULTIPLY##multiply###specify amount to multiply height units
.LE;ZOFFSET##Z############specify offset of heights (in IFF units)
.LE;ZSCALE##scale#########specify scale of height units
.END LIST

.TP 10
.BLANK
.HL 3 ^^^*Alphabetical list of commands\*

.LM +10
.BLANK
.TP 10
.I -8
APPEND

.P 0
This command tells the program that, when it initialises the magnetic tape, it 
must find the end of data and prepare to add more SIF files to the tape. Thus 
the command may only be given before the tape has been initialised.

.P 0
Note that the command will only work sensibly if there are already SIF data 
files on the magtape.

.P 0
The default action on initialising the tape is to rewind it, ready to start 
from scratch.

.BLANK
.TP 10
.I -8
DEBUG

.P 0
This command is intended for debugging only - it is equivalent to giving the 
sequence of commands

.P 10
REFLECT
.I 10
NOMAGTAPE
.I 10
OUTPUT##TT:
.I 10
SHOW

.BLANK
.TP 10
.I -8
DENSITY##'integer'

.P 0
This command tells the program to output SIF data to the magtape at the 
specified density. The value may be either 800 or 1600.

.P 0
Note that this command may only be given before the magtape has been 
initialised - it is not possible to change the tape density after the tape has 
been written to.

.P 0
The default density is 1600 bpi.

.BLANK
.TP 10
.I -8
DIMENSION##'integer'

.P 0
This command tells the program that all output from now on will be either two
or three dimensional, according to whether 'integer' is 2 or 3. Two dimensional
output is the default. 

.P 0
If two dimensional output is selected, then the Z coordinates of ZS entries are
ignored, and heights encoded in height ACs are output using the ACZ command. If
three dimensional output is selected, then all IFF features must contain an
explicit height value, either from a height AC or from the Z values in a ZS
entry. 

.BLANK
.TP 10
.I -8
FRT##'file-spec'

.P 0
This command tells the program which FRT definition file to use from 
now on. The file chosen will be used for all further IFF files output unless 
the FRT command is given again.

.P 0
The FRT file is used alongside the SDF to check that features are coded 
correctly.
Note that if the SDF command is not given, then an SDF of the same directory
and name as the FRT will be assumed (the extension is just changed from _.FRT
to _.SDF)

.P 0
The FRT file-spec is filled out from the default LSL$FRT:.FRT

.BLANK
.TP 10
.I -8
HELP##'command'

.P 0
This command asks for help on the given IFF2SIF command. If no command is 
specified, then it gives a list of the commands available.

.BLANK
.TP 10
.I -8
IFF##'file-spec'

.P 0
This command tells the program which IFF file to output. After it has been 
given, the program will attempt to output the file. Therefore any other 
commands affecting output must have been given before the IFF command.
In particular, at least one of the SDF or FRT commands must have been given to
determine what SIF and FRT definition files are to be used when translating.
Also, the mapscale and UOR unit must have been given - see MAPSCALE and UORUNIT
below.

.P 0
The IFF file-spec is filled out from the default LSL$IF:.IFF;0

.P 0
See also the INPUT__LIST command, which allows multiple IFF files to be
specified.

.BLANK
.TP 10
.I -8
IFFSCALE##'real'

.P 0
This command tells the program what scale the IFF units are in, with respect to
ground units. The program will assume a scale of 1.0 (ie#1:1), and this command
need only be given if that assumption is incorrect. 

.P 0
The scale of IFF units is used with the UORUNIT command, to allow the program
to decide on the multiplication factor to use in going from IFF map units to
SIF UORs.
                                                                              
.P 0
The IFF scale is assumed the same for all further IFF files output, unless 
this command is given again.

.P 0
Note that this scale is only applied to X and Y coordinates - to scale height
values in the same manner, use the ZSCALE command.

.BLANK
.TP 10
.I -8
IGNORE##'integer'

.P 0
This command tells the program to ignore the contents of layer 'integer' in the
IFF files being output. Only one layer may be ignored. By default, the contents
of layer 0 will be ignored. 

.P 0
If you want to output all layers, then ask the program to ignore a negative 
layer number.

.BLANK
.TP 10
.I -8
INPUT__LIST##'filespec'

.P 0
This command tells the program to output the IFF files specified in the file
'filespec'. The input list file must contain one IFF filespec on each line.
Blank lines and lines starting with an exclamation mark (!) will be ignored.
When the end of the input list file is reached, IFF2SIF will exit.

.BLANK
.TP 10
.I -8
JUSTIFICATION##'integer'

.P 0
By default, the text justification position is taken from the text code entry
in the third word of the IFF FS entry. However, this is normally only set in
the IFF file if OS text conventions are in use. Therefore this command is
provided to set the text justification for all text features from now on to be
'integer'. 

.P 0
The justification positions are numbered 1 to 9, where the normal position 
(bottom left hand corner of the text) is justification 3.

.P 0
The command JUSTIFICATION 0 will cause the program to look in the FS entry 
again.

.BLANK
.TP 10
.I -8
MAGTAPE##'device-name'

.P 0
This command tells the program to write to the specified magnetic tape unit. If
the argument is omitted, then MTA0 is assumed. All following IFF files will be
output to this tape unit. 

.P 0
The command may only be given before the magnetic tape has been initialised,
since it is not possible to change the tape drive being used partway through
the program. 

.P 0
Note that the UNIT, DENSITY and APPEND commands also enable output to magtape,
and that when the program starts up, it assumes that it will be outputting to
magnetic tape (on MTA0). 

.BLANK
.TP 10
.I -8
MAPDESCRIPTOR##'what'

.P 0
This command tells the program that it should read the map descriptor (MD)
entry of each IFF file from now on. The 'what' tells it what information to
use from the MD entry. The following are supported: 

.LM +8
.BLANK
.TP 5
.I -8
MAPDESCRIPTOR##OFFSET

.P 0
From now on, the local origin of each file will be taken from the map
descriptor and added to all X and Y coordinates before they are output.
Any use of the OFFSET command will be ignored.

.LM -8

.BLANK
.TP 10
.I -8
NOMAGTAPE			(applies to next IFF file only)

.P 0
This command tells SIF not to use the magnetic tape drive for the next IFF file
being output. The default action is to write all files to magnetic tape.

.BLANK
.TP 10
.I -8
NOOUTPUT			(applies to next IFF file only)

.P 0
This command is provided as the opposite of OUTPUT. It tells the program not 
to output the SIF data file to a text file for the next IFF file. Note that 
this is the default state.

.BLANK
.TP 10
.I -8
NOREFLECT			(applies to next IFF file only)

.P 0
This command is intended for use during debugging only - it undoes the effect 
of a preceding REFLECT command.

.BLANK
.TP 10
.I -8
NOZSCALE

.P 0
This command switches off scaling or multiplying of Z (height) coordinates. Any
offset specified by the ZOFFSET command will be added to height data, but the
resulting quantity will be output to the SIF file unchanged (apart from
rounding to an integer quantity). 

.P 0
NOZSCALE is the default.

.BLANK
.TP 10
.I -8
OFFSET##'Xreal',#'Yreal'	(applies to next IFF file only)

.P 0
This command tells the program that all data in the next IFF file is 
to be shifted by 'Xreal' in X and by 'Yreal' in Y. The offsets are
specified in IFF units. This command is ignored if the MAPDESCRIPTOR OFFSET
command has been given.

.P 0
For shifting the Z (height) data, see the ZOFFSET command.

.P 0
This command only affects the next IFF file.

.BLANK
.TP 10
.I -8
OUTPUT##'file-spec'		(applies to next IFF file only)

.P 0
This command tells the program to write the SIF text data to the specified text
file. It is possible to output data to magtape and text file at the same time.
Use the NOMAGTAPE command to suppress output to the magtape. 

.P 0
Only the next IFF file will be output to the text file.

.P 0
The default extension for the text file is .TXT

.BLANK
.TP 10
.I -8
RECORD##'integer'

.P 0
This command tells the program that data should be output in records of
length 'integer' (bytes or characters). 'integer' must be between 40 and
80.

.P 0
Note that this command may only be given before data has been written to the
magnetic tape - it is not possible to change the record size after the tape has
been written to. 

.P 0
The default record size is 72 bytes.

.BLANK
.TP 10
.I -8
REFLECT			(applies to next IFF file only)

.P 0
This command is intended for use during debugging only - it tells the program 
to reflect the data in the next IFF file to the terminal as the file is read.

.BLANK
.TP 10
.I -8
SDF##'file-spec'

.P 0
This command tells the program which SIF Definition File (SDF) to use from 
now on. The file chosen will be used for all further IFF files output unless 
the SDF command is given again.

.P 0
The SDF describes the SIF attributes associated with each feature code, and is 
thus similar in concept to FRTLIB's FRT file.

.P 0
Note that if the FRT command is not given, then an FRT of the same name as the
SDF will be assumed (the extension is just changed from .SDF to .FRT) 

.P 0
The SDF file-spec is filled out from the default LSL$FRT:.SDF;0

.BLANK
.TP 10
.I -8
SHEETSCALE##'real'

.P 0
This command tells the program what scale the sheet is at, with respect to
ground units. Thus if the next IFF file represents
a sheet that was at scale 1:500, the command would be 

.P 10
SHEETSCALE##500

.P 0
This command is used to define the transformation from sheet millimetres to 
ground units, for use in text sizing. The command is always required before 
reading the SDF, even if the SDF doesn't use sheet mm - the program cannot 
tell that until after it has read the file.

.P 0
The sheet scale is assumed the same for all further IFF files output, unless 
this command is given again. If the sheet scale is changed, and the SDF did 
use sheet mm, then the SDF will be read again (and incidentally, so will the 
FRT file).

.BLANK
.TP 10
.I -8
SHOW

.P 0
This command asks the program for a status report - what the program believes 
its current state to be. It will tell you the current FRT and SDF filenames, 
whether the magtape is in use, and if so which one, and what transformations
are being applied to IFF map units.

.BLANK
.TP 10
.I -8
SRI##'file-spec'

.P 0
This command specifies an SRI file to be used when determining the size
of scaled symbols. An SRI file is only necessary when scaled symbols are
being output. The program will read the SRI file immediately.

.P 0
The SRI file-spec is filled out from the default name LSL$FRT:.SRI;0

.BLANK
.TP 10
.I -8
TEXTLEVEL##'what'

.P 0
This command tells the program where it should find the level on which texts
should be output. The following are supported: 

.LM +8
.BLANK
.TP 5
.I -8
TEXTLEVEL##SDF

.P 0
This is the default, and means that the text level should be that
defined in the SDF entry for the relevant text feature code.

.BLANK
.TP 5
.I -8
TEXTLEVEL##AC

.P 0
This command states that the text level is defined in the SDF entry for
the feature code held in the IFF AC 1 (secondary feature-code AC) entry.

.BLANK
.TP 5
.I -8
TEXTLEVEL##CATEGORY

.P 0
This command states that the text level is to be deduced from the text
category, as specified in the SDF. This requires that the SDF contains a
sequence of CATEGORY commands to relate each text category to a SIF level.

.LM -8

.BLANK
.TP 10
.I -8
TEXTSIZE##'what'

.P 0
This command tells the program where it should find the size of texts. The 
following are supported:

.LM +8
.BLANK
.TP 5
.I -8
TEXTSIZE##SDF

.P 0
This is the default, and means that the text size should be that defined in 
the SDF entry for the relevant text feature code.

.BLANK
.TP 5
.I -8
TEXTSIZE##POINT

.P 0
This command states that the text size is defined as a point size in the IFF TH
entry, and that this point size will have been defined in the SDF (using the 
POINTSIZE command).

.BLANK
.TP 5
.I -8
TEXTSIZE##MILLIMETRES

.P 0
This command states that the text size is defined in the IFF TH entry, in 
hundredths of a millimetre on the sheet.

.LM -8

.BLANK
.TP 10
.I -8
UORUNIT##'real'

.P 0
This command tells the program what size a UOR is, in metres on the ground.
Thus if the next SIF data file is to be output with UORs of size 1 millimetre
on the ground, the command given would be 

.P 10
UORUNIT##0.001

.P 0
This command is used with the IFF units scale, to allow the program to
decide on the multiplication factor to use in going from IFF units to SIF
UORs. 

.P 0
The UOR unit will remain the same for all further IFF files, unless 
this command is given again.

.BLANK
.TP 10
.I -8
ZMULTIPLY##'real'

.P 0
This command switches on multiplication of the height data by a constant.
All height values will be multiplied by 'real' before they are output.

.P 0
The Z multiplication is assumed the same for all further IFF files output,
unless this command is given again. 

.P 0
By default, Z values are not multiplied by anything before output.

.P 0
The NOZSCALE command is provided to switch off scaling and multiplying of Z
coordinates. The ZSCALE command allows scaling of height data in a similar
manner to X,Y data.

.BLANK
.TP 10
.I -8
ZOFFSET##'Zreal'		(applies to next IFF file only)

.P 0
This command tells the program that all height data in the next IFF file is to
be shifted by 'Zreal'. The units are the same as the height units in the IFF
file. 

.P 0
For shifting the X,Y data, see the OFFSET command.

.P 0
This command only affects the next IFF file.

.BLANK
.TP 10
.I -8
ZSCALE##'real'

.P 0
This command switches on scaling of the height data, and tells the program
what scale the IFF units of height are in, with respect to the required units.
By default, Z values are not scaled at all.

.P 0
The Z scale is assumed the same for all further IFF files output, unless 
this command is given again.

.P 0
The NOZSCALE command is provided to switch off scaling and multiplying of Z
coordinates. The ZMULTIPLY command allows multiplication of height data
by a constant value.

.LM -10

.LM -10

.PAGE

.TP 10
.P 0
^*--------------------------------------------------------------------------------\*
.HL 2 ^^^*EXAMPLE\*

.BLANK
.KEEP
.NO FILL
$ ^*MOUNT/FOREIGN MTA0:_<CR_>\*
%MOUNT-I-MOUNTED, FRED mounted in MTA0:
$ ^*IFF2SIF_<CR_>\*
IFF2SIF of 10:23:05 25-NOV-87
 
iff2sif> ^*IFFSCALE 1_<CR_>\*
iff2sif> ^*SHEETSCALE 2000_<CR_>\*
iff2sif> ^*UOR 0.001_<CR_>\*
iff2sif> ^*SDF EXAMPLE_<CR_>\*
iff2sif> ^*FRT EXAMPLE_<CR_>\*
iff2sif> ^*JUST 3_<CR_>\*
iff2sif> ^*SHOW_<CR_>\*
SIF definition file	LSL$FRT:EXAMPLE.SDF;0
FRT definition file	LSL$FRT:EXAMPLE.FRT;0
Magtape unit MTA0 (density 1600) will be used
(Tape will be rewound)
Output record size is 72
Output data is 2 dimensional

IFF data is at scale	1:1
Sheet is at scale	1:2000
UOR units are	0.0010 metre
coord in UORs = coord in IFF units *  1000.000
This means maximum map range is  -2147483.75 to  2147483.75

Height values (Z coordinates) will not be scaled

Ignoring contents of layer 0
Text justification overridden - set to 3
iff2sif> ^*IFF OV1.OUT_<CR_>\*
SIF definition file	LSL$FRT:EXAMPLE.SDF;0
FRT definition file	LSL$FRT:EXAMPLE.FRT;0
Magtape unit MTA0 initialised (density 1600)
 
RANGE in UORs is       -36194,    18401382         -6337,    13900000
Drawing name:	OV1	Date:	15MAR85

iff2sif> ^*_<CTRL/Z_>\*
Total of 25 blocks now on magtape

 ELAPSED: 00:00:26.23  CPU: 0:00:02.22  BUFIO: 16  DIRIO: 9  FAULTS: 154 
$
.NOKEEP
.FILL

.LM +10

.P 0
This example shows a user outputting a single IFF file to tape in SIF. Note
the use of the SHOW command to confirm that the correct values have been
set up. $STATUS will be set to SS$__NORMAL after this run of the program.

.LM -10

.PAGE

.TP 10
.P 0
^*--------------------------------------------------------------------------------\*
.HL 2 ^^^*MESSAGES (INFORMATIONAL)\*

.P 0
These messages normally follow a more serious error message.

.LM +5

.P-5
ABANDON, Abandoning processing of this IFF file

.P0; ^*Explanation:\* A severe error has occurred, which leaves no other
choice. This message will follow the message describing that error.
.P0; ^*User action:\* Depends upon the previous message.

.P-5
FORCELEVEL, Forcing feature 'integer' to level 'integer'

.P0; ^*Explanation:\* This message is output after an associated message
indicating that the correct level for the feature could not be worked out.
The feature will be output on a SIF error level, normally 63. 
.P0; ^*User action:\* The data as produced is incorrect, so the input data
should be corrected and reprocessed.

.P-5
FORCETOLINE, Forcing feature 'integer' to line, on level 'integer'

.P0; ^*Explanation:\* This message is output following the FRTSIFFC error
message. The feature will be output on a SIF error level, normally 63. 
.P0; ^*User action:\* The data as produced is incorrect, so the input data
should be corrected and reprocessed.

.P-5
SYMNAMLONG, Symbol name %S in SDF file is too long. Truncating to 12 characters (or 10 for SCITEX).

.P0; ^*Explanation:\* This message is output when a symbol name in the
SDF file is too long. The limit is 12 characters but for SCITEX output  
the limit is 10.
.P0; ^*User action:\* The name will be truncated and the program will
continue processing, but the user may prefer to change the names in
the SDF file then continue processing.

.P-5
TRYTOGOON, Attempting to continue outputting feature 'integer'

.P 0
.P0; ^*Explanation:\* Appears after some of the other errors.
.P0; ^*User action:\* Depends upon the previous message.

.LM -5

.PAGE

.TP 10
.P 0
^*--------------------------------------------------------------------------------\*
.HL 2 ^^^*MESSAGES (WARNING)\*

.P 0
These messages give warning of non severe errors

.LM +5

.P-5
MAXAC, Too many ACs in feature FSN 'integer' - maximum number is 
'integer'. Rest of ACs ignored.

.P 0
.P0; ^*Explanation:\* Number of ACs in a feature that can be translated is 
limited. The feature will be translated with up to the maximum allowed ACs.

.P0; ^*User action:\* Contact Laser-Scan to raise the limit if necessary.

.LM -5

.PAGE

.TP 10
.P 0
^*--------------------------------------------------------------------------------\*
.HL 2 ^^^*MESSAGES (ERROR)\*

.P 0
These messages reflect errors in the data, or mistakes in giving commands.

.LM +5

.P-5
ABANDONED, Circle feature 'integer' abandoned

.P 0
.P0; ^*Explanation:\* As it says - a previous message should clarify this.
The program will attempt to continue.
.P0; ^*User action:\* Depends upon the previous message.


.P-5
BADARC, Arc feature 'integer' abandoned - two points identical

.P 0
.P0; ^*Explanation:\* Two of the points defining an arc are identical. The
feature will not be output. The program will attempt to continue.
.P0; ^*User action:\* Correct the original IFF file and reprocess the data.

.P-5
BADCATARG, Can't read level argument in CATEGORY 'integer' command

.P0; ^*Explanation:\* The CATEGORY command for category 'integer' in the SDF is
incomplete or incorrect. The command will be ignored.
.P0; ^*User action:\* Edit the SDF to correct the command.

.P-5
BADCATNUM, Can't read category in CATEGORY command

.P0; ^*Explanation:\* A CATEGORY command in the SDF does not have a legible
category number. The command will be ignored.
.P0; ^*User action:\* Edit the SDF to correct the command.

.P-5
BADDIM, Data may only be 2 or 3 dimensional

.P0; ^*Explanation:\* The DIMENSION command was given, with a value other
than 2 or 3 following it. The command will be ignored.
.P0; ^*User action:\* Give the command again, with a correct argument. 

.P-5
BADENSE, Tape density 'integer' is illegal - use either 800 or 1600

.P 0
.P0; ^*Explanation:\* This message is output if you try to specify DENSITY
with other than 800 or 1600. The command will be ignored.
.P0; ^*User action:\* Give the command again, with a correct argument. 


.P-5
BADFCNUM, Unable to read feature code in SIF definition file

.P 0
.P0; ^*Explanation:\* The feature code number in the SDF is garbled.
.P0; ^*User action:\* Correct the SDF and then run the program again.


.P-5
BADFONT, Illegal font  'integer' in feature 'integer' - using font 0

.P 0
.P0; ^*Explanation:\* As it says. The program will attempt to continue.
.P0; ^*User action:\* Correct the SDF, or specify appropriate commands to
define the font, and reprocess the data.


.P-5
BADJUST, Illegal text justification - 1-9 allowed, 0 unsets

.P 0
.P0; ^*Explanation:\* As it says. This message is given if the JUSTIFICATION
command was given with an incorrect argument. The command is ignored.
.P0; ^*User action:\* Give the command again with a correct argument. 


.P-5
BADLEVEL, Illegal level 'integer' in feature 'integer' - using level 63

.P 0
.P0; ^*Explanation:\* As it says. The program will attempt to continue.
.P0; ^*User action:\* Correct the SDF and run the program again.


.P-5
BADPTARG, Can't read size argument in POINTSIZE command

.P 0
.P0; ^*Explanation:\* Either the height or width argument of the POINTSIZE
command in the SDF file was non-numeric, or otherwise badly formed. The program
will ignore the command.
.P0; ^*User action:\* Correct the SDF and run the program again.


.P-5
BADPTSIZNUM, Can't read point size in POINTSIZE command

.P 0
.P0; ^*Explanation:\* Whilst reading the SDF, a POINTSIZE command has been
encountered with a non-numeric first argument. It is ignored. 
.P0; ^*User action:\* Correct the SDF and run the program again.


.P-5
BADRANGE, Bad map range - value 'real' can not be output

.P 0
.P0; ^*Explanation:\* The given map range value is too large, or too small to
be represented in UORs at the defined transformation. The program will ask if
you want to continue.
.P0; ^*User action:\* Either allow the program to continue, in which case
data will be truncated at the edge of the sheet, or respecify the UOR units
and try again.


.P-5
BADRECSIZ, Record size 'integer' not allowed - must be from 40 to 80

.P 0
.P0; ^*Explanation:\* The argument to the RECORD command was out of range - it
is ignored.
.P0; ^*User action:\* Give the command again  with a correct argument.


.P-5
BADST, 'integer' points in ST - only 'integer' used - in feature 'integer'

.P 0
.P0; ^*Explanation:\* There were too many points (more than 200) in an ST in
the named feature. The maximum number allowed in an ST will be read and used.
.P0; ^*User action:\* Check why an IFF file was produced with too many points
in an ST. The file can be corrected by outputting it with ITOTEXT and then
recreating it with IFROMTEXT.

.P-5
CATLEVEL, Bad level 'integer' for CATEGORY 'integer' - must be between 1 and 63

.P0; ^*Explanation:\* The CATEGORY command for the specified category number
indicates an illegal level - SIF level numbers must be between 1 and 63.
.p0; ^*User action:\* Edit the SDF to correct the CATEGORY command.

.P-5
CATRANGE, Illegal category 'integer' ignored (must be in range 0 to 63)

.P0; ^*Explanation:\* A CATEGORY command in the SDF attempts to define the
level for an illegal category - category numbers must be between 0 and 63.
.p0; ^*User action:\* Edit the SDF to correct the CATEGORY command.

.P-5
CIRSLANT, Circle does not have constant Z value, in feature 'integer'

.P 0
.P0; ^*Explanation:\* A three point circle with differing Z values for the
points has been found. Circles must have constant Z. The circle will be output
with the Z value from the first point.
.P0; ^*User action:\* The circle is almost certainly an error. Correct the
input data and try again.


.P-5
CLIPPED, Map coordinate 'real' clipped in feature 'integer'

.P 0
.P0; ^*Explanation:\* The given map coordinate is too large, or too small,
to be represented in UORs at the defined transformation. It is clipped to the
maximum/minimum value, and the program attempts to continue.
.P0; ^*User action:\* This message should only normally  occur after the
program has issued the BADRANGE error, and the user has elected to continue.
If this is ^*not\* the case, then the range in the IFF file is incorrect,
and should be corrected (for instance by reading the file into LITES2 and
exiting).


.P-5
CLOSECIRCLE, Points too close to define circle in feature 'integer'

.P 0
.P0; ^*Explanation:\* The points defining a circle must not be too close. The 
circle cannot be output. The program will attempt to continue.
.P0; ^*User action:\* Correct the circle in the IFF file and reprocess the
data.


.P-5
DEFNAMERR, Error in SIF definition file name

.P 0
.P0; ^*Explanation:\* The file-spec given to the SDF command was not
acceptable. A further message may help with what was wrong with the name.
.P0; ^*User action:\* Give the command again with a correct file-spec.


.P-5
EMPTYIFF, IFF file is empty - no entries found

.P 0
.P0; ^*Explanation:\* As it says. Nothing will be output.
.P0; ^*User action:\* Check why the IFF file is empty.


.P-5
FCNOTFND, Feature code 'integer' not found in SIF definition file

.P 0
.P0; ^*Explanation:\* As it says. Other messages should indicate the action
taken by the program.
.P0; ^*User action:\* Correct the SDF to define the action for that feature
code, or if the feature code is incorrect, change the IFF file and reprocess
it. 


.P-5
FILCLOSE, Error closing SIF definition file 'file-spec'

.P 0
.P0; ^*Explanation:\* As it says. The program should output other messages to
indicate what went wrong.
.P0; ^*User action:\* Dependent upon the other messages. 


.P-5
FRTNAMERR, Error in FRT definition file name

.P 0
.P0; ^*Explanation:\* The file-spec given to the FRT command was not 
acceptable. A further message may help with what was wrong with the name.
.P0; ^*User action:\* Give the command again with a correct file-spec.


.P-5
FRTSIFFC, FC 'integer' is a SIF 'type', but a FRT 'type'

.P 0
.P0; ^*Explanation:\* The FRT graphical type for this feature code does not
agree with the equivalent description in the SDF. The two 'type's are the names
of the types (for instance "line" or "circumcircle arc"). The feature will be
output as if it were a linear feature.
.P0; ^*User action:\* Check the FRT and SDF, correct them and reprocess the
data. 


.P-5
GOT__MT, Cannot change 'text' after tape has been initialised

.P 0
.P0; ^*Explanation:\* As it says. 'text' will be one of "magtape unit number"
or "tape density" or "record size", depending upon which command was given.
.P0; ^*User action:\* Give the appropriate command again, with a correct
argument.


.P-5
IFFEOF, Unexpected end of IFF file after feature 'integer' (no EJ)

.P 0
.P0; ^*Explanation:\* The IFF file ended abruptly. The data on tape will be 
ended as if an EJ had been found.
.P0; ^*User action:\* Investigate why the IFF file was incorrectly terminated. 


.P-5
IFFNAMERR, Error in IFF file name

.P 0
.P0; ^*Explanation:\* The file-spec given to the IFF command was not 
acceptable. A further message may help with what was wrong with the name.
.P0; ^*User action:\* Give the command again with a correct file-spec.


.P-5
IFFOPN, Error opening IFF file 'file-spec' on unit 'integer'

.P 0
.P0; ^*Explanation:\* As it says, the IFF file could not be opened. Other
messages should define the problem.
.P0; ^*User action:\* Dependent upon the other messages. Likely causes are
that the file does not exist, that it is being accessed by someone else,
or that it is protected against you. 


.P-5
INLINE, In line 'integer' of SIF definition file 'file-spec'

.P 0
.P0; ^*Explanation:\* All of the errors in reading the SDF file are followed 
by this supplementary message to allow the user to locate the offending line. 
.P0; ^*User action:\* Depends upon the preceding message.


.P-5
LACCOLOUR, Illegal line colour 'integer' in feature 'integer' - using 0

.P 0
.P0; ^*Explanation:\* The line colour found for this feature (by looking
up the feature code) is not an allowed value.
.P0; ^*User action:\* Correct the SDF and reprocess the data.


.P-5
LACSTYLE, Illegal line style  'integer' in feature 'integer' - using 0

.P 0
.P0; ^*Explanation:\* The line style found for this feature (by looking
up the feature code) is not an allowed value.
.P0; ^*User action:\* Correct the SDF and reprocess the data.


.P-5
LACWEIGHT, Illegal line weight 'integer' in feature 'integer' - using 0

.P 0
.P0; ^*Explanation:\* The line weight found for this feature (by looking
up the feature code) is not an allowed value.
.P0; ^*User action:\* Correct the SDF and reprocess the data.


.P-5
LEZERO, Number must be greater than zero

.P 0
.P0; ^*Explanation:\* This message is given when a bad numeric argument is 
found for a command. The command is ignored.
.P0; ^*User action:\* Give the command again, with a correct argument. 


.P-5
LINEARCIRCLE, Circle points collinear in feature 'integer'

.P 0
.P0; ^*Explanation:\* The three points defining the circle are in a straight 
line. The circle cannot be drawn. The program will attempt to continue.
.P0; ^*User action:\* Correct the feature in the IFF file and reprocess
the data. 


.P-5
MAXFCS, Too many secondary feature code ACs - maximum number is 'integer'

.P 0
.P0; ^*Explanation:\* This message is output if there are too many secondary 
feature codes in the current feature to fit into the internal tables. The limit
is currently 25. The later ones will be ignored.
.P0; ^*User action:\* If this is really a problem, consult Laser-Scan about
increasing the limit.

.P-5
MTBLOCK, Error writing block 'integer' to magtape

.P 0
.P0; ^*Explanation:\* This should not happen. A further message will be given,
which may help explain the problem.
.P0; ^*User action:\* Consult your system manager. 


.P-5
MTINITERR, Error initialising magtape unit 'file-spec' (density 'integer')

.P 0
.P0; ^*Explanation:\* The program could not get the magtape unit. A further
error message should clarify the problem.
.P0; ^*User action:\* Depends upon the other messages. The likeliest cause
is that the magnetic tape has not been mounted (foreign) before using the
program.


.P-5
MTOBCK, Error backspacing magtape - around block 'integer' on tape unit
'device'

.P 0
.P0; ^*Explanation:\* The APPEND command causes the program to move to and
fro searching on the tape - an error has occurred during this.
.P0; ^*User action:\* Consult your system manager.


.P-5
MTOREAD, Error reading magtape - around block 'integer' on tape unit 'file-spec'

.P 0
.P0; ^*Explanation:\* As it says. This may occur after the APPEND command.
.P0; ^*User action:\* Consult your system manager.


.P-5
NEEDTHREE, Need three points to define an arc in feature 'integer'

.P 0
.P0; ^*Explanation:\* The feature has too few points for the arc definition.
It will not be output. The program will attempt to continue.
.P0; ^*User action:\* Correct the IFF file and reprocess it. 


.P-5
NOAC, No AC for text level in feature 'integer' - error level ('integer') used

.P 0
.P0; ^*Explanation:\* The TEXTLEVEL AC command was given, but this text
feature does not contain a relevant AC. The text is output to the error level
instead.
.P0; ^*User action:\* Edit the IFF file using LITES2 to insert the AC, and
reprocess the file. 

.P-5
NODXDY, Points coincident for scaled symbol in feature 'integer'

.P 0
.P0; ^*Explanation:\* The two points defining a scaled symbol should be
different. The symbol is output at scale 1.0, and horizontally.
.P0; ^*User action:\* Edit the IFF file with LITES2 to correct the symbol,
and reprocess the data.


.P-5
NOFACTOR, Need UORUNIT (and possibly IFFSCALE) to translate coordinates to UORs

.P 0
.P0; ^*Explanation:\* The program will not output an IFF file until the
coordinate transformation has been fully defined. This requires that at least
the UORUNIT command be given. 
.P0; ^*User action:\* Use the UORUNIT command to specify the UOR units.
Also give the IFFSCALE command if necessary.

.P-5
NOFRTSIF, Must have SIF and FRT definition files before outputting file

.P 0
.P0; ^*Explanation:\* Self-explanatory - the SDF and FRT commands have not
 been given.
.P0; ^*User action:\* Specify the FRT file, and the SDF.

.P-5
NOHEIGHT, No height AC in feature 'integer' - assuming height 0.0

.P 0
.P0; ^*Explanation:\* Three dimensional data is being output, and this
feature does not contain any height data. Note that if it had a ZS entry
instead of an ST, then this error would not occur. 
.P0; ^*User action:\* Edit the IFF file with LITES2 to insert a height AC,
and reprocess the data.

.P-5
NOPTSIZ, Point size 'integer' not defined - using size from SDF definition

.P 0
.P0; ^*Explanation:\* The IFF TH entry for this text specifies a point size 
that was not set up in the SDF - the size values defined in the feature code
definition will be used for this text.
.P0; ^*User action:\* Either correct the SDF to define this size, or edit
the IFF file to reference a size that is defined. 


.P-5
NORANGE, First entry in IFF file must be RAnge - found _<entry_>

.P 0
.P0; ^*Explanation:\* As it says. The file will be abandoned.
.P0; ^*User action:\* Investigate why the first entry in the IFF file is
not the range.


.P-5
NORO, Two identical points for orientation, assuming feature 'integer' horizontal

.P 0
.P0; ^*Explanation:\* As it says - symbols with two orientation points must
have two different points.
.P0; ^*User action:\* Edit the IFF file with LITES2 to define the symbol
correctly. 


.P-5
NOSHTSCALE, Must have SHEETSCALE before reading the SDF

.P 0
.P0; ^*Explanation:\* The SDF may use sheet millimetres, so the SHEETSCALE
command must be given before it is read, in order to define how sheet mm may be
changed to ground metres.
.P0; ^*User action:\* Specify a sheet scale with the SHEETSCALE command. 


.P-5
NOST, No ST found in feature 'integer' - no points to output

.P 0
.P0; ^*Explanation:\* The current feature does not contain either an ST or
ZS entry. There is therefore no data to output from it, and it will be ignored.
.P0; ^*User action:\* Find out why such a feature was generated in the IFF
file. 

.P-5
NOTCLOSED, Shape or hole in feature 'integer' not closed - forcing to line

.P 0
.P0; ^*Explanation:\* SHAPE and HOLE type features must be closed (first and
last points identical). The feature is output as a line. 
.P0; ^*User action:\* Edit the IFF file with LITES2 to close the feature,
and reprocess the file.

.P-5
NOTH, No TH entry found for text size - using SDF values

.P 0
.P0; ^*Explanation:\* The text size was meant to be in POINTs or MILLIMETREs,
but this text feature has no TH to look it up in. The size values defined for
this feature code in the SDF will be used instead.
.P0; ^*User action:\* Edit the IFF file to correct the feature, or specify
TEXTSIZE SDF. 


.P -5
NOTMD2, Map descriptor entry is not type 2 - use ITRANS/DESCRIPTOR

.p0; ^*Explanation:\* The MAPDESCRIPTOR OFFSET command has been given, and
the program has found the map descriptor entry for this file. However, it
is either a type 1 (old style) map descriptor, or it is unset.
.p0; ^*User action:\* Use the IMP utility IPATCH to inspect the map descriptor,
and use ITRANS/DESCRIPTOR to set it correctly, before attempting to output the
file again.

.P-5
OPENLIST, Error opening INPUT__LIST file 'file-spec'

.P 0
.P0; ^*Explanation:\* As it says, the input list file could not be opened.
Other messages should define the problem.
.P0; ^*User action:\* Depends upon the other messages.

.P-5
OPENSIF, Error opening SIF definition file 'file-spec' on unit 'integer'

.P 0
.P0; ^*Explanation:\* As it says, the SDF could not be opened. Other messages
should define the problem.
.P0; ^*User action:\* Depends upon the other messages.


.P-5
OUTNAMERR, Error in text output file name

.P 0
.P0; ^*Explanation:\* A further message may help with what was wrong with the
file-spec.
.P0; ^*User action:\* Give the OUTPUT command again with a correct file-spec.


.P-5
OUTOFORDER, SIF definition entry out of order - FC 'integer' found after FC
'integer'

.P 0
.P0; ^*Explanation:\* As it says. It is not safe to continue the program
using this SIF.
.P0; ^*User action:\* Sort the SDF into feature code order first, and then try
again. 


.P-5
OUTOPEN, Error opening text output file 'file-spec'

.P 0
.P0; ^*Explanation:\* As it says, the text output file could not be opened.
Other messages should define the problem. 
.P0; ^*User action:\* Depends upon the other messages.


.P-5
PARSE, Error parsing filename 'file-spec'

.P 0
.P0; ^*Explanation:\* Some problem occurred in checking the file-spec
to make sure that it was sensible, or to abstract some part of the spec. Other
messages should tell you what action is being taken by the program. 
.P0; ^*User action:\* Depends upon the other messages.


.P-5
PTSIZNEG, Height and width must both be positive in POINTSIZE command

.P 0
.P0; ^*Explanation:\* As it says. The relevant POINTSIZE command in the SDF
will be ignored.
.P0; ^*User action:\* Correct the SDF and try again. 

.P-5
PTSIZRANGE, Illegal point size 'integer' ignored (must be in range 1 to 'integer')

.P 0
.P0; ^*Explanation:\* The point size specified in the POINTSIZE command in
the SDF is out of the valid range. It is ignored. 
.P0; ^*User action:\* Correct the SDF and reprocess the file.


.P-5
RDCOMM, Error reading command

.P 0
.P0; ^*Explanation:\* The program was unable to read the command just typed
for some reason. Other messages should indicate the problem.
.P0; ^*User action:\* Depends upon the other messages.


.P-5
SCANSYM, Error in scanning scaled symbol size, FC 'integer' in feature 'integer'

.P 0
.P0; ^*Explanation:\* This should not occur, but means that the symbol will be
output with unit scale, instead of the digitised size.
.P0; ^*User action:\* Depends upon the other messages output with this.
A possible cause is that no SRI file was specified. 


.P-5
SIFLINE, Error reading line from SIF definition file

.P 0
.P0; ^*Explanation:\* A further message should clarify what the problem was.
.P0; ^*User action:\* Depends upon the other message.


.P-5
SYMSCALE, Symbol cell matrix 'name' scale 'real' out of range in feature
'integer'

.P 0
.P0; ^*Explanation:\* The X or Y scale is invalid for this symbol. A scale of
1.0 is used.
.P0; ^*User action:\* Check that the original scaled symbol in the IFF file
is sensible. 


.P-5
TAPEMK, Error outputting tapemark at about block 'integer'

.P 0
.P0; ^*Explanation:\* This should not happen. A further message may help with
what was wrong. 
.P0; ^*User action:\* Consult your system manager.


.P-5
TLCCOUNT, Illegal text length 'integer' in feature 'integer' - outputting 1
character

.P 0
.P0; ^*Explanation:\* The text length was too great, zero, or negative.
.P0; ^*User action:\* Inspect the feature using IPATCH or LITES2, and correct
it.


.P-5
TLCJUST, Illegal text justification 'integer' in feature 'integer' - using 3

.P 0
.P0; ^*Explanation:\* The text justification field in the FS entry for this
feature was not valid, and has been ignored. 
.P0; ^*User action:\* Correct the field using IPATCH or LITES2, and reprocess
the file.
    
.P-5
TOOBIG, Cannot represent 'real' in UORs - maximum is 'integer'

.P 0
.P0; ^*Explanation:\* The given value is too large to represent in UORs at
the given transformation.
.P0; ^*User action:\* Check that any offset given by the OFFSET command is
correct. 


.P-5
TOOMANYSPACES, Too many spaces found in string to be output - some ignored

.P 0
.P0; ^*Explanation:\* When outputting a text string, the program will split
the string over more than one record if necessary. It will not end a text
string fragment with a space - the space is always carried over to the next
record. If there are too many spaces in the text string for this to work (ie of
the order of the record size!), then this message will be given, and some of
the spaces ignored.
.P0; ^*User action:\* Modify the text string and try again. 


.P-5
TOOSMALL, Cannot represent 'real' in UORs - must be positive

.P 0
.P0; ^*Explanation:\* The given value is less than zero, and therefore cannot
be output in UORs. 
.P0; ^*User action:\* Check that any offset given by the OFFSET command is
correct. 


.P-5
TRUNCSTR, String too long - truncated to 'text'

.P 0
.P0; ^*Explanation:\* Given if a name is too long - notably if the magnetic
tape unit name is longer than eight characters. The truncated version is the
one that would be used, if the user does not correct this. 
.P0; ^*User action:\* Either accept the truncated version, or give the relevant
command again with a correct argument.

.P-5
TXHEIGHT, Text height 'real' clipped in feature 'integer'

.P 0
.P0; ^*Explanation:\* The given height value is too large, or too small to be
represented in UORs at the defined transformation.
.P0; ^*User action:\* Either correct the defined transformation, or edit
the text feature using LITES2, and try again. 


.P-5
TXTLEN, 'integer' characters in text - using 'integer' - in feature 'integer'

.P 0
.P0; ^*Explanation:\* There were too many characters in the text string in 
the named feature. The maximum number allowed (the second number given) will be
output.
.P0; ^*User action:\* None. 


.P-5
TXTNOFC, Level not defined for text feature

.P 0
.P0; ^*Explanation:\* No output level is defined for this text feature. Other
messages should clarify the problem.
.P0; ^*User action:\* Depends upon the other messages. 

.P-5
TXWIDTH, Text width  'real' clipped in feature 'integer'

.P 0
.P0; ^*User action:\* The given width value is too large, or too small to be
represented in UORs at the defined transformation.
.P0; ^*User action:\* Either correct the defined transformation, or edit
the text feature using LITES2, and try again. 
 


.P-5
UNABLE, Unexpected end of line, or unexpected entry, for FC 'integer'

.P 0
.P0; ^*Explanation:\* This occurs if a line in the SDF is garbled. The line
is ignored.
.P0; ^*User action:\* Correct the SDF.

.P-5
UNSETCAT, Category 'integer' does not have a level defined

.P0; ^*Explanation:\* Text features are being output with TEXTLEVEL CATEGORY,
but the current text feature has a category that has not been described in
the SDF with a CATEGORY command. The text will be output on level 63.
.P0; ^*User action:\* The data output is incorrect, so a new CATEGORY command
should be added to the SDF to defined the level for this category, and
the data should be processed again.

.LM -5

.PAGE

.TP 10
.P 0
^*--------------------------------------------------------------------------------\*
.HL 2 ^^^*MESSAGES (FATAL)\*

.P 0
Although these errors are classified as fatal, the program may still attempt
to continue. However, any results produced should be regarded with great
suspicion.

.P 0
When it finishes, the program will set $STATUS to be SS$__ABORT.

.LM +5

.P-5
BADEOPTR, Corrupt pointer to EO entry, in NO for layer 'integer'

.P 0
.P0; ^*Explanation:\* This should not occur. The program will continue,
ignoring the corrupt pointer. However, the IFF file is technically incorrect,
and other problems may occur.
.P0; ^*User action:\* Investigate why the pointers are corrupt. They can
be corrected by editing the file with LITES2 and exiting from it.

.P-5
BADSTPTR, Corrupt pointer to first ST entry in feature 'integer'

.P 0
.P0; ^*Explanation:\* When multiple feature codes are used, the program
repeats the feature for each secondary feature code. To do this, it remembers
the position of the first ST or ZS entry. This message indicates that the
remembered position is wrong. This should never occur.
.P0; ^*User action:\* Report the error to Laser-Scan with as many details
as possible. 

.P-5
HLPERR, Error using help file 'file-spec'

.P 0
.P0; ^*Explanation:\* As it says. A further message should explain more.
.P0; ^*User action:\* Depends upon the other messages.


.P -5
NOLICENCE, No licence obtained for /SCITEX qualifier.

.p0; ^*Explanation:\* The shared image which checks that the licence for
using the /SCITEX qualifier has been obtained does not exist.
.p0; ^*User action:\* Report to Laser-scan if you require a licence or 
if you have a licence, but for some reason do not have the shared image.

.P -5
NOLOGNAM, Logical name pointing to shared image not set up

.p0; ^*Explanation:\* The logical name which points to the SCITEX licence
checking shared image has not been set up.
.p0; ^*User action:\* Execute the command file 'CONVERTINI.COM'

.P -5
NOMD, No map descriptor in IFF file

.p0; ^*Explanation:\* The MAPDESCRIPTOR OFFSET command has been used, and
this requires the program to find the map descriptor (MD) entry in each IFF
file. All normal IFF files must have an MD entry, but this file does not.
.p0; ^*User action:\* Use the IMP utility IPATCH to inspect the IFF file.
The most probable cause of this error is an attempt to output a patch file.
Alternatively, trace back the history of the file to determine what program
might have produced it.

.P-5
TOOMANYFC, Too many feature codes to fit in internal table (more than 'integer')

.P 0
.P0; ^*Explanation:\* This is given if there are too many feature codes
defined in the SDF.
.P0; ^*User action:\* If this is a problem, consult Laser-Scan to have the
table size increased. 


.LM -5

.PAGE

.TP 10
.P 0
^*--------------------------------------------------------------------------------\*
.HL 2 ^^^*MESSAGES (BUGS)\*

.P 0
These messages are also flagged as fatal, and should never occur. They
represent problems with the coding of the program itself, and should be
reported to Laser-Scan at once, with as many details as possible.

.P 0
BADCMD, BUG - Unexpected command number 'integer'
.P 0
BADLSTOP, BUG - Illegal line type 'integer' in feature 'integer' - using 1 (line)
.P 0
BADMDARG, BUG - Unexpected MAPDESCRIPTOR subcommand - cmd no 'integer'
.P 0
BADTXTLVARG, BUG - Unexpected TEXTLEVEL subcommand - cmd no 'integer'
.P 0
BADTXTSZARG, BUG - Unexpected TEXTSIZE subcommand - cmd no 'integer'
.P 0
BADUNITCMD, BUG - Unexpected UNITS subcommand found in SDF - cmd no 'integer'
.P 0
BUG__1, BUG - Internally inconsistent feature type in feature 'integer'
.P 0
LACTYPE, BUG - Illegal type of line characteristic 'integer' in feature 'integer'
.P 0
MTXMIRROR, BUG - Illegal symbol cell matrix mirror flag 'integer' in feature
'integer'
.P 0
NOCIRCLE, BUG - Impossible circle radius 'real' - feature 'integer' abandoned
.P 0
PUTFLN, BUG - Error parsing filename 'file-spec', to abstract drawing name
.P 0
SIFCNTNEG, BUG - Corrupted SIF definition table length 'integer' (searching for
FC 'integer')
.P 0
SYMMIRROR, BUG - Illegal symbol cell mirror flag 'integer' in feature 'integer'
.P 0
TOOMANYCUR, BUG - 'integer' points (using 'integer') given for curve in feature
'integer'
.P 0
TOOMANYPTS, BUG - 'integer' points (using 'integer') given for line in feature
'integer'
.P 0
TXTMIRROR, BUG - Illegal text mirror flag 'integer' in feature 'integer'
