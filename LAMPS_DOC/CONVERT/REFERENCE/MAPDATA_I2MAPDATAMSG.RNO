.SUBTITLE MESSAGES (INFORMATIONAL)

.!******************************************************************************
.PAGE
^*--------------------------------------------------------------------------------\*
.HL     2 ^^^*MESSAGES (INFORMATIONAL)\*

These   messages  give information   only,    and require no
immediate action by  the  user.  They  are  used to  provide
information on  the  current  state  of the  program, or  to
supply explanatory  information in support  of  a warning or
error message.

.LM +4

.NOJUSTIFY;.TP 10;.P -4
CODES, 'integer' feature code'(s)' found in parameter file
.JUSTIFY

.P0; ^*Explanation:\*
This message appears if /LOG was specified on the command line, and informs
the user that the parameter file has been successfully read, giving the number
of feature codes found in the CODE entries.
.P0; ^*User action:\*
None.

.NOJUSTIFY;.TP 10;.P -4
IFFCLOSED, IFF file closed
.JUSTIFY

.P0; ^*Explanation:\*
This message appears if /LOG was specified on the command line, and 
confirms that the IFF file has been successfully closed.
.P0; ^*User action:\*
None.

.NOJUSTIFY;.TP 10;.P -4
IGNLAY, layer 0 found and ignored
.JUSTIFY

.P0; ^*Explanation:\*
This message appears if /LOG was specified on the command line, and 
informs the user that layer zero (usually reserved for registration marks etc.)
has been found and all feature within it will be ignored.
.P0; ^*User action:\*
None.

.NOJUSTIFY;.TP 10;.P -4
LAYER, layer 'number' found
.JUSTIFY

.P0; ^*Explanation:\*
This message appears if /LOG was specified on the command line, and 
informs the user that the given layer in the IFF file has been found.
.P0; ^*User action:\*
None.

.NOJUSTIFY;.TP 10;.P -4
MAPCLOSED, MAPDATA file closed
.JUSTIFY

.P0; ^*Explanation:\*
This message appears if /LOG was specified on the command line, and 
confirms that the MAPDATA output file has been successfully closed.
.P0; ^*User action:\*
None.

.NOJUSTIFY;.TP 10;.P -4
MAPOPENED, 'file-spec' opened for write
.JUSTIFY

.P0; ^*Explanation:\*
This message appears if /LOG was specified on the command line, and 
informs the user that the MAPDATA output file has been successfully opened.
.P0; ^*User action:\*
None.

.NOJUSTIFY;.TP 10;.P -4
NOFRT, no FRT file has been specified
.JUSTIFY

.P0; ^*Explanation:\*
This message will appear in the absence of /FRT on the command line, or if
/NOFRT was specified.
.P0; ^*User action:\*
None.

.NOJUSTIFY;.TP 10;.P -4
READFRT, reading FRT file 'file-spec'
.JUSTIFY

.P0; ^*Explanation:\*
This message appears if /LOG was specified on the command line, and 
informs the user that the FRT file is being read.
.P0; ^*User action:\*
None.

.NOJUSTIFY;.TP 10;.P -4
READPAR, reading parameter file 'file-spec'
.JUSTIFY

.P0; ^*Explanation:\*
This message appears if /LOG was specified on the command line, and 
informs the user that the parameter file is being read.
.P0; ^*User action:\*
None.

.NOJUSTIFY;.TP 10;.P -4
UNSETSCALE, IFF scale unset - symbol lines will be 'number' long
.JUSTIFY

.P0; ^*Explanation:\*
MapData holds rotated symbols as a vector line whose angle defines the symbol
orientation. I2MAPDATA generates the second point of this vector from the first
point and the rotation held in the IFF RO entry. The length of this vector is
calculated as being 4 sheet millimeters which can only be derived if the IFF
scale (in the Map Descriptor) is set and the units are in metres. This message
will appear if the scale is unset and the vector length will default to 10 IFF
units.
.P0; ^*User action:\*
If the reported vector length is acceptable, then no further action is
required, otherwise the IFF scale should be set and the program run again.
.LM -4
.SUBTITLE MESSAGES (WARNING)

.!******************************************************************************
.PAGE
^*--------------------------------------------------------------------------------\*
.HL     2 ^^^*MESSAGES (WARNING)\*

These messages are  output when an error has   occurred that
can be corrected immediately by the user or that the program
will attempt to overcome.

.LM +4

.NOJUSTIFY;.TP 10;.P -4
BADATTCODE, attribute code 'code' out of range ('min' to 'max')
.JUSTIFY

.P0; ^*Explanation:\*
An invalid IFF attribute code (outwith the given range) has been read either
from the command line or from the parameter file. If the attribute code has
been read from the parameter file, the LINEINPAR message indicating the
offending line number will follow, and the program will continue to read the
file, ignoring this line. Otherwise program execution will terminate.
.P0; ^*User action:\*
For a parameter file error, amend the attribute code on the relevant line in
the file, and for a command line error, respecify the command using an
appropriate attribute code. The program can then be run again.

.NOJUSTIFY;.TP 10;.P -4
BADFC, feature code 'fc' out of range ('min' to 'max')
.JUSTIFY

.P0; ^*Explanation:\*
An invalid feature code (outwith the given range) has been read from the 
parameter file. The LINEINPAR message indicating the parameter file line
number will follow, and the program will continue to read the file, ignoring
this line.
.P0; ^*User action:\*
Amend the feature code on the relevant line in the parameter file, and if
necessary run the program again.

.NOJUSTIFY;.TP 10;.P -4
BADMDCODE, invalid MAPDATA feature code 'string'
.JUSTIFY

.P0; ^*Explanation:\*
An invalid MAPDATA feature code has been read from the 
parameter file. The LINEINPAR message indicating the parameter file line
number will follow, and the program will continue to read the file, ignoring
this line.
.P0; ^*User action:\*
Amend the MAPDATA feature code on the relevant line in the parameter file,
and if necessary run the program again.

.NOJUSTIFY;.TP 10;.P -4
GOTFC, FC 'fc' has already been defined
.JUSTIFY

.P0; ^*Explanation:\*
The given feature code has already been defined in the
parameter file. The LINEINPAR message indicating the parameter file line number
will follow, and the program will continue to read the file, ignoring this
line.
.P0; ^*User action:\*
Edit the parameter file to remove the offending line, 
and if necessary run the program again.

.NOJUSTIFY;.TP 10;.P -4
LINEINPAR, line 'number' of parameter file
.JUSTIFY

.P0; ^*Explanation:\*
This message always appears after an error has occurred while decoding a line 
in the parameter file, and it informs the user of the offending line number. 
The previous message will have been generated either by LSLLIB or by the 
program itself, and will be reduced in status to a warning. The offending line
in the parameter file will be ignored.
.P0; ^*User action:\*
If the error message was generated by LSLLIB, it most likely indicates an 
error in the parameter file which should be amended. Otherwise, see the 
relevant error message explanation.

.NOJUSTIFY;.TP 10;.P -4
MAXCODES, number of CODE entries exceeds maximum ('max')
.JUSTIFY

.P0; ^*Explanation:\*
There are more than the allowed maximum number of CODE entries in the
parameter file. The LINEINPAR message indicating the parameter file line number
will follow, and the program will continue to read the file, ignoring this
line.
.P0; ^*User action:\*
Edit the parameter file to reduce the number of CODE entries, and run the
program again. If there is an ongoing requirement for an increased maximum,
please contact Laser-Scan.

.NOJUSTIFY;.TP 10;.P -4
NOSTRING, cannot read character string
.JUSTIFY

.P0; ^*Explanation:\*
A character string cannot be read where expected from the parameter file. A
character string in this context may be an attribute name, or a MAPDATA
feature code. The LINEINPAR message indicating the parameter file line number
will follow, and the program will continue to read the file, ignoring this
line.
.P0; ^*User action:\*
Edit the parameter file to include the attribute name or MAPDATA feature code
where expected, and if necessary run the program again.

.NOJUSTIFY;.TP 10;.P -4
TOOMANYPTS, symbol has 'number' points, FSN 'fsn' ignored
.JUSTIFY

.P0; ^*Explanation:\*
Symbol features can have no more than 2 points. Such a feature has been 
found with more than the maximum, so the feature is ignored and processing 
continues. This error may indicate either that the symbol bits in the 
FS entry have been incorrectly set, or that the feature has the wrong feature 
code, also in the FS entry.
.P0; ^*User action:\*
Use the IMP utility IPATCH to correct the FS entry. Look at the HI entry to 
check the history of the file in order to ascertain where in the flowline the 
IFF file became corrupted.

.NOJUSTIFY;.TP 10;.P -4
UNEXPENDIFF, unexpected end of IFF file
.JUSTIFY

.P0; ^*Explanation:\*
The end of the IFF file was reached unexpectedly, before an end of job (EJ)
entry had been found. The map data will have been correctly processed, but
this message may indicate that the IFF file had been improperly closed by a
previous process, and some data may be missing.
.P0; ^*User action:\*
Run IMEND on the IFF file to insert the missing entries at the end. Examine
the file using LITES2 to determine the integrity of the data. If there is some
missing data, run the IMP utility IINFO to look at the file history, which may
indicate at what stage things went wrong.

.NOJUSTIFY;.TP 10;.P -4
UNKCURFLG, Unknown CURVE flag on point 'number' of feature 'fsn'
.JUSTIFY

.P0; ^*Explanation:\*
The reported point had a per-point attribute which was specified as being
a curve flag and yet it contained an invalid entry. The valid entries for a
curve flag are 'C###', '####' and 'I###' which define the point as being
curved, undefined or interpolated respectively.
If the IFF file was created by MAPDATA2I and all attributes correctly set
up then I2MAPDATA will convert the data with no problems. If the data was
edited or manipulated in some way, it is possible that the flag could have
been corrupted.
.P0; ^*User action:\*
The point will be given an undefined flag and will still be present in the
output MapData file. If this is acceptable then this message can be ignored,
otherwise the offending point should be investigated and corrected.

.NOJUSTIFY;.TP 10;.P -4
UNKFC, FC 'fc' has not been defined, FSN 'fsn' ignored
.JUSTIFY

.P0; ^*Explanation:\*
The given feature code in the IFF file was not recognised because it has not 
been defined in the parameter file. The feature is ignored and processing 
continues.
.P0; ^*User action:\*
If the feature code is wanted, it should be defined in the parameter file and 
the program run again.

.NOJUSTIFY;.TP 10;.P -4
UNKPRIOFLG, Unknown PRIORITY flag on point 'number' of feature 'fsn'
.JUSTIFY

.P0; ^*Explanation:\*
The reported point had a per-point attribute which was specified as being
a priority flag and yet it contained an invalid entry. The valid entries for a
priority flag are 'H###', 'L###' and '####' which define the point as being of
high, low or normal priority respectively.
If the IFF file was created by MAPDATA2I and all attributes correctly set
up then I2MAPDATA will convert the data with no problems. If the data was
edited or manipulated in some way, it is possible that the flag could have
been corrupted.
.P0; ^*User action:\*
The point will be given an undefined flag and will still be present in the
output MapData file. If this is acceptable then this message can be ignored,
otherwise the offending point should be investigated and corrected.
.LM -4
.SUBTITLE MESSAGES (ERROR)

.!******************************************************************************
.PAGE
^*--------------------------------------------------------------------------------\*
.HL     2 ^^^*MESSAGES (ERROR)\*

These  messages indicate an  error in processing  which will
cause  the program to terminate. The most likely  causes are
a   corrupt or otherwise  invalid  input file,  or an  error
related to command line processing and file manipulation.

.LM +4

.NOJUSTIFY;.TP 10;.P -4
ERRCLOMAP, error closing MAPDATA output file 'file-spec'
.JUSTIFY

.P0; ^*Explanation:\*
The MAPDATA output file could not be closed. An additional LSLLIB message
will follow, giving the reason for the failure. If this is due to a system
error, the system error message will also appear. The program attempts to
close the IFF input file, and then exits.
.P0; ^*User action:\*
Ascertain the cause of the failure from the messages given, and take the
appropriate remedial action. If the error is due to a serious problem such as
a system failure, the System Manager should be informed. Once the problem has
been solved, you can run the program again.

.NOJUSTIFY;.TP 10;.P -4
ERRCLOPAR, error closing parameter file 'file-spec'
.JUSTIFY

.P0; ^*Explanation:\*
The parameter file could not be closed. An additional LSLLIB message will 
follow, giving the reason for the failure. If this is due to a system error, 
the system error message will also appear. The program exits immediately.
.P0; ^*User action:\*
Ascertain the cause of the failure from the messages given, and take the
appropriate remedial action. If the error is due to a serious problem such as
a system failure, the System Manager should be informed. Once the problem has
been solved, you can run the program again.

.NOJUSTIFY;.TP 10;.P -4
ERROPNMAP, error opening MAPDATA output file 'file-spec'
.JUSTIFY

.P0; ^*Explanation:\*
The MAPDATA output file could not be opened. An additional LSLLIB message
will follow, giving the reason for the failure. If this is due to a system
error, the system error message will also appear. The program attempts to
close the IFF input file, and then exits.
.P0; ^*User action:\*
Ascertain the cause of the failure from the messages given. There may be a 
simple remedy, e.g. a change in the directory specification. Alternatively, 
this error could be due to a more serious problem such as a system failure, 
in which case the System Manager should be informed. Once the problem has been 
solved, you can run the program again.

.NOJUSTIFY;.TP 10;.P -4
ERROPNPAR, error opening parameter file 'file-spec'
.JUSTIFY

.P0; ^*Explanation:\*
The parameter file could not be opened. An additional LSLLIB message will 
follow, giving the reason for the failure. If this is due to a system error, 
the system error message will also appear. The program exits immediately.
.P0; ^*User action:\*
Ascertain the cause of the failure from the messages given. There may be a 
simple remedy, e.g. a change in the directory specification. Alternatively, 
this error could be due to a more serious problem such as a system failure, 
in which case the System Manager should be informed. Once the problem has been 
solved, you can run the program again.

.NOJUSTIFY;.TP 10;.P -4
ERRRDFRT, error reading FRT file 'file-spec'
.JUSTIFY

.P0; ^*Explanation:\*
An error occurred while reading in the FRT file. A message 
output by the Feature Representation Library (FRTLIB) will appear before this 
message, giving further information as to what has gone wrong. For example, 
the specified FRT file may not exist, or it may be in another directory.
.P0; ^*User action:\*
Dependent upon the associated error messages.

.NOJUSTIFY;.TP 10;.P -4
ERRRDPAR, error reading from parameter file 'file-spec' at line 'number'
.JUSTIFY

.P0; ^*Explanation:\*
The given line could not be read from the parameter file. An additional
LSLLIB message will follow, giving the reason for the failure. If this is due
to a system error, the system error message will also appear. The program
exits immediately.
.P0; ^*User action:\*
Ascertain the cause of the failure from the messages given, and take the
appropriate remedial action. If the error is due to a serious problem such as
a system failure, the System Manager should be informed. Once the problem has
been solved, you can run the program again.

.NOJUSTIFY;.TP 10;.P -4
IFFCLOERR, cannot close IFF file
.JUSTIFY

.P0; ^*Explanation:\*
The IFF file could not be closed. This may be due to a previous IFF error, or 
it may indicate a more serious system error. The message will be preceded by 
an IFF library message which will give more details, including a two-character 
code.
.P0; ^*User action:\*
Look up the IFF error code in the IFFLIB Reference Manual (part of the
MAPPING package documentation) and take the appropriate remedial action. If
the error is due to a serious problem such as a system failure, the System
Manager should be informed. Once the problem has been solved, you can run the
program again.

.NOJUSTIFY;.TP 10;.P -4
IFFREADERR, error reading from IFF file 'name'
.JUSTIFY

.P0; ^*Explanation:\*
An error has occurred while reading the IFF file. This may indicate a more
serious system error. The message will be preceded by an IFF library message
which will give more details, including a two-character code.
.P0; ^*User action:\*
Look up the IFF error code in the IFFLIB Reference Manual (part of the
MAPPING package documentation) and take the appropriate remedial action. If
the error is due to a serious problem such as a system failure, the System
Manager should be informed. Once the problem has been solved, you can run the
program again.

.NOJUSTIFY;.TP 10;.P -4
NOCODES, no CODE entries in parameter file
.JUSTIFY

.P0; ^*Explanation:\*
There are no CODE entries in the parameter file. Without these, the program
cannot translate the IFF feature data.
.P0; ^*User action:\*
Create a parameter file containing the appropriate CODE entries, and
run the program again.

.NOJUSTIFY;.TP 10;.P -4
NOMD, cannot find MD entry in IFF file
.JUSTIFY

.P0; ^*Explanation:\*
If the origin offset is to be applied to IFF coordinates, I2MAPDATA looks for
the Map Descriptor entry immediately after opening the IFF file. If the
descriptor is type 2, it is read in to obtain the origin offset. If a map
descriptor is not found, the program exits and this message appears,
indicating that the IFF file is invalid and therefore cannot be used.
.P0; ^*User action:\*
Look at the IFF file using the IMP utility IPATCH, in order to ascertain the 
level of corruption. The HIstory entry may indicate how the IFF file came to 
have no MD entry.

.NOJUSTIFY;.TP 10;.P -4
UNKATTCODE, cannot find attribute code 'code'
.JUSTIFY

.P0; ^*Explanation:\*
An IFF attribute code specified either on the command line or in the
parameter file cannot be found in the ACD tables. The message immediately
preceding this one will give further information as to why the code was not
recognised. Program execution will terminate.
.P0; ^*User action:\*
If the attribute code was specified on the command line, respecify the command
line using the correct code. If the attribute code was incorrectly specified
in the parameter file, amend the attribute code in the file. Run the program
again.

.NOJUSTIFY;.TP 10;.P -4
UNKATTNAME, cannot find attribute name 'name'
.JUSTIFY

.P0; ^*Explanation:\*
An IFF attribute name specified either on the command line or in the
parameter file cannot be found in the ACD tables. The message immediately
preceding this one will give further information as to why the name was not
recognised, and the NOFRT message may follow. Program execution will
terminate.
.P0; ^*User action:\*
If the NOFRT message indicates that an FRT file is required, respecify the
command line with the /FRT qualifier. If the /FRT qualifier is used, ensure
that the appropriate ACD definition appears in the FRT file. If the attribute
name was specified on the command line, respecify the command line using the
correct name. If the attribute name was incorrectly specified in the parameter
file, amend the attribute name in the file. Run the program again.

.NOJUSTIFY;.TP 10;.P -4
UNSETMD, IFF MD entry not type 2
.JUSTIFY

.P0; ^*Explanation:\*
If the origin offset is to be applied to IFF coordinates, I2MAPDATA looks for
the Map Descriptor entry immediately after opening the IFF file. If the
descriptor is type 2, it is read in to obtain the origin offset. If a map
descriptor is not found, the program exits and this message appears,
indicating that the IFF file is invalid and therefore cannot be used.
.P0; ^*User action:\*
Look at the IFF file using the IMP utility IPATCH, in order to ascertain the 
level of corruption. The HIstory entry may indicate how the IFF file came to 
have no MD entry.
.LM -4
.SUBTITLE MESSAGES (FATAL)

.!******************************************************************************
.PAGE
^*--------------------------------------------------------------------------------\*
.HL     2 ^^^*MESSAGES (FATAL)\*

These messages indicate  a severe   error in processing,  or
some form of system failure, which has caused the program to
terminate.

.LM +4

.NOJUSTIFY;.TP 10;.P -4
UNKCMD, unknown command "'string'"
.JUSTIFY

.P0; ^*Explanation:\*
The given command in the parameter file was successfully decoded, but was not
recognised during interpretation.
.P0; ^*User action:\*
This message is most likely due to an error in the program and should be 
reported to Laser-Scan.
.LM -4
.SUBTITLE MESSAGES (OTHER)

.!******************************************************************************
.PAGE
^*--------------------------------------------------------------------------------\*
.HL     2 ^^^*MESSAGES (OTHER)\*

In addition to the above messages which are generated by the
program itself,   other messages  may  be   produced by  the
command line interpreter (CLI) and by  Laser-Scan libraries.
In particular, messages may be  generated by the IFF library
and  by the  Laser-Scan  I/O library,  LSLLIB.  IFF  library
messages are introduced by   '%IFF' and are  documented in
the IFF library users' guide. In most cases IFF errors will
be due to a corrupt input file, and this should be the first
area of investigation. If the  cause of  the error cannot be
traced by the  user, and  Laser-Scan are consulted, then the
output  file should  be  preserved to  facilitate diagnosis.
LSLLIB  messages  are  introduced  by    '%LSLLIB' and are
generally self-explanatory.  They are  used  to  explain the
details of program generated errors.
