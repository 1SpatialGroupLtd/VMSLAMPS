.SUBTITLE UTILITY I2SXF
.PAGE
.TP 10
.P 0
^*--------------------------------------------------------------------------------\*
.HL 1 ^^^*UTILITY I2SXF\*

.TP 10
.P 0
^*--------------------------------------------------------------------------------\*
.HL 2 ^^^*FUNCTION\*

.LM +10

.P 0
I2SXF reads an IFF file and outputs the data to SXF. The  program is driven by
a parameter file which describes each feature code. Options exist to select 
only particular layers or feature codes for translation.

.LM -10

.TP 10
.P 0
^*--------------------------------------------------------------------------------\*
.HL 2 ^^^*FORMAT\*

.LM +10

.P 0
$ I2SXF IFF-file-spec SXF-file-spec

.BLANK
.NOFILL
^*Command qualifiers                       Defaults\*

/FC=(integer[,...])                      All feature codes
/[NO]FRT[=file-spec]                     /NOFRT
/LAYER=(integer[,...])                   All layers
/[NO]LOG                                 /NOLOG
/PARAMETER=file-spec                     None

.FILL

.LM -10

.TP 10
.P 0

^*--------------------------------------------------------------------------------\*
.HL 2 ^^^*PROMPT\*

.LM +10

.NO FILL
__IFF-file:          IFF-file-spec
__SXF-file:          SXF-file-spec
.FILL

.LM -10

.TP 10
.P 0
^*--------------------------------------------------------------------------------\*
.HL 2 ^^^*PARAMETERS\*

.LM +10

.P -10;IFF-file-spec

.P -2;-#specifies the IFF file which is to be converted. Any part of the 
file-spec which is not supplied will be taken from the default specification
'LSL$IF:IFF.IFF'. 

.P -10;SXF-file-spec

.P -2;- specifies the name of the output SXF file. Any part of the 
file-spec which is not supplied will be taken from the default specification
'LSL$SXF:SXF.SXF'. If a file with the specified name already exists a new file
will be created with the version number incremented by one. Note that the 
logical name LSL$SXF should be defined.

.LM -10

.TP 10
.P 0
^*--------------------------------------------------------------------------------\*
.HL 2 ^^^*COMMAND QUALIFIERS\*

.LM +10

.TP 7
.P -10;/FC=(integer[,...])
.P -2;-#causes I2SXF to output only those IFF features which have the
specified feature code(s). The /FC
qualifier will accept single, multiple or ranges of feature code arguments.
Ranges may be specified with starting and ending feature codes that are
separated by a colon, for example /FC=56:58. When specifying more than one
range of feature codes, separate each range with a comma, for example
/FC=(1:5,56:89). The maximum number of feature codes which may be specified is
1024. 

.TP 8
.P -10;/FRT[=file-spec]
.BR
.I -10;/NOFRT
.P -2;-#specifies an FRT file which the program will read and use to interpret 
non-standard CB attributes in IFF revision 1 input files. /FRT 
is not necessary for IFF revision 0 input files.
The FRT file-spec is parsed against the default LSL$FRT:'name'.FRT where
'name' is the name specified with /PARAMETER.

.TP 7
.P -10;/LAYER=(integer[,...])
.P -2;-#causes I2SXF to output only those IFF features which are in the 
specified layer(s). The /LAYER
qualifier will accept single, multiple or ranges of layer arguments.
Ranges may be specified with starting and ending layers that are
separated by a colon, for example /LAYER=3:5. When specifying more than one
range of layers, separate each range with a comma, for example
/LAYER=(1:5,12:14). The maximum number of layers which may be specified is
1024. 

.TP 8
.P -10;/LOG
.BR
.I -10;/NOLOG
.P -2;-#causes supplementary messages to be sent to SYS$OUTPUT.
Supplementary messages are generated when a file is successfully 
opened, and a reassuring message is output each time a new IFF layer is 
encountered in the input file. 

.TP 7
.P -10;/PARAMETER=file-spec
.P -2;-#specifies the IFF parameter file, which defines the 
transformation of feature codes in the IFF data to TRF codes in the output SXF 
data. This qualifier is mandatory, and the parameter file-spec is parsed from 
the default LSL$LOOKUP:I2SXF.I2SXF__PAR.

.LM -10

.TP 10
.P 0
^*--------------------------------------------------------------------------------\*
.HL 2 ^^^*RESTRICTIONS\*

.LM +10

.LIST 'o'
.LE
/PARAMETER must be specified
.END LIST

.LM -10

.TP 10
.P 0
^*--------------------------------------------------------------------------------\*
.HL 2 ^^^*DESCRIPTION\*

.LM +10

.P 0
I2SXF reads an IFF file containing a single map and produces an SXF output file.
It deduces the translation necessary by using a parameter file.

.TP 10
.BLANK
.HL 3 ^^^*IFF file\*

.P 0
The IFF file should conform to 
the standards set out in the DATA PREPARATION section under the heading
'Preparation for digitising data to be output to SXF'.

.P 0
The revision level of the IFF files can be 0 or 1.
Note, however that an FRT file should also be specified if any of 
the input files are revision level 1.

.TP 10
.BLANK
.HL 3 ^^^*Parameter file\*

.P 0
This file contains the feature description table which describes the
translations required to produce SXF data from IFF data. The file can
also contain ......
.!** whatever else it can have .BR;
The format of the table is described in the DATA PREPARATION section under the
heading 'The SXF Parameter File', and it will probably have been set up by
the LAMPS system manager and remain relatively static at most installations. 

.TP 10
.BLANK
.HL 3 ^^^*Using the program\*

.P 0
Normal use of the program is in batch mode - that is, running it via a batch 
command file, submitted with the SUBMIT command. However, it is also possible 
to run the program interactively, although since it can take a long time to 
translate an IFF file this is not necessarily the best method.

.P 0
It is probable that the symbol I2SXF will have been set up to include at
least the /PARAMETER and possibly the /FRT qualifiers, so you may only need to 
give the input IFF file and output SXF file.

.TP 10
.BLANK
.HL 3 ^^^*How the program works\*

.P 0
Once the program has been invoked and the command line successfully read, 
a summary of the inputs and outputs is typed. The parameter file is then read 
in, and if that was successful the IFF file is opened. 

.P 0
.!*** what happens now ?
.!*** mention how different types of data are treated and any assumptions
.!** also include what point attributes are expected

.P 0
When all applicable data has been output to the drawing file, the program will 
exit.

.TP 10
.BLANK
.HL 3 ^^^*The SXF file\*

.P 0
.!** anything worth saying ?

.LM -10

.PAGE
.P 0
^*--------------------------------------------------------------------------------\*
 
.HL 2 ^^^*EXAMPLES\*
 
.!** The example below shows you how to format the RUNOFF commands. Include a 
.!** few (perhaps 3) examples, including at least one to illustrate an error. 
.!** See other CONVERT utilities for the sort of examples required. In order to
.!** get the output for the examples, use
.!**		$ set host 0/log
.!** and log on, execute the program, and log off back to your original
.!** process. There will be a file in your current directory called SETHOST.LOG,
.!** from which you can extract the bits of text you need. Remember to replace
.!** all underlines _ with double underlines __ , so RUNOFF recognises them !

.BLANK
.NO FILL
$ ^*I2SXF/PAR=HERE:VIAK/LOG TEMPLATE SCRATCH _<CR_>\*
 
Parameter file      : HERE:VIAK.I2SXF__PAR
IFF input  file     : LSL$IF:TEMPLATE.IFF
SXF output file     : LSL$SXF:SCRATCH.SXF
Outputting supplementary messages
 
%I2SXF-I-READPAR, reading parameter file
%LSLLIB-I-IFFOPENED, LSL$DATA__ROOT:[LSL.IFF]TEMPLATE.IFF;1 opened for read
%I2SXF-I-IFFCLOSED, IFF file closed
 ELAPSED:    0 00:00:01.58  CPU: 0:00:00.24  BUFIO: 15  DIRIO: 5  FAULTS: 102 
$ 
.FILL

.LM +10

.P 0
This example illustrates normal execution of I2SXF. The parameter file
directory and name have been specified, but the extension has defaulted. Only
the name part of the IFF file-spec has been given, defaults being filled in for
the directory and extension. The same applies to the SXF file-spec. All IFF
feature codes are converted to the appropriate TRF codes, except those which
have not been defined in the parameter file. A warning message is output for
each feature whose feature code is undefined, and the feature is ignored. The
/LOG qualifier causes the extra informational messages to be output. 

.LM -10

.!
.!******************************************************************************
.! get the messages
.!
.REQUIRE "SXF_I2SXFMSG.RNO"
.!
.!** note that the file produced by NEWMSG is renamed to the above
