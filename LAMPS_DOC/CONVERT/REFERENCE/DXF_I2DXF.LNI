





  *--------------------------------------------------------------------------------*



  1  *UTILITY I2DXF*

  *--------------------------------------------------------------------------------*



  1.1  *FUNCTION*

            I2DXF is a Laser-scan  IFF  format  to  Auto-CAD  DXF  ASCII
            format  converter.   It  reads  from a standard IFF file and
            produces a standard DXF text file.  Output  is  directed  to
            disk file.

  *--------------------------------------------------------------------------------*



  1.2  *FORMAT*

            $ I2DXF input-file-spec output-file-spec 

            *Command qualifiers                      Defaults*
            /[NO]ABSOLUTE                           /NOABSOLUTE
            /[NO]DECIMAL_PLACES                     /NODECIMAL_PLACES
            /FRT=file-spec                          No defaults
            /[NO]HEADER                             /NOHEADER
            /[NO]LOG                                /NOLOG
            /PARAMETER=file-spec                    No defaults
            /[NO]POINTSIZE                          /NOPOINTSIZE
            /[NO]QUIET                              /NOQUIET

  *--------------------------------------------------------------------------------*



  1.3  *PROMPTS*

            Input IFF filename  :   input-file-spec
            Output DXF filename :   output-file-spec
  *--------------------------------------------------------------------------------*



  1.4  *PARAMETERS*

  input-file-spec

          - specifies the IFF file which is to  be  converted  into  DXF
            format.   Any  part  of the file name which is not specified
            will   be   taken    from    the    default    specification


                                                                  Page 2
  *UTILITY I2DXF*


            'LSL$IF:IFF.IFF'.

  output-file-spec

          - specifies the DXF file which is to be created.  Any part  of
            the  file  name  which is not explicitly given will be taken
            from the default specification 'LSL$DXF:DXF.DXF'.

            Note that both logical names, 'LSL$IF:' and  'LSL$DXF'  must
            be defined, or overridden.


  *--------------------------------------------------------------------------------*



  1.5  *COMMAND QUALIFIERS*

  /[NO]ABSOLUTE

          - enables the output of  absolute  coordinates  to  DXF.   The
            default  action  is  to  output  the  local IFF coordinates.
            Error messages will be output if the MD entry is missing, or
            does not contain a local origin, if this qualifier is given.

  /[NO]DECIMAL_PLACES
  /DECIMAL_PLACES = integer

          - enables the user to specify the  number  of  decimal  places
            output  in  the x,y coordinates.  This may be useful for the
            output to DXF from IFF files which  contain  coordinates  of
            small   absolute   magnitude   where  resolution  is  to  be
            preserved.  The supplied number should be between 1  and  9.
            If this qualifier is not given, the default output format is
            with 3 decimal places.

  /FRT = file-spec

          - causes an FRT file, containing definitions of feature  codes
            to  be  read  in.   These  definitions  will then be used to
            identify the features read in the IFF file.  The default  is
            LSL$FRT:DXF.FRT.  This qualifier is mandatory.

  /[NO]HEADER

          - enables the text fields of type 6 AC's attached to the  area
            feature  (FSN  1,  FC  0 in LAYER 0) to be read and used for
            some of the DXF HEADER variables.


                                                                  Page 3
  *UTILITY I2DXF*


  /[NO]LOG

          - enables a range of  informational  messages  concerning  the
            progress  of  the  data  translation  to be displayed on the
            terminal.

  /PARAMETER = file-spec

          - specifies   the   parameter   file   which    defines    the
            transformation  of  feature  codes in the IFF data to entity
            types in DXF.  The parameter file-spec is  parsed  from  the
            default LSL$LOOKUP:DXF.PAR.  Any part of the file name which
            is not specified by the /PARAMETER qualifier will  be  taken
            from  the  above  default  specification.  This qualifier is
            mandatory.

  /[NO]POINTSIZE

          - signals that the contents of any TH (text height)  entry  is
            treated  as  a  point size, instead of the usual mm./100 for
            the default of /NOPOINTSIZE, and converted into mm.  in DXF.

  /[NO]QUIET

          - enables the suppression of a range of  messages  during  the
            data  translation to be displayed on the terminal, including
            COLNOTMAT, LINEUSED and POLYUSED.

  *--------------------------------------------------------------------------------*



  1.6  *DESCRIPTION*

            After the command line is decoded, relevant  files  will  be
            opened.   The  program then scans through the parameter file
            to extract the definitions of the lookup mapping between the
            two  formats.  The mapping of IFF/DXF layers and that of IFF
            features/DXF entities will then be defined and stored.  If a
            /LOG  qualifier  is included, informational messages will be
            displayed to inform  the  user  of  the  number  of  layers,
            features/entities, symbols/blocks, linetypes and text styles
            found in the parameter file.  Any illegal command entry will
            cause a warning message to be issued.  Other errors detected
            in this stage will cause the program to abort.

            After the mapping between the two  formats  is  successfully
            defined,    the    program   then   accesses   the   Feature
            Representation Table (FRT) file to check for the validity of
            Feature  Code  (FC)  and colour entries in the ENTITY lookup
            table.  Again, the program will warn if any of  the  feature
            codes specified in the parameter file cannot be found in the
            FRT file.  Otherwise, the Graphical Type (GT) of the feature
            code  will  be  stored  for  later  matching  purposes.  The


                                                                  Page 4
  *UTILITY I2DXF*


            program will also cross-check the colours specified  in  the
            parameter  file and those found in the FRT file.  In case of
            any  difference,  a  warning  message  (COLNOTMAT)  will  be
            displayed   (which   may   be  suppressed  with  the  /QUIET
            qualifier).   Users  should  note  that  colours  explicitly
            specified  in the parameter file will have a higher priority
            over those in the FRT file for a given feature code.

            The next stage is the construction of the HEADER section  of
            the output DXF file.  The numerical values of the 'RA' entry
            in the IFF file are used for the translation  into  the  DXF
            map  extents  ($EXTMIN and $EXTMAX).  I2DXF does not support
            the colour or linetype by layer formats in  I2DXF  and  thus
            the  $CECOLOR  or $CELTYPE entries in the DXF HEADER section
            will  be  filled  with  standard  defaults  ($CECOLOR  =   0
            (BYBLOCK), $CELTYPE = CONTINUOUS and $TEXTSTYLE = STANDARD).
            This means that all entities in the  output  DXF  file  will
            have  a  colour  index  (62  group) and line style (6 group)
            attached to them.  The colour index entry in DXF LAYER table
            will be undefined.

            If the /HEADER qualifier is given, an area feature in  layer
            0  is  expected  (with  FSN 1, FC 0), containing type 6 AC's
            with DXF HEADER variables  and  their  values  in  the  text
            fields.   The program will search for this feature, ignoring
            any others  preceding  it,  in  order  to  fill  the  HEADER
            section,  so ideally this feature should be the first in the
            IFF file.  An error message  will  result  if  this  feature
            could  not  be  found,  or there was an error reading it.  A
            list of the supported variables and their format is given in
            the  DXF2I  section  of  this  manual.  These variables will
            override the default ones mentioned above.

            The HEADER section is followed by a TABLES  section.   I2DXF
            makes  use  of  the  data  read  from the parameter file and
            outputs relevant  data  into  the  LTYPE,  STYLE  and  LAYER
            tables.   These  tables  define the DXF linetype, text style
            and layer characteristics.

            All line types referenced in the parameter file  are  output
            to  the  LTYPE  table.   Each one is compared to the default
            line types (CONTINUOUS, DASHED etc.) defined  in  the  'DATA
            PREPARATION'  section,  and the relevant fields filled.  Any
            not found in this default setup will be  output  as  if  for
            'CONTINUOUS'.

            All text styles referenced in the parameter file are  output
            to  the  STYLE  table.   Each one is compared to the default
            text styles (STANDARD, ROMANC  or  ROMANT)  defined  in  the
            'DATA  PREPARATION' section, and the relevant fields filled.
            Any not found in this default setup will be output as if for
            'STANDARD'.


                                                                  Page 5
  *UTILITY I2DXF*


            All layer entries in the parameter file will create a  LAYER
            table entry.  The layer colour (62 group) will be set to the
            original IFF layer number.

            The next section is the BLOCKS  section  which  defines  the
            symbol  definition.  Each INSERT entry in the parameter file
            references a BLOCK entry, with  the  parameter  file  colour
            being   used   for   the   62  group  entry.   The  entities
            constituting the BLOCK are  omitted,  and  only  the  symbol
            name, colour and default line type CONTINUOUS are used.

            The last section in a DXF file is the ENTITIES section which
            contains  the  graphical data of the drawing.  The graphical
            entities supported by I2DXF are LINE,  POINT,  CIRCLE,  ARC,
            TRACE,  SOLID,  TEXT,  INSERT  and  POLYLINE.   The  program
            accesses the IFF file, sequentially extracting each  feature
            code  (FC)  and  its  resident  layer name, and from its FRT
            entry individual feature characteristics  can  be  extracted
            and  output  to  the  DXF  file  entity  referenced  in  the
            parameter file for the FC.

            The parameter file layer entries are used  to  map  the  IFF
            layer  number  to DXF layer name.  If a particular IFF layer
            is missing from the parameter file, the program searches for
            the  next EO entry, omitting all features in this layer.  In
            this  way  undesired  layers  may  be   skipped   from   the
            translation.   An  error  message  will result if the end of
            layer EO entry can not be found.

            Text heights (TH entries) are by default assumed  to  be  in
            units  of  mm./100.   However,  they can be treated as point
            sizes if the /POINTSIZE  qualifier  is  given.   Both  value
            types  are  converted  to  mm.   in the DXF file.  If the TH
            entry is absent, or its value zero, the FRT value  (mm.)  is
            used, if present.  If not, the text height will be omitted.

            The z coordinates in any ZS (3-d) entry  is  output  to  the
            group  30 field complementing the groups 10 and 20 for x and
            y.  Any height in type 2 or 3 AC entry is output to a  group
            38 elevation field for the particular entity.

            Users  are  strongly  advised  to   refer   to   the   'DATA
            PREPARATION' section about the mapping restrictions from IFF
            features to DXF entities.

            Informational  messages  about  the   conversion   will   be
            displayed at various stages of the process provided the /LOG
            qualifier is included in the user command line.



                                                                  Page 6
  *UTILITY I2DXF*


  *-------------------------------------------------------------------------------*



  1.7  *EXAMPLES*


  $ *I2DXF CONTOURS CONTOURS2/FRT=DXF/PARAMETER=HERE:TEST*
   ELAPSED:    0 00:00:52.68  CPU: 0:00:27.82  BUFIO: 45  DIRIO: 472
  FAULTS: 285
  $


            This example demonstrates the use of I2DXF without the  /LOG
            qualifier.   The input IFF file LSL$IF:CONTOURS.IFF has been
            successfully  processed  and  a   DXF   format   disk   file
            LSL$DXF:CONTOURS2.DXF has been produced.


  $ *I2DXF*
  _Input IFF file : *ROADS/LOG/FRT=HERE:TRANSPORT*
  _Output DXF file: *ROADS2/PARAMETER=HERE:TEST.DXF2I_PAR*
  %I2DXF-I-OPENFRT, FRT file HERE:TRANSPORT.FRT opened for read
  %LSLLIB-I-IFFOPENED, LSL$DATAROOT:[LSL.IFF]ROADS.IFF;1 opened for read
  %I2DXF-I-OPENDXF, DXF file LSL$DXF:ROADS2.DXF;0 opened for write
  %DXFPAR-I-OPNPAR, PARAMETER file: HERE:TEST.DXF2I_PAR opened for read
  %DXFPAR-I-LAYERFND, LAYERs found: 4
  %DXFPAR-I-ENTITYFND, ENTITYs found: 12
  %DXFPAR-I-BLOCKFND, BLOCK(symbol)s found: 1
  %DXFPAR-I-LTYPEFND, LTYPEs found: 3
  %DXFPAR-I-STYLEFND, STYLEs found: 2
  %I2DXF-I-MAPEXTENT, Map extents: X 0.0 500.0, Y 0.0 500.0
  %I2DXF-I-NEWOLFND, LAYER 0 found
  %I2DXF-I-NEWOLFND, LAYER 1 found
  %I2DXF-I-NEWOLFND, LAYER 2 found
  %I2DXF-I-NEWOLFND, LAYER 3 found
  %I2DXF-I-FEAFND, number of FEATUREs found: 34
  %I2DXF-I-PROCSUCC, number of features SUCCESSFULLY processed: 34
   ELAPSED:    0 00:01:16.84  CPU: 0:00:28.06  BUFIO: 73  DIRIO: 495
  FAULTS: 276
  $



            This  example  demonstrates  the  use  of  I2DXF  with  /LOG
            qualifier to enable more information about the conversion to
            be displayed.  It also demonstrates the use of a pre-defined
            logical  name  'HERE:' to re-direct input/output.  Users may
            note that we are using the  same  PARAMETER  file  for  both
            direction of conversion.





                                                                  Page 7
  MESSAGES (SUCCESS)


  *--------------------------------------------------------------------------------*



  1.8  *MESSAGES (SUCCESS)*

  These messages are used to indicate that the program has succeeded  in
  performing some action, and do not require any user action.

  NORMAL, Successful completion

      *Explanation:* The program has completed successfully.

      *User action:* None.


                                                                  Page 8
  MESSAGES (INFORMATIONAL)


  *--------------------------------------------------------------------------------*



  1.9  *MESSAGES (INFORMATIONAL)*

  These messages give information only, and require no immediate  action
  by  the  user.   They  are  used to provide information on the current
  state of the program, or to supply explanatory information in  support
  of a warning or error message.

  ATFSNFC, at FSN 'number', FC 'number'

      *Explanation:* This message is used as a complement to warning and
      error  messages.   It  informs the user of the current FSN, and FC
      positions.

      *User action:* None.

  ATPOSITION, at ('real', 'real')

      *Explanation:* This message is used as a complement to warning and
      error messages.  It informs the user of the current position.

      *User action:* None.

  FEAFND, Number of FEATUREs found:  'number'

      *Explanation:* This message informs the user of the  total  number
      of  features  found in the input IFF file.  This message will only
      be displayed when the /LOG qualifier is included.

      *User action:* None.

  MAPEXTENT, Map extents:  X 'min' 'max', Y 'min' 'max'.

      *Explanation:* This message informs the user of  the  map  extents
      which  will  be stored in the HEADER section of the DXF file.  The
      data is read from the 'RA' entry of the IFF  file.   This  message
      will only be displayed when the /LOG option is included.

      *User action:* None.

  NEWLAYFND, LAYER 'number' found

      *Explanation:* This message informs the user that the given  layer
      in  the  IFF  file  has  been  found.   This  message will only be
      displayed when the /LOG option is included.

      *User action:* None.


                                                                  Page 9
  MESSAGES (INFORMATIONAL)


  OPENDXF, DXF file 'name' opened for write

      *Explanation:* This message informs the user the DXF file has been
      opened for write.

      *User action:* None.

  OPENFRT, FRT file 'name' opened for read

      *Explanation:* This message informs the user the FRT file has been
      opened for read.

      *User action:* None.

  PROCESUCC, Number of features SUCCESSFULLY processed:  'number'

      *Explanation:* This message informs the user of the  total  number
      of  features that have been successfully processed by the program.
      This message will only  be  displayed  when  the  /LOG  option  is
      included.

      *User action:* None.

  RDHDRACS, Reading HEADER AC's

      *Explanation:* The area featuree in layer 0 is being read for  the
      header variables in AC's.

      *User action:* None.


                                                                 Page 10
  MESSAGES (WARNING)


  *--------------------------------------------------------------------------------*



  1.10  *MESSAGES (WARNING)*

  These messages are output when an  error  has  occurred  that  can  be
  corrected  immediately by the user or that the program will attempt to
  overcome.

  ANGCOIN, Angles calculated for ARC coincident.

      *Explanation:* The angles calculated from the data  given  in  the
      IFF  file  are  coincident  with each other.  This is obviously an
      error from the input data.  If the angles are  really  equal,  the
      arc  should  be stored as a CIRCUMCIRCLE rather than an ARC.  This
      message will be followed by a 'ATFSNFC' message specifying its FSN
      location.

      *User action:* Check the validity of the input data in  the  input
      IFF file.

  BADCROSREF, Invalid cross-reference between IFF and DXF entry.

      *Explanation:* Invalid cross-reference between current IFF feature
      read  from  the  given  IFF  file  and the DXF ENTITY given in the
      parameter file.  Users should note that the  mapping  between  IFF
      features  and DXF ENTITY are restricted by their graphical nature.
      Users should refer  to  the  'DATA  PREPARATION'  section  of  the
      CONVERT   user's   guide  for  further  details  and  the  mapping
      restrictions.  The program will continue ignoring the current  IFF
      feature.   This  message  will  be followed by a 'ATFSNFC' message
      specifying its FSN location.

      *User action:* Cross-check the IFF feature code entry with its DXF
      ENTITY type.

  BADPTSLIN, Invalid number of points for DXF linear feature.

      *Explanation:* Number of points for a feature read  from  the  IFF
      file is invalid for the definition of its DXF counterparts.  Users
      should note that the number of points allowed for  the  definition
      of  a  feature  is  defined  by its type.  For example, a DXF LINE
      entity can only accommodate two data  points.   The  program  will
      continue  ignoring  the current IFF feature.  This message will be
      followed by a 'ATFSNFC' message specifying its FSN location.

      *User action:* Cross-check the validity of data in  both  the  IFF
      and PARAMETER files.


                                                                 Page 11
  MESSAGES (WARNING)


  DEFTEXHGT, Default text height 'real' mm.  used for text entity

      *Explanation:* Default DXF text height is  used  for  the  current
      entity  because there was no valid text height entry found for the
      IFF file feature, the  parameter  file  or  the  FRT  file.   This
      message  may be turned off by use of the /QUIET qualifier if there
      are too many occurrences of this situation.

      *User action:* None.

  LINEUSED, DXF LINE entity type used instead of POLYLINE.

      *Explanation:* DXF LINE  entity  type  is  used  for  the  current
      feature   instead  of  POLYLINE.   POLYLINE  is  the  entity  type
      currently specified by the  user  in  the  parameter  file.   LINE
      entity  type  is used here because the number of data points found
      within the current feature is two.  This message will be  followed
      by a 'ATFSNFC' message specifying its FSN location.

      *User action:* None.

  MDDEFAULT, Default values used for the origin offset

      *Explanation:* This message informs the user that the program  was
      only  able to find a 'MD' type 1 map descriptor entry in the input
      IFF file when the /ABSOLUTE qualifier was  given,  rather  than  a
      type2  containing  an  origin  offset.  A default origin offset of
      (0,0) will be used.

      *User action:* This may be due to the corruption of  data  in  the
      IFF file, so check the IFF file.

  POLYUSED, DXF POLYLINE entity type used instead of LINE.

      *Explanation:* DXF POLYLINE entity type is used  for  the  current
      feature  instead  of  LINE.   LINE  is  the  entity type currently
      specified by the user in the parameter file.  POLYLINE entity type
      is  used  here  because the number of data points found within the
      current feature is more than two.  This message will  be  followed
      by a 'ATFSNFC' message specifying its FSN location.

      *User action:* None.

  PROCEFAIL, Number of features FAILED to process:  'number'

      *Explanation:* This message informs the user of the  total  number
      of features that are failed to process by the program.  Any errors
      encountered during the processing would  have  been  indicated  in
      preceding messages.

      *User action:* According to previous messages.


                                                                 Page 12
  MESSAGES (WARNING)


  SINGPNTDEL, Single point deleted

      *Explanation:* A single point has been  deleted  from  a  POLYLINE
      feature.

      *User action:*  Check  the  geometry.   A  common  reason  is  the
      potential  creation  of single point line features for the closing
      invisible moves for nested polygons.

  SINGPTSTR, Single point IFF line feature not translated.

      *Explanation:* Single point IFF line feature in the given IFF file
      cannot be translated into its DXF LINE counterparts.  Users should
      note that DXF LINE entity requires exactly two data points  to  be
      defined.   The  program  will  continue  ignoring  the current IFF
      feature.  This message will be followed  by  a  'ATFSNFC'  message
      specifying its FSN location.

      *User action:* Ensure that the IFF file does not contain one-point
      lines.

  UNAANGINS, Unable to calculate angle for INSERT entity.

      *Explanation:* Unable to calculate  the  rotation  angle  for  DXF
      INSERT  entity  from  IFF SYMBOL feature.  This might be caused by
      two coincident data point entries in the  input  IFF  file.   This
      message will be followed by a 'ATFSNFC' message specifying its FSN
      location.

      *User action:* Check the validity of the input data in  the  input
      IFF file.

  UNAARCRAD, Unable to calculate radius for ARC entity.

      *Explanation:* The three points given in the input data set cannot
      form  an  circular arc.  This is obviously an error from the input
      data.  This message  will  be  followed  by  a  'ATFSNFC'  message
      specifying its FSN location.

      *User action:* Check the validity of the input data in  the  input
      IFF file.

  UNABCALAR, Unable to calculate angles for ARC entity.

      *Explanation:* This message warns the user that the angles for the
      definition  of an ARC in DXF format could not be calculated.  This
      may be caused by invalid input data points.  This message will  be
      followed by a 'ATFSNFC' message specifying its FSN location.

      *User action:* Check the validity of the input data in  the  input
      IFF file.


                                                                 Page 13
  MESSAGES (WARNING)


  UNABCALCE, Unable to calculate centre for CIRCLE entity.

      *Explanation:* This message  indicates  that  the  program  cannot
      calculate  the  radius and centre of a CIRCLE entry from the input
      IFF data.  This is obviously an error from the input data.

      *User action:* Check the validity of the input data in  the  input
      IFF file.

  UNABMATFC, Unable to match FC 'number' (FSN 'number') from parameter
      file.

      *Explanation:* Unable to match the feature code read  in  the  IFF
      file  with  those  presented  in  the parameter file.  This may be
      caused by the incorrect cross-referencing of parameter file or the
      corruption of the data itself.

      *User action:* Cross-check the IFF  file  with  its  corresponding
      parameter file.

  UNDEFLAY, Undefined IFF layer 'number' found

      *Explanation:* Undefined IFF layer number found in input IFF file.
      User  must  note that all IFF layers within an input IFF file must
      be defined and mapped in the parameter file.  The program will not
      be  able  to  process  this  layer, and any features in it will be
      ignored.

      *User action:* Re-define the LAYER table entries in the  parameter
      file.

  UNDEFPOINTSIZE, Undefined point size 'integer' in parameter file.

      *Explanation:* The DXF text size did not have a usable point  size
      match in the TEXT SIZE section of the parameter file.

      *User action:* Check the parameter file.


                                                                 Page 14
  MESSAGES (ERROR)


  *--------------------------------------------------------------------------------*



  1.11  *MESSAGES (ERROR)*

  These messages indicate an error in processing which  will  cause  the
  program  to  terminate.   The  most  likely  causes  are  a corrupt or
  otherwise invalid input file, or an  error  related  to  command  line
  processing and file manipulation.

  BADCMD, Invalid entry found in User Command Line

      *Explanation:* Invalid entry or entries  are  found  in  the  User
      Command Line.

      *User action:* Re-enter the command line.

  BADCOORD, Bad IFF coordinates.

      *Explanation:* This message  informs  the  user  that  an  invalid
      coordinate pair has been read in from the input IFF file.  It will
      be raised when there is an  insufficiency  or  redundancy  of  the
      coordinate  pairs in a specified input IFF feature.  This could be
      caused by the data corruption of the  input  file.   This  message
      will  be  followed  by  a  'ATFSNFC'  message  specifying  its FSN
      location.

      *User action:* Check the input IFF file against data corruption.

  BADDXF, Unable to extract DXF filename

      *Explanation:* This message informs the user that the  program  is
      unable to extract the DXF filename from the input command line.

      *User action:* Re-enter the command line.

  BADENDOFLAY, Unable to find end of layer 'number'

      *Explanation:* There was an error searching for the next EO  entry
      signifying  the  end of the current layer.  There was no entry for
      the layer in the parameter file, and the layer  should  have  been
      skipped over.  useraction

      *User action:*


                                                                 Page 15
  MESSAGES (ERROR)


  BADFRT, Unable to extract FRT filename

      *Explanation:* This message informs the user that the  program  is
      unable to extract the FRT filename from the input command line.

      *User action:* Re-enter the command line.

  BADHDRFTR, Unable to find header feature

      *Explanation:* The /HEADER qualifier was given to read the  header
      variables  from AC type 6 entries, but the area feature (FSN 1, FC
      0 in layer 0) containing the AC's could not be found.   It  should
      be the first feature in the IFF file, as any features preceding it
      will be ignored in the search if /HEADER is given.

      *User action:* Ensure that this feature is present,  or  omit  the
      /HEADER qualifier.

  BADIFF, Unable to extract IFF filename

      *Explanation:* This message informs the user that the  program  is
      unable to extract the IFF filename from the input command line.

      *User action:* Re-enter the command line.

  BADNUMDP, Unacceptable number of decimal places:  %N

      *Explanation:* This message informs the user  that  there  was  an
      unacceptable  number  of decimal places for real coordinate output
      values given with  the  /DECIMALPLACES  qualifier.   The  supplied
      number should be between 1 and 9.

      *User action:* Re-enter the command line.

  BADPAR, Unable to extract PARAMETER filename

      *Explanation:* This message informs the user that the  program  is
      unable  to  extract  the parameter filename from the input command
      line.

      *User action:* Re-enter the command line.

  BADRA, Unable to read 'RA' entry from IFF file

      *Explanation:* This message informs the user that the program  was
      unable to read the 'RA' range entry from the input IFF file.  This
      may be due to the corruption of data in the IFF file.

      *User action:* Check the input IFF file against data corruption.


                                                                 Page 16
  MESSAGES (ERROR)


  MDABSENT, Unable to find 'MD' entry in IFF file

      *Explanation:* This message informs the user that the program  was
      unable  to  find  the 'MD' map descriptor entry from the input IFF
      file when the /ABSOLUTE qualifier was given.  This may be  due  to
      the corruption of data in the IFF file.

      *User action:* Check the input IFF file against data corruption.

  UNABOPDXF, Unable to open DXF file for output

      *Explanation:* This message informs the user that the  program  is
      unable to open the DXF file with the supplied filename for output.

      *User action:* Check if the system resource is available.


                                                                 Page 17
  MESSAGES (OTHER)


  *--------------------------------------------------------------------------------*



  1.12  *MESSAGES (OTHER)*

  In addition to the above messages which are generated by  the  program
  itself, other messages may be produced by the command line interpreter
  (CLI) and by Laser-Scan libraries.  In  particular,  messages  may  be
  generated  by  the  IFF  library  and  by  the Laser-Scan I/O library,
  LSLLIB.  IFF  library  messages  are  introduced  by  '%IFF'  and  are
  documented  in the IFF library users' guide.  In most cases IFF errors
  will be due to a corrupt input file, and this should be the first area
  of  investigation.   If the cause of the error cannot be traced by the
  user, and Laser-Scan are consulted, then the  output  file  should  be
  preserved  to facilitate diagnosis.  LSLLIB messages are introduced by
  '%LSLLIB' and  are  generally  self-explanatory.   They  are  used  to
  explain the details of program generated errors.
