
.SUBTITLE UTILITY I2DXF
.PAGE
.B
^*--------------------------------------------------------------------------------\*
.HL 1 ^^^*UTILITY I2DXF\*

^*--------------------------------------------------------------------------------\*
.HL 2 ^^^*FUNCTION\*
.FILL
.LM +10
.P 0;I2DXF is a Laser-scan IFF format to Auto-CAD DXF ASCII format converter. 
It reads from a standard IFF file and produces a standard DXF text file. 
Output is directed to disk file. 
.BLANK
.NO JUSTIFY
.NOFILL
.LM -10
^*--------------------------------------------------------------------------------\*
.HL 2 ^^^*FORMAT\*
.LM +10
.NO FILL

$ I2DXF input-file-spec output-file-spec 

.BLANK
.NOFILL
^*Command qualifiers                      Defaults\*

/[NO]ABSOLUTE                           /NOABSOLUTE
/[NO]DECIMAL__PLACES                     /NODECIMAL__PLACES
/FRT=file-spec                          No defaults
/[NO]HEADER                             /NOHEADER
/[NO]LOG                                /NOLOG
/PARAMETER=file-spec                    No defaults
/[NO]POINTSIZE                          /NOPOINTSIZE
/[NO]QUIET                              /NOQUIET

.FILL

.BLANK
.LM -10
^*--------------------------------------------------------------------------------\*
.HL 2 ^^^*PROMPTS\*
.LM +10
.NO FILL

_Input IFF filename  :   input-file-spec
_Output DXF filename :   output-file-spec

.LM -10
^*--------------------------------------------------------------------------------\*
.HL 2 ^^^*PARAMETERS\*
.LM +10
.P -10;input-file-spec 
.JUSTIFY
.P -2;- specifies the IFF file which is to be converted into DXF format. Any
part of the file name which is not specified will be taken from the default
specification 'LSL$IF:IFF.IFF'.                                          
.TP 10
.P -10;output-file-spec
.P -2;- specifies the DXF file which is to be created. Any part of the file 
name which is not explicitly given will be taken from the default 
specification 'LSL$DXF:DXF.DXF'.

.P -2;##Note that both logical names, 'LSL$IF:' and 'LSL$DXF' must
be defined, or overridden.
.LM -10
.BLANK
.TP 12
.P 0
^*--------------------------------------------------------------------------------\*
.HL 2 ^^^*COMMAND QUALIFIERS\*
.LM +10

.TP 8
.P -10;/[NO]ABSOLUTE
.P -2;-#enables the output of absolute coordinates to DXF. The default action
is to output the local IFF coordinates. Error messages will be output if the 
MD entry is missing, or does not contain a local origin, if this qualifier is 
given.

.TP 8
.P -10;/[NO]DECIMAL__PLACES
.I -10;/DECIMAL__PLACES = integer
.P -2;-#enables the user to specify the number of decimal places output in the
x,y coordinates. This may be useful for the output to DXF from IFF files which
contain coordinates of small absolute magnitude where resolution is to be
preserved. The supplied number should be between 1 and 9.
If this qualifier is not given, the default output format is with 3 decimal
places.

.TP 8
.P -10;/FRT = file-spec
.P -2;-#causes an FRT file, containing definitions of feature codes to be 
read in. These definitions will then be used to identify the features
read in the IFF file. The default is LSL$FRT:DXF.FRT. This qualifier is 
mandatory.

.TP 8
.P -10;/[NO]HEADER
.P -2;-#enables the text fields of type 6 AC's attached to the area feature 
(FSN 1, FC 0 in LAYER 0) to be read and used for some of the DXF HEADER 
variables.

.TP 8
.P -10;/[NO]LOG
.P -2;-#enables a range of informational messages concerning the progress of the
data translation to be displayed on the terminal. 

.TP 8
.P -10;/PARAMETER = file-spec
.P -2;-#specifies the parameter file which defines the 
transformation of feature codes in the IFF data to entity types in DXF.
The parameter file-spec is parsed from the default 
LSL$LOOKUP:DXF.PAR. Any part of the file name which is not specified
by the /PARAMETER qualifier will be taken from the above default 
specification. This qualifier is mandatory.

.P -10;/[NO]POINTSIZE
.P -2;-#signals that the contents of any TH (text height) entry is treated as 
a point size, instead of the usual mm./100 for the default of /NOPOINTSIZE, 
and converted into mm. in DXF.

.TP 8
.P -10;/[NO]QUIET
.P -2;-#enables the suppression of a range of messages during the 
data translation to be displayed on the terminal, including COLNOTMAT, 
LINEUSED and POLYUSED. 

.LM -10

.TP 10
.P 0
^*--------------------------------------------------------------------------------\*
.NOKEEP
.FILL
.JUSTIFY
.HL 2 ^^^*DESCRIPTION\*
.LM +10
.P 0
After the command line is decoded, relevant files will be opened. The 
program then scans through the parameter file to extract the definitions
of the lookup mapping between the two formats. The mapping of IFF/DXF
layers and that of IFF features/DXF entities will then be defined and 
stored. If a /LOG qualifier is included, informational messages will be
displayed to inform the user of the number of layers, features/entities,
symbols/blocks, linetypes and text styles found in the parameter file. 
Any illegal command entry will cause a warning message to be issued. 
Other errors detected in this stage will cause the program to abort. 

.P 0
After the mapping between the two formats is successfully defined, the 
program then accesses the Feature Representation Table (FRT) file to check
for the validity of Feature Code (FC) and colour entries in the ENTITY 
lookup table. Again, the program will warn if any of the feature codes 
specified in the parameter file cannot be found in the FRT file.
Otherwise, the Graphical Type (GT) of the feature code will be stored for later 
matching purposes. The program will also cross-check the colours specified
in the parameter file and those found in the FRT file. In case of any
difference, a warning message (COLNOTMAT) will be displayed (which may be
suppressed with the /QUIET qualifier). Users should note that
colours explicitly specified in the parameter file will have a higher
priority over those in the FRT file for a given feature code.

.P 0
The next stage is the construction of the HEADER section of the output 
DXF file. The numerical values of the 'RA' entry 
in the IFF file are used for the translation into the DXF map extents ($EXTMIN
and $EXTMAX). I2DXF does not support the colour or linetype by layer formats in
I2DXF and thus the $CECOLOR or $CELTYPE entries in the DXF HEADER section will 
be filled with standard defaults ($CECOLOR = 0 (BYBLOCK), $CELTYPE = 
CONTINUOUS and $TEXTSTYLE = STANDARD).
This means that all entities in the output DXF file will have a colour index 
(62 group) and line style (6 group) attached to them. The colour index entry 
in DXF LAYER table will be undefined.

.P 0
If the /HEADER qualifier is given, an area feature in layer 0 is expected 
(with FSN 1, FC 0), containing type 6 AC's with DXF HEADER variables and their
values in the text fields. The program will search for this feature, ignoring 
any others preceding it, in order to fill the HEADER section, so ideally this 
feature should be the first in the IFF file. An error message will result if 
this feature could not be found, or there was an error reading it.
A list of the supported variables and their format is given in 
the DXF2I section of this manual. These variables will override the default 
ones mentioned above.

.P 0
The HEADER section is followed by a TABLES section. 
I2DXF makes use of the data read from the parameter file and outputs relevant 
data into the LTYPE, STYLE and LAYER tables. 
These tables define the DXF linetype, text style and layer characteristics.

.P 0
All line types referenced in the parameter file are output to the LTYPE table.
Each one is compared to the default line types (CONTINUOUS, DASHED etc.) 
defined in the 'DATA PREPARATION' section, and the relevant fields filled.
Any not found in this default setup will be output as if for 'CONTINUOUS'.

.P 0
All text styles referenced in the parameter file are output to the STYLE table.
Each one is compared to the default text styles (STANDARD, ROMANC or ROMANT)
defined in the 'DATA PREPARATION' section, and the relevant fields filled.
Any not found in this default setup will be output as if for 'STANDARD'.

.P 0
All layer entries in the parameter file will create a LAYER table entry.
The layer colour (62 group) will be set to the original IFF layer number.

.P 0
The next section is the BLOCKS section which defines the 
symbol definition. Each INSERT entry in the parameter file references a BLOCK
entry, with the parameter file colour being used for the 62 group entry.
The entities constituting the BLOCK are omitted, and only the symbol name, 
colour and default line type CONTINUOUS are used.

.P 0
The last section in a DXF file is the ENTITIES section which contains
the graphical data of the drawing. The graphical entities supported by
I2DXF are LINE, POINT, CIRCLE, ARC, TRACE, SOLID, TEXT, INSERT and
POLYLINE. The program accesses the IFF file, sequentially extracting each
feature code (FC) and its resident layer name, and from its FRT entry
individual feature characteristics can be extracted and output to the DXF 
file entity referenced in the parameter file for the FC. 

.P 0
The parameter file layer entries are used to map the IFF layer number to DXF 
layer name. If a particular IFF layer is missing from the parameter file,
the program searches for the next EO entry, omitting all features in this
layer. In this way undesired layers may be skipped from the translation. An 
error message will result if the end of layer EO entry can not be found.

.P 0
Text heights (TH entries) are by default assumed to be in units of mm./100.
However, they can be treated as point sizes if the /POINTSIZE qualifier is 
given. Both value types are converted to mm. in the DXF file. If the TH entry 
is absent, or its value zero, the FRT value (mm.) is used, if present. If
not, the text height will be omitted.

.P 0
The z coordinates in any ZS (3-d) entry is output to the group 30 field
complementing the groups 10 and 20 for x and y. Any height in type 2 or 3
AC entry is output to a group 38 elevation field for the particular entity.

.P 0
Users are strongly advised to refer to the
'DATA PREPARATION' section about the mapping restrictions from IFF features to 
DXF entities. 

.P 0
Informational messages about the conversion will be displayed at various 
stages of the process provided the /LOG qualifier is included in the user
command line.

.LM -10

.B

.PAGE
.TEST PAGE 12
^*-------------------------------------------------------------------------------\*
.NOFILL
.KEEP
.HL 2 ^^^*EXAMPLES\*
.NO FILL
.BLANK
$ ^*I2DXF CONTOURS CONTOURS2/FRT=DXF/PARAMETER=HERE:TEST\*
 ELAPSED:    0 00:00:52.68  CPU: 0:00:27.82  BUFIO: 45  DIRIO: 472  FAULTS: 285
$
.B
.JUSTIFY
.LM +10
.FILL
.P 0;This example demonstrates the use of I2DXF without the /LOG qualifier.
The input IFF file LSL$IF:CONTOURS.IFF has been successfully processed and 
a DXF format disk file LSL$DXF:CONTOURS2.DXF has been produced.
.NOFILL
.LM -10

.NOFILL
.KEEP
.NO FILL
.BLANK
$ ^*I2DXF\*
__Input IFF file : ^*ROADS/LOG/FRT=HERE:TRANSPORT\*
__Output DXF file: ^*ROADS2/PARAMETER=HERE:TEST.DXF2I__PAR\*
%I2DXF-I-OPENFRT, FRT file HERE:TRANSPORT.FRT opened for read
%LSLLIB-I-IFFOPENED, LSL$DATA_ROOT:[LSL.IFF]ROADS.IFF;1 opened for read
%I2DXF-I-OPENDXF, DXF file LSL$DXF:ROADS2.DXF;0 opened for write
%DXFPAR-I-OPNPAR, PARAMETER file: HERE:TEST.DXF2I__PAR opened for read
%DXFPAR-I-LAYERFND, LAYERs found: 4
%DXFPAR-I-ENTITYFND, ENTITYs found: 12
%DXFPAR-I-BLOCKFND, BLOCK(symbol)s found: 1
%DXFPAR-I-LTYPEFND, LTYPEs found: 3
%DXFPAR-I-STYLEFND, STYLEs found: 2
%I2DXF-I-MAPEXTENT, Map extents: X 0.0 500.0, Y 0.0 500.0
%I2DXF-I-NEWOLFND, LAYER 0 found
%I2DXF-I-NEWOLFND, LAYER 1 found
%I2DXF-I-NEWOLFND, LAYER 2 found
%I2DXF-I-NEWOLFND, LAYER 3 found
%I2DXF-I-FEAFND, number of FEATUREs found: 34
%I2DXF-I-PROCSUCC, number of features SUCCESSFULLY processed: 34
 ELAPSED:    0 00:01:16.84  CPU: 0:00:28.06  BUFIO: 73  DIRIO: 495  FAULTS: 276
$

.B
.JUSTIFY
.LM +10
.FILL
.P 0;This example demonstrates the use of I2DXF with /LOG qualifier to
enable more information about the conversion to be displayed. It also 
demonstrates the use of a pre-defined logical name 'HERE:' to re-direct
input/output. Users may note that we are using the same PARAMETER file
for both direction of conversion. 
.NOFILL
.LM -10

.!* include the error messages for this program

.REQUIRE	"DXF_I2DXFMSG.RNO"

