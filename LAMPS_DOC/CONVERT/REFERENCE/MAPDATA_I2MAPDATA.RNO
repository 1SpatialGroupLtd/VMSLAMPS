.SUBTITLE UTILITY I2MAPDATA
.PAGE
.TP 10
.P 0
^*--------------------------------------------------------------------------------\*
.HL 1 ^^^*UTILITY I2MAPDATA\*

.TP 10
.P 0
^*--------------------------------------------------------------------------------\*
.HL 2 ^^^*FUNCTION\*

.LM +10

.P 0
I2MAPDATA reads a Laser-Scan IFF file and produces a disk based MapData file. A
comprehensive parameter file and FRT are required to provide a lookup mechanism
between IFF and MapData feature codes.
.LM -10

.TP 10
.P 0
^*--------------------------------------------------------------------------------\*
.HL 2 ^^^*FORMAT\*

.LM +10

.P 0
$ I2MAPDATA input-IFF-file-spec output-MAPDATA-file-spec

.BLANK
.NOFILL
^*Command qualifiers                 Defaults\*

/[NO]ADD__OFFSET                    Add origin
/[NO]CURVE__AC = keyword            No curve AC defined
/DIVIDE = real                     Division factor = 1.0
/[NO]FRT__FILE = file-spec          No FRT
/[NO]LOG                           No logging
/[NO]PARAMETER__FILE = file-spec    No parameter file
/[NO]PRIORITY__AC = keyword         No priority AC defined
/[NO]TEXT__AC = keyword             No text AC defined
.FILL

.LM -10

.TP 10
.P 0
^*--------------------------------------------------------------------------------\*
.HL 2 ^^^*PROMPT\*

.LM +10

.NO FILL
__Input-IFF-file:             input-IFF-file-spec
__Output-MAPDATA-file:        output-MAPDATA-file-spec
.FILL

.LM -10

.TP 10
.P 0
^*--------------------------------------------------------------------------------\*
.HL 2 ^^^*PARAMETERS\*

.LM +10

.P -10;input-IFF-file-spec

.P -2;-#This parameter specifies the name of the input IFF file, and is
compulsory. The data written to the output file is read from this file. Only
one filename may be specified each time the program is executed.
.BL
The default device and extension `LSL$IF:IFF.IFF' is applied to the input 
file specification when it is parsed.

.TP 8
.P -10;output-MAPDATA-file-spec

.P -2;-#This compulsory parameter specifies the name of the output MapData
file which contains the data converted from the input IFF file. If any parts of
parameter are not given, the missing components are taken from the template
`SYS$DISK:MAPDATA.MAP'

.LM -10

.TP 20
.P 0
^*--------------------------------------------------------------------------------\*
.HL 2 ^^^*COMMAND QUALIFIERS\*

.LM +10

.BL;
.P -10;/[NO]ADD__OFFSET
.P -2;-#specifies that the local origin of the data (held in the IFF Map
Descriptor) is to be added to the coordinates. This addition of the offset is
performed before the scaling is applied from the /DIVIDE qualifier. This
qualifier will enable the user to recreate the MapData coordinates that were
fed into MAPDATA2I as /ADD__OFFSET and /DIVIDE mirror the /OFFSET and /MULTIPLY
qualifiers in MAPDATA2I. The default action is to add the local origin to the 
coordinates.

.BL;
.P -10;/[NO]CURVE__AC = (CODE:integer)
.P -10;/[NO]CURVE__AC = (NAME:string)
.P -2;-#specifies the number or name of the attribute code which holds the
per-point attribute for the curve flags. This AC can be specified using the
code or name as defined in the ACD section of the FRT. If not specified, no
curve flags will be present in the output file.

.BL;
.P -10;/DIVIDE = real
.P -2;-#this specifies the scaling factor which is applied to all IFF
coordinates in order to get them into the correct units, typically in
kilometres for MapData. It is the inverse function of /MULTIPLY in MAPDATA2I
and is applied after the origin offset is added if specified by /ADD__OFFSET.
The default is to apply a divide factor of 1.0 (ie nothing).

.BL;
.P -10;/[NO]FRT__FILE = file-spec
.P -2;-#specifies a Feature Representation Table (FRT) file which the program
will use to interpret the AC entries specified. In order for the program to
check the AC entries, there must be an ACD section in the FRT. The FRT
file-spec is parsed against the default `LSL$FRT:FRT.FRT'.

.BL;
.P -10;/[NO]LOG
.P -2;-#When /LOG is present, the I2MAPDATA utility will output diagnostic
messages about any file creation and what is happening as it processes the 
input IFF file so that any errors may be traced.

.BL;
.P -10;/[NO]PARAMETER=file-spec
.P -2;-#specifies the parameter file, which defines the mapping of IFF feature
codes into MAPDATA feature codes and any tolerances or attribute codes. For a
description of the parameter file, see the DATA PREPARATION section.
NOTE: This qualifier is compulsory.

.BL;
.P -10;/[NO]PRIORITY__AC = (CODE:integer)
.P -10;/[NO]PRIORITY__AC = (NAME:string)
.P -2;-#specifies the number or name of the attribute code which holds the
per-point attribute for the priority flags. This AC can be specified using the
code or name as defined in the ACD section of the FRT. If not specified, no
priority flags will be present in the output file.

.P -10;/[NO]TEXT__AC = (CODE:integer)
.P -10;/[NO]TEXT__AC = (NAME:string)
.P -2;-#specifies the number or name of the IFF attribute code whose optional
text string holds an attribute which may be stored with the MapData feature.
This AC can be specified using the code or name as defined in the ACD section
of the FRT. If not specified, no text attribute will be present in the output
file.

.LM -10
.TP 10
.P 0
^*--------------------------------------------------------------------------------\*
.HL 2 ^^^*RESTRICTIONS\*

.LM +10

.P 0
Command line qualifiers take precedence over their corresponding keywords in
the parameter file.
.LM -10

.TP 10
.P 0
^*--------------------------------------------------------------------------------\*
.HL 2 ^^^*DESCRIPTION\*

.LM +10

.TP 10
.BLANK
.HL 3 ^^^*Command line\*
.P 0
The symbol I2MAPDATA is normally set up as:
.P 10
I2MAPDATA == "$LSL$EXE:I2MAPDATA"
.P 0                      
and the program may then be used as if it were a normal VMS utility.

.BLANK
.HL 3 ^^^*Parameter File\*

This file contains the tolerances, commands and the feature code lookup table
which describes the translations from IFF feature code to MapData feature code.

The format of the table is described in the DATA PREPARATION section under the
heading `The I2MAPDATA parameter file', and it will probably have been set up
by the LAMPS system manager and remain relatively static at most installations.

.TP 10
.BLANK
.HL 3 ^^^*Program Action\*
.P 0
After decoding and checking the command line qualifiers and parameters, the
program reads and validates the parameter file. The program is designed to
read the same parameter file as MAPDATA2I uses but will only use the IFF
to MapData feature code mapping.
.bl
The IFF file is opened and the Map Descriptor (MD) entry is read to determine
the local origin if required. The first overlay (NO entry) is found and if
this is layer 0, all features within it are ignored.
.bl
Each feature in turn is read and converted into a corresponding MapData with
the appropriate feature code. The feature code is assigned to the output
MapData feature based on the IFF code if defined in the parameter file or
using the default.
.bl
If there is an attribute held in an IFF AC entry (in the optional text string),
then this can be stored in the MapData feature, providing the appropriate
/TEXT__AC code or name was used.
.bl
If the /CURVE__AC or /PRIORITY__AC are used, then any curve or priority flags
present on individual coordinate points will be written to the corresponding
points in the output string. Only points with curve flags (`C   ') are
maintained and interpolated (or inserted) points which are stored as `I   '
are discarded. High and low priority flags (stored as `H   ' and `L   ')
will also be maintained.
.bl
Any oriented IFF symbols (denoted by the appropriate bits in the FS entry)
are turned into two point Mapdata features where the second point is
generated 4 sheet mms from first. This second point is calculated using the
angle held in the IFF rotation (RO) entry and if this was created by MAPDATA2I,
then no loss of data will occur. As already stated, the length of the vector
will be 4 sheet mms in length. In order to calculate this length, the IFF
scale is required from the Map Descriptor. If this is unset (ie set to zero)
then the program will assume the length to be 10 IFF units.
.LM -10
.TP 15
.P 0
^*--------------------------------------------------------------------------------\*
.HL 2 ^^^*EXAMPLES\*
.BL
$#^*I2MAPDATA/FRT=HERE:X/PARAMETER=HERE:X.PAR/LOG/DIVIDE=1000 X.IFF X.MAP\*
.BL
.literal
%I2MAPDATA-I-READFRT, reading FRT file HERE:X.FRT
%I2MAPDATA-I-READPAR, reading parameter file HERE:X.PAR
%I2MAPDATA-I-CODES, 659 feature codes found in parameter file
%LSLLIB-I-IFFOPENED, LSL$DATA_ROOT:[MAPDATA]X.IFF;35 opened for read
%I2MAPDATA-I-MAPOPENED, X.MAP opened for write
%I2MAPDATA-I-IGNLAY, layer 0 found and ignored
%I2MAPDATA-I-LAYER, layer 1 found
%I2MAPDATA-W-UNKCURFLG, Unknown CURVE flag on point 2 of feature 1
%I2MAPDATA-W-UNKPRIOFLG, Unknown PRIORITY flag on point 4 of feature 1
%I2MAPDATA-W-UNKCURFLG, Unknown CURVE flag on point 11 of feature 1
%I2MAPDATA-W-UNKCURFLG, Unknown CURVE flag on point 13 of feature 1
%I2MAPDATA-W-UNKPRIOFLG, Unknown PRIORITY flag on point 13 of feature 1
%I2MAPDATA-I-MAPCLOSED, MAPDATA file closed
%I2MAPDATA-I-IFFCLOSED, IFF file closed
 ELAPSED:    0 00:00:05.36  CPU: 0:00:02.64  BUFIO: 27  DIRIO: 40  FAULTS: 464

.end lit
.BL
.LM +10
This example shows a conversion successfully taking place but with a few
warnings to alert the user that various things may be wrong with the feature
with FSN 1. Use of the /LOG file show useful information such as the fact that
layer 0 has been ignored. The reported problems (the warnings) were that the
curve and priority flags on various points in the feature did not have the
correct values. These points will be transferred with no flags and the
messages are just to alert the user. If the user is not concerned about the
reported problems then the warnings can be ignored since a valid IFF file was
produced.
.LM -10

.!******************************************************************************
.! get the messages
.!
.REQUIRE "MAPDATA_I2MAPDATAMSG.RNO"
                  
                                                
