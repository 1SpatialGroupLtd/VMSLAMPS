.SUBTITLE UTILITY I2TDST
.PAGE
.P0
^*--------------------------------------------------------------------------------\*
.HL 1 ^^^*UTILITY#####I2TDST\*

.P0
^*--------------------------------------------------------------------------------\*
.HL 2 ^^^*FUNCTION\*
.FILL
.LM +10

.P 0;I2TDST is an IFF to SysScan DST ASCII format converter. It produces a
TDST file composed of POLYGON, ARC, TEXT and POINT features. Output is directed
to disc file. 
.BLANK
.NO JUSTIFY
.NOFILL
.LM -10

.P0
^*--------------------------------------------------------------------------------\*
.HL 2 ^^^*FORMAT\*
.LM +10
.NO FILL

$ I2TDST input-IFF-file-spec  output-TDST-file-spec

.BLANK
.NOFILL
^*Command qualifiers                        Defaults\*

/FRT = file-spec                          LSL$FRT:FRT.FRT
/BNT = file-spec                          LSL$BNT:BNT.BNT

.FILL

.BLANK
.LM -10

.P0
^*--------------------------------------------------------------------------------\*
.HL 2 ^^^*PROMPTS\*
.LM +10
.NO FILL

Input IFF filename:             input-IFF-file-spec
Output TDST filename:           output-TDST-file-spec

.LM -10

.P0
^*--------------------------------------------------------------------------------\*
.HL 2 ^^^*PARAMETERS\*
.LM +10
.P -10;input-IFF-file-spec 
.JUSTIFY
.P -2;- specifies the IFF file which is to be converted into TDST format. Any
part of the file name which is not specified will be taken from the default
specification 'LSL$IF:IFF.IFF'. 
.TP 10

.P -10;output-TDST-file-spec
.P -2;- specifies the TDST file which is to be created. Any part of the file
name which is not explicitly given will be taken from the default
specification 'LSL$DST:TDST.TDST'.
.LM -10
.BLANK
.TP 12
.P 0
^*--------------------------------------------------------------------------------\*
.HL 2 ^^^*COMMAND QUALIFIERS\*
.LM +10
.TP 8
.P -10;/FRT=file-spec
.P -2;-#specifies the FRT file which is to be used to describe the feature 
codes within the IFF file. It will be the same FRT file that was used when the 
file was created, or when it was edited with LITES2. Any part of the file
name which is not explicitly given will be taken from the default specification 
'LSL$FRT:FRT.FRT'. This qualifier is mandatory.

.TP 8
.P -10;/BNT=file-spec
.P -2;-#specifies the BNT (Block-Name Table) file which is to be used to give
a name to each logic block. The BNT file is a text file with format as described
below.
Any part of the file name which is not explicitly given will be taken from the
default specification 'LSL$BNT:BNT.BNT'. This qualifier is mandatory.

.LM -10

.TP 10
.P 0
^*--------------------------------------------------------------------------------\*
.NOKEEP
.FILL
.JUSTIFY
.HL 2 ^^^*DESCRIPTION\*
.LEFT MARGIN +10
.P 0;I2TDST converts IFF files into TDST format. The output is compatible with
SysScan program LOADST which converts data from TDST format into their DST 
format used by their utilities. It forms part of an exchange flowline between
Laser-Scan and SysScan formats.  The opposite path from DST to IFF is carried
out by SysScan's UNLDST and TDST2I which is the complement of I2TDST.
.s1 
I2TDST expects all IFF features with the same feature code to be contiguous
within the IFF file. The Laser-Scan IMP utility ISORT/FC must therefore be used
as the first stage in the IFF to TDST conversion process. ISORT/FC groups
together IFF features with the same code within a layer, and so, to achieve
contiguous feature codes, the input IFF file should not contain features with
the same code in more than one layer.

.BLANK
.TEST PAGE 10
^*----------------------------------------------------------------------\*
.HL 3 ^^^*I2TDST and logical names\*
.FILL
.JUSTIFY

.P 0;I2TDST requires that the logical name LSL$IF: should point to the 
directory containing the IFF file which is to be converted into TDST format. 
It also requires that the logical name LSL$DST: be set up to point to a 
directory to which 
the TDST file is to be written. It also requires that logical name LSL$BNT: be
set up to point to a directory to which the BNT file is to be read. Finally,
logical name LSL$FRT: should be set up to point to the directory which holds
the required FRT file. Any of these logical names may be overridden by
explicit specification of the directory concerned. This is not recommended as
the location of files will quickly become confusing. 

.BLANK
.TEST PAGE 10
^*----------------------------------------------------------------------\*
.HL 3 ^^^*The BNT file format\*

.P 0
The BNT file format permits the specification of a logic block tree structure of
unlimited extent, such that a logic block may have either the MASTER  block or
any other logic block as a parent. 

.P 0
The format is as follows:

.LM -10
.BLANK
.TP 35
.LITERAL

! All blank lines and everything following '!' on a line will be ignored
!
! IFF feature code = <integer 0:32767>
! Logic block name = <alphanumeric name up to 10 characters long>
!
! IFF feature code 	Logic block name
! ----------------      ----------------
feature code		Logic block name
feature code		Logic block name
...			...
BEGIN
	feature code		Logic block name
	...			...
	BEGIN
		feature code		Logic block name
		...			...
		...			...
	END
	feature code		Logic block name
	...			...
	...			...
END
feature code		Logic block name
...			...
...			...
BEGIN
	feature code		Logic block name
	...			...
	...			...
END
feature code		Logic block name
...			...
...			...
.END LITERAL
.LM +10

.P 0
The IFF feature code will be used for the user-ID. Any feature whose feature
code is not in the BNT file, or whose block name is missing, will not appear in
the TDST file. 

.P 0
All occurrences of duplicate feature codes will be ignored.

.P 0
By simply specifying feature codes with their corresponding logic block name,
i.e. without the BEGIN-END blocks, all logic blocks will have the unique MASTER
block as parent.

.P 0
An example follows:

.LM -10
.BLANK
.TP 18
.LITERAL
! level 1	2	3	4
! ----------------------------------------------------------------
	10	one
	begin
		30	thirty
		50	fifty
	end
	
	40	forty
	begin
		60	sixty
		begin
			70	seventy
		end
		80	eighty
		20	twenty

.END LITERAL
.LM +10

.LEFT MARGIN -10
.PAGE
^*--------------------------------------------------------------------------------\*
.NOFILL
.KEEP
.HL 2 ^^^*EXAMPLES\*
.NO FILL
.BLANK
$ ^*ISORT/FC CONTOURS CONTOURS.TMP\*
 ELAPSED: 00:01:57.24  CPU: 0:01:22.45  BUFIO: 32  DIRIO: 156  FAULTS: 123
$ ^*I2TDST CONTOURS.TMP ATDST/FRT=TDSTFRT/BNT=TDSTBNT\*
 ELAPSED: 00:01:32.06  CPU: 0:00:53.65  BUFIO: 29  DIRIO: 126  FAULTS: 108 
$
.B
.JUSTIFY
.LEFT MARGIN +10
.FILL
.P 0;This example demonstrates the use of I2TDST. The IFF file
LSL$IF:CONTOURS.IFF
has been successfully processed and a TDST format disk file LSL$TDST:ATDST.TDST
has been produced. The BNT file LSL$BNT:TDSTBNT.BNT was used to name the TDST
logic blocks. The FRT file LSL$FRT:TDSTFRT.FRT was used to interpret the 
contents of the IFF file.

.S1
Note that ISORT must always be used to sort IFF features by feature code before
I2TDST can be used successfully.

.LEFT MARGIN -10

.!******************************************************************************
.! get the messages
.!
.REQUIRE "TDST_I2TDSTMSG.RNO"
