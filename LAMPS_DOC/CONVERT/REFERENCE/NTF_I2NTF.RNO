**.!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
.!! Those items which should be checked when changing the programs due to new
.!! versions of NTF are flagged with the comment
.!!
.!!		.!! NTF version
.!!
.!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
.subtitle UTILITY I2NTF
.page
.lm 0
.rm 80
.tp 10
.p0
^*--------------------------------------------------------------------------------\*
.hl 1 ^^^*UTILITY I2NTF\*

.tp 10
.p0
^*--------------------------------------------------------------------------------\*
.hl 2 ^^^*FUNCTION\*

.lm +10

.p0; I2NTF reads a series of IFF files and outputs NTF data to file or magnetic
tape. The user may select which NTF level or version is to be output use of
qualifiers on the command line.

.lm -10

.tp 10
.p0
^*--------------------------------------------------------------------------------\*
.hl 2 ^^^*FORMAT\*
.lm +10

.p0
$ I2NTF input-file-spec,... output-file-spec

.blank
.tp 25
.nofill
^*Command qualifiers                        Defaults\*
.blank
The following qualifiers may be entered on the command line
.blank

/[NO]CITF='integer'                        /NOCITF
/DENSITY='integer'                         /DENSITY=1600
/FRT='file-spec'                           See description below
/INPUT__LIST='file-spec'                    See description below
/[NO]LOG                                   /NOLOG
/[NO]OS                                    /NOOS
/[NO]WATER__DISTRIB                         /NOWATER__DISTRIB
/[NO]OUTPUT='file-spec'                    /NOOUTPUT
/PARAMETER__FILE='file-spec'                No parameter file
/[NO]SERIAL__MAGTAPE                        /NOSERIAL__MAGTAPE
.fill

.p0;The remaining qualifiers may be entered either on  the command line or in
the parameter file

.blank
.nofill
/ATTRIBUTE__FILE='file-spec'                See description below
/COPYRIGHT='yyyymmdd'                      /COPYRIGHT=00000000
/DONOR="'text'"                            /DONOR="Laser-Scan Ltd."
/DBNAME="'text'"                           /DBNAME='RECIPIENT'
/DDNAME="'text'"                           /DDNAME="DEFAULT__02.00"
/DDATE="'yyyymmdd'"                        /DDATE="19890401"
/DIFF__HT__LEN                               /DIFF__HT__LEN=5
/FCNAME="'text'"                           /FCNAME="        "
/FCDATE="'yyyymmdd'"                       /FCDATE="        "
/FC__LOOKUP='file-spec'                     No lookup file
/FEATCLASS__FILE='file-spec'                No classification file
/FIXED                                     /NOFIXED
/LEVEL='integer'                           /LEVEL=2
/POINT__SIZE                                /NOPOINT__SIZE
/RECIPIENT="'text'"                        Required
/ROUND                                     /NOROUND
/SERIAL='integer'                          /SERIAL=0000
/VERSION='real'                            /VERSION=2.0
/XY__LEN='integer'                          /XY__LEN=10			
/XY__MULT='real'                            /XY__MULT=.001
/Z__DATUM='integer'                         /Z__DATUM=0
/Z__LEN='integer'                           /Z__LEN=6
/Z__MULT='real'                             /Z__MULT=1.0
/Z__UNIT='integer'                          /Z__UNIT=2 (metres)
.fill

.lm -10

.tp 10
.p0
^*--------------------------------------------------------------------------------\*
.hl 2 ^^^*PROMPT\*

.lm +10

.nofill
__Input IFF files:          input-file-spec,...
__Output destination:       output-file-spec
.fill

.p0; If /INPUT__LIST is specified instead of  an input IFF file,  then the file
given as argument to the qualifier will be opened, and the  IFF file-specs will
be read from the file, one per line, with a maximum of 500 files. Note that 
/INPUT__LIST must be specified before the output-file-spec

.lm -10

.tp 10
.p0
^*--------------------------------------------------------------------------------\*
.hl 2 ^^^*PARAMETERS\*

.lm +10

.tp 10
.p-10;input-file-spec

.P-2;-#specifies the input file or files to be translated to NTF.  No more than
eight files may be specified in this manner - if   more files are to be
translated in one program  run, then  the /INPUT__LIST qualifier must be  used.
Any part of the first file-spec  that is not specified will  be completed from
the default of "LSL$IF:IFF.IFF;0". Each file-spec  after that will be completed
using the appropriate parts of  the  previous file-spec (as  for  the VMS COPY
utility). IFF files  are read and  output in  the order  in  which  they  are
specified.

.tp 8
.p-10;output-file-spec

.p-2;-#specifies where the NTF data is to be written.   This  may be either the
name of  a magnetic tape  drive (e.g_. MTA0:), or the  name of a  file on  disk
(e.g_. TEST.NTF).  If the  output is to tape  then the colon  at the end of the
device name must be provided. The default output filespec is SYS$DISK:[].NTF

.lm -10

.tp 10
.p0
^*--------------------------------------------------------------------------------\*
.hl 2 ^^^*COMMAND QUALIFIERS\*

.lm +10

.p0;The qualifiers  accepted by I2NTF  fall  into two categories.  The first of
these  are commands relating to  the environment  in which the conversion  will
take place such as the /DENSITY and /PARAMETER__FILE  qualifiers.  These may be
entered  on the command line when  the program is called.  The  second group of
qualifiers  includes those qualifiers directly relating  to fields in   the NTF
file  format  such as  the /RECIPIENT,  /LEVEL and  /X__MULT qualifiers.  These
commands may also be  entered  on the command  line  but, in  addition,  may be
included in a parameter file indicated by  the /PARAMETER__FILE  parameter. See
the /PARAMETER__FILE entry below for further information.

.lm -10

.tp 10
.blank
.hl 3 ^*Command Line Qualifiers\*

.p10;The following qualifiers may be entered on the command line only.

.lm +10

.tp 9
.p-10;/CITF='integer'
.i-10;/NOCITF (default)

.p-2;-#specifies which version of CITF is to be created.

.p0;/CITF=93 specifies that the CITF file to be created must use OS93 data
structures.

.p0;/CITF=96 specifies that the CITF file to be created must use OS96 data
structures.

.p0;The use of /CITF with no parameter defaults to /CITF=96.

.p0;Any NTF lines in the Map Header (type 4) are to be read and copied to the
NTF file (which has file extension .CITF) after checking for any inaccuracies
as far as is possible, and warnings output if an error is encountered.

.p0; See the separate section below for a full description of the differences
between CITF and other NTF output.

.tp 6
.p-10;/DENSITY='integer'

.p-2;-#selects the density at which the magnetic  tape will be  written.  It is
ignored if output is not to a magnetic tape.  The default density  is 1600 bpi
and the other supported densities are 800 and 6250 bpi.

.tp 12
.p-10;/INPUT__LIST='file-spec'

.p-2;-#specifies a file containing the names of the IFF files to be processed.
If this qualifier is given, then all input IFF files must be specified within
the input list file - any input file-specs on the command line will not be
recognised. This qualifier must occur before the output file-spec, if it is
used.

.p0; The input list file contains the names of the IFF files to be used for
input, one per line, in the order they are to be read. The standard default of
"LSL$IF:IFF.IFF;0" is applied to each filename.
There is a maximum of 500 files allowed in this list file. 

.p0; The default file-spec for the input list file is SYS$DISK:[].I2NTF__LIS

.tp9
.p-10;/LOG
.i-10;/NOLOG  (default)

.p-2;-#specifies that additional information is to be written to the terminal.
When the program starts up the names of the IFF files being read, and of the
device to which the NTF data is being written, are logged. Various messages
summarising the form of NTF being output will also be produced. If output to
tape is selected then a message detailing the number of blocks written is given
on exit.

.tp 9
.p-10;/OS
.i-10;/NOOS (default)

.p-2;-#specifies that OS(GB) map header information is to be output in the free
text area of the section header  relating to each  IFF file. The  layout of the
map header information in the free text  area is defined by  OS. Note that this
use of  free  text space  is   allowable  within the  standard.   All IFF files
transferred using the /OS  qualifier must contain a  valid OS style  map header
entry. It also causes all text heights to be read as OS point sizes and 
converted to mm. as required for NTF.

.tp 9
.p-10;/WATER__DISTRIB
.i-10;/NOWATER__DISTRIB (default)

.p-2;-#specifies that output is to match the specification given in the 
document "Specification for representation of North West Water's digitised 
distribution overlays in NTF level 3 format", produced by ISTEL (Jan 1990).
At present, this qualifier cannot be used when outputting version 2.0 (BS7567)
data.

.tp9
.p-10;/OUTPUT='file-spec'
.i-10;/NOOUTPUT  (default)

.p-2;-#specifies that information about the files being output in NTF, together
with the form of  NTF being  produced, should be  written to the  specified log
file.  All comment  records output will  also be copied to  the file,  prefixed
with "//".  This output file may then be printed and  used as documentation for
the data on  the magnetic tape.  The default   file-spec for the   log file  is
SYS$DISK:[]I2NTF.LOG

.tp 17
.p-10;/PARAMETER__FILE='file-spec'

.p-2;-#indicates that a parameter file exists containing additional qualifiers.
Qualifiers given on the command line override  those specified in the parameter
file.  For example, if   NTF  level 1 is   selected in the  parameter file  but
/LEVEL=2 is requested on the command line then all output will be to  NTF level
2. Note that not all qualifiers are allowed in the parameter file - see below.

.p0;It  is advised that  only  one qualifier  is  entered on  each  line in the
parameter file so that it can be  read and edited easily.  Comments may be used
freely  - any  data after an exclamation  mark (!) is  treated as  comment  and
ignored.

.p0;The default file-spec for the parameter file is SYS$DISK:[].I2NTF__PAR.

.tp 10
.p-10;/SERIAL__MAGTAPE
.i-10;/NOSERIAL__MAGTAPE  (default)

.p-2;-#indicates that the standard output  for the program is a  magnetic  tape
drive  connected   via a DIL  serial  controller  interface.   The qualifier is
ignored  if output is to a  device  which is  mounted  /FOREIGN  (in which case
output is to  a  standard  magnetic tape drive).  If  output is  requested to a
terminal device then it will be assumed that this is the DIL controller.

.page
.lm -10

.blank
.hl 3 ^*Command Line or Parameter File Qualifiers\*

.lm +10

.p0;The following qualifiers may be entered either on the command line or 
in the parameter file.

.tp 6
.p-10;/ATTRIBUTE__FILE='file-spec'

.p-2;-#gives the file in which NTF attribute mnemonics are associated with
IFF AC names. If this qualifier is not given then no attributes are transferred.

.tp 6
.p-10;/COPYRIGHT='yyyymmdd'

.p-2;-#specifies  an overriding copyright  date  for all  files being output to
NTF,  in the  form yyyymmdd (for instance, 19870218   for  18th February 1987).
This copyright date will be used for all files being output.

.p0; If /COPYRIGHT is  not specified, and /OS is  specified, then the copyright
date for each file will be taken from its (OS style) map header. If  /OS is not
specified, a copyright of 00000000 will be used.

.tp 6 
.p-10;/DONOR="'text'"

.p-2;-#specifies the name of the sender of the data. The donor name  may be  up
to  20 characters long with   truncation occurring if this is exceeded.  The
default is "Laser-Scan Ltd.".

.tp 6 
.p-10;/DBNAME="'text'"

.p-2;-#specifies the name of the database. The name  may be  up
to  20 characters long with truncation occurring if this is exceeded. The
default is the name given for the recipient of the data.

.tp 6 
.p-10;/DDNAME="'text'"

.p-2;-#specifies the name of the data dictionary. The name may be up
to 20 characters long with truncation occurring if this is exceeded. The
default is "DEFAULT__02.00".

.tp 6 
.p-10;/DDATE="'yyyymmdd'"

.p-2;-#specifies the date associated with the data dictionary. The
default is "19890401".

.tp 7
.p-10;/DIFF__HT__LEN='integer'

.p-2;-#specifies the width of the field used to store DIFF__HT fields in
GEOMETRY2 records, only valid in CITF. The  default value is 5.

.tp 6 
.p-10;/FCNAME="'text'"

.p-2;-#specifies the name of the feature classification scheme. The name may 
be up to 20 characters long with truncation occurring if this is exceeded. The
default is " ".

.tp 6 
.p-10;/FCDATE="'yyyymmdd'"

.p-2;-#specifies the date associated with the feature classification scheme. 
The default is " ".

.tp 6
.p-10;/FC__LOOKUP='file-spec'

.p-2;-#specifies the feature code lookup table parameter file to be used. If
this qualifier is not given, all feature codes are translated verbatim.

.tp 6 
.p-10;/FEATCLASS__FILE='file-spec'

.p-2;-#gives the file from which a feature classification scheme is to be read. 
If this file is present [FEATCLASS] records will be output. 

.tp 6 
.p-10;/FIXED
.i-10;/NOFIXED (default)

.p-2;-#specifies that the NTF file is to be output in fixed length records of
80 characters. The default option is for the records to be only as long as
they need to be with a maximum length of 80 characters. This can result in 
considerable space savings.

.tp 6 
.p-10;/FRT='file-spec'

.p-2;-#this qualifier gives the name of the Feature Representation Table (FRT) 
which holds information about IFF attributes. If this is not given no
attributes are transferred. The qualifier may only be entered on the command
line and should not be used inside a parameter file.

.tp 5
.p-10;/LEVEL='integer'

.p-2;-#specifies the NTF level that is to be output. This may be either 1, 2 
or 3, and defaults to 1.

.tp 6 
.p-10;/POINT__SIZE
.i-10;/NOPOINT__SIZE (default)

.p-2;-#specifies that the IFF file text heights are to be interpreted as 
point sizes (for CITF only).

.tp7
.p-10;/RECIPIENT="'text'"

.p-2;-#specifies the name of the recipient of the data. The recipient name  may
be up to 20 characters long and truncation will occur if this is exceeded.  The
recipient name is required - it must be specified either within  the  parameter
file or on the command line.

.tp10
.p-10;/ROUND
.i-10;/NOROUND (default)

.p-2;-#specifies that output co-ordinates should be explicitly rounded to seven
significant figures if needed. Figures after the seventh are padded with
zeroes. This facility may be useful to maintain data integrity with small-scale
data.

.tp 6
.p-10;/SERIAL='integer'

.p-2;-#specifies the volume serial number. This should be an integer  between 1
and 9999. If the qualifier is not given then a default value of zero is used.

.tp 6
.p-10;/VERSION='real'

.p-2;-#specifies the version of the NTF file to be created. If the qualifier
is not given then a default value of 2.0 is used which will result in the
output of NTF version 2.0 (BS7567) data. Acceptable values for this qualifier
are 1.1 and 2.0.

.tp 7
.p-10;/XY__LEN='integer'

.p-2;-#specifies the width of the field used to store X  and Y coordinate  data
in NTF. If a value is chosen that is not large enough to  store  some values in
the file (as determined  by inspecting the  file's range entry)  then an  error
message is output and an alternative value  is suggested. The  default value is
10.

.tp 15
.p-10;/XY__MULT='real'

.p-2;-#all X and Y coordinates  are divided by  the value specified  with this
qualifier before being  output to NTF. This  qualifier is  thus used to specify
the precision of  planimetric data  in  the NTF output.  The  default value  is
0.001,  meaning  that X and Y coordinates  are stored as thousandths of  an IFF
unit.

.tp 7
.p-10;/Z__DATUM='integer'

.p-2;-#this qualifier is used to specify the 'notional' origin  of Z  values in
the  IFF files being output.  This datum value is stored  in the section header
for each sheet - it is not actually subtracted from the Z value. The default Z
datum is 0.

.tp 7
.p-10;/Z__LEN='integer'

.p-2;-#specifies the width of the field used to store Z coordinate  data
in NTF. If a value is chosen that is not large enough to  store  some values in
the file (as determined  by inspecting the  file's range entry)  then an  error
message is output and an alternative value is suggested. The default value 
is 6. This qualifier may not be used at level 1.

.tp 13
.p-10;/Z__MULT='real'

.p-2;-#all  Z values are  divided  by the  value  specified with this qualifier
before being  output  to NTF.  This  qualifier  is  thus  used  to specify  the
precision of height data in the NTF output.  The default value is 1.0,  meaning
that Z values are stored using the same units as in the IFF file.

.tp 12
.p-10;/Z__UNIT='integer'

.p-2;-#specifies the units in which height data is stored. The value may be any
of:

.blank
.list 0," "
.le; 1= degrees,
.le; 2= metres,
.le; 3= feet.
.end list 0

.p0;The default units are metres, ie a value of 2.

.lm -10

.tp 10
.p0
.page
^*--------------------------------------------------------------------------------\*
.hl 2 ^^^*RESTRICTIONS\*

.lm +10

.list "o"

.le; Restrictions on qualifiers

.list "o"

.le; Both /CITF and /OS are not allowed together on the command line.

.le; If /CITF has been requested, the /FRT qualifier must be given 
for the attribute names required in the CITF translation.

.le; If the /INPUT__LIST qualifier is used, any qualifiers or file-specs
occurring before it will be ignored. Thus the /INPUT__LIST qualifier should
always be the first item on the command line.

.le; The /RECIPIENT qualifier is required, either on the command line or in
the parameter file.

.le; The /Z__LEN qualifier requires transfer level 2 or 3.

.le; If a qualifier is used both on the command line and in the parameter file,
the value specified on the command line is used.

.le; /FRT, /ATTRIBUTE__FILE and /LEVEL=2 or /LEVEL=3 must all be given if 
attribute transfer is required. If any one is missing no attributes will be 
transferred. However, at level 1, a single attribute (AC 2 or 3) can be
transferred without the use of /ATTRIBUTE__FILE since this qualifier is only
intended to be used at levels 2 and 3.

.end list 0

.le; The IFF files

.list "o"

.le; The IFF files being input must have a type 2 map descriptor (MD) entry,
which must be correctly set. If this is not the case, use ITRANS/DESCRIPTOR to
create a valid type 2 map descriptor.

.le; The coordinates in the IFF file must be in either feet, metres or degrees.
If the data is not in one of these units, then use ITRANS to transform the IFF
file.

.le; The program will ignore all data in layer 0, and output all other layers
without distinction.

.le; Each IFF file is output to a separate NTF section, with the section
reference taken from the IFF file name (truncated to 10 characters).

.le; Features are output as lines, symbols or text, using the text/symbol bits
in the feature status (FS) entry to distinguish the different forms. Thus the
IFF file should have these bits set correctly (reading an IFF file into LITES2
with the correct FRT file will set the text/symbol bits correctly).

.le; The  original IFF feature serial  numbers (FSNs)  are not used  in the NTF
data being produced.

.le; At NTF level 1 only contour height ACs (types 2 and 3) are translated. 
All other types of AC are ignored (with a warning message). This is done
automatically and the /ATTRIBUTE__FILE qualifier should not be given.

.le; At NTF level 3 the attribute mnemonics FC and OR are used to output the 
feature code and orientation of a feature in its attribute record. These 
mnemonics should therefore not be used to refer to any other attributes.

.le; If /WATER__DISTRIB is specified any point features with FC 999 will be 
output with attribute records of the form "14nnnnnnACxx" (where "nnnnnn" is
the record identifier and "xx" is a 2 character mnemonic). This is a
requirement of the ISTEL specification document. Note that /WATER__DISTRIB is
currently not permitted when outputting version 2.0 NTF data.

.le; Composite texts are output as a sequence of simple texts, with no
connection between them.

.le; Texts of  more than 99   characters in   length will be  truncated  before
output.

.le; The NTF text font is taken from the text category in the IFF text feature.

.le; If an IFF AC is required then it must be included in the ATTRIBUTE file
together with it's destination NTF mnemonic.

.le; Any AC's to be transferred must be defined in the FRT either by default
or explicitly in ACD entries.

.le; There is currently no mechanism to direct an AC attribute value to go
into the {VALUE} field of a [LINEREC], [POINTREC] or [NAMEREC] and similarly
for NTF v2.0 (level 1 _& 2) CHG__TYPE and CHG__DATE attributes.
.end list 0

.le; NTF output

.list "o"

.le; Only levels 1, 2 and 3 of NTF are supported.

.le; The section  header field {COPYRIGHT}  (ie copyright date) is  only set if
the  data  is  being  output  /OS,  or if  the  /COPYRIGHT  qualifier has  been
specified.

.le; Multivolume datasets are not supported - all of the data being output must
fit onto one magnetic tape.

.end list 0

.end list 0

.lm -10

.tp 15
.p0
^*--------------------------------------------------------------------------------\*
.hl 2 ^^^*DESCRIPTION\*

.lm +10

.p0; I2NTF converts  one or more maps from  IFF  (Laser-Scan's Internal Feature
Format) into NTF (National Transfer Format) levels 1, 2 or 3.  The  NTF output 
maybe to  disk, magnetic tape  or a serial tape drive  depending on the 
qualifiers given on the command line. The input IFF files may  be specified 
either on the command line or in a text file pointed to by the /INPUT__LIST 
qualifier. All of the qualifiers may be  given on the  command line, or 
alternatively, qualifiers giving  values corresponding  directly  to NTF fields
may be entered in a parameter file.

.p0; Before outputting any data, each input IFF file is opened to check that
it exists and is readable. If /OS has been specified, each file is also checked
for the presence of an OS(GB) style map header entry.

.p0; The NTF data file starts as follows:

.list "o"

.le; volume header - with the NTF version number set to 1.1 or 2.0 as
appropriate.

.le; comment - this repeats the donor, and states that the data was produced
using Laser-Scan's I2NTF conversion utility.

.le; database header -  with the  _{DBNAME_} (database name), _{DDNAME_} 
(data  dictionary)  and  _{DDATE_} (data dictionary 
date) fields   set  to their  default  values, or to values specified in the 
appropriate qualifiers.

.le; feature classification records - these records will be output if a feature 
classification file is specified. The values will be taken directly from the 
file, one record being output for each feature. An example of a feature 
classification file is shown below. Note that any unused fields should contain 
the value "NONE". The field widths are of 4, 10, 20 and variable length
characters for FCODE, CODECOM, STCLASS and FEATDES respectively.

.lm +5
.nofill

! 
!FEATURE         FCODE      CODECOM    STCLASS     FEATDES
!
FEATURE	    0004       A10766	   NONE	       WOOD
FEATURE	    0005       B23145	   NONE	       ROAD
FEATURE	    0006      	NONE	   NONE	       WATER

.fill
.lm -5

.p0
If /WATER__DISTRIB has been specified, an additional field must be included in 
the feature classification file. A value 'T' or 'F' must be appended to each 
FCODE in the file, to indicate whether or not the associated feature code 
should be referenced with a NODEREC record.

.lm +5
.nofill

! 
!FEATURE         FCODE      CODECOM    STCLASS     FEATDES
!
FEATURE	    0004T       A10766	   NONE	       WOOD
FEATURE	    0005F       B23145	   NONE	       ROAD
FEATURE	    0006T      	NONE	   NONE	       WATER

.fill
.lm -5


.le; attribute descriptor records - at levels 2 and 3 with attribute transfer 
these records will be added to give a description of all of the attributes
that will occur in the database. Each record contains the NTF mnemonic, the
field width, interpretation and null, and maximum and minimum values for an
attribute.

.end list 0


.p0; Each IFF  file is then  reopened in  turn and output to the  NTF file as a
separate section.  The  [SECHREC] (section header)  record  is  output   with
the following values:

.blank
.list 0,"o"

.le; _{SECT__REF_}##-#the first 10 characters of the IFF file name
.le; _{COORD__TYP_}#-#deduced from the value in the map descriptor
.le; _{STRUC__TYP_}#-#always set to 1 for vector data
.le; _{XYLEN_}#####_-#taken from the /XY__LEN qualifier
.le; _{XY__UNIT_}###-#deduced from the value in the map descriptor
.le; _{XY__MULT_}###-#taken from the /XY__MULT qualifier
.le; _{Z__LEN_}######_-#taken from the /Z__LEN qualifier
.le; _{Z__UNIT_}####-#taken from the /Z__UNIT qualifier
.le; _{Z__MULT_}####-#taken from the /Z__MULT qualifier
.le; _{X__ORIG_}####-#taken from the map descriptor
.le; _{Y__ORIG_}####-#taken from the map descriptor
.le; _{Z__DATUM_}###-#taken from the /Z__DATUM qualifier
.le; _{XMIN_}_,#etc#-#taken from the range entry
.le; _{XY__ACC_}####-#left unset
.le; _{Z__ACC_}#####-#left unset
.le; _{SURV__DATE_} and _{LAST__AMND_} are taken from the map header if
/OS is specified. _{COPYRIGHT_} is taken from the /COPYRIGHT qualifier, or if
that is not specified, from the map header if /OS is specified. Otherwise, all
three are left unset (ie a value of 00000000).
.le; _{SQNAME_} and _{SQDATE_} -#left unset

.end list 0

.p0; If /OS is specified, the following fields are output in the free text area
of the section header relating to each IFF file:

.nojustify
.lm +30
.p-30; #o##_{STORAGE__SCALE_}#########-#scale at which the map is stored
.i-30; #o##_{INITIAL__DATABANK__DATE_}#-#when the map was first digitised
.i-30; #o##_{EDITION_}###############-#current edition of the map
.i-30; #o##_{SURVEY__TYPE_}###########-#type of survey of the map
.i-30; #o##_{CONTENT__INDICATOR_}#####-#survey accuracy of the data
.i-30; #o##_{LATEST__REVISION__DATE_}##-#when a full field examination of the 
continuous field revision process occurred 
.i-30; #o##_{BOUNDARY__DATE_}#########-#when the boundary information was last
checked 
.i-30; #o##_{DIGITAL__UPDATE__DATE_}###-#indicates the currency of the data
.i-30; #o##_{SVY__DATES__FIRST__LAST_}##-#dates of first and last surveys of
the map 
.i-30; #o##_{CONTOUR__VI_}############-#vertical interval of any contours
.i-30; #o##_{SPECIFICATION__NUMBER_}##-#specification number current at OS
when the map was digitised 
.i-30; #o##_{EDGE__MATCH__STATUS_}#####-#indicates whether the edges have been 
matched or not
.i-30; #o##_{MULTI__YEAR__HWM__DATE_}###-#when the mean HWM dates were last
checked 
.i-30; #o##_{MULTI__YEAR__LWM__DATE_}###-#when the mean LWM dates were last
checked 
.i-30; #o##_{HOUSE__UNIT__COUNT_}######-#used by OS to trigger the supply of
update information
.i-30; #o##_{BOUNDARY__INFORMATION_}##-#information about the boundaries on
the map 
.i-30; #o##_{DIGITAL__UPDATE__COUNT_}##-#number of updates applied to the map
.justify

.lm-30
.blank

.p0; Features are read from the IFF file one  by one.  They are  separated into
lines, points (symbols) and names (texts) according to the  text/symbol bits in
the   FS entry.  The _{LINE__ID_}, _{POINT__ID_}   and _{NAME__ID_} values  are
maintained independently of the original feature  serial numbers (FSNs)  in the
IFF file. Each type of ID is started at  1 and incremented for  each feature of
the relevant type that is output. For all features, the _{FEAT__CODE_} is taken
directly from the IFF feature  code (ie  from the FS  entry).  Since there is 
no _{FEAT__CODE_} field in level 3 linear features, at this level the feature 
code is stored in an [ATTREC] referenced by the _{ATT__ID_} field, using the 
default NTF attribute mnemonic FC. All security and change fields are left 
unset.

.p0; Linear features are  output as  a [LINEREC] with an associated 
[GEOMETRY1] or [GEOMETRY2] record and the _{NUM__PARTS_} field set to 1. At 
levels 1 and 2 the [GEOMETRY_*] record 
immediately follows the [LINEREC] (the _{GEOM__ID_} field being identical to 
the _{LINE__ID_} field), whereas at level 3 the [GEOMETRY_*] record is 
referenced by the _{GEOM__ID_} field. If the feature has a  height AC associated
with it in the IFF file, then, at levels 1 and 2, the _{VALUE_} field will be 
set to HT followed by the height as six digits  (according  to  Z__MULT, etc).
At level 3 the _{NAME__ID_} field references any text feature which is to be 
used to annotate the line, if there is no such text the field is set to 0.
In the [GEOMETRY_*] record, the _{GEOM__ID_} field is set (as expected) to 
match the _{LINE__ID_}. The _{GTYPE_} field is set to 2 (a line). The 
_{QPLAN_} field is set to 0 or 1 for each coordinate pair or triple,
indicating pen up or pen down respectively. The _{QHT_} field is not currently
used.

.p0; Symbol features are output as a [POINTREC] with an associated [GEOMETRY1] 
 or [GEOMETRY2] record. The procedure is the same as  that for  a [LINEREC].
If the feature has a rotation, then at level 3 it will be output in an 
associated [ATTREC] using the default NTF attribute mnemonic OR, whereas at 
levels 1 and 2 an orientation _{VALUE_} field will be output as OR, followed 
by the orientation as six digits in tenths of a degree. The [GEOMETRY_*] record
is output with  a  _{GTYPE_} of 1 (a point).

.p0;At version 1.1, text features are output as a [NAMEREC] followed by a
[NAMPOSTN] (or a [CURVTEXT] if the text is curved). In the [NAMPOSTN] record,
the _{FONT_}  is taken from  the  text category  (in the  FS entry).
The _{TEXT__HT_} is taken from the TH entry. Since the [NAMEREC] record can
only transmit up to 99 characters, text features that are longer than this
will be truncated before being output. The text position is given by a
[GEOMETRY] record which will immediately follow the [NAMPOSTN] (or [CURVTEXT])
record. However [CURVTEXT] records are currently not output at version 2.0 NTF.

.p0;At version 2.0 level 3, text features are output as a [TEXTREC] record, 
followed by a [TEXTPOS], [TEXTREP] and [ATTREC] which contains the text itself.
The text string will always be written to an attribute called 'TX' which must
be defined in the attribute file in order for there to be a corresponding
[ATTDESC] attribute description record in the file.

.p0; Note that composite texts are transmitted as a sequence of individual
text features, with separate _{NAME__ID_}s.

.p0; Additionally, if NTF level 3 version 1.1 output is requested there may be
[CHAIN], [CLINE], [NODEREC] and [COLLECT] records. A [CLINE] (and associated
[CHAIN]) is output if an IFF feature  consists of several ST entries - one
[GEOMETRY_*] record being output for each ST. A [NODEREC] is output for every
junction point which occurs in the SH (sector header) entry of the IFJ file. A
[COLLECT] record is output for a group of features if each such feature has an
appropriate AC (see the section on Attributes for details).

.p0; Note that the NTF level 3 records [POLY] and [CPOLY] are not used.

.lm -10

.page
.p0
^*--------------------------------------------------------------------------------\*
.hl 2 ^^^*Attributes\*

.lm +10
.p0; NTF version 1.1 and above now has a coherent definition of how attributes
are transferred so now IFF AC values can be easily ported to and from NTF.
Firstly an IFF attribute must be associated with an NTF mnemonic. This is 
done via the new attribute file ( given with the /ATTRIBUTE__FILE qualifier ),
this file should contain IFF AC names together with the NTF mnemonic. There
are also 3 flags which should be added to the end of each line to specify 
whether :

.blank
.list 0

.le; the AC's optional text field should be read rather than the 
attribute value
.le; the AC is used to link a text to a linear feature so that the text can be 
used to annotate the feature - only valid at level 3
.le; the AC is used to group several features together so that a [COLLECT] 
record may be output - only valid at level 3

.end list 0

.p0; Each flag should have the value T or F to indicate true or false 
respectively, though the latter two flags may be omitted at level 2. An 
example of an attribute file is shown below.
.lm +5
.nofill

!
! Command procedure to tell I2NTF/NTF2I which attributes to 
! associate with which NTF mnemonic. The IFF name must be 
! present in the FRT file.
!
!   Format is:
! 
!ATTRIBUTE IFF__ATT__NAME  NTF__MNEMONIC  TEXT  ANNOTATE  COLLECT
!
ATTRIBUTE   LH__BOUNDARY		LH	T	F	F
ATTRIBUTE   RH__BOUNDARY		RH	T	F	F
ATTRIBUTE   CONTOUR		CO	F	F	T
ATTRIBUTE   TEXT			TX	T	T	F
ATTRIBUTE   COUNTY__LEFT		CL	T	F	F
ATTRIBUTE   COUNTY__RIGHT		CR	T	F   	F
ATTRIBUTE   COUNTY__LEFT		CA	F	F	F
ATTRIBUTE   COUNTY__RIGHT		CB	F	F	F

.fill
.lm -5
.p0;In the above attribute file the IFF attribute CONTOUR has its 
AC value transferred whilst the others have the optional text put in the NTF 
attribute. Note that COUNTY__LEFT and COUNTY__RIGHT have both text
and value transferred, care must be taken to ensure that they are associated 
with different NTF attributes. The IFF attribute CONTOUR will be used to group 
features for [COLLECT] records and the IFF attribute TEXT will be used to 
link annotated features with their associated texts. The interpretation of the 
attribute is taken from the FRT file which must be specified on the command 
line. Any non-standard AC types must be declared in ACD entries in the FRT 
file. Note also that NTF mnemonics must be 2 characters long.

.p0;When an AC is used to form annotated features or [COLLECT] 
records, the value given to this AC should be common to either a text and a 
linear feature, or to those features which are to be grouped together into the 
[COLLECT] record. Such ACs will not appear in [ATTREC] records. One text 
feature can be used to annotate several linear features, but each linear 
feature can only be annotated with one text.

.lm -10

.page
.p0
^*--------------------------------------------------------------------------------\*
.hl 2 ^^^*Conversion of Ordnance Survey CITF data\*

.lm +10
.P 0
I2NTF will write version 1.0 CITF files which are based upon level 5 of NTF
Version 2 as defined by BS7567. Only CITF files of DATA__MODEL 2 will be
created.
.BL 
.HL 3 ^*The IFF MH entry and CITF header records\*
.P 0
If they are present in a type 4 Map Header entry, the [FEATCLASS], [SECHREC],
[TRANSFORM], [MANINFREC] and [EXTREC] header lines will be used to created
the appropriate records in CITF. No further FEATCLASS entries will be created
if there are any in the map header. This also applies to the TRANSFORM, 
MANINFORM and EXTREC records, which may therefore only come from the map
header.
.P 0
Certain values are required to be read from the [SECHREC] record to be used
when interpreting the CITF file such as {XYLEN}, {XY__UNIT}, {XY__MULT},
{ZLEN}, {Z__UNIT}, {Z__MULT} and {SCALE}. These fields must contain correct 
values reflecting the true format of the data for successful conversion.
.P 0
Warning messages are output if there is any difference between those 
fields such as map scale, range or map origin which are read directly
from the IFF file, and the values contained in the map header, and the map 
header entries will be ignored. 
.P 0
Any field width values supplied with qualifiers will take precedence
over the map header values, and will be written to the map header.
.P 0
The {DIFF__HT__LEN} size is also required and is in the variable part of the
[SECHREC] as so must be precisely defined as the program works under the
assumption that there will be sufficient divider (/) characters after which it
is located. Refer to the DATA PREPARATION section for details of how to set up
a correct map header lookup table.

.BL 
.HL 3 ^*Feature Level Attributes\*
.P 0
CITF feature records, [LINEREC], [POINTREC] and [NAMEREC] have provision for
attributes which should come from AC entries in the IFF feature.
These attributes are UPDATE__DATE, UPDATE__STATUS, SPEC, PROCESS,
DATE__OF__PROCESS, PHYS__STAT and MARGINAL__TXT which must be defined in the
ACD section of the FRT if they are to be transferred. These features should not
be present in the attribute file as this intended for attributes which are
held in [ATTREC] or [ACRDREC] records.

.P 0
The alphanumeric feature level attributes UPDATE__STATUS, PROCESS, PHYS__STAT
and MARGINAL__TXT will be read from the value field of the AC and the datatype
definition in the ACD part of the FRT is ignored by the program. This is in
case the LITES2 OPERATION command was used to update these ACs as this action
is performed on the value field. 

.P 0
These attributes will always be treated as character values and should be
defined as datatype 'C' in the ACD so that programs such as LITES2 and IPATCH
will show their true representation. The SPEC attribute which is a variable
length alphanumeric string will be read from the optional text string of the
AC and the datatype will not matter. The UPDATE__DATE and DATE__OF__PROCESS
attributes will be read from the value field of the AC and should be defined
as datatype 'D' in the ACD.

.BL
.HL 3 ^*Per-point Attributes and CBs\*
.P 0
IFF Coordinate Blocks (CB) entries are able to hold 20 columns to represent
each point in a feature, which includes the X, Y and Z coordinates.

.P 0
[GEOMETRY_*] records have various data quality fields attached to every point
which are maintained by transferring them from the columns of the CB of the
feature, either held as fixed point attributes, or variable column entries.
The AC codes of these attributes must be known and so they must be defined in
the ACD part of the FRT in the same way as for the feature level attributes
and should not be present in the attribute file.

.P 0
The X__COORD, Y__COORD and Z__COORD should not be defined in the ACD as they
have standard AC codes of 91, 92 and 93 respectively.

.P 0
[GEOMETRY1] records have fields X__COORD, Y__COORD, XY__ACQ__METH, QPLAN.
.P 0
[GEOMETRY2] record have fields X__COORD, Y__COORD, XY__ACQ__METH, QPLAN,
Z__COORD, DIFF__HT, Z__ACQ__METH, QHT and QDIFF__HT, all of which are 
maintained in the conversion.

.P 0
Attributes held in Attribute Coordinate [ACRDREC] records are also attached to
points in the CB, after those derived from the [GEOMETRY_*] records.

.P 0
Since [GEOMETRY1] records result in 4 fields of a CB being used, the others 
may be used to hold [ACRDREC] attributes. 

.P 0
Similarly, [GEOMETRY2] records result in 9 fields of a CB being used, which
leaves 11 which may be used to hold [ACRDREC] attributes. 

.P 0
.BL 
.HL 3 ^*Symbol Features\*
.P 0
The graphical type of point features will be looked up in the FRT in order to
determine if distance (DT) or orientation (OR) attributes should be output.
Points with a graphical type (GT) of 9 will result in the output of the DT and
OR attributes, points with GT of 8 will only have an OR attribute and GT 7
points will not have either.
.BL 
.HL 3 ^*Text Features\*
.P 0
I2NTF/CITF will write all text features to CITF with two points; the first
being the digitised position and the second being the plotting position
calculated using {DIG__POSTN}. If the value of {DIG__POSTN} is zero then
plotting position will be the same as the digitised position.
.P 0
Text feature codes will be generated from the Category of the Feature Status
(FS) entry. NTF2I generates text features with feature codes of 28 and stores
enough information in the Category field for I2NTF to recalculate it.
The feature code generated will be the value held in the Category field plus
1000.
.BL 
.HL 3 ^*Attribute File\*
.P 0
It is intended that all of the CITF default attributes listed in the CITF
Specification Mod 7/C are defined in the ATTRIBUTE__FILE and ACD section of
the FRT. This will ensure that a stable list of attribute definitions exists
so that all CITF files created will have consistent attribute translation.
Any IFF/CITF attributes undefined in the ATTRIBUTE__FILE and FRT will not be
converted.
.P 0
Only [ATTREC] attribute mnemonics should be defined in the attribute file. The
feature level (UPDATE__DATE, UPDATE__STATUS, etc.) and per-point level
(XY__ACQ__METH, QPLAN, etc.) attributes should not be defined, since they are
looked up directly in the ACD part of the FRT file.
.P 0
Here is an example of an attribute file defining the default attributes
intended for use with CITF. Note that any text attributes have the 'TEXT'
option defined as true, denoting that value is to come from the optional text
string of the AC. In this case, the type of the AC as defined in the ACD part
of the FRT is irrelevant.
.P 0
Any integer, real, or date attributes should have the 'TEXT' option set to
false. Note also that the 'ANNOTATE' and 'COLLECT' options are not used for
CITF and are set to false.
.P 0
The default set of CITF attributes as defined in the CITF Specification
(Mod 7/C) date October 1992 will not be written to [ATTDESC] records but any
others will be in order that their interpretation is defined.
.TP 8
.LIT

!
! Default CITF attributes
!
!ATTRIBUTE  IFF_ATT_NAME  NTF_MNEM  TEXT  ANNOTATE  COLLECT
!
ATTRIBUTE	ADDR_ONE 	A1	T	F	F
ATTRIBUTE	ADDR_TWO 	A2	T	F	F
ATTRIBUTE	POSTAL_ADDR	AD	T	F	F
ATTRIBUTE	ACCENTS_MASK 	AM	T	F	F
ATTRIBUTE	ADDR_QUAL 	AQ	F	F	F
ATTRIBUTE	ADDR_STAT 	AS	F	F	F
ATTRIBUTE	BUILD_NAME 	BD	T	F	F
ATTRIBUTE	BUILD_NUM 	BN	F	F	F
ATTRIBUTE	CONCAT_FLAG	CF	T	F	F
ATTRIBUTE	COUNTY_NAME	CN	T	F	F
ATTRIBUTE	CHANGE_TYPE	CT	T	F	F
..
..
[lines deleted]
..
..
ATTRIBUTE	SETTLEMENT	SN	T	F	F
ATTRIBUTE	DATE_OF_SURV 	SY	F	F	F
ATTRIBUTE	TYPE_OF_CONSTR	TC	T	F	F
ATTRIBUTE	THOROUGHFARE	TN	T	F	F
ATTRIBUTE	CITFTEXT	TX	T	F	F
ATTRIBUTE	UORN		UN	T	F	F

.END LIT
.TP 8
.BL 
.HL 3 ^*FRT ACD Section\*

Here is an example of the ACD part of an FRT suitable for use with CITF data
whose ACD TABLE 4 reflects the IFF__ATT__NAME field of the above attribute
file.

.P 0
The feature level attributes in ACD TABLE 2 must be defined exactly as shown
and should not be defined in the attribute file. While I2NTF ignores the
datatype of ACs in the ACD (except for dates, which should be 'D'), it is
advised that attributes are defined to be of the correct type so that programs
such as LITES2 and IPATCH will display their true representation.
.TP 8
.P 0
The per-point attributes in ACD TABLE 3 must also be defined exactly as shown
and should not be defined in the attribute file. The AC codes of the X, Y and
Z coordinates that will appear in the CB entry will be the default ones of
91, 92 and 93 respectively and should not be present in the ACD section.
.TP 8
.BLANK
.LIT
!
! Feature level attributes
!
ACD TABLE 2
!
ACD D 1 UPDATE_DATE
ACD C 2 UPDATE_STATUS
ACD C 3 SPEC
ACD C 4 PROCESS
ACD D 5 DATE_OF_PROCESS
ACD C 6 PHYS_STAT
ACD C 7 MARGINAL_TXT
!
! Per-point attributes
!
ACD TABLE 3
!
ACD C 1 XY_ACQ_METH
ACD C 2 QPLAN
ACD R 3 DIFF_HT
ACD C 4 Z_ACQ_METH
ACD C 5 QHT
ACD C 6 QDIFF_HT
!
! Default attribute codes
!
ACD TABLE 4
!
ACD C  1 ADDR_ONE
ACD C  2 ADDR_TWO
ACD C  3 POSTAL_ADDR
ACD C  4 ACCENTS_MASK
ACD I  5 ADDR_QUAL
ACD I  6 ADDR_STAT
ACD C  7 BUILD_NAME
ACD I  8 BUILD_NUM
ACD C  9 CONCAT_FLAG
ACD C 10 COUNTY_NAME
..
..
[lines deleted]
..
..
ACD C 60 SETTLEMENT
ACD C 61 DATE_OF_SURV
ACD C 62 TYPE_OF_CONSTR
ACD C 63 THOROUGHFARE
ACD C 64 CITFTEXT
ACD C 65 UORN

.END LIT
.TP8
.BL
.HL 3 ^*Changing Feature Codes During Translation\*
.P 0
I2NTF allows feature codes to be changed during translation through the use of
a feature code lookup table parameter file. This facility is invoked by using
the /FC__LOOKUP qualifier. It is useful for converting IFF feature codes into
CITF feature codes which are invalid in IFF (i.e. greater than 32767). Refer to
the DATA PREPARATION section for details of how to set up a feature code
lookup table.

.lm -10

.page

.P0
^*--------------------------------------------------------------------------------\*
.hl 2 ^^^*EXAMPLES\*

.lm +10

.blank
.nofill
.tp10
.lm -10
$ ^*MOUNT/FOREIGN MSA0:_<CR_>\*
%MOUNT-I-MOUNTED,  mounted on _MSA0:
$ ^*I2NTF/RECIPIENT="TJ Ibbs"/LOG  FILE1  MSA0:_<CR_>\*
%I2NTF-I-NTFOPEN, NTF output opened on "MSA0:.NTF;0"
%LSLLIB-I-IFFOPENED, LSL$IF:FILE1.IFF;0 opened for read
%I2NTF-I-IGNORE, ignoring layer 0
%I2NTF-I-LAYER, processing layer 1
%I2NTF-I-LAYER, processing layer 2
%I2NTF-I-NTFDONE, NTF data written to "MSA0", 15 blocks output
 ELAPSED:    0 00:00:16.25  CPU: 0:00:04.52  BUFIO: 23  DIRIO: 40  FAULTS: 175 
.fill
.lm +10

.p0; This example shows the user mounting the magnetic tape on drive MSA0:, and
then using I2NTF to output data for the customer "TJ Ibbs". The program ignores
layer 0, and outputs the data in layers 1 and 2.

.blank
.nofill
.tp10
.lm -10
$ ^*TYPE TRANSYL.I2NTF__LIS_<CR_>\*
T1987Q1
T1987Q2
T1987Q3
$ ^*I2NTF/INPUT__LIST=TRANSYL/RECIPIENT="Transylvanian Water" -\*
$__ ^*                        /LOG/OUTPUT=TT:  MSA0:_<CR_>\*
%I2NTF-I-INFILOPN, input list file "TRANSYL.I2NTF__LIS" opened for read
-I2NTF-I-LISTRD, 3 IFF filenames read from list file "TRANSYL.I2NTF__LIS"
%LSLLIB-I-LOGOPNOUT, log file TT:I2NTF.LOG;0 opened for write
================================== I 2 N T F ===================================

I2NTF invoked by TONY using terminal RTA1: at  2-JUL-1989 15:36:31.31

Command line:

I2NTF/INPUT__LIST=TRANSYL/RECIPIENT="TRANSYLVANIAN WATER"/LOG/OUTPUT=TT: MSA0: 

================================================================================

 
NTF level 1
Recipient of data is "Transylvanian Water "
Donor of data is     "Laser-Scan Ltd.     "
Name of database is  "Transylvanian Water "                                    
NTF output to MSA0:.NTF;0                                                      
Output to magnetic tape at density 1600                                        
 
%I2NTF-I-NTFOPEN, NTF output opened on "MSA0:.NTF;0"
// NTF data output by Laser-Scan's CONVERT utility I2NTF                       
%LSLLIB-I-IFFOPENED, LSL$IF:T1987Q1.IFF;0 opened for read
//                                                                             
// IFF file        LSL$IF:T1987Q1.IFF;0                                        
// Spheroid        Airy                                                        
// Projection        UK national grid                                          
// Scale           2500                                                        
// Units           metres                                                      
// Height data     metres                                                      
%I2NTF-I-LAYER, processing layer 1
%I2NTF-W-ONEPT, FSN 10 (10) is linear, but only has one point
%LSLLIB-I-IFFOPENED, LSL$IF:T1987Q2.IFF;0 opened for read
//                                                                             
// IFF file        LSL$IF:T1987Q2.IFF;0                                      
// Spheroid        Airy                                                        
// Projection        UK national grid                                          
// Scale           1250                                                        
// Units           metres                                                      
// Height data     metres                                                      
%I2NTF-I-LAYER, processing layer 1
%LSLLIB-I-IFFOPENED, LSL$IF:T1987Q3.IFF;0 opened for read
//                                                                             
// IFF file        LSL$IF:T1987Q3.IFF;0                                        
// Spheroid        Airy                                                        
// Projection        UK national grid                                          
// Scale           2500                                                        
// Units           metres                                                      
// Height data     metres                                                      
%I2NTF-I-LAYER, processing layer 1
%I2NTF-I-NTFDONE, NTF data written to "MSA0", 184 blocks output
 ELAPSED:    0 00:02:02.24  CPU: 0:00:49.68  BUFIO: 85  DIRIO: 420  FAULTS: 171
.fill
.lm +10

.p0; The user has created an input list file, TRANSYL.I2NTF__LIS, containing
the names of the IFF files to be translated. I2NTF has then been used to output
the data from these files to magnetic tape. Note the use of /LOG and
/OUTPUT=TT: to produce an interleaved log of what is being done - the comments
written to the NTF tape are output between the relevant log messages.

.blank
.nofill
.tp10
.lm -10
$ ^*I2NTF/RECIPIENT="Laser-Scan Labs"/LOG/XY__LEN=4 SHEET7 MSA0:_<CR_>\*
%I2NTF-I-NTFOPEN, NTF output opened on "MSA0:.NTF;0"
%LSLLIB-I-IFFOPENED, LSL$IF:SHEET7.IFF;0 opened for read
%I2NTF-E-TOONARROW, the XY_LEN value of 4 given is too small
-I2NTF-I-SUGGEST, suggest the use of /XY_LEN=7
 ELAPSED:    0 00:00:10.18  CPU: 0:00:00.61  BUFIO: 10  DIRIO: 6  FAULTS: 112 
.fill
.lm +10

.p0; In this example, the user has specified that all X,Y coordinates will be
output in a field of length 4 characters. The program checks that the file can
indeed be output using this field width by inspecting the IFF file's range (RA)
entry. In this instance, the field is too narrow, and the program suggests the
minimum values that can be used for /XY__LEN.

.blank
.nofill
.tp10
.lm -10
$ ^*TYPE TRANSYL.I2NTF__PAR_<CR_>\*
! Standard parameter file for sending NTF data to
!
!		TRANSYLVANIAN WATER AUTHORITY
!
/recipient="Transylvanian Water"
/xy__len =8		! use a field of width 8 for X,Y coordinates
/xy__mult=0.01		! coordinates in hundredths of a metre
/z__unit =3		! heights are in FEET
$ ^*I2NTF/PARAMETER__FILE=TRANSYL/XY_MULT=0.1/SERIAL=1234/LOG/OUTPUT=T1234_<CR_>\*
_Input IFF file : ^*SHEET1,SHEET2<CR_>\*
_Output destination : ^*T1234_<CR_>\*
%I2NTF-I-PARFILOPN, parameter file "TRANSYL.I2NTF__PAR;0" opened for read
%I2NTF-I-PARFILCLO, parameter file "TRANSYL.I2NTF__PAR;0" closed
%LSLLIB-I-LOGOPNOUT, log file T1234.LOG;0 opened for write
%I2NTF-I-NTFOPEN, NTF output opened on "T1234.NTF;0"
%LSLLIB-I-IFFOPENED, LSL$IF:SHEET1.IFF;0 opened for read
%I2NTF-I-LAYER, processing layer 1
%I2NTF-I-LAYER, processing layer 2
%I2NTF-I-LAYER, processing layer 5
%LSLLIB-I-IFFOPENED, LSL$IF:SHEET2.IFF;0 opened for read
%I2NTF-I-LAYER, processing layer 1
 ELAPSED:    0 00:02:57.68  CPU: 0:01:21.65  BUFIO: 88  DIRIO: 466  FAULTS: 282
$ ^*TYPE T1234.LOG_<CR_>\*
================================== I 2 N T F ===================================

I2NTF invoked by TONY using terminal RTA1: at  2-JUL-1989 16:20:22.10

Command line:

I2NTF/PARAMETER_FILE=TRANSYL/XY__MULT=0.1/SERIAL=1234/LOG/OUTPUT=T1234 
SHEET1,SHEET2 T1234 

================================================================================

 
NTF level 1                                                                    
Recipient of data is "Transylvanian Water "                                    
Donor of data is     "Laser-Scan Ltd.     "                                    
Name of database is  "Transylvanian Water "                                    
NTF output to T1234.NTF;0                                                      
 
// NTF data output by Laser-Scan's CONVERT utility I2NTF                       
//                                                                             
// IFF file        LSL$IF:SHEET1.IFF;0                                    
// Spheroid        Airy                                                        
// Projection        UK national grid                                          
// Scale           2500                                                        
// Units           metres                                                      
// Height data     feet                                                        
//                                                                             
// IFF file        LSL$IF:SHEET2.IFF;0                                     
// Spheroid        Airy                                                        
// Projection        UK national grid                                          
// Scale           1250                                                        
// Units           metres                                                      
// Height data     feet                                                        
$
.fill
.lm +10

.p0; In this example, a standard parameter file has been prepared for sending
data to this customer. I2NTF is run, overriding the coordinate multiplication
factor (/XY__MULT) specified in the parameter file, and specifying a volume
serial number to identify this particular tape. The output log is sent to a
file, which is typed to show its contents. This file can be printed and used as
part of the documentation for the data on the tape.

.blank
.nofill
.tp10
.lm -10
$ ^*I2NTF/RECIPIENT="Ordnance Survey (GB)"/OS/LOG/OUTPUT=OS OSCODES MSA0:_<CR_>\*
%LSLLIB-I-LOGOPNOUT, log file OS.LOG;0 opened for write
%I2NTF-I-NTFOPEN, NTF output opened on "MSA0:.NTF;0"
%I2NTF-I-MHREAD, IFF file "LSL$IF:OSCODES.IFF;0" opened and map header read 
%LSLLIB-I-IFFOPENED, LSL$IF:OSCODES.IFF;0 opened for read
%I2NTF-I-IGNORE, ignoring layer 0
%I2NTF-I-LAYER, processing layer 1
%I2NTF-I-NTFDONE, NTF data written to "MSA0", 153 blocks output
 ELAPSED:    0 00:01:02.25  CPU: 0:00:39.34  BUFIO: 19  DIRIO: 353  FAULTS: 254 
$ ^*TYPE OS.LOG_<CR_>\*
================================== I 2 N T F ===================================

I2NTF invoked by TONY using terminal RTA2: at  3-JUL-1989 11:52:20.93

Command line:

I2NTF/RECIPIENT="ORDNANCE SURVEY (GB)"/OS/LOG/OUTPUT=OS OSCODES MSA0: 

================================================================================

 
NTF level 1                                                                    
Recipient of data is "Ordnance Survey (GB)"                                    
Donor of data is     "Laser-Scan Ltd.     "                                    
Name of database is  "Ordnance Survey (GB)"                                    
NTF output to MSA0:.NTF;0                                                      
Output to magnetic tape at density 1600                                        
Extra OS header information is being output
 
// NTF data output by Laser-Scan's CONVERT utility I2NTF                       
//                                                                             
// IFF file        LSL$IF:OSCODES.IFF;0                                     
// Spheroid        Airy                                                        
// Projection        UK national grid                                          
// Scale           1250                                                        
// Units           metres                                                      
// Height data     metres                                                      
// Section header record contains OS(GB) map header data                       
.fill
.lm +10

.p0; In this example, an OS (GB) style IFF file is being processed, and the
user has used the /OS qualifier to indicate that OS map header data should be
output in the section header record. Note that the log message output when the
IFF file is initially opened includes a note that the map header is present,
and that the output log file indicates that the extra data has been output to
the section header.

.blank
.nofill
.tp10
.lm -10
$ ^*I2NTF/RECIPIENT="Baron Greenback"/LOG/FRT=DM/ATTRIBUTE__FILE=DM/LEVEL=2 
PENFOLD.IFF PENFOLD.NTF _<CR_>\*

%I2NTF-I-ATTFILOPN, attribute file "DM.NTF_ATTR;0" opened for read
%I2NTF-I-ATTFILCLO, attribute file "DM.NTF_ATTR;0" closed
%I2NTF-I-NTFOPEN, NTF output opened on "PENFOLD.NTF;0"
%LSLLIB-I-IFFOPENED, LSL$IF:PENFOLD.IFF;0 opened for read
%I2NTF-I-LAYER, processing layer 1
%I2NTF-I-LAYER, processing layer 2
%I2NTF-I-LAYER, processing layer 3
%I2NTF-I-LAYER, processing layer 4
%I2NTF-I-LAYER, processing layer 5
%I2NTF-I-LAYER, processing layer 6

 ELAPSED:    0 00:00:11.32  CPU: 0:00:02.54  BUFIO: 17  DIRIO: 67  FAULTS: 285 
.fill
.lm +10

.p0; This example shows the use of the /ATTRIBUTE__FILE and /FRT qualifiers.
The files given with these qualifiers were used to transfer attributes from 
the IFF AC's into NTF attributes. Note that /LEVEL=2 or /LEVEL=3 must be given.

.lm -10
.page
.require  "NTF_I2NTFMSG.RNO"
