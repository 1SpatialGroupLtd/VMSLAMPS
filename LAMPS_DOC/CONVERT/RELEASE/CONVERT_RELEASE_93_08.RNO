.LEFT MARGIN  0;.RIGHT MARGIN 80;.PAGE SIZE    60,80
.KEEP
.FLAGS BOLD
.!** title page
.FIGURE 14
.CENTRE ;^*Laser-Scan Ltd.\*
.FIGURE 2
.CENTRE ;^*CONVERT Package\*
.BLANK
.CENTRE ;^*Release Notes\*
.FOOT
.FLAGS SUBSTITUTE
.NOFILL
Copyright (C) $$year Laser-Scan Ltd
Science Park, Milton Road, Cambridge, England CB4 4FY  tel: (0223) 420414

Document "CONVERT Release"				Category "Release Notes"
Document Issue 12.4	S Townrow			 1-Mar-1993
Document Issue 12.5	S Townrow			12-Mar-1993
Document Issue 12.6	S Townrow			 5-Apr-1993
Document Issue 12.7	S Townrow			20-Apr-1993
Document Issue 12.8	S Townrow			21-Apr-1993
Document Issue 12.9	S Townrow			14-May-1993
Document Issue 12.10	S Townrow			18-May-1993
Document Issue 12.11	S G Hancock			 8-Jun-1993
Document Issue 12.12	J Barber			15-Jun-1993
Document Issue 12.13	S Townrow			18-Jun-1993
Document Issue 12.14	P G Hardy			25-Jun-1993
Document Issue 12.15	J Barber			30-Jun-1993
Document Issue 12.16	S Townrow			 5-Jul-1993
Document Issue 12.17	S Townrow			 8-Jul-1993
Document Issue 12.18	J Barber			 9-Jul-1993
Document Issue 12.19	S Townrow			21-Jul-1993
Document Issue 12.20	S Townrow			22-Jul-1993
Document Issue 13.0	S Townrow			 3-Aug-1993
.FILL
.NOFLAGS SUBSTITUTE
.END FOOT

.!* and the title to go at the top of each page
.TITLE CONVERT Release notes
.PAGE

.HL 1 ^*CONTENT\*
This document describes recent changes to the Laser-Scan LAMPS software package
CONVERT. This package provides interface facilities between Laser-Scan's
internal feature format (IFF) and other known mapping systems through
standard transfer formats for data.

.P 0
Details of CONVERT functionality and commands can be found in the
latest edition of the CONVERT Reference Manual. 

.P 0
.!
.! Put this paragraph back at the time of the freeze. It was commented out for
.! customers who received software upgrades between releases.
.!
This document is part of the LAMPS V4.2 release, which went into Alpha test
in July 1993. It covers changes to package CONVERT since the previous
LAMPS release (V4.1) which went into Alpha test in December 1993. See the
release notes for the previous LAMPS release for information about earlier
changes.
.!
.! This is for customers who have upgrades between releases
.!
.!This document covers the changes to package CONVERT since the previous
.!LAMPS release (V4.1) which went into Alpha test in December 1993. See the
.!release notes for the previous LAMPS release for information about earlier
.!changes.


.HL 1 ^*NEW OR CHANGED FACILITIES\*

In the specified version of the CONVERT package programs, libraries or
documentation, the following changes were made.
.LIST
.DISPLAY ELEMENTS "(",LU,")"

.le;20-February-1993 - Release Notes
.list
.le;These release notes have been trimmed back to the previous release.
.end list 0
.!...........................................................................
.!
.tp 8
.le;1-March-1993 - Module IFFNTF
.list
.le;^*I2NTF\*#-#Various changes to the program have been made when writing
CITF files. These changes will only apply to CITF and will affect OSGB.
.le;^*I2NTF\*#-#Point features with graphical type 9 will be written with a
single location point only since the size and orientation of the scaled symbol 
is held in attributes DT and OR.
.le;^*I2NTF\*#-#The [VOLTERM] record now gives a correct count of the number
of [ATTREC] records in the {NO__ATTREC} field.
.le;^*I2NTF\*#-#Variable length text attributes are now written to the [ATTREC]
record correctly, without a spurious NULL character at the end.
.le;^*I2NTF\*#-#The program now checks and reports a potential integer
overflow when converting the range values to integer form using the
XY__MULT value. This was caused when the IFF file had a very large range
generated from NTF2I with a file containing no features. A new message,
RANGEOVER, will occur to report this overflow.
.le;^*I2NTF\*#-#The [SUMMREC] record is now created so that as many fields as
possible are written to the line.
.le;^*I2NTF\*#-#The program will correctly read an IFF file containing no
features and ensure that a [VOLTERM] record is written.
.le;^*I2NTF\*#-#The range values written to the [ATTDESC] record are now
written correctly with an implicit decimal place.
.le;^*I2NTF\*#-#Two warning messages, CITFDIFEXTENT and CITFIGNSECTREF, which
were deemed to be unnecessary, have been removed. 

.le;^*NTF2I\*#-#Various changes to the program have been made when reading
CITF files. These changes will only apply to CITF and affect OSGB.
.le;^*NTF2I\*#-#A new warning, NOSECHREC, has been added which is reported
when no [SECHREC] record was present in the CITF file.
.le;^*NTF2I\*#-#All 4 values of the IFF range entry will be zero when given
a CITF file containing no features.
.le;^*Reference Manual\*#-#The I2NTF and NTF2I manuals have had revised message
sections to reflect the above changes.
.end list 0

.tp 8
.le;12-March-1993 - Module IFFNTF
.list
.le;^*NTF2I\*#-#The program now exits so that the VMS variable $STATUS is
correctly set which was apparent when the program was run from a command file.
.le;^*NTF2I\*#-#A bug had been fixed so that the program no longer crashes
when reading the attributes from an NTF file. This only occurred with NTF files
and the CITF file handling has not changed in any way.
.le;^*NTF2I\*#-#The program will now read NTF [GEOMETRY] records which have
fields that span physical records. Again, this only applies to NTF files
and the CITF file handling has not changed in any way.
.end list 0

.tp 12
.le;5-April-1993 - Module IFFARCINFO
.list
.le;^*ARC2I\*#-#Various modifications have been made to the program to
partially support ARC/INFO version 6.0 annotation (SPRs 1934 and 2003).
.le;^*ARC2I\*#-#Text features can now be assigned a feature code on the basis
of LEVEL and SYMBOL codes as defined in the parameter file. This applies to
ARC/INFO version 6.0 text as well as for the old style text in version 5.0 and
above. The parameter file now has an additional section to control the
assigning of feature codes and this is as follows:
.P 0
The annotation feature code table describes the lookup between text LEVEL and
SYMBOL numbers into IFF feature codes. Each line is prefixed with the ANNO
command which tells the program that a line is part of this table. A feature
code can be assigned to a text feature on the basis of its LEVEL code, SYMBOL
code or both.
.BLANK
.TP 8
A line has one of the following three forms :-
.P 5
^*ANNO###FC###fcode###LEVEL###lcode###SYMBOL###scode\*
.P 5
^*ANNO###FC###fcode###LEVEL###lcode\*
.P 5
^*ANNO###FC###fcode###SYMBOL###scode\*
.P 0
where the fields are :-

.LM +14
.P -9
^*ANNO###\*-#the command ANNO which states that this line is an entry in the
annotation feature code table.
.I -9
^*FC#####\*-#the sub-command FC which will be followed by the feature code to
be derived from the LEVEL code, SYMBOL code or both.
.I -9
^*fcode##\*-#the IFF feature code, an integer in the range 0 to 32767, to be
assigned to a feature with the corresponding LEVEL or SYMBOL codes.
.I -9
^*LEVEL##\*-#the LEVEL sub-command denotes that the feature code will be
assigned to text features with the following LEVEL code. If the SYMBOL command
is also given on this line, then the feature code can only be assigned if both
the LEVEL and SYMBOL codes match. If neither match in the whole table, the
default feature code is used.
.I -9
^*lcode##\*-#the value of the LEVEL code used to determine if this feature code
is to be assigned to a feature.
.I -9
^*SYMBOL#\*-#the SYMBOL sub-command denotes that the feature code will be
assigned to text features with the following SYMBOL code. If the LEVEL command
was also given on this line, then the feature code can only be assigned if both
the LEVEL and SYMBOL codes match. If neither match in the whole table, the
default feature code is used.
.I -9
^*scode##\*-#the value of the SYMBOL code used to determine if this feature
code is to be assigned to a feature.
.LM -14
.TP 10
.NOTE
The order of entries in the ANNO table is important. The program performs a
simple linear search through the table to assign feature codes on the basis of
a first match between LEVEL and SYMBOL codes. So if, for example, you required
an IFF feature code of 1001 to be assigned to features which have an ARC/INFO
LEVEL code of 2 and SYMBOL code of 5, but a feature code of 1002 to be assigned
to features with a LEVEL code of 2 irrespective of the SYMBOL code, then the
feature code 1001 must appear in the list first. If the feature code 1002 was
put in the table first, this would match everything with LEVEL code 2 and no
features would be assigned feature code 1001.
.END NOTE
.BLANK

.le;^*ARC2I\*#-#The program now partially supports ARC/INFO version 6.0
annotation text features as held in the TX6 (previously TXT) section. The
extent of the support is as follows:
.list "o"
.lm+4
.le;BANKED TEXT#-#IFF composite text features will be created if the ARC
feature has the relevant information defining it as composite.
.le;ANGLED TEXT#-#Text with one point will have an orientation (IFF RO
entry) of zero. Texts with two points will have an orientation equal to the
angle between the two points.
.le;BENT TEXT#-#Text digitised to follow an arc or curved feature is not
supported. If the bent text consists of one component, then its orientation
will be defined as the angle between the first and last points of the curve.
If the text contains multiple components along one curve, each component will
start on a point of that curve. Each component will therefore be oriented
at the angle defined by the first and last point for each component's segment
of the curve. The last point of a component's curve segment is the point
before the one which starts the next component.
.le;STRETCHED TEXT#-#Text features will not be stretched in any way to fit
between points, be it by inserting additional spaces or by breaking the text
string up into individual component characters.
.le;TEXT ATTRIBUTES#-#ARC/INFO Version 6.0 text attributes are no currently
supported. Any text attribute tables (TAT) will be ignored.
.lm-4
.end list 0

.le;^*ARC2I\*#-#A new message, BADFCODE, has been added which is reported when
the feature code in the new ANNO section of the parameter file is out of range.
.le;^*ARC2I\*#-#A new message, DEFAULTFC, has been added which reports that
no match occurred between a feature's LEVEL and SYMBOL codes and those in the
parameter file and so the default one was used. Since this may cause many
warnings, it is only output when /LOG is used. The default feature code for the
text feature will be as defined by the DEF__TEXT command in the parameter or
feature code 3 if that is undefined.
.le;^*ARC2I\*#-#A new message, MISSCMD, has been added that occurs when reading
the new annotation feature code section in the parameter file. This message is
reported when no LEVEL or SYMBOL sub-command is given.
.le;^*ARC2I\*#-#Two new qualifiers, /ARC__ID and /POINT__ID have been added
which perform the following:

.LM +10

.BL;
.P -10;/ARC__ID=keyword
.I -10;/ARC__ID=USER__ID (default)
.P -2;-#This qualifier specifies which fields to use when matching arc
attributes to their features. The two fields available are the User-ID and the
Internal-ID fields and so the keywords are USER__ID and INTERNAL__ID.
.BL
The first field of each line feature in the ARC section is the Internal-ID and
the second is the User-ID. Note that this is the opposite way around to the LAB section.
.BL
The first seven default attributes in the Arc Attribute Table (AAT) contain
two ID attributes, at least one of which should have values which reflect the
User-ID or Internal-ID of the ARC section. The attribute called the coverage
.! to make the # come out as a character
.NO FLAGS SPACE
name followed by a '#' is the Internal-ID (eg COVERAGE#) and the attribute
.FLAGS SPACE
called the coverage name followed by '-ID' is the User-ID (eg COVERAGE-ID).
.BL
The field that is used to match features must be unique and sorted so that 
each entry in the AAT table matches exactly the entry in the corresponding
ARC section.
.BL
If this qualifier is not given, the User-ID field will be used to match any
attributes to their features.


.BL;
.P -10;/POINT__ID=keyword
.I -10;/POINT__ID=USER__ID (default)
.P -2;-#This qualifier specifies which fields to use when matching point
attributes to their features. The two fields available are the User-ID and the
Internal-ID fields and so the keywords are USER__ID and INTERNAL__ID.
.BL
The first field of each point in the LAB section is the User-ID and the second
is the Internal-ID number. Note that this is the opposite way around to the
ARC section.
.BL
The first four default attributes in the Point Attribute Table (PAT) contain
two ID attributes, at least one of which should have values which reflect the
User-ID or Internal-ID of the LAB section. The attribute called the coverage
.! to make the # come out as a character
.NO FLAGS SPACE
name followed by a '#' is the Internal-ID (eg COVERAGE#) and the attribute
.FLAGS SPACE
called the coverage name followed by '-ID' is the User-ID (eg COVERAGE-ID).
.BL
Often the LAB section will have unique User-ID values for polygon seeds but
zeros in the second field (the Internal-ID) and so the /POINT__ID need not be
given as this is the default.
.BL
The field that is used to match features must be unique and sorted so that 
each entry in the PAT table matches exactly the entry in the corresponding
LAB section.
.BL
If this qualifier is not given, the User-ID field will be used to match any
attributes to their features.
.LM -10
.end list 0

.tp 8
.le;20-April-1993 - Module IFFNTF
.list
.le;^*I2NTF\*#-#The following change to the program applies to CITF and will
affect OSGB only.
.le;^*I2NTF\*#-#The CITF alphanumeric feature level attributes UPDATE__STATUS,
PROCESS, PHYS__STAT and MARGINAL__TXT will be read from the value field of the
AC and the datatype definition in the ACD part of the FRT is ignored by the
program. This is in case the LITES2 OPERATION command was used to update these
ACs as this action is performed on the value field. 

.P0
These attributes will always be treated as character values and should
be defined as datatype 'C' in the ACD so that programs such as LITES2 and
IPATCH will show their true representation. The SPEC attribute which is a
variable length alphanumeric string will be read from the optional text string
of the AC and the datatype will not matter. The UPDATE__DATE and
DATE__OF__PROCESS attributes will be read from the value field of the AC and
should be defined as datatype 'D' in the ACD.

.le;^*NTF2I\*#-#The following change to the program applies to CITF and will
affect OSGB only.
.le;^*NTF2I\*#-#The CITF alphanumeric feature level attributes UPDATE__STATUS,
PROCESS, PHYS__STAT and MARGINAL__TXT will be placed into the value field of
the AC as characters and the datatype definition in the ACD part of the FRT is
ignored by the program. This is so that the LITES2 OPERATION command can be
used to update these ACs and this action if performed on the value field.

.P 0
These attributes will always be treated as character
values and should be defined as datatype 'C' in the ACD so that programs such
as LITES2 and IPATCH will show their true representation. The SPEC attribute
which is a variable length alphanumeric string will be written to the optional
text string of the AC and the datatype will not matter. The UPDATE__DATE and
DATE__OF__PROCESS attributes will be placed in the value field of the AC and 
should be defined as datatype 'D' in the ACD.

.P 0
While I2NTF and NTF2I ignore the datatype of ACs in the ACD part of the FRT
(except for dates, which should be 'D'), it is advised that attributes are
defined to be of the correct type so that programs such as LITES2 and IPATCH
will display their true representation.

.P 0
Here is an example of the ACD definition of the CITF feature level attributes
for use with I2NTF and NTF2I:

.TP 8
.BLANK
.LIT
!
! Feature level attributes
!
ACD TABLE 2
!
ACD D 1 UPDATE_DATE
ACD C 2 UPDATE_STATUS
ACD C 3 SPEC
ACD C 4 PROCESS
ACD D 5 DATE_OF_PROCESS
ACD C 6 PHYS_STAT
ACD C 7 MARGINAL_TXT
!
.END LIT
.end list 0

.tp 12
.le;21-April-1993 - Module IFFARCINFO
.list
.le;^*I2ARC\*#-#A bug has been fixed so that the User-ID and the Internal-ID
numbers in the ARC and LAB sections match those for their attributes in the
Arc Attribute Table (AAT) and Point Attribute Table (PAT) respectively.
(SPR 2191).
.le;^*ARC2I\*#-#A bug has been fixed so that when the /POINT__ID = USER__ID
option is used, the program no longer reads the second LAB field (the
Internal-ID) as the x-coordinate.
.end list 0

.tp 12
.le;14-May-1993 - Module IFFDCW
.list
.le;^*DCW2I\*#-#Improvements have been made to the algorithm which traverses
edges when building area features. Due to the errors and discrepancies in the
DCW source data there are many cases of edges with the same face on both
sides, called 'dangles'. These often prove difficult to follow around an area,
particularly when digitised in different directions. The program will now
throw away two or more dangles in a row in favour of following edges around
the perimeter of the area. It is often the case that two or more dangling
edges can be thrown away with no loss of data, but there may be cases where
two dangles lead to a hole in the area which could be lost and so we recommend
that the IFF file is examined in LITES2, particularly when a message occurs.
Single dangles are often used to connect holes or island to large polygons
and these will be converted successfully.

.le;^*DCW2I\*#-#A new message, TWODANGLES, has been added which is as follows:
.P 0
.LM -5
.NOJUSTIFY;.TP 10;.P -4
TWODANGLES, Two dangling edges together in area with FSN 'number'
.JUSTIFY

.P0; ^*Explanation:\*
When building up a list of edges which comprise an area feature, two dangling
edge (edges with the same face on both sides) have been found, one after the
other. These edges can cause problems, particularly if they are digitised in
different directions. The program will ignore the dangling edges in preference
for a normal edge on the perimeter of the area in the hope that it will
close properly. It is often the case that two or more dangling edges can be
thrown away with no loss of data, but there may be cases where two dangles
lead to a hole in the area which could be lost and so we recommend that the
user follows the following action.
.P0; ^*User action:\*
Examine the reported area feature in LITES2 for this tile and compare it with
the DCW data held on CD-ROM which can be displayed on a PC using the VPFVIEW
software, which accompanies the DCW package.
.LM +5
.TP 10
.le;^*DCW2I\*#-#The severity of the message, MISSINGTABLE, has been reduced
from a warning to an informational message since it can usually be ignored. It
just notifies the user that a primitive table for a particular tile did not
exist and is unlikely to be due to any problem in the source data.
.le;^*CONVERT Reference Manual\*#-#The DCW Data Preparation section and DCW2I
Reference Manual have been modified to warn the user not to try and convert
NULL coded features because of the problems these cause:
.P 0
.NOTE
Often, area features do not close because they have been incorrectly
coded in the DCW data as having NULL codes. For example, some line features
(rivers) in the DN (drainage) coverage are NULL coded as areas and never
close and so trying to build an area out of these will cause the TOOMANYEDGES
message. We therefore recommend that the NULL coded features ARE NOT PRESENT
IN THE FEATURE CODE TABLE so that they will be ignored.
.END NOTE
.end list 0

.tp 8
.le;18-May-1993 - Module IFFNTF
.list
.le;^*NTF2I\*#-#A bug has been fixed to prevent the program from crashing
under certain circumstances when converting attributes.
.end list 0

.tp 8
.le;8-June-1993 - Module IFFIMAP
.list
.le;^*I2IMAP\*#-#Multiple secondary annotation points per feature, up to a 
limit of 32, may be transferred using STARTX/STARTY/ENDX/ENDY AC entries. 
(Formerly only a single annotation point was transferred.) If more than 32
such points are defined for a single feature, the warning EXCANNLIM is issued
once for each excessive point, and the first 32 points only output.
.end list 0

.tp 8
.le;15-June-1993 - Module IFFDXF
.list
.le;^*DXF2I\*#-#The number of points handled for POLYLINE entities has been 
increased to 30000, and an error message TOOMNYPNTS given if this limit is
about to be exceeded and the feature abandoned.

.le;^*DXF2I\*#-#If a DXF file has no HEADER section, default IFF header 
entries (eg. RAnge) will be created, and updated at the end of the program
run. There is a new message DEFIFFHDR to warn the user that this is happening
in the absence of a DXF header.

.le;^*DXF2I\*#-#There is a new qualifier /SCAN = scan__file to create a 
default parameter file from the DXF file. This scan file can be used as the 
parameter file for subsequent runs of DXF2I on this DXF file. This qualifier is
an alternative to the IFF output file parameter as no IFF file will be written.
The /PARAMETER qualifier is also forbidden in this case.

.le;^*Reference Manual\*#-#The DXF2I manual has been revised to describe these 
changes.
.end list 0


.tp 8
.le;18-June-1993 - Module IFFNTF
.list
.le;^*I2NTF\*#-#A CITF bug has been fixed so that [ACRDREC] records do not
appear inside [GEOMETRY_*] records. (SPR 2309)
.le;^*I2NTF\*#-#A CITF bug has been fixed so that the format of coordinates
does not change inside a [GEOMETRY1] or [GEOMETRY2] record under certain
circumstances. (SPR 2316)
.end list 0

.tp 8
.le;25-June-1993 - Module IFFNTF
.list
.le;^*NTF2I\*#-#When used with the /CITF qualifier, the program always outputs
UPDATE__DATE and UPDATE__TYPE ACs when converting CITF data. (SPR 2319).
.le;^*NTF2I\*#-#When used with the /CITF qualifier, the program always outputs
a marginal text marker AC (MARGINAL__TXT) if the value is not 'N'.
.end list 0

.tp 8
.le;30-June-1993 - Module IFFDXF
.list
.le;^*DXF2I\*#-#The range update mechanism has been changed to not use the
default coordinate of (0,0) when this is not a valid coordinate (SPR 2331).
.end list 0

.tp 8
.le;7-July-1993 - Module IFFSIF
.list
.le;^*IFF2SIF\*#-#The program no longer crashes if attributes required in the
conversion are undefined in the ACD part of the FRT. (SPR 2214).
.end list 0


.tp 8
.le;8-July-1993 - Module IFFNTF, CONVERT SPS
.list
.le;^*I2NTF\*#-#Number of nodes that the program is capable of handling has
been increased to 30000. (SPR 1876)
.le;^*I2NTF\*#-#A bug had been fixed so that CITF [ACRDREC] records are now
correctly written after the [GEOMETRY] record to which they refer. This applies
to CITF data and will affect Ordnance Survey only. (SPR 2309)
.le;^*I2NTF\*#-#The program has a new qualifier which specifies that NTF
version 2.0 data is to be created. The qualifier is defined thus:
.LM +8
.BL
.p-8;/VERSION='real'
.p-2;-#specifies the version of the NTF file to be created. If the qualifier
is not given then a default value of 2.0 is used which will result in the
output of NTF version 2.0 (BS7567) data. Acceptable values for this qualifier
are 1.1 and 2.0.
.LM -8

.NOTE
The default action for I2NTF is to now write NTF data at level 2, version 2.0.
This is an incompatible change as the default used to be level 1 when only
version 1.1 was available.
.END NOTE

.le;^*NTF2I\*#-#The names of the temporary work files are now unique so that
the program can be run more than once in the same directory at the same time.
The filenames will be based on the section name, the process ID and the record
type, eg:
.BL
.BR;######SJ13SW__3DE000AD0.LINE__TMP
.BR;######SJ13SW__3DE000AD0.POLY__TMP
.BR;######SJ13SW__3DE000AD0.NAME__TMP
.P 0
This is a fix for SPR 2273.
.le;^*NTF2I\*#-#The program now partially supports the conversion of NTF
version 2.0 data with certain restrictions as follows:
.list "-"
.le;No mechanism at present exists to convert NTF v2.0 level 1 and 2 [LINEREC],
[POINTREC] and [NAMEREC] attributes, CHG__TYPE and CHG__DATE into ACs.
.le;Combined attributes ([ATTCOM] records) are not supported. Therefore each
attribute must be defined and used individually.
.le;IFF Coordinate Block structures (CBs) not supported, although [GEOMETRY2]
records can be read and interpreted.
.le;[CHAIN], [COLLECT] and [CPOLY] records are not interpreted. This means that
NTF2I will not currently read Ordnance Survey's Boundary-Line data.
.le;Only attributes 'HT' and 'OR' can be read from the {VALUE} field of a
[POINTREC] and [LINEREC] record.
.le;Unlike version 1.1 NTF, there are no default attributes and so any
that are present in the NTF file must be defined in [ATTDESC] records,
the attribute file and the FRT in order to carry them into IFF.
.end list 0
.le;^*NTF2I\*#-#The program will read Ordnance Survey NTF version 2.0 Landline,
OSCAR, 1:625000, 1:250000 and 1:50000 (contour) data products. However, as
NTF2I will currently not read [CHAIN], [CPOLY], [POLYGON] or [COLLECT] records
at NTF v2.0, it will not read Ordnance Survey's Boundary-Line data.
.le;^*CONVERT SPS\*#-#The CONVERT Software Product Specification has been
updated to include references to the partial support of ARC/INFO version 6.0
text, the resources required by DCW2I and support for NTF version 2.0.
(BS7576).
.end list 0

.tp 8
.le;9-July-1993 - Module IFFDXF
.list
.le;^*DXF2I\*#-#The /SCAN facility does now not output duplicate layer entries 
to the scan file.
.le;^*DXF2I\*#-#New messages TOOMNYLAYS and TOOMNYENTS to warn that there are
too many unique layers or entity/linestyle/colour/fc combinations for the
program to store for /SCAN option, and no more checking for uniqueness will
take place.
.end list 0


.tp 8
.le;21-July-1993 - Module IFFNTF
.list
.le;^*I2NTF\*#-#Negative range coordinates in the section header record will
now have the minus sign before any leading zeros for NTF v1.1 and v2.0 data.
.le;^*NTF2I\*#-#The program no longer assumes that as many fields as possible
have been fited onto a line in data with fixed length records. Ordnance Survey
OSCAR v1.1 data in fixed length form does not fit as many field as possible
onto a line and the program can now read this.
.le;^*NTF2I\*#-#The program will now read NTF dates of the form 'yyyymmdd' and
'yymmdd' and the attribute should be defined in the ACD definition of the FRT
as being of type 'D' (date).
.end list 0


.tp 8
.le;22-July-1993 - Module IFFDCW
.list
.le;^*DCW2I\*#-#A bug has been fixed so that each hole in an area feature now
has the correct 'pen-up' invisible move to the last point in the feature. This
means that when viewing areas in LITES2 with a hollow or hatched fill, the
invisible line segments are not visible.
.le;^*DCW2I\*#-#When the warning message TWODANGLES occurs it is accompanied
by a new message, COORDS, which outputs the coordinates where a problem might
be. The message is described thus:
.BL
.LM -5
.NOJUSTIFY;.TP 10;.P -4
COORDS, Potential problem at or near coordinate 'x','y'
.JUSTIFY

.P0; ^*Explanation:\*
The coordinates reported refer to the approximate absolute position of a
problem that occured due to 'dangling edges' when constructing an area
feature.
.P0; ^*User action:\*
The coordinates are intended to aid the user when checking for problems in the
data using LITES2. The FSN reported by the message TWODANGLES should also help
check that the area feature is complete.
.LM +5
.le;^*DCW2I\*#-#A new message, NODIR, is output to notify the user of those
IFF files which will not be created.
.BL
.LM -5
.NOJUSTIFY;.TP 10;.P -4
NODIR, 'directory' - no IFF file 'filename'
.JUSTIFY

.P0; ^*Explanation:\*
The directory given does not exist in the library of the current CD-ROM
being read. No IFF file with the corresponding name can therefore be created.
.P0; ^*User action:\*
None. This indicates that the CD-ROM simply does not contain data for that
coverage and tile.
.LM -5
.end list 0


.tp 8
.le;3-August-1993 - Module IFFNTF
.list
.le;^*I2NTF\*#-#Two new default CITF attributes have been built into the
program so that their datatypes and field widths need not be defined in a
[ATTDESC] record. The attributes are 'AM' (Accents Mask) and 'HT' (Height)
with NTF interpretations of A_* and I6 respectively. This applies to CITF
files and will affect Ordnance Survey only.
.P0;Definitions of the new attributes should be added to the attribute and
FRT files to define which IFF AC codes hold them. An example attribute
file might be:
.TP 8
.LIT

!
! Default CITF attributes
!
!ATTRIBUTE  IFF_ATT_NAME  NTF_MNEM  TEXT  ANNOTATE  COLLECT
!
ATTRIBUTE	ADDR_ONE 	A1	T	F	F
ATTRIBUTE	ADDR_TWO 	A2	T	F	F
ATTRIBUTE	POSTAL_ADDR	AD	T	F	F
ATTRIBUTE	ACCENTS_MASK	AM	T	F	F  ! New attribute
ATTRIBUTE	ADDR_QUAL 	AQ	F	F	F
..
[lines deleted]
..
ATTRIBUTE	HOUSE_STRUCT	HS	T	F	F
ATTRIBUTE	CONTOUR		HT	F	F	F  ! New attribute
ATTRIBUTE	HIGH_WATER	HW	F	F	F
..
[lines deleted]
..
ATTRIBUTE	THOROUGHFARE	TN	T	F	F
ATTRIBUTE	CITFTEXT	TX	T	F	F
ATTRIBUTE	UORN		UN	T	F	F

.END LIT
.TP 14
The corresponding FRT might be:
.BLANK
.LIT
!
! Default attribute codes
!
ACD TABLE 4
!
ACD C  1 ADDR_ONE
ACD C  2 ADDR_TWO
ACD C  3 POSTAL_ADDR
ACD C  4 ACCENTS_MASK
ACD I  5 ADDR_QUAL
..
[lines deleted]
..
ACD C 62 THOROUGHFARE
ACD C 63 CITFTEXT
ACD C 64 UORN

.END LIT
In the above example, the attribute 'HT' was given the name 'CONTOUR' which
will match the Laser-Scan default attribute code 2 which is an integer always
reserved for holding contour heights. Since this default attribute exists in
ACD TABLE 0, it should not be present in the ACD part of the FRT. If a normal
AC code (ie. one above 1000) is required, then the attribute name should not
be called 'CONTOUR' and a corresponding definition given in the FRT. For
example, the line in the attribute file could be:
.BLANK
.LIT
!
ATTRIBUTE	CONT_HT		HT	F	F	F
!

.END LIT
And the ACD section could be:
.LIT

!
ACD TABLE 4
!
ACD C  1 ADDR_ONE
ACD C  2 ADDR_TWO
ACD C  3 POSTAL_ADDR
ACD C  4 ACCENTS_MASK
ACD I  5 ADDR_QUAL
..
[lines deleted]
..
ACD C 21 HOUSE_STRUCT
ACD I 22 CONT_HT
ACD I 23 HIGH_WATER
..
[lines deleted]
..
ACD C 63 THOROUGHFARE
ACD C 64 CITFTEXT
ACD C 65 UORN

.END LIT
Which would result in AC code 4022 being used to hold the contour height.
.le;^*NTF2I\*#-#The same two default attributes are now recognised by NTF2I
and the same applies as for I2NTF, including the need to set up the FRT and
attribute files.
.le;^*NTF2I\*#-#A new message has been added which reports that a non-default
attribute was undefined in an [ATTDESC] record. This will occur if an attribute
is not a default one, it is defined in the FRT and attribute file and present
in input file, but not defined in an [ATTDESC] record. The message is described
as follows:
.BL
.LM -5
.NOJUSTIFY;.TP 10;.P -4
NOATTDESC, No ATTDESC for non-default attribute, 'descriptor'
.JUSTIFY

.P0; ^*Explanation:\*
An attribute was found which is not defined in an attribute description
([ATTDESC]) record and is not a default attribute. Since its interpretation and
width is unknown, the next attribute cannot be located and so the program
aborted.
.P0; ^*User action:\*
Contact the donor of the data to determine why the data was not in the
expected form. Ensure that each attribute other than default ones are defined
in an [ATTDESC] record, in the attribute file and in the ACD part of the FRT.
.LM +5
.end list 0

.!...........................................................................
.!
.!** this is the end of the main list
.!
.!...........................................................................

.end list
