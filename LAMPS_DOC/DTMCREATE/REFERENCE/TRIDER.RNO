.!******************************************************************************
.!*** First page, introduction                                                     ***
.!******************************************************************************
.PAGE
.BR
^^^*--------------------------------------------------------------------------------\*
.BR
^^^*MODULE#####TRIDER\*
.INDEX TRIDER

.P0
^^^*--------------------------------------------------------------------------------\*
.BR
^^^*REPLACES\*###PANACEA module PANDER

.P0
^^^*--------------------------------------------------------------------------------\*
.HL 2 ^^^*FUNCTION\*

.LEFT MARGIN +10
.P 0 ;TRIDER takes the triangulation node and data files created by TRIANG (or
edited output from TRIEDIT) and produces an output file containing slope
derivatives at each data point in the triangulation. 
.BLANK
.LEFT MARGIN -10
^^^*--------------------------------------------------------------------------------\*
.HL 2 ^^^*FORMAT\*
.INDEX TRIDER> FORMAT
.LEFT MARGIN +10
.P 0;$ TRIDER
.BLANK
.TEST PAGE 9
.LEFT MARGIN -10
^^^*--------------------------------------------------------------------------------\*
.HL 2 ^^^*COMMAND QUALIFIERS\*
.LEFT MARGIN +10
.P 0;None, TRIDER is command driven.
.BLANK
.LEFT MARGIN -10
.SUBTITLE DESCRIPTION
.BLANK 2
^^^*--------------------------------------------------------------------------------\*
.HL 2 ^^^*DESCRIPTION\*
.INDEX TRIDER> DESCRIPTION

.BLANK
^^^*--------------------------------------------------------------------------------\*
.HL 3 ^^^*General\*
.LEFT MARGIN +10
.P 0;TRIDER takes the triangulation node and data files created by TRIANG (or
edited output from TRIEDIT) and produces an output file containing slope
derivatives at each data point in the triangulation. These data may then be
used by TRIGRID in conjunction with the node and data files as the basis for
DTM grid estimation.  Once TRIDER has been used to generate a slope derivative
file many subsequent runs of TRIGRID may be made to produce DTM grids at
differing resolutions. 

.P 0;TRIDER always works on the whole area defined within the triangulation
files.  It is not possible to specify a subset of the data for slope
estimation. This is to allow continuity of slope estimation in edge areas which
may otherwise be impaired if the data area is segmented. 



.INDEX TRIDER>FILE TYPES 
.BLANK 2
^^^*----------------------------------------------------------------------\*
.HL 3 ^^^*TRIDER input and output files\*

.P 0; TRIDER expects as input the binary structured data files (the matched
pair of _.NOD and _.DTA files) produced by TRIANG or TRIEDIT. It produces an
output file containing the slope derivatives estimated for each data point 
contained in the triangulation. 

.P 0;The TRIDER input file specification is used as a generic file-spec for
both input (_.NOD and _.DTA) files and as the source for the TRIDER output file
specification. 

.P 0;Any parts missing from the generic file-specification are taken from the
defaults SYS$DISK:[]_.DTA;0 and  SYS$DISK:[]_.NOD;0. 

.P 0;The specification of the output file has the same device, directory
filename and version number as the input files but is given the extension _.DER.

.P 0;Since it is essential that the file version numbers of the _.NOD, _.DTA 
and _.DER file always match, TRIGRID performs checks on file version numbers.
If mismatches are found, TRIDER complains and aborts execution. 

.P 0;Never use the VAX/VMS RENAME or COPY commands to alter the version numbers
of _.NOD, _.DTA files or _.DER files to make them into a matched set.  TRIDER will
have to be rerun every time that the _.NOD and _.DTA files are modified using
TRIEDIT. 

.P 0;The output files from TRIANG will be scaled to lie between 0 and the value
defined by logical, LSL$DTMCREATE__RESOLUTION, or 300000 if the logical is not
defined. The valid range for this resolution is between 300000 and 10000000.

.P 0;TRIDER uses this logical value to determine the internal resolution of
the _.NOD and _.DTA files.

.NOTE IMPORTANT
It is therefore essential that the logical value LSL$DTMCREATE__RESOLUTION
remains the same when going from TRIANG all the way through to TRIGRID on a
particular dataset. If the resolution is altered between any of the stages,
unpredictable results will occur and programs may fail.
.END NOTE

.LM -10
.P 0;^^^*--------------------------------------------------------------------------------\*
.HL 3 ^^^*TRIDER and imaginary point estimation\*
.LM +10
.BLANK
^^^*----------------------------------------------------------------------\*
.HL 4 ^^^*Imaginary points - a review\*
.P 0;Beyond the edge of the triangulation there lies the abyss where there are
no heights to control the form of the surface. Obviously if the user wishes to
make full use of the triangulated area by gridding up to the very edges, some
sensible estimate must be made of the surface beyond the actual data limits.
The imaginary point frame created by TRIANG helps to remove uncertainty by
providing a cosmetic solution. The imaginary points have location but no Z
value. 

.BLANK 2
^^^*----------------------------------------------------------------------\*
.HL 4 ^^^*Introduction\*
.P 0;One of the functions of TRIDER is to provide Z values for the imaginary
points generated around the edge of the triangulation by TRIANG.  Four
interpolation options are available for imaginary point estimation:
.LIST "o"
.LE ;FIXED - force all imaginary points to take the same fixed height value
.LE ;TREND - (default) - estimate imaginary point heights from a trend surface
.P 0;Interpolation options:
.LE ;BOX - interpolate height from nodes obtained using expanding box search
.LE ;SHELL/NEIGHBOUR - interpolate height from nodes in expanding shells of
neighbours

.END LIST 
.P 0;Limits may be set to the interpolation process used to estimate heights
for the imaginary points which allow upper and lower Z value range clipping. 
This facility may be used, for example, in coastal areas to ensure that no
imaginary point Z value is allowed to go below sea level, ie 0.0. 

.B 2
^^^*----------------------------------------------------------------------\*
.HL 4 ^^^*Imaginary point heights as fixed values\*

.P 0;The fixed option assumes that the user wishes the surface to decline to
some fixed value all the way around the edge of the triangulated area at some
distance (yet to be determined) from the main grid coverage. By using the FIXED
option the user can specify the value to be used for the imaginary point Z
values. TRIDER will then automatically insert this value at all imaginary point
locations and will also insert zero partial derivatives at each of the
imaginary points.  This will have the effect of making the surface flatten to a
plane by the time that the imaginary points are reached. This plane will be
horizontal because the derivatives have been set to zero. 

.B2
^^^*----------------------------------------------------------------------\*
.HL 4 ^^^*Imaginary point height estimation using the trend surface option (default)\*
.P 0;Quite often the user will not have any idea what individual values to give
the imaginary points but will know that he does not want a fixed horizontal
plane at the edge of his data. The second (startup default) solution therefore
is to assign the values of the imaginary points to be those calculated from a
linear trend surface fitted through all the data points in the interpolation
area. The derivatives assigned to the imaginary points will then be those
partial derivatives estimated for the plane itself. Thus if the data set has a
definite trend (for instance increasing in height to the south west) this
option would produce an equivalent trend in the heights of the imaginary
points. 

.BLANK 2
^^^*----------------------------------------------------------------------\*
.HL 4 ^^^*Imaginary point height estimation using interpolation options\*

.P 0;There are two alternative options for the estimation of imaginary
point values based on "reasonably" close data points. 

.LIST "o"
.LE ;BOX 
.LE ;SHELL/NEIGHBOUR 
.END LIST 

.P 0;Four interpolation techniques are offered for the BOX and SHELL/NEIGHBOUR 
interpolation options:
.BR
.LIST 
.LE ; Unweighted,
.LE ; linear,
.LE ; quadratic, or,
.LE ; quartic.
.END LIST 

.P 0;
.LIST  "o"

.LE ;IMAGINARY BOX - This option performs a distance weighted interpolation
based on points discovered by means of an expanding hollow box search. The box
search is in turn based around the box structure generated by TRIANG. The
interpolation is formed by standard methods. The box size expands automatically
until sufficient points have been discovered. This method is probably most
applicable to genuinely variable data of the seismic or non-contour type.  If
spot heights form a large proportion of the data set or any other irregularly
distributed data is used, the box option should be chosen as it will provide a
very smooth edge around the data area. 


.LE ;IMAGINARY SHELL/NEIGHBOUR - The method of collection of data points
employed is that of successively finding the neighbours of the point in
question by running through the triangular node/neighbour data structure
created by program TRIANG and stored in a file. The process can be thought of as
that of picking up points in a series of layers. Thus the first layer consists
of the neighbours of the point itself. The second layer contains the neighbours
of the neighbours that have been picked up but not including any previously
found points. This process could obviously continue until all data points in
the data set have been found! 

.P 0;A height for every imaginary point will then be estimated using
a specified weighting function, using the
neighbours that have been found. If an insufficient number of real neighbours
has been found then the program will automatically search deeper into the data 
structure. 

.END LIST 
.BLANK 2
.P 0;^*----------------------------------------------------------------------\*
.HL 2 ^^^*Imaginary point relocation\*

.INDEX TRIDER>Imaginary points>relocation

.P 0;All imaginary points are capable of relocation by a factor from 0
to 1 (the maximum grid dimension). This can be very useful if one wishes
to produce a grid of a larger area than the triangulation covers. By
positioning the imaginary points out as far as possible (ie by choosing
1) the area of coverage of the triangulation is effectively extended by
a factor of nearly 9. Of course this does nothing for the quality of the
map as such but does ensure that some sort of "reasonable" surface value
will be put in these regions that are very distant from real data. If
the extension is not sufficiently far then default values will be
inserted into the grid which can later be altered by the user to the
default of his choice. 

.P 0;When the FIXED or TREND options have been chosen it is sensible to 
locate the imaginary points reasonably far away from the edge of the
grid. This is necessary to ensure that the surface has a fairly flexible
approach to reaching the imaginary point values. In areas where the
surface is not close to the trend or fixed value it needs room to
manoeuvre itself to these values! 
If an interpolation option has been chosen for the imaginary points then
in most cases it will be sensible, if not vital, to keep the imaginary points
close to the grid itself. This ensures that the imaginary points are most
closely controlled by those points falling closest to them. 



.BLANK 2
.LM -10
^*--------------------------------------------------------------------------------\*
.HL 2 ^^^*TRIDER graphics output option\*
.LM +10
.P 0;TRIDER offers the user graphics output of the type offered by TRIANG and
TRIGRID. The progress of imaginary and fixed point derivative estimation
may then be watched. The convoluted process of imaginary point derivative and
height estimation using the shell/neighbour approach may be observed! The
graphics option is a useful aid for instruction or for the analysis 
of troublesome data sets. 




.BLANK

.!******************************************************************************
.!*** Commands                                                                     ***
.!******************************************************************************
.LEFT MARGIN -10
^^^*--------------------------------------------------------------------------------\*
.PAGE
.SUBTITLE
.FIGURE 5
.STYLE HEADERS ,,,,1
.HL 2 ^^^*TRIDER_ commands\*
.STYLE HEADERS ,,,,7

.!******************************************************************************
.PAGE
.SUBTITLE _@ command
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*_@\*
.INDEX TRIDER> commands> _@
.INDEX TRIDER> _@ command

.LEFT MARGIN +8
.P0; Take command input from the specified file.
.LEFT MARGIN -8

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*FORMAT:######_@file-spec_<CR_>\*


.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Command parameters:\*

.LEFT MARGIN +8
.P-8;file-spec
.P 0;The file to be opened and used for command input.

.P 0;Any parts of the file-spec not supplied for the @ command will be 
taken from the default specification 'SYS$DISK:[].COM;0'.
.LEFT MARGIN -8

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*DESCRIPTION:\*
.P0; TRIDER offers the facility of command input from an indirect command file.
The '@' character preceding a file-spec will cause TRIDER to open and read
commands from the specified file until:
.LIST
.LE ;a RETURN command is detected and command input is returned to SYS$COMMAND.
.LE ;a GO command is detected - after completion of derivative estimation
TRIDER exits.
.LE ;end-of-file is detected. This provokes an error message and command input
is returned to SYS$COMMAND. 
.END LIST 

.P 0;Nested command files are not supported (i.e. a command file containing an
'@' command), although sequential '@' commands are supported when read from
SYS$COMMAND.

.P 0;As an aid to batch log interpretation TRIDER will echo all commands read
from an indirect command file. 
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Messages:\*

.P 0;The following messages are specific to the _@ command:

.P 0;_*_*_*_ WARNING_ _*_*_*_ "@" must precede a file-spec
.BL;_*_*_*_ WARNING_ _*_*_*_ Indirect file error - returning to terminal input
.BL;_*_*_*_ ERROR_ _*_*_*_ Can't open indirect command file 'file-spec'


.TEST PAGE 8
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Examples:\*
.BLANK
.BR;$ ^*TRIDER_<CR_>\*
.BR;DTMCREATE module TRIDER of 16:30:12  20-NOV-87
.BR;TRIDER> ^*@FLOW2_<CR_>\*
.BR;TRIDER> ENABLE DIAGNOSTICS
.BR;TRIDER> ENABLE GRAPHICS
.BR;TRIDER> IMAGINARY FIXED 0.0 1.0
.BR;TRIDER> RETURN
.BR;TRIDER>


.!******************************************************************************
.PAGE
.SUBTITLE _! command
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*_!\*
.INDEX TRIDER> commands> _!
.INDEX TRIDER> _! command

.LEFT MARGIN +8
.P0; Treat all text to the right of the '!' as a comment.
.LEFT MARGIN -8

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*FORMAT:######_! [comment text]

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Command parameters:\*

.LEFT MARGIN +8
.P-8;comment text
.P0; text that is to be treated as a comment and which will be excluded from
command interpretation.
.LEFT MARGIN -8

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*DESCRIPTION:\*
.P0; An exclamation mark is the standard DTM package comment delimiter. All 
text (and numbers) which lie to the right of a '!' character are excluded from 
command interpretation. Comments are useful for annotating command procedures
used in batch processing etc_.


.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Messages:\*_ None.


.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Examples:\*
.BLANK
.BR;TRIDER> ^*_! a comment for the sake of it_<CR_>\*
.BR;TRIDER> ^*ENABLE GRAPHICS ! turn graphics on_<CR_>\*
.BR;TRIDER> ^*! get files and estimate the derivatives<CR_>\*
.BR;TRIDER> ^*FILEIN DUA0:[TESTDATA]IDAHO_<CR_>\*
.BR;_.DTA file DUA3:[DEMONSTRATION]IDAHO_.DTA;15 opened for read
.BR;_.NOD file DUA3:[DEMONSTRATION]IDAHO_.NOD;15 opened for read
.BR;_.DER file DUA3:[DEMONSTRATION]IDAHO_.DER;15 opened for write
.BR;TRIDER> ^*GO_<CR_>\*
.BR;#ELAPSED: 00:05:25.84  CPU: 0:00:05.71  BUFIO: 281  DIRIO: 46  FAULTS: 263 
.BR;_$

.!******************************************************************************
.PAGE
.SUBTITLE DISABLE DIAGNOSTICS command
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*DISABLE DIAGNOSTICS\*
.INDEX TRIDER> commands> DISABLE DIAGNOSTICS
.INDEX TRIDER> DISABLE DIAGNOSTICS command

.LEFT MARGIN +8
.P 0;Disables a previous ENABLE DIAGNOSTICS command. 

.LEFT MARGIN -8

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*FORMAT:######DISABLE DIAGNOSTICS \*


.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Command parameters:\*_ None.

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*DESCRIPTION:\*
.P 0;DISABLE DIAGNOSTICS allows the user to cancel the effect of a previous 
ENABLE DIAGNOSTICS command.


.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Messages:\*_ None.

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Examples:\*
.BLANK
.BR;TRIDER> ^*ENABLE DIAGNOSTICS_<CR_>\*
.BR;TRIDER> ^*SHOW ENABLE_<CR_>\*
.BR;DIAGNOSTICS ............................................... On
.BR;GRAPHICS .................................................. Off
.BR;PME ....................................................... Off
.BR;TRIDER> ^*DISABLE DIAGNOSTICS_<CR_>\*
.BR;TRIDER> ^*SHOW ENABLE_<CR_>\*
.BR;DIAGNOSTICS ............................................... Off
.BR;GRAPHICS .................................................. Off
.BR;PME ....................................................... Off
.BR;TRIDER>




.!******************************************************************************
.PAGE
.SUBTITLE DISABLE GRAPHICS command
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*DISABLE GRAPHICS\*
.INDEX TRIDER> commands> DISABLE GRAPHICS
.INDEX TRIDER> DISABLE GRAPHICS command

.LEFT MARGIN +8
.P 0;Disables any previous ENABLE GRAPHICS command.
.LEFT MARGIN -8

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*FORMAT:######DISABLE GRAPHICS\*


.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Command parameter:\*_ None.


.P0
^*--------------------------------------------------------------------------------\*
.BR;^*DESCRIPTION:\*

.P 0;The DISABLE GRAPHICS command cancels the effect of a previous
ENABLE GRAPHICS command.

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Messages:\*_ None.

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Examples:\*
.BLANK
.BR;$ ^*TRIDER_<CR_>\*
.BR;DTMCREATE module TRIDER of 13:30:39  20-AUG-87
.BR;TRIDER> ^*SHOW ENABLE_<CR_>\*
.BR;DIAGNOSTICS ............................................... Off
.BR;GRAPHICS .................................................. Off
.BR;PME ....................................................... Off
.BR;TRIDER> ^*ENABLE GRAPHICS_<CR_>\*
.BR;TRIDER> ^*SHOW ENABLE_<CR_>\*
.BR;DIAGNOSTICS ............................................... Off
.BR;GRAPHICS .................................................. On
.BR;PME ....................................................... Off
.BR;TRIDER>


.!******************************************************************************
.PAGE
.SUBTITLE DISABLE PME command
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*DISABLE PME\*
.INDEX TRIDER> commands> DISABLE PME
.INDEX TRIDER> DISABLE PME command

.LEFT MARGIN +8
.P0;DISABLE PME disables the effect of a previous ENABLE PME command.
.LEFT MARGIN -8

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*FORMAT:######DISABLE PME \*


.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Command parameters:\*_ None.

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*DESCRIPTION:\*
.P0; The ENABLE PME and DISABLE PME commands are reserved for Laser-Scan use.
PME is a code optimisation tool and should be invoked by LSL software personnel
only. 

.P0;DISABLE PME disables the effect of a previous ENABLE PME command and
causes the PME__EXIT routine to be invoked.


.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Message:\*

.P 0;The following warning message is specific to the DISABLE PME command:

.P 0;_*_*_* WARNING _*_*_* You were not using PME anyway!

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Examples:\*
.BLANK
.BR;$ ^*TRIDER_<CR_>\*
.BR;DTMCREATE module TRIDER of 13:30:39  20-AUG-87
.BR;TRIDER> ^*ENABLE PME ! turn PME on_<CR_>\*
.BR;TRIDER> ^*DISABLE PME ! turn it off again!!_<CR_>\*
.BR;TRIDER> ^*FILEIN FAITH_<CR_>\*
.BR;_.DTA file DUA3:[DEMONSTRATION]FAITH_.DTA;15 opened for read
.BR;_.NOD file DUA3:[DEMONSTRATION]FAITH_.NOD;15 opened for read
.BR;_.DER file DUA3:[DEMONSTRATION]FAITH_.DER;15 opened for write
.BR;TRIDER> ^*GO_<CR_>\*
.BR;#ELAPSED: 00:05:25.84  CPU: 0:00:05.71  BUFIO: 281  DIRIO: 46  FAULTS: 263 
.BR;_$


.!******************************************************************************
.PAGE
.SUBTITLE ENABLE DIAGNOSTICS command
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*ENABLE DIAGNOSTICS\*
.INDEX TRIDER> commands> ENABLE DIAGNOSTICS
.INDEX TRIDER> ENABLE DIAGNOSTICS command

.LEFT MARGIN +8
.P 0;ENABLE DIAGNOSTICS allows the user to enable diagnostic printout.
.LEFT MARGIN -8

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*FORMAT:######ENABLE DIAGNOSTICS \*


.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Command parameters:\*_ None.

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*DESCRIPTION:\*
.P 0;ENABLE DIAGNOSTICS allows the user to enable diagnostic printout.

.P0; Because it is usually used in a batch processing environment, by default
TRIDER produces minimal diagnostic printout. If however, the user wishes to
receive indications of processing progress and of the effect of selections on
data input, diagnostic printout may be selected with the ENABLE DIAGNOSTICS 
command.


.P 0;It should be noted that if DIAGNOSTICS are enabled, TRIDER can produce
voluminous printout.

.P 0;If SYS$OUTPUT is directed to a video screen terminal, messages
indicating percentage progress are issued. 

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Messages:\*_ None.

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Examples:\*
.BLANK
.BR;TRIDER> ^*ENABLE DIAGNOSTICS_<CR_>\*
.BR;TRIDER> ^*SHOW ENABLE_<CR_>\*
.BR;DIAGNOSTICS ............................................... On
.BR;GRAPHICS .................................................. Off
.BR;PME ....................................................... Off
.BR;TRIDER> ^*DISABLE DIAGNOSTICS_<CR_>\*
.BR;TRIDER> ^*SHOW ENABLE_<CR_>\*
.BR;DIAGNOSTICS ............................................... Off
.BR;GRAPHICS .................................................. Off
.BR;PME ....................................................... Off
.BR;TRIDER>




.!******************************************************************************
.PAGE
.SUBTITLE ENABLE GRAPHICS command
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*ENABLE GRAPHICS\*
.INDEX TRIDER> commands> ENABLE GRAPHICS
.INDEX TRIDER> ENABLE GRAPHICS command

.LEFT MARGIN +8
.P0; Enable TRIDER graphics output.
.LEFT MARGIN -8

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*FORMAT:######ENABLE GRAPHICS\*


.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Command parameters:#None.\*


.P0
^*--------------------------------------------------------------------------------\*
.BR;^*DESCRIPTION:\*
.P0; TRIDER offers the option to generate graphic output to indicate
processing progress. By default graphic output is disabled. To
prevent a user selecting graphics when it is inappropriate to the
current terminal, TRIDER uses a lookup table of terminal characteristics
associated with all available terminal lines (see Appendix 1). An invalid
graphics selection will result in a warning message and the default NO GRAPHICS
option being selected. 

.P 0;Graphics selection may be cancelled with the DISABLE GRAPHICS command.

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Messages:\*

.P 0;The following messages are specific to the ENABLE GRAPHICS command:
.NO FILL

_*_*_* ERROR  _*_*_*_ reading lookup file at line 'integer'
_*_*_* WARNING _*_*_*_ Unable to open "LSL$LOOKUP:TERMTYPE.DAT"
Sorry 'name' terminal  'terminal-ident' isn't in the lookup table
Sorry 'name' terminal 'terminal-ident' can't support graphics
_*_*_* ERROR  _*_*_*_ translating logical name LSL$DTMCREATETERMINAL
.FILL
.TEST PAGE 8
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Examples:\*
.BLANK
.BR;$ ^*TRIDER_<CR_>\*
.BR;DTMCREATE module TRIDER of 13:30:39  20-AUG-87
.BR;TRIDER> ^*SHOW ENABLE_<CR_>\*
.BR;DIAGNOSTICS ............................................... Off
.BR;GRAPHICS .................................................. Off
.BR;PME ....................................................... Off
.BR;TRIDER> ^*ENABLE GRAPHICS <CR_>\*
.BR;TRIDER> ^*SHOW ENABLE_<CR_>\*
.BR;DIAGNOSTICS ............................................... Off
.BR;GRAPHICS .................................................. On
.BR;PME ....................................................... Off
.BR;TRIDER> ^*DISABLE GRAPHICS_<CR_>\*
.BR;TRIDER> ^*SHOW ENABLE_<CR_>\*
.BR;DIAGNOSTICS ............................................... Off
.BR;GRAPHICS .................................................. Off
.BR;PME ....................................................... Off
.BR;TRIDER>



.!******************************************************************************
.PAGE
.SUBTITLE ENABLE PME command
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*ENABLE PME\*
.INDEX TRIDER> commands> ENABLE PME
.INDEX TRIDER> ENABLE PME command

.LEFT MARGIN +8
.P0;ENABLE PME enables the PME performance monitor.
.LEFT MARGIN -8

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*FORMAT:######ENABLE PME \*


.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Command parameters:\*_ None.

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*DESCRIPTION:\*
.P0; The ENABLE PME and DISABLE PME commands are reserved for Laser-Scan use.
PME is a code optimisation tool and should be invoked by LSL software personnel
only. 

.P0;ENABLE PME causes the PME__INIT routine to be invoked.


.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Message:\*

.P 0;The following warning message is specific to the ENABLE PME command:

.P 0;_*_*_* WARNING _*_*_* You are already using PME!

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Examples:\*
.BLANK
.BR;$ ^*TRIDER_<CR_>\*
.BR;DTMCREATE module TRIDER of 13:30:39  20-AUG-87
.BR;TRIDER> ^*ENABLE PME_<CR_>\*
.BR;TRIDER> ^*FILEIN FAITH_<CR_>\*
.BR;_.DTA file DUA3:[DEMONSTRATION]FAITH_.DTA;15 opened for read
.BR;_.NOD file DUA3:[DEMONSTRATION]FAITH_.NOD;15 opened for read
.BR;_.DER file DUA3:[DEMONSTRATION]FAITH_.DER;15 opened for write
.BR;TRIDER> ^*GO_<CR_>\*
.BR;#ELAPSED: 00:05:25.84  CPU: 0:00:05.71  BUFIO: 281  DIRIO: 46  FAULTS: 263 
.BR;_$




.!******************************************************************************
.PAGE
.SUBTITLE FILEIN command
.INDEX TRIDER> commands> FILEIN
.INDEX TRIDER> FILEIN command
.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*FILEIN\*

.LEFT MARGIN +8
.P 0;Specifies the generic (_.DTA and _.NOD) file-spec that is to be used for
input. 
.LEFT MARGIN -8

.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*FORMAT:######FILEIN file-spec
.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*COMMAND PARAMETERS:\*
.LEFT MARGIN +8
.P-8;file-spec
.P 0;The generic specification of the _.NOD and _.DTA files to be opened for data
input. 
.P 0;All components of the supplied file-spec are used to form the input
file specifications but with the substitution of the extensions _.NOD
and _.DTA and version number ';0', i.e. latest version (shared by both files).

.P 0;The default file-spec used to make up missing parts of the
FILEIN file-spec parameter is dependent on the status of logical name 
LSL$DTMCREATE__WORK.

.P 0;If logical name LSL$DTMCREATE__WORK is defined, DTMCREATE utilities
translate the logical name to get the default file-spec for input and output
of triangulation files. The logical name should be defined to provide
a device and directory name only. The DTMCREATE programs themselves
provide the default filename and extension fields of the specification.
For example, a valid definition of logical name LSL$DTMCREATE__WORK is:
.P 0;_$ DEFINE LSL$DTMCREATE__WORK LSL$DATA__ROOT:[LSL.DTMCREATE]

.P 0;This mechanism allows all DTMCREATE triangulation files to be stored
in a central directory, rather than scattered in many different user 
directories. It thus mimics the use of logical names LSL$IF for IFF files
and LSL$DTI for DTI files.

.P 0;If the logical name is not defined, any parts of the file-spec not
supplied for the FILEIN command will be taken from the defaults
'SYS$DISK:[]_.NOD;0' and 'SYS$DISK:[]_.DTA;0'. These defaults result in the
files being searched for in your current default directory, set using the
VMS SET DEFAULT or Laser-Scan SD commands. 

.LEFT MARGIN -8
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*DESCRIPTION:\*
.P 0; TRIDER expects as input the 2 binary structured data files (the matched
pair of _.NOD and _.DTA files) produced by TRIANG or TRIEDIT. It produces an
output file containing the slope derivatives estimated for each data point 
contained in the triangulation. 

.P 0;The specification of the output file has the same device, directory
filename and version number as the input files but is given the extension _.DER.

.P 0;Since it is essential that the file version numbers of the _.NOD, _.DTA 
and _.DER file always match, TRIGRID performs checks on file version numbers.
If mismatches are found, TRIDER complains and aborts execution. 
Similarly, an error occurs if TRIDER attempts to create a new _.DER file which
has a version number which already exists. 

.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*Messages:\*

.P0; The following messages are specific to the FILEIN command:

.P 0;_*_*_*_ WARNING_ _*_*_*_ You must specify a file-spec argument to the FILEIN command
.BR;                    For example FILEIN SWAREA
.BR;_*_*_*_ ERROR_ _*_*_*_ Unable to interpret input file-spec
.P 0;_*_*_*_ ERROR_ _*_*_*_ opening input file
.P0;_.DTA file 'file-spec' opened for read
.BR;_.NOD file 'file-spec' opened for read
.BR;_.DER file 'file-spec' opened for write
.FILL

.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*Examples:\*
.BLANK
.BR;TRIDER> ^^^*FILEIN DUA3:[DEMONSTRATION]IDAHO_<CR_>\*
.BR;_.DTA file DUA3:[DEMONSTRATION]IDAHO_.DTA;15 opened for read
.BR;_.NOD file DUA3:[DEMONSTRATION]IDAHO_.NOD;15 opened for read
.BR;_.DER file DUA3:[DEMONSTRATION]IDAHO_.DER;15 opened for write
.BR;TRIDER> 


.!******************************************************************************
.PAGE
.SUBTITLE GO command
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*GO\*
.INDEX TRIDER> commands> GO
.INDEX TRIDER> GO command

.LEFT MARGIN +8
.P0; Initiates the processing of the data read in using FILEIN commands.
.LEFT MARGIN -8

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*FORMAT:######GO\*


.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Command parameters:\*_ None.

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*DESCRIPTION:\*
.P0; When all necessary files have been read in the GO command will
commence the gridding process. Unless relatively small data-sets are being
handled (say less then 50,000 data points) it is strongly recommended that
TRIDER is run in batch mode at an off-peak time. 

.P 0;When grid creation is complete, TRIDER closes the output DTI file
and then exits.

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Messages:\*

.P 0;Once the GO command has been issued no more conversational
messages of the _*_*_* WARNING _*_*_* format will be issued. Any messages
will relate to serious processing problems and will normally result in abnormal
TRIDER termination. The messages relating to non-interactive processing
problems are presented at the end of this document.
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Examples:\*
.BLANK
.BR;TRIDER> ^*GO_<CR_>\*
.P 0; ELAPSED:    0 00:05:21.82  CPU: 0:00:01.40  BUFIO: 51  DIRIO: 15  FAULTS: 170 
.BR;$

.!******************************************************************************
.PAGE
.SUBTITLE HELP command
.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*HELP\*
.INDEX TRIDER> commands> HELP
.INDEX TRIDER> HELP command

.LEFT MARGIN +8
.P0; Give help on a subject
.LEFT MARGIN -8

.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*FORMAT:######HELP subject\*


.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*Command parameters:\*

.LEFT MARGIN +8
.P-8;subject
.P0; The subject on which help is required
.LEFT MARGIN -8

.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*Description:\*
.P0; The HELP command looks the rest of the line up in the DTMCREATE HELP
library. This library contains a brief summary of the operation of each
command. 

.P0; The information is looked up in the TRIDER section of the DTMCREATE help
library, LSL$HELP:DTMCREATE.HLB.


.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*Messages:\*

.P 0;Where required, warning messages are output via the VMS LBR$OUTPUT__HELP
utility.

.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*Examples:\*
.BLANK
.BR;TRIDER> ^^^*HELP RETURN_<CR_>\*

.P0;RETURN
.LEFT MARGIN +3
.P 0;Restores command input from an indirect file to SYS$COMMAND.

.P 0;A typical application is to allow the user to use an indirect command file
to set up those run time defaults which are constant within a flowline and then
return to input from the terminal (or batch stream) for the run specific
commands. To do this RETURN must be the last command in the indirect command
file. 

.LEFT MARGIN -3
.P 0;TRIDER> 

.!******************************************************************************
.PAGE
.SUBTITLE IMAGINARY BOX command
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*IMAGINARY BOX\*
.INDEX TRIDER> commands> IMAGINARY BOX 
.INDEX TRIDER> IMAGINARY BOX command

.LEFT MARGIN +8
.P0; The IMAGINARY BOX command specifies interpolation of imaginary point
heights on the basis of known heights found using an expanding hollow box
search. 
.LEFT MARGIN -8

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*FORMAT:######IMAGINARY BOX interpolation reloc \*


.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Command parameters:\*
.LM +8
.P -8;interpolation
.P 0;A keyword argument specifying the type of interpolation to be used, chosen from:
.LIST "o"
.LE ;LINEAR
.LE ;UNWEIGHTED
.LE ;QUADRATIC
.LE ;QUARTIC
.END LIST 
.P -8;reloc
.P 0;The imaginary point relocation proportion (in the range 0.0 to 1.0)
.LM -8

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*DESCRIPTION:\*
.P 0;This imaginary point height estimation option performs a distance weighted
interpolation based on points discovered by means of an expanding hollow box
search. The box search is in turn based around the box structure generated by
TRIANG. The interpolation is formed by standard methods. The box size expands
automatically until sufficient points have been discovered. This method is
probably most applicable to genuinely variable data of the seismic or non
contour type.  If spot heights form a large proportion of the data set or any
other irregularly distributed data is used, the box option should be chosen as
it will provide a very smooth edge around the data area. 

.BLANK
.P 0;^^^*IMAGINARY BOX and imaginary point relocation\*
.P 0;As an interpolation option has been chosen for the imaginary points then
in most cases it will be sensible, if not vital, to keep the imaginary points
close to the grid itself. This ensures that the imaginary points are most
closely controlled by those points falling closest to them. Thus set the
imaginary point relocation proportion to 0.0 or close to 0.0. 
.TP 10

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Messages:\*
.P 0;_*_*_*_ WARNING_ _*_*_*_ Please use the IMAGINARY command again and choose from FIXED
.BR;##################TREND, BOX or SHELLNEIGHBOUR as the first command argument.
.BR;##################The default method of imaginary point estimation is
.BR;##################'method', which remains unchanged
.P 0;_*_*_*_ ERROR_ _*_*_*_ Missing IMAGINARY command arguments
.P 0;_*_*_*_ ERROR_ _*_*_*_ Missing weighting function name
.P 0;_*_*_*_ WARNING_ _*_*_*_ "LINEAR" interpolation selected by default
.P 0;_*_*_*_ ERROR_ _*_*_*_ Missing relocation proportion
.P 0;_*_*_*_ ERROR_ _*_*_*_ Reading relocation proportion
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Examples:\*
.BLANK
.BR;TRIDER> ^*IMAGINARY BOX QUARTIC 0.0_<CR_>\*
.BR;TRIDER> 


.!******************************************************************************
.PAGE
.SUBTITLE IMAGINARY FIXED command
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*IMAGINARY FIXED\*
.INDEX TRIDER> commands> IMAGINARY FIXED 
.INDEX TRIDER> IMAGINARY FIXED command

.LEFT MARGIN +8
.P0; The IMAGINARY FIXED command specifies that imaginary point heights
should be fixed at a specified constant value. 
.LEFT MARGIN -8

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*FORMAT:######IMAGINARY FIXED fixval reloc \*


.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Command parameters:\*
.LM +8
.P -8;fixval
.P 0;A constant height value to be used for all imaginary points.
.P -8;reloc
.P 0;The imaginary point relocation proportion (in the range 0.0 to 1.0)
.LM -8

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*DESCRIPTION:\*
.P 0;The fixed option assumes that the user wishes the surface to decline to
some fixed value all the way around the edge of the triangulated area at some
distance (yet to be determined) from the main grid coverage. By using the FIXED
option the user can specify the value to be used for the imaginary point Z
values. TRIDER will then automatically insert this value at all imaginary point
locations and will also insert zero partial derivatives at each of the
imaginary points.  This will have the effect of making the surface flatten to a
plane by the time that the imaginary points are reached. This plane will be
horizontal because the derivatives have been set to zero. 


.P 0;^^^*IMAGINARY FIXED and imaginary point relocation\*

.P 0;When the IMAGINARY FIXED option is chosen, it is sensible to locate the
imaginary points reasonably far away from the edge of the grid. This is
necessary to ensure that the surface has a fairly flexible approach to reaching
the imaginary point values. In areas where the surface is not close to the
fixed value it needs room to manoeuvre itself to these values! 


.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Messages:\*
.P 0;_*_*_*_ WARNING_ _*_*_*_ Please use the IMAGINARY command again and choose from FIXED
.BR;##################TREND, BOX or SHELLNEIGHBOUR as the first command argument.
.BR;##################The default method of imaginary point estimation is
.BR;##################'method', which remains unchanged
.P 0;_*_*_*_ ERROR_ _*_*_*_ Missing IMAGINARY command arguments
.P 0;_*_*_*_ ERROR_ _*_*_*_ Missing relocation proportion
.P 0;_*_*_*_ ERROR_ _*_*_*_ Reading relocation proportion
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Examples:\*
.BLANK
.BR;TRIDER> ^*IMAGINARY FIXED 0.0 1.0_<CR_>\*
.BR;TRIDER> 

.!******************************************************************************
.PAGE
.SUBTITLE IMAGINARY SHELLNEIGHBOUR command
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*IMAGINARY SHELLNEIGHBOUR\*
.INDEX TRIDER> commands> IMAGINARY SHELLNEIGHBOUR 
.INDEX TRIDER> IMAGINARY SHELLNEIGHBOUR command

.LEFT MARGIN +8
.P0; The IMAGINARY SHELLNEIGHBOUR command specifies interpolation of imaginary
point heights on the basis of known heights of nodes found in expanding shells
of neighbours 

.LEFT MARGIN -8

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*FORMAT:######IMAGINARY SHELLNEIGHBOUR interpolation reloc \*


.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Command parameters:\*
.LM +8
.P -8;interpolation
.P 0;A keyword argument specifying the type of interpolation to be used, chosen from:
.LIST "o"
.LE ;LINEAR
.LE ;UNWEIGHTED
.LE ;QUADRATIC
.LE ;QUARTIC
.END LIST 
.P -8;reloc
.P 0;The imaginary point relocation proportion (in the range 0.0 to 1.0)
.LM -8

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*DESCRIPTION:\*

.P 0;IMAGINARY SHELL/NEIGHBOUR - The method of collection of data points
employed is that of successively finding the neighbours of the point in
question by running through the triangular node/neighbour data structure
created by program TRIANG and stored in a file. The process can be thought of as
that of picking up points in a series of layers. Thus the first layer consists
of the neighbours of the point itself. The second layer contains the neighbours
of the neighbours that have been picked up but not including any previously
found points. This process could obviously continue until all data points in
the data set have been found! 

.P 0;A height for every imaginary point will then be estimated using
a specified weighting function, using the
neighbours that have been found. If an insufficient number of of real neighbours
has been found then the program will automatically search deeper into the data 
structure. 

.P 0;If any of the first layer neighbours contain points marked as
discontinuous during the initial data formation stage at the beginning of
TRIANG then a further search is made. This checks whether any layer 1 adjacent
neighbours are: 
.LIST "o"
.LE ;discontinuous, and,
.LE ;have the same z value. 
.END LIST 
.P 0;If so then the interpolation point is assigned the same value as
these. The reason for this is that it is quite possible that there will be flat
plateau-like areas on a contour map which should remain flat at the edges of a
map. Usually, and hopefully, there will be control points in these flat areas
at the edges to help the automatic calculation process along.  But sometimes
this can be difficult and hence this check for discontinuous points is an
attempt to ensure locally that the imaginary points are biased towards
representing locally flat discontinuous structures. 

.P 0;^^^*IMAGINARY SHELLNEIGHBOUR and imaginary point relocation\*

.P 0;As an interpolation option has been chosen for the imaginary points then
in most cases it will be sensible, if not vital, to keep the imaginary points
close to the grid itself. This ensures that the imaginary points are most
closely controlled by those points falling closest to them. Thus set the
imaginary point relocation proportion to 0.0 or close to 0.0. 



.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Messages:\*
.P 0;_*_*_*_ WARNING_ _*_*_*_ Please use the IMAGINARY command again and choose from FIXED
.BR;##################TREND, BOX or SHELLNEIGHBOUR as the first command argument.
.BR;##################The default method of imaginary point estimation is
.BR;##################'method', which remains unchanged '
.P 0;_*_*_*_ ERROR_ _*_*_*_ Missing IMAGINARY command arguments
.P 0;_*_*_*_ ERROR_ _*_*_*_ Missing weighting function name
.P 0;_*_*_*_ WARNING_ _*_*_*_ "LINEAR" interpolation selected by default
.P 0;_*_*_*_ ERROR_ _*_*_*_ Missing relocation proportion
.P 0;_*_*_*_ ERROR_ _*_*_*_ Reading relocation proportion
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Examples:\*
.BLANK
.BR;TRIDER> ^*IMAGINARY SHELLNEIGHBOUR QUADRATIC 0.0_<CR_>\*
.BR;TRIDER> 


.!******************************************************************************
.PAGE
.SUBTITLE IMAGINARY TREND command
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*IMAGINARY TREND\*
.INDEX TRIDER> commands> IMAGINARY TREND 
.INDEX TRIDER> IMAGINARY TREND command

.LEFT MARGIN +8
.P0; The IMAGINARY TREND command specifies estimation of imaginary point
height values from a trend surface fitted through the known node heights.
.LEFT MARGIN -8

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*FORMAT:######IMAGINARY TREND reloc \*


.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Command parameters:\*
.LM +8
.P -8;reloc
.BR;The imaginary point relocation proportion (in the range 0.0 to 1.0)
.LM -8
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*DESCRIPTION:\*

.P 0;Quite often the user will not have any idea what individual values to give
the imaginary points but will know that he does not want a fixed horizontal
plane at the edge of his data. The default IMAGINARY option therefore
is to assign the values of the imaginary points to be those calculated from a
linear trend surface fitted through all the data points in the interpolation
area. The derivatives assigned to the imaginary points will then be those
partial derivatives estimated for the plane itself. Thus if the data set has a
definite trend (for instance increasing in height to the south west) this
option would produce an equivalent trend in the heights of the imaginary
points. 

.P 0;^^^*IMAGINARY TREND and imaginary point relocation\*


.P 0;When the IMAGINARY TREND option is chosen, it is sensible to locate the
imaginary points reasonably far away from the edge of the grid. This is
necessary to ensure that the surface has a fairly flexible approach to reaching
the imaginary point values. In areas where the surface is not close to the
trend value it needs room to manoeuvre itself to these values! 




.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Messages:\*
.P 0;_*_*_*_ WARNING_ _*_*_*_ Please use the IMAGINARY command again and choose from FIXED
.BR;##################TREND, BOX or SHELLNEIGHBOUR as the first command argument.
.BR;##################The default method of imaginary point estimation is
.BR;##################'method', which remains unchanged '
.P 0;_*_*_*_ ERROR_ _*_*_*_ Missing IMAGINARY command arguments
.P 0;_*_*_*_ ERROR_ _*_*_*_ Missing relocation proportion
.P 0;_*_*_*_ ERROR_ _*_*_*_ Reading relocation proportion
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Examples:\*
.BLANK
.BR;TRIDER> ^*IMAGINARY TREND 1.0_<CR_>\*
.BR;TRIDER> 

.!******************************************************************************
.PAGE
.SUBTITLE PAUSE command
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*PAUSE\*
.INDEX TRIDER> commands> PAUSE
.INDEX TRIDER> PAUSE command

.LEFT MARGIN +8
.P0; Pauses TRIDER execution.
.LEFT MARGIN -8

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*FORMAT:######PAUSE \*


.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Command parameters:\*_ None.


.P0
^*--------------------------------------------------------------------------------\*
.BR;^*DESCRIPTION:\*
.P0; Pauses TRIDER execution and issues a prompt for a carriage return to
continue execution. This command is designed for use in software demonstration
situations.


.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Messages:\*_ None.


.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Examples:\*
.BLANK
.BR;TRIDER> ^*PAUSE_<CR_>\*
.BLANK
.BLANK
.BR;Press <RETURN> to continue^*_<CR_>\*
.BR;TRIDER> 






.!******************************************************************************
.PAGE
.SUBTITLE QUIT command
.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*QUIT\*
.INDEX TRIDER> commands> QUIT
.INDEX TRIDER> QUIT command

.LEFT MARGIN +8
.P0; Quit from TRIDER.
.LEFT MARGIN -8

.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*FORMAT:######QUIT\*

.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*Command parameters:\*#None.

.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*Description:\*
.P0; The QUIT command causes TRIDER to exit immediately, closing all input 
files and closing and deleting all output files. 

.P0; <CTRL/Z> (pressing the Ctrl and Z keys together) may also be used
to quit from the program.

.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*Messages:\*#None.

.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*Examples:\*

.P0;TRIDER_> ^^^*QUIT_<CR_>\*
.BR;#ELAPSED: 00:05:25.84  CPU: 0:00:05.71  BUFIO: 281  DIRIO: 46  FAULTS: 263 
.BR;_$


.!******************************************************************************
.PAGE
.SUBTITLE RETURN command
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*RETURN\*
.INDEX TRIDER> commands> RETURN
.INDEX TRIDER> RETURN command

.LEFT MARGIN +8
.P0; Restores command input from an indirect file to SYS$COMMAND.
.LEFT MARGIN -8

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*FORMAT:######RETURN \*


.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Command parameters:\*_ None.

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*DESCRIPTION:\*
.P 0;Restores command input from an indirect file to SYS$COMMAND.
.P 0;A typical application is to allow the user to use an indirect command file
to set up those run time defaults which are constant within a flowline and then
return to input from the terminal (or batch stream) for the run specific
commands. To do this RETURN must be the last command in the indirect command
file. 

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Messages:\*

.P 0;The following messages are specific to the RETURN command:
.P 0;RETURN command detected - returning to terminal input
.BR;RETURN command ignored - command input is already from terminal

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Examples:\*
.BLANK
.BR;TRIDER> ^*@FLOW2_<CR_>\*
.BR;TRIDER> ENABLE DIAGNOSTICS
.BR;TRIDER> FRT FLOW2
.BR;FRT file LSL$FRT:FLOW2.FRT;8 opened for read
.BR;TRIDER> SELECT OPEN__CLIFF__FC OUTCROPS,7,COAST
.BR;TRIDER> RETURN
.BR;TRIDER>


.!******************************************************************************
.PAGE
.SUBTITLE SHOW command
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*SHOW\*
.INDEX TRIDER> commands> SHOW
.INDEX TRIDER> SHOW command

.LEFT MARGIN +8
.P0; Shows current status of TRIDER option and parameter settings.
.LEFT MARGIN -8

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*FORMAT:######SHOW subject\*


.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Command parameters:\*

.LEFT MARGIN +8
.P-8;subject
.P0; The subject that is to be displayed, chosen from:
.NO FILL

ENABLE      FILES      IMAGINARY        ZLIMITS

.FILL
.LEFT MARGIN -8

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*DESCRIPTION:\*

.P0; SHOW enables the user to examine the current status of TRIDER
options and parameter settings. 


.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Messages:\*
.P 0;TRIDER issues the following message if the SHOW command is specified
without an argument:
.LITERAL

*** ERROR *** Specifying command SHOW

Available SHOW command qualifiers are:

ENABLE      FILES      IMAGINARY        ZLIMITS
.END LITERAL
.P 0;This feature can be used to advantage if the user wishes to quickly
determine for which items the SHOW facility is available.

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Examples:\*
.BLANK
.NO FILL
$ ^*TRIDER_<CR_>\*
DTMCREATE module TRIDER of 17:02:12 23-JAN-89
.BR;TRIDER> ^*SHOW_<CR_>\*
.LITERAL
*** ERROR *** Specifying command SHOW

Available SHOW command qualifiers are:

ENABLE      FILES      IMAGINARY        ZLIMITS

.END LITERAL
.BR;TRIDER> ^*SHOW ENABLE ! examine current option settings_<CR_>\*
.BR;DIAGNOSTICS ............................................... Off
.BR;GRAPHICS .................................................. Off
.BR;PME ....................................................... Off
.BR;TRIDER>
.FILL
.!******************************************************************************
.PAGE
.SUBTITLE SHOW ENABLE command
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*SHOW ENABLE\*
.INDEX TRIDER> commands> SHOW ENABLE
.INDEX TRIDER> SHOW ENABLE command

.LEFT MARGIN +8
.P0; Shows current status of TRIDER option settings.
.LEFT MARGIN -8

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*FORMAT:######SHOW ENABLE\*


.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Command parameters:\*_ None.

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*DESCRIPTION:\*

.P0;SHOW ENABLE enables the user to examine the current status of TRIDER
processing options that are set or unset using the ENABLE and DISABLE commands.

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Messages:\*_ None.
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Examples:\*
.BLANK
.NO FILL
$ ^*TRIDER_<CR_>\*
DTMCREATE module TRIDER of 17:02:12 23-JAN-89
.BR;TRIDER> ^*SHOW ENABLE ! examine current option settings_<CR_>\*
.BR;DIAGNOSTICS ............................................... Off
.BR;GRAPHICS .................................................. Off
.BR;PME ....................................................... Off
.BR;TRIDER>
.FILL

.!******************************************************************************
.PAGE
.SUBTITLE SHOW FILES command
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*SHOW FILES\*
.INDEX TRIDER> commands> SHOW FILES
.INDEX TRIDER> SHOW FILES command

.LEFT MARGIN +8
.P0; Shows current TRIDER input files.
.LEFT MARGIN -8

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*FORMAT:######SHOW FILES\*


.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Command parameters:\*_ None.

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*DESCRIPTION:\*

.P0;SHOW FILES enables the user to examine the current status of TRIDER
input files.
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Messages:\*_ None.
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Examples:\*
.BLANK
.NO FILL
$ ^*TRIDER_<CR_>\*
DTMCREATE module TRIDER of 17:02:12 23-JAN-89
.BR;TRIDER> ^*SHOW FILES ! examine input file-specs_<CR_>\*
.BR;Input filename not yet specified.
.BR;TRIDER> ^*FILEIN SW100230 ! get input files_<CR_>\*
.BR;_.DTA file DUA3:[DEMONSTRATION]SW100230_.DTA;6 opened for read
.BR;_.NOD file DUA3:[DEMONSTRATION]SW100230_.NOD;6 opened for read
.BR;_.DER file DUA3:[DEMONSTRATION]SW100230_.DER;6 opened for write
.BR;TRIDER> ^*SHOW FILES ! examine input file-specs_<CR_>\*
.BR;_.DTA file:   DUA3:[DEMONSTRATION]SW100230_.DTA;6
.BR;_.NOD file:   DUA3:[DEMONSTRATION]SW100230_.NOD;6
.BR;TRIDER>




.!******************************************************************************
.PAGE
.SUBTITLE SHOW IMAGINARY command
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*SHOW IMAGINARY\*
.INDEX TRIDER> commands> SHOW IMAGINARY
.INDEX TRIDER> SHOW IMAGINARY command

.LEFT MARGIN +8
.P0; Shows current status of TRIDER imaginary point option settings.
.LEFT MARGIN -8

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*FORMAT:######SHOW IMAGINARY\*


.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Command parameters:\*_ None.

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*DESCRIPTION:\*

.P0;SHOW IMAGINARY enables the user to examine the current status of TRIDER
imaginary point processing options that are set using the IMAGINARY commands.


.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Messages:\*_ None.
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Examples:\*
.BLANK
.NO FILL
$ ^*TRIDER_<CR_>\*
DTMCREATE module TRIDER of 17:02:12 23-JAN-89
.BR;TRIDER> ^*SHOW IMAGINARY ! examine imaginary points settings_<CR_>\*
.BR;Imaginary point estimation option ......................... TREND
.BR;Relocation proportion for imaginary points ................ 1.00
.BR;TRIDER>
.FILL

.!******************************************************************************
.PAGE
.SUBTITLE SHOW ZLIMITS command
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*SHOW ZLIMITS\*
.INDEX TRIDER> commands> SHOW ZLIMITS
.INDEX TRIDER> SHOW ZLIMITS command

.LEFT MARGIN +8
.P0; Shows current status of TRIDER Z-limits.
.LEFT MARGIN -8

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*FORMAT:######SHOW ZLIMITS\*


.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Command parameters:\*_ None.

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*DESCRIPTION:\*

.P0;SHOW ZLIMITS enables the user to examine the current status of TRIDER
Z-limits parameters set using the ZLIMITS commands.


.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Messages:\*_ None.
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Examples:\*
.BLANK
.NO FILL
$ ^*TRIDER_<CR_>\*
DTMCREATE module TRIDER of 17:02:12 23-JAN-89
.BR;TRIDER> ^*SHOW ZLIMITS ! examine ZLIMITS points settings_<CR_>\*
.BR;No Z-limits will be applied to imaginary point height estimation
.BR;TRIDER> ^*ZLIMITS 0.0 450.0_<CR_>\*
.BR;TRIDER> ^*SHOW ZLIMITS ! examine ZLIMITS points settings_<CR_>\*
.BR;Imaginary point height estimation lower z-value limit = 0.0
.BR;Imaginary point height estimation upper z-value limit = 450.0
.BR;TRIDER> 
.FILL

.!******************************************************************************
.PAGE
.SUBTITLE SPAWN command
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*SPAWN\*
.INDEX TRIDER> commands> SPAWN
.INDEX TRIDER> SPAWN command

.LEFT MARGIN +8
.P0; The SPAWN command enables you to create a subprocess while within TRIDER.
.LEFT MARGIN -8

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*FORMAT:######SPAWN command-line\*


.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Command parameters:\*

.LEFT MARGIN +8
.P-8;command-line
.P0; Specifies a DCL command string to be executed as if typed in response to
a '$' prompt. When the command completes, the subprocess terminates and control
is returned to TRIDER. The command string cannot exceed 80 characters. 
.LEFT MARGIN -8

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*DESCRIPTION:\*
.P0; The SPAWN command enables you to create a subprocess while within TRIDER.
When the subprocess terminates control is returned to TRIDER.
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Messages:\*

.P 0;The following warning messages are specific to the SPAWN command:
.P 0;_*_*_*_ WARNING_ _*_*_*_ SPAWN requires a valid DCL command line
.BR; _*_*_*_ ERROR_ _*_*_* Unable to spawn command, returning to TRIDER

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Examples:\*
.BLANK
.BR;TRIDER> ^*SPAWN DIRECTORY _*_.DTA;_*_<CR_>\*

.NO FILL

Directory DUA3:[DTMCREATE.ACCEPTANCE__TESTS]

TEST1_.DTA;1              8/8       18-AUG-1987 07:56  [LSL,TIM]
TEST2_.DTA;2              7/8       18-AUG-1987 17:17  [LSL,TIM]
TEST2_.DTA;1              7/8       18-AUG-1987 17:07  [LSL,TIM]

Total of 3 files, 22/24 blocks.

.FILL
.BR;TRIDER> 
.!******************************************************************************
.PAGE
.SUBTITLE WAIT command
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*WAIT\*
.INDEX TRIDER> commands> WAIT
.INDEX TRIDER> WAIT command

.LEFT MARGIN +8
.P0; Suspend processing for the specified number of seconds.
.LEFT MARGIN -8

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*FORMAT:######WAIT seconds\*


.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Command parameters:\*

.LEFT MARGIN +8
.P-8;seconds
.P0; The number (floating point) of seconds for which TRIDER processing is
to be suspended.
.LEFT MARGIN -8

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*DESCRIPTION:\*
.P0; The WAIT command causes processing to be suspended for a specified
number of seconds. It is designed for use in software demonstration 
situations and is of no value in a production flowline.

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Messages:\*

.P 0;The following warning message is specific to the WAIT command:
.P 0;_*_*_*_ WARNING_ _*_*_*_ You must specify the number of seconds to wait

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Examples:\*
.BLANK
.BR;TRIDER> ^*WAIT 4.0_<CR_>\*
.BR;TRIDER>


.!******************************************************************************
.PAGE
.SUBTITLE ZLIMITS command
.INDEX TRIDER> commands> ZLIMITS
.INDEX TRIDER> ZLIMITS command
.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*ZLIMITS\*

.LEFT MARGIN +8
.P0; Specifies minimum and maximum Z-limits for imaginary point height
estimation. 
.LEFT MARGIN -8

.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*FORMAT:######ZLIMITS real1 real2
.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*COMMAND PARAMETERS:\*
.LEFT MARGIN +8
.P-8;real1
.P0; The minimum Z value which an imaginary point can have.
.P-8;real2
.P0; The maximum Z value which an imaginary point can have.
.LEFT MARGIN -8

.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*Description:\*
.P 0;The ZLIMITS command enables the user to specify lower and upper
ZLIMITS to imaginary point height estimation. If an imaginary point height is
calculated which falls outside of the specified limits the height will be
truncated to the relevant limit. 

.P 0;By default TRIDER applies no limits to imaginary point height estimation.

.P 0;It is not necessary to specify the ZLIMITS command if the IMAGINARY
FIXED imaginary point height option is used.

.P 0;^^^*IMPORTANT\* If one of the height modification options was selected
in TRIANG using ENABLE MULTIPLYBY, ENABLE TOFEET etc_., you must give the 
TRIDER ZLIMITS argument values in the target measurement system or height
range (ie feet if the TRIANG TOFEET command was specified). Failure to do this
may result in flattening of all model relief! 


.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*Messages:\*

.P0; The following messages are specific to the ZLIMITS command:

.NO FILL
.BLANK

_*_*_*_ ERROR_ _*_*_*_ You must specify minimum and maximum ZLIMITS arguments
              For example ZLIMITS 80.0 3000.0

.FILL
.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*Examples:\*
.BLANK
.BR;TRIDER> ^^^*SHOW ZLIMITS_<CR_>\*
.BR;No ZLIMITS will be applied to imaginary point height estimation
.BR;TRIDER> ZLIMITS 0.0 800.0_<CR_>\*
.BR;TRIDER> ^^^*SHOW ZLIMITS_<CR_>\*
.BR;Imaginary point height estimation lower z-value limit = 0.0
.BR;Imaginary point height estimation upper z-value limit = 800.0
.BR;TRIDER>

.PAGE
^^^*--------------------------------------------------------------------------------\*
.HL 1 ^^^*EXAMPLES\*

.NO FILL
.BLANK 2
$ ^*TRIDER_<CR_>\*
DTMCREATE module TRIDER of 15:53:45 26-NOV-87
TRIDER> ^*ENABLE DIAGNOSTICS_<CR_>\*
TRIDER> ^*FILEIN TST_<CR_>\*
_.DTA file DATA$DISK:[DTMCREATE.TRIANG]TST_.DTA;1 opened for read
_.NOD file DATA$DISK:[DTMCREATE.TRIANG]TST_.NOD;1 opened for read
_.DER file DATA$DISK:[DTMCREATE.TRIANG]TST_.DER;1 opened for write
TRIDER> ^*GO_<CR_>\*

+----------------------------------------------------------------+
|                                                                |
|          Setting up memory/random file for neighbours          |
|                                                                |
+----------------------------------------------------------------+



+----------------------------------------------------------------+
|                                                                |
|	             Calculating slope derivatives               |
|                                                                |
+----------------------------------------------------------------+


Partial derivatives estimated for 774 points
 ELAPSED:    0 00:02:05.51  CPU: 0:00:25.60  BUFIO: 13  DIRIO: 25  FAULTS: 332 
.BR;_$
.LM +10
.FILL
.P 0;This example shows TRIDER in use with the default TREND imaginary point
height estimation option selected. TRIDER first reads in all nodes and neighbour
relationships from the matched pair of binary files:
.LIST " "
.LE ;DATA$DISK:[DTMCREATE.TRIANG]TST_.DTA;1
.LE ;DATA$DISK:[DTMCREATE.TRIANG]TST_.NOD;1
.END LIST 
.P 0;The user has merely specified FILEIN TST, the rest of the input file
specification components are taken from the default SYS$DISK:[]_.DTA
and SYS$DISK:[]_.NOD, i.e. the user's current default device and directory.
The file version number is taken from the actual files.

.P 0;A binary output file DATA$DISK:[DTMCREATE.TRIANG]TST_.NOD;1
is created and opened to receive the slope derivatives.

.P 0;After the GO command TRIDER starts by estimating  heights for the
imaginary points around the edge of the data area. By default the
imaginary points are relocated by the maximum possible amount away from
the existing edge of the data area. This is to provide TRIDER with
maximum leeway when fitting the quintic surface from which the slope
derivatives are taken. As ZLIMITS were not specified, the heights
estimated for the imaginary points are not constrained in any way. 

.P 0;TRIDER then proceeds to fit quintic surface patches across the data area
wherever possible. Where the nodes are too poorly distributed or simply too few
for a high order surface patch to be fitted, TRIDER will lower the order of
surface to be fitted and try again. As the slope derivatives for each node are
estimated, TRIDER writes them to the derivative file
DATA$DISK:[DTMCREATE.TRIANG]TST_.DER;1.

.P 0;The run has completed successfully and DCL symbol $STATUS is set to
SS$__NORMAL, i.e. normal successful completion. 

.LM -10
.TP 15
.NO FILL
.BLANK 2
$ ^*TRIDER_<CR_>\*
DTMCREATE module TRIDER of 15:53:45 26-NOV-87
TRIDER> ^*ENABLE DIAGNOSTICS_<CR_>\*
TRIDER> ^*ZLIMITS 80 500_<CR_>\*
TRIDER> ^*IMAGINARY SHELLNEIGHBOUR QUADRATIC 0.0_<CR_>\*
TRIDER> ^*FILEIN QUARRY5_<CR_>\*
_.DTA file DATA$DISK:[DTMCREATE.TRIANG]QUARRY5_.DTA;1 opened for read
_.NOD file DATA$DISK:[DTMCREATE.TRIANG]QUARRY5_.NOD;1 opened for read
_.DER file DATA$DISK:[DTMCREATE.TRIANG]QUARRY5_.DER;1 opened for write
TRIDER> ^*GO_<CR_>\*

+----------------------------------------------------------------+
|                                                                |
|          Setting up memory/random file for neighbours          |
|                                                                |
+----------------------------------------------------------------+



+----------------------------------------------------------------+
|                                                                |
|     Imaginary point interpolation - collect star neighbours    |
|                                                                |
+----------------------------------------------------------------+


446 imaginary point neighbourhoods determined

+----------------------------------------------------------------+
|                                                                |
|		Starting derivative calculation phase            |
|                                                                |
+----------------------------------------------------------------+


%TRIDER-W-DERFAIL, derivative estimation failure at X = 2000.02 Y = 70.315
Partial derivatives estimated for 22402 points

+----------------------------------------------------------------+
|                                                                |
|       Imaginary point interpolation - interpolation phase      |
|                                                                |
+----------------------------------------------------------------+


446 imaginary points interpolated

+----------------------------------------------------------------+
|                                                                |
|	             Calculating slope derivatives               |
|                                                                |
+----------------------------------------------------------------+


Partial derivatives estimated for 68820 points
 ELAPSED:    0 00:05:58.79  CPU: 0:04:56.19  BUFIO: 317  DIRIO: 236 FAULTS: 1368
_$
.FILL
.LM +10
.P 0;This example shows the SHELLNEIGHBOUR imaginary point height estimation
option in use. 

.P 0;After opening the matched pair of binary input files and creating the
binary slope derivative output file, TRIDER estimates heights for the imaginary
points around the edge of the data area. In contrast to the previous example,
which used the default TREND option for imaginary point height estimation, the
imaginary points are left on the edge of the existing data area (i.e. the
imaginary point relocation proportion is zero). Shells of neighbours to each
imaginary point are collected as the basis for the interpolation used to
estimate the imaginary point height. The user has specified that a quadratic
(IMAGINARY SHELLNEIGHBOUR ^*QUADRATIC\*) surface be fitted through the
imaginary point's neighbours. 

.P 0;The ZLIMITS arguments specify minimum and maximum constraints for
the heights interpolated for imaginary points. 

.P 0;TRIDER then proceeds to fit quintic surface patches across the data area
wherever possible. Where the nodes are too poorly distributed or simply too few
for a high order surface patch to be fitted, TRIDER will lower the order of
surface to be fitted and try again. As the slope derivatives for each node are
estimated, TRIDER writes them to the derivative file
DATA$DISK:[DTMCREATE.TRIANG]QUARRY5_.DER;1.

.P 0;Attention is drawn to the message warning that derivative estimation has
failed for the node at the specified location. Zero slope derivatives are 
assumed for this node and TRIDER processing continues. Such messages should
occur comparatively rarely and reflect instances where the data are too
poorly distributed  (in x,y and z) to allow a surface patch to be fitted.

.P 0;The run has completed successfully and DCL symbol $STATUS is set to
SS$__NORMAL, i.e. normal successful completion. 
.LM -10

.REQUIRE 'TRIDERMSG.RNO' 
