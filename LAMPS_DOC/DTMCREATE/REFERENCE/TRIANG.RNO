.PAGE
.BR
^^^*--------------------------------------------------------------------------------\*
.BR
^^^*MODULE#####TRIANG\*
.INDEX TRIANG

.P0
^^^*--------------------------------------------------------------------------------\*
.BR
^^^*REPLACES\*###PANACEA module PANIC

.P0
^^^*--------------------------------------------------------------------------------\*
.HL 2 ^^^*FUNCTION\*

.LEFT MARGIN +10
.P 0;TRIANG is the main data structuring program in the DTMCREATE package. Its
purpose is to extract heighted data from IFF (Internal Feature Format) files
and existing DTMs held in DTI (Digital Terrain Image) files to produce a
triangular data structure. 


.BLANK
.LEFT MARGIN -10
^^^*--------------------------------------------------------------------------------\*
.HL 2 ^^^*FORMAT\*
.INDEX TRIANG> FORMAT
.LEFT MARGIN +10
.P 0;$ TRIANG
.BLANK
.TEST PAGE 9
.LEFT MARGIN -10
^^^*--------------------------------------------------------------------------------\*
.HL 2 ^^^*COMMAND QUALIFIERS\*
.LEFT MARGIN +10
.P 0;None, TRIANG is command driven.
.BLANK
.LEFT MARGIN -10
.TEST PAGE 10
^^^*--------------------------------------------------------------------------------\*
.HL 2 ^^^*DESCRIPTION\*
.INDEX TRIANG> DESCRIPTION

.BLANK
.HL 3 ^^^*General\*
.LEFT MARGIN +10
.P 0;TRIANG can handle input from IFF (Internal Feature Format) files
consisting of strings of contour, seismic, or other types of data, marked as
either continuous or discontinuous data points or cliffs. In addition data can
be input from existing DTI (Digital Terrain Image) format DTM files as an aid to
intra-DTM edge matching. 

.P 0;The input data are used to form a Delaunay triangulation. This provides
a structure that relates every point with its Thiessen neighbours. The
triangulation is optimum in the sense that it has the most
equilateral set of triangles possible for the data set under consideration.
This does not necessarily imply that locally the triangles will be very
equilateral. 

.P 0;As an alternative to production of an optimal Delaunay triangulation a
CONSTRAINT option is offered. This option forces the triangulation to honour
the connectivity of contour, coastline and river strings etc_. such that no
string is cut through by a triangle. This approach is more suitable for the
definition of complex geomorphological surfaces than the Delaunay ideal and is
strongly recommended for geomorphological surface modelling. 

.P 0;TRIANG enables the user to apply feature flagging to the incoming data
points to identify each point as either a river point, a ridgeline point or an
unflagged point. This deature flagging is used within TRIGRID to control the
limits applied to smooth surface interpolation. 

.HL 2 ^^^*Coordinate system\*

.P 0;DTMCREATE assumes absolute coordinates, (i.e. all coordinates in
input files are offset by the file (X,Y) origin offset) in the specification
of windows and positions. 


.P 0;The UNITS command enables the user to specify in what units of measurement
he wishes to define the triangulation window using the WINDOW
command, or in what units of measurement details from the header of the DTI
file are displayed.

.P 0;By default metre units are assumed.

.P 0;The UNITS command should be given before specifying the triangulation 
window the user wishes to specify the window in units other than metres.

.P 0;Currently the projection information for the first input file read
with a FILEIN command is copied to the .NOD and .DTA output files for
subsequent use in setting up the header of the LSLA type DTI file created in 
TRIGRID. In a future release of DTMCREATE, coordinate consistency checks
between input files will be implemented. 

.BLANK 2
.LEFT MARGIN -10
^*--------------------------------------------------------------------------------\*
.HL 2 ^^^*Output data files\*
.LEFT MARGIN +10
.P 0;Output from module TRIANG is in the form of two binary files, not
directly readable by the user. For details of default file specifications
used for the binary output files see the FILEIN command section below.

.P 0;The binary output files are used to convey the
triangulation data structure between the various modules of the DTMCREATE
package. The first file (filename_.DTA) contains the data in scaled
integer form, together with various indices and tables concerning the
distribution of the data over the triangulation area. This data set is 
augmented by a set of imaginary points acting as a frame around the edge
of the map area.  The second file (filename_.NOD) contains the data
structure itself with a list of the neighbours of each data point in the set. 

.P 0;These triangulation files must always be handled as matched pairs, as the
data contained in one is the key to the inter-node structures described in the
other. If one file is to be deleted then BOTH files must be deleted. DTMCREATE
modules TRIEDIT, TRIDER and TRIGRID which require input from _.NOD and _.DTA
files check that the two files share a common version number and complain if
they do not! 

.P 0;Never use the DCL SET FILE, RENAME or COPY commands to alter the version
numbers of mismatched _.NOD and _.DTA files to make them into a matched pair.

.BLANK 2
.TP 6
.LEFT MARGIN -10
^*--------------------------------------------------------------------------------\*
.HL 2 ^^^*Input data files\*
.LEFT MARGIN +10

.P 0;Input to module TRIANG consists of contour and breakline strings and spot
heights in IFF files, or DTI format DTM files. To swap input between these
different file types the FORMAT command should be used. 

.BLANK 2
^*----------------------------------------------------------------------\*
.HL 3 ^^^*TRIANG and input from IFF files\*

.P 0;TRIANG is designed to be compatible with the "new" type IFF files
introduced in conjunction with the IMP (IFF Map Processing) package.
The origin offset entry in a type 2 MD (Map Descriptor) is used to offset
coordinate values within an input IFF file. Although downwards compatible with
"old" type IFF files a warning message is issued if an IFF file is found not
to contain a set type 2 MD (Map Descriptor) entry.

.P 0;Data within IFF files may have string type and feature type attributes
assigned within TRIANG via the IFF feature code and layer values.
Commands such as ASSIGN BREAKLINE__FC, ASSIGN RIDGE__LAYER etc are provided
to make the feature type/code assignments to enable TRIANG to realize that a
string is to be stored as a breakline or a ridgeline etc_.

.BLANK 2
^*----------------------------------------------------------------------\*
.HL 3 ^^^*Internal scaling of input coordinates\*

.P 0;TRIANG scales all the input coordinates of the IFF file into integer form
in order to speed up calculations. The range of integers into which the
coordinates will be scaled will lie between 0 and 300000 by default.

.P 0;However, the user may define a logical, LSL$DTMCREATE__RESOLUTION, to be a
value between 300000 and 10000000 to increase this resolution and will default
to 300000 if it is not given.

.P 0;The purpose of this is because very dense datasets could have points so
close together that TRIANG would become 'stuck' or produce the STOPNOD error
message as it was unable to distinguish between them.

.NOTE IMPORTANT
It is essential that the logical value LSL$DTMCREATE__RESOLUTION remains the
same when going from TRIANG all the way through to TRIGRID on a particular
dataset. If the resolution is altered between any of the stages, unpredictable
results will occur and programs may fail.
.END NOTE

.TP 6
.BLANK 2
^*----------------------------------------------------------------------\*
.HL 3 ^^^*IFF Heights\*
^*----------------------------------------------------------------------\*
.HL 4 ^^^*IFF Heights - storage in contours and spot heights\*

.P 0;In IFF files height values are transmitted either via AC (Ancillary Code)
entry values associated with 2D ST (STring) entries, or, CB (Coordinate Block)
entries which provide per point height tagging. By default contour and spot
height Z values are read from type 3 ACs as floating point values. By use of
the ENABLE INTEGER__HEIGHT command, integer heights may be read from type 2
ACs. 
.BLANK 2
^*----------------------------------------------------------------------\*
.HL 4 ^^^*IFF Heights - storage in cliff-lines\*
.P 0;Cliff lines heights may be transmitted in one of two ways:
.LIST

.LM +3
.LE ;The IFF feature contains two constant floating point height values;
one for the terrain to the left of the cliffline (relative to the 
direction of digitising) and one for the height of the terrain to the right.
The left hand height is held in a type 80 AC and the right hand height in a
type 81 AC. 

.LE ;The cliffline coordinates have per-point attributes for the height on the
left and right of the cliffline (relative to the direction of digitising).
This enables clifflines to have heights which vary along their top and bottom.
The per-point attributes are held in CB (Coordinate Block) entries. CB entries
replace the use of ST (STring) and ZS (3D string) entries. 

.P 0;IFF features which represent clifflines will have the X,Y and two 
attribute fields set for each coordinate in their CBs. The attributes
are 80 ("cliff left height") and 81 ("cliff right height"), both of which
contain a real (floating point) height value.

.P 0;To generate CB entries containing (X,Y,Cliff-left,Cliff-right) 
coordinates, the user will have to digitise the clifflines using LITES2
with the IFF output revision level set to 1. For details of 
IFF input and output revision levels and the use of LITES2 for the generation
of CBs see the MAPPING Reference Manual and the LITES2 Reference
Manual.

.P 0;LITES2 macros can be set up to facilitate digitising cliffline
features which are to receive varying Z values along their left and right 
sides. The following unsophisticated examples are provided for guidance:
.TP 10
.LITERAL

%DECLARE REAL LEFT
%DECLARE REAL RIGHT
%ENABLE SUBSTITUTION

%MACRO CLIFF_START
%INQUIRE LEFT "Cliff left height  "
%INQUIRE RIGHT "Cliff right height  "
%MESSAGE "  "
%SET ATTRIBUTE 80 'LEFT'
%SET ATTRIBUTE 81 'RIGHT'
%START
%ENDMACRO

%MACRO CLIFF_STOP
%INQUIRE LEFT "Cliff left height (final point)  "
%INQUIRE RIGHT "Cliff right height (final point)  "
%MESSAGE "  "
%SET ATTRIBUTE 80 'LEFT'
%SET ATTRIBUTE 81 'RIGHT'
%END
%ENDMACRO

.END LITERAL

.P 0;This command sequence could be typed into a LITES2 command
file and the command file read at the start of the LITES2 session by use of 
the LITES2 @'file-spec' command.

.P 0;If possible a puck or function button should be defined to issue
each of the two macros. A single press of the button defined for the 
CLIFF__START macro will then cause
the user to be prompted for the left and right height and the point will then
be inserted with the appropriate attribute values. Subsequent points
should be inserted using the same button. The button defined for
the CLIFF__STOP macro should be pressed to insert the last point in the cliff 
string.

.P 0;It is essential that the user sets the IFF output revision level to 1,
before starting the LITES2 session. Failure to do this will result in all the
per-point attributes being lost when the user exits the LITES2 session. 

.LM -3
.END LIST

.BLANK 2
^*----------------------------------------------------------------------\*
.HL 4 ^^^*IFF Heights - changing height datum and IFF height allocations\*
.P 0;IFF files are read into TRIANG using the FILEIN command. More then one
input file may be specified using a new FILEIN command for each file.
Defaults may be changed between reading files. This means that IFF files with
different allocations of IFF entries for height information or with
heights relative to different data may be combined. 

.P 0;Height information within a single IFF file may be stored relative to
different height data providing that the features pertaining to each height
datum can be distinguished by feature code or layer. The DATUM command can be
used to set the height datum for a subsequent FILEIN command. If required, a
single IFF file may be read in many times relative to different height data,
feature selection being achieved by SELECT FC and SELECT LAYER commands. 

.P 0;Imperial heights may be converted to metric on input with the ENABLE
TOMETRES command. The reverse is possible with the ENABLE TOFEET command.
Incoming heights may be multiplied or divided by a user specified constant
with the ENABLE MULTIPLYBY and ENABLE DIVIDEBY commands respectively. 

.P 0;Incoming heights may be inverted if the ENABLE INVERSE command
is specified prior to reading an IFF file. This enables modelling
of hydrographic data where sea depths are often stored as positive
heights, drying zone heights as negative and land heights as positive!

.TP 6
.BLANK 2
^*----------------------------------------------------------------------\*
.HL 3 ^^^*BREAKLINES\*

.P 0;In order that all surface discontinuities are honoured in the final DTM it
may be necessary to designate some IFF strings as "breaklines", which will
ensure a change of slope character at that line. A breakline in the IFF file
may be identified by its feature code or position in a separate layer.
The allocation of IFF feature codes and layers for breaklines must
be input to TRIANG using the ASSIGN BREAKLINE__FC and ASSIGN BREAKLINE__LAYER 
commands respectively. As with the IFF height storage mechanisms different
allocations of layers and feature codes for breaklines may be made between
successive FILEIN commands. 


.P 0;As breaklines define important slope discontinuities in the landscape, it
is important that their points are always retained. TRIANG takes great care to
ensure that breaklines are never violated during the (optional) triangulation
constraint phase, and that all river, coast, and isoline strings are cut where
crossed by a breakline. It is  therefore important that care is exercised in
the registration of breaklines relative to other source data during data
preparation. 


.P 0;It is recommended that breaklines, clifflines and spot-heights are read in
before the bulk of contour data. Spot heights often contribute much to the form
of hill tops and valley floors. All other data may then follow, in an order
reflecting the importance attached to the landscape elements which they
describe. 

.P 0;Once all the source data is read into TRIANG, triangulation may be
started. Unless the CONSTRAINT option has been enabled, (see below), at the
end of the triangulation phase the binary files containing the triangulation
will be output. 
.P 0;^*----------------------------------------------------------------------\*
.TP 6
.BLANK 2
.LEFT MARGIN -10
^*--------------------------------------------------------------------------------\*
.HL 2 ^^^*TRIANGULATION CONSTRAINT\*
.LEFT MARGIN +10

.P 0;If CONSTRAINT is in force the following procedure is adopted. TRIANG's
internal workspace is reorganised and if necessary a random access disk file
is set up to enable rapid selection of node neighbours. Breaklines are
identified and their course traced through the data structure. If the
neighbour list of the nth node does not contain a reference to the (nth#+#1)
node along a string then a logical break has occurred. This break is repaired
by the insertion of an additional point at the intersection of the line
between the nth and (nth#+#1) node in the string and every triangle link which
cuts that line.  These additional 'patch' nodes are stored in a separate area
of workspace for later use. The node neighbour lists are updated and the next
node in the breakline string is considered. The process is repeated until all
breakline strings have any gaps filled with additional points. 

.P 0;All the 'patches' of additional points are then
inserted into the breakline gaps and the strings are reordered so that the
patch points appear in the correct positions within the strings. The whole
process is then repeated for non-breakline strings. However, any breakline
connections encountered while tracking along a non-breakline string will be
considered inviolable and the non-breakline string will be broken at the
intersection point. After all string patching is complete, the (probably
somewhat enlarged) intermediate files will be output to disk for use by TRIDER
or TRIEDIT. 

.P 0;The number of data points generated to patch strings will depend on
the original data density and distribution of the data points. A river
containing points at 10cm intervals which lies between contours having points
at 1mm intervals will probably be cut by triangle connections many times. Many
points will be generated in the river string patches to restore the continuity
of the string. If the relative point density was reversed between the two
features, it is most unlikely that the river would be cut by triangle links at
all. 

.TP 8
.LM -10
.BLANK 2
^*--------------------------------------------------------------------------------\*
.HL 3 ^^^*CLIFFS\*
.LM +10
.P 0;Cliffs are a comparatively complex feature to digitise as two heights must
be associated with each (X,Y) coordinate pair, one height for the right hand
side of the cliffline and one for the left hand side. The sides of the cliff
line are defined relative to the direction of digitising. (See ^*Heights\*
above).

.P 0;A cliff feature should be given a type 80 AC (Ancillary Code) to carry
the height on the left side of the cliff (relative to the direction of 
digitising) and a type 81 AC (Ancillary Code) to carry the height on the
right side of the cliff.

.P 0;A cliffline must have at least 4 points.

.P 0;Internally DTMCREATE supports 2 cliff data types:
.LIST

.LE ;open cliffs, which may rise out of and then sink back into a continuous
surface. When digitising a line which is to be interpreted by TRIANG
as an open cliff, care should be taken to observe the following:
.LM +3
.LIST "o"
.LE ;The locations of the first and last points in the digitised string
should not lie in such a position that each will become a neighbour of the other
within the triangulation. If they do fall within each others neighbour lists,
the line will be treated as a closed cliff, with a continuous top and bottom
loop, (like an island in the sea).

.LE ;TRIANG will treat the first and last points in the digitised line as the
positions from which the cliff starts to rise from the surface and finally
sink back into the surface. The distance between the first to the second point
and the distance between the penultimate point and the last point controls how
rapidly the cliff rises from and falls back into the surface. If it is desired
that the cliff should rise and fall abruptly at its ends, these inter-point
distances should be kept as small as possible without digitising the points so
close together that TRIANG discards one of each on initial read-in. 

.LE ;The link between the first point and the second, and the penultimate
with the last is not flagged as a line of derivative discontinuity.

.LE ;TRIANG will automatically assign to the first and last points in the
string the minimum of the two cliff heights (left and right)

.END LIST 
.LM -3
.LE ;Closed cliffs, which in plan form a continuous closed loop, (for
example, an island in the sea or a lake).
.LM +3
.LIST "o"
.LE ;The locations of the first and last points in the digitised string
should lie in such a position that each will become a neighbour of the other
within the triangulation. If they do not fall within each others neighbour lists
the line will be treated as an open cliff, which rises from and then sinks 
back into the surrounding surface.
.END LIST 
.LM -3
.END LIST 


.TP 6
.BLANK 2
^*---------------------------------------------------------------------\*
.HL 4 ^^^*The relationship between cliffs and coastlines\*
.P 0;It is recommended that all coastlines are defined as cliff lines having as
their seaward height 0.0 and their landward height 1.0 (or more). This will
ensure a clean "step" between land and sea. Water bodies in estuarine areas may
be similarly defined. Because clifflines are treated as lines of surface
discontinuity, their use at the edge of water bodies like the sea, ensures that
no rippling of the flat water surface occurs. Such surface rippling is a
result of the use of a smooth patch function as employed during DTM grid
estimation within TRIGRID. 

.P 0;In sea areas, if no other data lies between a coastal cliff and the edge
of the triangulation area, a breakline of height 0.0 should be used along the
edge of the triangulation area. This will ensure that heights estimated 
for imaginary points along the edge of the sea area do no cause slopes
in the sea!
.TP 6
^*---------------------------------------------------------------------\*

.TP 6
.LEFT MARGIN -10
.BLANK 2
^*--------------------------------------------------------------------------------\*
.HL 3 ^^^*TRIANG and input from DTI files\*
.LEFT MARGIN +10

.P 0;TRIANG can accept for input MIKE, UHL1, TED4 and LSLA type DTI (Digital
Terrain Image) files. The elevation data within these files may be held as word
(default), real_*4 and longword values. Byte and bit valued DTI files are not
supported by DTMCREATE.

.P 0;TRIANG is designed to enable the user to edge match with DTI files which
contain null DTM post values (i.e. post values which have been assigned a
height value of -32767). This is achieved by ignoring all posts which
have the null height value.

.P 0;TRIANG reads and interprets the header information from the input DTI
file. DTI files of type UHL1, TED4 and LSLA with projection record, contain an
(X,Y) origin offset value for the SW corner (row 1, column 1) of the file in
the file header information. As TRIANG is particularly concerned with the
registration of the DTI file data with data from IFF input sources, unless the
origin offset information is available from the file header, the user is
prompted for the position of the SW corner of the DTI file. 

.P 0;The MIKE type of DTI header is now obsolete. DTMCREATE continues to 
support input of data from this file type but it is recommended that the user 
converts any existing MIKE type DTI files to the new LSLA type with projection 
record by using the MATRIX utilities DTICONVERT and DTITRANS. This gives the
advantage that all the file locational information is stored in the header of
an LSLA type DTI file and consequently the user is not prompted for manual 
specificatyion of origin offset coordinates at run time.

.P 0;It is important that the DTI file (X,Y) grid intervals and the value
supplied for the position of the SW corner of the DTI file are expressed in
the same units of measurement as used in the IFF input files. It is possible
to change the header values in a DTI file by use of the MATRIX package
DTIPATCH utility although care should be exercised to ensure that changes are
made that are compatible with other stages of the production flowline. 

.P 0;It is essential to ensure that all IFF data is transformed into
the coordinate system of the output DTMs prior to using DTMCREATE. Failure
to do this will mean that the completed DTM will have to be transformed using
the MATRIX utility DTITRANS. 

.P 0;Data extracted from DTI format DTM files are always read in as normal 3D
strings, the discrete post values of a row or column of the DTI file being
logically strung together for ease of data handling. 


.TEST PAGE 10
.BLANK 2
.LEFT MARGIN -10
^*--------------------------------------------------------------------------------\*
.HL 2 ^^^*EDGE MATCHING\*
.LEFT MARGIN +10


.P 0;DTMCREATE maintains a concept of "imaginary points" which lie around the
edge of a triangulation. These are used to stop the DTM surface from "falling
off the edge of the world" during surface fitting. When created by TRIANG
these imaginary points have location but no Z value. Later, when estimating
slope derivatives TRIDER offers the user several interpolation options to
estimate suitable Z values for the imaginary points at the edge of the
triangulation. Of course the resulting heights are only estimates and it would
be better to have actual data points available at the triangle vertices near
the edge of the triangulation. 

.P 0;DTMCREATE offers two approaches to edge matching between DTMs using real 
data points:

.LIST 
.LE ;Overlap of source data used for triangulation. This can be achieved
by triangulating data covering a bigger area than that of the final DTM. The
overlap area that this approach requires ensures that real world, rather than
imaginary control is available for the edge of the DTM area. When the adjacent
DTM area is triangulated, a corresponding overlap area is taken into the
previously triangulated area. The result is that the same control points are
available for DTM post estimation within the edge zone of both DTMs. The same
post values should then result, plus or minus arithmetic rounding errors. 

.LE ;TRIANG allows the user to force the edges of adjacent DTMs to have common
post heights by supplying as data to TRIANG the edge posts of completed DTMs.
A maximum of 2 rows or columns should be used and are selected out of the DTI
file using the TRIANG WINDOW command in reference to the origin and extents of
the DTI file. Because the coincident posts of adjacent DTMs are treated as
nodes in the triangulation, DTMCREATE preserves their location and height
throughout the modelling process. The end result is that exactly the same post
values will appear in both models. For perfect edge matching this is the
recommended procedure. 
.END LIST

.P 0;The DTMCREATE system assumes default settings for all options and
parameters unless otherwise specified.  The status for all
options may be examined at any time using the SHOW ENABLE command.
.B 2
.TEST PAGE 16
.LEFT MARGIN -10
.P 0;
^*-------------------------------------------------------------------------------\*
.HL 2 ^^^*Obligatory command sequence\*
.LEFT MARGIN +10
.P 0;Although TRIANG offers the user a bewildering number of possible commands,
only 6 are obligatory for a successful TRIANG run. TRIANG contains interlocks
to ensure that processing steps cannot be entered without having first defined
the necessary defaults. 

.P 0;The obligatory TRIANG command sequence is:

.LEFT MARGIN -10
.LITERAL

WINDOW 'real' 'real' 'real' 'real' ! define area of triangulation
ZLIMITS 'real' 'real'              ! specifies the Z-range of the data
MAXPOINTS 'integer'                ! specifies approx. number of points
FILEOUT 'file-spec'                ! create and open output files 
FILEIN  'file-spec'                ! input data (default IFF)
GO                                 ! triangulate it

.END LITERAL
.LEFT MARGIN +10

.P 0;This set of commands is sufficient to produce a triangulation containing
no breaklines or geomorphological feature tagging. Input is to be all the
data from a single IFF file that falls within the specified window.

.P 0;The exact sequence given above is not rigidly enforced. The only hard and
fast rules are that WINDOW, MAXPOINTS, ZLIMITS, FILEIN and FILEOUT must come
before GO and that the other commands come, in any order, before FILEIN. 

.BLANK

.!******************************************************************************
.!*** Commands                                                                     ***
.!******************************************************************************
.LEFT MARGIN -10
^^^*--------------------------------------------------------------------------------\*
.PAGE
.SUBTITLE
.FIGURE 5
.STYLE HEADERS ,,,,1
.HL 2 ^^^*TRIANG_ commands\*
.STYLE HEADERS ,,,,7

.!******************************************************************************
.PAGE
.SUBTITLE _@ command
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*_@\*
.INDEX TRIANG> commands> _@
.INDEX TRIANG> _@ command

.LEFT MARGIN +8
.P0; Take command input from the specified file.
.LEFT MARGIN -8

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*FORMAT:######_@file-spec_<CR_>\*


.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Command parameters:\*

.LEFT MARGIN +8
.P-8;file-spec
.P 0;The file to be opened and used for command input.

.P 0;Any parts of the file-spec not supplied for the @ command will be 
taken from the default specification 'SYS$DISK:[].COM;0'.
.LEFT MARGIN -8

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*DESCRIPTION:\*
.P0; TRIANG offers the facility of command input from an indirect command file.
The '@' character preceding a file-spec will cause TRIANG to open and read
commands from the specified file until:
.LIST
.LE ;a RETURN command is detected and command input is returned to SYS$COMMAND.
.LE ;a GO command is detected - after completion of the 
triangulation TRIANG exits.
.LE ;end-of-file is detected. This provokes an error message and command input
is returned to SYS$COMMAND. 
.END LIST 

.P 0;Nested command files are not supported (i.e. a command file containing an
'@' command), although sequential '@' commands are supported when read from
SYS$COMMAND.

.P 0;As an aid to batch log interpretation TRIANG will echo all commands read
from an indirect command file. 
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Messages:\*

.P 0;The following messages are specific to the _@ command:

.P 0;_*_*_*_ WARNING_ _*_*_*_ "@" must precede a file-spec
.BL;_*_*_*_ WARNING_ _*_*_*_ Indirect file error - returning to terminal input
.BL;_*_*_*_ ERROR_ _*_*_*_ Can't open indirect command file 'file-spec'


.TEST PAGE 8
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Examples:\*
.BLANK
.BR;$ ^*TRIANG_<CR_>\*
.BR;DTMCREATE module TRIANG of 13:30:39  20-AUG-87
.BR;TRIANG> ^*@FLOW2_<CR_>\*
.BR;TRIANG> ENABLE DIAGNOSTICS
.BR;TRIANG> FRT FLOW2
.BR;FRT file LSL$FRT:FLOW2.FRT;8 opened for read
.BR;TRIANG> ASSIGN CLIFF__FC OUTCROPS,7,COAST
.BR;TRIANG> RETURN
.BR;TRIANG>


.!******************************************************************************
.PAGE
.SUBTITLE _! command
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*_!\*
.INDEX TRIANG> commands> _!
.INDEX TRIANG> _! command

.LEFT MARGIN +8
.P0; Treat all text to the right of the '!' as a comment.
.LEFT MARGIN -8

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*FORMAT:######_! [comment text]

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Command parameters:\*

.LEFT MARGIN +8
.P-8;comment text
.P0; text that is to be treated as a comment and which will be excluded from
command interpretation.
.LEFT MARGIN -8

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*DESCRIPTION:\*
.P0;An exclamation mark is the standard DTMCREATE package comment delimiter. All
text (and numbers) which lie to the right of a '!' character are excluded from 
command interpretation. Comments are useful for annotating command procedures
used in batch processing etc_.


.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Messages:\*_ None.


.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Examples:\*
.BLANK
.BR;_$_ ^*TRIANG_<CR_>\*
.BR;DTMCREATE module TRIANG of 13:53:27  3-FEB-89
.BR;TRIANG> ^*_! a comment for the sake of it_<CR_>\*
.BR;TRIANG> ^*WINDOW 0.0 0.0 900.0 900.0_<CR_>\*
.BR;TRIANG> ^*MAXPOINTS 23000_<CR_>\*
.BR;TRIANG> ^*ZLIMITS 0.0 1290.0 ! limits are in metres_<CR_>\*
.BR;TRIANG> ^*FILEOUT TEST3_<CR_>\*
.BR;_.DTA file DUA3:[DEMONSTRATION]TEST3_.DTA;6 opened for write
.BR;_.NOD file DUA3:[DEMONSTRATION]TEST3_.NOD;6 opened for write
.BR;TRIANG> ^*FILEIN JOE.IFF! get the first IFF file_<CR_>\*
.BR;IFF file LSL$IF:JOE.IFF;0 opened for read
.BR;TRIANG> ^*! do the triangulation_<CR_>\*
.BR;TRIANG> ^*GO_<CR_>\*
.BR;#ELAPSED: 00:05:25.84  CPU: 0:00:05.71  BUFIO: 281  DIRIO: 46  FAULTS: 263 

.!******************************************************************************
.PAGE
.SUBTITLE ASSIGN BREAKLINE__FC command
.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*ASSIGN BREAKLINE__FC\*
.INDEX TRIANG> commands> ASSIGN
.INDEX TRIANG> commands> ASSIGN BREAKLINE__FC
.INDEX TRIANG> ASSIGN command

.LEFT MARGIN +8
.P0;Specifies the feature codes of IFF features which are to be treated as 
breaklines when included in the triangulation. 
.LEFT MARGIN -8

.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*FORMAT:######ASSIGN BREAKLINE__FC feature-code[,...]\*

.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*Command parameters:\*

.LEFT MARGIN +8
.P-8;feature-code
.P0; An IFF feature code which must lie in the range 0 to 32767. Multiple
feature codes may be specified separated by commas or spaces. Ranges of feature
codes may be specified by separating the range start and stop values by a colon
e.g. ASSIGN BREAKLINE__FC 2:6 will result in the assignment of feature codes
2,3,4,5 and 6. 
.P 0;If an FRT file has been read into TRIANG any valid feature code group
names may be used as arguments to the ASSIGN BREAKLINE__FC command. 

.LEFT MARGIN -8

.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*DESCRIPTION:\*
.P0; The ASSIGN BREAKLINE__FC command complements the DEASSIGN BREAKLINE__FC
command. ASSIGN BREAKLINE__FC enables the user to 
specify the feature codes of IFF features which are to be treated as 
breaklines when included in the triangulation. 

.P 0;By default no feature codes are assigned for breaklines, rivers etc_.
and all IFF data that lie within the WINDOW bounds are included in the 
triangulation. Explicit IFF layer or feature codes may be removed from a
assignment list by use of the appropriate DEASSIGN command. 

.P 0;Note that selections made with the DESELECT and SELECT
commands will override input data assignments (e.g. ASSIGN BREAKLINE__FC)
which share the same feature code or layer numbers. Thus even though FC 9
has been assigned breakline status by an ASSIGN BREAKLINE__FC 9 command,
all features with FC 9 will be excluded from input if the user has specified a
DESELECT__FC 9 command. Use the SHOW SELECTIONS command to examine current
input selections and the SHOW ASSIGNMENTS command to examine current
assignments. 

.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*Messages:\*

.P 0;The following warning messages are specific to the ASSIGN BREAKLINE__FC
command:

.NO FILL

_*_*_*_ WARNING_ _*_*_*_ You must have read an FRT file to be able to use group names
_*_*_*_ WARNING_ _*_*_*_ No groups have been defined in the FRT
_*_*_*_ WARNING_ _*_*_*_ Illegal feature code 'integer'
_*_*_*_ WARNING_ _*_*_*_ Bad group name 'group-name'
.FILL
.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*Examples:\*
.BLANK
.BR;TRIANG> ^^^*ASSIGN BREAKLINE__FC 6:9,WATER,126_<CR_>\*
.BR;TRIANG>

.!******************************************************************************
.PAGE
.SUBTITLE ASSIGN BREAKLINE__LAYER command
.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*ASSIGN BREAKLINE__LAYER\*
.INDEX TRIANG> commands> ASSIGN
.INDEX TRIANG> commands> ASSIGN BREAKLINE__LAYER
.INDEX TRIANG> ASSIGN command

.LEFT MARGIN +8
.P0;Specifies the IFF layer numbers containing features which are to be 
treated as breaklines when included in the triangulation. 
.LEFT MARGIN -8

.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*FORMAT:######ASSIGN BREAKLINE__LAYER layer[,...]\*

.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*Command parameters:\*

.LEFT MARGIN +8
.P-8;layer
.P0; An IFF layer number which must lie in the range 0 to 32767. Multiple
layers may be specified separated by commas or spaces. Ranges of layers
may be specified by separating the range start and stop values by a colon
e.g. ASSIGN BREAKLINE__LAYER 2:6 will result in the assignment of layers
2,3,4,5 and 6. 

.LEFT MARGIN -8

.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*DESCRIPTION:\*
.P0; The ASSIGN BREAKLINE__LAYER command complements the DEASSIGN
BREAKLINE__LAYER command. The ASSIGN BREAKLINE__LAYER command enables the user to
specify the IFF layer numbers containing features which are to be 
treated as breaklines when included in the triangulation. 

.P 0;By default no layers are assigned for breaklines, rivers etc_.
and all IFF data that lie within the WINDOW bounds are included in the 
triangulation. Explicit IFF layer or
feature codes may be removed from a assignment list by use of the appropriate
DEASSIGN command. 

.P 0;Note that selections made with the DESELECT and SELECT
commands will override input data assignments (e.g. ASSIGN BREAKLINE__FC)
which share the same feature code or layer numbers. Thus even though FC 9
has been assigned breakline status by an ASSIGN BREAKLINE__FC 9 command,
all features with FC 9 will be excluded from input if the user has specified a
DESELECT__FC 9 command. Use the SHOW SELECTIONS command to examine current
input selections and the SHOW ASSIGNMENTS command to examine current
assignments. 
.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*Messages:\*

.P 0;The following warning messages are specific to the ASSIGN
BREAKLINE__LAYER command:

.NO FILL

_*_*_*_ WARNING_ _*_*_*_ Too many layer arguments in one command
_*_*_*_ WARNING_ _*_*_*_ Illegal layer number 'integer'

.FILL
.TP 4
.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*Examples:\*
.BLANK
.BR;TRIANG> ^^^*ASSIGN BREAKLINE__LAYER 21:29,126_<CR_>\*
.BR;TRIANG>

.!******************************************************************************
.PAGE
.SUBTITLE ASSIGN CLIFF__FC command
.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*ASSIGN CLIFF__FC\*
.INDEX TRIANG> commands> ASSIGN CLIFF__FC
.INDEX TRIANG> commands> ASSIGN
.INDEX TRIANG> ASSIGN command

.LEFT MARGIN +8
.P0;Specifies the feature codes of IFF features which are to be treated as 
cliffs when included in the triangulation. 
.LEFT MARGIN -8

.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*FORMAT:######ASSIGN CLIFF__FC feature-code[,...]\*

.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*Command parameters:\*

.LEFT MARGIN +8
.P-8;feature-code
.P0; An IFF feature code which must lie in the range 0 to 32767. Multiple
feature codes may be specified separated by commas or spaces. Ranges of feature
codes may be specified by separating the range start and stop values by a colon
e.g. ASSIGN CLIFF__FC 2:6 will result in the assignment of feature
codes 2,3,4,5 and 6. 
.P 0;If an FRT file has been read into TRIANG any valid feature code group
names may be used as arguments to the ASSIGN CLIFF__FC command. 

.LEFT MARGIN -8

.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*DESCRIPTION:\*
.P0; The ASSIGN CLIFF__FC command complements the DEASSIGN CLIFF__FC command.
The ASSIGN CLIFF__FC command enables the user to specify the feature codes of
IFF features which are to be treated as cliffs when included in the
triangulation. 

.P 0;For information about digitising and the internal treatment of clifflines,
see the main Description section above.

.P 0;By default no feature codes are assigned for breaklines, rivers etc_. and
all IFF data that lie within the WINDOW bounds are included in the
triangulation. Explicit IFF layer or feature codes may be removed from a
assignment list by use of the appropriate DEASSIGN command. 

.P 0;Note that selections made with the DESELECT and SELECT
commands will override input data assignments (e.g. ASSIGN BREAKLINE__FC)
which share the same feature code or layer numbers. Thus even though FC 9
has been assigned breakline status by an ASSIGN BREAKLINE__FC 9 command,
all features with FC 9 will be excluded from input if the user has specified a
DESELECT__FC 9 command. Use the SHOW SELECTIONS command to examine current
input selections and the SHOW ASSIGNMENTS command to examine current
assignments. 
.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*Messages:\*

.P 0;The following warning messages are specific to the ASSIGN
CLIFF__FC command: 

.NO FILL

_*_*_*_ WARNING_ _*_*_*_ You must have read an FRT file to be able to use group names
_*_*_*_ WARNING_ _*_*_*_ No groups have been defined in the FRT
_*_*_*_ WARNING_ _*_*_*_ Illegal feature code 'integer'
_*_*_*_ WARNING_ _*_*_*_ Bad group name 'group-name'
.FILL
.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*Examples:\*
.BLANK
.BR;TRIANG> ^^^*ASSIGN CLIFF__FC 6:9,WATER,126_<CR_>\*
.BR;TRIANG>

.!******************************************************************************
.PAGE
.SUBTITLE ASSIGN CLIFF__LAYER command
.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*ASSIGN CLIFF__LAYER\*
.INDEX TRIANG> commands> ASSIGN
.INDEX TRIANG> commands> ASSIGN CLIFF__LAYER
.INDEX TRIANG> ASSIGN command

.LEFT MARGIN +8
.P0;Specifies the IFF layer numbers containing features which are to be 
treated as cliffs when included in the triangulation. 
.LEFT MARGIN -8

.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*FORMAT:######ASSIGN CLIFF__LAYER layer[,...]\*

.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*Command parameters:\*

.LEFT MARGIN +8
.P-8;layer
.P0; An IFF layer number which must lie in the range 0 to 32767. Multiple
layers may be specified separated by commas or spaces. Ranges of layers
may be specified by separating the range start and stop values by a colon
e.g. ASSIGN CLIFF__LAYER 2:6 will result in the assignment of layers
2,3,4,5 and 6. 

.LEFT MARGIN -8

.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*DESCRIPTION:\*

.P0; The ASSIGN CLIFF__LAYER command complements the DEASSIGN
CLIFF__LAYER command. The ASSIGN CLIFF__LAYER command enables
the user to specify the IFF layer numbers containing features which are to be
treated as breaklines when included in the triangulation. 

.P 0;For information about digitising and the internal treatment of clifflines,
see the main Description section above.

.P 0;By default no layers are assigned for cliffs, rivers etc_.
and all IFF data that lie within the WINDOW bounds are included in the 
triangulation. Explicit IFF layer or
feature codes may be removed from a assignment list by use of the appropriate
DEASSIGN command. 

.P 0;Note that selections made with the DESELECT and SELECT
commands will override input data assignments (e.g. ASSIGN BREAKLINE__FC)
which share the same feature code or layer numbers. Thus even though FC 9
has been assigned breakline status by an ASSIGN BREAKLINE__FC 9 command,
all features with FC 9 will be excluded from input if the user has specified a
DESELECT__FC 9 command. Use the SHOW SELECTIONS command to examine current
input selections and the SHOW ASSIGNMENTS command to examine current
assignments. 
.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*Messages:\*

.P 0;The following warning messages are specific to the ASSIGN
CLIFF__LAYER command:

.NO FILL

_*_*_*_ WARNING_ _*_*_*_ Too many layer arguments in one command
_*_*_*_ WARNING_ _*_*_*_ Illegal layer number 'integer'

.FILL
.TP 4
.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*Examples:\*
.BLANK
.BR;TRIANG> ^^^*ASSIGN CLIFF__LAYER 21:29,126_<CR_>\*
.BR;TRIANG>



.!******************************************************************************
.PAGE
.SUBTITLE ASSIGN RIDGE__FC command
.P0
^*--------------------------------------------------------------------------------\*
.BR;^^^*ASSIGN RIDGE__FC\*
.INDEX TRIANG> commands> ASSIGN RIDGE__FC
.INDEX TRIANG> commands> ASSIGN
.INDEX TRIANG> ASSIGN command

.LEFT MARGIN +8
.P0;Specifies the feature codes of IFF features which are to be treated as 
ridgelines when included in the triangulation. 
.LEFT MARGIN -8

.P0
^*--------------------------------------------------------------------------------\*
.BR;^^^*FORMAT:######ASSIGN RIDGE__FC feature-code[,...]\*

.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*Command parameters:\*

.LEFT MARGIN +8
.P-8;feature-code
.P0; An IFF feature code which must lie in the range 0 to 32767. Multiple
feature codes may be specified separated by commas or spaces. Ranges of feature
codes may be specified by separating the range start and stop values by a colon
e.g. ASSIGN RIDGE__FC 2:6 will result in the assignment of feature
codes 2,3,4,5 and 6. 
.P 0;If an FRT file has been read into TRIANG any valid feature code group
names may be used as arguments to the ASSIGN RIDGE__FC command. 

.LEFT MARGIN -8

.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*DESCRIPTION:\*
.P0; The ASSIGN RIDGE__FC command complements the DEASSIGN
RIDGE__FC command. ASSIGN RIDGE__FC enables the user to specify
the feature codes of IFF features which are to be treated as 
breaklines when included in the triangulation. 

.P 0;By default no feature codes are assigned for ridgelines, rivers etc_.
and all IFF data that lie within the WINDOW bounds are included in the 
triangulation. Explicit IFF layer or
feature codes may be removed from a assignment list by use of the appropriate
DEASSIGN command. 
.P 0;Note that selections made with the DESELECT and SELECT
commands will override input data assignments (e.g. ASSIGN BREAKLINE__FC)
which share the same feature code or layer numbers. Thus even though FC 9
has been assigned breakline status by an ASSIGN BREAKLINE__FC 9 command,
all features with FC 9 will be excluded from input if the user has specified a
DESELECT__FC 9 command. Use the SHOW SELECTIONS command to examine current
input selections and the SHOW ASSIGNMENTS command to examine current
assignments. 
.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*Messages:\*

.P 0;The following warning messages are specific to the ASSIGN
RIDGE__FC command: 

.NO FILL

_*_*_*_ WARNING_ _*_*_*_ You must have read an FRT file to be able to use group names
_*_*_*_ WARNING_ _*_*_*_ No groups have been defined in the FRT
_*_*_*_ WARNING_ _*_*_*_ Illegal feature code 'integer'
_*_*_*_ WARNING_ _*_*_*_ Bad group name 'group-name'
.FILL
.TP 4
.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*Examples:\*
.BLANK
.BR;TRIANG> ^^^*ASSIGN RIDGE__FC 6:9,WATER,126_<CR_>\*
.BR;TRIANG>

.!******************************************************************************
.PAGE
.SUBTITLE ASSIGN RIDGE__LAYER command
.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*ASSIGN RIDGE__LAYER\*
.INDEX TRIANG> commands> ASSIGN
.INDEX TRIANG> commands> ASSIGN RIDGE__LAYER
.INDEX TRIANG> ASSIGN command

.LEFT MARGIN +8
.P0;Specifies the IFF layer numbers containing features which are to be 
treated as ridgelines when included in the triangulation. 
.LEFT MARGIN -8

.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*FORMAT:######ASSIGN RIDGE__LAYER layer[,...]\*

.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*Command parameters:\*

.LEFT MARGIN +8
.P-8;layer
.P0; An IFF layer which must lie in the range 0 to 32767. Multiple
layers may be specified separated by commas or spaces. Ranges of layers
may be specified by separating the range start and stop values by a colon
e.g. ASSIGN RIDGE__LAYER 2:6 will result in the assignment of layers
2,3,4,5 and 6 to identify ridgelines.
.LEFT MARGIN -8
.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*DESCRIPTION:\*
.P0; The ASSIGN RIDGE__LAYER command complements the DEASSIGN
RIDGE__LAYER command. The ASSIGN RIDGE__LAYER command enables the user to
specify the IFF layer numbers containing features which are to be 
treated as ridgelines when included in the triangulation. 

.P 0;By default no layers are assigned for breaklines, rivers etc_.
and all IFF data that lie within the WINDOW bounds are included in the 
triangulation. Explicit IFF layer or
feature codes may be removed from a assignment list by use of the appropriate
DEASSIGN command. 

.P 0;Note that selections made with the DESELECT and SELECT
commands will override input data assignments (e.g. ASSIGN BREAKLINE__FC)
which share the same feature code or layer numbers. Thus even though FC 9
has been assigned breakline status by an ASSIGN BREAKLINE__FC 9 command,
all features with FC 9 will be excluded from input if the user has specified a
DESELECT__FC 9 command. Use the SHOW SELECTIONS command to examine current
input selections and the SHOW ASSIGNMENTS command to examine current
assignments. 
.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*Messages:\*

.P 0;The following warning messages are specific to the ASSIGN
RIDGE__LAYER command:

.NO FILL

_*_*_*_ WARNING_ _*_*_*_ Too many layer arguments in one command
_*_*_*_ WARNING_ _*_*_*_ Illegal layer number 'integer'

.FILL
.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*Examples:\*
.BLANK
.BR;TRIANG> ^^^*ASSIGN RIDGE__LAYER 21:29,126_<CR_>\*
.BR;TRIANG>


.!******************************************************************************
.PAGE
.SUBTITLE ASSIGN RIVER__FC command
.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*ASSIGN RIVER__FC\*
.INDEX TRIANG> commands> ASSIGN RIVER__FC
.INDEX TRIANG> commands> ASSIGN
.INDEX TRIANG> ASSIGN command

.LEFT MARGIN +8
.P0;Specifies the feature codes of IFF features which are to be treated as 
breaklines when included in the triangulation. 
.LEFT MARGIN -8

.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*FORMAT:######ASSIGN RIVER__FC feature-code[,...]\*

.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*Command parameters:\*

.LEFT MARGIN +8
.P-8;feature-code
.P0; An IFF feature code which must lie in the range 0 to 32767. Multiple
feature codes may be specified separated by commas or spaces. Ranges of feature
codes may be specified by separating the range start and stop values by a colon
e.g. ASSIGN RIVER__FC 2:6 will result in the assignment of feature
codes 2,3,4,5 and 6. 
.P 0;If an FRT file has been read into TRIANG any valid feature code group
names may be used as arguments to the ASSIGN RIVER__FC command. 

.LEFT MARGIN -8

.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*DESCRIPTION:\*
.P0; The ASSIGN RIVER__FC command complements the DEASSIGN
RIVER__FC command. ASSIGN RIVER__FC enables the user to specify
the feature codes of IFF features which are to be treated as 
breaklines when included in the triangulation. 

.P 0;By default no feature codes are assigned for cliffs, rivers etc_.
and all IFF data that lie within the WINDOW bounds are included in the 
triangulation. Explicit IFF layer or
feature codes may be removed from a assignment list by use of the appropriate
DEASSIGN command. 

.P 0;Note that selections made with the DESELECT and SELECT
commands will override input data assignments (e.g. ASSIGN BREAKLINE__FC)
which share the same feature code or layer numbers. Thus even though FC 9
has been assigned breakline status by an ASSIGN BREAKLINE__FC 9 command,
all features with FC 9 will be excluded from input if the user has specified a
DESELECT__FC 9 command. Use the SHOW SELECTIONS command to examine current
input selections and the SHOW ASSIGNMENTS command to examine current
assignments. 
.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*Messages:\*

.P 0;The following warning messages are specific to the ASSIGN
FC command: 

.NO FILL

_*_*_*_ WARNING_ _*_*_*_ You must have read an FRT file to be able to use group names
_*_*_*_ WARNING_ _*_*_*_ No groups have been defined in the FRT
_*_*_*_ WARNING_ _*_*_*_ Illegal feature code 'integer'
_*_*_*_ WARNING_ _*_*_*_ Bad group name 'group-name'
.FILL
.TP 4
.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*Examples:\*
.BLANK
.BR;TRIANG> ^^^*ASSIGN RIVER__FC 6:9,WATER,126_<CR_>\*
.BR;TRIANG>

.!******************************************************************************
.PAGE
.SUBTITLE ASSIGN RIVER__LAYER command
.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*ASSIGN RIVER__LAYER\*
.INDEX TRIANG> commands> ASSIGN
.INDEX TRIANG> commands> ASSIGN RIVER__LAYER
.INDEX TRIANG> ASSIGN command

.LEFT MARGIN +8
.P0;Specifies the IFF layer numbers containing features which are to be 
treated as rivers when included in the triangulation. 
.LEFT MARGIN -8

.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*FORMAT:######ASSIGN RIVER__LAYER layer[,...]\*

.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*Command parameters:\*

.LEFT MARGIN +8
.P-8;layer
.P0; An IFF layer which must lie in the range 0 to 32767. Multiple
layers may be specified separated by commas or spaces. Ranges of layers
may be specified by separating the range start and stop values by a colon
e.g. ASSIGN RIVER__LAYER 2:6 will result in the assignment of layers
2,3,4,5 and 6 to identify rivers.
.LEFT MARGIN -8

.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*DESCRIPTION:\*
.P0; The ASSIGN RIVER__LAYER command complements the DEASSIGN
RIVER__LAYER command. The ASSIGN RIVER__LAYER command enables the user to
specify the IFF layer numbers containing features which are to be 
treated as breaklines when included in the triangulation. 

.P 0;By default no layers are assigned for breaklines, rivers etc_.
and all IFF data that lie within the WINDOW bounds are included in the 
triangulation. Explicit IFF layer or
feature codes may be removed from a assignment list by use of the appropriate
DEASSIGN command. 

.P 0;Note that selections made with the DESELECT and SELECT
commands will override input data assignments (e.g. ASSIGN BREAKLINE__FC)
which share the same feature code or layer numbers. Thus even though FC 9
has been assigned breakline status by an ASSIGN BREAKLINE__FC 9 command,
all features with FC 9 will be excluded from input if the user has specified a
DESELECT__FC 9 command. Use the SHOW SELECTIONS command to examine current
input selections and the SHOW ASSIGNMENTS command to examine current
assignments. 
.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*Messages:\*

.P 0;The following warning messages are specific to the ASSIGN
RIVER__LAYER command:

.NO FILL

_*_*_*_ WARNING_ _*_*_*_ Too many layer arguments in one command
_*_*_*_ WARNING_ _*_*_*_ Illegal layer number 'integer'

.FILL
.TP 4
.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*Examples:\*
.BLANK
.BR;TRIANG> ^^^*ASSIGN RIVER__LAYER 21:29,126_<CR_>\*
.BR;TRIANG>

.!******************************************************************************
.PAGE
.SUBTITLE DATUM command
.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*DATUM\*
.INDEX TRIANG> commands> DATUM 
.INDEX TRIANG> commands> DATUM
.INDEX TRIANG> DATUM command

.LEFT MARGIN +8
.P0;Enables specification of a height datum to be added to IFF and DTI heights
read using subsequent FILEIN commands.
.LEFT MARGIN -8

.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*FORMAT:######DATUM value

.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*Command parameters:\*

.LEFT MARGIN +8
.P-8;value
.P0;A floating-point height value which is to be added to IFF and DTI heights
read using subsequent FILEIN commands. DATUM values are expressed relative
to the contents of the DTI or IFF file to be read in.


.LEFT MARGIN -8

.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*DESCRIPTION:\*
.P0;The DATUM command enables specification of a height datum to be added to
IFF and DTI heights read using subsequent FILEIN commands. 

.P 0;On program statup a DATUM default value of 0.0 is assumed.

.P 0;Height information within a single IFF file may be stored relative to
different height data providing that the features pertaining to each height
datum can be distinguished by feature code or layer. The DATUM command can be
used to set the height datum for a subsequent FILEIN command. If required a
single IFF file may be read in many times relative to different height data,
feature selection being achieved by SELECT FC and SELECT LAYER commands. 

.P 0;If the DATUM command is specified prior to reading a DTI file (using the 
FORMAT DTI and FILEIN commands), the datum change is applied to all posts
within the  DTI file. 

.P 0;If the INVERSE command has been used to specify height inversion
the heights are inverted before the datum value is added.

.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*Messages:\*

.P 0;The following messages are specific to the DATUM command:

.LITERAL

*** ERROR *** You must specify a floating point argument to the DATUM command
*** WARNING *** You must specify a floating point argument to the DATUM command

.END LITERAL
.FILL
.TP 4
.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*Examples:\*
.BLANK
.NO FILL
.BLANK
.BR;TRIANG> ^*DATUM 8.2_<CR_>\*
.BR;TRIANG> ^*FILEIN HUNSTANTON__BATHEMETRY_<CR_>\*
IFF file LSL$IF:HUNSTANTON__BATHEMETRY.IFF;0 opened for read


+----------------------------------------------------------------+
|                                                                |
|		Starting pass through IFF file                   |
|                                                                |
+----------------------------------------------------------------+


There are now 671 points in the DTM area
.BR;TRIANG> ^*DATUM 0.0_<CR_>\*
.BR;TRIANG> ^*FILEIN ATILLA_<CR_>\*
IFF file LSL$IF:ATTILA.IFF;0 opened for read


+----------------------------------------------------------------+
|                                                                |
|		Starting pass through IFF file                   |
|                                                                |
+----------------------------------------------------------------+


There are now 55527 points in the DTM area
.BR;TRIANG>
.FILL

.!******************************************************************************
.PAGE
.SUBTITLE DEASSIGN BREAKLINE__FC command
.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*DEASSIGN BREAKLINE__FC\*
.INDEX TRIANG> commands> DEASSIGN
.INDEX TRIANG> commands> DEASSIGN BREAKLINE__FC
.INDEX TRIANG> DEASSIGN command

.LEFT MARGIN +8
.P0; Deassigns specified IFF feature codes from the list of feature codes 
identifying breaklines to be included in the triangulation. 
.LEFT MARGIN -8

.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*FORMAT:######DEASSIGN BREAKLINE__FC feature-code[,...]\*

.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*Command parameters:\*

.LEFT MARGIN +8
.P-8;feature-code
.P0; An IFF feature code which must lie in the range 0 to 32767. Multiple
feature codes may be specified separated by commas or spaces. Ranges of feature
codes may be specified by separating the range start and stop values by a colon
e.g. DEASSIGN BREAKLINE__FC 2:6 will result in the deassignment of feature codes
2,3,4,5 and 6. 
.P 0;If an FRT file has been read into TRIANG any valid feature code group
names may be used as arguments to the DEASSIGN BREAKLINE__FC command. 

.LEFT MARGIN -8

.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*DESCRIPTION:\*
.P0; The DEASSIGN BREAKLINE__FC command complements the ASSIGN BREAKLINE__FC
command. DEASSIGN BREAKLINE__FC enables the user to remove specified feature
codes from the list of feature codes that have been assigned for
interpretation as breaklines. 

.P 0;By default no feature codes are assigned for breaklines, rivers etc_.
and all IFF data that lie within the WINDOW bounds are included in the 
triangulation. 

.P 0;Note that selections made with the DESELECT and SELECT
commands will override input data assignments (e.g. ASSIGN BREAKLINE__FC)
which share the same feature code or layer numbers. Thus even though FC 9
has been assigned breakline status by an ASSIGN BREAKLINE__FC 9 command,
all features with FC 9 will be excluded from input if the user has specified a
DESELECT__FC 9 command. Use the SHOW SELECTIONS command to examine current
input selections and the SHOW ASSIGNMENTS command to examine current
assignments. 
.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*Messages:\*

.P 0;The following warning messages are specific to the DEASSIGN BREAKLINE__FC
command:

.NO FILL

_*_*_*_ WARNING_ _*_*_*_ You must have read an FRT file to be able to use group names
_*_*_*_ WARNING_ _*_*_*_ No groups have been defined in the FRT
_*_*_*_ WARNING_ _*_*_*_ Illegal feature code 'integer'
_*_*_*_ WARNING_ _*_*_*_ Bad group name 'group-name'
.FILL
.TP 4
.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*Examples:\*
.BLANK
.BR;TRIANG> ^^^*DEASSIGN BREAKLINE__FC 6:9,CLIFFS,126_<CR_>\*
.BR;TRIANG>

.!******************************************************************************
.PAGE
.SUBTITLE DEASSIGN BREAKLINE__LAYER command
.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*DEASSIGN BREAKLINE__LAYER\*
.INDEX TRIANG> commands> DEASSIGN
.INDEX TRIANG> commands> DEASSIGN BREAKLINE__LAYER
.INDEX TRIANG> DEASSIGN command

.LEFT MARGIN +8
.P0; Deassigns specified IFF layers from the list of those assigned for
use as breaklines within the triangulation. 
.LEFT MARGIN -8

.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*FORMAT:######DEASSIGN BREAKLINE__LAYER layer[,...]\*

.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*Command parameters:\*

.LEFT MARGIN +8
.P-8;layer
.P0; An IFF layer number which must lie in the range 0 to 32767. Multiple
layers may be specified separated by commas or spaces. Ranges of layers
may be specified by separating the range start and stop values by a colon
e.g. DEASSIGN BREAKLINE__LAYER 2:6 will result in the deassignment of layers
2,3,4,5 and 6. 

.LEFT MARGIN -8

.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*DESCRIPTION:\*
.P0; The DEASSIGN BREAKLINE__LAYER command complements the ASSIGN
BREAKLINE__LAYER command. DEASSIGN BREAKLINE__LAYER enables the user to remove
specified layers from the list of layers that have been assigned
for interpretation as breaklines. 

.P 0;By default no layers are assigned for breaklines, rivers etc_.
and all IFF data that lie within the WINDOW bounds are included in the 
triangulation. 

.P 0;Note that selections made with the DESELECT and SELECT
commands will override input data assignments (e.g. ASSIGN BREAKLINE__FC)
which share the same feature code or layer numbers. Thus even though FC 9
has been assigned breakline status by an ASSIGN BREAKLINE__FC 9 command,
all features with FC 9 will be excluded from input if the user has specified a
DESELECT__FC 9 command. Use the SHOW SELECTIONS command to examine current
input selections and the SHOW ASSIGNMENTS command to examine current
assignments. 
.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*Messages:\*

.P 0;The following warning messages are specific to the DEASSIGN
BREAKLINE__LAYER command:

.NO FILL

_*_*_*_ WARNING_ _*_*_*_ Too many layer arguments in one command
_*_*_*_ WARNING_ _*_*_*_ Illegal layer number 'integer'

.FILL
.TP 4
.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*Examples:\*
.BLANK
.BR;TRIANG> ^^^*DEASSIGN BREAKLINE__LAYER 21:29,126_<CR_>\*
.BR;TRIANG>

.!******************************************************************************
.PAGE
.SUBTITLE DEASSIGN CLIFF__FC command
.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*DEASSIGN CLIFF__FC\*
.INDEX TRIANG> commands> DEASSIGN CLIFF__FC
.INDEX TRIANG> commands> DEASSIGN
.INDEX TRIANG> DEASSIGN command

.LEFT MARGIN +8
.P0; Deassigns specified IFF feature codes from the list of feature codes 
identifying cliffs to be included in the triangulation. 
.LEFT MARGIN -8

.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*FORMAT:######DEASSIGN CLIFF__FC feature-code[,...]\*

.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*Command parameters:\*

.LEFT MARGIN +8
.P-8;feature-code
.P0; An IFF feature code which must lie in the range 0 to 32767. Multiple
feature codes may be specified separated by commas or spaces. Ranges of feature
codes may be specified by separating the range start and stop values by a colon
e.g. DEASSIGN CLIFF__FC 2:6 will result in the deassignment of feature
codes 2,3,4,5 and 6. 

.P 0;If an FRT file has been read into TRIANG any valid feature code group
names may be used as arguments to the DEASSIGN CLIFF__FC command. 

.LEFT MARGIN -8

.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*DESCRIPTION:\*
.P0; The DEASSIGN CLIFF__FC command complements the ASSIGN
CLIFF__FC command. DEASSIGN CLIFF__FC enables the user to
remove specified feature codes from the list of feature codes that have been
assigned for interpretation as cliffs. 

.P 0;For information about digitising and the internal treatment of clifflines,
see the main Description section above.

.P 0;By default no feature codes are assigned for cliffs, breaklines, rivers
etc_. and all IFF data that lie within the WINDOW bounds are included in the
triangulation. 

.P 0;Note that selections made with the DESELECT and SELECT
commands will override input data assignments (e.g. ASSIGN BREAKLINE__FC)
which share the same feature code or layer numbers. Thus even though FC 9
has been assigned breakline status by an ASSIGN BREAKLINE__FC 9 command,
all features with FC 9 will be excluded from input if the user has specified a
DESELECT__FC 9 command. Use the SHOW SELECTIONS command to examine current
input selections and the SHOW ASSIGNMENTS command to examine current
assignments. 
.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*Messages:\*

.P 0;The following warning messages are specific to the DEASSIGN
CLIFF__FC command: 

.NO FILL

_*_*_*_ WARNING_ _*_*_*_ You must have read an FRT file to be able to use group names
_*_*_*_ WARNING_ _*_*_*_ No groups have been defined in the FRT
_*_*_*_ WARNING_ _*_*_*_ Illegal feature code 'integer'
_*_*_*_ WARNING_ _*_*_*_ Bad group name 'group-name'
.FILL
.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*Examples:\*
.BLANK
.BR;TRIANG> ^^^*DEASSIGN CLIFF__FC 6:9,WATER,126_<CR_>\*
.BR;TRIANG>

.!******************************************************************************
.PAGE
.SUBTITLE DEASSIGN CLIFF__LAYER command
.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*DEASSIGN CLIFF__LAYER\*
.INDEX TRIANG> commands> DEASSIGN
.INDEX TRIANG> commands> DEASSIGN CLIFF__LAYER
.INDEX TRIANG> DEASSIGN command

.LEFT MARGIN +8
.P0; Deassigns specified IFF layers from the list of those assigned for
use as cliffs within the triangulation. 
.LEFT MARGIN -8

.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*FORMAT:######DEASSIGN CLIFF__LAYER layer[,...]\*

.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*Command parameters:\*

.LEFT MARGIN +8
.P-8;layer
.P0; An IFF layer number which must lie in the range 0 to 32767. Multiple
layers may be specified separated by commas or spaces. Ranges of layers
may be specified by separating the range start and stop values by a colon
e.g. DEASSIGN CLIFF__LAYER 2:6 will result in the deassignment of layers
2,3,4,5 and 6. 

.LEFT MARGIN -8

.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*DESCRIPTION:\*

.P0; The DEASSIGN CLIFF__LAYER command complements the ASSIGN
CLIFF__LAYER command. DEASSIGN CLIFF__LAYER enables the user to
remove specified layers from the list of layers that have been assigned for
interpretation as cliffs during triangulation formation.

.P 0;For information about digitising and the internal treatment of clifflines,
see the main Description section above.

.P 0;By default no layers are assigned for cliffs, breaklines, rivers
etc_. and all IFF data that lie within the WINDOW bounds are included in the
triangulation. 

.P 0;Note that selections made with the DESELECT and SELECT
commands will override input data assignments (e.g. ASSIGN BREAKLINE__FC)
which share the same feature code or layer numbers. Thus even though FC 9
has been assigned breakline status by an ASSIGN BREAKLINE__FC 9 command,
all features with FC 9 will be excluded from input if the user has specified a
DESELECT__FC 9 command. Use the SHOW SELECTIONS command to examine current
input selections and the SHOW ASSIGNMENTS command to examine current
assignments. 
.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*Messages:\*

.P 0;The following warning messages are specific to the DEASSIGN
CLIFF__LAYER command:

.NO FILL

_*_*_*_ WARNING_ _*_*_*_ Too many layer arguments in one command
_*_*_*_ WARNING_ _*_*_*_ Illegal layer number 'integer'

.FILL
.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*Examples:\*
.BLANK
.BR;TRIANG> ^^^*DEASSIGN CLIFF__LAYER 21:29,126_<CR_>\*
.BR;TRIANG>


.!******************************************************************************
.PAGE
.SUBTITLE DEASSIGN RIDGE__FC command
.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*DEASSIGN RIDGE__FC\*
.INDEX TRIANG> commands> DEASSIGN RIDGE__FC
.INDEX TRIANG> commands> DEASSIGN
.INDEX TRIANG> DEASSIGN command

.LEFT MARGIN +8
.P0; Deassigns specified IFF feature codes from the list of feature codes 
identifying ridgelines to be included in the triangulation. 
.LEFT MARGIN -8

.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*FORMAT:######DEASSIGN RIDGE__FC feature-code[,...]\*

.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*Command parameters:\*

.LEFT MARGIN +8
.P-8;feature-code
.P0; An IFF feature code which must lie in the range 0 to 32767. Multiple
feature codes may be specified separated by commas or spaces. Ranges of feature
codes may be specified by separating the range start and stop values by a colon
e.g. DEASSIGN RIDGE__FC 2:6 will result in the deassignment of feature
codes 2,3,4,5 and 6. 
.P 0;If an FRT file has been read into TRIANG any valid feature code group
names may be used as arguments to the DEASSIGN RIDGE__FC command. 

.LEFT MARGIN -8

.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*DESCRIPTION:\*
.P0; The DEASSIGN RIDGE__FC command complements the ASSIGN
RIDGE__FC command. DEASSIGN RIDGE__FC enables the user to remove specified IFF
feature codes from the list of those assigned for use as ridgelines within the
triangulation. 

.P 0;By default no feature codes are assigned for breaklines, rivers etc_.
and all IFF data that lie within the WINDOW bounds are included in the 
triangulation.

.P 0;Note that selections made with the DESELECT and SELECT
commands will override input data assignments (e.g. ASSIGN BREAKLINE__FC)
which share the same feature code or layer numbers. Thus even though FC 9
has been assigned breakline status by an ASSIGN BREAKLINE__FC 9 command,
all features with FC 9 will be excluded from input if the user has specified a
DESELECT__FC 9 command. Use the SHOW SELECTIONS command to examine current
input selections and the SHOW ASSIGNMENTS command to examine current
assignments. 
.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*Messages:\*

.P 0;The following warning messages are specific to the DEASSIGN
FC command: 

.NO FILL

_*_*_*_ WARNING_ _*_*_*_ You must have read an FRT file to be able to use group names
_*_*_*_ WARNING_ _*_*_*_ No groups have been defined in the FRT
_*_*_*_ WARNING_ _*_*_*_ Illegal feature code 'integer'
_*_*_*_ WARNING_ _*_*_*_ Bad group name 'group-name'
.FILL
.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*Examples:\*
.BLANK
.BR;TRIANG> ^^^*DEASSIGN RIDGE__FC 6:9,WATER,126_<CR_>\*
.BR;TRIANG>

.!******************************************************************************
.PAGE
.SUBTITLE DEASSIGN RIDGE__LAYER command
.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*DEASSIGN RIDGE__LAYER\*
.INDEX TRIANG> commands> DEASSIGN
.INDEX TRIANG> commands> DEASSIGN RIDGE__LAYER
.INDEX TRIANG> DEASSIGN command

.LEFT MARGIN +8
.P0; Deassigns specified IFF layers from the list of layers 
identifying ridgelines to be included in the triangulation. 
.LEFT MARGIN -8

.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*FORMAT:######DEASSIGN RIDGE__LAYER layer[,...]\*

.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*Command parameters:\*

.LEFT MARGIN +8
.P-8;layer
.P0; An IFF layer which must lie in the range 0 to 32767. Multiple
layers may be specified separated by commas or spaces. Ranges of layers
may be specified by separating the range start and stop values by a colon
e.g. DEASSIGN RIDGE__LAYER 2:6 will result in the deassignment of layers
2,3,4,5 and 6. 
.LEFT MARGIN -8

.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*DESCRIPTION:\*
.P0; The DEASSIGN RIDGE__LAYER command complements the ASSIGN
RIDGE__LAYER command. DEASSIGN RIDGE__LAYER enables the user to
remove specified layers from the list of layers that have been assigned for
interpretation as ridgelines during triangulation formation.

.P 0;By default no layers are selected for breaklines, rivers etc_.
and all IFF data that lie within the WINDOW bounds are included in the 
triangulation.

.P 0;Note that selections made with the DESELECT and SELECT
commands will override input data assignments (e.g. ASSIGN BREAKLINE__FC)
which share the same feature code or layer numbers. Thus even though FC 9
has been assigned breakline status by an ASSIGN BREAKLINE__FC 9 command,
all features with FC 9 will be excluded from input if the user has specified a
DESELECT__FC 9 command. Use the SHOW SELECTIONS command to examine current
input selections and the SHOW ASSIGNMENTS command to examine current
assignments. 
.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*Messages:\*

.P 0;The following warning messages are specific to the DEASSIGN
RIDGE__LAYER command:

.NO FILL

_*_*_*_ WARNING_ _*_*_*_ Too many layer arguments in one command
_*_*_*_ WARNING_ _*_*_*_ Illegal layer number 'integer'

.FILL
.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*Examples:\*
.BLANK
.BR;TRIANG> ^^^*DEASSIGN RIDGE__LAYER 21:29,126_<CR_>\*
.BR;TRIANG>


.!******************************************************************************
.PAGE
.SUBTITLE DEASSIGN RIVER__FC command
.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*DEASSIGN RIVER__FC\*
.INDEX TRIANG> commands> DEASSIGN RIVER__FC
.INDEX TRIANG> commands> DEASSIGN
.INDEX TRIANG> DEASSIGN command

.LEFT MARGIN +8
.P0; Deassigns specified IFF feature codes from the list of feature codes 
identifying rivers to be included in the triangulation. 
.LEFT MARGIN -8

.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*FORMAT:######DEASSIGN RIVER__FC feature-code[,...]\*

.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*Command parameters:\*

.LEFT MARGIN +8
.P-8;feature-code
.P0; An IFF feature code which must lie in the range 0 to 32767. Multiple
feature codes may be specified separated by commas or spaces. Ranges of feature
codes may be specified by separating the range start and stop values by a colon
e.g. DEASSIGN RIVER__FC 2:6 will result in the deassignment of feature
codes 2,3,4,5 and 6. 
.P 0;If an FRT file has been read into TRIANG any valid feature code group
names may be used as arguments to the DEASSIGN RIVER__FC command. 

.LEFT MARGIN -8

.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*DESCRIPTION:\*
.P0; The DEASSIGN RIVER__FC command complements the ASSIGN
RIVER__FC command. DEASSIGN RIVER__FC enables the user to remove specified IFF
feature codes from the list of those assigned for use as rivers within the
triangulation. 

.P 0;By default no feature codes are assigned for breaklines, rivers etc_.
and all IFF data that lie within the WINDOW bounds are included in the 
triangulation. 

.P 0;Note that selections made with the DESELECT and SELECT
commands will override input data assignments (e.g. ASSIGN BREAKLINE__FC)
which share the same feature code or layer numbers. Thus even though FC 9
has been assigned breakline status by an ASSIGN BREAKLINE__FC 9 command,
all features with FC 9 will be excluded from input if the user has specified a
DESELECT__FC 9 command. Use the SHOW SELECTIONS command to examine current
input selections and the SHOW ASSIGNMENTS command to examine current
assignments. 
.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*Messages:\*

.P 0;The following warning messages are specific to the DEASSIGN
FC command: 

.NO FILL

_*_*_*_ WARNING_ _*_*_*_ You must have read an FRT file to be able to use group names
_*_*_*_ WARNING_ _*_*_*_ No groups have been defined in the FRT
_*_*_*_ WARNING_ _*_*_*_ Illegal feature code 'integer'
_*_*_*_ WARNING_ _*_*_*_ Bad group name 'group-name'
.FILL
.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*Examples:\*
.BLANK
.BR;TRIANG> ^^^*DEASSIGN RIVER__FC 6:9,WATER,126_<CR_>\*
.BR;TRIANG>

.!******************************************************************************
.PAGE
.SUBTITLE DEASSIGN RIVER__LAYER command
.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*DEASSIGN RIVER__LAYER\*
.INDEX TRIANG> commands> DEASSIGN
.INDEX TRIANG> commands> DEASSIGN RIVER__LAYER
.INDEX TRIANG> DEASSIGN command

.LEFT MARGIN +8
.P0; Deassigns specified IFF layers from the list of layers
containing rivers to be included in the triangulation. 
.LEFT MARGIN -8

.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*FORMAT:######DEASSIGN RIVER__LAYER layer[,...]\*

.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*Command parameters:\*

.LEFT MARGIN +8
.P-8;layer
.P0; An IFF layer which must lie in the range 0 to 32767. Multiple
layers may be specified separated by commas or spaces. Ranges of layers
may be specified by separating the range start and stop values by a colon
e.g. DEASSIGN RIVER__LAYER 2:6 will result in the deassignemnt of layers
2,3,4,5 and 6. 
.LEFT MARGIN -8

.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*DESCRIPTION:\*
.P0; The DEASSIGN RIVER__LAYER command complements the ASSIGN
RIVER__LAYER command. DEASSIGN RIVER__LAYER enables the user to
remove specified layers from the list of layers that have been selected for
interpretation as rivers during triangulation formation.

.P 0;By default no layers are assigned for breaklines, rivers etc_.
and all IFF data that lie within the WINDOW bounds are included in the 
triangulation.

.P 0;Note that selections made with the DESELECT and SELECT
commands will override input data assignments (e.g. ASSIGN BREAKLINE__FC)
which share the same feature code or layer numbers. Thus even though FC 9
has been assigned breakline status by an ASSIGN BREAKLINE__FC 9 command,
all features with FC 9 will be excluded from input if the user has specified a
DESELECT__FC 9 command. Use the SHOW SELECTIONS command to examine current
input selections and the SHOW ASSIGNMENTS command to examine current
assignments. 

.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*Messages:\*
.P 0;The following warning messages are specific to the DEASSIGN
RIVER__LAYER command:

.NO FILL

_*_*_*_ WARNING_ _*_*_*_ Too many layer arguments in one command
_*_*_*_ WARNING_ _*_*_*_ Illegal layer number 'integer'

.FILL
.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*Examples:\*
.BLANK
.BR;TRIANG> ^^^*DEASSIGN RIVER__LAYER 21:29,126_<CR_>\*
.BR;TRIANG>


.!******************************************************************************
.PAGE
.SUBTITLE DESELECT FC command
.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*DESELECT FC\*
.INDEX TRIANG> commands> DESELECT FC
.INDEX TRIANG> commands> DESELECT
.INDEX TRIANG> DESELECT command

.LEFT MARGIN +8
.P0; Deselects specified IFF feature codes. Any IFF features having the
specified feature codes will be excluded from the triangulation. 
.LEFT MARGIN -8

.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*FORMAT:######DESELECT FC feature-code[,...]\*

.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*Command parameters:\*

.LEFT MARGIN +8
.P-8;feature-code
.P0; An IFF feature code which must lie in the range 0 to 32767. Multiple
feature codes may be specified separated by commas or spaces. Ranges of feature
codes may be specified by separating the range start and stop values by a colon
e.g. DESELECT FC 2:6 will result in the deselection of feature
codes 2,3,4,5 and 6. 
.P 0;If an FRT file has been read into TRIANG any valid feature code group
names may be used as arguments to the DESELECT FC command. 

.LEFT MARGIN -8

.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*DESCRIPTION:\*
.P0; The DESELECT FC command complements the SELECT FC command. DESELECT FC
enables the user to prevent TRIANG from reading in any IFF features which
have the specified feature codes.

.P 0;On program startup all FCs are selected for input. 

.P 0;Specific FC selections may then be made with the SELECT FC command.
Only the specified FCs will be used for input. All FCs not explicitly 
specified
in a SELECT FC command will be then excluded from input.

.P 0;ALL FC and layer selections are cancelled by the SELECT ALL command;
i.e. all layers and FCs are reselected for input. 

.P 0;Note that selections made with the DESELECT and SELECT
commands will override input data assignments (e.g. ASSIGN BREAKLINE__FC)
which share the same feature code or layer numbers.



.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*Messages:\*

.P 0;The following warning messages are specific to the DESELECT
FC command: 

.NO FILL

_*_*_*_ WARNING_ _*_*_*_ You must have read an FRT file to be able to use group names
_*_*_*_ WARNING_ _*_*_*_ No groups have been defined in the FRT
_*_*_*_ WARNING_ _*_*_*_ Illegal feature code 'integer'
_*_*_*_ WARNING_ _*_*_*_ Bad group name 'group-name'
.FILL
.TP 4
.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*Examples:\*
.BLANK
.BR;TRIANG> ^^^*DESELECT FC 6:9,WATER,126_<CR_>\*
.BR;TRIANG>

.!******************************************************************************
.PAGE
.SUBTITLE DESELECT LAYER command
.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*DESELECT LAYER\*
.INDEX TRIANG> commands> DESELECT
.INDEX TRIANG> commands> DESELECT LAYER
.INDEX TRIANG> DESELECT command

.LEFT MARGIN +8
.P0; Deselects specified IFF layers. Any IFF features lying within the
specified layers will be excluded from the triangulation. 
.LEFT MARGIN -8

.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*FORMAT:######DESELECT LAYER layer[,...]\*

.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*Command parameters:\*

.LEFT MARGIN +8
.P-8;layer
.P0; An IFF layer number must lie in the range 0 to 32767. Multiple
layers may be specified separated by commas or spaces. Ranges of layers
may be specified by separating the range start and stop values by a colon
e.g. DESELECT LAYER 2:6 will result in the deselection of layers
2,3,4,5 and 6. 

.LEFT MARGIN -8

.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*DESCRIPTION:\*
.P0; The DESELECT LAYER command complements the SELECT LAYER command. DESELECT
LAYER enables the user to prevent TRIANG from reading in any IFF features which
lie within the specified layers.

.P0; The DESELECT LAYER command complements the SELECT LAYER
command. DESELECT LAYER enables the user to prevent TRIANG from reading in any
IFF features which lie within the specified layers. 

.P 0;On program startup all layers are selected for input. 

.P 0;Specific layer selections may then be made with the SELECT FC command.
Only the specified layers will be used for input. All layers not explicitly
specified in SELECT LAYER commands will be then excluded from input. 

.P 0;ALL FC and layer selections are cancelled by the SELECT ALL command;
i.e. all layers and FCs are reselected for input. 

.P 0;Note that selections made with the DESELECT and SELECT
commands will override input data assignments (e.g. ASSIGN BREAKLINE__FC)
which share the same feature code or layer numbers. Thus even though FC 9
has been assigned breakline status by an ASSIGN BREAKLINE__FC 9 command,
all features with FC 9 will be excluded from input if the user has specified a 
DESELECT__FC 9 command. The use can use the SHOW SELECTIONS
command to examine current input selections and SHOW ASSIGNMENTS to
examine current assignments.


.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*Messages:\*

.P 0;The following warning messages are specific to the DESELECT
LAYER command:

.NO FILL

_*_*_*_ WARNING_ _*_*_*_ Too many layer arguments in one command
_*_*_*_ WARNING_ _*_*_*_ Illegal layer number 'integer'

.FILL
.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*Examples:\*
.BLANK
.BR;TRIANG> ^^^*DESELECT LAYER 21:29,126_<CR_>\*
.BR;TRIANG>



.!******************************************************************************
.PAGE
.SUBTITLE DISABLE CONSTRAINT command
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*DISABLE CONSTRAINT\*
.INDEX TRIANG> commands> DISABLE CONSTRAINT
.INDEX TRIANG> DISABLE CONSTRAINT command

.LEFT MARGIN +8
.P0; Disables the constraint of a Delaunay triangulation to input string
paths.
.LEFT MARGIN -8

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*FORMAT:######DISABLE CONSTRAINT \*


.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Command parameters:\*_ None.

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*DESCRIPTION:\*
.P0;  TRIANG always seeks to produce a Delaunay triangulation.
Unfortunately a triangulation which fits the Delaunay ideal may not necessarily
honour the paths of the string input from IFF file. The constraint option
ensures that triangulation never cuts through through any string
features. 

.P 0;The CONSTRAINT option is applied by default and must be explicitly
disabled with the DISABLE CONSTRAINT command if an unmodified Delaunay
triangulation is required.

.P 0;The current status of the CONSTRAINT option can be examined using the 
SHOW ENABLE command.
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Messages:\*_ None.


.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Examples:\*
.BLANK
.BR;$ ^*TRIANG_<CR_>\*
.BR;DTMCREATE module TRIANG of 13:30:39  20-AUG-87
.BR;TRIANG> ^*SHOW ENABLE_<CR_>\*
.NO FILL
CONSTRAINT ................................................... On
DIAGNOSTICS .................................................. Off
DIVIDEBY ..................................................... Off
GRAPHICS ..................................................... Off
INTEGER__HEIGHT ............................................... Off
(Incoming IFF heights expected in type 3 AC entries)
INVERSE ...................................................... Off
MULTIPLY ..................................................... Off
PME .......................................................... Off
SQUARE ....................................................... On
TOFEET ....................................................... Off
TOMETRES ..................................................... Off
.BR;TRIANG> ^*DISABLE CONSTRAINT_<CR_>\*
.BR;TRIANG> ^*SHOW ENABLE_<CR_>\*
CONSTRAINT ................................................... Off
DIAGNOSTICS .................................................. Off
DIVIDEBY ..................................................... OFF
GRAPHICS ..................................................... Off
INTEGER__HEIGHT ............................................... Off
(Incoming IFF heights expected in type 3 AC entries)
INVERSE ...................................................... Off
MULTIPLY ..................................................... Off
PME .......................................................... Off
SQUARE ....................................................... On
TOFEET ....................................................... Off
TOMETRES ..................................................... Off
.BR;TRIANG>
.FILL

.!******************************************************************************
.PAGE
.SUBTITLE DISABLE DIAGNOSTICS command
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*DISABLE DIAGNOSTICS\*
.INDEX TRIANG> commands> DISABLE DIAGNOSTICS
.INDEX TRIANG> DISABLE DIAGNOSTICS command

.LEFT MARGIN +8
.P 0;Disables a previous ENABLE DIAGNOSTICS command. 

.LEFT MARGIN -8

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*FORMAT:######DISABLE DIAGNOSTICS \*


.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Command parameters:\*_ None.

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*DESCRIPTION:\*
.P 0;DISABLE DIAGNOSTICS allows the user to disable a previous 
ENABLE DIAGNOSTICS command.

.P 0;The current status of the DIAGNOSTICS option can be examined using the 
SHOW ENABLE command.

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Messages:\*_ None.

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Examples:\*
.BLANK
.BR;TRIANG> ^*ENABLE DIAGNOSTICS_<CR_>\*
.BR;TRIANG> ^*SHOW ENABLE_<CR_>\*
.NO FILL
CONSTRAINT ................................................... On
DIAGNOSTICS .................................................. On
DIVIDEBY ..................................................... Off
GRAPHICS ..................................................... Off
INTEGER__HEIGHT ............................................... Off
(Incoming IFF heights expected in type 3 AC entries)
INVERSE ...................................................... Off
MULTIPLY ..................................................... Off
PME .......................................................... Off
SQUARE ....................................................... On
TOFEET ....................................................... Off
TOMETRES ..................................................... Off
.BR;TRIANG> ^*DISABLE DIAGNOSTICS_<CR_>\*
.BR;TRIANG> ^*SHOW ENABLE_<CR_>\*
CONSTRAINT ................................................... On
DIAGNOSTICS .................................................. Off
DIVIDEBY ..................................................... Off
GRAPHICS ..................................................... Off
INTEGER__HEIGHT ............................................... Off
(Incoming IFF heights expected in type 3 AC entries)
INVERSE ...................................................... Off
MULTIPLY ..................................................... Off
PME .......................................................... Off
SQUARE ....................................................... On
TOFEET ....................................................... Off
TOMETRES ..................................................... Off
.BR;TRIANG>
.FILL


.!******************************************************************************
.PAGE
.SUBTITLE DISABLE DIVIDEBY command
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*DISABLE DIVIDEBY\*
.INDEX TRIANG> commands> DISABLE DIVIDEBY
.INDEX TRIANG> DISABLE DIVIDEBY command

.LEFT MARGIN +8
.P 0;Disables a previous ENABLE DIVIDEBY command. 

.LEFT MARGIN -8

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*FORMAT:######DISABLE DIVIDEBY\*


.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Command parameters:\*_ None.

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*DESCRIPTION:\*
.P 0;DISABLE DIVIDEBY allows the user to disable a previous  ENABLE DIVIDEBY
command. 

.P 0;The current status of the DIVIDEBY option can be examined using the 
SHOW ENABLE or SHOW HEIGHTS commands.
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Messages:\*_ None.

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Examples:\*
.BLANK
.BR;TRIANG> ^*SHOW DIVIDEBY_<CR_>\*
.BR;TRIANG> ^*SHOW ENABLE_<CR_>\*
.NO FILL
CONSTRAINT ................................................... On
DIAGNOSTICS .................................................. Off
DIVIDEBY ..................................................... Off
GRAPHICS ..................................................... Off
INTEGER__HEIGHT ............................................... Off
(Incoming IFF heights expected in type 3 AC entries)
INVERSE ...................................................... Off
MULTIPLY ..................................................... Off
PME .......................................................... Off
SQUARE ....................................................... On
TOFEET ....................................................... Off
TOMETRES ..................................................... Off
.BR;TRIANG> ^*ENABLE DIVIDEBY 39.2_<CR_>\*
.BR;TRIANG> ^*SHOW DIVIDEBY_<CR_>\*
.BR;TRIANG> ^*SHOW ENABLE_<CR_>\*
CONSTRAINT ................................................... On
DIAGNOSTICS .................................................. Off
DIVIDEBY ..................................................... On
Incoming heights to be divided by ............................ 39.2
GRAPHICS ..................................................... Off
INTEGER__HEIGHT ............................................... Off
(Incoming IFF heights expected in type 3 AC entries)
INVERSE ...................................................... Off
MULTIPLY ..................................................... Off
PME .......................................................... Off
SQUARE ....................................................... On
TOFEET ....................................................... Off
TOMETRES ..................................................... Off
.BR;TRIANG>
.FILL


.!******************************************************************************
.PAGE
.SUBTITLE DISABLE GRAPHICS command
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*DISABLE GRAPHICS\*
.INDEX TRIANG> commands> DISABLE GRAPHICS
.INDEX TRIANG> DISABLE GRAPHICS command

.LEFT MARGIN +8
.P 0;Disables any previous ENABLE GRAPHICS command.
.LEFT MARGIN -8

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*FORMAT:######DISABLE GRAPHICS\*


.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Command parameter:\*_ None.


.P0
^*--------------------------------------------------------------------------------\*
.BR;^*DESCRIPTION:\*

.P 0;The DISABLE GRAPHICS command cancels the effect of a previous
ENABLE GRAPHICS command.

.P 0;The current status of the GRAPHICS option can be examined using the 
SHOW ENABLE command.
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Messages:\*_ None.

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Examples:\*
.BLANK
.BR;$ ^*TRIANG_<CR_>\*
.BR;DTMCREATE module TRIANG of 13:30:39  20-AUG-87
.BR;TRIANG> ^*SHOW ENABLE_<CR_>\*
.NO FILL
CONSTRAINT ................................................... On
DIAGNOSTICS .................................................. Off
DIVIDEBY ..................................................... Off
GRAPHICS ..................................................... Off
INTEGER__HEIGHT ............................................... Off
(Incoming IFF heights expected in type 3 AC entries)
INVERSE ...................................................... Off
MULTIPLY ..................................................... Off
PME .......................................................... Off
SQUARE ....................................................... On
TOFEET ....................................................... Off
TOMETRES ..................................................... Off
.BR;TRIANG> ^*ENABLE_ GRAPHICS_<CR_>\*
.BR;TRIANG> ^*SHOW ENABLE_<CR_>\*
CONSTRAINT ................................................... On
DIAGNOSTICS .................................................. Off
DIVIDEBY ..................................................... Off
GRAPHICS ..................................................... On
INTEGER__HEIGHT ............................................... Off
(Incoming IFF heights expected in type 3 AC entries)
INVERSE ...................................................... Off
MULTIPLY ..................................................... Off
PME .......................................................... Off
SQUARE ....................................................... On
TOFEET ....................................................... Off
TOMETRES ..................................................... Off
.BR;TRIANG>
.FILL




.!******************************************************************************
.PAGE
.SUBTITLE DISABLE INTEGER__HEIGHT command
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*DISABLE INTEGER__HEIGHT\*
.INDEX TRIANG> commands> DISABLE INTEGER__HEIGHT
.INDEX TRIANG> DISABLE INTEGER__HEIGHT command

.LEFT MARGIN +8
.P0;DISABLE INTEGER__HEIGHT disables the effect of a previous ENABLE
INTEGER__HEIGHT command.
.LEFT MARGIN -8

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*FORMAT:######DISABLE INTEGER__HEIGHT\*


.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Command parameters:\*_ None.


.P0
^*--------------------------------------------------------------------------------\*
.BR;^*DESCRIPTION:\*
.P 0;In IFF files height values are transmitted via AC (Ancillary Code)
or ZS (3D string) entries. By default contour and spot height Z values
are read from type 3 ACs as floating point values. By use of the ENABLE
INTEGER__HEIGHT command, integer heights may be read from type 2 ACs.

.P 0;The DISABLE INTEGER__HEIGHT command disables the effect of a previous
ENABLE INTEGER__HEIGHT command and heights will be read from type 3 (floating
point) ACs. 

.P 0;The current status of the INTEGER__HEIGHT option can be examined using the 
SHOW ENABLE or SHOW HEIGHTS commands.
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Messages:\*_ None.

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Examples:\*
.BLANK
.BR;TRIANG> ^*SHOW ENABLE_<CR_>\*
.NO FILL
CONSTRAINT ................................................... On
DIAGNOSTICS .................................................. Off
DIVIDEBY ..................................................... On
Incoming heights to be divided by ...........................   4.900 
GRAPHICS ..................................................... Off
INTEGER__HEIGHT ............................................... Off
(Incoming IFF heights expected in type 3 AC entries)
INVERSE ...................................................... Off
MULTIPLY ....................................................  Off
PME .......................................................... Off
SQUARE ....................................................... On
TOFEET ....................................................... Off
TOMETRES ..................................................... Off
.BR;TRIANG> ^*ENABLE INTEGER__HEIGHT_<CR_>\*
.BR;TRIANG> ^*SHOW ENABLE_<CR_>\*
CONSTRAINT ................................................... On
DIAGNOSTICS .................................................. Off
DIVIDEBY ..................................................... On
Incoming heights to be divided by ...........................   4.900 
GRAPHICS ..................................................... Off
INTEGER__HEIGHT ............................................... On
(Incoming IFF heights expected in type 2 AC entries)
INVERSE ...................................................... Off
MULTIPLY ....................................................  Off
PME .......................................................... Off
SQUARE ....................................................... On
TOFEET ....................................................... Off
TOMETRES ..................................................... Off
.BR;TRIANG>
.FILL
.!******************************************************************************
.PAGE
.SUBTITLE DISABLE INVERSE command
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*DISABLE INVERSE \*
.INDEX TRIANG> commands> DISABLE INVERSE 
.INDEX TRIANG> DISABLE INVERSE command

.LEFT MARGIN +8
.P 0;Disables a previous ENABLE INVERSE command. 

.LEFT MARGIN -8

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*FORMAT:######DISABLE INVERSE \*


.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Command parameters:\*_ None.

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*DESCRIPTION:\*
.P 0;DISABLE INVERSE allows the user to disable a previous ENABLE INVERSE
command. By default heights are not inverted.

.P 0;The current status of the INVERSE option can be examined using the 
SHOW ENABLE or SHOW HEIGHTS commands.
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Messages:\*_ None.

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Examples:\*
.BLANK
.BR;TRIANG> ^*ENABLE INVERSE _<CR_>\*
.BR;TRIANG> ^*SHOW ENABLE_<CR_>\*
.NO FILL
CONSTRAINT ................................................... On
DIAGNOSTICS .................................................. Off
DIVIDEBY ..................................................... Off
GRAPHICS ..................................................... Off
INTEGER__HEIGHT ............................................... Off
(Incoming IFF heights expected in type 3 AC entries)
INVERSE ...................................................... On
MULTIPLY ....................................................  Off
PME .......................................................... Off
SQUARE ....................................................... On
TOFEET ....................................................... Off
TOMETRES ..................................................... Off
.BR;TRIANG>
.FILL

.!******************************************************************************
.PAGE
.SUBTITLE DISABLE MULTIPLYBY command
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*DISABLE MULTIPLYBY\*
.INDEX TRIANG> commands> DISABLE MULTIPLYBY
.INDEX TRIANG> DISABLE MULTIPLYBY command

.LEFT MARGIN +8
.P 0;Disables a previous ENABLE MULTIPLYBY command. 

.LEFT MARGIN -8

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*FORMAT:######DISABLE MULTIPLYBY\*


.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Command parameters:\*_ None.

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*DESCRIPTION:\*
.P 0;DISABLE MULTIPLYBY allows the user to disable a previous  ENABLE 
MULTIPLYBY command. 

.P 0;The current status of the MULTIPLYBY option can be examined using the 
SHOW ENABLE or SHOW HEIGHTS commands.
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Messages:\*_ None.

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Examples:\*
.BLANK
.BR;TRIANG> ^*ENABLE MULTIPLYBY 39.2_<CR_>\*
.BR;TRIANG>



.!******************************************************************************
.PAGE
.SUBTITLE DISABLE PME command
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*DISABLE PME\*
.INDEX TRIANG> commands> DISABLE PME
.INDEX TRIANG> DISABLE PME command

.LEFT MARGIN +8
.P0;DISABLE PME disables the effect of a previous ENABLE PME command.
.LEFT MARGIN -8

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*FORMAT:######DISABLE PME \*


.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Command parameters:\*_ None.

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*DESCRIPTION:\*
.P0; The ENABLE PME and DISABLE PME commands are reserved for Laser-Scan use.
PME is a code optimisation tool and should be invoked by LSL software personnel
only. 

.P0;DISABLE PME disables the effect of a previous ENABLE PME command and
causes the PME__EXIT routine to be invoked.

.P 0;The current status of the PME option can be examined using the 
SHOW ENABLE command.

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Message:\*

.P 0;The following warning message is specific to the DISABLE PME command:

.P 0;_*_*_* WARNING _*_*_* You were not using PME anyway!

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Examples:\*
.BLANK
.BR;$ ^*TRIANG_<CR_>\*
.BR;DTMCREATE module TRIANG of 13:30:39  20-AUG-87
.BR;TRIANG> ^*ENABLE PME_<CR_>\*
.BR;TRIANG> ^*WINDOW 0. 0. 800. 760._<CR_>\*
.BR;TRIANG> ^*ZLIMITS 0 765_<CR_>\*
.BR;TRIANG> ^*MAXPOINTS 78000_<CR_>\*
.BR;TRIANG> ^*FILEOUT CHARITY_<CR_>\*
.BR;_.DTA file DUA3:[DEMONSTRATION]CHARITY_.DTA;6 opened for write
.BR;_.NOD file DUA3:[DEMONSTRATION]CHARITY_.NOD;6 opened for write
.BR;TRIANG> ^*FRT CHASTITY_<CR_>\*
.BR;FRT file LSL$FRT:CHASTITY.FRT;8 opened for read
.BR;TRIANG> ^*FILEIN FAITH_<CR_>\*
.BR;IFF file LSL$IF:FAITH.IFF;0 opened for read
.BR;TRIANG> ^*ASSIGN BREAKLINE__FC 1:7,WATER,80,102_<CR_>\*
.BR;TRIANG> ^*FILEIN ATILLA_<CR_>\*
.BR;TRIANG> ^*DISABLE PME_<CR_>\*
.BR;TRIANG> ^*GO_<CR_>\*
.BR;#ELAPSED: 00:05:25.84  CPU: 0:00:05.71  BUFIO: 281  DIRIO: 46  FAULTS: 263 
.BR;_$


.!******************************************************************************
.PAGE
.SUBTITLE DISABLE SQUARE command
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*DISABLE SQUARE\*
.INDEX TRIANG> commands> DISABLE SQUARE
.INDEX TRIANG> DISABLE SQUARE command

.LEFT MARGIN +8
.P 0;The DISABLE SQUARE command disables the default TRIANG squaring test for
IFF control points.
.LEFT MARGIN -8

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*FORMAT:######DISABLE SQUARE \*


.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Command parameters:\*_ None.

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*DESCRIPTION:\*
.P 0;By default TRIANG checks that the control points in an IFF input file
are square to the map coordinate system. If the map held
in the IFF file is not square to the coordinate system axes there is a
danger that some rows or columns of the DTM will be missed out or be
incomplete as DTMCREATE uses only axis minima and maxima to define the
model area. If the IFF control point values are not square and the SQUARE
option is active then an error message is issued and the run aborted.

.P 0;The DISABLE SQUARE command disables the squaring test for IFF control
points. 

.P 0;The current status of the SQUARE option can be examined using the 
SHOW ENABLE command.

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Messages:\*_ None.

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Examples:\*
.BLANK
.BR;$ TRIANG_<CR_>
.BR;DTMCREATE module TRIANG of 13:30:39  20-AUG-87
.BR;TRIANG> ^*SHOW ENABLE_<CR_>\*
.NO FILL
CONSTRAINT ................................................... On
DIAGNOSTICS .................................................. Off
DIVIDEBY ..................................................... Off
GRAPHICS ..................................................... Off
INTEGER__HEIGHT ............................................... Off
(Incoming IFF heights expected in type 3 AC entries)
INVERSE ...................................................... Off
MULTIPLY ....................................................  Off
PME .......................................................... Off
SQUARE ....................................................... On
TOFEET ....................................................... Off
TOMETRES ..................................................... Off
.BR;TRIANG> ^*DISABLE SQUARE_<CR_>\*
.BR;TRIANG>
.FILL


.!******************************************************************************
.PAGE
.SUBTITLE DISABLE TOFEET command
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*DISABLE TOFEET\*
.INDEX TRIANG> commands> DISABLE TOFEET
.INDEX TRIANG> DISABLE TOFEET command
.LEFT MARGIN +8
.P0;Cancels the effect of a previous ENABLE TOFEET command.
.LEFT MARGIN -8

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*FORMAT:######DISABLE TOFEET \*


.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Command parameters:\*_ None.

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*DESCRIPTION:\*
.P0; It is possible that different input files may have heights
recorded in different measurement systems. The model must be relative to
one system only.  Two preset height conversion options are available: ENABLE
TOMETRES and ENABLE TOFEET. 

.P 0;The ENABLE TOFEET command enables the conversion of heights held in the
IFF file in metres to feet. It has the same effect as an explicit
ENABLE MULTIPLYBY 3.2808455 command. It is possible to read in one file with
heights in feet with one FILEIN command and then use the ENABLE TOFEET
command and read in another file with heights in metres converting to feet
during read-in. The DTM will then be produced in feet. 

.P 0;If one of the height modification options is enabled
using ENABLE MULTIPLYBY, ENABLE TOFEET etc_., you must give the ZLIMITS in
the target measurement system or height range (ie feet for the ENABLE TOFEET
command). Failure to do this may result in flattening of all model relief!.

.P 0;N.B. DISABLE TOFEET will not cancel an explicit ENABLE MULTIPLYBY 
3.2808455 command.

.P 0;The current status of the TOFEET option can be examined using the 
SHOW ENABLE or SHOW HEIGHTS commands.
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Messages:\*_ None.


.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Examples:\*
.BLANK
.BR;TRIANG> ^*ENABLE TOFEET_<CR_>\*
.BR;TRIANG> 

.!******************************************************************************
.PAGE
.SUBTITLE DISABLE TOMETRES command
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*DISABLE TOMETRES\*
.INDEX TRIANG> commands> DISABLE TOMETRES
.INDEX TRIANG> DISABLE TOMETRES command
.LEFT MARGIN +8
.P0;Cancels the effect of a previous ENABLE TOMETRES command.
.LEFT MARGIN -8

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*FORMAT:######DISABLE TOMETRES \*


.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Command parameters:\*_ None.

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*DESCRIPTION:\*
.P0; It is possible that different input files may have heights
recorded in different measurement systems. The model must be relative to
one system only.  Two height conversion options are available: ENABLE TOFEET
and ENABLE TOMETRES.

.P 0;The ENABLE TOMETRES command results in the conversion of heights held in
the IFF file in feet to metres. It has the same effect as an explicit ENABLE
DIVIDEBY 3.2808455 command. It is possible to read in one
file with heights in feet with one FILEIN command and then use the ENABLE
TOMETRES command and read in another file with heights in feet converting to
metres during read-in. The DTM will then be produced in metres. 

.P 0;If one of the height modification options is enabled using ENABLE
MULTIPLYBY, ENABLE TOMETRES etc_., you must give the ZLIMITS in the target
measurement system or height range (ie metres for the ENABLE TOMETRES command).
Failure to do this may result in flattening of all model relief. 

.P 0;N.B. DISABLE TOMETRES will not cancel an explicit ENABLE DIVIDEBY 3.2808455
command. 

.P 0;The current status of the TOMETRES option can be examined using the 
SHOW ENABLE or SHOW HEIGHTS commands.
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Messages:\*_ None.


.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Examples:\*
.BLANK
.BR;TRIANG> ^*ENABLE TOMETRES_<CR_>\*
.BR;TRIANG> 


.!******************************************************************************
.PAGE
.SUBTITLE ENABLE CONSTRAINT command
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*ENABLE CONSTRAINT\*
.INDEX TRIANG> commands> ENABLE CONSTRAINT
.INDEX TRIANG> ENABLE CONSTRAINT command

.LEFT MARGIN +8
.P0; Enables the constraint of a Delaunay triangulation to input string
paths.
.LEFT MARGIN -8

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*FORMAT:######ENABLE CONSTRAINT \*


.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Command parameters:\*_ None.

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*DESCRIPTION:\*
.P0;  TRIANG always seeks to produce a Delaunay triangulation.
Unfortunately a triangulation which fits the Delaunay ideal may not necessarily
honour the paths of the string input from IFF file. The constraint option
ensures that triangulation never cuts through through any string
features. 

.P 0;The CONSTRAINT option is applied by default and must be explicitly
disabled with the DISABLE CONSTRAINT command if an unmodified Delaunay
triangulation is required.

.P 0;The current status of the CONSTRAINT option can be examined using the 
SHOW ENABLE command.
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Messages:\*_ None.


.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Examples:\*
.BLANK
.BR;$ ^*TRIANG_<CR_>\*
.BR;DTMCREATE module TRIANG of 13:30:39  20-AUG-87
.BR;TRIANG> ^*SHOW ENABLE_<CR_>\*
.NO FILL
CONSTRAINT ................................................... On
DIAGNOSTICS .................................................. Off
DIVIDEBY ..................................................... Off
GRAPHICS ..................................................... Off
INTEGER__HEIGHT ............................................... Off
(Incoming IFF heights expected in type 3 AC entries)
INVERSE ...................................................... Off
MULTIPLY ..................................................... Off
PME .......................................................... Off
SQUARE ....................................................... On
TOFEET ....................................................... Off
TOMETRES ..................................................... Off
.BR;TRIANG> ^*DISABLE CONSTRAINT_<CR_>\*
.BR;TRIANG> ^*SHOW ENABLE_<CR_>\*
CONSTRAINT ................................................... Off
DIAGNOSTICS .................................................. Off
DIVIDEBY ..................................................... Off
GRAPHICS ..................................................... Off
INTEGER__HEIGHT ............................................... Off
(Incoming IFF heights expected in type 3 AC entries)
INVERSE ...................................................... Off
MULTIPLY ..................................................... Off
PME .......................................................... Off
SQUARE ....................................................... On
TOFEET ....................................................... Off
TOMETRES ..................................................... Off
.BR;TRIANG>
.FILL
.!******************************************************************************
.PAGE
.SUBTITLE ENABLE DIAGNOSTICS command
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*ENABLE DIAGNOSTICS\*
.INDEX TRIANG> commands> ENABLE DIAGNOSTICS
.INDEX TRIANG> ENABLE DIAGNOSTICS command

.LEFT MARGIN +8
.P 0;ENABLE DIAGNOSTICS allows the user to enable diagnostic printout.
.LEFT MARGIN -8

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*FORMAT:######ENABLE DIAGNOSTICS \*


.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Command parameters:\*_ None.

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*DESCRIPTION:\*
.P 0;ENABLE DIAGNOSTICS allows the user to enable diagnostic printout.

.P0; Because it is usually used in a batch processing environment, by default
TRIANG produces minimal diagnostic printout. If however, the user wishes to
receive indications of processing progress and of the effect of input data
assignments and selections on data input, diagnostic printout may be selected
with the ENABLE DIAGNOSTICS command. 


.P 0;It should be noted that if DIAGNOSTICS are enabled, TRIANG can produce
voluminous printout, particularly if used during the input phase in 
conjunction with selections from IFF files.

.P 0;On a heavily loaded computer it may be reassuring to ENABLE DIAGNOSTICS
for the triangulation stage of TRIANG processing to indicate progress through
the data set. If SYS$OUTPUT is directed to a video screen terminal, messages
indicating percentage progress are issued. 

.P 0;The current status of the DIAGNOSTICS option can be examined using the 
SHOW ENABLE command.
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Messages:\*_ None.

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Examples:\*
.BLANK
.BR;TRIANG> ^*ENABLE DIAGNOSTICS_<CR_>\*
.BR;TRIANG> ^*SHOW ENABLE_<CR_>\*
.NO FILL
CONSTRAINT ................................................... On
DIAGNOSTICS .................................................. On
DIVIDEBY ..................................................... OFF
GRAPHICS ..................................................... Off
INTEGER__HEIGHT ............................................... Off
(Incoming IFF heights expected in type 3 AC entries)
INVERSE ...................................................... Off
MULTIPLY ..................................................... Off
PME .......................................................... Off
SQUARE ....................................................... On
TOFEET ....................................................... Off
TOMETRES ..................................................... Off
.BR;TRIANG>
.FILL


.!******************************************************************************
.PAGE
.SUBTITLE ENABLE DIVIDEBY command
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*ENABLE DIVIDEBY\*
.INDEX TRIANG> commands> ENABLE DIVIDEBY
.INDEX TRIANG> ENABLE DIVIDEBY command

.LEFT MARGIN +8
.P 0;ENABLE DIVIDEBY allows the user to enable division of input file
heights by a specified floating point constant.
.LEFT MARGIN -8

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*FORMAT:######ENABLE DIVIDEBY denominator\*


.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Command parameters:\*

.LEFT MARGIN +8
.P -8;denominator
.P 0;The value by which all input file heights are to be divided.
.LEFT MARGIN -8
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*DESCRIPTION:\*

.P 0;The ENABLE DIVIDEBY enables the user to divide all incoming heights
by a specified (floating point) constant. For example, the command
ENABLE DIVIDEBY 2.0 will cause all incoming heights to be divided
by 2.0.  An ENABLE DIVIDEBY 3.2808455 command has the same effect as an
ENABLE TOMETRES command. 

.P 0;The current status of the DIVIDEBY option can be examined using the 
SHOW ENABLE or SHOW HEIGHTS commands.
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Messages:\*

.P 0;The following messages are specific to the ENABLE DIVIDEBY command:
.BLANK
.BR;_*_*_* WARNING _*_*_* You are already planning to multiply by 'constant'
.BR;#################ENABLE DIVIDEBY command now overrides ENABLE MULTIPLYBY command
.BR;_*_*_* WARNING _*_*_* You must specify a value for DIVIDEBY

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Examples:\*
.BLANK
.BR;TRIANG> ^*ENABLE DIVIDEBY 39.2_<CR_>\*
.BR;TRIANG>


.!******************************************************************************
.PAGE
.SUBTITLE ENABLE GRAPHICS command
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*ENABLE GRAPHICS\*
.INDEX TRIANG> commands> ENABLE GRAPHICS
.INDEX TRIANG> ENABLE GRAPHICS command

.LEFT MARGIN +8
.P0; Enable TRIANG graphics output.
.LEFT MARGIN -8

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*FORMAT:######ENABLE GRAPHICS\*


.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Command parameters:#None.\*


.P0
^*--------------------------------------------------------------------------------\*
.BR;^*DESCRIPTION:\*
.P0; TRIANG offers the option to generate graphic output to indicate
processing progress. By default graphic output is disabled. To
prevent a user selecting graphics when it is inappropriate to the
current terminal, TRIANG uses a lookup table of terminal characteristics
associated with all available terminal lines (see Appendix 1). An invalid
graphics selection will result in a warning message and the default NO GRAPHICS
option being selected. 

.P 0;Graphics selection may be cancelled with the DISABLE GRAPHICS command.

.P 0;The current status of the GRAPHICS option can be examined using the 
SHOW ENABLE command.
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Messages:\*

.P 0;The following messages are specific to the ENABLE GRAPHICS command:
.NO FILL

_*_*_* ERROR  _*_*_*_ reading lookup file at line 'integer'
_*_*_* WARNING _*_*_*_ Unable to open "LSL$LOOKUP:TERMTYPE.DAT"
Sorry 'name' terminal  'terminal-ident' isn't in the lookup table
Sorry 'name' terminal 'terminal-ident' can't support graphics
_*_*_* ERROR  _*_*_*_ translating logical name LSL$DTMCREATETERMINAL
.INDEX logical names> LSL$DTMCREATETERMINAL
.FILL
.TEST PAGE 8
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Examples:\*
.BLANK
.BR;$ ^*TRIANG_<CR_>\*
.BR;DTMCREATE module TRIANG of 13:30:39  20-AUG-87
.BR;TRIANG> ^*SHOW ENABLE_<CR_>\*
.NO FILL
CONSTRAINT ................................................... On
DIAGNOSTICS .................................................. Off
DIVIDEBY ..................................................... OFF
GRAPHICS ..................................................... Off
INTEGER__HEIGHT ............................................... Off
(Incoming IFF heights expected in type 3 AC entries)
INVERSE ...................................................... Off
MULTIPLY ..................................................... Off
PME .......................................................... Off
SQUARE ....................................................... On
TOFEET ....................................................... Off
TOMETRES ..................................................... Off
.BR;TRIANG> ^*ENABLE GRAPHICS_<CR_>\*
.BR;TRIANG>
.FILL


.!******************************************************************************
.PAGE
.SUBTITLE ENABLE INTEGER__HEIGHT command
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*ENABLE INTEGER__HEIGHT\*
.INDEX TRIANG> commands> ENABLE INTEGER__HEIGHT
.INDEX TRIANG> ENABLE INTEGER__HEIGHT command

.LEFT MARGIN +8
.P0;Take feature heights from type 2 (integer) AC (Ancillary Code) entries in
an IFF input file. 
.LEFT MARGIN -8

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*FORMAT:######ENABLE INTEGER__HEIGHT\*


.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Command parameters:\*_ None.


.P0
^*--------------------------------------------------------------------------------\*
.BR;^*DESCRIPTION:\*
.P 0;In IFF files, height values are transmitted via AC (Ancillary Code)
or ZS (3D string) entries. By default contour and spot height Z values
are read from type 3 ACs as floating point values. By use of the ENABLE
INTEGER__HEIGHT command, integer heights may be read from type 2 ACs.

.P0;ENABLE INTEGER__HEIGHT causes TRIANG to take heights from type 2 (integer)
AC (Ancillary Code) entries in an IFF input file.

.P 0;The current status of the INTEGER__HEIGHT option can be examined using the 
SHOW ENABLE or SHOW HEIGHTS commands.
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Messages:\*_ None.

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Examples:\*
.BLANK
.BR;TRIANG> ^*ENABLE INTEGER__HEIGHT_<CR_>\*
.BR;TRIANG> ^*SHOW ENABLE_<CR_>\*
.NO FILL
CONSTRAINT ................................................... Off
DIAGNOSTICS .................................................. Off
DIVIDEBY ..................................................... OFF
GRAPHICS ..................................................... Off
INTEGER__HEIGHT ............................................... On
(Incoming IFF heights expected in type 2 AC entries)
INVERSE ...................................................... Off
MULTIPLY ..................................................... Off
PME .......................................................... Off
SQUARE ....................................................... On
TOFEET ....................................................... Off
TOMETRES ..................................................... Off
.BR;TRIANG>
.FILL

.!******************************************************************************
.PAGE
.SUBTITLE ENABLE INVERSE command
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*ENABLE INVERSE \*
.INDEX TRIANG> commands> ENABLE INVERSE 
.INDEX TRIANG> ENABLE INVERSE command

.LEFT MARGIN +8
.P 0;Enable height inversion.
.LEFT MARGIN -8

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*FORMAT:######ENABLE INVERSE \*


.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Command parameters:\*_ None.

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*DESCRIPTION:\*
.P 0;Incoming IFF heights may be inverted if the ENABLE INVERSE command
is specified prior to reading an IFF file with a FILEIN command. This enables
modelling of hydrographic data where sea depths are often stored as positive
heights, drying zone heights as negative and land heights as positive! 

.P 0;By default heights are not inverted. 

.P 0;If the DATUM command has been used to specify a change of height datum
the heights are inverted before the datum value is added.

.P 0;The current status of the INVERSE option can be examined using the 
SHOW ENABLE or SHOW HEIGHTS commands.

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Messages:\*_ None.

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Examples:\*
.NO FILL
.BLANK
.BR;TRIANG> ^*DATUM 8.2_<CR_>\*
.BR;TRIANG> ^*ENABLE INVERSE _<CR_>\*
.BR;TRIANG> ^*SHOW ENABLE_<CR_>\*
CONSTRAINT ................................................... Off
DIAGNOSTICS .................................................. Off
DIVIDEBY ..................................................... Off
GRAPHICS ..................................................... Off
INTEGER__HEIGHT ............................................... On
(Incoming IFF heights expected in type 2 AC entries)
INVERSE ...................................................... On
MULTIPLY ..................................................... Off
PME .......................................................... Off
SQUARE ....................................................... On
TOFEET ....................................................... Off
TOMETRES ..................................................... Off
.BR;TRIANG> ^*FILEIN HUNSTANTON__BATHEMETRY_<CR_>\*
IFF file LSL$IF:HUNSTANTON__BATHEMETRY.IFF;0 opened for read


+----------------------------------------------------------------+
|                                                                |
|		Starting pass through IFF file                   |
|                                                                |
+----------------------------------------------------------------+


There are now 671 points in the DTM area
.BR;TRIANG> ^*DATUM 0.0_<CR_>\*
.BR;TRIANG> ^*DISABLE INVERSE _<CR_>\*
.BR;TRIANG> ^*SHOW ENABLE_<CR_>\*
CONSTRAINT ................................................... Off
DIAGNOSTICS .................................................. Off
DIVIDEBY ..................................................... OFF
GRAPHICS ..................................................... Off
INTEGER__HEIGHT ............................................... On
(Incoming IFF heights expected in type 2 AC entries)
INVERSE ...................................................... Off
MULTIPLY ..................................................... Off
PME .......................................................... Off
SQUARE ....................................................... On
TOFEET ....................................................... Off
TOMETRES ..................................................... Off
.BR;TRIANG> ^*FILEIN ATILLA_<CR_>\*
IFF file LSL$IF:ATILLA.IFF;0 opened for read


+----------------------------------------------------------------+
|                                                                |
|		Starting pass through IFF file                   |
|                                                                |
+----------------------------------------------------------------+


There are now 55527 points in the DTM area
.BR;TRIANG>
.FILL


.!******************************************************************************
.PAGE
.SUBTITLE ENABLE MULTIPLYBY command
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*ENABLE MULTIPLYBY\*
.INDEX TRIANG> commands> ENABLE MULTIPLYBY
.INDEX TRIANG> ENABLE MULTIPLYBY command

.LEFT MARGIN +8
.P 0;ENABLE MULTIPLYBY allows the user to enable multiplication of input file
heights by a specified floating point constant.
.LEFT MARGIN -8

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*FORMAT:######ENABLE MULTIPLYBY multiplicand\*


.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Command parameters:\*

.LEFT MARGIN +8
.P -8;multiplicand
.P 0;The value by which all input file heights are to be multiplied.
.LEFT MARGIN -8
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*DESCRIPTION:\*

.P 0;The ENABLE MULTIPLYBY enables the user to multiply all incoming heights
by a specified (floating point) constant. For example, the command
ENABLE MULTIPLYBY 2.0 will cause all incoming heights to be multiplied
by 2.0.  An ENABLE MULTIPLYBY 3.2808455 command has the same effect as an
ENABLE TOFEET command. 

.P 0;The current status of the MULTIPLYBY option can be examined using the 
SHOW ENABLE or SHOW HEIGHTS commands.

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Messages:\*

.P 0;The following messages are specific to the ENABLE MULTIPLYBY command:
.BLANK
.BR;_*_*_* WARNING _*_*_* You are already planning to divide by 'constant'
.BR;#################ENABLE MULTIPLY command now overrides ENABLE DIVIDEBY command
.BR;_*_*_* WARNING _*_*_* You must specify a value for MULTIPLYBY

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Examples:\*
.BLANK
.BR;TRIANG> ^*ENABLE MULTIPLYBY 39.2_<CR_>\*
.BR;TRIANG>


.!******************************************************************************
.PAGE
.SUBTITLE ENABLE PME command
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*ENABLE PME\*
.INDEX TRIANG> commands> ENABLE PME
.INDEX TRIANG> ENABLE PME command

.LEFT MARGIN +8
.P0;ENABLE PME enables the PME performance monitor.
.LEFT MARGIN -8

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*FORMAT:######ENABLE PME \*


.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Command parameters:\*_ None.

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*DESCRIPTION:\*
.P0; The ENABLE PME and DISABLE PME commands are reserved for Laser-Scan use.
PME is a code optimisation tool and should be invoked by LSL software personnel
only. 

.P0;ENABLE PME causes the PME__INIT routine to be invoked.

.P 0;The current status of the PME option can be examined using the 
SHOW PME command.

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Message:\*

.P 0;The following warning message is specific to the ENABLE PME command:

.P 0;_*_*_* WARNING _*_*_* You are already using PME!

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Examples:\*
.BLANK
.BR;$ ^*TRIANG_<CR_>\*
.BR;DTMCREATE module TRIANG of 13:30:39  20-AUG-87
.BR;TRIANG> ^*ENABLE PME_<CR_>\*
.BR;TRIANG> ^*ENABLE DIAGNOSTICS_<CR_>\*
.BR;TRIANG> ^*WINDOW 0. 0. 800. 760._<CR_>\*
.BR;TRIANG> ^*ZLIMITS 0 765_<CR_>\*
.BR;TRIANG> ^*MAXPOINTS 78000_<CR_>\*
.BR;TRIANG> ^*FILEOUT CHARITY_<CR_>\*
.BR;_.DTA file DUA3:[DEMONSTRATION]CHARITY_.DTA;6 opened for write
.BR;_.NOD file DUA3:[DEMONSTRATION]CHARITY_.NOD;6 opened for write
.BR;TRIANG> ^*FRT CHASTITY_<CR_>\*
.BR;FRT file LSL$FRT:CHASTITY.FRT;8 opened for read
.BR;TRIANG> ^*FILEIN FAITH_<CR_>\*
.BR;TRIANG> ^*ASSIGN BREAKLINE__FC 1:7,WATER,80,102_<CR_>\*
.BR;TRIANG> ^*FILEIN ATILLA_<CR_>\*
.BR;IFF file LSL$IF:ATILLA.IFF;0 opened for read
.BR;TRIANG> ^*DISABLE PME_<CR_>\*
.BR;TRIANG> ^*GO_<CR_>\*
.BR;#ELAPSED: 00:05:25.84  CPU: 0:00:05.71  BUFIO: 281  DIRIO: 46  FAULTS: 263 
.BR;_$


.!******************************************************************************
.PAGE
.SUBTITLE ENABLE SQUARE command
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*ENABLE SQUARE\*
.INDEX TRIANG> commands> ENABLE SQUARE
.INDEX TRIANG> ENABLE SQUARE command

.LEFT MARGIN +8
.P 0;The ENABLE SQUARE command enables a squaring test for
IFF control points.
.LEFT MARGIN -8

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*FORMAT:######ENABLE SQUARE \*


.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Command parameters:\*_ None.

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*DESCRIPTION:\*
.P 0;By default TRIANG checks that the control points in an IFF input file are
square to the map coordinate system. If the map held in the IFF file is not
square to the coordinate system axes there is a danger that some rows or
columns of the DTM will be missed out or be incomplete as DTMCREATE uses only
axis minima and maxima to define the model area. If the IFF control point
values are not square and the SQUARE option is active then an error message is
issued and the run aborted. 

.P 0;The ENABLE SQUARE command enables the squaring test for IFF control points.

.P 0;The current status of the SQUARE option can be examined using the 
SHOW ENABLE command.

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Messages:\*_ None.

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Examples:\*
.BLANK
.BR;$ ^*TRIANG_<CR_>\*
.BR;DTMCREATE module TRIANG of 13:30:39  20-AUG-87
.BR;TRIANG> ^*SHOW ENABLE_<CR_>\*
.NO FILL
CONSTRAINT ................................................... On
DIAGNOSTICS .................................................. Off
DIVIDEBY ..................................................... OFF
GRAPHICS ..................................................... Off
INTEGER__HEIGHT ............................................... Off
(Incoming IFF heights expected in type 3 AC entries)
INVERSE ...................................................... Off
MULTIPLY ..................................................... Off
PME .......................................................... Off
SQUARE ....................................................... On
TOFEET ....................................................... Off
TOMETRES ..................................................... Off
.BR;TRIANG> ^*DISABLE SQUARE_<CR_>\*
.BR;TRIANG> ^*SHOW ENABLE_<CR_>\*
CONSTRAINT ................................................... Off
DIAGNOSTICS .................................................. Off
DIVIDEBY ..................................................... OFF
GRAPHICS ..................................................... Off
INTEGER__HEIGHT ............................................... Off
(Incoming IFF heights expected in type 3 AC entries)
INVERSE ...................................................... Off
MULTIPLY ..................................................... Off
PME .......................................................... Off
SQUARE ....................................................... Off
TOFEET ....................................................... Off
TOMETRES ..................................................... Off
.BR;TRIANG>
.FILL



.!******************************************************************************
.PAGE
.SUBTITLE ENABLE TOFEET command
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*ENABLE TOFEET\*
.INDEX TRIANG> commands> ENABLE TOFEET
.INDEX TRIANG> ENABLE TOFEET command
.LEFT MARGIN +8
.P 0;The ENABLE TOFEET command enables the conversion of input file heights 
from metres to feet. 
.LEFT MARGIN -8

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*FORMAT:######ENABLE TOFEET \*


.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Command parameters:\*_ None.

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*DESCRIPTION:\*
.P0; It is possible that different input files may have heights
recorded in different measurement systems. The model must be relative to
one system only.  Two height conversion options are available: ENABLE TOMETRES
and ENABLE TOFEET.

.P 0;The ENABLE TOFEET command enables the conversion of input file heights
from metres to feet. It has the same effect as an explicit ENABLE MULTIPLYBY
3.2808455 command. It is possible to read in one file with heights in feet
with one FILEIN command and then use the ENABLE TOFEET command and read in
another file with heights in metres converting to feet during read-in. The DTM
will then be produced in feet. 

.P 0;If one of the height modification options is enabled
using ENABLE MULTIPLYBY, ENABLE TOFEET etc_., you must give the ZLIMITS in
the target measurement system or height range (ie feet for the ENABLE TOFEET
command). Failure to do this may result in flattening of all model relief!.

.P 0;The current status of the TOFEET option can be examined using the 
SHOW ENABLE or SHOW HEIGHTS commands.

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Messages:\*_ None.


.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Examples:\*
.BLANK
.BR;TRIANG> ^*ENABLE TOFEET_<CR_>\*
.BR;TRIANG> 

.!******************************************************************************
.PAGE
.SUBTITLE ENABLE TOMETRES command
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*ENABLE TOMETRES\*
.INDEX TRIANG> commands> ENABLE TOMETRES
.INDEX TRIANG> ENABLE TOMETRES command
.LEFT MARGIN +8
.P 0;The ENABLE TOMETRES command enables the conversion of input file heights 
from feet to metres. 
.LEFT MARGIN -8

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*FORMAT:######ENABLE TOMETRES \*


.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Command parameters:\*_ None.

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*DESCRIPTION:\*
.P0; It is possible that different input files may have heights
recorded in different measurement systems. The model must be relative to
one system only.  Two height conversion options are available: ENABLE TOFEET
and ENABLE TOMETRES.

.P 0;The ENABLE TOMETRES command results in the conversion of heights held in
the IFF file in feet to metres. It has the same effect as an explicit ENABLE
DIVIDEBY 3.2808455 command. It is possible to read in one
file with heights in metres with one FILEIN command and then use the ENABLE
TOMETRES command and read in another file with heights in feet converting to
metres during read-in. The DTM will then be produced in metres. 

.P 0;If one of the height modification options is enabled using ENABLE
MULTIPLYBY, ENABLE TOMETRES etc_., you must give the ZLIMITS in the target
measurement system or height range (ie metres for the ENABLE TOMETRES command).
Failure to do this may result in flattening of all model relief. 

.P 0;The current status of the TOMETRES option can be examined using the 
SHOW ENABLE or SHOW HEIGHTS commands.

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Messages:\*_ None.


.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Examples:\*
.BLANK
.BR;TRIANG> ^*ENABLE TOMETRES_<CR_>\*
.BR;TRIANG> 


.!******************************************************************************
.PAGE
.SUBTITLE FILEIN command
.INDEX TRIANG> commands> FILEIN
.INDEX TRIANG> FILEIN command
.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*FILEIN\*

.LEFT MARGIN +8
.P 0;Specifies a file that is to be opened and used for data input.
.LEFT MARGIN -8

.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*FORMAT:######FILEIN file-spec
.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*COMMAND PARAMETERS:\*
.LEFT MARGIN +8
.P-8;file-spec
.P 0;The specification of the file to be opened for data input.

.P 0;Any parts of the file-spec not supplied for the FILEIN command will be 
taken from a default specification dependent on the current format
specified with the FORMAT command.

.P 0;If ENABLE FORMAT IFF (default) is specified then the default file
specification 'LSL$IF:IFF.IFF;0' is used. If ENABLE FORMAT DTI is specified
then the default file specification 'LSL$DTI:DTI.DTI;0' is used. 
.LEFT MARGIN -8
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*DESCRIPTION:\*
.P 0;The FILEIN command causes the specified file-spec to be opened and 
used as an input file to TRIANG. A FILEIN command cannot be issued until 
FILEOUT, ZLIMITS, MAXPOINTS and WINDOW commands have been given.

.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*Messages:\*

.P0; The following messages are specific to the FILEIN command:
.P 0;_*_*_*_ WARNING_ _*_*_*_ You must specify a file-spec argument to the FILEIN command
.BR;_*_*_*_ ERROR_ _*_*_*_ Unable to interpret input file-spec

.FILL

.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*Examples:\*
.BLANK
.BR;TRIANG> ^^^*FILEIN DUA3:[DEMONSTRATION]IDAHO_<CR_>\*
.BR;IFF file DUA3:[DEMONSTRATION]IDAHO.IFF;1 opened for read
.BR;TRIANG>^^^* ! Now using the FORMAT command to change the format\*
.BR;TRIANG>^^^* ! of the input file from IFF (default) to DTI\*
.BR;TRIANG>^^^* FORMAT DTI\*
.BR;TRIANG>^^^* FILEIN AREA5\*
.BR;DTI file LSL$DTI:AREA5.DTI;0 opened for read
.BR;TRIANG>


.!******************************************************************************
.PAGE
.SUBTITLE FILEOUT command
.INDEX TRIANG> commands> FILEOUT
.INDEX TRIANG> FILEOUT command
.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*FILEOUT\*

.LEFT MARGIN +8
.P0; Specifies the file-spec to be used as the generic specification for the
two TRIANG output file-specifications, one of which will be given the
extension _.NOD and the other _.DTA. 
.LEFT MARGIN -8

.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*FORMAT:######FILEOUT  file-spec
.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*COMMAND PARAMETERS:\*
.LEFT MARGIN +8
.P-8;file-spec
.BLANK
.P 0;The file-spec from which the generic name for the two TRIANG output files
is to be taken.

.P 0;All components of the supplied file-spec are used to form the output file 
specifications but with the substitution of the extensions _.NOD and _.DTA 
and version number ';0', i.e. latest version (shared by both files).

.INDEX TRIANG> and LSL$DTMCREATE__WORK logical name
.INDEX LSL$DTMCREATE__WORK
.INDEX logical names> LSL$DTMCREATE__WORK
.P 0;The default file-spec used to make up missing parts of the
FILEIN file-spec parameter is dependent on the status of logical name 
LSL$DTMCREATE__WORK.

.P 0;If logical name LSL$DTMCREATE__WORK is defined, DTMCREATE utilities
translate the logical name to get the default file-spec for input and output
of triangulation files. The logical name should be defined to provide
a device and directory name only. The DTMCREATE programs themselves
provide the default filename and extension fields of the specification.
For example, a valid definition of logical name LSL$DTMCREATE__WORK is:
.P 0;_$ DEFINE LSL$DTMCREATE__WORK LSL$DATA__ROOT:[LSL.DTMCREATE]

.P 0;This mechanism allows all DTMCREATE triangulation files to be stored
in a central directory, rather than scattered in many different user 
directories. It thus mimics the use of logical names LSL$IF for IFF files
and LSL$DTI for DTI files.

.P 0;If the logical name is not defined, any parts of the file-spec not
supplied for the FILEOUT command will be taken from the defaults
'SYS$DISK:[]_.NOD;0' and 'SYS$DISK:[]_.DTA;0'. These defaults result in the
output files being created in your current default directory, set using the
VMS SET DEFAULT or Laser-Scan SD commands. 

.LEFT MARGIN -8
.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*DESCRIPTION:\*
.P 0;The FILEOUT command causes the specified file-spec to be used as the
generic name for the two TRIANG output files used to transfer the 
triangulation data structure between the DTMCREATE modules.

.P 0;The FILEOUT command must be issued before the first FILEIN command.
.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*Messages:\*

.P0; The following messages are specific to the FILEOUT command:

.NO FILL

.BR;_*_*_*_ WARNING_ _*_*_*_ You must specify a file-spec argument to the FILEOUT command
.BR;_*_*_*_ ERROR_ _*_*_*_ reading output file-spec

.NO FILL
.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*Examples:\*
.BLANK
.BR;TRIANG> ^^^*FILEOUT DUA3:[DEMONSTRATION]IDAHO_<CR_>\*
.BR;_.DTA file DUA3:[DEMONSTRATION]IDAHO_.DTA;6 opened for write
.BR;_.NOD file DUA3:[DEMONSTRATION]IDAHO_.NOD;6 opened for write
.BR;TRIANG>

.!******************************************************************************
.PAGE
.SUBTITLE FORMAT command
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*FORMAT\*
.INDEX TRIANG> commands> FORMAT
.INDEX TRIANG> FORMAT command

.LEFT MARGIN +8
.P0;Specifies the file format that is to be read into TRIANG using a FILEIN
command.
.LEFT MARGIN -8 

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*FORMAT:######FORMAT format \*


.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Command parameters:\*

.LEFT MARGIN +8
.P-8;format
.P0;This is a keyword chosen from 'DTI' or 'IFF' which signifies the type of
file to be read. 
.LEFT MARGIN -8

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*DESCRIPTION:\*
.FILL
.JUSTIFY
.P0;The FORMAT command enables the user to specify the file format that is
to be read into TRIANG during the data initialisation phase. The FORMAT command
may be used swap between input file formats as often as required. The default
file format is 'IFF'.

.P 0;It is important to remember to issue the appropriate FORMAT command
before the FILEIN command if the file format is different to that read in
using a previous FILEIN command.

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Messages:\*

.P 0;The following warning messages are specific to the FORMAT command:
.BLANK
.BR;_*_*_*_ WARNING _*_*_*_ Unknown format - must be either DTI or IFF
.BR;_*_*_*_ WARNING _*_*_*_ You must specify an argument to the FORMAT command

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Examples:\*
.BLANK
.BR;$ ^*TRIANG_<CR_>\*
.BR;DTMCREATE module TRIANG of 13:30:39  20-AUG-87
.BR;TRIANG> ^*WINDOW 0. 0. 800. 760._<CR_>\*
.BR;TRIANG> ^*ZLIMITS 0 765_<CR_>\*
.BR;TRIANG> ^*MAXPOINTS 78000_<CR_>\*
.BR;TRIANG> ^*FILEOUT CHARITY_<CR_>\*
.BR;_.DTA file DUA3:[DEMONSTRATION]CHARITY_.DTA;6 opened for write
.BR;_.NOD file DUA3:[DEMONSTRATION]CHARITY_.NOD;6 opened for write
.BR;TRIANG> ^*FORMAT DTI_<CR_>\*
.BR;TRIANG> ^*FILEIN FAITH.DTI_<CR_>\*
.BR;Origin? ^*1000.0 2000.0\*
.BR;TRIANG> ^*FRT CHASTITY_<CR_>\*
.BR;FRT file LSL$FRT:CHASTITY.FRT;8 opened for read
.BR;TRIANG> ^*FORMAT IFF_<CR_>\*
.BR;TRIANG> ^*ASSIGN BREAKLINE__FC 1:7,WATER,80,102_<CR_>\*
.BR;TRIANG> ^*FILEIN ATILLA_<CR_>\*
.BR;IFF file LSL$IF:ATILLA.IFF;0 opened for read
.BR;TRIANG> ^*GO_<CR_>\*
.BR;#ELAPSED: 00:05:25.84  CPU: 0:00:05.71  BUFIO: 281  DIRIO: 46  FAULTS: 263 
.BR;_$
.FILL


.!******************************************************************************
.PAGE
.SUBTITLE FRT command
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*FRT\*
.INDEX TRIANG> commands> FRT
.INDEX TRIANG> FRT command

.LEFT MARGIN +8
.P0; Specifies an FRT file which contains feature code group definitions. 
.LEFT MARGIN -8

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*FORMAT:######FRT file-spec\*


.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Command parameters:\*

.LEFT MARGIN +8
.P-8;file-spec
.P0; The specification of an FRT (Feature Representation Table) file required
to define feature code groups. 

.P 0;Missing parts from the FRT file-spec argument are taken from the default
specification LSL$FRT:FRT.FRT;0.
.LEFT MARGIN -8

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*DESCRIPTION:\*
.P0; The FRT command allows the user to specify an FRT file which contains
feature code group definitions. The availability of feature code groups 
simplifies the specification of complex feature code assignments for breaklines
etc_. 

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Messages:\*

.P 0;The following messages are specific to the FRT command:
.BLANK
.BR;_*_*_* ERROR _*_*_*_ reading FRT file-spec
.BR;_*_*_* ERROR _*_*_*_ unable to open specified FRT

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Examples:\*
.P 0;TRIANG> ^*ASSIGN CLIFF__FC OUTCROPS,7,COAST_<CR_>\*
.BR;_*_*_*_ WARNING_ _*_*_*_ You must have read an FRT file to be able to use group names
.BR;TRIANG> ^*FRT HOVER_<CR_>\*
.BR;FRT file LSL$FRT:HOVER.FRT;8 opened for read
.BR;TRIANG> ^*ASSIGN CLIFF__FC OUTCROPS,7,COAST_<CR_>\*
.BR;TRIANG>


.!******************************************************************************
.PAGE
.SUBTITLE GO command
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*GO\*
.INDEX TRIANG> commands> GO
.INDEX TRIANG> GO command

.LEFT MARGIN +8
.P0; Initiates the triangulation of the data read in using FILEIN commands.
.LEFT MARGIN -8

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*FORMAT:######GO\*


.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Command parameters:\*_ None.

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*DESCRIPTION:\*
.P0; When all necessary files have been read in the GO command will
commence the triangulation process. Unless relatively small data-sets are being
handled (say less then 50,000 data points) it is strongly recommended that
TRIANG is run in batch mode at an off-peak time. 

.P 0;The GO command will cause TRIANG to first produce an ideal
Delaunay triangulation. If the CONSTRAINT option is enabled TRIANG will
then constrain the idealised triangulation to the paths of input data strings.
When all triangulation creation and modification is complete TRIANG writes
out the data structure to binary disk files and then exits.

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Messages:\*

.P 0;Once the GO command has been issued no more conversational
messages of the _*_*_* WARNING _*_*_* format will be issued. Any messages
will relate to serious processing problems and will normally result in abnormal
TRIANG termination. The messages relating to non-interactive processing
problems are presented at the end of this document.
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Examples:\*
.BLANK
.BR;TRIANG> ^*GO_<CR_>\*
.P 0; ELAPSED:    0 00:05:21.82  CPU: 0:00:01.40  BUFIO: 51  DIRIO: 15  FAULTS: 170 
.BR;$

.!******************************************************************************
.PAGE
.SUBTITLE HELP command
.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*HELP\*
.INDEX TRIANG> commands> HELP
.INDEX TRIANG> HELP command

.LEFT MARGIN +8
.P0; Give help on a subject
.LEFT MARGIN -8

.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*FORMAT:######HELP subject\*


.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*Command parameters:\*

.LEFT MARGIN +8
.P-8;subject
.P0; The subject on which help is required
.LEFT MARGIN -8

.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*Description:\*
.P0; The HELP command looks the rest of the line up in the DTMCREATE HELP
library. This library contains a brief summary of the operation of each
command. 

.P0; The information is looked up in the TRIANG section of the DTMCREATE help
library, LSL$HELP:DTMCREATE.HLB.


.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*Messages:\*

.P 0;Where required, warning messages are output via the VMS LBR$OUTPUT__HELP
utility.

.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*Examples:\*
.BLANK
.BR;TRIANG> ^^^*HELP MAXPOINTS_<CR_>\*

.P0;MAXPOINTS
.LEFT MARGIN +3
.P 0;The value supplied for the MAXPOINTS command determines the dimensioning
of TRIANG internal workspace and the number of imaginary points placed
around the edge of the triangulation. It is very likely that the user will
have only a very rough idea of the amount of data expected within the window 
defined using the WINDOW command. This does not matter as only a rough
estimate is needed. If ludicrously few points are estimated, say 10% of the
actual data-set, then program running times will be significantly increased
because the box data structure will not accurately reflect changes in data
density. A rough figure, say 80% accurate, is better than nothing. 

.P 0;The number of points specified using the MAXPOINTS command must reflect
the total from ^*ALL\* the files input using FILEIN commands which lie
within the triangulation window specified using the WINDOW command.


.P 0;To calculate the number of points extracted from a DTI file
determine how much of the DTI files lies within the TRIANG window,
divide this by the DTI file x or y grid step as appropriate then multiply
the resulting number of row and columns together. The DTI file size, coverage
and x and y grid steps and Z-range may be simply determined by reading the
file into MATRIX utility DTIEDIT. 

.P 0;The IMP utility IINFO can be used to determine how many points there are 
within an IFF file, in total, by feature code and by layer. It cannot,
however, reveal the number of points that lie within a subwindow of the whole 
IFF file. The Z range of the IFF file may be determined using the same run of 
IINFO if the /HEIGHT qualifier is specified.


.P 0;If there are more than the permitted number of points within 
the window then a smaller WINDOW should be specified and the data triangulated 
in two or more separate triangulations. Allow a small amount of overlap 
between adjacent windows, the sub-DTMs created by TRIGRID from these separate
triangulations will then perfectly edge match when joined together using
MATRIX utility DTITILE.
.LEFT MARGIN -3
.P 0;TRIANG> 
.!******************************************************************************
.PAGE
.SUBTITLE MAXPOINTS command
.INDEX TRIANG> commands> MAXPOINTS
.INDEX TRIANG> MAXPOINTS command
.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*MAXPOINTS\*

.LEFT MARGIN +8
.P0; Specifies estimated number of input data points for workspace allocation.
.LEFT MARGIN -8

.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*FORMAT:######MAXPOINTS estimate

.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*Command parameters:\*
.LEFT MARGIN +8
.P-8;estimate
.P0; An estimate of the number of input points.
.LEFT MARGIN -8

.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*Description:\*
.P 0;The value supplied for the MAXPOINTS command determines the dimensioning
of TRIANG internal workspace and the number of imaginary points placed
around the edge of the triangulation. It is very likely that the user will
have only a very rough idea of the amount of data expected within the window 
defined using the WINDOW command. This does not matter as only a rough
estimate is needed. If ludicrously few points are estimated, say 10% of the
actual data-set, then program running times will be significantly increased
because the box data structure will not accurately reflect changes in data
density. A rough figure, say 80% accurate, is better than nothing. 

.P 0;The number of points specified using the MAXPOINTS command must reflect
the total from ^*ALL\* the files input using FILEIN commands which lie
within the triangulation window specified using the WINDOW command.


.P 0;To calculate the number of points extracted from a DTI file
determine how much of the DTI files lies within the TRIANG window,
divide this by the DTI file x or y grid step as appropriate then multiply
the resulting number of row and columns together. The DTI file size, coverage
and x and y grid steps and Z-range may be simply determined by reading the
file into MATRIX utility DTIEDIT. 

.P 0;The IMP utility IINFO can be used to determine how many points there are 
within an IFF file, in total, by feature code and by layer. It cannot,
however, reveal the number of points that lie within a subwindow of the whole 
IFF file. The Z range of the IFF file may be determined using the same run of 
IINFO if the /HEIGHT qualifier is specified.


.P 0;If there are more than the permitted number of points within 
the window then a smaller WINDOW should be specified and the data triangulated 
in two or more separate triangulations. Allow a small amount of overlap 
between adjacent windows, the sub-DTMs created by TRIGRID from these separate
triangulations will then perfectly edge match when joined together using
MATRIX utility DTITILE.
.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*Messages:\*

.P0; The following warning messages are specific to the MAXPOINTS command:

.P 0;_*_*_*_ WARNING_ _*_*_*_ You can't change MAXPOINTS now as workspace allocation has begun
.BR;_*_*_*_ WARNING_ _*_*_*_ You must specify an integer argument to the MAXPOINTS command
.BR;_*_*_*_ WARNING_ _*_*_*_ Too many points. (Max. possible number without redimensioning = 'integer')
.BR;_*_*_*_ WARNING_ _*_*_*_ MAXPOINTS has not been set
.BR;_*_*_*_ WARNING_ _*_*_*_ Overrun of neighbour stack space may occur


.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*Examples:\*
.BLANK
.BR;TRIANG> ^^^*MAXPOINTS 75000_<CR_>\*
.BR;TRIANG> ^^^*SHOW MAXPOINTS_<CR_>\*
.LITERAL
Estimated number of incoming points = 75000
(Max possible number without redimensioning = 99730)
.END LITERAL
.BR;TRIANG> 

.!******************************************************************************
.PAGE
.SUBTITLE PAUSE command
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*PAUSE\*
.INDEX TRIANG> commands> PAUSE
.INDEX TRIANG> PAUSE command

.LEFT MARGIN +8
.P0; Pauses TRIANG execution.
.LEFT MARGIN -8

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*FORMAT:######PAUSE \*


.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Command parameters:\*_ None.


.P0
^*--------------------------------------------------------------------------------\*
.BR;^*DESCRIPTION:\*
.P0; Pauses TRIANG execution and issues a prompt for a carriage return to
continue execution. This command is designed for use in software demonstration
situations.


.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Messages:\*_ None.


.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Examples:\*
.BLANK
.BR;TRIANG> ^*PAUSE_<CR_>\*
.BLANK
.BLANK
.BR;Press <RETURN> to continue^*_<CR_>\*
.BR;TRIANG> 






.!******************************************************************************
.PAGE
.SUBTITLE QUIT command
.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*QUIT\*
.INDEX TRIANG> commands> QUIT
.INDEX TRIANG> QUIT command

.LEFT MARGIN +8
.P0; Quit from TRIANG.
.LEFT MARGIN -8

.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*FORMAT:######QUIT\*

.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*Command parameters:\*#None.

.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*Description:\*
.P0; The QUIT command causes TRIANG to exit immediately, closing all input 
files and closing and deleting all output files. 

.P0; <CTRL/Z> (pressing the Ctrl and Z keys together) may also be used
to quit from the program.

.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*Messages:\*#None.

.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*Examples:\*

.P0;TRIANG_> ^^^*QUIT_<CR_>\*
.BR;#ELAPSED: 00:05:25.84  CPU: 0:00:05.71  BUFIO: 281  DIRIO: 46  FAULTS: 263 
.BR;_$


.!******************************************************************************
.PAGE
.SUBTITLE RETURN command
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*RETURN\*
.INDEX TRIANG> commands> RETURN
.INDEX TRIANG> RETURN command

.LEFT MARGIN +8
.P0; Restores command input from an indirect file to SYS$COMMAND.
.LEFT MARGIN -8

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*FORMAT:######RETURN \*


.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Command parameters:\*_ None.

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*DESCRIPTION:\*
.P 0;Restores command input from an indirect file to SYS$COMMAND.
.P 0;A typical application is to allow the user to use an indirect command file
to set up those run time defaults which are constant within a flowline and then
return to input from the terminal (or batch stream) for the run specific
commands. To do this RETURN must be the last command in the indirect command
file. 

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Messages:\*

.P 0;The following messages are specific to the RETURN command:
.P 0;RETURN command detected - returning to terminal input
.BR;RETURN command ignored - command input is already from terminal

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Examples:\*
.BLANK
.BR;TRIANG> ^*@FLOW2_<CR_>\*
.BR;TRIANG> ENABLE DIAGNOSTICS
.BR;TRIANG> FRT FLOW2
.BR;FRT file LSL$FRT:FLOW2.FRT;8 opened for read
.BR;TRIANG> ASSIGN CLIFF__FC OUTCROPS,7,COAST
.BR;TRIANG> RETURN
.BR;TRIANG>
.FILL

.!******************************************************************************
.PAGE
.SUBTITLE  SELECT ALL
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*SELECT ALL\*
.INDEX TRIANG Commands> SELECT ALL
.INDEX TRIANG> SELECT ALL command

.LM +8
.p 0; Resets all feature selections made with the SELECT and DESELECT commands.
.LM -8

.P0
^*--------------------------------------------------------------------------------
.P 0;^*FORMAT:#######SELECT ALL\*
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Command parameters:\* _None
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*DESCRIPTION:\*

.p0;This command resets all feature input selections. If features
are subsequently selected using the other SELECT commands then all features 
are first implicitly deselected. 

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Messages:\*
.BLANK
.br;The following message is specific to the SELECT command.
.BLANK
.br;_*_*_* ERROR _*_*_* Specifying command SELECT
.BR;Command qualifiers are ALL, FC or LAYER
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Examples:\*
             
.P0;TRIANG>^*SELECT ALL <CR>\*
.lm +10
.bl
.br; At this point all features are selected.
.bl
.lm -10
.br;TRIANG>^*SELECT FC 7:10,56:78\*
.lm +10
.bl
.br; Here only features with the specified feature codes are selected
.bl
.lm -10
.br;TRIANG>^*SELECT FC 11:20\*
.bl
.lm +10
.br; At this point the specified feature codes are added to the currently
selected features code, i.e. features with FC 7-20 and 56-78 are now selected.
.lm -10
.br;TRIANG>

.!******************************************************************************
.PAGE
.SUBTITLE SELECT FC command
.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*SELECT FC\*
.INDEX TRIANG> commands> SELECT FC
.INDEX TRIANG> commands> SELECT
.INDEX TRIANG> SELECT command

.LEFT MARGIN +8
.P0; Selects specified IFF feature codes for inclusion in the triangulation.
.LEFT MARGIN -8

.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*FORMAT:######SELECT FC feature-code[,...]\*

.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*Command parameters:\*

.LEFT MARGIN +8
.P-8;feature-code
.P0; An IFF feature code which must lie in the range 0 to 32767. Multiple
feature codes may be specified separated by commas or spaces. Ranges of feature
codes may be specified by separating the range start and stop values by a colon
e.g. SELECT FC 2:6 will result in the selection of feature
codes 2,3,4,5 and 6. 
.P 0;If an FRT file has been read into TRIANG any valid feature code group
names may be used as arguments to the SELECT FC command. 

.LEFT MARGIN -8

.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*DESCRIPTION:\*
.P0; The SELECT FC command complements the DESELECT FC command. SELECT FC
enables the user to select any IFF features which have the specified feature
codes. 

.P 0;On program startup all FCs are selected for input. IFF features
which are not required for input must be specifically excluded using the
appropriate DESELECT FC and DESELECT LAYER commands. For example,
the command DESELECT FC 0:7 11:300 302:32767 will leave only features
with FCs 8,9,10, and 301 selected for input.

.P 0;The first SELECT FC command has the effect of deselecting all FCs from 
input except those explicitly specified as the arguments to the SELECT FC 
command. Subsequent SELECT FC commands have the effect of adding the
specified FCs to the list of FCs selected for input.

.P 0;All layers and FCs may be reselected for input by specifying the SELECT ALL
command.

.P 0;Note that selections made with the DESELECT and SELECT
commands will override input data assignments (e.g. ASSIGN BREAKLINE__FC)
which share the same feature code or layer numbers. Thus even though FC 9
has been assigned breakline status by an ASSIGN BREAKLINE__FC 9 command,
all features with FC 9 will be excluded from input if the user has specified a
DESELECT__FC 9 command. Use the SHOW SELECTIONS command to examine current
input selections and the SHOW ASSIGNMENTS command to examine current
assignments. 

.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*Messages:\*

.P 0;The following warning messages are specific to the SELECT
FC command: 

.NO FILL

_*_*_*_ WARNING_ _*_*_*_ You must have read an FRT file to be able to use group names
_*_*_*_ WARNING_ _*_*_*_ No groups have been defined in the FRT
_*_*_*_ WARNING_ _*_*_*_ Illegal feature code 'integer'
_*_*_*_ WARNING_ _*_*_*_ Bad group name 'group-name'
.FILL
.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*Examples:\*
.BLANK
.BR;TRIANG> ^^^*SELECT FC 6:9,WATER,126_<CR_>\*
.BR;TRIANG>

.!******************************************************************************
.PAGE
.SUBTITLE SELECT LAYER command
.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*SELECT LAYER\*
.INDEX TRIANG> commands> SELECT
.INDEX TRIANG> commands> SELECT LAYER
.INDEX TRIANG> SELECT command

.LEFT MARGIN +8
.P0; Selects specified IFF layers for inclusion in the triangulation.
.LEFT MARGIN -8

.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*FORMAT:######SELECT LAYER layer[,...]\*

.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*Command parameters:\*

.LEFT MARGIN +8
.P-8;layer
.P0; An IFF layer number must lie in the range 0 to 32767. Multiple
layers may be specified separated by commas or spaces. Ranges of layers
may be specified by separating the range start and stop values by a colon
e.g. SELECT LAYER 2:6 will result in the selection of layers
2,3,4,5 and 6. 

.LEFT MARGIN -8

.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*DESCRIPTION:\*
.P0; The SELECT LAYER command complements the DESELECT LAYER command. SELECT
LAYER enables the user to select any IFF features which are contained within
the specified layers.

.P 0;By default TRIANG will input all features within an IFF file, regardless of
the layer in which they lie.

.P 0;On program startup all layers are selected for input. IFF features
which are not required for input must be specifically excluded using the
appropriate DESELECT FC and DESELECT LAYER commands. For example,
the command DESELECT LAYER 0:7 11:300 302:32767 will leave only features
which lie within layers 8,9,10, and 301 selected for input.

.P 0;The first SELECT LAYER command has the effect of deselecting all 
layers from input except those explicitly specified as the arguments to the
SELECT LAYER command. Subsequent SELECT LAYER commands have the effect of
adding the specified layers to the list of FCs selected for input. 

.P 0;All layers and FCs may be reselected for input by specifying the SELECT
ALL command. 

.P 0;Note that selections made with the DESELECT and SELECT
commands will override input data assignments (e.g. ASSIGN BREAKLINE__FC)
which share the same feature code or layer numbers. Thus even though FC 9
has been assigned breakline status by an ASSIGN BREAKLINE__FC 9 command,
all features with FC 9 will be excluded from input if the user has specified a
DESELECT__FC 9 command. Use the SHOW SELECTIONS command to examine current
input selections and the SHOW ASSIGNMENTS command to examine current
assignments. 
.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*Messages:\*

.P 0;The following warning messages are specific to the SELECT
LAYER command:

.NO FILL

_*_*_*_ WARNING_ _*_*_*_ Too many layer arguments in one command
_*_*_*_ WARNING_ _*_*_*_ Illegal layer number 'integer'

.FILL
.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*Examples:\*
.BLANK
.BR;TRIANG> ^^^*SELECT LAYER 21:29,126_<CR_>\*
.BR;TRIANG>


.!******************************************************************************
.PAGE
.SUBTITLE SHOW command
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*SHOW\*
.INDEX TRIANG> commands> SHOW
.INDEX TRIANG> SHOW command

.LEFT MARGIN +8
.P0; Shows current status of TRIANG option and parameter settings.
.LEFT MARGIN -8

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*FORMAT:######SHOW subject\*


.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Command parameters:\*

.LEFT MARGIN +8
.P-8;subject
.P0; The subject that is to be displayed, chosen from:
.NO FILL

ASSIGNMENTS   BREAKLINES    CLIFFLINES    DATUM         ENABLE

FC            FILES         FORMAT        FRT           HEIGHTS

LAYER         MAXPOINTS     RIDGELINES    RIVERS        SELECTIONS

UNITS         WINDOW        ZLIMITS

.FILL
.LEFT MARGIN -8

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*DESCRIPTION:\*

.P0; SHOW enables the user to examine the current status of TRIANG
options and parameter settings. 


.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Messages:\*
.P 0;TRIANG issues the following message if the SHOW command is specified
without an argument:
.LITERAL

*** ERROR *** Specifying command SHOW

Available SHOW command qualifiers are:

ASSIGNMENTS      BREAKLINES      CLIFFLINES     DATUM      ENABLE    FC

FILES            FORMAT          FRT            HEIGHTS    LAYER

MAXPOINTS        RIDGELINES      RIVERS         SELECTIONS

UNITS      	 WINDOW          ZLIMITS

.END LITERAL

.P 0;This feature can be used to advantage if the user wishes to quickly
determine for which items the SHOW facility is available.

.NO FILL
.TP 10
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Examples:\*
.BLANK
.BR;_$_ ^*TRIANG_<CR_>\*
.BR;DTMCREATE module TRIANG of 13:53:27  3-FEB-89
.BR;TRIANG> ^*SHOW_<CR_>\*
.NO FILL
_*_*_* ERROR _*_*_* Specifying command SHOW

Available SHOW command qualifiers are:

ASSIGNMENTS      BREAKLINES      CLIFFLINES     DATUM      ENABLE    FC

FILES            FORMAT          FRT            HEIGHTS    LAYER

MAXPOINTS        RIDGELINES      RIVERS         SELECTIONS

UNITS      	 WINDOW          ZLIMITS

TRIANG> ^*SHOW_ BREAKLINES_<CR_>\*

BREAKLINES:
No layers assigned for breaklines
No feature codes assigned for breaklines

.BR;TRIANG>
.FILL

.!******************************************************************************
.PAGE
.SUBTITLE SHOW ASSIGNMENTS command
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*SHOW ASSIGNMENTS\*
.INDEX TRIANG> commands> SHOW ASSIGNMENTS
.INDEX TRIANG> SHOW ASSIGNMENTS command

.LEFT MARGIN +8
.P0; Shows current status of TRIANG feature code and layer assignments
made using ASSIGN and DEASSIGN commands.
.LEFT MARGIN -8

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*FORMAT:######SHOW ASSIGNMENTS\*


.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Command parameters:\* None.

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*DESCRIPTION:\*

.P0; Shows current status of TRIANG feature code and layer assignments
made using ASSIGN and DEASSIGN commands. The SHOW ASSIGNMENTS command
has the effect of issuing SHOW BREAKLINES, SHOW CLIFFLINES, SHOW RIDGELINES
and SHOW RIVERS commands sequentially.

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Messages:\*_ None.

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Examples:\*
.BLANK
$ ^*TRIANG_<CR_>\*
.NO FILL
DTMCREATE module TRIANG of 13:53:27  3-FEB-89
TRIANG> ^*SHOW ASSIGNMENTS_<CR_>\*

BREAKLINES:
No layers assigned for breaklines
No feature codes assigned for breaklines

CLIFFLINES:
No layers assigned for cliffs
No feature codes assigned for cliffs

RIDGELINES:
No layers assigned for ridgelines
No feature codes assigned for ridgelines

RIVERS:
No layers assigned for rivers
No feature codes assigned for rivers

.BR;TRIANG>
.FILL

.!******************************************************************************
.PAGE
.SUBTITLE SHOW BREAKLINES command
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*SHOW BREAKLINES\*
.INDEX TRIANG> commands> SHOW BREAKLINES
.INDEX TRIANG> SHOW BREAKLINES command

.LEFT MARGIN +8
.P0; Shows current status of TRIANG feature code and layer breakline
assignments made using ASSIGN and DEASSIGN commands.
.LEFT MARGIN -8

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*FORMAT:######SHOW BREAKLINES\*


.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Command parameters:\* None.

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*DESCRIPTION:\*

.P0; Shows current status of TRIANG feature code and layer breakline
assignments made using ASSIGN and DEASSIGN commands.

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Messages:\*_ None.

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Examples:\*
.BLANK
.NO FILL
_$ ^*TRIANG_<CR_>\*
DTMCREATE module TRIANG of 13:53:27  3-FEB-89
TRIANG> ^*SHOW BREAKLINES_<CR_>\*
No layers assigned for breaklines
No feature codes assigned for breaklines
.BR;TRIANG>
.FILL

.!******************************************************************************
.PAGE
.SUBTITLE SHOW CLIFFLINES command
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*SHOW CLIFFLINES\*
.INDEX TRIANG> commands> SHOW CLIFFLINES
.INDEX TRIANG> SHOW CLIFFLINES command

.LEFT MARGIN +8
.P0; Shows current status of TRIANG feature code and layer cliffline
assignments made using ASSIGN and DEASSIGN commands.
.LEFT MARGIN -8

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*FORMAT:######SHOW CLIFFLINES\*


.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Command parameters:\* None.

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*DESCRIPTION:\*

.P0; Shows current status of TRIANG feature code and layer cliffline
assignments made using ASSIGN and DEASSIGN commands.

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Messages:\*_ None.

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Examples:\*
.BLANK
.NO FILL
_$ ^*TRIANG_<CR_>\*
DTMCREATE module TRIANG of 13:53:27  3-FEB-89
TRIANG> ^*SHOW CLIFFLINES_<CR_>\*
No layers assigned for clifflines
No feature codes assigned for clifflines
.BR;TRIANG>
.FILL

.!******************************************************************************
.PAGE
.SUBTITLE SHOW DATUM command
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*SHOW DATUM\*
.INDEX TRIANG> commands> SHOW DATUM
.INDEX TRIANG> SHOW DATUM command

.LEFT MARGIN +8
.P0; Shows current status of of the height datum which is to be added
to all incoming IFF and DTI heights.
.LEFT MARGIN -8

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*FORMAT:######SHOW DATUM\*


.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Command parameters:\* None.

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*DESCRIPTION:\*

.P0; Shows current status of of the height datum which is to be added
to all incoming IFF and DTI heights.

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Messages:\*_ None.

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Examples:\*
.NO FILL
.BLANK
_$ ^*TRIANG_<CR_>\*
DTMCREATE module TRIANG of 13:53:27  3-FEB-89
TRIANG> ^*SHOW DATUM_<CR_>\*
Height datum 0.0 to be added to all incoming heights
.BR;TRIANG>
.FILL


.!******************************************************************************
.PAGE
.SUBTITLE SHOW ENABLE command
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*SHOW ENABLE\*
.INDEX TRIANG> commands> SHOW ENABLE
.INDEX TRIANG> SHOW ENABLE command

.LEFT MARGIN +8
.P0; Shows current status of all TRIANG processing options.
.LEFT MARGIN -8

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*FORMAT:######SHOW ENABLE\*


.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Command parameters:\* None.

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*DESCRIPTION:\*

.P0; Shows current status of all TRIANG processing options.

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Messages:\*_ None.

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Examples:\*
.BLANK
.NO FILL
_$ ^*TRIANG_<CR_>\*
DTMCREATE module TRIANG of 13:53:27  3-FEB-89
TRIANG> ^*SHOW ENABLE_<CR_>\*
.NO FILL
CONSTRAINT ................................................... On
DIAGNOSTICS .................................................. Off
DIVIDEBY ..................................................... OFF
GRAPHICS ..................................................... Off
INTEGER__HEIGHT ............................................... Off
(Incoming IFF heights expected in type 3 AC entries)
INVERSE ...................................................... Off
MULTIPLY ..................................................... Off
PME .......................................................... Off
SQUARE ....................................................... On
TOFEET ....................................................... Off
TOMETRES ..................................................... Off
.BR;TRIANG>
.FILL


.!******************************************************************************
.PAGE
.SUBTITLE SHOW FC command
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*SHOW FC\*
.INDEX TRIANG> commands> SHOW FC
.INDEX TRIANG> SHOW FC command

.LEFT MARGIN +8
.P0; Shows current status of TRIANG feature code input selections.
.LEFT MARGIN -8

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*FORMAT:######SHOW FC\*


.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Command parameters:\* None.

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*DESCRIPTION:\*

.P0; Shows current status of TRIANG feature code input selections.

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Messages:\*_ None.

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Examples:\*
.BLANK
.NO FILL
_$ ^*TRIANG_<CR_>\*
DTMCREATE module TRIANG of 13:53:27  3-FEB-89
TRIANG> ^*SHOW FC_<CR_>\*
Feature codes selected for input:
0-32767
.BR;TRIANG>
.FILL


.!******************************************************************************
.PAGE
.SUBTITLE SHOW FILES command
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*SHOW FILES\*
.INDEX TRIANG> commands> SHOW FILES
.INDEX TRIANG> SHOW FILES command

.LEFT MARGIN +8
.P0; Shows current status of TRIANG input file and output file useage.
.LEFT MARGIN -8

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*FILES:######SHOW FILES\*


.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Command parameters:\* None.

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*DESCRIPTION:\*

.P0; Shows current status of TRIANG input file FILES and output file
useage.

.P 0;SHOW FILES enables the user to determine whether he has opened the output 
files (by using the FILEOUT command) and what names have been used. It also
enables the user to keep track of which IFF and DTI files have been 
successfully read into TRIANG using FILEIN commands. Up to 20 input files
can be displayed using the SHOW FILES command.

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Messages:\*_ None.

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Examples:\*
.BLANK
.NO FILL
_$ ^*TRIANG_<CR_>\*
DTMCREATE module TRIANG of 13:53:27  3-FEB-89
TRIANG> ^*SHOW FILES_<CR_>\*
INPUT:
No input files sucessfully read yet.

OUTPUT:
Output filename not yet specified.

.BR;TRIANG>
.FILL



.!******************************************************************************
.PAGE
.SUBTITLE SHOW FORMAT command
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*SHOW FORMAT\*
.INDEX TRIANG> commands> SHOW FORMAT
.INDEX TRIANG> SHOW FORMAT command

.LEFT MARGIN +8
.P0; Shows current status of TRIANG input file format selection.
.LEFT MARGIN -8

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*FORMAT:######SHOW FORMAT\*


.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Command parameters:\* None.

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*DESCRIPTION:\*

.P0; Shows current status of TRIANG input file format selection. TRIANG
can read either IFF or DTI files, the file type is set using the FORMAT
command.

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Messages:\*_ None.

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Examples:\*
.NO FILL
.BLANK
_$ ^*TRIANG_<CR_>\*
DTMCREATE module TRIANG of 13:53:27  3-FEB-89
TRIANG> ^*SHOW FORMAT_<CR_>\*
Input expected from IFF file
.BR;TRIANG>
.FILL


.!******************************************************************************
.PAGE
.SUBTITLE SHOW FRT command
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*SHOW FRT\*
.INDEX TRIANG> commands> SHOW FRT
.INDEX TRIANG> SHOW FRT command

.LEFT MARGIN +8
.P0; Shows current status of TRIANG FRT selection.
.LEFT MARGIN -8

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*FRT:######SHOW FRT\*


.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Command parameters:\* None.

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*DESCRIPTION:\*

.P0; Shows current status of TRIANG FRT selection.

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Messages:\*_ None.

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Examples:\*
.BLANK
.NO FILL
_$ ^*TRIANG_<CR_>\*
DTMCREATE module TRIANG of 13:53:27  3-FEB-89
TRIANG> ^*SHOW FRT_<CR_>\*
No FRT file selected
.BR;TRIANG>
.FILL




.!******************************************************************************
.PAGE
.SUBTITLE SHOW HEIGHTS command
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*SHOW HEIGHTS\*
.INDEX TRIANG> commands> SHOW HEIGHTS
.INDEX TRIANG> SHOW HEIGHTS command

.LEFT MARGIN +8
.P0; Shows current status of TRIANG height modification and datum options.
.LEFT MARGIN -8

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*HEIGHTS:######SHOW HEIGHTS\*


.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Command parameters:\* None.

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*DESCRIPTION:\*

.P0; Shows current status of TRIANG height modification and datum options.

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Messages:\*_ None.

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Examples:\*
.NO FILL
.BLANK
_$ ^*TRIANG_<CR_>\*
DTMCREATE module TRIANG of 13:53:27  3-FEB-89
TRIANG> ^*SHOW HEIGHTS_<CR_>\*
Incoming heights expected in IFF type 3 AC entries
MULTIPLYBY and DIVIDEBY are disabled.
No imperial or metric conversion to be applied to incoming heights
Height datum     0.000 to be added to all incoming heights
No inversion to be applied to incoming heights
.BR;TRIANG>
.FILL



.!******************************************************************************
.PAGE
.SUBTITLE SHOW LAYER command
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*SHOW LAYER\*
.INDEX TRIANG> commands> SHOW LAYER
.INDEX TRIANG> SHOW LAYER command

.LEFT MARGIN +8
.P0; Shows current status of TRIANG layer input selections.
.LEFT MARGIN -8

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*FORMAT:######SHOW LAYER\*


.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Command parameters:\* None.

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*DESCRIPTION:\*

.P0; Shows current status of TRIANG layer input selections.

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Messages:\*_ None.

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Examples:\*
.BLANK
.NO FILL
_$ ^*TRIANG_<CR_>\*
DTMCREATE module TRIANG of 13:53:27  3-FEB-89
TRIANG> ^*SHOW LAYER_<CR_>\*
Layers selected for input:
0-32767
.BR;TRIANG>
.FILL


.!******************************************************************************
.PAGE
.SUBTITLE SHOW MAXPOINTS command
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*SHOW MAXPOINTS\*
.INDEX TRIANG> commands> SHOW MAXPOINTS
.INDEX TRIANG> SHOW MAXPOINTS command

.LEFT MARGIN +8
.P0; Shows current status of the MAXPOINTS parameter.
.LEFT MARGIN -8

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*FORMAT:######SHOW MAXPOINTS\*


.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Command parameters:\* None.

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*DESCRIPTION:\*

.P0; Shows current status of the MAXPOINTS parameter.

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Messages:\*_ None.

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Examples:\*
.BLANK
.NO FILL
_$ ^*TRIANG_<CR_>\*
DTMCREATE module TRIANG of 13:53:27  3-FEB-89
TRIANG> ^*SHOW MAXPOINTS_<CR_>\*
Estimated number of incoming points = 0 
(Max possible number without redimensioning = 79380)
.BR;TRIANG>
.FILL




.!******************************************************************************
.PAGE
.SUBTITLE SHOW RIDGELINES command
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*SHOW RIDGELINES\*
.INDEX TRIANG> commands> SHOW RIDGELINES
.INDEX TRIANG> SHOW RIDGELINES command

.LEFT MARGIN +8
.P0; Shows current status of TRIANG feature code and layer ridgeline
assignments made using ASSIGN and DEASSIGN commands.
.LEFT MARGIN -8

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*FORMAT:######SHOW RIDGELINES\*


.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Command parameters:\* None.

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*DESCRIPTION:\*

.P0; Shows current status of TRIANG feature code and layer ridgeline
assignments made using ASSIGN and DEASSIGN commands.

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Messages:\*_ None.

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Examples:\*
.BLANK
.NO FILL
_$ ^*TRIANG_<CR_>\*
DTMCREATE module TRIANG of 13:53:27  3-FEB-89
TRIANG> ^*SHOW RIDGELINES_<CR_>\*
No layers assigned for ridgelines
No feature codes assigned for ridgelines
.BR;TRIANG>
.FILL


.!******************************************************************************
.PAGE
.SUBTITLE SHOW RIVERS command
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*SHOW RIVERS\*
.INDEX TRIANG> commands> SHOW RIVERS
.INDEX TRIANG> SHOW RIVERS command

.LEFT MARGIN +8
.P0; Shows current status of TRIANG feature code and layer river
assignments made using ASSIGN and DEASSIGN commands.
.LEFT MARGIN -8

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*FORMAT:######SHOW RIVERS\*


.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Command parameters:\* None.

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*DESCRIPTION:\*

.P0; Shows current status of TRIANG feature code and layer river
assignments made using ASSIGN and DEASSIGN commands.

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Messages:\*_ None.

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Examples:\*
.BLANK
.NO FILL
_$ ^*TRIANG_<CR_>\*
DTMCREATE module TRIANG of 13:53:27  3-FEB-89
TRIANG> ^*SHOW RIVERS_<CR_>\*
No layers assigned for rivers
No feature codes assigned for rivers
.BR;TRIANG>
.FILL

.!******************************************************************************
.PAGE
.SUBTITLE SHOW SELECTIONS command
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*SHOW SELECTIONS\*
.INDEX TRIANG> commands> SHOW SELECTIONS
.INDEX TRIANG> SHOW SELECTIONS command

.LEFT MARGIN +8
.P0; Shows current status of TRIANG layer and feature code input selections.
.LEFT MARGIN -8

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*FORMAT:######SHOW SELECTIONS\*


.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Command parameters:\* None.

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*DESCRIPTION:\*

.P0; Shows current status of TRIANG layer and feature code input selections.
.P 0;SHOW selections has the same effect as issuing SHOW FC and SHOW LAYER
commands sequentially.
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Messages:\*_ None.

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Examples:\*
.BLANK
.NO FILL
_$ ^*TRIANG_<CR_>\*
DTMCREATE module TRIANG of 13:53:27  3-FEB-89
TRIANG> ^*SHOW SELECTIONS_<CR_>\*
Feature codes selected for input:
0-32767
Layers selected for input:
0-32767
.BR;TRIANG>
.FILL



.!******************************************************************************
.PAGE
.SUBTITLE SHOW UNITS command
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*SHOW UNITS\*
.INDEX TRIANG> commands> SHOW UNITS
.INDEX TRIANG> SHOW UNITS command

.LEFT MARGIN +8
.P0; Shows current status of TRIANG window units as set using the UNITS 
command.
.LEFT MARGIN -8

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*FORMAT:######SHOW UNITS\*


.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Command parameters:\* None.

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*DESCRIPTION:\*

.P0; Shows current status of TRIANG window units as set using the UNITS 
command.
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Messages:\*_ None.

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Examples:\*
.BLANK
.NO FILL
_$ ^*TRIANG_<CR_>\*
DTMCREATE module TRIANG of 13:53:27  3-FEB-89
TRIANG> ^*SHOW UNITS_<CR_>\*
Window to be specified in metres
.BR;TRIANG>
.FILL



.!******************************************************************************
.PAGE
.SUBTITLE SHOW WINDOW command
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*SHOW WINDOW\*
.INDEX TRIANG> commands> SHOW WINDOW
.INDEX TRIANG> SHOW WINDOW command

.LEFT MARGIN +8
.P0; Shows current triangulation window values.
.LEFT MARGIN -8

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*FORMAT:######SHOW WINDOW\*


.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Command parameters:\* None.

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*DESCRIPTION:\*

.P0; Shows current triangulation window values. 
.P 0;The units of the WINDOW command parameters are set using the UNITS 
command. By default metre units are assumed. If it is more convenient
to specify the window in latitude and longitude the sexagesimal lat
long values may be supplied after specifying a UNITS LATLONG command.
This assumes that the data read in from the DTI and IFF files are in units of 
tenths second of arc. A similar assumption is made for UNITS SECONDS.

.P 0;The SHOW WINDOW command displays the window values in the
units currently selected by the UNITS command. No projection transformation
is performed, so the unwise user could easily specify that the window
be shown as latitude longitude despite the fact that his data are in
metres!
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Messages:\*_ None.

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Examples:\*
.NO FILL
.BLANK
_$ ^*TRIANG_<CR_>\*
DTMCREATE module TRIANG of 13:53:27  3-FEB-89
TRIANG> ^*SHOW WINDOW_<CR_>\*
Window to be specified in metres
Triangulation window currently unset
.BR;TRIANG>
.FILL


.!******************************************************************************
.PAGE
.SUBTITLE SHOW ZLIMITS command
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*SHOW ZLIMITS\*
.INDEX TRIANG> commands> SHOW ZLIMITS
.INDEX TRIANG> SHOW ZLIMITS command

.LEFT MARGIN +8
.P0; Shows current status of the ZLIMITS parameters.
.LEFT MARGIN -8

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*FORMAT:######SHOW ZLIMITS\*


.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Command parameters:\* None.

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*DESCRIPTION:\*

.P0; Shows current status of the ZLIMITS parameters.

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Messages:\*_ None.

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Examples:\*
.NO FILL
.BLANK
_$ ^*TRIANG_<CR_>\*
DTMCREATE module TRIANG of 13:53:27  3-FEB-89
TRIANG> ^*SHOW ZLIMITS_<CR_>\*
Z-limits currently undefined
.BR;TRIANG>
.FILL

.!******************************************************************************
.PAGE
.SUBTITLE SPAWN command
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*SPAWN\*
.INDEX TRIANG> commands> SPAWN
.INDEX TRIANG> SPAWN command

.LEFT MARGIN +8
.P0; The SPAWN command enables you to create a subprocess while within TRIANG.
.LEFT MARGIN -8

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*FORMAT:######SPAWN command-line\*


.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Command parameters:\*

.LEFT MARGIN +8
.P-8;command-line
.P0; Specifies a DCL command string to be executed as if typed in response to
a '$' prompt. When the command completes, the subprocess terminates and control
is returned to TRIANG. The command string cannot exceed 80 characters. 
.LEFT MARGIN -8

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*DESCRIPTION:\*
.P0; The SPAWN command enables you to create a subprocess while within TRIANG.
When the subprocess terminates control is returned to TRIANG.
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Messages:\*

.P 0;The following warning messages are specific to the SPAWN command:
.P 0;_*_*_*_ WARNING_ _*_*_*_ SPAWN requires a valid DCL command line
.BR; _*_*_*_ ERROR_ _*_*_* Unable to spawn command, returning to TRIANG

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Examples:\*
.BLANK
.BR;TRIANG> ^*SPAWN DIRECTORY _*_.DTA;_*_<CR_>\*

.NO FILL

Directory DUA3:[DTMCREATE.ACCEPTANCE__TESTS]

TEST1_.DTA;1              8/8       18-AUG-1987 07:56  [LSL,TIM]
TEST2_.DTA;2              7/8       18-AUG-1987 17:17  [LSL,TIM]
TEST2_.DTA;1              7/8       18-AUG-1987 17:07  [LSL,TIM]

Total of 3 files, 22/24 blocks.

.FILL
.BR;TRIANG> 

.!******************************************************************************
.PAGE
.SUBTITLE UNITS command
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*UNITS\*
.INDEX TRIANG> commands> UNITS

.INDEX TRIANG> UNITS command

.LEFT MARGIN +8
.P 0;Specifies the units of measurement that will be used when defining 
the triangulation window using the WINDOW command.

.P 0;The command also controls the units of measurement which will be used
when displaying DTI file header details.
.LEFT MARGIN -8

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*FORMAT:                UNITS units\*


.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Command parameters:\*

.LEFT MARGIN +8
.P-8;units
.P 0;A keyword defining the measurement units, chosen from: 
.LITERAL

	METRES	   Metres on the ground
	LATLONG	   Latitude and Longitude 
		   (in degrees, minutes and seconds)
	SECONDS    Seconds of arc
	PROJECTION Projection units
.END LITERAL
.LEFT MARGIN -8

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*DESCRIPTION:\*

.P 0;The UNITS command enables the user to specify in what units of measurement
he wishes to define the triangulation window using the WINDOW
command, or in what units of measurement details from the header of the DTI
file are displayed.

.P 0;By default metre units are assumed.

.BR;The UNITS command should be given before specifying the triangulation 
window if the user wishes to specify the window in non-metre units.

.P 0;If UNITS SECONDS or UNITS LATLONG are used it is assumed that 
the data read in using FILEIN commands are in units of tenth seconds
of arc.

.P 0;UNITS METRES (the default) or UNITS PROJECTION assume that
the the data read in using FILEIN commands are in metres or projection units.
In a future release of DTMCREATE coordinate consistency checks between input 
files will be implemented.

.P 0;Currently the projection information for the first input file read
with a FILEIN command is copied to the .NOD and .DTA output files for
subsequent use in setting up the header of the LSLA type DTI file created in 
TRIGRID.
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Messages:\*
.P 0;The following error messages are specific to the UNITS command:
.NO FILL

_*_*_* ERROR _*_*_* Specifying command UNITS
Command qualifiers are METRES,PROJECTION,SECONDS or LATLONG

.TP 8
.FILL;.P 0
^*--------------------------------------------------------------------------------\*
.BR;^*Examples:\*
.BLANK
.BR;TRIANG> ^*UNITS LATLONG_<CR_>\*
.BR;TRIANG> ^*WINDOW 52 00 00N 08 30 00 E 52 30 00 N 09 00 00 E_<CR_>\*
.BR;TRIANG> 

.!******************************************************************************
.PAGE
.SUBTITLE WAIT command
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*WAIT\*
.INDEX TRIANG> commands> WAIT
.INDEX TRIANG> WAIT command

.LEFT MARGIN +8
.P0; Suspend processing for the specified number of seconds.
.LEFT MARGIN -8

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*FORMAT:######WAIT seconds\*


.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Command parameters:\*

.LEFT MARGIN +8
.P-8;seconds
.P0; The number (floating point) of seconds for which TRIANG processing is
to be suspended.
.LEFT MARGIN -8

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*DESCRIPTION:\*
.P0; The WAIT command causes processing to be suspended for a specified
number of seconds. It is designed for use in software demonstration 
situations and is of no value in a production flowline.

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Messages:\*

.P 0;The following warning message is specific to the WAIT command:
.P 0;_*_*_*_ WARNING_ _*_*_*_ You must specify the number of seconds to wait

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Examples:\*
.BLANK
.BR;TRIANG> ^*WAIT 4.0_<CR_>\*
.BR;TRIANG>

.!******************************************************************************
.PAGE
.SUBTITLE WINDOW command
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*WINDOW\*
.INDEX TRIANG> commands> WINDOW
.INDEX TRIANG> WINDOW command

.LEFT MARGIN +8
.P0;Specifies the limits of the data area to be triangulated.
.LEFT MARGIN -8

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*FORMAT:######WINDOW xmin ymin xmax ymax\*


.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Command parameters:\*

.LEFT MARGIN +8
.P-8;xmin ymin
.P0;The coordinates of the bottom left hand corner of the defining rectangle,
(including any IFF origin offset values).
.BLANK
.P-8;xmax ymax
.P0;The coordinates of the top right hand corner of the defining rectangle,
(including any IFF origin offset values).
.LEFT MARGIN -8

.P 0;The units of the WINDOW command parameters are set using the UNITS 
command. By default metre units are assumed. If it is more convenient
to specify the window in latitude and longitude the sexagesimal lat
long values may be supplied after specifying a UNITS LATLONG command.
This assumes that the data read in from the DTI and IFF files are in units of 
tenths second of arc. A similar assumption is made for UNITS SECONDS.

.P 0;Remember that the WINDOW parameters must be specified in the order
SW latitude longitude, NE latitude longitude if using latlong units,
(i.e. x and y specification is reversed).
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*DESCRIPTION:\*
.P0; The command is used to define rectangular limits to the area of 
data to be included within the triangulation. The limits must be specified
in the order bottom left hand (or south west) corner then top right hand 
(or north east) corner.

.P 0;WINDOW command parameters must be expressed in absolute coordinate space
(i.e. including the origin offset), not local map coordinate space (which
excludes the origin offset). Only by doing this will the correct data clipping
limits be applied to IFF and DTI data coming from different source files. 

.P 0;The WINDOW command can be used to clip data from input IFF or DTI files.

.P 0;The WINDOW command is obligatory.

.P 0;The rectangular limits set by the WINDOW command cannot be reset once a
FILEIN command has been issued as the WINDOW command arguments are used to
determine scaling between DTMCREATE internal workspace coordinates and 
map units.
.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Messages:\*

.P 0;The following warning messages are specific to the WINDOW command:
.BLANK
.BR;_*_*_*_ WARNING_ _*_*_*_*_ Unable to read WINDOW arguments
.BR;_*_*_*_ WINDOW_ _*_*_*_*_ is still unset, please respecify the WINDOW command
.BR;_*_*_*_ ERROR_ _*_*_*_*_ window values define a zero width window
.BR;_*_*_*_ ERROR_ _*_*_*_*_ window values define a zero height window

.P0
^*--------------------------------------------------------------------------------\*
.BR;^*Examples:\*
.BLANK
.BR;TRIANG> ^*WINDOW 0.0 0.0 120.0 120.0_<CR_>\*
.BR;TRIANG>


.!******************************************************************************
.PAGE
.SUBTITLE ZLIMITS command
.INDEX TRIANG> commands> ZLIMITS
.INDEX TRIANG> ZLIMITS command
.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*ZLIMITS\*

.LEFT MARGIN +8
.P0; Specifies an estimate of the minimum and maximum Z values in the input
data files 
.LEFT MARGIN -8

.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*FORMAT:######ZLIMITS  real1 real2
.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*COMMAND PARAMETERS:\*
.LEFT MARGIN +8
.P-8;real1
.P0; The minimum Z value in the input data
.P-8;real2
.P0; The maximum Z value in the input data
.LEFT MARGIN -8

.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*Description:\*
.P 0;All data is scaled by TRIANG to an internal common form. Until all the
required IFF and DTI files have been read in the full range of the Z-variable
is unknown. The ZLIMITS command allows the user to specify the Z-variable
range before any IFF files are read. The values that the user supplies are
used to set up the Z-scaling. The ZLIMITS command requires only a rough
indication of the expected minimum and maximum Z values. It is important to
remember though, that the Z range specified should represent not only that of
the first data set but also of any subsequent IFF files. The Z range should
also reflect any later grid that may be interpolated allowing for any expected
highs or lows outside the possible data range. 

.P 0;^^^*IMPORTANT\* If one of the height modification options is enabled
using ENABLE MULTIPLYBY, ENABLE TOFEET etc_., you must give the ZLIMITS in
the target measurement system or height range (ie feet for the TOFEET
command). Failure to do this may result in flattening of all model relief! 


.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*Messages:\*

.P0; The following warning messages are specific to the ZLIMITS command:

.NO FILL
.BLANK
_*_*_*_ WARNING_ _*_*_*_ You must specify minimum and maximum Z value arguments
                  For example ZLIMITS 80.0 3000.0

_*_*_*_ WARNING_ _*_*_*_ You cannot reset the ZLIMITS once a file has been read in

.FILL
.P0
^^^*--------------------------------------------------------------------------------\*
.BR;^^^*Examples:\*
.BLANK
.BR;TRIANG> ^^^*SHOW ZLIMITS_<CR_>\*
.BR;Z-limits currently undefined
.BR;TRIANG> ^^^*ZLIMITS 0 850_<CR_>\*
.BR;TRIANG> ^^^*SHOW ZLIMITS_<CR_>\*
.BR;Zmin=   0.000 zmax=  850.000
.BR;TRIANG>

.PAGE
^^^*--------------------------------------------------------------------------------\*
.HL 1 ^^^*EXAMPLES\*


.NO FILL
.BLANK 2
$ TRIANG_<CR_>\*
DTMCREATE module TRIANG of 14:17:49 24-AUG-87
TRIANG> ^*! set expected number of data points for internal scaling_<CR_>\*
TRIANG> ^*! purposes_<CR_>\*
TRIANG> ^*MAXPOINTS 4000_<CR_>*
TRIANG> ^*! set Z-limits for internal scaling purposes_<CR_>\*
TRIANG> ^*ZLIMITS 90.0 560.0_<CR_>\*
TRIANG> ^*! define area that is to be triangulated_<CR_>\*
TRIANG> ^*WINDOW 0.0 0.0 100.0 100.0
TRIANG> ^*! give the name to be used for the output .NOD and .DTA files_<CR_>\*
TRIANG> ^*FILEOUT TESTPIECE_<CR_>\*
.BREAK;_.DTA file SYS$DISK:[]TESTPIECE.DTA;0 opened for write
.BREAK;_.NOD file SYS$DISK:[]TESTPIECE.NOD;0 opened for write
TRIANG> ^*ENABLE DIAGNOSTICS	! to show what is going on_<CR_>\*
TRIANG> ^*SHOW ENABLE_<CR_>\*
CONSTRAINT ................................................... On
DIAGNOSTICS .................................................. On
DIVIDEBY ..................................................... OFF
GRAPHICS ..................................................... Off
INTEGER__HEIGHT ............................................... Off
(Incoming IFF heights expected in type 3 AC entries)
INVERSE ...................................................... Off
MULTIPLY ..................................................... Off
PME .......................................................... Off
SQUARE ....................................................... On
TOFEET ....................................................... Off
TOMETRES ..................................................... Off
TRIANG> ^*SHOW SELECTIONS_<CR_>\*
Feature codes selected for input:
0-32767
Layers selected for input:
0-32767
TRIANG> ^*! specify the feature codes of features that are to be read in as_<CR_>\*
TRIANG> ^*! 1) breaklines_<CR_>\*
TRIANG> ^*ASSIGN BREAKLINE__FC 77:92_<CR_>\*
TRIANG> ^*! 2) ridgelines_<CR_>\*
TRIANG> ^*ASSIGN RIDGE__FC 12_<CR_>\*
TRIANG> ^*! 3) rivers_<CR_>\*
TRIANG> ^*ASSIGN RIVER__FC 18:21,35_<CR_>\*
TRIANG> ^*! we have some unwanted road data in layer 16 which we will exclude_<CR_>\*
TRIANG> ^*! from the triangulation:_<CR_>\*
TRIANG> ^*DESELECT LAYER 16_<CR_>\*
TRIANG> ^*SHOW ASSIGNMENTS_<CR_>\*

BREAKLINES:
No layers assigned for breaklines
Feature codes assigned for breaklines:
77-92

CLIFFLINES:
No layers assigned for cliffs
No feature codes assigned for cliffs

RIDGELINES:
No layers assigned for ridgelines
Feature codes assigned for ridgelines:
12

RIVERS:
No layers assigned for rivers
Feature codes assigned for rivers:
18-21,35

TRIANG> ^*SHOW SELECTIONS_<CR_>\*

LAYERS:
Layers assigned for input:
16
FCs:
All feature codes selected for input
TRIANG> ^*! get the data from the IFF file_<CR_>\*
TRIANG> ^*FILEIN TESTDATA5_<CR_>\*
IFF file LSL$IF:TESTDATA5.IFF;0 opened for read


+----------------------------------------------------------------+
|                                                                |
|		Starting pass through IFF file                   |
|                                                                |
+----------------------------------------------------------------+


52 points retained out of 240 in feature with FSN 1 (1)
52 points retained out of 198 in feature with FSN 2 (2)
50 points retained out of 188 in feature with FSN 3 (3)
41 points retained out of 178 in feature with FSN 4 (4)
0 points retained out of 167 in feature with FSN 5 (5)
0 points retained out of 17 in feature with FSN 22 (22)
0 points retained out of 19 in feature with FSN 25 (25)
0 points retained out of 42 in feature with FSN 26 (26)
9 points retained out of 11 in feature with FSN 27 (27)
16 points retained out of 19 in feature with FSN 28 (28)
22 points retained out of 205 in feature with FSN 29 (29)
53 points retained out of 238 in feature with FSN 30 (30)
35 points retained out of 170 in feature with FSN 31 (31)
28 points retained out of 173 in feature with FSN 32 (32)
0 points retained out of 168 in feature with FSN 33 (33)
0 points retained out of 26 in feature with FSN 34 (34)
0 points retained out of 51 in feature with FSN 47 (47)
0 points retained out of 23 in feature with FSN 48 (48)
0 points retained out of 70 in feature with FSN 49 (49)
0 points retained out of 57 in feature with FSN 50 (50)
51 points retained out of 193 in feature with FSN 66 (66)
32 points retained out of 172 in feature with FSN 67 (67)
44 points retained out of 183 in feature with FSN 68 (68)
45 points retained out of 179 in feature with FSN 69 (69)
0 points retained out of 8 in feature with FSN 70 (70)
0 points retained out of 2 in feature with FSN 71 (71)
0 points retained out of 96 in feature with FSN 72 (72)
0 points retained out of 4 in feature with FSN 73 (73)
50 points retained out of 214 in feature with FSN 74 (74)
0 points retained out of 307 in feature with FSN 75 (75)
54 points retained out of 203 in feature with FSN 76 (76)
0 points retained out of 65 in feature with FSN 77 (77)
0 points retained out of 39 in feature with FSN 78 (78)
0 points retained out of 61 in feature with FSN 79 (79)
0 points retained out of 52 in feature with FSN 80 (80)
0 points retained out of 10 in feature with FSN 81 (81)
0 points retained out of 152 in feature with FSN 82 (82)
0 points retained out of 11 in feature with FSN 83 (83)
0 points retained out of 13 in feature with FSN 84 (84)
0 points retained out of 230 in feature with FSN 85 (85)
0 points retained out of 107 in feature with FSN 86 (86)
0 points retained out of 11 in feature with FSN 87 (87)
0 points retained out of 48 in feature with FSN 88 (88)
0 points retained out of 153 in feature with FSN 89 (89)
0 points retained out of 103 in feature with FSN 103 (103)
44 points retained out of 390 in feature with FSN 104 (104)
50 points retained out of 269 in feature with FSN 105 (105)
43 points retained out of 219 in feature with FSN 106 (106)
0 points retained out of 104 in feature with FSN 107 (107)
310 points retained out of 337 in feature with FSN 130 (130)
0 points retained out of 124 in feature with FSN 131 (131)
0 points retained out of 37 in feature with FSN 136 (136)
0 points retained out of 60 in feature with FSN 137 (137)
0 points retained out of 1 in feature with FSN 161 (161)
0 points retained out of 1 in feature with FSN 162 (162)
0 points retained out of 1 in feature with FSN 163 (163)
0 points retained out of 1 in feature with FSN 164 (164)
_*_*_* WARNING _*_*_* Feature with FSN 9998 (165) has no type 3 AC - feature ignored
_*_*_* WARNING _*_*_* Feature with FSN 9997 (166) has no type 3 AC - feature ignored
_*_*_* WARNING _*_*_* Feature with FSN 9999 (167) has no type 3 AC - feature ignored
_*_*_* WARNING _*_*_* Feature with FSN 9996 (168) has no type 3 AC - feature ignored
There are now 771 points in the DTM area
TRIANG> ^*! It is known that the four features which did not have type 3 ACs_<CR_>\*
TRIANG> ^*! were in fact some supplementary registration marks which should_<CR_>\*
TRIANG> ^*! have been deselected from input. As it is, their lack of height_<CR_>\*
TRIANG> ^*! tagging has resulted in TRIANG omitting them anyway._<CR_>\*
TRIANG> ^*! As we have no further files to read in we can triangulate the data_<CR_>\*
TRIANG> ^*GO_<CR_>\*

+----------------------------------------------------------------+
|                                                                |
|                 Generating Delaunay triangulation              |
|                                                                |
+----------------------------------------------------------------+


Triangulation complete for 1205 points, of which 434 are imaginary

+----------------------------------------------------------------+
|                                                                |
|   Starting triangulation constraint - initialising structure   |
|                                                                |
+----------------------------------------------------------------+



+----------------------------------------------------------------+
|                                                                |
|           Setting up random access node/neighbour list         |
|                                                                |
+----------------------------------------------------------------+



+----------------------------------------------------------------+
|                                                                |
|		        Patching breaklines                      |
|                                                                |
+----------------------------------------------------------------+



+----------------------------------------------------------------+
|                                                                |
|		        Patching contours                        |
|                                                                |
+----------------------------------------------------------------+



+----------------------------------------------------------------+
|                                                                |
|		   Restructuring data order                      |
|                                                                |
+----------------------------------------------------------------+



+----------------------------------------------------------------+
|                                                                |
|		        String reassembly                        |
|                                                                |
+----------------------------------------------------------------+



+----------------------------------------------------------------+
|                                                                |
|                  Writing to .NOD and .DTA files                |
|                                                                |
+----------------------------------------------------------------+


There are 1211 points in the constrained triangulation
ELAPSED:    0 00:14:22.40  CPU: 0:00:40.47  BUFIO: 468  DIRIO: 317  FAULTS: 8815 
.FILL
.LEFT MARGIN +10
.P 0;In this example TRIANG has been used to create a constrained Delaunay 
triangulation of a subset of data windowed out of a single IFF input file.
For the purposes of explanation the diagnostics have been enabled, resulting 
in voluminous printout. The user has used copious comments in the command
lines to tell us what he was doing. Such comments are extremely useful when 
writing command files to drive TRIANG in a batch processing environment, as 
the comments make it much easier to work out what is going on when processing 
problems arise or the command file has to be modified months after its 
creation.

.P 0;Examination of the example printout shows that the user has set the
MAXPOINTS argument to 4000 points. This value has been derived by using
the IMP (IFF Map Processing) package module IINFO and as we are taking
a windowed subset of the data, an educated guess. The MAXPOINTS value has only 
to be around 80% accurate for perfectly adequate allocation of TRIANG internal 
workspace.


.P 0;The user has then used the ZLIMITS command to set the Z limits for the 
incoming data. Until all the required IFF data have been read the full range
of the Z-variable is unknown. The values that the user supplies are used to
set up the TRIANG internal Z-scaling. Like the MAXPOINTS command, the ZLIMITS
command requires only a rough indication of the expected minimum and maximum
values. It is important to remember, though, that the Z range specified should
represent not only that of the first data set but also of any subsequent IFF
files. The Z range should also reflect any later grid that may be interpolated
allowing for any expected highs or lows outside the possible data range. 
In this example the user has used the IMP IINFO utility with the 
/HEIGHT__RANGE qualifier set to determine the Z minima and maxima in the file.
To allow for any interpolation undershoot or overshoot, it is good practice to 
then extend the Z limits by one contour interval top and bottom.

.P 0;The user has next specified the rectangular WINDOW which defines that
portion of the data that is to be extracted from the IFF file and used for the
triangulation. From the discussion of the diagnostic printout below, it is
evident that the user has used the WINDOW command to clip out a comparatively
small part of the whole data set. 

.P 0; In this simple example, input has been taken from only one IFF file. In
more complex processing cases, where input is taken from several IFF and DTI
files, it is important to remember that the WINDOW command arguments must
reflect the data range for the desired triangulation, not just the coverage of
the input file that happens to be read first.

.P 0;Presumably for reassurance, the user has given the SHOW WINDOW command
immediately after the WINDOW command. SHOW WINDOW caused TRIANG to print out
the newly defined window bounds.

.P 0;Satisfied with the window, the user has proceeded to specify the 
generic file specification to be used for the binary output files. 
All components of the supplied file-spec are used to form the output file 
specifications but with the substitution of the extensions _.NOD and _.DTA. 
Any parts of the file-spec not supplied for the FILEOUT command are
taken from the defaults 'SYS$DISK:[]_.NOD;0' and 'SYS$DISK:[]_.DTA;0'.
This indicates that logical name LSL$DTMCREATE__WORK is not currently defined,
the missing parts of the file file-spec being taken from the user's current
default device and directory. (For details of the use of this logical name
see the FILEOUT command above).
These defaults result in the output files being created in your current default 
directory, set using the VMS SET DEFAULT or Laser-Scan SD commands.
For reassurance TRIANG issues a message as the output files are successfully 
created and opened.

.P 0;The next command issued is the SHOW ENABLE command. The printout
produced by this command will tell the user all the current option settings.
The SHOW SELECTIONS command is used to give feature code and layer
selection defaults. It is evident that at the start of a TRIANG run there are
no feature code or layer selections set. The SHOW ENABLE command can be issued
at any time to a TRIANG> prompt to display the current command settings. 

.P0; Because it is usually used in a batch processing environment, by default
TRIANG produces minimal diagnostic printout. In this example the user wishes to
receive indications of processing progress and of the effect of selections on
data input and so has enabled diagnostic printout using the ENABLE DIAGNOSTICS 
command.

.P 0;From this example it is obvious that if DIAGNOSTICS are enabled, TRIANG
can produce voluminous printout, particularly if used during the input phase
associated with FILEIN commands. It is recommended that in a batch processing 
production environment, diagnostic printout is suppressed.


.P 0;The user next supplied feature code assignments for breaklines,
ridgelines and rivers by specifying feature code arguments to ASSIGN
sub-commands. Notice the use of comments and also the use of feature
code ranges, which save a lot of typing!

.P 0;The user has supplied a comment telling us that are some road data 
present in layer 16 of the IFF file which are not wanted in the triangulation.
It is quite common for data unsuitable for use as DTM control to be mixed
up with the required heighted information. Here the user knows that all
the road data are isolated in layer 16 and has issued the DESELECT
LAYER 16 command to prevent TRIANG from reading in any data from that layer.
It would similarly have been possible to have used the DESELECT FC command
with appropriate feature code arguments to perform the same task if the road
data were more simply differentiated by feature code. 

.P 0;It is important to remember that the DESELECT LAYER and DESELECT FC
commands are very powerful and will override any assignments made on the 
same layers and feature codes. This will cause features with those assignments
to be excluded from the triangulation, even if, for example, the user has
already assigned them to breaklines. It is therefore of the utmost importance
to check feature code and layer selections and deselections most carefully to
ensure that such assignment conflicts do not arise. 

.P 0;Very sensibly the user has next issued a SHOW SELECTIONS and a SHOW
ASSIGNMENTS command so that a check for selection clashes can be made.

.P 0;Satisfied with the selections made, the user has issued a FILEIN command
to open and read data from the specified input file. As no FORMAT DTI command
has been issued, TRIANG assumes that input is from an IFF file. Those parts of
the file-spec not supplied for the FILEIN command are taken from the default
file specification 'LSL$IF:IFF.IFF;0'. The file is successfully opened and a
reassuring message output. 

.P 0;Because diagnostic printout has been enabled, TRIANG announces that it is
starting a pass through the IFF file and proceeds to issue a diagnostic 
message for every IFF feature read from the file. The message "'integer' 
points retained out of 'integer' in feature with FSN 'integer' ('integer')"
tells the user how much data is being rejected due to:
.LIST "o"
.LE ;points lying too close together,
.LE ;points within the string lying outside of the WINDOW limits.
.END LIST
.P 0;It is evident that a large number of features lie entirely outside the 
WINDOW limits as all their points are rejected.

.P 0;Near the end of input from the IFF file TRIANG has issued four warning 
messages. The features lack a type 3 (real height) AC (Ancillary Code)
and are ignored - i.e. omitted from the triangulation. The user appears to
be happy with this situation judging from the comment supplied.

.P 0;What is more disturbing is that the user has specified feature codes for
breaklines, ridgelines and rivers, but TRIANG has issued no diagnostics to
indicate that such features have been found. If diagnostic printout is
enabled, TRIANG will always issue a message each time a cliff, breakline,
ridge or river feature is read.

.P 0;The user seems to be content with this situation, however, and has 
proceeded to issue the GO command which starts the Delaunay 
triangulation process.

.P 0;A message is output to indicate the progress of the triangulation 
process at 5% intervals. As only 1081 points lie within the triangulation 
WINDOW the triangulation takes little time. When the triangulation is complete 
a message is output to indicate that there are now 1205 points in the 
triangulation area as 124 imaginary points have been generated around the 
edge of the triangulation.

.P 0;As no DISABLE CONSTRAINT command has been issued TRIANG proceeds
to constrain the Delaunay triangulation to the paths of the input IFF strings.
To do this a random access node/neighbour list has to be set up in memory, and
if the data set is very large, a random access scratch file is set up on disk.
If a big dataset is being constrained this setup may take some time and so 
messages are output at 5% intervals to indicate progress.

.P 0;Triangulation constraint is conducted first on breaklines, which must
always override other string features in the data structure for they
define lines of slope discontinuity. Next contours, ridge and river
strings are constrained. Finally the nodes are reorganised in workspace
to reflect the new string patterns, and then any string patches are
inserted into strings broken by the original Delaunay triangulation.
The progress of each of these stages is indicated at 5% intervals.

.P 0;Finally the reorganised, constrained triangulation is written to the
two binary output files opened using the FILEOUT command.

.P 0;The run has completed successfully and DCL symbol $STATUS is set
to SS$__NORMAL, normal successful completion.

.P 0;The two binary output files are ready for use by TRIDER, the slope
derivative estimator, or TRIEDIT, the triangulation editor (which could
be used to insert the missing river, ridgeline and breakline strings).

.LEFT MARGIN -10
.REQUIRE 'TRIANGMSG.RNO'
